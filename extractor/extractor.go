//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

//
// Package extractor is used for quickly extracting PDF content through a simple interface.
// Currently offers functionality for extracting textual content.
//
package extractor ;import (_db "bytes";_e "errors";_cd "fmt";_dfa "github.com/unidoc/unipdf/v3/common";_b "github.com/unidoc/unipdf/v3/contentstream";_ca "github.com/unidoc/unipdf/v3/core";_ff "github.com/unidoc/unipdf/v3/internal/license";_ge "github.com/unidoc/unipdf/v3/internal/textencoding";
_dg "github.com/unidoc/unipdf/v3/internal/transform";_ec "github.com/unidoc/unipdf/v3/model";_ea "golang.org/x/text/unicode/norm";_f "golang.org/x/xerrors";_dc "image/color";_c "io";_gc "math";_a "regexp";_cg "sort";_g "strings";_df "unicode";_ag "unicode/utf8";
);func (_gec *textLine )markWordBoundaries (){_gbfgb :=_bbccd *_gec ._gbfeg ;for _fecd ,_fag :=range _gec ._dcce [1:]{if _dfg (_fag ,_gec ._dcce [_fecd ])>=_gbfgb {_fag ._fdfaf =true ;};};};func (_fcge *textObject )moveTextSetLeading (_cda ,_cbc float64 ){_fcge ._caefc ._abe =-_cbc ;
_fcge .moveLP (_cda ,_cbc );};func (_agec *textTable )log (_bgec string ){if !_gca {return ;};_dfa .Log .Info ("~\u007e\u007e\u0020\u0025\u0073\u003a \u0025\u0064\u0020\u0078\u0020\u0025d\u0020\u0067\u0072\u0069\u0064\u003d\u0025t\u000a\u0020\u0020\u0020\u0020\u0020\u0020\u0025\u0036\u002e2\u0066",_bgec ,_agec ._cfffa ,_agec ._daac ,_agec ._efdfb ,_agec .PdfRectangle );
for _fcdb :=0;_fcdb < _agec ._daac ;_fcdb ++{for _bccg :=0;_bccg < _agec ._cfffa ;_bccg ++{_gdfdd :=_agec .get (_bccg ,_fcdb );if _gdfdd ==nil {continue ;};_cd .Printf ("%\u0034\u0064\u0020\u00252d\u003a \u0025\u0036\u002e\u0032\u0066 \u0025\u0071\u0020\u0025\u0064\u000a",_bccg ,_fcdb ,_gdfdd .PdfRectangle ,_abcg (_gdfdd .text (),50),_ag .RuneCountInString (_gdfdd .text ()));
};};};func (_efadb paraList )log (_acee string ){if !_afe {return ;};_dfa .Log .Info ("%\u0038\u0073\u003a\u0020\u0025\u0064 \u0070\u0061\u0072\u0061\u0073\u0020=\u003d\u003d\u003d\u003d\u003d\u003d\u002d-\u002d\u002d\u002d\u002d\u002d\u003d\u003d\u003d\u003d\u003d=\u003d",_acee ,len (_efadb ));
for _gbfad ,_efcb :=range _efadb {if _efcb ==nil {continue ;};_bceca :=_efcb .text ();_fbbd :="\u0020\u0020";if _efcb ._dgba !=nil {_fbbd =_cd .Sprintf ("\u005b%\u0064\u0078\u0025\u0064\u005d",_efcb ._dgba ._cfffa ,_efcb ._dgba ._daac );};_cd .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0036\u002e\u0032\u0066\u0020\u0025s\u0020\u0025\u0071\u000a",_gbfad ,_efcb .PdfRectangle ,_fbbd ,_abcg (_bceca ,50));
};};func _bfccf (_effgf ,_edefb _dg .Point ,_cbbf _dc .Color )(*ruling ,bool ){_eadc :=lineRuling {_fcfe :_effgf ,_ggaf :_edefb ,_dced :_dbda (_effgf ,_edefb ),Color :_cbbf };if _eadc ._dced ==_fafdd {return nil ,false ;};return _eadc .asRuling ();};func (_feg *textObject )moveLP (_gbc ,_eada float64 ){_feg ._agab .Concat (_dg .NewMatrix (1,0,0,1,_gbc ,_eada ));
_feg ._gcgc =_feg ._agab ;};func _dagc (_acdda *wordBag ,_ffedg float64 ,_cec ,_fcfb rulingList )[]*wordBag {var _ggab []*wordBag ;for _ ,_efcd :=range _acdda .depthIndexes (){_aacc :=false ;for !_acdda .empty (_efcd ){_fcfd :=_acdda .firstReadingIndex (_efcd );
_ebfb :=_acdda .firstWord (_fcfd );_baag :=_dcff (_ebfb ,_ffedg ,_cec ,_fcfb );_acdda .removeWord (_ebfb ,_fcfd );if _ebga {_dfa .Log .Info ("\u0066\u0069\u0072\u0073\u0074\u0057\u006f\u0072\u0064\u0020\u005e\u005e^\u005e\u0020\u0025\u0073",_ebfb .String ());
};for _caabc :=true ;_caabc ;_caabc =_aacc {_aacc =false ;_gggac :=_cgfef *_baag ._dca ;_bbff :=_cgca *_baag ._dca ;_cdead :=_gaff *_baag ._dca ;if _ebga {_dfa .Log .Info ("\u0070a\u0072a\u0057\u006f\u0072\u0064\u0073\u0020\u0064\u0065\u0070\u0074\u0068 \u0025\u002e\u0032\u0066 \u002d\u0020\u0025\u002e\u0032f\u0020\u006d\u0061\u0078\u0049\u006e\u0074\u0072\u0061\u0044\u0065\u0070\u0074\u0068\u0047\u0061\u0070\u003d\u0025\u002e\u0032\u0066\u0020\u006d\u0061\u0078\u0049\u006e\u0074\u0072\u0061R\u0065\u0061\u0064\u0069\u006e\u0067\u0047\u0061p\u003d\u0025\u002e\u0032\u0066",_baag .minDepth (),_baag .maxDepth (),_cdead ,_bbff );
};if _acdda .scanBand ("\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c",_baag ,_ffdab (_edf ,0),_baag .minDepth ()-_cdead ,_baag .maxDepth ()+_cdead ,_ebae ,false ,false )> 0{_aacc =true ;};if _acdda .scanBand ("\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c",_baag ,_ffdab (_edf ,_bbff ),_baag .minDepth (),_baag .maxDepth (),_ecdg ,false ,false )> 0{_aacc =true ;
};if _aacc {continue ;};_eag :=_acdda .scanBand ("",_baag ,_ffdab (_fgga ,_gggac ),_baag .minDepth (),_baag .maxDepth (),_aaa ,true ,false );if _eag > 0{_aeba :=(_baag .maxDepth ()-_baag .minDepth ())/_baag ._dca ;if (_eag > 1&&float64 (_eag )> 0.3*_aeba )||_eag <=10{if _acdda .scanBand ("\u006f\u0074\u0068e\u0072",_baag ,_ffdab (_fgga ,_gggac ),_baag .minDepth (),_baag .maxDepth (),_aaa ,false ,true )> 0{_aacc =true ;
};};};};_ggab =append (_ggab ,_baag );};};return _ggab ;};func _gagc (_cffc []compositeCell )[]float64 {var _dedbc []*textLine ;_cdeabc :=0;for _ ,_abfb :=range _cffc {_cdeabc +=len (_abfb .paraList );_dedbc =append (_dedbc ,_abfb .lines ()...);};_cg .Slice (_dedbc ,func (_dgece ,_gged int )bool {_ecgc ,_gabg :=_dedbc [_dgece ],_dedbc [_gged ];
_eddb ,_ddeea :=_ecgc ._fgcd ,_gabg ._fgcd ;if !_cdfce (_eddb -_ddeea ){return _eddb < _ddeea ;};return _ecgc .Llx < _gabg .Llx ;});if _gca {_cd .Printf ("\u0020\u0020\u0020 r\u006f\u0077\u0042\u006f\u0072\u0064\u0065\u0072\u0073:\u0020%\u0064 \u0070a\u0072\u0061\u0073\u0020\u0025\u0064\u0020\u006c\u0069\u006e\u0065\u0073\u000a",_cdeabc ,len (_dedbc ));
for _deab ,_aabd :=range _dedbc {_cd .Printf ("\u0025\u0038\u0064\u003a\u0020\u0025\u0073\u000a",_deab ,_aabd );};};var _aggdg []float64 ;_aaca :=_dedbc [0];var _ffbfc [][]*textLine ;_dgecef :=[]*textLine {_aaca };for _gfafbc ,_gcaac :=range _dedbc [1:]{if _gcaac .Ury < _aaca .Lly {_gcbb :=0.5*(_gcaac .Ury +_aaca .Lly );
if _gca {_cd .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0036\u002e\u0032\u0066\u0020\u003c\u0020\u0025\u0036.\u0032f\u0020\u0062\u006f\u0072\u0064\u0065\u0072\u003d\u0025\u0036\u002e\u0032\u0066\u000a"+"\u0009\u0020\u0071\u003d\u0025\u0073\u000a\u0009\u0020p\u003d\u0025\u0073\u000a",_gfafbc ,_gcaac .Ury ,_aaca .Lly ,_gcbb ,_aaca ,_gcaac );
};_aggdg =append (_aggdg ,_gcbb );_ffbfc =append (_ffbfc ,_dgecef );_dgecef =nil ;};_dgecef =append (_dgecef ,_gcaac );if _gcaac .Lly < _aaca .Lly {_aaca =_gcaac ;};};if len (_dgecef )> 0{_ffbfc =append (_ffbfc ,_dgecef );};if _gca {_cd .Printf (" \u0020\u0020\u0020\u0020\u0020\u0020 \u0072\u006f\u0077\u0043\u006f\u0072\u0072\u0069\u0064o\u0072\u0073\u003d%\u0036.\u0032\u0066\u000a",_aggdg );
};if _gca {_dfa .Log .Info ("\u0072\u006f\u0077\u003d\u0025\u0064",len (_cffc ));for _gbfdb ,_fbfb :=range _cffc {_cd .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_gbfdb ,_fbfb );};_dfa .Log .Info ("\u0067r\u006f\u0075\u0070\u0073\u003d\u0025d",len (_ffbfc ));
for _fdfea ,_bgae :=range _ffbfc {_cd .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0064\u000a",_fdfea ,len (_bgae ));for _ebaf ,_gbdad :=range _bgae {_cd .Printf ("\u0025\u0038\u0064\u003a\u0020\u0025\u0073\u000a",_ebaf ,_gbdad );};};};_gfef :=true ;
for _acebc ,_egfg :=range _ffbfc {_ceeb :=true ;for _gcdaga ,_gcfdc :=range _cffc {if _gca {_cd .Printf ("\u0020\u0020\u0020\u007e\u007e\u007e\u0067\u0072\u006f\u0075\u0070\u0020\u0025\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0020\u0063\u0065\u006cl\u0020\u0025\u0064\u0020\u006ff\u0020\u0025d\u0020\u0025\u0073\u000a",_acebc ,len (_ffbfc ),_gcdaga ,len (_cffc ),_gcfdc );
};if !_gcfdc .hasLines (_egfg ){if _gca {_cd .Printf ("\u0020\u0020\u0020\u0021\u0021\u0021\u0067\u0072\u006f\u0075\u0070\u0020\u0025d\u0020\u006f\u0066\u0020\u0025\u0064 \u0063\u0065\u006c\u006c\u0020\u0025\u0064\u0020\u006f\u0066\u0020\u0025\u0064 \u004f\u0055\u0054\u000a",_acebc ,len (_ffbfc ),_gcdaga ,len (_cffc ));
};_ceeb =false ;break ;};};if !_ceeb {_gfef =false ;break ;};};if !_gfef {if _gca {_dfa .Log .Info ("\u0072\u006f\u0077\u0020\u0063o\u0072\u0072\u0069\u0064\u006f\u0072\u0073\u0020\u0064\u006f\u006e\u0027\u0074 \u0073\u0070\u0061\u006e\u0020\u0061\u006c\u006c\u0020\u0063\u0065\u006c\u006c\u0073\u0020\u0069\u006e\u0020\u0072\u006f\u0077\u002e\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
};_aggdg =nil ;};if _gca &&_aggdg !=nil {_cd .Printf ("\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u002a\u002a*\u0072\u006f\u0077\u0043\u006f\u0072\u0072i\u0064\u006f\u0072\u0073\u003d\u0025\u0036\u002e\u0032\u0066\u000a",_aggdg );};return _aggdg ;
};func (_dbbg rulingList )snapToGroupsDirection ()rulingList {_dbbg .sortStrict ();_gbgd :=make (map[*ruling ]rulingList ,len (_dbbg ));_fafc :=_dbbg [0];_bafd :=func (_efed *ruling ){_fafc =_efed ;_gbgd [_fafc ]=rulingList {_efed }};_bafd (_dbbg [0]);
for _ ,_eaefc :=range _dbbg [1:]{if _eaefc ._bedda < _fafc ._bedda -_eebb {_dfa .Log .Error ("\u0073\u006e\u0061\u0070T\u006f\u0047\u0072\u006f\u0075\u0070\u0073\u0044\u0069r\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0057\u0072\u006f\u006e\u0067\u0020\u0070\u0072\u0069\u006da\u0072\u0079\u0020\u006f\u0072d\u0065\u0072\u002e\u000a\u0009\u0076\u0030\u003d\u0025\u0073\u000a\u0009\u0020\u0076\u003d\u0025\u0073",_fafc ,_eaefc );
};if _eaefc ._bedda > _fafc ._bedda +_fgb {_bafd (_eaefc );}else {_gbgd [_fafc ]=append (_gbgd [_fafc ],_eaefc );};};_fcga :=make (map[*ruling ]float64 ,len (_gbgd ));_bfcf :=make (map[*ruling ]*ruling ,len (_dbbg ));for _gacf ,_gggdb :=range _gbgd {_fcga [_gacf ]=_gggdb .mergePrimary ();
for _ ,_acgcd :=range _gggdb {_bfcf [_acgcd ]=_gacf ;};};for _ ,_gabae :=range _dbbg {_gabae ._bedda =_fcga [_bfcf [_gabae ]];};_cffb :=make (rulingList ,0,len (_dbbg ));for _ ,_adde :=range _gbgd {_cccd :=_adde .splitSec ();for _gfcc ,_adaee :=range _cccd {_fddc :=_adaee .merge ();
if len (_cffb )> 0{_dabf :=_cffb [len (_cffb )-1];if _dabf .alignsPrimary (_fddc )&&_dabf .alignsSec (_fddc ){_dfa .Log .Error ("\u0073\u006e\u0061\u0070\u0054\u006fG\u0072\u006f\u0075\u0070\u0073\u0044\u0069\u0072\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0044\u0075\u0070\u006ci\u0063\u0061\u0074\u0065\u0020\u0069\u003d\u0025\u0064\u000a\u0009\u0077\u003d\u0025s\u000a\t\u0076\u003d\u0025\u0073",_gfcc ,_dabf ,_fddc );
continue ;};};_cffb =append (_cffb ,_fddc );};};_cffb .sortStrict ();return _cffb ;};

// Append appends `mark` to the mark array.
func (_ada *TextMarkArray )Append (mark TextMark ){_ada ._gffb =append (_ada ._gffb ,mark )};

// String returns a description of `l`.
func (_agbb *textLine )String ()string {return _cd .Sprintf ("\u0025\u002e2\u0066\u0020\u0025\u0036\u002e\u0032\u0066\u0020\u0066\u006f\u006e\u0074\u0073\u0069\u007a\u0065\u003d\u0025\u002e\u0032\u0066\u0020\"%\u0073\u0022",_agbb ._fgcd ,_agbb .PdfRectangle ,_agbb ._gbfeg ,_agbb .text ());
};type compositeCell struct{_ec .PdfRectangle ;paraList ;};

// String returns a description of `state`.
func (_dabd *textState )String ()string {_bafe :="\u005bN\u004f\u0054\u0020\u0053\u0045\u0054]";if _dabd ._bdc !=nil {_bafe =_dabd ._bdc .BaseFont ();};return _cd .Sprintf ("\u0074\u0063\u003d\u0025\u002e\u0032\u0066\u0020\u0074\u0077\u003d\u0025\u002e\u0032\u0066 \u0074f\u0073\u003d\u0025\u002e\u0032\u0066\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071",_dabd ._gce ,_dabd ._gaaa ,_dabd ._badf ,_bafe );
};func (_efdc *wordBag )removeWord (_daff *textWord ,_aaec int ){_bafc :=_efdc ._fgg [_aaec ];_bafc =_deec (_bafc ,_daff );if len (_bafc )==0{delete (_efdc ._fgg ,_aaec );}else {_efdc ._fgg [_aaec ]=_bafc ;};};

// String returns a string describing `pt`.
func (_eec PageText )String ()string {_cgb :=_cd .Sprintf ("P\u0061\u0067\u0065\u0054ex\u0074:\u0020\u0025\u0064\u0020\u0065l\u0065\u006d\u0065\u006e\u0074\u0073",len (_eec ._ecdd ));_bee :=[]string {"\u002d"+_cgb };for _ ,_cbbe :=range _eec ._ecdd {_bee =append (_bee ,_cbbe .String ());
};_bee =append (_bee ,"\u002b"+_cgb );return _g .Join (_bee ,"\u000a");};type wordBag struct{_ec .PdfRectangle ;_dca float64 ;_agee ,_befg rulingList ;_dfcc float64 ;_fgg map[int ][]*textWord ;};func (_eceg *wordBag )makeRemovals ()map[int ]map[*textWord ]struct{}{_efgf :=make (map[int ]map[*textWord ]struct{},len (_eceg ._fgg ));
for _cabgg :=range _eceg ._fgg {_efgf [_cabgg ]=make (map[*textWord ]struct{});};return _efgf ;};

// String returns a string descibing `i`.
func (_acag gridTile )String ()string {_bbfdf :=func (_dage bool ,_bddb string )string {if _dage {return _bddb ;};return "\u005f";};return _cd .Sprintf ("\u00256\u002e2\u0066\u0020\u0025\u0031\u0073%\u0031\u0073%\u0031\u0073\u0025\u0031\u0073",_acag .PdfRectangle ,_bbfdf (_acag ._edfa ,"\u004c"),_bbfdf (_acag ._agdea ,"\u0052"),_bbfdf (_acag ._cabd ,"\u0042"),_bbfdf (_acag ._deea ,"\u0054"));
};

// String returns a human readable description of `vecs`.
func (_dacd rulingList )String ()string {if len (_dacd )==0{return "\u007b \u0045\u004d\u0050\u0054\u0059\u0020}";};_eegg ,_afad :=_dacd .vertsHorzs ();_fgcb :=len (_eegg );_gaba :=len (_afad );if _fgcb ==0||_gaba ==0{return _cd .Sprintf ("\u007b%\u0064\u0020\u0078\u0020\u0025\u0064}",_fgcb ,_gaba );
};_fbcag :=_ec .PdfRectangle {Llx :_eegg [0]._bedda ,Urx :_eegg [_fgcb -1]._bedda ,Lly :_afad [_gaba -1]._bedda ,Ury :_afad [0]._bedda };return _cd .Sprintf ("\u007b\u0025d\u0020\u0078\u0020%\u0064\u003a\u0020\u0025\u0036\u002e\u0032\u0066\u007d",_fgcb ,_gaba ,_fbcag );
};func (_cfab *textTable )emptyColumn (_gacd int )bool {for _gcag :=0;_gcag < _cfab ._daac ;_gcag ++{_ecdb :=_cfab .get (_gacd ,_gcag );if _ecdb !=nil &&_ecdb .text ()!=""{return false ;};};return true ;};func (_bced *subpath )removeDuplicates (){if len (_bced ._dgab )==0{return ;
};_dgd :=[]_dg .Point {_bced ._dgab [0]};for _ ,_egfc :=range _bced ._dgab [1:]{if !_ceca (_egfc ,_dgd [len (_dgd )-1]){_dgd =append (_dgd ,_egfc );};};_bced ._dgab =_dgd ;};const _bgbd =10;func _abbf (_cacd []TextMark ,_dffcc *int ,_cdga TextMark )[]TextMark {_cdga .Offset =*_dffcc ;
_cacd =append (_cacd ,_cdga );*_dffcc +=len (_cdga .Text );return _cacd ;};func (_fbda *textTable )isExportable ()bool {if _fbda ._efdfb {return true ;};_gcec :=func (_bccfg int )bool {_aade :=_fbda .get (0,_bccfg );if _aade ==nil {return false ;};_dcedg :=_aade .text ();
_ffgda :=_ag .RuneCountInString (_dcedg );_dgfb :=_dbdd .MatchString (_dcedg );return _ffgda <=1||_dgfb ;};for _febfg :=0;_febfg < _fbda ._daac ;_febfg ++{if !_gcec (_febfg ){return true ;};};return false ;};

// TextMarkArray is a collection of TextMarks.
type TextMarkArray struct{_gffb []TextMark };func _befb (_ecbg string ,_dcfd []rulingList ){_dfa .Log .Info ("\u0024\u0024 \u0025\u0064\u0020g\u0072\u0069\u0064\u0073\u0020\u002d\u0020\u0025\u0073",len (_dcfd ),_ecbg );for _ffgaf ,_aacfb :=range _dcfd {_cd .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_ffgaf ,_aacfb .String ());
};};type stateStack []*textState ;type subpath struct{_dgab []_dg .Point ;_dbdc bool ;};func (_fadc *textPara )writeCellText (_gada _c .Writer ){for _acgd ,_eege :=range _fadc ._cecf {_afcf :=_eege .text ();_bdgef :=_fcdc &&_eege .endsInHyphen ()&&_acgd !=len (_fadc ._cecf )-1;
if _bdgef {_afcf =_gbeb (_afcf );};_gada .Write ([]byte (_afcf ));if !(_bdgef ||_acgd ==len (_fadc ._cecf )-1){_gada .Write ([]byte (_fadd (_eege ._fgcd ,_fadc ._cecf [_acgd +1]._fgcd )));};};};

// String returns a description of `v`.
func (_acfed *ruling )String ()string {if _acfed ._dgdc ==_fafdd {return "\u004e\u004f\u0054\u0020\u0052\u0055\u004c\u0049\u004e\u0047";};_afcc ,_dacab :="\u0078","\u0079";if _acfed ._dgdc ==_aefb {_afcc ,_dacab ="\u0079","\u0078";};_febe :="";if _acfed ._dedc !=0.0{_febe =_cd .Sprintf (" \u0077\u0069\u0064\u0074\u0068\u003d\u0025\u002e\u0032\u0066",_acfed ._dedc );
};return _cd .Sprintf ("\u0025\u00310\u0073\u0020\u0025\u0073\u003d\u0025\u0036\u002e\u0032\u0066\u0020\u0025\u0073\u003d\u0025\u0036\u002e\u0032\u0066\u0020\u002d\u0020\u0025\u0036\u002e\u0032\u0066\u0020\u0028\u0025\u0036\u002e\u0032\u0066\u0029\u0020\u0025\u0073\u0020\u0025\u0076\u0025\u0073",_acfed ._dgdc ,_afcc ,_acfed ._bedda ,_dacab ,_acfed ._bbca ,_acfed ._fcc ,_acfed ._fcc -_acfed ._bbca ,_acfed ._bcfff ,_acfed .Color ,_febe );
};func (_acaeg *textWord )computeText ()string {_bfbe :=make ([]string ,len (_acaeg ._afgbc ));for _fbgc ,_eafea :=range _acaeg ._afgbc {_bfbe [_fbgc ]=_eafea ._fggb ;};return _g .Join (_bfbe ,"");};func (_efcdg paraList )applyTables (_aega []*textTable )paraList {var _cddf paraList ;
for _ ,_bdcdf :=range _aega {_cddf =append (_cddf ,_bdcdf .newTablePara ());};for _ ,_cdgce :=range _efcdg {if _cdgce ._abce {continue ;};_cddf =append (_cddf ,_cdgce );};return _cddf ;};type textPara struct{_ec .PdfRectangle ;_dfgfe _ec .PdfRectangle ;
_cecf []*textLine ;_dgba *textTable ;_abce bool ;_bfeg bool ;_eead *textPara ;_caeb *textPara ;_egcgb *textPara ;_aaccd *textPara ;};func _ffbc (_ecdeb ,_baede _dg .Point )bool {_faced :=_gc .Abs (_ecdeb .X -_baede .X );_debbd :=_gc .Abs (_ecdeb .Y -_baede .Y );
return _ccadc (_debbd ,_faced );};func (_afaa *textMark )inDiacriticArea (_cfbf *textMark )bool {_bgad :=_afaa .Llx -_cfbf .Llx ;_cbef :=_afaa .Urx -_cfbf .Urx ;_ddc :=_afaa .Lly -_cfbf .Lly ;return _gc .Abs (_bgad +_cbef )< _afaa .Width ()*_dffb &&_gc .Abs (_ddc )< _afaa .Height ()*_dffb ;
};func (_eabbc rulingList )bbox ()_ec .PdfRectangle {var _eedc _ec .PdfRectangle ;if len (_eabbc )==0{_dfa .Log .Error ("r\u0075\u006c\u0069\u006e\u0067\u004ci\u0073\u0074\u002e\u0062\u0062\u006f\u0078\u003a\u0020n\u006f\u0020\u0072u\u006ci\u006e\u0067\u0073");
return _ec .PdfRectangle {};};if _eabbc [0]._dgdc ==_aefb {_eedc .Llx ,_eedc .Urx =_eabbc .secMinMax ();_eedc .Lly ,_eedc .Ury =_eabbc .primMinMax ();}else {_eedc .Llx ,_eedc .Urx =_eabbc .primMinMax ();_eedc .Lly ,_eedc .Ury =_eabbc .secMinMax ();};return _eedc ;
};type textResult struct{_efd PageText ;_aabe int ;_ggf int ;};

// Text returns the extracted page text.
func (_cebe PageText )Text ()string {return _cebe ._ccf };func _ebcb (_befeb map[int ][]float64 ){if len (_befeb )<=1{return ;};_dfgb :=_geab (_befeb );if _gca {_dfa .Log .Info ("\u0066i\u0078C\u0065\u006c\u006c\u0073\u003a \u006b\u0065y\u0073\u003d\u0025\u002b\u0076",_dfgb );
};var _fbabf ,_baff int ;for _fbabf ,_baff =range _dfgb {if _befeb [_baff ]!=nil {break ;};};for _ecab ,_fdfed :=range _dfgb [_fbabf :]{_cddd :=_befeb [_fdfed ];if _cddd ==nil {continue ;};if _gca {_cd .Printf ("\u0025\u0034\u0064\u003a\u0020\u006b\u0030\u003d\u0025\u0064\u0020\u006b1\u003d\u0025\u0064\u000a",_fbabf +_ecab ,_baff ,_fdfed );
};_bbdeg :=_befeb [_fdfed ];if _bbdeg [len (_bbdeg )-1]> _cddd [0]{_bbdeg [len (_bbdeg )-1]=_cddd [0];_befeb [_baff ]=_bbdeg ;};_baff =_fdfed ;};};func _eagfd (_fbba ,_dadd _dg .Point )rulingKind {_bdaa :=_gc .Abs (_fbba .X -_dadd .X );_fgag :=_gc .Abs (_fbba .Y -_dadd .Y );
return _afcd (_bdaa ,_fgag ,_eebf );};func (_cgdb *wordBag )allWords ()[]*textWord {var _dfeb []*textWord ;for _ ,_cgcg :=range _cgdb ._fgg {_dfeb =append (_dfeb ,_cgcg ...);};return _dfeb ;};func (_gb *imageExtractContext )extractInlineImage (_gf *_b .ContentStreamInlineImage ,_fbe _b .GraphicsState ,_bad *_ec .PdfPageResources )error {_bg ,_acd :=_gf .ToImage (_bad );
if _acd !=nil {return _acd ;};_ded ,_acd :=_gf .GetColorSpace (_bad );if _acd !=nil {return _acd ;};if _ded ==nil {_ded =_ec .NewPdfColorspaceDeviceGray ();};_afb ,_acd :=_ded .ImageToRGB (*_bg );if _acd !=nil {return _acd ;};_ebd :=ImageMark {Image :&_afb ,Width :_fbe .CTM .ScalingFactorX (),Height :_fbe .CTM .ScalingFactorY (),Angle :_fbe .CTM .Angle ()};
_ebd .X ,_ebd .Y =_fbe .CTM .Translation ();_gb ._ae =append (_gb ._ae ,_ebd );_gb ._ecb ++;return nil ;};func (_bdfc *textMark )bbox ()_ec .PdfRectangle {return _bdfc .PdfRectangle };func (_ddacb rulingList )merge ()*ruling {_bgfd :=_ddacb [0]._bedda ;
_dcdfc :=_ddacb [0]._bbca ;_cadb :=_ddacb [0]._fcc ;for _ ,_cebd :=range _ddacb [1:]{_bgfd +=_cebd ._bedda ;if _cebd ._bbca < _dcdfc {_dcdfc =_cebd ._bbca ;};if _cebd ._fcc > _cadb {_cadb =_cebd ._fcc ;};};_cgbec :=&ruling {_dgdc :_ddacb [0]._dgdc ,_bcfff :_ddacb [0]._bcfff ,Color :_ddacb [0].Color ,_bedda :_bgfd /float64 (len (_ddacb )),_bbca :_dcdfc ,_fcc :_cadb };
if _gaef {_dfa .Log .Info ("\u006de\u0072g\u0065\u003a\u0020\u0025\u0032d\u0020\u0076e\u0063\u0073\u0020\u0025\u0073",len (_ddacb ),_cgbec );for _gbfgbc ,_aecff :=range _ddacb {_cd .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_gbfgbc ,_aecff );
};};return _cgbec ;};const (_fafdd rulingKind =iota ;_aefb ;_cacg ;);

// ApplyArea processes the page text only within the specified area `bbox`.
// Each time ApplyArea is called, it updates the result set in `pt`.
// Can be called multiple times in a row with different bounding boxes.
func (_dea *PageText )ApplyArea (bbox _ec .PdfRectangle ){_gga :=make ([]*textMark ,0,len (_dea ._ecdd ));for _ ,_fcd :=range _dea ._ecdd {if _adef (_fcd .bbox (),bbox ){_gga =append (_gga ,_fcd );};};var _gbe paraList ;_cgfc :=len (_gga );for _gfab :=0;
_gfab < 360&&_cgfc > 0;_gfab +=90{_cag :=make ([]*textMark ,0,len (_gga )-_cgfc );for _ ,_ddee :=range _gga {if _ddee ._ggga ==_gfab {_cag =append (_cag ,_ddee );};};if len (_cag )> 0{_eac :=_dcee (_cag ,_dea ._aea ,nil ,nil );_gbe =append (_gbe ,_eac ...);
_cgfc -=len (_cag );};};_bgaf :=new (_db .Buffer );_gbe .writeText (_bgaf );_dea ._ccf =_bgaf .String ();_dea ._bcbd =_gbe .toTextMarks ();_dea ._ege =_gbe .tables ();};func (_acaef *textTable )computeBbox ()_ec .PdfRectangle {var _ddfa _ec .PdfRectangle ;
_bgebc :=false ;for _edegd :=0;_edegd < _acaef ._daac ;_edegd ++{for _acacf :=0;_acacf < _acaef ._cfffa ;_acacf ++{_bbac :=_acaef .get (_acacf ,_edegd );if _bbac ==nil {continue ;};if !_bgebc {_ddfa =_bbac .PdfRectangle ;_bgebc =true ;}else {_ddfa =_bedc (_ddfa ,_bbac .PdfRectangle );
};};};return _ddfa ;};func (_geb *imageExtractContext )extractXObjectImage (_fc *_ca .PdfObjectName ,_fe _b .GraphicsState ,_cgc *_ec .PdfPageResources )error {_eae ,_ :=_cgc .GetXObjectByName (*_fc );if _eae ==nil {return nil ;};_fa ,_bd :=_geb ._aff [_eae ];
if !_bd {_ce ,_fbc :=_cgc .GetXObjectImageByName (*_fc );if _fbc !=nil {return _fbc ;};if _ce ==nil {return nil ;};_dgg ,_fbc :=_ce .ToImage ();if _fbc !=nil {return _fbc ;};_fa =&cachedImage {_cdb :_dgg ,_gde :_ce .ColorSpace };_geb ._aff [_eae ]=_fa ;
};_ddg :=_fa ._cdb ;_aag :=_fa ._gde ;_gbf ,_fab :=_aag .ImageToRGB (*_ddg );if _fab !=nil {return _fab ;};_dfa .Log .Debug ("@\u0044\u006f\u0020\u0043\u0054\u004d\u003a\u0020\u0025\u0073",_fe .CTM .String ());_bda :=ImageMark {Image :&_gbf ,Width :_fe .CTM .ScalingFactorX (),Height :_fe .CTM .ScalingFactorY (),Angle :_fe .CTM .Angle ()};
_bda .X ,_bda .Y =_fe .CTM .Translation ();_geb ._ae =append (_geb ._ae ,_bda );_geb ._cbb ++;return nil ;};func (_gdgfg *wordBag )arrangeText ()*textPara {_gdgfg .sort ();if _ebf {_gdgfg .removeDuplicates ();};var _ddge []*textLine ;for _ ,_abac :=range _gdgfg .depthIndexes (){for !_gdgfg .empty (_abac ){_bfbc :=_gdgfg .firstReadingIndex (_abac );
_agbf :=_gdgfg .firstWord (_bfbc );_eeec :=_efgac (_gdgfg ,_bfbc );_ddbef :=_agbf ._dbcg ;_cccg :=_agbf ._ddbfa -_abfc *_ddbef ;_bccf :=_agbf ._ddbfa +_abfc *_ddbef ;_faeg :=_dcae *_ddbef ;_adca :=_fgdg *_ddbef ;_dfadf :for {var _bfafg *textWord ;_eegc :=0;
for _ ,_bgfc :=range _gdgfg .depthBand (_cccg ,_bccf ){_aggb :=_gdgfg .highestWord (_bgfc ,_cccg ,_bccf );if _aggb ==nil {continue ;};_gdfa :=_dfg (_aggb ,_eeec ._dcce [len (_eeec ._dcce )-1]);if _gdfa < -_adca {break _dfadf ;};if _gdfa > _faeg {continue ;
};if _bfafg !=nil &&_adfef (_aggb ,_bfafg )>=0{continue ;};_bfafg =_aggb ;_eegc =_bgfc ;};if _bfafg ==nil {break ;};_eeec .pullWord (_gdgfg ,_bfafg ,_eegc );};_eeec .markWordBoundaries ();_ddge =append (_ddge ,_eeec );};};if len (_ddge )==0{return nil ;
};_cg .Slice (_ddge ,func (_edcf ,_fdge int )bool {return _dafd (_ddge [_edcf ],_ddge [_fdge ])< 0});_dedb :=_fedg (_gdgfg .PdfRectangle ,_ddge );if _gaaac {_dfa .Log .Info ("\u0061\u0072\u0072an\u0067\u0065\u0054\u0065\u0078\u0074\u0020\u0021\u0021\u0021\u0020\u0070\u0061\u0072\u0061\u003d\u0025\u0073",_dedb .String ());
if _dbdcb {for _ebab ,_ageed :=range _dedb ._cecf {_cd .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_ebab ,_ageed .String ());if _cbeg {for _dbfbd ,_edde :=range _ageed ._dcce {_cd .Printf ("\u0025\u0038\u0064\u003a\u0020\u0025\u0073\u000a",_dbfbd ,_edde .String ());
for _fcec ,_cfaab :=range _edde ._afgbc {_cd .Printf ("\u00251\u0032\u0064\u003a\u0020\u0025\u0073\n",_fcec ,_cfaab .String ());};};};};};};return _dedb ;};func _dcff (_fcbf *textWord ,_abad float64 ,_fdac ,_dcdg rulingList )*wordBag {_dbc :=_gedb (_fcbf ._ddbfa );
_cfad :=[]*textWord {_fcbf };_gdfc :=wordBag {_fgg :map[int ][]*textWord {_dbc :_cfad },PdfRectangle :_fcbf .PdfRectangle ,_dca :_fcbf ._dbcg ,_dfcc :_abad ,_agee :_fdac ,_befg :_dcdg };return &_gdfc ;};func (_ddac paraList )topoOrder ()[]int {if _afe {_dfa .Log .Info ("\u0074\u006f\u0070\u006f\u004f\u0072\u0064\u0065\u0072\u003a");
};_ggcf :=len (_ddac );_ebbf :=make ([]bool ,_ggcf );_ggd :=make ([]int ,0,_ggcf );_eaeg :=_ddac .llyOrdering ();var _cbbd func (_dabdc int );_cbbd =func (_cabgd int ){_ebbf [_cabgd ]=true ;for _gceg :=0;_gceg < _ggcf ;_gceg ++{if !_ebbf [_gceg ]{if _ddac .readBefore (_eaeg ,_cabgd ,_gceg ){_cbbd (_gceg );
};};};_ggd =append (_ggd ,_cabgd );};for _gfbe :=0;_gfbe < _ggcf ;_gfbe ++{if !_ebbf [_gfbe ]{_cbbd (_gfbe );};};return _aaed (_ggd );};func (_bbge *textTable )reduceTiling (_bggb gridTiling ,_gdcgd float64 )*textTable {_cedf :=make ([]int ,0,_bbge ._daac );
_ceaa :=make ([]int ,0,_bbge ._cfffa );_dbfgc :=_bggb ._gcfbf ;_fcee :=_bggb ._ebfd ;for _fbaag :=0;_fbaag < _bbge ._daac ;_fbaag ++{_cgdge :=_fbaag > 0&&_gc .Abs (_fcee [_fbaag -1]-_fcee [_fbaag ])< _gdcgd &&_bbge .emptyRow (_fbaag );if !_cgdge {_cedf =append (_cedf ,_fbaag );
};};for _gffec :=0;_gffec < _bbge ._cfffa ;_gffec ++{_eddec :=_gffec < _bbge ._cfffa -1&&_gc .Abs (_dbfgc [_gffec +1]-_dbfgc [_gffec ])< _gdcgd &&_bbge .emptyColumn (_gffec );if !_eddec {_ceaa =append (_ceaa ,_gffec );};};if len (_cedf )==_bbge ._daac &&len (_ceaa )==_bbge ._cfffa {return _bbge ;
};_eaea :=textTable {_efdfb :_bbge ._efdfb ,_cfffa :len (_ceaa ),_daac :len (_cedf ),_gfgf :make (map[uint64 ]compositeCell ,len (_ceaa )*len (_cedf ))};if _gca {_dfa .Log .Info ("\u0072\u0065\u0064\u0075c\u0065\u0054\u0069\u006c\u0069\u006e\u0067\u003a\u0020\u0025d\u0078%\u0064\u0020\u002d\u003e\u0020\u0025\u0064x\u0025\u0064",_bbge ._cfffa ,_bbge ._daac ,len (_ceaa ),len (_cedf ));
_dfa .Log .Info ("\u0072\u0065d\u0075\u0063\u0065d\u0043\u006f\u006c\u0073\u003a\u0020\u0025\u002b\u0076",_ceaa );_dfa .Log .Info ("\u0072\u0065d\u0075\u0063\u0065d\u0052\u006f\u0077\u0073\u003a\u0020\u0025\u002b\u0076",_cedf );};for _aabbc ,_gadc :=range _cedf {for _dadfe ,_febd :=range _ceaa {_edegb ,_efee :=_bbge .getComposite (_febd ,_gadc );
if len (_edegb )==0{continue ;};if _gca {_cd .Printf ("\u0020 \u0025\u0032\u0064\u002c \u0025\u0032\u0064\u0020\u0028%\u0032d\u002c \u0025\u0032\u0064\u0029\u0020\u0025\u0071\n",_dadfe ,_aabbc ,_febd ,_gadc ,_abcg (_edegb .merge ().text (),50));};_eaea .putComposite (_dadfe ,_aabbc ,_edegb ,_efee );
};};return &_eaea ;};func (_edfg paraList )addNeighbours (){_ccbg :=func (_efeafb []int ,_cgcgf *textPara )([]*textPara ,[]*textPara ){_fcaf :=make ([]*textPara ,0,len (_efeafb )-1);_gfdeb :=make ([]*textPara ,0,len (_efeafb )-1);for _ ,_ffbaf :=range _efeafb {_dfafd :=_edfg [_ffbaf ];
if _dfafd .Urx <=_cgcgf .Llx {_fcaf =append (_fcaf ,_dfafd );}else if _dfafd .Llx >=_cgcgf .Urx {_gfdeb =append (_gfdeb ,_dfafd );};};return _fcaf ,_gfdeb ;};_cgafb :=func (_fdda []int ,_cfbbc *textPara )([]*textPara ,[]*textPara ){_gafea :=make ([]*textPara ,0,len (_fdda )-1);
_dcfc :=make ([]*textPara ,0,len (_fdda )-1);for _ ,_afbdf :=range _fdda {_beae :=_edfg [_afbdf ];if _beae .Ury <=_cfbbc .Lly {_dcfc =append (_dcfc ,_beae );}else if _beae .Lly >=_cfbbc .Ury {_gafea =append (_gafea ,_beae );};};return _gafea ,_dcfc ;};
_dfbd :=_edfg .yNeighbours (_ccg );for _ ,_abace :=range _edfg {_aafg :=_dfbd [_abace ];if len (_aafg )==0{continue ;};_gffbd ,_gbcfc :=_ccbg (_aafg ,_abace );if len (_gffbd )==0&&len (_gbcfc )==0{continue ;};if len (_gffbd )> 0{_bcaa :=_gffbd [0];for _ ,_fafgb :=range _gffbd [1:]{if _fafgb .Urx >=_bcaa .Urx {_bcaa =_fafgb ;
};};for _ ,_cbgb :=range _gffbd {if _cbgb !=_bcaa &&_cbgb .Urx > _bcaa .Llx {_bcaa =nil ;break ;};};if _bcaa !=nil &&_bbed (_abace .PdfRectangle ,_bcaa .PdfRectangle ){_abace ._eead =_bcaa ;};};if len (_gbcfc )> 0{_cgbf :=_gbcfc [0];for _ ,_aggg :=range _gbcfc [1:]{if _aggg .Llx <=_cgbf .Llx {_cgbf =_aggg ;
};};for _ ,_afaaf :=range _gbcfc {if _afaaf !=_cgbf &&_afaaf .Llx < _cgbf .Urx {_cgbf =nil ;break ;};};if _cgbf !=nil &&_bbed (_abace .PdfRectangle ,_cgbf .PdfRectangle ){_abace ._caeb =_cgbf ;};};};_dfbd =_edfg .xNeighbours (_cege );for _ ,_gffeb :=range _edfg {_cdgbc :=_dfbd [_gffeb ];
if len (_cdgbc )==0{continue ;};_egcd ,_edbc :=_cgafb (_cdgbc ,_gffeb );if len (_egcd )==0&&len (_edbc )==0{continue ;};if len (_edbc )> 0{_fdcff :=_edbc [0];for _ ,_bdab :=range _edbc [1:]{if _bdab .Ury >=_fdcff .Ury {_fdcff =_bdab ;};};for _ ,_gfcd :=range _edbc {if _gfcd !=_fdcff &&_gfcd .Ury > _fdcff .Lly {_fdcff =nil ;
break ;};};if _fdcff !=nil &&_edag (_gffeb .PdfRectangle ,_fdcff .PdfRectangle ){_gffeb ._aaccd =_fdcff ;};};if len (_egcd )> 0{_ecged :=_egcd [0];for _ ,_bfabg :=range _egcd [1:]{if _bfabg .Lly <=_ecged .Lly {_ecged =_bfabg ;};};for _ ,_dedcg :=range _egcd {if _dedcg !=_ecged &&_dedcg .Lly < _ecged .Ury {_ecged =nil ;
break ;};};if _ecged !=nil &&_edag (_gffeb .PdfRectangle ,_ecged .PdfRectangle ){_gffeb ._egcgb =_ecged ;};};};for _ ,_ggad :=range _edfg {if _ggad ._eead !=nil &&_ggad ._eead ._caeb !=_ggad {_ggad ._eead =nil ;};if _ggad ._egcgb !=nil &&_ggad ._egcgb ._aaccd !=_ggad {_ggad ._egcgb =nil ;
};if _ggad ._caeb !=nil &&_ggad ._caeb ._eead !=_ggad {_ggad ._caeb =nil ;};if _ggad ._aaccd !=nil &&_ggad ._aaccd ._egcgb !=_ggad {_ggad ._aaccd =nil ;};};};func (_gdea *textObject )renderText (_aebc []byte )error {if _gdea ._ead {_dfa .Log .Debug ("\u0072\u0065\u006e\u0064\u0065r\u0054\u0065\u0078\u0074\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0066\u006f\u006e\u0074\u002e\u0020\u004e\u006f\u0074\u0020\u0070\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u002e");
return nil ;};_ebgb :=_gdea .getCurrentFont ();_bgb :=_ebgb .BytesToCharcodes (_aebc );_bdb ,_bfc ,_gbfe :=_ebgb .CharcodesToStrings (_bgb );if _gbfe > 0{_dfa .Log .Debug ("\u0072\u0065nd\u0065\u0072\u0054e\u0078\u0074\u003a\u0020num\u0043ha\u0072\u0073\u003d\u0025\u0064\u0020\u006eum\u004d\u0069\u0073\u0073\u0065\u0073\u003d%\u0064",_bfc ,_gbfe );
};_gdea ._caefc ._dede +=_bfc ;_gdea ._caefc ._gfd +=_gbfe ;_deb :=_gdea ._caefc ;_dbd :=_deb ._badf ;_fgdc :=_deb ._faf /100.0;_ecc :=_debb ;if _ebgb .Subtype ()=="\u0054\u0079\u0070e\u0033"{_ecc =1;};_cdbe ,_gfa :=_ebgb .GetRuneMetrics (' ');if !_gfa {_cdbe ,_gfa =_ebgb .GetCharMetrics (32);
};if !_gfa {_cdbe ,_ =_ec .DefaultFont ().GetRuneMetrics (' ');};_bec :=_cdbe .Wx *_ecc ;_dfa .Log .Trace ("\u0073p\u0061\u0063e\u0057\u0069\u0064t\u0068\u003d\u0025\u002e\u0032\u0066\u0020t\u0065\u0078\u0074\u003d\u0025\u0071 \u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0066\u006f\u006et\u0053\u0069\u007a\u0065\u003d\u0025\u002e\u0032\u0066",_bec ,_bdb ,_ebgb ,_dbd );
_cgfg :=_dg .NewMatrix (_dbd *_fgdc ,0,0,_dbd ,0,_deb ._ceg );if _bffe {_dfa .Log .Info ("\u0072\u0065\u006e\u0064\u0065\u0072T\u0065\u0078\u0074\u003a\u0020\u0025\u0064\u0020\u0063\u006f\u0064\u0065\u0073=\u0025\u002b\u0076\u0020\u0074\u0065\u0078t\u0073\u003d\u0025\u0071",len (_bgb ),_bgb ,_bdb );
};_dfa .Log .Trace ("\u0072\u0065\u006e\u0064\u0065\u0072T\u0065\u0078\u0074\u003a\u0020\u0025\u0064\u0020\u0063\u006f\u0064\u0065\u0073=\u0025\u002b\u0076\u0020\u0072\u0075\u006ee\u0073\u003d\u0025\u0071",len (_bgb ),_bgb ,len (_bdb ));_daa :=_gdea .getFillColor ();
_bef :=_gdea .getStrokeColor ();for _aac ,_bgbc :=range _bdb {_afa :=[]rune (_bgbc );if len (_afa )==1&&_afa [0]=='\x00'{continue ;};_gcbd :=_bgb [_aac ];_gfgc :=_gdea ._bgcgd .CTM .Mult (_gdea ._gcgc ).Mult (_cgfg );_dcdc :=0.0;if len (_afa )==1&&_afa [0]==32{_dcdc =_deb ._gaaa ;
};_bafb ,_afd :=_ebgb .GetCharMetrics (_gcbd );if !_afd {_dfa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u004e\u006f \u006d\u0065\u0074r\u0069\u0063\u0020\u0066\u006f\u0072\u0020\u0063\u006fde\u003d\u0025\u0064 \u0072\u003d0\u0078\u0025\u0030\u0034\u0078\u003d%\u002b\u0071 \u0025\u0073",_gcbd ,_afa ,_afa ,_ebgb );
return _cd .Errorf ("\u006e\u006f\u0020\u0063\u0068\u0061\u0072\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073:\u0020f\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0063\u006f\u0064\u0065\u003d\u0025\u0064",_ebgb .String (),_gcbd );};_cgdd :=_dg .Point {X :_bafb .Wx *_ecc ,Y :_bafb .Wy *_ecc };
_bge :=_dg .Point {X :(_cgdd .X *_dbd +_dcdc )*_fgdc };_cbfd :=_dg .Point {X :(_cgdd .X *_dbd +_deb ._gce +_dcdc )*_fgdc };if _bffe {_dfa .Log .Info ("\u0074\u0066\u0073\u003d\u0025\u002e\u0032\u0066\u0020\u0074\u0063\u003d\u0025\u002e\u0032f\u0020t\u0077\u003d\u0025\u002e\u0032\u0066\u0020\u0074\u0068\u003d\u0025\u002e\u0032\u0066",_dbd ,_deb ._gce ,_deb ._gaaa ,_fgdc );
_dfa .Log .Info ("\u0064x\u002c\u0064\u0079\u003d%\u002e\u0033\u0066\u0020\u00740\u003d%\u002e3\u0066\u0020\u0074\u003d\u0025\u002e\u0033f",_cgdd ,_bge ,_cbfd );};_ffa :=_baa (_bge );_ddf :=_baa (_cbfd );_ffeb :=_gdea ._bgcgd .CTM .Mult (_gdea ._gcgc ).Mult (_ffa );
if _eeeb {_dfa .Log .Info ("e\u006e\u0064\u003a\u000a\tC\u0054M\u003d\u0025\u0073\u000a\u0009 \u0074\u006d\u003d\u0025\u0073\u000a"+"\u0009\u0020t\u0064\u003d\u0025s\u0020\u0078\u006c\u0061\u0074\u003d\u0025\u0073\u000a"+"\u0009t\u0064\u0030\u003d\u0025s\u000a\u0009\u0020\u0020\u2192 \u0025s\u0020x\u006c\u0061\u0074\u003d\u0025\u0073",_gdea ._bgcgd .CTM ,_gdea ._gcgc ,_ddf ,_bfce (_gdea ._bgcgd .CTM .Mult (_gdea ._gcgc ).Mult (_ddf )),_ffa ,_ffeb ,_bfce (_ffeb ));
};_aabb ,_gdgf :=_gdea .newTextMark (_ge .ExpandLigatures (_afa ),_gfgc ,_bfce (_ffeb ),_gc .Abs (_bec *_gfgc .ScalingFactorX ()),_ebgb ,_gdea ._caefc ._gce ,_daa ,_bef );if !_gdgf {_dfa .Log .Debug ("\u0054\u0065\u0078\u0074\u0020\u006d\u0061\u0072\u006b\u0020\u006f\u0075\u0074\u0073\u0069d\u0065 \u0070\u0061\u0067\u0065\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
continue ;};if _ebgb ==nil {_dfa .Log .Debug ("\u0045R\u0052O\u0052\u003a\u0020\u004e\u006f\u0020\u0066\u006f\u006e\u0074\u002e");}else if _ebgb .Encoder ()==nil {_dfa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020N\u006f\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u002e\u0020\u0066o\u006et\u003d\u0025\u0073",_ebgb );
}else {if _acg ,_acdb :=_ebgb .Encoder ().CharcodeToRune (_gcbd );_acdb {_aabb ._dbgg =string (_acg );};};_dfa .Log .Trace ("i\u003d\u0025\u0064\u0020\u0063\u006fd\u0065\u003d\u0025\u0064\u0020\u006d\u0061\u0072\u006b=\u0025\u0073\u0020t\u0072m\u003d\u0025\u0073",_aac ,_gcbd ,_aabb ,_gfgc );
_gdea ._ebb =append (_gdea ._ebb ,&_aabb );_gdea ._gcgc .Concat (_ddf );};return nil ;};func _cdfe (_gdab _dg .Point )*subpath {return &subpath {_dgab :[]_dg .Point {_gdab }}};

// String returns a description of `t`.
func (_adbfg *textTable )String ()string {return _cd .Sprintf ("\u0025\u0064\u0020\u0078\u0020\u0025\u0064\u0020\u0025\u0074",_adbfg ._cfffa ,_adbfg ._daac ,_adbfg ._efdfb );};func (_fddfa *wordBag )firstWord (_babc int )*textWord {return _fddfa ._fgg [_babc ][0]};
func _aceb (_bgdb int ,_bffcc map[int ][]float64 )([]int ,int ){_gbdaf :=make ([]int ,_bgdb );_fagf :=0;for _dedac :=0;_dedac < _bgdb ;_dedac ++{_gbdaf [_dedac ]=_fagf ;_fagf +=len (_bffcc [_dedac ])+1;};return _gbdaf ,_fagf ;};func (_eadg rulingList )tidied (_accc string )rulingList {_egbd :=_eadg .removeDuplicates ();
_egbd .log ("\u0075n\u0069\u0071\u0075\u0065\u0073");_adcab :=_egbd .snapToGroups ();if _adcab ==nil {return nil ;};_adcab .sort ();if _ffec {_dfa .Log .Info ("\u0074\u0069\u0064i\u0065\u0064\u003a\u0020\u0025\u0071\u0020\u0076\u0065\u0063\u0073\u003d\u0025\u0064\u0020\u0075\u006e\u0069\u0071\u0075\u0065\u0073\u003d\u0025\u0064\u0020\u0063\u006f\u0061l\u0065\u0073\u0063\u0065\u0064\u003d\u0025\u0064",_accc ,len (_eadg ),len (_egbd ),len (_adcab ));
};_adcab .log ("\u0063o\u0061\u006c\u0065\u0073\u0063\u0065d");return _adcab ;};func _ccfe (_dgabg string )bool {if _ag .RuneCountInString (_dgabg )< _fcfc {return false ;};_gcfb ,_cgba :=_ag .DecodeLastRuneInString (_dgabg );if _cgba <=0||!_df .Is (_df .Hyphen ,_gcfb ){return false ;
};_gcfb ,_cgba =_ag .DecodeLastRuneInString (_dgabg [:len (_dgabg )-_cgba ]);return _cgba > 0&&!_df .IsSpace (_gcfb );};func _aaba (_adbc ,_bdcee ,_gggdd ,_gdgfe *textPara )*textTable {_bbdbg :=&textTable {_cfffa :2,_daac :2,_efeaf :make (map[uint64 ]*textPara ,4)};
_bbdbg .put (0,0,_adbc );_bbdbg .put (1,0,_bdcee );_bbdbg .put (0,1,_gggdd );_bbdbg .put (1,1,_gdgfe );return _bbdbg ;};func (_adcf paraList )findTextTables ()[]*textTable {var _abeb []*textTable ;for _ ,_ggge :=range _adcf {if _ggge .taken ()||_ggge .Width ()==0{continue ;
};_aaaa :=_ggge .isAtom ();if _aaaa ==nil {continue ;};_aaaa .growTable ();if _aaaa ._cfffa *_aaaa ._daac < _eaa {continue ;};_aaaa .markCells ();_aaaa .log ("\u0067\u0072\u006fw\u006e");_abeb =append (_abeb ,_aaaa );};return _abeb ;};func _fbbfd (_dgga map[int ]intSet )[]int {_cgeb :=make ([]int ,0,len (_dgga ));
for _bbcfg :=range _dgga {_cgeb =append (_cgeb ,_bbcfg );};_cg .Ints (_cgeb );return _cgeb ;};func (_ecaa *textLine )text ()string {var _egbc []string ;for _ ,_fba :=range _ecaa ._dcce {if _fba ._fdfaf {_egbc =append (_egbc ,"\u0020");};_egbc =append (_egbc ,_fba ._dfaagg );
};return _g .Join (_egbc ,"");};func (_ggdf compositeCell )split (_faab ,_fcbb []float64 )*textTable {_bdbc :=len (_faab )+1;_gfgb :=len (_fcbb )+1;if _gca {_dfa .Log .Info ("\u0063\u006f\u006d\u0070\u006f\u0073\u0069t\u0065\u0043\u0065l\u006c\u002e\u0073\u0070l\u0069\u0074\u003a\u0020\u0025\u0064\u0020\u0078\u0020\u0025\u0064\u000a\u0009\u0063\u006f\u006d\u0070\u006f\u0073\u0069\u0074\u0065\u003d\u0025\u0073\u000a"+"\u0009\u0072\u006f\u0077\u0043\u006f\u0072\u0072\u0069\u0064\u006f\u0072\u0073=\u0025\u0036\u002e\u0032\u0066\u000a\t\u0063\u006f\u006c\u0043\u006f\u0072\u0072\u0069\u0064\u006f\u0072\u0073\u003d%\u0036\u002e\u0032\u0066",_gfgb ,_bdbc ,_ggdf ,_faab ,_fcbb );
_cd .Printf ("\u0020\u0020\u0020\u0020\u0025\u0064\u0020\u0070\u0061\u0072\u0061\u0073\u000a",len (_ggdf .paraList ));for _bgeg ,_egbe :=range _ggdf .paraList {_cd .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_bgeg ,_egbe .String ());};_cd .Printf ("\u0020\u0020\u0020\u0020\u0025\u0064\u0020\u006c\u0069\u006e\u0065\u0073\u000a",len (_ggdf .lines ()));
for _bbbg ,_eagf :=range _ggdf .lines (){_cd .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_bbbg ,_eagf );};};_faab =_ebdc (_faab ,_ggdf .Ury ,_ggdf .Lly );_fcbb =_ebdc (_fcbb ,_ggdf .Llx ,_ggdf .Urx );_fdfe :=make (map[uint64 ]*textPara ,_gfgb *_bdbc );
_gbgf :=textTable {_cfffa :_gfgb ,_daac :_bdbc ,_efeaf :_fdfe };_dacaa :=_ggdf .paraList ;_cg .Slice (_dacaa ,func (_eggc ,_aecf int )bool {_bbefg ,_bacbf :=_dacaa [_eggc ],_dacaa [_aecf ];_agaf ,_ebfg :=_bbefg .Lly ,_bacbf .Lly ;if _agaf !=_ebfg {return _agaf < _ebfg ;
};return _bbefg .Llx < _bacbf .Llx ;});_gfbf :=make (map[uint64 ]_ec .PdfRectangle ,_gfgb *_bdbc );for _cagb ,_faccd :=range _faab [1:]{_abcfa :=_faab [_cagb ];for _beebe ,_cdaf :=range _fcbb [1:]{_faad :=_fcbb [_beebe ];_gfbf [_dgeff (_beebe ,_cagb )]=_ec .PdfRectangle {Llx :_faad ,Urx :_cdaf ,Lly :_faccd ,Ury :_abcfa };
};};if _gca {_dfa .Log .Info ("\u0063\u006f\u006d\u0070\u006f\u0073\u0069\u0074\u0065\u0043\u0065l\u006c\u002e\u0073\u0070\u006c\u0069\u0074\u003a\u0020\u0072e\u0063\u0074\u0073");_cd .Printf ("\u0020\u0020\u0020\u0020");for _faaa :=0;_faaa < _gfgb ;_faaa ++{_cd .Printf ("\u0025\u0033\u0030\u0064\u002c\u0020",_faaa );
};_cd .Println ();for _effg :=0;_effg < _bdbc ;_effg ++{_cd .Printf ("\u0020\u0020\u0025\u0032\u0064\u003a",_effg );for _gbada :=0;_gbada < _gfgb ;_gbada ++{_cd .Printf ("\u00256\u002e\u0032\u0066\u002c\u0020",_gfbf [_dgeff (_gbada ,_effg )]);};_cd .Println ();
};};_bfag :=func (_facf *textLine )(int ,int ){for _ecad :=0;_ecad < _bdbc ;_ecad ++{for _eegcb :=0;_eegcb < _gfgb ;_eegcb ++{if _bdga (_gfbf [_dgeff (_eegcb ,_ecad )],_facf .PdfRectangle ){return _eegcb ,_ecad ;};};};return -1,-1;};_gcad :=make (map[uint64 ][]*textLine ,_gfgb *_bdbc );
for _ ,_acda :=range _dacaa .lines (){_bdcaf ,_fff :=_bfag (_acda );if _bdcaf < 0{continue ;};_gcad [_dgeff (_bdcaf ,_fff )]=append (_gcad [_dgeff (_bdcaf ,_fff )],_acda );};for _dacag :=0;_dacag < len (_faab )-1;_dacag ++{_fgae :=_faab [_dacag ];_affc :=_faab [_dacag +1];
for _fbab :=0;_fbab < len (_fcbb )-1;_fbab ++{_eagd :=_fcbb [_fbab ];_baeb :=_fcbb [_fbab +1];_bgadbe :=_ec .PdfRectangle {Llx :_eagd ,Urx :_baeb ,Lly :_affc ,Ury :_fgae };_cea :=_gcad [_dgeff (_fbab ,_dacag )];if len (_cea )==0{continue ;};_ebdad :=_fedg (_bgadbe ,_cea );
_gbgf .put (_fbab ,_dacag ,_ebdad );};};return &_gbgf ;};func (_aefd *textTable )toTextTable ()TextTable {if _gca {_dfa .Log .Info ("t\u006fT\u0065\u0078\u0074\u0054\u0061\u0062\u006c\u0065:\u0020\u0025\u0064\u0020x \u0025\u0064",_aefd ._cfffa ,_aefd ._daac );
};_dbgd :=make ([][]TableCell ,_aefd ._daac );for _acef :=0;_acef < _aefd ._daac ;_acef ++{_dbgd [_acef ]=make ([]TableCell ,_aefd ._cfffa );for _dcgb :=0;_dcgb < _aefd ._cfffa ;_dcgb ++{_afcb :=_aefd .get (_dcgb ,_acef );if _afcb ==nil {continue ;};if _gca {_cd .Printf ("\u0025\u0034\u0064 \u0025\u0032\u0064\u003a\u0020\u0025\u0073\u000a",_dcgb ,_acef ,_afcb );
};_dbgd [_acef ][_dcgb ].Text =_afcb .text ();_agcgc :=0;_dbgd [_acef ][_dcgb ].Marks ._gffb =_afcb .toTextMarks (&_agcgc );};};return TextTable {W :_aefd ._cfffa ,H :_aefd ._daac ,Cells :_dbgd };};const _debb =1.0/1000.0;func _aecg (_ffgf _ec .PdfRectangle )textState {return textState {_faf :100,_gdgb :RenderModeFill ,_cce :_ffgf };
};func (_eaecc *textPara )writeText (_gcedb _c .Writer ){if _eaecc ._dgba ==nil {_eaecc .writeCellText (_gcedb );return ;};for _acae :=0;_acae < _eaecc ._dgba ._daac ;_acae ++{for _dfgfba :=0;_dfgfba < _eaecc ._dgba ._cfffa ;_dfgfba ++{_gdcf :=_eaecc ._dgba .get (_dfgfba ,_acae );
if _gdcf ==nil {_gcedb .Write ([]byte ("\u0009"));}else {_gdcf .writeCellText (_gcedb );};_gcedb .Write ([]byte ("\u0020"));};if _acae < _eaecc ._dgba ._daac -1{_gcedb .Write ([]byte ("\u000a"));};};};func _gdabe (_fgcfa ,_gccc _ec .PdfRectangle )(_ec .PdfRectangle ,bool ){if !_adef (_fgcfa ,_gccc ){return _ec .PdfRectangle {},false ;
};return _ec .PdfRectangle {Llx :_gc .Max (_fgcfa .Llx ,_gccc .Llx ),Urx :_gc .Min (_fgcfa .Urx ,_gccc .Urx ),Lly :_gc .Max (_fgcfa .Lly ,_gccc .Lly ),Ury :_gc .Min (_fgcfa .Ury ,_gccc .Ury )},true ;};func (_eaee *textObject )moveText (_egdg ,_ffb float64 ){_eaee .moveLP (_egdg ,_ffb )};


// ExtractText processes and extracts all text data in content streams and returns as a string.
// It takes into account character encodings in the PDF file, which are decoded by
// CharcodeBytesToUnicode.
// Characters that can't be decoded are replaced with MissingCodeRune ('\ufffd' = �).
func (_be *Extractor )ExtractText ()(string ,error ){_cfd ,_ ,_ ,_dbb :=_be .ExtractTextWithStats ();return _cfd ,_dbb ;};const _abc =20;func (_cagg paraList )findTables (_fgcdd []gridTiling )[]*textTable {_cagg .addNeighbours ();_cg .Slice (_cagg ,func (_eddf ,_afda int )bool {return _ggec (_cagg [_eddf ],_cagg [_afda ])< 0});
var _ecgd []*textTable ;if _gcac {_egecc :=_cagg .findGridTables (_fgcdd );_ecgd =append (_ecgd ,_egecc ...);};if _cbeb {_gefe :=_cagg .findTextTables ();_ecgd =append (_ecgd ,_gefe ...);};return _ecgd ;};func (_adae *subpath )close (){if !_ceca (_adae ._dgab [0],_adae .last ()){_adae .add (_adae ._dgab [0]);
};_adae ._dbdc =true ;_adae .removeDuplicates ();};

// String returns a human readable description of `path`.
func (_ddbe *subpath )String ()string {_ecaf :=_ddbe ._dgab ;_fdca :=len (_ecaf );if _fdca <=5{return _cd .Sprintf ("\u0025d\u003a\u0020\u0025\u0036\u002e\u0032f",_fdca ,_ecaf );};return _cd .Sprintf ("\u0025d\u003a\u0020\u0025\u0036.\u0032\u0066\u0020\u0025\u0036.\u0032f\u0020.\u002e\u002e\u0020\u0025\u0036\u002e\u0032f",_fdca ,_ecaf [0],_ecaf [1],_ecaf [_fdca -1]);
};func (_acedg gridTiling )log (_dbaae string ){if !_bdgac {return ;};_dfa .Log .Info ("\u0074i\u006ci\u006e\u0067\u003a\u0020\u0025d\u0020\u0078 \u0025\u0064\u0020\u0025\u0071",len (_acedg ._gcfbf ),len (_acedg ._ebfd ),_dbaae );_cd .Printf ("\u0020\u0020\u0020l\u006c\u0078\u003d\u0025\u002e\u0032\u0066\u000a",_acedg ._gcfbf );
_cd .Printf ("\u0020\u0020\u0020l\u006c\u0079\u003d\u0025\u002e\u0032\u0066\u000a",_acedg ._ebfd );for _bgga ,_fccg :=range _acedg ._ebfd {_efffa ,_fbdg :=_acedg ._aeg [_fccg ];if !_fbdg {continue ;};_cd .Printf ("%\u0034\u0064\u003a\u0020\u0025\u0036\u002e\u0032\u0066\u000a",_bgga ,_fccg );
for _gfbd ,_ebfdf :=range _acedg ._gcfbf {_cgee ,_faegg :=_efffa [_ebfdf ];if !_faegg {continue ;};_cd .Printf ("\u0025\u0038\u0064\u003a\u0020\u0025\u0073\u000a",_gfbd ,_cgee .String ());};};};func (_dcd *textObject )setTextRise (_fdcf float64 ){if _dcd ==nil {return ;
};_dcd ._caefc ._ceg =_fdcf ;};type textObject struct{_agbc *Extractor ;_baca *_ec .PdfPageResources ;_bgcgd _b .GraphicsState ;_caefc *textState ;_efce *stateStack ;_gcgc _dg .Matrix ;_agab _dg .Matrix ;_ebb []*textMark ;_ead bool ;};func (_gfebc paraList )writeText (_ebgaa _c .Writer ){for _fdff ,_egfe :=range _gfebc {if _egfe ._bfeg {continue ;
};_egfe .writeText (_ebgaa );if _fdff !=len (_gfebc )-1{if _bgdg (_egfe ,_gfebc [_fdff +1]){_ebgaa .Write ([]byte ("\u0020"));}else {_ebgaa .Write ([]byte ("\u000a"));_ebgaa .Write ([]byte ("\u000a"));};};};_ebgaa .Write ([]byte ("\u000a"));_ebgaa .Write ([]byte ("\u000a"));
};func _ceca (_bffg ,_bbcf _dg .Point )bool {return _bffg .X ==_bbcf .X &&_bffg .Y ==_bbcf .Y };func (_cabg *textObject )setTextRenderMode (_fde int ){if _cabg ==nil {return ;};_cabg ._caefc ._gdgb =RenderMode (_fde );};func (_bbefe paraList )xNeighbours (_fdaca float64 )map[*textPara ][]int {_dadda :=make ([]event ,2*len (_bbefe ));
if _fdaca ==0{for _gfabf ,_cdda :=range _bbefe {_dadda [2*_gfabf ]=event {_cdda .Llx ,true ,_gfabf };_dadda [2*_gfabf +1]=event {_cdda .Urx ,false ,_gfabf };};}else {for _dbed ,_addaf :=range _bbefe {_dadda [2*_dbed ]=event {_addaf .Llx -_fdaca *_addaf .fontsize (),true ,_dbed };
_dadda [2*_dbed +1]=event {_addaf .Urx +_fdaca *_addaf .fontsize (),false ,_dbed };};};return _bbefe .eventNeighbours (_dadda );};func (_febb *textObject )nextLine (){_febb .moveLP (0,-_febb ._caefc ._abe )};func _cfda (_bgcg *_b .ContentStreamOperation )(float64 ,error ){if len (_bgcg .Params )!=1{_gba :=_e .New ("\u0069n\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0070\u0061r\u0061m\u0065t\u0065\u0072\u0020\u0063\u006f\u0075\u006et");
_dfa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u0023\u0071\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020h\u0061\u0076\u0065\u0020\u0025\u0064\u0020i\u006e\u0070\u0075\u0074\u0020\u0070\u0061\u0072\u0061\u006d\u0073,\u0020\u0067\u006f\u0074\u0020\u0025\u0064\u0020\u0025\u002b\u0076",_bgcg .Operand ,1,len (_bgcg .Params ),_bgcg .Params );
return 0.0,_gba ;};return _ca .GetNumberAsFloat (_bgcg .Params [0]);};func _dafd (_gbad ,_egcge bounded )float64 {_abde :=_acdd (_gbad ,_egcge );if !_cdfce (_abde ){return _abde ;};return _adfef (_gbad ,_egcge );};func (_ddae *wordBag )scanBand (_bcfg string ,_fdb *wordBag ,_geeg func (_ecg *wordBag ,_dcdgd *textWord )bool ,_gffc ,_ecfd ,_ddad float64 ,_ecdde ,_dfacc bool )int {_aadb :=_fdb ._dca ;
var _edefg map[int ]map[*textWord ]struct{};if !_ecdde {_edefg =_ddae .makeRemovals ();};_facc :=_abfc *_aadb ;_cbcdb :=0;for _ ,_acff :=range _ddae .depthBand (_gffc -_facc ,_ecfd +_facc ){if len (_ddae ._fgg [_acff ])==0{continue ;};for _ ,_bbcd :=range _ddae ._fgg [_acff ]{if !(_gffc -_facc <=_bbcd ._ddbfa &&_bbcd ._ddbfa <=_ecfd +_facc ){continue ;
};if !_geeg (_fdb ,_bbcd ){continue ;};_aeae :=2.0*_gc .Abs (_bbcd ._dbcg -_fdb ._dca )/(_bbcd ._dbcg +_fdb ._dca );_afbd :=_gc .Max (_bbcd ._dbcg /_fdb ._dca ,_fdb ._dca /_bbcd ._dbcg );_dbfff :=_gc .Min (_aeae ,_afbd );if _ddad > 0&&_dbfff > _ddad {continue ;
};if _fdb .blocked (_bbcd ){continue ;};if !_ecdde {_fdb .pullWord (_bbcd ,_acff ,_edefg );};_cbcdb ++;if !_dfacc {if _bbcd ._ddbfa < _gffc {_gffc =_bbcd ._ddbfa ;};if _bbcd ._ddbfa > _ecfd {_ecfd =_bbcd ._ddbfa ;};};if _ecdde {break ;};};};if !_ecdde {_ddae .applyRemovals (_edefg );
};return _cbcdb ;};func (_gabaef *textTable )emptyRow (_abdaf int )bool {for _dbag :=0;_dbag < _gabaef ._cfffa ;_dbag ++{_dbgb :=_gabaef .get (_dbag ,_abdaf );if _dbgb !=nil &&_dbgb .text ()!=""{return false ;};};return true ;};func (_gaae *wordBag )depthRange (_bdbe ,_efbg int )[]int {var _dae []int ;
for _efgff :=range _gaae ._fgg {if _bdbe <=_efgff &&_efgff <=_efbg {_dae =append (_dae ,_efgff );};};if len (_dae )==0{return nil ;};_cg .Ints (_dae );return _dae ;};const (RenderModeStroke RenderMode =1<<iota ;RenderModeFill ;RenderModeClip ;);type markKind int ;
func (_fae *textLine )endsInHyphen ()bool {_bdge :=_fae ._dcce [len (_fae ._dcce )-1];_ccbe :=_bdge ._dfaagg ;_dffbg ,_gbfa :=_ag .DecodeLastRuneInString (_ccbe );if _gbfa <=0||!_df .Is (_df .Hyphen ,_dffbg ){return false ;};if _bdge ._fdfaf &&_ccfe (_ccbe ){return true ;
};return _ccfe (_fae .text ());};func (_ccae *textPara )fontsize ()float64 {return _ccae ._cecf [0]._gbfeg };type imageExtractContext struct{_ae []ImageMark ;_ecb int ;_cbb int ;_daf int ;_aff map[*_ca .PdfObjectStream ]*cachedImage ;_ef *ImageExtractOptions ;
};func _ebdbb (_afga bounded )float64 {return -_afga .bbox ().Lly };const (_badbg =false ;_baae =false ;_fad =false ;_eeeb =false ;_eabb =false ;_bffe =false ;_ebga =false ;_afe =false ;_gaaac =false ;_dbdcb =_gaaac &&true ;_cbeg =_dbdcb &&false ;_ccce =_gaaac &&true ;
_gca =false ;_badbd =_gca &&false ;_eeae =_gca &&true ;_ffec =false ;_cbdd =_ffec &&false ;_gaef =_ffec &&false ;_bdgac =_ffec &&true ;_bbeb =_ffec &&false ;_cgfa =_ffec &&false ;);const (_eebb =1.0e-6;_gbcf =1.0e-4;_bacc =10;_gaeab =6;_abfc =0.5;_bdce =0.12;
_fdef =0.19;_efae =0.04;_dafaf =0.04;_gaff =1.0;_ebae =0.04;_cgca =0.4;_ecdg =0.7;_cgfef =1.0;_aaa =0.1;_dcae =1.4;_fgdg =0.46;_bbccd =0.02;_fgad =0.2;_dffb =0.5;_fcfc =4;_gega =4.0;_eaa =6;_ccee =0.3;_cege =0.01;_ccg =0.02;_aeef =2;_cefc =2;_bfcc =500;
_cgef =4.0;_dcgf =4.0;_eebf =0.05;_fbbc =0.1;_bffc =2.0;_fgb =2.0;_fgdb =1.5;_aebd =3.0;_ggfe =0.25;);func (_ccb *shapesState )closePath (){if _ccb ._ddfb {_ccb ._dfae =append (_ccb ._dfae ,_cdfe (_ccb ._fegd ));_ccb ._ddfb =false ;}else if len (_ccb ._dfae )==0{if _eabb {_dfa .Log .Debug ("\u0063\u006c\u006f\u0073eP\u0061\u0074\u0068\u0020\u0077\u0069\u0074\u0068\u0020\u006e\u006f\u0020\u0070\u0061t\u0068");
};_ccb ._ddfb =false ;return ;};_ccb ._dfae [len (_ccb ._dfae )-1].close ();if _eabb {_dfa .Log .Info ("\u0063\u006c\u006f\u0073\u0065\u0050\u0061\u0074\u0068\u003a\u0020\u0025\u0073",_ccb );};};func (_dfccf *textWord )toTextMarks (_gbadf *int )[]TextMark {var _bgfac []TextMark ;
for _ ,_agff :=range _dfccf ._afgbc {_bgfac =_abbf (_bgfac ,_gbadf ,_agff .ToTextMark ());};return _bgfac ;};func (_bcf *stateStack )push (_agd *textState ){_dce :=*_agd ;*_bcf =append (*_bcf ,&_dce )};func (_dcf *textObject )getFont (_edef string )(*_ec .PdfFont ,error ){if _dcf ._agbc ._gd !=nil {_dcf ._agbc ._cb ++;
_cgg ,_fcf :=_dcf ._agbc ._gd [_edef ];if _fcf {_cgg ._gee =_dcf ._agbc ._cb ;return _cgg ._egf ,nil ;};};_gage ,_dfcb :=_dcf .getFontDirect (_edef );if _dfcb !=nil {return nil ,_dfcb ;};if _dcf ._agbc ._gd !=nil {_abbc :=fontEntry {_gage ,_dcf ._agbc ._cb };
if len (_dcf ._agbc ._gd )>=_bgbd {var _bdg []string ;for _gagf :=range _dcf ._agbc ._gd {_bdg =append (_bdg ,_gagf );};_cg .Slice (_bdg ,func (_cff ,_cdbg int )bool {return _dcf ._agbc ._gd [_bdg [_cff ]]._gee < _dcf ._agbc ._gd [_bdg [_cdbg ]]._gee });
delete (_dcf ._agbc ._gd ,_bdg [0]);};_dcf ._agbc ._gd [_edef ]=_abbc ;};return _gage ,nil ;};func (_gcbc *textTable )compositeRowCorridors ()map[int ][]float64 {_efeg :=make (map[int ][]float64 ,_gcbc ._daac );if _gca {_dfa .Log .Info ("c\u006f\u006d\u0070\u006f\u0073\u0069t\u0065\u0052\u006f\u0077\u0043\u006f\u0072\u0072\u0069d\u006f\u0072\u0073:\u0020h\u003d\u0025\u0064",_gcbc ._daac );
};for _aacg :=1;_aacg < _gcbc ._daac ;_aacg ++{var _cgaf []compositeCell ;for _dceb :=0;_dceb < _gcbc ._cfffa ;_dceb ++{if _fcac ,_bbfgc :=_gcbc ._gfgf [_dgeff (_dceb ,_aacg )];_bbfgc {_cgaf =append (_cgaf ,_fcac );};};if len (_cgaf )==0{continue ;};_dbdb :=_gagc (_cgaf );
_efeg [_aacg ]=_dbdb ;if _gca {_cd .Printf ("\u0020\u0020\u0020\u0025\u0032\u0064\u003a\u0020\u00256\u002e\u0032\u0066\u000a",_aacg ,_dbdb );};};return _efeg ;};func (_eccg rulingList )log (_ecba string ){if !_ffec {return ;};_dfa .Log .Info ("\u0023\u0023\u0023\u0020\u0025\u0031\u0030\u0073\u003a\u0020\u0076\u0065c\u0073\u003d\u0025\u0073",_ecba ,_eccg .String ());
for _eeeg ,_gcgf :=range _eccg {_cd .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_eeeg ,_gcgf .String ());};};var _dbdd =_a .MustCompile ("\u005e\u005c\u0073\u002a\u0028\u005c\u0064\u002b\u005c\u002e\u003f|\u005b\u0049\u0069\u0076\u005d\u002b\u0029\u005c\u0073\u002a\\\u0029\u003f\u0024");
func (_ggcffg *ruling )alignsSec (_bbfa *ruling )bool {const _cacdc =_fgb +1.0;return _ggcffg ._bbca -_cacdc <=_bbfa ._fcc &&_bbfa ._bbca -_cacdc <=_ggcffg ._fcc ;};func (_agef paraList )toTextMarks ()[]TextMark {_ccfb :=0;var _cggc []TextMark ;for _cegc ,_dcef :=range _agef {if _dcef ._bfeg {continue ;
};_cafc :=_dcef .toTextMarks (&_ccfb );_cggc =append (_cggc ,_cafc ...);if _cegc !=len (_agef )-1{if _bgdg (_dcef ,_agef [_cegc +1]){_cggc =_ced (_cggc ,&_ccfb ,"\u0020");}else {_cggc =_ced (_cggc ,&_ccfb ,"\u000a");_cggc =_ced (_cggc ,&_ccfb ,"\u000a");
};};};_cggc =_ced (_cggc ,&_ccfb ,"\u000a");_cggc =_ced (_cggc ,&_ccfb ,"\u000a");return _cggc ;};func _bdf (_ecd *Extractor ,_bfa *_ec .PdfPageResources ,_dcg _b .GraphicsState ,_dac *textState ,_bbe *stateStack )*textObject {return &textObject {_agbc :_ecd ,_baca :_bfa ,_bgcgd :_dcg ,_efce :_bbe ,_caefc :_dac ,_gcgc :_dg .IdentityMatrix (),_agab :_dg .IdentityMatrix ()};
};type textTable struct{_ec .PdfRectangle ;_cfffa ,_daac int ;_efdfb bool ;_efeaf map[uint64 ]*textPara ;_gfgf map[uint64 ]compositeCell ;};

// ToText returns the page text as a single string.
// Deprecated: This function is deprecated and will be removed in a future major version. Please use
// Text() instead.
func (_cdc PageText )ToText ()string {return _cdc .Text ()};func (_eebcd rulingList )toGrids ()[]rulingList {if _ffec {_dfa .Log .Info ("t\u006f\u0047\u0072\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_eebcd );};_bcfgec :=_eebcd .intersections ();if _ffec {_dfa .Log .Info ("\u0074\u006f\u0047r\u0069\u0064\u0073\u003a \u0076\u0065\u0063\u0073\u003d\u0025\u0064 \u0069\u006e\u0074\u0065\u0072\u0073\u0065\u0063\u0074\u0073\u003d\u0025\u0064\u0020",len (_eebcd ),len (_bcfgec ));
for _ ,_dgeba :=range _fbbfd (_bcfgec ){_cd .Printf ("\u00254\u0064\u003a\u0020\u0025\u002b\u0076\n",_dgeba ,_bcfgec [_dgeba ]);};};_gbbaf :=make (map[int ]intSet ,len (_eebcd ));for _aggcc :=range _eebcd {_abeg :=_eebcd .connections (_bcfgec ,_aggcc );
if len (_abeg )> 0{_gbbaf [_aggcc ]=_abeg ;};};if _ffec {_dfa .Log .Info ("t\u006fG\u0072\u0069\u0064\u0073\u003a\u0020\u0063\u006fn\u006e\u0065\u0063\u0074s=\u0025\u0064",len (_gbbaf ));for _ ,_dgfd :=range _fbbfd (_gbbaf ){_cd .Printf ("\u00254\u0064\u003a\u0020\u0025\u002b\u0076\n",_dgfd ,_gbbaf [_dgfd ]);
};};_aadf :=_cffcb (len (_eebcd ),func (_gggd ,_fgfg int )bool {_cgbg ,_eagfe :=len (_gbbaf [_gggd ]),len (_gbbaf [_fgfg ]);if _cgbg !=_eagfe {return _cgbg > _eagfe ;};return _eebcd .comp (_gggd ,_fgfg );});if _ffec {_dfa .Log .Info ("t\u006fG\u0072\u0069\u0064\u0073\u003a\u0020\u006f\u0072d\u0065\u0072\u0069\u006eg=\u0025\u0076",_aadf );
};_fdgc :=[][]int {{_aadf [0]}};_dfee :for _ ,_bbfd :=range _aadf [1:]{for _bfcaga ,_agbe :=range _fdgc {for _ ,_baad :=range _agbe {if _gbbaf [_baad ].has (_bbfd ){_fdgc [_bfcaga ]=append (_agbe ,_bbfd );continue _dfee ;};};};_fdgc =append (_fdgc ,[]int {_bbfd });
};if _ffec {_dfa .Log .Info ("\u0074o\u0047r\u0069\u0064\u0073\u003a\u0020i\u0067\u0072i\u0064\u0073\u003d\u0025\u0076",_fdgc );};_cg .SliceStable (_fdgc ,func (_cfdf ,_eegd int )bool {return len (_fdgc [_cfdf ])> len (_fdgc [_eegd ])});for _ ,_ggae :=range _fdgc {_cg .Slice (_ggae ,func (_cbga ,_ebgf int )bool {return _eebcd .comp (_ggae [_cbga ],_ggae [_ebgf ])});
};_efdcg :=make ([]rulingList ,len (_fdgc ));for _egaa ,_fdeb :=range _fdgc {_ecda :=make (rulingList ,len (_fdeb ));for _afgc ,_dgcd :=range _fdeb {_ecda [_afgc ]=_eebcd [_dgcd ];};_efdcg [_egaa ]=_ecda ;};if _ffec {_dfa .Log .Info ("\u0074o\u0047r\u0069\u0064\u0073\u003a\u0020g\u0072\u0069d\u0073\u003d\u0025\u002b\u0076",_efdcg );
};var _fabf []rulingList ;for _ ,_gegb :=range _efdcg {if _efcbc ,_fdfef :=_gegb .isActualGrid ();_fdfef {_gegb =_efcbc ;_gegb =_gegb .snapToGroups ();_fabf =append (_fabf ,_gegb );};};if _ffec {_befb ("t\u006fG\u0072\u0069\u0064\u0073\u003a\u0020\u0061\u0063t\u0075\u0061\u006c\u0047ri\u0064\u0073",_fabf );
_dfa .Log .Info ("\u0074\u006f\u0047\u0072\u0069\u0064\u0073\u003a\u0020\u0067\u0072\u0069\u0064\u0073\u003d%\u0064 \u0061\u0063\u0074\u0075\u0061\u006c\u0047\u0072\u0069\u0064\u0073\u003d\u0025\u0064",len (_efdcg ),len (_fabf ));};return _fabf ;};func (_afbbe rulingList )isActualGrid ()(rulingList ,bool ){_ebfa ,_bddd :=_afbbe .augmentGrid ();
if !(len (_ebfa )>=_aeef +1&&len (_bddd )>=_cefc +1){if _ffec {_dfa .Log .Info ("\u0069s\u0041\u0063t\u0075\u0061\u006c\u0047r\u0069\u0064\u003a \u004e\u006f\u0074\u0020\u0061\u006c\u0069\u0067\u006eed\u002e\u0020\u0025d\u0020\u0078 \u0025\u0064\u0020\u003c\u0020\u0025d\u0020\u0078 \u0025\u0064",len (_ebfa ),len (_bddd ),_aeef +1,_cefc +1);
};return nil ,false ;};if _ffec {_dfa .Log .Info ("\u0069\u0073\u0041\u0063\u0074\u0075a\u006c\u0047\u0072\u0069\u0064\u003a\u0020\u0025\u0073\u0020\u003a\u0020\u0025t\u0020\u0026\u0020\u0025\u0074\u0020\u2192 \u0025\u0074",_afbbe ,len (_ebfa )>=2,len (_bddd )>=2,len (_ebfa )>=2&&len (_bddd )>=2);
for _faadg ,_bfab :=range _afbbe {_cd .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0076\u000a",_faadg ,_bfab );};};if _acac {_ggbd ,_bfgf :=_ebfa [0],_ebfa [len (_ebfa )-1];_gbaf ,_dddbd :=_bddd [0],_bddd [len (_bddd )-1];if !(_cagd (_ggbd ._bedda -_gbaf ._bbca )&&_cagd (_bfgf ._bedda -_gbaf ._fcc )&&_cagd (_gbaf ._bedda -_ggbd ._fcc )&&_cagd (_dddbd ._bedda -_ggbd ._bbca )){if _ffec {_dfa .Log .Info ("\u0069\u0073\u0041\u0063\u0074\u0075\u0061l\u0047\u0072\u0069d\u003a\u0020\u0020N\u006f\u0074 \u0061\u006c\u0069\u0067\u006e\u0065d\u002e\n\t\u0076\u0030\u003d\u0025\u0073\u000a\u0009\u0076\u0031\u003d\u0025\u0073\u000a\u0009\u0068\u0030\u003d\u0025\u0073\u000a\u0009\u0068\u0031\u003d\u0025\u0073",_ggbd ,_bfgf ,_gbaf ,_dddbd );
};return nil ,false ;};}else {if !_ebfa .aligned (){if _gaef {_dfa .Log .Info ("i\u0073\u0041\u0063\u0074\u0075\u0061l\u0047\u0072\u0069\u0064\u003a\u0020N\u006f\u0074\u0020\u0061\u006c\u0069\u0067n\u0065\u0064\u0020\u0076\u0065\u0072\u0074\u0073\u002e\u0020%\u0064",len (_ebfa ));
};return nil ,false ;};if !_bddd .aligned (){if _ffec {_dfa .Log .Info ("i\u0073\u0041\u0063\u0074\u0075\u0061l\u0047\u0072\u0069\u0064\u003a\u0020N\u006f\u0074\u0020\u0061\u006c\u0069\u0067n\u0065\u0064\u0020\u0068\u006f\u0072\u007a\u0073\u002e\u0020%\u0064",len (_bddd ));
};return nil ,false ;};};_bdcaa :=append (_ebfa ,_bddd ...);return _bdcaa ,true ;};

// ExtractPageText returns the text contents of `e` (an Extractor for a page) as a PageText.
// TODO(peterwilliams97): The stats complicate this function signature and aren't very useful.
//                        Replace with a function like Extract() (*PageText, error)
func (_afbb *Extractor )ExtractPageText ()(*PageText ,int ,int ,error ){_eef ,_fg ,_bbb ,_fabg :=_afbb .extractPageText (_afbb ._aa ,_afbb ._af ,_dg .IdentityMatrix (),0);if _fabg !=nil {return nil ,0,0,_fabg ;};_eef .computeViews ();_fabg =_ecgf (_eef );
if _fabg !=nil {return nil ,0,0,_fabg ;};return _eef ,_fg ,_bbb ,nil ;};func _geab (_gedac map[int ][]float64 )[]int {_fbbf :=make ([]int ,len (_gedac ));_edfae :=0;for _efgb :=range _gedac {_fbbf [_edfae ]=_efgb ;_edfae ++;};_cg .Ints (_fbbf );return _fbbf ;
};func _ffdab (_aagc func (*wordBag ,*textWord ,float64 )bool ,_fdcb float64 )func (*wordBag ,*textWord )bool {return func (_eeff *wordBag ,_gfca *textWord )bool {return _aagc (_eeff ,_gfca ,_fdcb )};};func _ffbf (_ddead []TextMark ,_daad *int )[]TextMark {_bfbd :=_ddead [len (_ddead )-1];
_fbfg :=[]rune (_bfbd .Text );if len (_fbfg )==1{_ddead =_ddead [:len (_ddead )-1];_cfdae :=_ddead [len (_ddead )-1];*_daad =_cfdae .Offset +len (_cfdae .Text );}else {_gagb :=_gbeb (_bfbd .Text );*_daad +=len (_gagb )-len (_bfbd .Text );_bfbd .Text =_gagb ;
};return _ddead ;};type event struct{_bdcafc float64 ;_bcbdd bool ;_cfbfc int ;};

// Marks returns the TextMark collection for a page. It represents all the text on the page.
func (_gae PageText )Marks ()*TextMarkArray {return &TextMarkArray {_gffb :_gae ._bcbd }};func (_gfgd rulingList )removeDuplicates ()rulingList {if len (_gfgd )==0{return nil ;};_gfgd .sort ();_agde :=rulingList {_gfgd [0]};for _ ,_bedf :=range _gfgd [1:]{if _bedf .equals (_agde [len (_agde )-1]){continue ;
};_agde =append (_agde ,_bedf );};return _agde ;};func (_cfdeb *textPara )depth ()float64 {if _cfdeb ._bfeg {return -1.0;};if len (_cfdeb ._cecf )> 0{return _cfdeb ._cecf [0]._fgcd ;};return _cfdeb ._dgba .depth ();};func (_fcaeb compositeCell )String ()string {_cdgc :="";
if len (_fcaeb .paraList )> 0{_cdgc =_abcg (_fcaeb .paraList .merge ().text (),50);};return _cd .Sprintf ("\u0025\u0036\u002e\u0032\u0066\u0020\u0025\u0064\u0020\u0070\u0061\u0072a\u0073\u0020\u0025\u0071",_fcaeb .PdfRectangle ,len (_fcaeb .paraList ),_cdgc );
};

// String returns a human readable description of `s`.
func (_fbcb intSet )String ()string {var _debf []int ;for _geecd :=range _fbcb {if _fbcb .has (_geecd ){_debf =append (_debf ,_geecd );};};_cg .Ints (_debf );return _cd .Sprintf ("\u0025\u002b\u0076",_debf );};func (_fbaa paraList )extractTables (_ebffc []gridTiling )paraList {if _gca {_dfa .Log .Debug ("\u0065\u0078\u0074r\u0061\u0063\u0074\u0054\u0061\u0062\u006c\u0065\u0073\u003d\u0025\u0064\u0020\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u0078\u003d\u003d\u003d\u003d=\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d",len (_fbaa ));
};if len (_fbaa )< _eaa {return _fbaa ;};_dcdca :=_fbaa .findTables (_ebffc );if _gca {_dfa .Log .Info ("c\u006f\u006d\u0062\u0069\u006e\u0065d\u0020\u0074\u0061\u0062\u006c\u0065s\u0020\u0025\u0064\u0020\u003d\u003d\u003d=\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d=\u003d",len (_dcdca ));
for _gedbg ,_fbeb :=range _dcdca {_fbeb .log (_cd .Sprintf ("c\u006f\u006d\u0062\u0069\u006e\u0065\u0064\u0020\u0025\u0064",_gedbg ));};};return _fbaa .applyTables (_dcdca );};func (_cfff *ruling )intersects (_ccadd *ruling )bool {_daef :=(_cfff ._dgdc ==_cacg &&_ccadd ._dgdc ==_aefb )||(_ccadd ._dgdc ==_cacg &&_cfff ._dgdc ==_aefb );
_cccgg :=func (_afaeb ,_gfaf *ruling )bool {return _afaeb ._bbca -_bffc <=_gfaf ._bedda &&_gfaf ._bedda <=_afaeb ._fcc +_bffc ;};_ffgfa :=_cccgg (_cfff ,_ccadd );_aebdg :=_cccgg (_ccadd ,_cfff );if _ffec {_cd .Printf ("\u0020\u0020\u0020\u0020\u0069\u006e\u0074\u0065\u0072\u0073\u0065\u0063\u0074\u0073\u003a\u0020\u0020\u006fr\u0074\u0068\u006f\u0067\u006f\u006e\u0061l\u003d\u0025\u0074\u0020\u006f\u0031\u003d\u0025\u0074\u0020\u006f2\u003d\u0025\u0074\u0020\u2192\u0020\u0025\u0074\u000a"+"\u0020\u0020\u0020 \u0020\u0020\u0020\u0076\u003d\u0025\u0073\u000a"+" \u0020\u0020\u0020\u0020\u0020\u0077\u003d\u0025\u0073\u000a",_daef ,_ffgfa ,_aebdg ,_daef &&_ffgfa &&_aebdg ,_cfff ,_ccadd );
};return _daef &&_ffgfa &&_aebdg ;};

// ImageExtractOptions contains options for controlling image extraction from
// PDF pages.
type ImageExtractOptions struct{IncludeInlineStencilMasks bool ;};func _afcgda (_bdcdb []_ca .PdfObject )(_cade ,_efdcc float64 ,_dfcg error ){if len (_bdcdb )!=2{return 0,0,_cd .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0073\u003a \u0025\u0064",len (_bdcdb ));
};_fgbb ,_dfcg :=_ca .GetNumbersAsFloat (_bdcdb );if _dfcg !=nil {return 0,0,_dfcg ;};return _fgbb [0],_fgbb [1],nil ;};func _gaga (_gac []*textWord ,_edae float64 ,_ffaf ,_dda rulingList )*wordBag {_fcdg :=_dcff (_gac [0],_edae ,_ffaf ,_dda );for _ ,_dff :=range _gac [1:]{_gbd :=_gedb (_dff ._ddbfa );
_fcdg ._fgg [_gbd ]=append (_fcdg ._fgg [_gbd ],_dff );_fcdg .PdfRectangle =_bedc (_fcdg .PdfRectangle ,_dff .PdfRectangle );};_fcdg .sort ();return _fcdg ;};func (_cac *imageExtractContext )processOperand (_gdg *_b .ContentStreamOperation ,_dd _b .GraphicsState ,_bcc *_ec .PdfPageResources )error {if _gdg .Operand =="\u0042\u0049"&&len (_gdg .Params )==1{_ad ,_adb :=_gdg .Params [0].(*_b .ContentStreamInlineImage );
if !_adb {return nil ;};if _dbaa ,_eff :=_ca .GetBoolVal (_ad .ImageMask );_eff {if _dbaa &&!_cac ._ef .IncludeInlineStencilMasks {return nil ;};};return _cac .extractInlineImage (_ad ,_dd ,_bcc );}else if _gdg .Operand =="\u0044\u006f"&&len (_gdg .Params )==1{_de ,_cdf :=_ca .GetName (_gdg .Params [0]);
if !_cdf {_dfa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0079\u0070\u0065");return _ac ;};_ ,_caef :=_bcc .GetXObjectByName (*_de );switch _caef {case _ec .XObjectTypeImage :return _cac .extractXObjectImage (_de ,_dd ,_bcc );case _ec .XObjectTypeForm :return _cac .extractFormImages (_de ,_dd ,_bcc );
};};return nil ;};func _bbed (_ggcd ,_bbec _ec .PdfRectangle )bool {return _ggcd .Lly <=_bbec .Ury &&_bbec .Lly <=_ggcd .Ury ;};func _gaffa (_cgdgg map[float64 ]map[float64 ]gridTile )[]float64 {_adcbg :=make ([]float64 ,0,len (_cgdgg ));_ggcff :=make (map[float64 ]struct{},len (_cgdgg ));
for _ ,_fecg :=range _cgdgg {for _cbfb :=range _fecg {if _ ,_ebgd :=_ggcff [_cbfb ];_ebgd {continue ;};_adcbg =append (_adcbg ,_cbfb );_ggcff [_cbfb ]=struct{}{};};};_cg .Float64s (_adcbg );return _adcbg ;};var _bb =false ;func _ecdgg (_eeca _ec .PdfRectangle )*ruling {return &ruling {_dgdc :_aefb ,_bedda :_eeca .Ury ,_bbca :_eeca .Llx ,_fcc :_eeca .Urx };
};func (_becgf *ruling )equals (_bbba *ruling )bool {return _becgf ._dgdc ==_bbba ._dgdc &&_fdad (_becgf ._bedda ,_bbba ._bedda )&&_fdad (_becgf ._bbca ,_bbba ._bbca )&&_fdad (_becgf ._fcc ,_bbba ._fcc );};func _eggea (_dbabg []*textMark ,_cbge _ec .PdfRectangle )[]*textWord {var _fecc []*textWord ;
var _ddede *textWord ;if _baae {_dfa .Log .Info ("\u006d\u0061\u006beT\u0065\u0078\u0074\u0057\u006f\u0072\u0064\u0073\u003a\u0020\u0025\u0064\u0020\u006d\u0061\u0072\u006b\u0073",len (_dbabg ));};_gdfgc :=func (){if _ddede !=nil {_acce :=_ddede .computeText ();
if !_edbf (_acce ){_ddede ._dfaagg =_acce ;_fecc =append (_fecc ,_ddede );if _baae {_dfa .Log .Info ("\u0061\u0064\u0064Ne\u0077\u0057\u006f\u0072\u0064\u003a\u0020\u0025\u0064\u003a\u0020\u0077\u006f\u0072\u0064\u003d\u0025\u0073",len (_fecc )-1,_ddede .String ());
for _ceabd ,_baefd :=range _ddede ._afgbc {_cd .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_ceabd ,_baefd .String ());};};};_ddede =nil ;};};for _ ,_cbad :=range _dbabg {if _fbgfe &&_ddede !=nil &&len (_ddede ._afgbc )> 0{_cfae :=_ddede ._afgbc [len (_ddede ._afgbc )-1];
_facda ,_gfbg :=_dcefgg (_cbad ._fggb );_egca ,_egdb :=_dcefgg (_cfae ._fggb );if _gfbg &&!_egdb &&_cfae .inDiacriticArea (_cbad ){_ddede .addDiacritic (_facda );continue ;};if _egdb &&!_gfbg &&_cbad .inDiacriticArea (_cfae ){_ddede ._afgbc =_ddede ._afgbc [:len (_ddede ._afgbc )-1];
_ddede .appendMark (_cbad ,_cbge );_ddede .addDiacritic (_egca );continue ;};};_bdada :=_edbf (_cbad ._fggb );if _bdada {_gdfgc ();continue ;};if _ddede ==nil &&!_bdada {_ddede =_gffbe ([]*textMark {_cbad },_cbge );continue ;};_ddadc :=_ddede ._dbcg ;_eafec :=_gc .Abs (_geec (_cbge ,_cbad )-_ddede ._ddbfa )/_ddadc ;
_deaba :=_dfg (_cbad ,_ddede )/_ddadc ;if _deaba >=_bdce ||!(-_fdef <=_deaba &&_eafec <=_efae ){_gdfgc ();_ddede =_gffbe ([]*textMark {_cbad },_cbge );continue ;};_ddede .appendMark (_cbad ,_cbge );};_gdfgc ();return _fecc ;};func (_aaab *textLine )pullWord (_agcg *wordBag ,_abfg *textWord ,_adfbb int ){_aaab .appendWord (_abfg );
_agcg .removeWord (_abfg ,_adfbb );};func (_eggg *wordBag )empty (_gaac int )bool {_ ,_fbgfa :=_eggg ._fgg [_gaac ];return !_fbgfa };type cachedImage struct{_cdb *_ec .Image ;_gde _ec .PdfColorspace ;};

// String returns a string describing `ma`.
func (_eccc TextMarkArray )String ()string {_ede :=len (_eccc ._gffb );if _ede ==0{return "\u0045\u004d\u0050T\u0059";};_fac :=_eccc ._gffb [0];_ddb :=_eccc ._gffb [_ede -1];return _cd .Sprintf ("\u007b\u0054\u0045\u0058\u0054\u004d\u0041\u0052K\u0041\u0052\u0052AY\u003a\u0020\u0025\u0064\u0020\u0065l\u0065\u006d\u0065\u006e\u0074\u0073\u000a\u0009\u0066\u0069\u0072\u0073\u0074\u003d\u0025s\u000a\u0009\u0020\u006c\u0061\u0073\u0074\u003d%\u0073\u007d",_ede ,_fac ,_ddb );
};func (_efga *subpath )last ()_dg .Point {return _efga ._dgab [len (_efga ._dgab )-1]};func _acdd (_dabe ,_fcea bounded )float64 {return _ebdbb (_dabe )-_ebdbb (_fcea )};

// Tables returns the tables extracted from the page.
func (_ggg PageText )Tables ()[]TextTable {if _gca {_dfa .Log .Info ("\u0054\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_ggg ._ege ));};return _ggg ._ege ;};func (_ccd *PageText )computeViews (){var _dga rulingList ;if _cdbf {_ebbc :=_eaad (_ccd ._fgda );
_dga =append (_dga ,_ebbc ...);};if _gfeb {_agc :=_acdbe (_ccd ._cdbc );_dga =append (_dga ,_agc ...);};_dga ,_ecf :=_dga .toTilings ();var _bga paraList ;_dbde :=len (_ccd ._ecdd );for _aedf :=0;_aedf < 360&&_dbde > 0;_aedf +=90{_ffab :=make ([]*textMark ,0,len (_ccd ._ecdd )-_dbde );
for _ ,_acb :=range _ccd ._ecdd {if _acb ._ggga ==_aedf {_ffab =append (_ffab ,_acb );};};if len (_ffab )> 0{_edb :=_dcee (_ffab ,_ccd ._aea ,_dga ,_ecf );_bga =append (_bga ,_edb ...);_dbde -=len (_ffab );};};_daaa :=new (_db .Buffer );_bga .writeText (_daaa );
_ccd ._ccf =_daaa .String ();_ccd ._bcbd =_bga .toTextMarks ();_ccd ._ege =_bga .tables ();if _gca {_dfa .Log .Info ("\u0063\u006f\u006dpu\u0074\u0065\u0056\u0069\u0065\u0077\u0073\u003a\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003d\u0025\u0064",len (_ccd ._ege ));
};};func (_fgeaa intSet )add (_edab int ){_fgeaa [_edab ]=struct{}{}};func (_dbe rulingList )aligned ()bool {if len (_dbe )< 2{return false ;};_ddgce :=make (map[*ruling ]int );_ddgce [_dbe [0]]=0;for _ ,_dbgc :=range _dbe [1:]{_geda :=false ;for _fgeb :=range _ddgce {if _dbgc .gridIntersecting (_fgeb ){_ddgce [_fgeb ]++;
_geda =true ;break ;};};if !_geda {_ddgce [_dbgc ]=0;};};_fade :=0;for _ ,_edec :=range _ddgce {if _edec ==0{_fade ++;};};_eaef :=float64 (_fade )/float64 (len (_dbe ));_fggfc :=_eaef <=1.0-_ggfe ;if _ffec {_dfa .Log .Info ("\u0061\u006c\u0069\u0067\u006e\u0065\u0064\u003d\u0025\u0074\u0020\u0075\u006em\u0061\u0074\u0063\u0068\u0065\u0064=\u0025\u002e\u0032\u0066\u003d\u0025\u0064\u002f\u0025\u0064\u0020\u0076\u0065c\u0073\u003d\u0025\u0073",_fggfc ,_eaef ,_fade ,len (_dbe ),_dbe .String ());
};return _fggfc ;};func _baa (_eee _dg .Point )_dg .Matrix {return _dg .TranslationMatrix (_eee .X ,_eee .Y )};func (_ggea *wordBag )firstReadingIndex (_abca int )int {_ffda :=_ggea .firstWord (_abca )._dbcg ;_bbcc :=float64 (_abca +1)*_gaeab ;_bedd :=_bbcc +_gega *_ffda ;
_agabf :=_abca ;for _ ,_gdad :=range _ggea .depthBand (_bbcc ,_bedd ){if _adfef (_ggea .firstWord (_gdad ),_ggea .firstWord (_agabf ))< 0{_agabf =_gdad ;};};return _agabf ;};func _ccadc (_babcb ,_agfd float64 )bool {return _babcb /_gc .Max (_fbbc ,_agfd )< _eebf };
func (_gadab *textPara )toCellTextMarks (_bfccb *int )[]TextMark {var _fgff []TextMark ;for _gdabf ,_aebe :=range _gadab ._cecf {_gdca :=_aebe .toTextMarks (_bfccb );_face :=_fcdc &&_aebe .endsInHyphen ()&&_gdabf !=len (_gadab ._cecf )-1;if _face {_gdca =_ffbf (_gdca ,_bfccb );
};_fgff =append (_fgff ,_gdca ...);if !(_face ||_gdabf ==len (_gadab ._cecf )-1){_fgff =_ced (_fgff ,_bfccb ,_fadd (_aebe ._fgcd ,_gadab ._cecf [_gdabf +1]._fgcd ));};};return _fgff ;};func (_acbe paraList )sortReadingOrder (){_dfa .Log .Trace ("\u0073\u006fr\u0074\u0052\u0065\u0061\u0064i\u006e\u0067\u004f\u0072\u0064e\u0072\u003a\u0020\u0070\u0061\u0072\u0061\u0073\u003d\u0025\u0064\u0020\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u0078\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d",len (_acbe ));
if len (_acbe )<=1{return ;};_acbe .computeEBBoxes ();_cg .Slice (_acbe ,func (_fbag ,_gdc int )bool {return _dafd (_acbe [_fbag ],_acbe [_gdc ])<=0});_addb :=_acbe .topoOrder ();_acbe .reorder (_addb );};func (_adgcg *ruling )gridIntersecting (_afccf *ruling )bool {return _fdad (_adgcg ._bbca ,_afccf ._bbca )&&_fdad (_adgcg ._fcc ,_afccf ._fcc );
};func _fadd (_gccd ,_bbdf float64 )string {_aadbe :=!_cdfce (_gccd -_bbdf );if _aadbe {return "\u000a";};return "\u0020";};func (_cbe *wordBag )getDepthIdx (_fded float64 )int {_aaeg :=_cbe .depthIndexes ();_efff :=_gedb (_fded );if _efff < _aaeg [0]{return _aaeg [0];
};if _efff > _aaeg [len (_aaeg )-1]{return _aaeg [len (_aaeg )-1];};return _efff ;};func (_bgbf paraList )inTile (_adgac gridTile )paraList {var _cdfb paraList ;for _ ,_eaba :=range _bgbf {if _adgac .contains (_eaba .PdfRectangle ){_cdfb =append (_cdfb ,_eaba );
};};if _gca {_cd .Printf ("\u0020 \u0020\u0069\u006e\u0054i\u006c\u0065\u003a\u0020\u0020%\u0073 \u0069n\u0073\u0069\u0064\u0065\u003d\u0025\u0064\n",_adgac ,len (_cdfb ));for _fdfa ,_eeed :=range _cdfb {_cd .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_fdfa ,_eeed );
};_cd .Println ("");};return _cdfb ;};func _eaad (_gcdf []pathSection )rulingList {_bffb (_gcdf );if _ffec {_dfa .Log .Info ("\u006d\u0061k\u0065\u0053\u0074\u0072\u006f\u006b\u0065\u0052\u0075\u006c\u0069\u006e\u0067\u0073\u003a\u0020\u0025\u0064\u0020\u0073\u0074\u0072ok\u0065\u0073",len (_gcdf ));
};var _bgfab rulingList ;for _ ,_gcfd :=range _gcdf {for _ ,_dbcf :=range _gcfd ._fgee {if len (_dbcf ._dgab )< 2{continue ;};_ecccg :=_dbcf ._dgab [0];for _ ,_cced :=range _dbcf ._dgab [1:]{if _aeaef ,_ccff :=_bfccf (_ecccg ,_cced ,_gcfd .Color );_ccff {_bgfab =append (_bgfab ,_aeaef );
};_ecccg =_cced ;};};};if _ffec {_dfa .Log .Info ("m\u0061\u006b\u0065\u0053tr\u006fk\u0065\u0052\u0075\u006c\u0069n\u0067\u0073\u003a\u0020\u0025\u0073",_bgfab );};return _bgfab ;};func (_dcbf gridTiling )complete ()bool {for _ ,_acffe :=range _dcbf ._aeg {for _ ,_dgdd :=range _acffe {if !_dgdd .complete (){return false ;
};};};return true ;};

// Len returns the number of TextMarks in `ma`.
func (_gdga *TextMarkArray )Len ()int {if _gdga ==nil {return 0;};return len (_gdga ._gffb );};func (_bade *wordBag )pullWord (_bfca *textWord ,_gdaba int ,_bfb map[int ]map[*textWord ]struct{}){_bade .PdfRectangle =_bedc (_bade .PdfRectangle ,_bfca .PdfRectangle );
if _bfca ._dbcg > _bade ._dca {_bade ._dca =_bfca ._dbcg ;};_bade ._fgg [_gdaba ]=append (_bade ._fgg [_gdaba ],_bfca );_bfb [_gdaba ][_bfca ]=struct{}{};};func _geec (_ecdf _ec .PdfRectangle ,_efgc bounded )float64 {return _ecdf .Ury -_efgc .bbox ().Lly };
func (_ggbf *textObject )setCharSpacing (_aced float64 ){if _ggbf ==nil {return ;};_ggbf ._caefc ._gce =_aced ;if _bffe {_dfa .Log .Info ("\u0073\u0065t\u0043\u0068\u0061\u0072\u0053\u0070\u0061\u0063\u0069\u006e\u0067\u003a\u0020\u0025\u002e\u0032\u0066\u0020\u0073\u0074\u0061\u0074e=\u0025\u0073",_aced ,_ggbf ._caefc .String ());
};};

// String returns a description of `tm`.
func (_edg *textMark )String ()string {return _cd .Sprintf ("\u0025\u002e\u0032f \u0066\u006f\u006e\u0074\u0073\u0069\u007a\u0065\u003d\u0025\u002e\u0032\u0066\u0020\u0022\u0025\u0073\u0022",_edg .PdfRectangle ,_edg ._egdcg ,_edg ._fggb );};func (_egbg rulingList )findPrimSec (_gcab ,_dafdb float64 )*ruling {for _ ,_afgf :=range _egbg {if _cdfce (_afgf ._bedda -_gcab )&&_afgf ._bbca -_bffc <=_dafdb &&_dafdb <=_afgf ._fcc +_bffc {return _afgf ;
};};return nil ;};func (_bgadb *compositeCell )updateBBox (){for _ ,_bfcag :=range _bgadb .paraList {_bgadb .PdfRectangle =_bedc (_bgadb .PdfRectangle ,_bfcag .PdfRectangle );};};func _edf (_bbfg *wordBag ,_baac *textWord ,_gcdb float64 )bool {return _baac .Llx < _bbfg .Urx +_gcdb &&_bbfg .Llx -_gcdb < _baac .Urx ;
};const (_fcdc =true ;_ebf =true ;_fbgfe =true ;_dbga =false ;_fddeb =false ;_bfcb =6;_bdcd =3.0;_dge =200;_gcac =true ;_cbeb =true ;_cdbf =true ;_gfeb =true ;_acac =false ;);func (_gece *textWord )addDiacritic (_ffdg string ){_dgeca :=_gece ._afgbc [len (_gece ._afgbc )-1];
_dgeca ._fggb +=_ffdg ;_dgeca ._fggb =_ea .NFKC .String (_dgeca ._fggb );};func _bfce (_abb _dg .Matrix )_dg .Point {_ffeda ,_badb :=_abb .Translation ();return _dg .Point {X :_ffeda ,Y :_badb };};func (_gbg *textObject )setWordSpacing (_gcfe float64 ){if _gbg ==nil {return ;
};_gbg ._caefc ._gaaa =_gcfe ;};func (_bgebe *textTable )bbox ()_ec .PdfRectangle {return _bgebe .PdfRectangle };func (_fafe *textPara )text ()string {_cfec :=new (_db .Buffer );_fafe .writeText (_cfec );return _cfec .String ();};func (_ccggf intSet )del (_ccbf int ){delete (_ccggf ,_ccbf )};
var _gafag =TextMark {Text :"\u005b\u0058\u005d",Original :"\u0020",Meta :true ,FillColor :_dc .White ,StrokeColor :_dc .White };type fontEntry struct{_egf *_ec .PdfFont ;_gee int64 ;};func (_gccdd compositeCell )hasLines (_acdcc []*textLine )bool {for _ccfd ,_bdda :=range _acdcc {_fdfce :=_adef (_gccdd .PdfRectangle ,_bdda .PdfRectangle );
if _gca {_cd .Printf ("\u0020\u0020\u0020\u0020\u0020\u0020\u005e\u005e\u005e\u0069\u006e\u0074\u0065\u0072\u0073e\u0063t\u0073\u003d\u0025\u0074\u0020\u0025\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u000a",_fdfce ,_ccfd ,len (_acdcc ));_cd .Printf ("\u0020\u0020\u0020\u0020  \u005e\u005e\u005e\u0063\u006f\u006d\u0070\u006f\u0073\u0069\u0074\u0065\u003d\u0025s\u000a",_gccdd );
_cd .Printf ("\u0020 \u0020 \u0020\u0020\u0020\u006c\u0069\u006e\u0065\u003d\u0025\u0073\u000a",_bdda );};if _fdfce {return true ;};};return false ;};func _adfef (_cefe ,_cgbe bounded )float64 {return _cefe .bbox ().Llx -_cgbe .bbox ().Llx };func _efeb (_faaba ,_becdc int )int {if _faaba < _becdc {return _faaba ;
};return _becdc ;};func (_aaeb *wordBag )minDepth ()float64 {return _aaeb ._dfcc -(_aaeb .Ury -_aaeb ._dca )};func (_ggcc *textTable )put (_fbbab ,_bfegd int ,_dabfc *textPara ){_ggcc ._efeaf [_dgeff (_fbbab ,_bfegd )]=_dabfc ;};func (_afg *wordBag )depthIndexes ()[]int {if len (_afg ._fgg )==0{return nil ;
};_bfbf :=make ([]int ,len (_afg ._fgg ));_caf :=0;for _egef :=range _afg ._fgg {_bfbf [_caf ]=_egef ;_caf ++;};_cg .Ints (_bfbf );return _bfbf ;};func (_gdce paraList )reorder (_aefg []int ){_egec :=make (paraList ,len (_gdce ));for _afdg ,_abfa :=range _aefg {_egec [_afdg ]=_gdce [_abfa ];
};copy (_gdce ,_egec );};func (_dfd *shapesState )newSubPath (){_dfd .clearPath ();if _eabb {_dfa .Log .Info ("\u006e\u0065\u0077\u0053\u0075\u0062\u0050\u0061\u0074h\u003a\u0020\u0025\u0073",_dfd );};};type paraList []*textPara ;type ruling struct{_dgdc rulingKind ;
_bcfff markKind ;_dc .Color ;_bedda float64 ;_bbca float64 ;_fcc float64 ;_dedc float64 ;};func (_adbe compositeCell )parasBBox ()(paraList ,_ec .PdfRectangle ){return _adbe .paraList ,_adbe .PdfRectangle ;};func _dabfg (_fbdc float64 )float64 {return _gbcf *_gc .Round (_fbdc /_gbcf )};
func _dbda (_caefb ,_bbaa _dg .Point )rulingKind {_cbfcg :=_gc .Abs (_caefb .X -_bbaa .X );_cebgb :=_gc .Abs (_caefb .Y -_bbaa .Y );return _afcd (_cbfcg ,_cebgb ,_cgef );};type rulingList []*ruling ;func (_ecbf *shapesState )fill (_dddb *[]pathSection ){_gced :=pathSection {_fgee :_ecbf ._dfae ,Color :_ecbf ._gcea .getFillColor ()};
*_dddb =append (*_dddb ,_gced );if _ffec {_acfe :=_gced .bbox ();_cd .Printf ("\u0020 \u0020\u0020\u0046\u0049\u004c\u004c\u003a %\u0032\u0064\u0020\u0066\u0069\u006c\u006c\u0073\u0020\u0028\u0025\u0064\u0020\u006ee\u0077\u0029 \u0073\u0073\u003d%\u0073\u0020\u0063\u006f\u006c\u006f\u0072\u003d\u0025\u0033\u0076\u0020\u0025\u0036\u002e\u0032f\u003d\u00256.\u0032\u0066\u0078%\u0036\u002e\u0032\u0066\u000a",len (*_dddb ),len (_gced ._fgee ),_ecbf ,_gced .Color ,_acfe ,_acfe .Width (),_acfe .Height ());
if _cbdd {for _gbgg ,_edba :=range _gced ._fgee {_cd .Printf ("\u0025\u0038\u0064\u003a\u0020\u0025\u0073\u000a",_gbgg ,_edba );if _gbgg ==10{break ;};};};};};func _fedg (_fdbe _ec .PdfRectangle ,_abdd []*textLine )*textPara {return &textPara {PdfRectangle :_fdbe ,_cecf :_abdd };
};func (_cgcgb rulingList )primMinMax ()(float64 ,float64 ){_deba ,_dcbcd :=_cgcgb [0]._bedda ,_cgcgb [0]._bedda ;for _ ,_cfgd :=range _cgcgb [1:]{if _cfgd ._bedda < _deba {_deba =_cfgd ._bedda ;}else if _cfgd ._bedda > _dcbcd {_dcbcd =_cfgd ._bedda ;};
};return _deba ,_dcbcd ;};func (_gbbb *stateStack )size ()int {return len (*_gbbb )};func (_bbcdc paraList )merge ()*textPara {_dfa .Log .Trace ("\u006d\u0065\u0072\u0067\u0065:\u0020\u0070\u0061\u0072\u0061\u0073\u003d\u0025\u0064\u0020\u003d\u003d\u003d=\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u0078\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d",len (_bbcdc ));
if len (_bbcdc )==0{return nil ;};_bbcdc .sortReadingOrder ();_bgffb :=_bbcdc [0].PdfRectangle ;_abgcf :=_bbcdc [0]._cecf ;for _ ,_ceef :=range _bbcdc [1:]{_bgffb =_bedc (_bgffb ,_ceef .PdfRectangle );_abgcf =append (_abgcf ,_ceef ._cecf ...);};return _fedg (_bgffb ,_abgcf );
};func (_gfeg *textObject )getStrokeColor ()_dc .Color {return _fdgf (_gfeg ._bgcgd .ColorspaceStroking ,_gfeg ._bgcgd .ColorStroking );};

// BBox returns the smallest axis-aligned rectangle that encloses all the TextMarks in `ma`.
func (_agfa *TextMarkArray )BBox ()(_ec .PdfRectangle ,bool ){var _eeab _ec .PdfRectangle ;_gge :=false ;for _ ,_dbab :=range _agfa ._gffb {if _dbab .Meta ||_edbf (_dbab .Text ){continue ;};if _gge {_eeab =_bedc (_eeab ,_dbab .BBox );}else {_eeab =_dbab .BBox ;
_gge =true ;};};return _eeab ,_gge ;};func (_dfce *textObject )getFontDict (_gbba string )(_bdfb _ca .PdfObject ,_fbgg error ){_egde :=_dfce ._baca ;if _egde ==nil {_dfa .Log .Debug ("g\u0065\u0074\u0046\u006f\u006e\u0074D\u0069\u0063\u0074\u002e\u0020\u004eo\u0020\u0072\u0065\u0073\u006f\u0075\u0072c\u0065\u0073\u002e\u0020\u006e\u0061\u006d\u0065\u003d\u0025#\u0071",_gbba );
return nil ,nil ;};_bdfb ,_efea :=_egde .GetFontByName (_ca .PdfObjectName (_gbba ));if !_efea {_dfa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0067\u0065t\u0046\u006f\u006et\u0044\u0069\u0063\u0074\u003a\u0020\u0046\u006f\u006et \u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020\u006e\u0061m\u0065\u003d%\u0023\u0071",_gbba );
return nil ,_e .New ("f\u006f\u006e\u0074\u0020no\u0074 \u0069\u006e\u0020\u0072\u0065s\u006f\u0075\u0072\u0063\u0065\u0073");};return _bdfb ,nil ;};func _efgac (_fafg *wordBag ,_aacd int )*textLine {_daaeb :=_fafg .firstWord (_aacd );_acgc :=textLine {PdfRectangle :_daaeb .PdfRectangle ,_gbfeg :_daaeb ._dbcg ,_fgcd :_daaeb ._ddbfa };
_acgc .pullWord (_fafg ,_daaeb ,_aacd );return &_acgc ;};func (_abba *textTable )subdivide ()*textTable {_abba .logComposite ("\u0073u\u0062\u0064\u0069\u0076\u0069\u0064e");_fdag :=_abba .compositeRowCorridors ();_aebcf :=_abba .compositeColCorridors ();
if _gca {_dfa .Log .Info ("\u0073u\u0062\u0064i\u0076\u0069\u0064\u0065:\u000a\u0009\u0072o\u0077\u0043\u006f\u0072\u0072\u0069\u0064\u006f\u0072s=\u0025\u0073\u000a\t\u0063\u006fl\u0043\u006f\u0072\u0072\u0069\u0064o\u0072\u0073=\u0025\u0073",_cbae (_fdag ),_cbae (_aebcf ));
};if len (_fdag )==0||len (_aebcf )==0{return _abba ;};_ebcb (_fdag );_ebcb (_aebcf );if _gca {_dfa .Log .Info ("\u0073\u0075\u0062\u0064\u0069\u0076\u0069\u0064\u0065\u0020\u0066\u0069\u0078\u0065\u0064\u003a\u000a\u0009r\u006f\u0077\u0043\u006f\u0072\u0072\u0069d\u006f\u0072\u0073\u003d\u0025\u0073\u000a\u0009\u0063\u006f\u006cC\u006f\u0072\u0072\u0069\u0064\u006f\u0072\u0073\u003d\u0025\u0073",_cbae (_fdag ),_cbae (_aebcf ));
};_adbb ,_bbbeg :=_aceb (_abba ._daac ,_fdag );_efedb ,_gcbg :=_aceb (_abba ._cfffa ,_aebcf );_cgbgf :=make (map[uint64 ]*textPara ,_gcbg *_bbbeg );_aeec :=&textTable {PdfRectangle :_abba .PdfRectangle ,_efdfb :_abba ._efdfb ,_daac :_bbbeg ,_cfffa :_gcbg ,_efeaf :_cgbgf };
if _gca {_dfa .Log .Info ("\u0073\u0075b\u0064\u0069\u0076\u0069\u0064\u0065\u003a\u0020\u0063\u006f\u006d\u0070\u006f\u0073\u0069\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0078\u0020\u0025\u0064\u0020\u0063\u0065\u006c\u006c\u0073\u003d\u0020\u0025\u0064\u0020\u0078\u0020\u0025\u0064\u000a"+"\u0009\u0072\u006f\u0077\u0043\u006f\u0072\u0072\u0069\u0064\u006f\u0072s\u003d\u0025\u0073\u000a"+"\u0009\u0063\u006f\u006c\u0043\u006f\u0072\u0072\u0069\u0064\u006f\u0072s\u003d\u0025\u0073\u000a"+"\u0009\u0079\u004f\u0066\u0066\u0073\u0065\u0074\u0073=\u0025\u002b\u0076\u000a"+"\u0009\u0078\u004f\u0066\u0066\u0073\u0065\u0074\u0073\u003d\u0025\u002b\u0076",_abba ._cfffa ,_abba ._daac ,_gcbg ,_bbbeg ,_cbae (_fdag ),_cbae (_aebcf ),_adbb ,_efedb );
};for _cba :=0;_cba < _abba ._daac ;_cba ++{_cgbb :=_adbb [_cba ];for _gdade :=0;_gdade < _abba ._cfffa ;_gdade ++{_efbd :=_efedb [_gdade ];if _gca {_cd .Printf ("\u0025\u0036\u0064\u002c %\u0032\u0064\u003a\u0020\u0078\u0030\u003d\u0025\u0064\u0020\u0079\u0030\u003d\u0025d\u000a",_gdade ,_cba ,_efbd ,_cgbb );
};_eddg ,_dacdf :=_abba ._gfgf [_dgeff (_gdade ,_cba )];if !_dacdf {continue ;};_fagb :=_eddg .split (_fdag [_cba ],_aebcf [_gdade ]);for _fgeee :=0;_fgeee < _fagb ._daac ;_fgeee ++{for _bedg :=0;_bedg < _fagb ._cfffa ;_bedg ++{_cddg :=_fagb .get (_bedg ,_fgeee );
_aeec .put (_efbd +_bedg ,_cgbb +_fgeee ,_cddg );if _gca {_cd .Printf ("\u0025\u0038\u0064\u002c\u0020\u0025\u0032\u0064\u003a\u0020\u0025\u0073\u000a",_efbd +_bedg ,_cgbb +_fgeee ,_cddg );};};};};};return _aeec ;};func (_aafca rulingList )primaries ()[]float64 {_acfg :=make (map[float64 ]struct{},len (_aafca ));
for _ ,_fbaf :=range _aafca {_acfg [_fbaf ._bedda ]=struct{}{};};_ebadc :=make ([]float64 ,len (_acfg ));_gfdcf :=0;for _eafe :=range _acfg {_ebadc [_gfdcf ]=_eafe ;_gfdcf ++;};_cg .Float64s (_ebadc );return _ebadc ;};func (_dgcb rulingList )mergePrimary ()float64 {_eaga :=_dgcb [0]._bedda ;
for _ ,_dcab :=range _dgcb [1:]{_eaga +=_dcab ._bedda ;};return _eaga /float64 (len (_dgcb ));};func _dcac (_cdbb []rulingList )(rulingList ,rulingList ){var _egae rulingList ;for _ ,_cfba :=range _cdbb {_egae =append (_egae ,_cfba ...);};return _egae .vertsHorzs ();
};type rulingKind int ;func (_ccgg rulingList )connections (_ecce map[int ]intSet ,_gdfg int )intSet {_faff :=make (intSet );_cgcc :=make (intSet );var _adcaf func (int );_adcaf =func (_affcb int ){if !_cgcc .has (_affcb ){_cgcc .add (_affcb );for _eded :=range _ccgg {if _ecce [_eded ].has (_affcb ){_faff .add (_eded );
};};for _aage :=range _ccgg {if _faff .has (_aage ){_adcaf (_aage );};};};};_adcaf (_gdfg );return _faff ;};func (_fge *textObject )checkOp (_ageg *_b .ContentStreamOperation ,_bba int ,_aeeb bool )(_ccad bool ,_eebc error ){if _fge ==nil {var _ddgfe []_ca .PdfObject ;
if _bba > 0{_ddgfe =_ageg .Params ;if len (_ddgfe )> _bba {_ddgfe =_ddgfe [:_bba ];};};_dfa .Log .Debug ("\u0025\u0023q \u006f\u0070\u0065r\u0061\u006e\u0064\u0020out\u0073id\u0065\u0020\u0074\u0065\u0078\u0074\u002e p\u0061\u0072\u0061\u006d\u0073\u003d\u0025+\u0076",_ageg .Operand ,_ddgfe );
};if _bba >=0{if len (_ageg .Params )!=_bba {if _aeeb {_eebc =_e .New ("\u0069n\u0063\u006f\u0072\u0072e\u0063\u0074\u0020\u0070\u0061r\u0061m\u0065t\u0065\u0072\u0020\u0063\u006f\u0075\u006et");};_dfa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0025\u0023\u0071\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020h\u0061\u0076\u0065\u0020\u0025\u0064\u0020i\u006e\u0070\u0075\u0074\u0020\u0070\u0061\u0072\u0061\u006d\u0073,\u0020\u0067\u006f\u0074\u0020\u0025\u0064\u0020\u0025\u002b\u0076",_ageg .Operand ,_bba ,len (_ageg .Params ),_ageg .Params );
return false ,_eebc ;};};return true ,nil ;};func _cccgd (_eacd map[float64 ]map[float64 ]gridTile )[]float64 {_dgdca :=make ([]float64 ,0,len (_eacd ));for _cgdg :=range _eacd {_dgdca =append (_dgdca ,_cgdg );};_cg .Float64s (_dgdca );_gcdaa :=len (_dgdca );
for _gdcg :=0;_gdcg < _gcdaa /2;_gdcg ++{_dgdca [_gdcg ],_dgdca [_gcdaa -1-_gdcg ]=_dgdca [_gcdaa -1-_gdcg ],_dgdca [_gdcg ];};return _dgdca ;};func _dcefgg (_fdba string )(string ,bool ){_gcfef :=[]rune (_fdba );if len (_gcfef )!=1{return "",false ;};
_fbbdb ,_cdgbb :=_gfebd [_gcfef [0]];return _fbbdb ,_cdgbb ;};func _afaf (_ffcc map[float64 ]gridTile )[]float64 {_ffgd :=make ([]float64 ,0,len (_ffcc ));for _bedef :=range _ffcc {_ffgd =append (_ffgd ,_bedef );};_cg .Float64s (_ffgd );return _ffgd ;};
func (_edbd *textTable )depth ()float64 {_bdag :=1e10;for _dacc :=0;_dacc < _edbd ._cfffa ;_dacc ++{_gfae :=_edbd .get (_dacc ,0);if _gfae ==nil ||_gfae ._bfeg {continue ;};_bdag =_gc .Min (_bdag ,_gfae .depth ());};return _bdag ;};

// TableCell is a cell in a TextTable.
type TableCell struct{

// Text is the extracted text.
Text string ;

// Marks returns the TextMarks corresponding to the text in Text.
Marks TextMarkArray ;};func (_defc rulingList )asTiling ()gridTiling {if _bdgac {_dfa .Log .Info ("r\u0075\u006ci\u006e\u0067\u004c\u0069\u0073\u0074\u002e\u0061\u0073\u0054\u0069\u006c\u0069\u006e\u0067\u003a\u0020\u0076\u0065\u0063s\u003d\u0025\u0064\u0020\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d=\u003d\u003d\u003d\u003d\u003d\u002b\u002b\u002b\u0020\u003d\u003d\u003d\u003d=\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d=\u003d",len (_defc ));
};for _cfef ,_fegde :=range _defc [1:]{_ggbfe :=_defc [_cfef ];if _ggbfe .alignsPrimary (_fegde )&&_ggbfe .alignsSec (_fegde ){_dfa .Log .Error ("a\u0073\u0054\u0069\u006c\u0069\u006e\u0067\u003a\u0020\u0044\u0075\u0070\u006c\u0069\u0063\u0061\u0074\u0065 \u0072\u0075\u006c\u0069\u006e\u0067\u0073\u002e\u000a\u0009v=\u0025\u0073\u000a\t\u0077=\u0025\u0073",_fegde ,_ggbfe );
};};_defc .sortStrict ();_defc .log ("\u0073n\u0061\u0070\u0070\u0065\u0064");_baef ,_acaf :=_defc .vertsHorzs ();_aecfg :=_baef .primaries ();_bedb :=_acaf .primaries ();_bdgc :=len (_aecfg )-1;_babcg :=len (_bedb )-1;if _bdgc ==0||_babcg ==0{return gridTiling {};
};_dfff :=_ec .PdfRectangle {Llx :_aecfg [0],Urx :_aecfg [_bdgc ],Lly :_bedb [0],Ury :_bedb [_babcg ]};if _bdgac {_dfa .Log .Info ("\u0072\u0075l\u0069\u006e\u0067\u004c\u0069\u0073\u0074\u002e\u0061\u0073\u0054\u0069\u006c\u0069\u006e\u0067\u003a\u0020\u0076\u0065\u0072\u0074s=\u0025\u0064",len (_baef ));
for _egaef ,_bbgg :=range _baef {_cd .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_egaef ,_bbgg );};_dfa .Log .Info ("\u0072\u0075l\u0069\u006e\u0067\u004c\u0069\u0073\u0074\u002e\u0061\u0073\u0054\u0069\u006c\u0069\u006e\u0067\u003a\u0020\u0068\u006f\u0072\u007as=\u0025\u0064",len (_acaf ));
for _fcdgf ,_bfgd :=range _acaf {_cd .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_fcdgf ,_bfgd );};_dfa .Log .Info ("\u0072\u0075\u006c\u0069\u006eg\u004c\u0069\u0073\u0074\u002e\u0061\u0073\u0054\u0069\u006c\u0069\u006e\u0067:\u0020\u0020\u0077\u0078\u0068\u003d\u0025\u0064\u0078\u0025\u0064\u000a\u0009\u006c\u006c\u0078\u003d\u0025\u002e\u0032\u0066\u000a\u0009\u006c\u006c\u0079\u003d\u0025\u002e\u0032f",_bdgc ,_babcg ,_aecfg ,_bedb );
};_dcacc :=make ([]gridTile ,_bdgc *_babcg );for _bdfdf :=_babcg -1;_bdfdf >=0;_bdfdf --{_gcfc :=_bedb [_bdfdf ];_edcgd :=_bedb [_bdfdf +1];for _cebee :=0;_cebee < _bdgc ;_cebee ++{_adga :=_aecfg [_cebee ];_afgb :=_aecfg [_cebee +1];_befed :=_baef .findPrimSec (_adga ,_gcfc );
_fgbe :=_baef .findPrimSec (_afgb ,_gcfc );_feab :=_acaf .findPrimSec (_gcfc ,_adga );_beee :=_acaf .findPrimSec (_edcgd ,_adga );_ggead :=_ec .PdfRectangle {Llx :_adga ,Urx :_afgb ,Lly :_gcfc ,Ury :_edcgd };_afdd :=_bfegc (_ggead ,_befed ,_fgbe ,_feab ,_beee );
_dcacc [_bdfdf *_bdgc +_cebee ]=_afdd ;if _bdgac {_cd .Printf ("\u0020\u0020\u0078\u003d\u0025\u0032\u0064\u0020\u0079\u003d\u0025\u0032\u0064\u003a\u0020%\u0073 \u0025\u0036\u002e\u0032\u0066\u0020\u0078\u0020\u0025\u0036\u002e\u0032\u0066\u000a",_cebee ,_bdfdf ,_afdd .String (),_afdd .Width (),_afdd .Height ());
};};};if _bdgac {_dfa .Log .Info ("r\u0075\u006c\u0069\u006e\u0067\u004c\u0069\u0073\u0074.\u0061\u0073\u0054\u0069\u006c\u0069\u006eg:\u0020\u0063\u006f\u0061l\u0065\u0073\u0063\u0065\u0020\u0068\u006f\u0072\u0069zo\u006e\u0074a\u006c\u002e\u0020\u0025\u0036\u002e\u0032\u0066",_dfff );
};_bffag :=make ([]map[float64 ]gridTile ,_babcg );for _dcdcd :=_babcg -1;_dcdcd >=0;_dcdcd --{if _bdgac {_cd .Printf ("\u0020\u0020\u0079\u003d\u0025\u0032\u0064\u000a",_dcdcd );};_bffag [_dcdcd ]=make (map[float64 ]gridTile ,_bdgc );for _dagf :=0;_dagf < _bdgc ;
_dagf ++{_gdcb :=_dcacc [_dcdcd *_bdgc +_dagf ];if _bdgac {_cd .Printf ("\u0020\u0020\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_dagf ,_gdcb );};if !_gdcb ._edfa {continue ;};_degbb :=_dagf ;for _fbgd :=_dagf +1;!_gdcb ._agdea &&_fbgd < _bdgc ;_fbgd ++{_gbdc :=_dcacc [_dcdcd *_bdgc +_fbgd ];
_gdcb .Urx =_gbdc .Urx ;_gdcb ._deea =_gdcb ._deea ||_gbdc ._deea ;_gdcb ._cabd =_gdcb ._cabd ||_gbdc ._cabd ;_gdcb ._agdea =_gbdc ._agdea ;if _bdgac {_cd .Printf ("\u0020 \u0020%\u0034\u0064\u003a\u0020\u0025s\u0020\u2192 \u0025\u0073\u000a",_fbgd ,_gbdc ,_gdcb );
};_degbb =_fbgd ;};if _bdgac {_cd .Printf (" \u0020 \u0025\u0032\u0064\u0020\u002d\u0020\u0025\u0032d\u0020\u2192\u0020\u0025s\n",_dagf ,_degbb ,_gdcb );};_dagf =_degbb ;_bffag [_dcdcd ][_gdcb .Llx ]=_gdcb ;};};_cbgf :=make (map[float64 ]map[float64 ]gridTile ,_babcg );
_acdbb :=make (map[float64 ]map[float64 ]struct{},_babcg );for _bcddd :=_babcg -1;_bcddd >=0;_bcddd --{_fgef :=_dcacc [_bcddd *_bdgc ].Lly ;_cbgf [_fgef ]=make (map[float64 ]gridTile ,_bdgc );_acdbb [_fgef ]=make (map[float64 ]struct{},_bdgc );};if _bdgac {_dfa .Log .Info ("\u0072u\u006c\u0069n\u0067\u004c\u0069s\u0074\u002e\u0061\u0073\u0054\u0069\u006ci\u006e\u0067\u003a\u0020\u0063\u006fa\u006c\u0065\u0073\u0063\u0065\u0020\u0076\u0065\u0072\u0074\u0069c\u0061\u006c\u002e\u0020\u0025\u0036\u002e\u0032\u0066",_dfff );
};for _dfade :=_babcg -1;_dfade >=0;_dfade --{_fgaa :=_dcacc [_dfade *_bdgc ].Lly ;_eegdf :=_bffag [_dfade ];if _bdgac {_cd .Printf ("\u0020\u0020\u0079\u003d\u0025\u0032\u0064\u000a",_dfade );};for _ ,_dcefg :=range _afaf (_eegdf ){if _ ,_daag :=_acdbb [_fgaa ][_dcefg ];
_daag {continue ;};_dada :=_eegdf [_dcefg ];if _bdgac {_cd .Printf (" \u0020\u0020\u0020\u0020\u0076\u0030\u003d\u0025\u0073\u000a",_dada .String ());};for _gbff :=_dfade -1;_gbff >=0;_gbff --{if _dada ._cabd {break ;};_beeac :=_bffag [_gbff ];_bde ,_dacda :=_beeac [_dcefg ];
if !_dacda {break ;};if _bde .Urx !=_dada .Urx {break ;};_dada ._cabd =_bde ._cabd ;_dada .Lly =_bde .Lly ;if _bdgac {_cd .Printf ("\u0020\u0020\u0020\u0020  \u0020\u0020\u0076\u003d\u0025\u0073\u0020\u0076\u0030\u003d\u0025\u0073\u000a",_bde .String (),_dada .String ());
};_acdbb [_bde .Lly ][_bde .Llx ]=struct{}{};};if _dfade ==0{_dada ._cabd =true ;};if _dada .complete (){_cbgf [_fgaa ][_dcefg ]=_dada ;};};};_acgf :=gridTiling {PdfRectangle :_dfff ,_gcfbf :_gaffa (_cbgf ),_ebfd :_cccgd (_cbgf ),_aeg :_cbgf };_acgf .log ("\u0043r\u0065\u0061\u0074\u0065\u0064");
return _acgf ;};

// String returns a description of `w`.
func (_fdcc *textWord )String ()string {return _cd .Sprintf ("\u0025\u002e2\u0066\u0020\u0025\u0036\u002e\u0032\u0066\u0020\u0066\u006f\u006e\u0074\u0073\u0069\u007a\u0065\u003d\u0025\u002e\u0032\u0066\u0020\"%\u0073\u0022",_fdcc ._ddbfa ,_fdcc .PdfRectangle ,_fdcc ._dbcg ,_fdcc ._dfaagg );
};func (_aba *textObject )setFont (_abdb string ,_ffgg float64 )error {if _aba ==nil {return nil ;};_aba ._caefc ._badf =_ffgg ;_gbbd ,_gcge :=_aba .getFont (_abdb );if _gcge !=nil {return _gcge ;};_aba ._caefc ._bdc =_gbbd ;return nil ;};

// String returns a description of `k`.
func (_gbbbc markKind )String ()string {_ddfd ,_dfb :=_gcfeb [_gbbbc ];if !_dfb {return _cd .Sprintf ("\u004e\u006f\u0074\u0020\u0061\u0020\u006d\u0061\u0072k\u003a\u0020\u0025\u0064",_gbbbc );};return _ddfd ;};type pathSection struct{_fgee []*subpath ;
_dc .Color ;};func _fege (_cgcbd _ec .PdfRectangle )*ruling {return &ruling {_dgdc :_cacg ,_bedda :_cgcbd .Urx ,_bbca :_cgcbd .Lly ,_fcc :_cgcbd .Ury };};func _gffbe (_eegdd []*textMark ,_deaa _ec .PdfRectangle )*textWord {_dcgc :=_eegdd [0].PdfRectangle ;
_aeaf :=_eegdd [0]._egdcg ;for _ ,_gabe :=range _eegdd [1:]{_dcgc =_bedc (_dcgc ,_gabe .PdfRectangle );if _gabe ._egdcg > _aeaf {_aeaf =_gabe ._egdcg ;};};return &textWord {PdfRectangle :_dcgc ,_afgbc :_eegdd ,_ddbfa :_deaa .Ury -_dcgc .Lly ,_dbcg :_aeaf };
};func _ecgf (_gfacg *PageText )error {_dcaa :=_ff .GetLicenseKey ();if _dcaa !=nil &&_dcaa .IsLicensed ()||_bb {return nil ;};_cd .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_cd .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _e .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};func _accd (_gfbc []*textWord ,_fceag int )[]*textWord {_bgcfb :=len (_gfbc );copy (_gfbc [_fceag :],_gfbc [_fceag +1:]);
return _gfbc [:_bgcfb -1];};type textState struct{_gce float64 ;_gaaa float64 ;_faf float64 ;_abe float64 ;_badf float64 ;_gdgb RenderMode ;_ceg float64 ;_bdc *_ec .PdfFont ;_cce _ec .PdfRectangle ;_dede int ;_gfd int ;};

// TextTable represents a table.
// Cells are ordered top-to-bottom, left-to-right.
// Cells[y] is the (0-offset) y'th row in the table.
// Cells[y][x] is the (0-offset) x'th column in the table.
type TextTable struct{W ,H int ;Cells [][]TableCell ;};type gridTiling struct{_ec .PdfRectangle ;_gcfbf []float64 ;_ebfd []float64 ;_aeg map[float64 ]map[float64 ]gridTile ;};func (_bbda *subpath )isQuadrilateral ()bool {if len (_bbda ._dgab )< 4||len (_bbda ._dgab )> 5{return false ;
};if len (_bbda ._dgab )==5{_agcb :=_bbda ._dgab [0];_gdgfc :=_bbda ._dgab [4];if _agcb .X !=_gdgfc .X ||_agcb .Y !=_gdgfc .Y {return false ;};};return true ;};func (_bdbf *wordBag )maxDepth ()float64 {return _bdbf ._dfcc -_bdbf .Lly };func (_abdbg *stateStack )top ()*textState {if _abdbg .empty (){return nil ;
};return (*_abdbg )[_abdbg .size ()-1];};func (_dafae *subpath )clear (){*_dafae =subpath {}};func (_edbaf lineRuling )asRuling ()(*ruling ,bool ){_abadf :=ruling {_dgdc :_edbaf ._dced ,Color :_edbaf .Color ,_bcfff :_fceb };switch _edbaf ._dced {case _cacg :_abadf ._bedda =_edbaf .xMean ();
_abadf ._bbca =_gc .Min (_edbaf ._fcfe .Y ,_edbaf ._ggaf .Y );_abadf ._fcc =_gc .Max (_edbaf ._fcfe .Y ,_edbaf ._ggaf .Y );case _aefb :_abadf ._bedda =_edbaf .yMean ();_abadf ._bbca =_gc .Min (_edbaf ._fcfe .X ,_edbaf ._ggaf .X );_abadf ._fcc =_gc .Max (_edbaf ._fcfe .X ,_edbaf ._ggaf .X );
default:_dfa .Log .Error ("\u0062\u0061\u0064\u0020pr\u0069\u006d\u0061\u0072\u0079\u0020\u006b\u0069\u006e\u0064\u003d\u0025\u0064",_edbaf ._dced );return nil ,false ;};return &_abadf ,true ;};func (_gebe *textPara )taken ()bool {return _gebe ==nil ||_gebe ._abce };
func (_bdfbc *shapesState )addPoint (_bbc ,_fgac float64 ){_beg :=_bdfbc .establishSubpath ();_dafa :=_bdfbc .devicePoint (_bbc ,_fgac );if _beg ==nil {_bdfbc ._ddfb =true ;_bdfbc ._fegd =_dafa ;}else {_beg .add (_dafa );};};func (_cfcac paraList )yNeighbours (_fgcg float64 )map[*textPara ][]int {_bcccf :=make ([]event ,2*len (_cfcac ));
if _fgcg ==0{for _edgg ,_abga :=range _cfcac {_bcccf [2*_edgg ]=event {_abga .Lly ,true ,_edgg };_bcccf [2*_edgg +1]=event {_abga .Ury ,false ,_edgg };};}else {for _affbg ,_bedfb :=range _cfcac {_bcccf [2*_affbg ]=event {_bedfb .Lly -_fgcg *_bedfb .fontsize (),true ,_affbg };
_bcccf [2*_affbg +1]=event {_bedfb .Ury +_fgcg *_bedfb .fontsize (),false ,_affbg };};};return _cfcac .eventNeighbours (_bcccf );};func (_aecd *shapesState )drawRectangle (_acf ,_ffga ,_cfa ,_cgcb float64 ){if _eabb {_bggg :=_aecd .devicePoint (_acf ,_ffga );
_eabe :=_aecd .devicePoint (_acf +_cfa ,_ffga +_cgcb );_abf :=_ec .PdfRectangle {Llx :_bggg .X ,Lly :_bggg .Y ,Urx :_eabe .X ,Ury :_eabe .Y };_dfa .Log .Info ("d\u0072a\u0077\u0052\u0065\u0063\u0074\u0061\u006e\u0067l\u0065\u003a\u0020\u00256.\u0032\u0066",_abf );
};_aecd .newSubPath ();_aecd .moveTo (_acf ,_ffga );_aecd .lineTo (_acf +_cfa ,_ffga );_aecd .lineTo (_acf +_cfa ,_ffga +_cgcb );_aecd .lineTo (_acf ,_ffga +_cgcb );_aecd .closePath ();};

// Extractor stores and offers functionality for extracting content from PDF pages.
type Extractor struct{_aa string ;_af *_ec .PdfPageResources ;_da _ec .PdfRectangle ;_gd map[string ]fontEntry ;_ffe map[string ]textResult ;_cb int64 ;_ee int ;};func _egcb (_cccc float64 ,_ccdc int )int {if _ccdc ==0{_ccdc =1;};_daca :=float64 (_ccdc );
return int (_gc .Round (_cccc /_daca )*_daca );};func (_cedd *textTable )logComposite (_ccbb string ){if !_gca {return ;};_dfa .Log .Info ("\u007e~\u007eP\u0061\u0072\u0061\u0020\u0025d\u0020\u0078 \u0025\u0064\u0020\u0025\u0073",_cedd ._cfffa ,_cedd ._daac ,_ccbb );
_cd .Printf ("\u0025\u0035\u0073 \u007c","");for _eedf :=0;_eedf < _cedd ._cfffa ;_eedf ++{_cd .Printf ("\u0025\u0033\u0064 \u007c",_eedf );};_cd .Println ("");_cd .Printf ("\u0025\u0035\u0073 \u002b","");for _caeee :=0;_caeee < _cedd ._cfffa ;_caeee ++{_cd .Printf ("\u0025\u0033\u0073 \u002b","\u002d\u002d\u002d");
};_cd .Println ("");for _effa :=0;_effa < _cedd ._daac ;_effa ++{_cd .Printf ("\u0025\u0035\u0064 \u007c",_effa );for _aeca :=0;_aeca < _cedd ._cfffa ;_aeca ++{_dfgd ,_ :=_cedd ._gfgf [_dgeff (_aeca ,_effa )].parasBBox ();_cd .Printf ("\u0025\u0033\u0064 \u007c",len (_dfgd ));
};_cd .Println ("");};_dfa .Log .Info ("\u007e~\u007eT\u0065\u0078\u0074\u0020\u0025d\u0020\u0078 \u0025\u0064\u0020\u0025\u0073",_cedd ._cfffa ,_cedd ._daac ,_ccbb );_cd .Printf ("\u0025\u0035\u0073 \u007c","");for _fgde :=0;_fgde < _cedd ._cfffa ;_fgde ++{_cd .Printf ("\u0025\u0031\u0032\u0064\u0020\u007c",_fgde );
};_cd .Println ("");_cd .Printf ("\u0025\u0035\u0073 \u002b","");for _daffb :=0;_daffb < _cedd ._cfffa ;_daffb ++{_cd .Print ("\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d\u002d-\u002d\u002d\u002d\u002b");};_cd .Println ("");for _fbad :=0;_fbad < _cedd ._daac ;
_fbad ++{_cd .Printf ("\u0025\u0035\u0064 \u007c",_fbad );for _gfbeb :=0;_gfbeb < _cedd ._cfffa ;_gfbeb ++{_ccadb ,_ :=_cedd ._gfgf [_dgeff (_gfbeb ,_fbad )].parasBBox ();_ceabb :="";_fegf :=_ccadb .merge ();if _fegf !=nil {_ceabb =_fegf .text ();};_ceabb =_cd .Sprintf ("\u0025\u0071",_abcg (_ceabb ,12));
_ceabb =_ceabb [1:len (_ceabb )-1];_cd .Printf ("\u0025\u0031\u0032\u0073\u0020\u007c",_ceabb );};_cd .Println ("");};};func (_cfe *textObject )setHorizScaling (_agb float64 ){if _cfe ==nil {return ;};_cfe ._caefc ._faf =_agb ;};func (_fdg *imageExtractContext )extractContentStreamImages (_fbf string ,_gdb *_ec .PdfPageResources )error {_cf :=_b .NewContentStreamParser (_fbf );
_ab ,_egc :=_cf .Parse ();if _egc !=nil {return _egc ;};if _fdg ._aff ==nil {_fdg ._aff =map[*_ca .PdfObjectStream ]*cachedImage {};};if _fdg ._ef ==nil {_fdg ._ef =&ImageExtractOptions {};};_eaf :=_b .NewContentStreamProcessor (*_ab );_eaf .AddHandler (_b .HandlerConditionEnumAllOperands ,"",_fdg .processOperand );
return _eaf .Process (_gdb );};func _ced (_ebcg []TextMark ,_cefd *int ,_dag string )[]TextMark {_cbea :=_gafag ;_cbea .Text =_dag ;return _abbf (_ebcg ,_cefd ,_cbea );};

// RenderMode specifies the text rendering mode (Tmode), which determines whether showing text shall cause
// glyph outlines to be  stroked, filled, used as a clipping boundary, or some combination of the three.
// Stroking, filling, and clipping shall have the same effects for a text object as they do for a path object
// (see 8.5.3, "Path-Painting Operators" and 8.5.4, "Clipping Path Operators").
type RenderMode int ;func (_deeg *wordBag )absorb (_cfg *wordBag ){_dgcg :=_cfg .makeRemovals ();for _afbe ,_dbfg :=range _cfg ._fgg {for _ ,_gbac :=range _dbfg {_deeg .pullWord (_gbac ,_afbe ,_dgcg );};};_cfg .applyRemovals (_dgcg );};func _cffcb (_gege int ,_bffec func (int ,int )bool )[]int {_fbdca :=make ([]int ,_gege );
for _bgcf :=range _fbdca {_fbdca [_bgcf ]=_bgcf ;};_cg .Slice (_fbdca ,func (_cfabe ,_bdaga int )bool {return _bffec (_fbdca [_cfabe ],_fbdca [_bdaga ])});return _fbdca ;};func (_fega rectRuling )checkWidth (_deega ,_abag float64 )(float64 ,bool ){_ebdbg :=_abag -_deega ;
_ebe :=_ebdbg <=_fgb ;return _ebdbg ,_ebe ;};type rectRuling struct{_egfd rulingKind ;_ecfe markKind ;_dc .Color ;_ec .PdfRectangle ;};func _ceab (_ggeb ,_eecb _dg .Point )bool {_fafeg :=_gc .Abs (_ggeb .X -_eecb .X );_egge :=_gc .Abs (_ggeb .Y -_eecb .Y );
return _ccadc (_fafeg ,_egge );};func _edcg (_cfbe _ec .PdfRectangle )rulingKind {_gefc :=_cfbe .Width ();_gcdag :=_cfbe .Height ();if _gefc > _gcdag {if _gefc >=_cgef {return _aefb ;};}else {if _gcdag >=_cgef {return _cacg ;};};return _fafdd ;};

// String returns a description of `p`.
func (_dad *textPara )String ()string {if _dad ._bfeg {return _cd .Sprintf ("\u0025\u0036\u002e\u0032\u0066\u0020\u005b\u0045\u004d\u0050\u0054\u0059\u005d",_dad .PdfRectangle );};_dafe :="";if _dad ._dgba !=nil {_dafe =_cd .Sprintf ("\u005b\u0025\u0064\u0078\u0025\u0064\u005d\u0020",_dad ._dgba ._cfffa ,_dad ._dgba ._daac );
};return _cd .Sprintf ("\u0025\u0036\u002e\u0032f \u0025\u0073\u0025\u0064\u0020\u006c\u0069\u006e\u0065\u0073\u0020\u0025\u0071",_dad .PdfRectangle ,_dafe ,len (_dad ._cecf ),_abcg (_dad .text (),50));};type lineRuling struct{_dced rulingKind ;_acgb markKind ;
_dc .Color ;_fcfe ,_ggaf _dg .Point ;};func _afcd (_cbg ,_bfafb ,_ecdfe float64 )rulingKind {if _cbg >=_ecdfe &&_ccadc (_bfafb ,_cbg ){return _aefb ;};if _bfafb >=_ecdfe &&_ccadc (_cbg ,_bfafb ){return _cacg ;};return _fafdd ;};func _dgec (_cebc ,_faaf *textPara )bool {return _edag (_cebc ._dfgfe ,_faaf ._dfgfe )};
func _acdbe (_egdga []pathSection )rulingList {_bffb (_egdga );if _ffec {_dfa .Log .Info ("\u006da\u006b\u0065\u0046\u0069l\u006c\u0052\u0075\u006c\u0069n\u0067s\u003a \u0025\u0064\u0020\u0066\u0069\u006c\u006cs",len (_egdga ));};var _bdfd rulingList ;
for _ ,_bgfbc :=range _egdga {for _ ,_edff :=range _bgfbc ._fgee {if !_edff .isQuadrilateral (){if _ffec {_dfa .Log .Error ("!\u0069s\u0051\u0075\u0061\u0064\u0072\u0069\u006c\u0061t\u0065\u0072\u0061\u006c: \u0025\u0073",_edff );};continue ;};if _gab ,_bfgc :=_edff .makeRectRuling (_bgfbc .Color );
_bfgc {_bdfd =append (_bdfd ,_gab );}else {if _bbeb {_dfa .Log .Error ("\u0021\u006d\u0061\u006beR\u0065\u0063\u0074\u0052\u0075\u006c\u0069\u006e\u0067\u003a\u0020\u0025\u0073",_edff );};};};};if _ffec {_dfa .Log .Info ("\u006d\u0061\u006b\u0065Fi\u006c\u006c\u0052\u0075\u006c\u0069\u006e\u0067\u0073\u003a\u0020\u0025\u0073",_bdfd .String ());
};return _bdfd ;};func (_efac *textTable )getDown ()paraList {_gcde :=make (paraList ,_efac ._cfffa );for _dbdae :=0;_dbdae < _efac ._cfffa ;_dbdae ++{_edgd :=_efac .get (_dbdae ,_efac ._daac -1)._aaccd ;if _edgd ==nil ||_edgd ._abce {return nil ;};_gcde [_dbdae ]=_edgd ;
};for _bdcae :=0;_bdcae < _efac ._cfffa -1;_bdcae ++{if _gcde [_bdcae ]._caeb !=_gcde [_bdcae +1]{return nil ;};};return _gcde ;};func (_ddea *shapesState )clearPath (){_ddea ._dfae =nil ;_ddea ._ddfb =false ;if _eabb {_dfa .Log .Info ("\u0043\u004c\u0045A\u0052\u003a\u0020\u0073\u0073\u003d\u0025\u0073",_ddea );
};};func (_ffdcg *wordBag )text ()string {_gaab :=_ffdcg .allWords ();_fgf :=make ([]string ,len (_gaab ));for _beeg ,_bcag :=range _gaab {_fgf [_beeg ]=_bcag ._dfaagg ;};return _g .Join (_fgf ,"\u0020");};func _bffb (_eadcb []pathSection ){if _gbcf < 0.0{return ;
};if _ffec {_dfa .Log .Info ("\u0067\u0072\u0061\u006e\u0075\u006c\u0061\u0072\u0069\u007a\u0065\u003a\u0020\u0025\u0064 \u0073u\u0062\u0070\u0061\u0074\u0068\u0020\u0073\u0065\u0063\u0074\u0069\u006f\u006e\u0073",len (_eadcb ));};for _gdadc ,_abfad :=range _eadcb {for _begg ,_adged :=range _abfad ._fgee {for _bgba ,_gbdd :=range _adged ._dgab {_adged ._dgab [_bgba ]=_dg .Point {X :_dabfg (_gbdd .X ),Y :_dabfg (_gbdd .Y )};
if _ffec {_fgeg :=_adged ._dgab [_bgba ];if !_ceca (_gbdd ,_fgeg ){_bagf :=_dg .Point {X :_fgeg .X -_gbdd .X ,Y :_fgeg .Y -_gbdd .Y };_cd .Printf ("\u0025\u0034d \u002d\u0020\u00254\u0064\u0020\u002d\u0020%4d\u003a %\u002e\u0032\u0066\u0020\u2192\u0020\u0025.2\u0066\u0020\u0028\u0025\u0067\u0029\u000a",_gdadc ,_begg ,_bgba ,_gbdd ,_fgeg ,_bagf );
};};};};};};var (_ac =_e .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");_eg =_e .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072"););func _cagd (_bgbcd float64 )bool {return _gc .Abs (_bgbcd )< _fgb };
func (_aed *textObject )showText (_bgg []byte )error {return _aed .renderText (_bgg )};

// String returns a description of `k`.
func (_dgag rulingKind )String ()string {_dadf ,_cdbfb :=_aggd [_dgag ];if !_cdbfb {return _cd .Sprintf ("\u004e\u006ft\u0020\u0061\u0020r\u0075\u006c\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_dgag );};return _dadf ;};func (_ecafd gridTile )complete ()bool {return _ecafd .numBorders ()==4};
func (_efge *shapesState )cubicTo (_bgeb ,_gcda ,_abdg ,_fgc ,_bcff ,_add float64 ){if _eabb {_dfa .Log .Info ("\u0063\u0075\u0062\u0069\u0063\u0054\u006f\u003a");};_efge .addPoint (_bcff ,_add );};

// RangeOffset returns the TextMarks in `ma` that overlap text[start:end] in the extracted text.
// These are tm: `start` <= tm.Offset + len(tm.Text) && tm.Offset < `end` where
// `start` and `end` are offsets in the extracted text.
// NOTE: TextMarks can contain multiple characters. e.g. "ffi" for the ﬃ ligature so the first and
// last elements of the returned TextMarkArray may only partially overlap text[start:end].
func (_ddec *TextMarkArray )RangeOffset (start ,end int )(*TextMarkArray ,error ){if _ddec ==nil {return nil ,_e .New ("\u006da\u003d\u003d\u006e\u0069\u006c");};if end < start {return nil ,_cd .Errorf ("\u0065\u006e\u0064\u0020\u003c\u0020\u0073\u0074\u0061\u0072\u0074\u002e\u0020\u0052\u0061n\u0067\u0065\u004f\u0066\u0066\u0073\u0065\u0074\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064\u002e\u0020\u0073\u0074\u0061\u0072t=\u0025\u0064\u0020\u0065\u006e\u0064\u003d\u0025\u0064\u0020",start ,end );
};_defa :=len (_ddec ._gffb );if _defa ==0{return _ddec ,nil ;};if start < _ddec ._gffb [0].Offset {start =_ddec ._gffb [0].Offset ;};if end > _ddec ._gffb [_defa -1].Offset +1{end =_ddec ._gffb [_defa -1].Offset +1;};_cfb :=_cg .Search (_defa ,func (_aaf int )bool {return _ddec ._gffb [_aaf ].Offset +len (_ddec ._gffb [_aaf ].Text )-1>=start });
if !(0<=_cfb &&_cfb < _defa ){_bbdb :=_cd .Errorf ("\u004f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067\u0065\u002e\u0020\u0073\u0074\u0061\u0072\u0074\u003d%\u0064\u0020\u0069\u0053\u0074\u0061\u0072\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u003d\u0025\u0064\u000a\u0009\u0066\u0069\u0072\u0073\u0074\u003d\u0025\u0076\u000a\u0009 \u006c\u0061\u0073\u0074\u003d%\u0076",start ,_cfb ,_defa ,_ddec ._gffb [0],_ddec ._gffb [_defa -1]);
return nil ,_bbdb ;};_egb :=_cg .Search (_defa ,func (_aad int )bool {return _ddec ._gffb [_aad ].Offset > end -1});if !(0<=_egb &&_egb < _defa ){_affa :=_cd .Errorf ("\u004f\u0075\u0074\u0020\u006f\u0066\u0020r\u0061\u006e\u0067e\u002e\u0020\u0065n\u0064\u003d%\u0064\u0020\u0069\u0045\u006e\u0064=\u0025d \u006c\u0065\u006e\u003d\u0025\u0064\u000a\u0009\u0066\u0069\u0072\u0073\u0074\u003d\u0025\u0076\u000a\u0009\u0020\u006c\u0061\u0073\u0074\u003d\u0025\u0076",end ,_egb ,_defa ,_ddec ._gffb [0],_ddec ._gffb [_defa -1]);
return nil ,_affa ;};if _egb <=_cfb {return nil ,_cd .Errorf ("\u0069\u0045\u006e\u0064\u0020\u003c=\u0020\u0069\u0053\u0074\u0061\u0072\u0074\u003a\u0020\u0073\u0074\u0061\u0072\u0074\u003d\u0025\u0064\u0020\u0065\u006ed\u003d\u0025\u0064\u0020\u0069\u0053\u0074\u0061\u0072\u0074\u003d\u0025\u0064\u0020i\u0045n\u0064\u003d\u0025\u0064",start ,end ,_cfb ,_egb );
};return &TextMarkArray {_gffb :_ddec ._gffb [_cfb :_egb ]},nil ;};func (_fbed *textPara )isAtom ()*textTable {_dgge :=_fbed ;_aebcb :=_fbed ._caeb ;_fgdcb :=_fbed ._aaccd ;if !(_aebcb !=nil &&!_aebcb ._abce &&_fgdcb !=nil &&!_fgdcb ._abce ){return nil ;
};_cbfa :=_aebcb ._aaccd ;if !(_cbfa !=nil &&!_cbfa ._abce &&_cbfa ==_fgdcb ._caeb ){return nil ;};return _aaba (_dgge ,_aebcb ,_fgdcb ,_cbfa );};

// ImageMark represents an image drawn on a page and its position in device coordinates.
// All coordinates are in device coordinates.
type ImageMark struct{Image *_ec .Image ;

// Dimensions of the image as displayed in the PDF.
Width float64 ;Height float64 ;

// Position of the image in PDF coordinates (lower left corner).
X float64 ;Y float64 ;

// Angle in degrees, if rotated.
Angle float64 ;};func (_dgcf *textPara )bbox ()_ec .PdfRectangle {return _dgcf .PdfRectangle };func (_bcbda paraList )readBefore (_dcga []int ,_fdeg ,_cddc int )bool {_gdbb ,_dcbc :=_bcbda [_fdeg ],_bcbda [_cddc ];if _dgec (_gdbb ,_dcbc )&&_gdbb .Lly > _dcbc .Lly {return true ;
};if !(_gdbb ._dfgfe .Urx < _dcbc ._dfgfe .Llx ){return false ;};_bbde ,_afae :=_gdbb .Lly ,_dcbc .Lly ;if _bbde > _afae {_afae ,_bbde =_bbde ,_afae ;};_bcbc :=_gc .Max (_gdbb ._dfgfe .Llx ,_dcbc ._dfgfe .Llx );_fgfc :=_gc .Min (_gdbb ._dfgfe .Urx ,_dcbc ._dfgfe .Urx );
_cbfcb :=_bcbda .llyRange (_dcga ,_bbde ,_afae );for _ ,_bgff :=range _cbfcb {if _bgff ==_fdeg ||_bgff ==_cddc {continue ;};_fdgb :=_bcbda [_bgff ];if _fdgb ._dfgfe .Llx <=_fgfc &&_bcbc <=_fdgb ._dfgfe .Urx {return false ;};};return true ;};func (_bbdbb *wordBag )applyRemovals (_bdca map[int ]map[*textWord ]struct{}){for _gfb ,_cfaa :=range _bdca {if len (_cfaa )==0{continue ;
};_ggff :=_bbdbb ._fgg [_gfb ];_gddg :=len (_ggff )-len (_cfaa );if _gddg ==0{delete (_bbdbb ._fgg ,_gfb );continue ;};_gffe :=make ([]*textWord ,_gddg );_dcfb :=0;for _ ,_gegd :=range _ggff {if _ ,_dece :=_cfaa [_gegd ];!_dece {_gffe [_dcfb ]=_gegd ;_dcfb ++;
};};_bbdbb ._fgg [_gfb ]=_gffe ;};};func (_bbgf *textTable )newTablePara ()*textPara {_fgfa :=_bbgf .computeBbox ();_ggdc :=&textPara {PdfRectangle :_fgfa ,_dfgfe :_fgfa ,_dgba :_bbgf };if _gca {_dfa .Log .Info ("\u006e\u0065w\u0054\u0061\u0062l\u0065\u0050\u0061\u0072\u0061\u003a\u0020\u0025\u0073",_ggdc );
};return _ggdc ;};func (_dfba lineRuling )xMean ()float64 {return 0.5*(_dfba ._fcfe .X +_dfba ._ggaf .X )};func (_gaeac paraList )eventNeighbours (_dedbcc []event )map[*textPara ][]int {_cg .Slice (_dedbcc ,func (_gabd ,_cbee int )bool {_dedg ,_fcbbf :=_dedbcc [_gabd ],_dedbcc [_cbee ];
_ccda ,_acbf :=_dedg ._bdcafc ,_fcbbf ._bdcafc ;if _ccda !=_acbf {return _ccda < _acbf ;};if _dedg ._bcbdd !=_fcbbf ._bcbdd {return _dedg ._bcbdd ;};return _gabd < _cbee ;});_gaag :=make (map[int ]intSet );_fcgb :=make (intSet );for _ ,_cdfbb :=range _dedbcc {if _cdfbb ._bcbdd {_gaag [_cdfbb ._cfbfc ]=make (intSet );
for _gagd :=range _fcgb {if _gagd !=_cdfbb ._cfbfc {_gaag [_cdfbb ._cfbfc ].add (_gagd );_gaag [_gagd ].add (_cdfbb ._cfbfc );};};_fcgb .add (_cdfbb ._cfbfc );}else {_fcgb .del (_cdfbb ._cfbfc );};};_dbdbe :=map[*textPara ][]int {};for _daeg ,_edbb :=range _gaag {_cefa :=_gaeac [_daeg ];
if len (_edbb )==0{_dbdbe [_cefa ]=nil ;continue ;};_fefc :=make ([]int ,len (_edbb ));_adcd :=0;for _fced :=range _edbb {_fefc [_adcd ]=_fced ;_adcd ++;};_dbdbe [_cefa ]=_fefc ;};return _dbdbe ;};func _ggec (_agabb ,_aecgd bounded )float64 {_bgcd :=_adfef (_agabb ,_aecgd );
if !_cdfce (_bgcd ){return _bgcd ;};return _acdd (_agabb ,_aecgd );};func (_dfgf *textLine )appendWord (_ffba *textWord ){_dfgf ._dcce =append (_dfgf ._dcce ,_ffba );_dfgf .PdfRectangle =_bedc (_dfgf .PdfRectangle ,_ffba .PdfRectangle );if _ffba ._dbcg > _dfgf ._gbfeg {_dfgf ._gbfeg =_ffba ._dbcg ;
};if _ffba ._ddbfa > _dfgf ._fgcd {_dfgf ._fgcd =_ffba ._ddbfa ;};};func (_egce gridTile )numBorders ()int {_egdf :=0;if _egce ._edfa {_egdf ++;};if _egce ._agdea {_egdf ++;};if _egce ._cabd {_egdf ++;};if _egce ._deea {_egdf ++;};return _egdf ;};func (_gdeb rulingList )vertsHorzs ()(rulingList ,rulingList ){var _bbbe ,_cdge rulingList ;
for _ ,_gea :=range _gdeb {switch _gea ._dgdc {case _cacg :_bbbe =append (_bbbe ,_gea );case _aefb :_cdge =append (_cdge ,_gea );};};return _bbbe ,_cdge ;};func (_agdb *textObject )getFillColor ()_dc .Color {return _fdgf (_agdb ._bgcgd .ColorspaceNonStroking ,_agdb ._bgcgd .ColorNonStroking );
};func _abcg (_bcbb string ,_cbfbf int )string {if len (_bcbb )< _cbfbf {return _bcbb ;};return _bcbb [:_cbfbf ];};func (_becg *shapesState )lineTo (_aeab ,_adeb float64 ){if _eabb {_dfa .Log .Info ("\u006c\u0069\u006eeT\u006f\u0028\u0025\u002e\u0032\u0066\u002c\u0025\u002e\u0032\u0066\u0020\u0070\u003d\u0025\u002e\u0032\u0066",_aeab ,_adeb ,_becg .devicePoint (_aeab ,_adeb ));
};_becg .addPoint (_aeab ,_adeb );};func (_acfc lineRuling )yMean ()float64 {return 0.5*(_acfc ._fcfe .Y +_acfc ._ggaf .Y )};func (_gbfgg *textTable )getComposite (_beeeg ,_cedff int )(paraList ,_ec .PdfRectangle ){_fcbad ,_ggafe :=_gbfgg ._gfgf [_dgeff (_beeeg ,_cedff )];
if _gca {_cd .Printf ("\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0067\u0065\u0074\u0043\u006f\u006d\u0070o\u0073i\u0074\u0065\u0028\u0025\u0064\u002c\u0025\u0064\u0029\u002d\u003e\u0025\u0073\u000a",_beeeg ,_cedff ,_fcbad .String ());};if !_ggafe {return nil ,_ec .PdfRectangle {};
};return _fcbad .parasBBox ();};func (_fgbg rulingList )augmentGrid ()(rulingList ,rulingList ){_bccc ,_cgdff :=_fgbg .vertsHorzs ();if len (_bccc )==0||len (_cgdff )==0{return _bccc ,_cgdff ;};_eefg ,_fgea :=_bccc ,_cgdff ;_eeccb :=_bccc .bbox ();_bgab :=_cgdff .bbox ();
if _ffec {_dfa .Log .Info ("\u0061u\u0067\u006d\u0065\u006e\u0074\u0047\u0072\u0069\u0064\u003a\u0020b\u0062\u006f\u0078\u0056\u003d\u0025\u0036\u002e\u0032\u0066",_eeccb );_dfa .Log .Info ("\u0061u\u0067\u006d\u0065\u006e\u0074\u0047\u0072\u0069\u0064\u003a\u0020b\u0062\u006f\u0078\u0048\u003d\u0025\u0036\u002e\u0032\u0066",_bgab );
};var _ebff ,_edbg ,_ggaea ,_aabef *ruling ;if _bgab .Llx < _eeccb .Llx -_bffc {_ebff =&ruling {_bcfff :_degb ,_dgdc :_cacg ,_bedda :_bgab .Llx ,_bbca :_eeccb .Lly ,_fcc :_eeccb .Ury };_bccc =append (rulingList {_ebff },_bccc ...);};if _bgab .Urx > _eeccb .Urx +_bffc {_edbg =&ruling {_bcfff :_degb ,_dgdc :_cacg ,_bedda :_bgab .Urx ,_bbca :_eeccb .Lly ,_fcc :_eeccb .Ury };
_bccc =append (_bccc ,_edbg );};if _eeccb .Lly < _bgab .Lly -_bffc {_ggaea =&ruling {_bcfff :_degb ,_dgdc :_aefb ,_bedda :_eeccb .Lly ,_bbca :_bgab .Llx ,_fcc :_bgab .Urx };_cgdff =append (rulingList {_ggaea },_cgdff ...);};if _eeccb .Ury > _bgab .Ury +_bffc {_aabef =&ruling {_bcfff :_degb ,_dgdc :_aefb ,_bedda :_eeccb .Ury ,_bbca :_bgab .Llx ,_fcc :_bgab .Urx };
_cgdff =append (_cgdff ,_aabef );};if len (_bccc )+len (_cgdff )==len (_fgbg ){return _eefg ,_fgea ;};_ddaf :=append (_bccc ,_cgdff ...);_fgbg .log ("u\u006e\u0061\u0075\u0067\u006d\u0065\u006e\u0074\u0065\u0064");_ddaf .log ("\u0061u\u0067\u006d\u0065\u006e\u0074\u0065d");
return _bccc ,_cgdff ;};func (_ebda *textObject )getCurrentFont ()*_ec .PdfFont {_ddbf :=_ebda ._caefc ._bdc ;if _ddbf ==nil {_dfa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u002e\u0020U\u0073\u0069\u006e\u0067\u0020d\u0065\u0066a\u0075\u006c\u0074\u002e");
return _ec .DefaultFont ();};return _ddbf ;};func (_ccc *subpath )add (_cdec ..._dg .Point ){_ccc ._dgab =append (_ccc ._dgab ,_cdec ...)};func (_age *textObject )showTextAdjusted (_bcb *_ca .PdfObjectArray )error {_adfe :=false ;for _ ,_bffa :=range _bcb .Elements (){switch _bffa .(type ){case *_ca .PdfObjectFloat ,*_ca .PdfObjectInteger :_gafa ,_dbg :=_ca .GetNumberAsFloat (_bffa );
if _dbg !=nil {_dfa .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0073\u0068\u006f\u0077\u0054\u0065\u0078t\u0041\u0064\u006a\u0075\u0073\u0074\u0065\u0064\u002e\u0020\u0042\u0061\u0064\u0020\u006e\u0075\u006d\u0065r\u0069\u0063\u0061\u006c\u0020a\u0072\u0067\u002e\u0020\u006f\u003d\u0025\u0073\u0020\u0061\u0072\u0067\u0073\u003d\u0025\u002b\u0076",_bffa ,_bcb );
return _dbg ;};_affb ,_bca :=-_gafa *0.001*_age ._caefc ._badf ,0.0;if _adfe {_bca ,_affb =_affb ,_bca ;};_beag :=_baa (_dg .Point {X :_affb ,Y :_bca });_age ._gcgc .Concat (_beag );case *_ca .PdfObjectString :_cebg ,_cbcd :=_ca .GetStringBytes (_bffa );
if !_cbcd {_dfa .Log .Trace ("s\u0068\u006f\u0077\u0054\u0065\u0078\u0074\u0041\u0064j\u0075\u0073\u0074\u0065\u0064\u003a\u0020Ba\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0061\u0072\u0067\u002e\u0020o=\u0025\u0073 \u0061\u0072\u0067\u0073\u003d\u0025\u002b\u0076",_bffa ,_bcb );
return _ca .ErrTypeError ;};_age .renderText (_cebg );default:_dfa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0073\u0068\u006f\u0077\u0054\u0065\u0078\u0074A\u0064\u006a\u0075\u0073\u0074\u0065\u0064\u002e\u0020\u0055\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0028%T\u0029\u0020\u0061\u0072\u0067\u0073\u003d\u0025\u002b\u0076",_bffa ,_bcb );
return _ca .ErrTypeError ;};};return nil ;};type bounded interface{bbox ()_ec .PdfRectangle };func (_dggff *textObject )setTextMatrix (_bab []float64 ){if len (_bab )!=6{_dfa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006c\u0065\u006e\u0028\u0066\u0029\u0020\u0021\u003d\u0020\u0036\u0020\u0028\u0025\u0064\u0029",len (_bab ));
return ;};_gaf ,_gaa ,_adfb ,_dbfb ,_cbfc ,_aec :=_bab [0],_bab [1],_bab [2],_bab [3],_bab [4],_bab [5];_dggff ._gcgc =_dg .NewMatrix (_gaf ,_gaa ,_adfb ,_dbfb ,_cbfc ,_aec );_dggff ._agab =_dggff ._gcgc ;};func (_cfdg *textTable )getRight ()paraList {_aegb :=make (paraList ,_cfdg ._daac );
for _aeebf :=0;_aeebf < _cfdg ._daac ;_aeebf ++{_fefeg :=_cfdg .get (_cfdg ._cfffa -1,_aeebf )._caeb ;if _fefeg ==nil ||_fefeg ._abce {return nil ;};_aegb [_aeebf ]=_fefeg ;};for _ddeae :=0;_ddeae < _cfdg ._daac -1;_ddeae ++{if _aegb [_ddeae ]._aaccd !=_aegb [_ddeae +1]{return nil ;
};};return _aegb ;};func _gedb (_abcd float64 )int {var _eeee int ;if _abcd >=0{_eeee =int (_abcd /_gaeab );}else {_eeee =int (_abcd /_gaeab )-1;};return _eeee ;};type gridTile struct{_ec .PdfRectangle ;_deea ,_edfa ,_cabd ,_agdea bool ;};

// ExtractPageImages returns the image contents of the page extractor, including data
// and position, size information for each image.
// A set of options to control page image extraction can be passed in. The options
// parameter can be nil for the default options. By default, inline stencil masks
// are not extracted.
func (_ace *Extractor )ExtractPageImages (options *ImageExtractOptions )(*PageImages ,error ){_gcd :=&imageExtractContext {_ef :options };_bce :=_gcd .extractContentStreamImages (_ace ._aa ,_ace ._af );if _bce !=nil {return nil ,_bce ;};return &PageImages {Images :_gcd ._ae },nil ;
};func (_aceaa rectRuling )asRuling ()(*ruling ,bool ){_edgc :=ruling {_dgdc :_aceaa ._egfd ,Color :_aceaa .Color ,_bcfff :_ccbea };switch _aceaa ._egfd {case _cacg :_edgc ._bedda =0.5*(_aceaa .Llx +_aceaa .Urx );_edgc ._bbca =_aceaa .Lly ;_edgc ._fcc =_aceaa .Ury ;
_gcgb ,_fdga :=_aceaa .checkWidth (_aceaa .Llx ,_aceaa .Urx );if !_fdga {if _bbeb {_dfa .Log .Error ("\u0072\u0065\u0063\u0074\u0052\u0075l\u0069\u006e\u0067\u002e\u0061\u0073\u0052\u0075\u006c\u0069\u006e\u0067\u003a\u0020\u0072\u0075\u006c\u0069\u006e\u0067V\u0065\u0072\u0074\u0020\u0021\u0063\u0068\u0065\u0063\u006b\u0057\u0069\u0064\u0074h\u0020v\u003d\u0025\u002b\u0076",_aceaa );
};return nil ,false ;};_edgc ._dedc =_gcgb ;case _aefb :_edgc ._bedda =0.5*(_aceaa .Lly +_aceaa .Ury );_edgc ._bbca =_aceaa .Llx ;_edgc ._fcc =_aceaa .Urx ;_geegd ,_ecff :=_aceaa .checkWidth (_aceaa .Lly ,_aceaa .Ury );if !_ecff {if _bbeb {_dfa .Log .Error ("\u0072\u0065\u0063\u0074\u0052\u0075l\u0069\u006e\u0067\u002e\u0061\u0073\u0052\u0075\u006c\u0069\u006e\u0067\u003a\u0020\u0072\u0075\u006c\u0069\u006e\u0067H\u006f\u0072\u007a\u0020\u0021\u0063\u0068\u0065\u0063\u006b\u0057\u0069\u0064\u0074h\u0020v\u003d\u0025\u002b\u0076",_aceaa );
};return nil ,false ;};_edgc ._dedc =_geegd ;default:_dfa .Log .Error ("\u0062\u0061\u0064\u0020pr\u0069\u006d\u0061\u0072\u0079\u0020\u006b\u0069\u006e\u0064\u003d\u0025\u0064",_aceaa ._egfd );return nil ,false ;};return &_edgc ,true ;};

// Elements returns the TextMarks in `ma`.
func (_abda *TextMarkArray )Elements ()[]TextMark {return _abda ._gffb };func (_cece *subpath )makeRectRuling (_ecccc _dc .Color )(*ruling ,bool ){if _bbeb {_dfa .Log .Info ("\u006d\u0061\u006beR\u0065\u0063\u0074\u0052\u0075\u006c\u0069\u006e\u0067\u003a\u0020\u0070\u0061\u0074\u0068\u003d\u0025\u0076",_cece );
};_ccca :=_cece ._dgab [:4];_gffcf :=make (map[int ]rulingKind ,len (_ccca ));for _cadg ,_daab :=range _ccca {_ebgbe :=_cece ._dgab [(_cadg +1)%4];_gffcf [_cadg ]=_eagfd (_daab ,_ebgbe );if _bbeb {_cd .Printf ("\u0025\u0034\u0064: \u0025\u0073\u0020\u003d\u0020\u0025\u0036\u002e\u0032\u0066\u0020\u002d\u0020\u0025\u0036\u002e\u0032\u0066",_cadg ,_gffcf [_cadg ],_daab ,_ebgbe );
};};if _bbeb {_cd .Printf ("\u0020\u0020\u0020\u006b\u0069\u006e\u0064\u0073\u003d\u0025\u002b\u0076\u000a",_gffcf );};var _fcgd ,_befc []int ;for _cabc ,_gaeae :=range _gffcf {switch _gaeae {case _aefb :_befc =append (_befc ,_cabc );case _cacg :_fcgd =append (_fcgd ,_cabc );
};};if _bbeb {_cd .Printf ("\u0020\u0020 \u0068\u006f\u0072z\u0073\u003d\u0025\u0064\u0020\u0025\u002b\u0076\u000a",len (_befc ),_befc );_cd .Printf ("\u0020\u0020 \u0076\u0065\u0072t\u0073\u003d\u0025\u0064\u0020\u0025\u002b\u0076\u000a",len (_fcgd ),_fcgd );
};_abdf :=(len (_befc )==2&&len (_fcgd )==2)||(len (_befc )==2&&len (_fcgd )==0&&_ffbc (_ccca [_befc [0]],_ccca [_befc [1]]))||(len (_fcgd )==2&&len (_befc )==0&&_ceab (_ccca [_fcgd [0]],_ccca [_fcgd [1]]));if _bbeb {_cd .Printf (" \u0020\u0020\u0068\u006f\u0072\u007as\u003d\u0025\u0064\u0020\u0076\u0065\u0072\u0074\u0073=\u0025\u0064\u0020o\u006b=\u0025\u0074\u000a",len (_befc ),len (_fcgd ),_abdf );
};if !_abdf {if _bbeb {_dfa .Log .Error ("\u0021!\u006d\u0061\u006b\u0065R\u0065\u0063\u0074\u0052\u0075l\u0069n\u0067:\u0020\u0070\u0061\u0074\u0068\u003d\u0025v",_cece );_cd .Printf (" \u0020\u0020\u0068\u006f\u0072\u007as\u003d\u0025\u0064\u0020\u0076\u0065\u0072\u0074\u0073=\u0025\u0064\u0020o\u006b=\u0025\u0074\u000a",len (_befc ),len (_fcgd ),_abdf );
};return &ruling {},false ;};if len (_fcgd )==0{for _ggfa ,_gbbbf :=range _gffcf {if _gbbbf !=_aefb {_fcgd =append (_fcgd ,_ggfa );};};};if len (_befc )==0{for _ageb ,_gbda :=range _gffcf {if _gbda !=_cacg {_befc =append (_befc ,_ageb );};};};if _bbeb {_dfa .Log .Info ("\u006da\u006b\u0065R\u0065\u0063\u0074\u0052u\u006c\u0069\u006eg\u003a\u0020\u0068\u006f\u0072\u007a\u0073\u003d\u0025d \u0076\u0065\u0072t\u0073\u003d%\u0064\u0020\u0070\u006f\u0069\u006et\u0073\u003d%\u0064\u000a"+"\u0009\u0020\u0068o\u0072\u007a\u0073\u003d\u0025\u002b\u0076\u000a"+"\u0009\u0020\u0076e\u0072\u0074\u0073\u003d\u0025\u002b\u0076\u000a"+"\t\u0070\u006f\u0069\u006e\u0074\u0073\u003d\u0025\u002b\u0076",len (_befc ),len (_fcgd ),len (_ccca ),_befc ,_fcgd ,_ccca );
};var _fccc ,_dfaf ,_adfd ,_beda _dg .Point ;if _ccca [_befc [0]].Y > _ccca [_befc [1]].Y {_adfd ,_beda =_ccca [_befc [0]],_ccca [_befc [1]];}else {_adfd ,_beda =_ccca [_befc [1]],_ccca [_befc [0]];};if _ccca [_fcgd [0]].X > _ccca [_fcgd [1]].X {_fccc ,_dfaf =_ccca [_fcgd [0]],_ccca [_fcgd [1]];
}else {_fccc ,_dfaf =_ccca [_fcgd [1]],_ccca [_fcgd [0]];};_dadb :=_ec .PdfRectangle {Llx :_fccc .X ,Urx :_dfaf .X ,Lly :_beda .Y ,Ury :_adfd .Y };if _dadb .Llx > _dadb .Urx {_dadb .Llx ,_dadb .Urx =_dadb .Urx ,_dadb .Llx ;};if _dadb .Lly > _dadb .Ury {_dadb .Lly ,_dadb .Ury =_dadb .Ury ,_dadb .Lly ;
};_efbb :=rectRuling {PdfRectangle :_dadb ,_egfd :_edcg (_dadb ),Color :_ecccc };if _efbb ._egfd ==_fafdd {if _bbeb {_dfa .Log .Error ("\u006da\u006b\u0065\u0052\u0065\u0063\u0074\u0052\u0075\u006c\u0069\u006eg\u003a\u0020\u006b\u0069\u006e\u0064\u003d\u006e\u0069\u006c");
};return nil ,false ;};_dbbc ,_ebbg :=_efbb .asRuling ();if !_ebbg {if _bbeb {_dfa .Log .Error ("\u006da\u006b\u0065\u0052\u0065c\u0074\u0052\u0075\u006c\u0069n\u0067:\u0020!\u0069\u0073\u0052\u0075\u006c\u0069\u006eg");};return nil ,false ;};if _ffec {_cd .Printf ("\u0020\u0020\u0020\u0072\u003d\u0025\u0073\u000a",_dbbc .String ());
};return _dbbc ,true ;};func (_gceab *textTable )growTable (){_aggf :=func (_cecb paraList ){_gceab ._daac ++;for _acaff :=0;_acaff < _gceab ._cfffa ;_acaff ++{_cgdfg :=_cecb [_acaff ];_gceab .put (_acaff ,_gceab ._daac -1,_cgdfg );};};_bdccb :=func (_dcedb paraList ){_gceab ._cfffa ++;
for _dgef :=0;_dgef < _gceab ._daac ;_dgef ++{_feac :=_dcedb [_dgef ];_gceab .put (_gceab ._cfffa -1,_dgef ,_feac );};};if _badbd {_gceab .log ("\u0067r\u006f\u0077\u0054\u0061\u0062\u006ce");};for _gdae :=0;;_gdae ++{_gdef :=false ;_bdbbg :=_gceab .getDown ();
_adaa :=_gceab .getRight ();if _badbd {_cd .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_gdae ,_gceab );_cd .Printf ("\u0020\u0020 \u0020\u0020\u0020 \u0020\u0064\u006f\u0077\u006e\u003d\u0025\u0073\u000a",_bdbbg );_cd .Printf ("\u0020\u0020 \u0020\u0020\u0020 \u0072\u0069\u0067\u0068\u0074\u003d\u0025\u0073\u000a",_adaa );
};if _bdbbg !=nil &&_adaa !=nil {_aacca :=_bdbbg [len (_bdbbg )-1];if _aacca !=nil &&!_aacca ._abce &&_aacca ==_adaa [len (_adaa )-1]{_aggf (_bdbbg );if _adaa =_gceab .getRight ();_adaa !=nil {_bdccb (_adaa );_gceab .put (_gceab ._cfffa -1,_gceab ._daac -1,_aacca );
};_gdef =true ;};};if !_gdef &&_bdbbg !=nil {_aggf (_bdbbg );_gdef =true ;};if !_gdef &&_adaa !=nil {_bdccb (_adaa );_gdef =true ;};if !_gdef {break ;};};};func (_gfbda paraList )findTableGrid (_dfbab gridTiling )(*textTable ,map[*textPara ]struct{}){_gfac :=len (_dfbab ._gcfbf );
_ddfbd :=len (_dfbab ._ebfd );_ecace :=textTable {_efdfb :true ,_cfffa :_gfac ,_daac :_ddfbd ,_efeaf :make (map[uint64 ]*textPara ,_gfac *_ddfbd ),_gfgf :make (map[uint64 ]compositeCell ,_gfac *_ddfbd )};_bdeb :=make (map[*textPara ]struct{});_dgcdf :=int ((1.0-_ccee )*float64 (_gfac *_ddfbd ));
_cgfbd :=0;if _bdgac {_dfa .Log .Info ("\u0066\u0069\u006e\u0064Ta\u0062\u006c\u0065\u0047\u0072\u0069\u0064\u003a\u0020\u0025\u0064\u0020\u0078\u0020%\u0064",_gfac ,_ddfbd );};for _caba ,_cgce :=range _dfbab ._ebfd {_cfbb ,_bcge :=_dfbab ._aeg [_cgce ];
if !_bcge {continue ;};for _eaeca ,_ceee :=range _dfbab ._gcfbf {_dfcef ,_bcdcd :=_cfbb [_ceee ];if !_bcdcd {continue ;};_eeag :=_gfbda .inTile (_dfcef );if len (_eeag )==0{_cgfbd ++;if _cgfbd > _dgcdf {if _bdgac {_dfa .Log .Info ("\u0021\u006e\u0075m\u0045\u006d\u0070\u0074\u0079\u003d\u0025\u0064",_cgfbd );
};return nil ,nil ;};}else {_ecace .putComposite (_eaeca ,_caba ,_eeag ,_dfcef .PdfRectangle );for _ ,_bedga :=range _eeag {_bdeb [_bedga ]=struct{}{};};};};};_gfbfe :=0;for _edfeb :=0;_edfeb < _gfac ;_edfeb ++{_aedc :=_ecace .get (_edfeb ,0);if _aedc ==nil ||!_aedc ._bfeg {_gfbfe ++;
};};if _gfbfe ==0{if _bdgac {_dfa .Log .Info ("\u0021\u006e\u0075m\u0048\u0065\u0061\u0064\u0065\u0072\u003d\u0030");};return nil ,nil ;};_dbfbb :=_ecace .reduceTiling (_dfbab ,_aebd );_dbfbb =_dbfbb .subdivide ();return _dbfbb ,_bdeb ;};func (_aaga *wordBag )sort (){for _ ,_afcgd :=range _aaga ._fgg {_cg .Slice (_afcgd ,func (_faa ,_cabgf int )bool {return _adfef (_afcgd [_faa ],_afcgd [_cabgf ])< 0});
};};func (_fcdgg *textTable )markCells (){for _fegc :=0;_fegc < _fcdgg ._daac ;_fegc ++{for _abed :=0;_abed < _fcdgg ._cfffa ;_abed ++{_cbgaf :=_fcdgg .get (_abed ,_fegc );if _cbgaf !=nil {_cbgaf ._abce =true ;};};};};func (_cada paraList )computeEBBoxes (){if _badbg {_dfa .Log .Info ("\u0063o\u006dp\u0075\u0074\u0065\u0045\u0042\u0042\u006f\u0078\u0065\u0073\u003a");
};for _ ,_abcf :=range _cada {_abcf ._dfgfe =_abcf .PdfRectangle ;};_gffg :=_cada .yNeighbours (0);for _gfee ,_fdfc :=range _cada {_bcec :=_fdfc ._dfgfe ;_dccc ,_gbacc :=-1.0e9,+1.0e9;for _ ,_dgea :=range _gffg [_fdfc ]{_fead :=_cada [_dgea ]._dfgfe ;if _fead .Urx < _bcec .Llx {_dccc =_gc .Max (_dccc ,_fead .Urx );
}else if _bcec .Urx < _fead .Llx {_gbacc =_gc .Min (_gbacc ,_fead .Llx );};};for _dfgfb ,_gagac :=range _cada {_fabgd :=_gagac ._dfgfe ;if _gfee ==_dfgfb ||_fabgd .Ury > _bcec .Lly {continue ;};if _dccc <=_fabgd .Llx &&_fabgd .Llx < _bcec .Llx {_bcec .Llx =_fabgd .Llx ;
}else if _fabgd .Urx <=_gbacc &&_bcec .Urx < _fabgd .Urx {_bcec .Urx =_fabgd .Urx ;};};if _badbg {_cd .Printf ("\u0025\u0034\u0064\u003a %\u0036\u002e\u0032\u0066\u2192\u0025\u0036\u002e\u0032\u0066\u0020\u0025\u0071\u000a",_gfee ,_fdfc ._dfgfe ,_bcec ,_abcg (_fdfc .text (),50));
};_fdfc ._dfgfe =_bcec ;};if _dbga {for _ ,_bcdg :=range _cada {_bcdg .PdfRectangle =_bcdg ._dfgfe ;};};};func (_eefa rulingList )blocks (_becgc ,_dbea *ruling )bool {if _becgc ._bbca > _dbea ._fcc ||_dbea ._bbca > _becgc ._fcc {return false ;};_dfaa :=_gc .Max (_becgc ._bbca ,_dbea ._bbca );
_gcef :=_gc .Min (_becgc ._fcc ,_dbea ._fcc );if _becgc ._bedda > _dbea ._bedda {_becgc ,_dbea =_dbea ,_becgc ;};for _ ,_ffca :=range _eefa {if _becgc ._bedda <=_ffca ._bedda +_fgb &&_ffca ._bedda <=_dbea ._bedda +_fgb &&_ffca ._bbca <=_gcef &&_dfaa <=_ffca ._fcc {return true ;
};};return false ;};func (_fef *textObject )newTextMark (_dffg string ,_eged _dg .Matrix ,_cdab _dg .Point ,_adg float64 ,_afag *_ec .PdfFont ,_fdf float64 ,_cabf ,_cfag _dc .Color )(textMark ,bool ){_fcde :=_eged .Angle ();_ebad :=_egcb (_fcde ,_bacc );
var _bgd float64 ;if _ebad %180!=90{_bgd =_eged .ScalingFactorY ();}else {_bgd =_eged .ScalingFactorX ();};_eecc :=_bfce (_eged );_dbfgb :=_ec .PdfRectangle {Llx :_eecc .X ,Lly :_eecc .Y ,Urx :_cdab .X ,Ury :_cdab .Y };switch _ebad %360{case 90:_dbfgb .Urx -=_bgd ;
case 180:_dbfgb .Ury -=_bgd ;case 270:_dbfgb .Urx +=_bgd ;case 0:_dbfgb .Ury +=_bgd ;default:_ebad =0;_dbfgb .Ury +=_bgd ;};if _dbfgb .Llx > _dbfgb .Urx {_dbfgb .Llx ,_dbfgb .Urx =_dbfgb .Urx ,_dbfgb .Llx ;};if _dbfgb .Lly > _dbfgb .Ury {_dbfgb .Lly ,_dbfgb .Ury =_dbfgb .Ury ,_dbfgb .Lly ;
};_aef ,_caab :=_gdabe (_dbfgb ,_fef ._agbc ._da );if !_caab {_dfa .Log .Debug ("\u0054\u0065\u0078\u0074\u0020m\u0061\u0072\u006b\u0020\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0070a\u0067\u0065\u002e\u0020\u0062\u0062\u006f\u0078\u003d\u0025\u0067\u0020\u006d\u0065\u0064\u0069\u0061\u0042\u006f\u0078\u003d\u0025\u0067\u0020\u0074\u0065\u0078\u0074\u003d\u0025q",_dbfgb ,_fef ._agbc ._da ,_dffg );
};_dbfgb =_aef ;_fadf :=_dbfgb ;_fbbcc :=_fef ._agbc ._da ;switch _ebad %360{case 90:_fbbcc .Urx ,_fbbcc .Ury =_fbbcc .Ury ,_fbbcc .Urx ;_fadf =_ec .PdfRectangle {Llx :_fbbcc .Urx -_dbfgb .Ury ,Urx :_fbbcc .Urx -_dbfgb .Lly ,Lly :_dbfgb .Llx ,Ury :_dbfgb .Urx };
case 180:_fadf =_ec .PdfRectangle {Llx :_fbbcc .Urx -_dbfgb .Llx ,Urx :_fbbcc .Urx -_dbfgb .Urx ,Lly :_fbbcc .Ury -_dbfgb .Lly ,Ury :_fbbcc .Ury -_dbfgb .Ury };case 270:_fbbcc .Urx ,_fbbcc .Ury =_fbbcc .Ury ,_fbbcc .Urx ;_fadf =_ec .PdfRectangle {Llx :_dbfgb .Ury ,Urx :_dbfgb .Lly ,Lly :_fbbcc .Ury -_dbfgb .Llx ,Ury :_fbbcc .Ury -_dbfgb .Urx };
};if _fadf .Llx > _fadf .Urx {_fadf .Llx ,_fadf .Urx =_fadf .Urx ,_fadf .Llx ;};if _fadf .Lly > _fadf .Ury {_fadf .Lly ,_fadf .Ury =_fadf .Ury ,_fadf .Lly ;};_afeb :=textMark {_fggb :_dffg ,PdfRectangle :_fadf ,_abdgg :_dbfgb ,_egfa :_afag ,_egdcg :_bgd ,_aabf :_fdf ,_bgaa :_eged ,_cffg :_cdab ,_ggga :_ebad ,_efad :_cabf ,_fbd :_cfag };
if _baae {_dfa .Log .Info ("n\u0065\u0077\u0054\u0065\u0078\u0074M\u0061\u0072\u006b\u003a\u0020\u0073t\u0061\u0072\u0074\u003d\u0025\u002e\u0032f\u0020\u0065\u006e\u0064\u003d\u0025\u002e\u0032\u0066\u0020%\u0073",_eecc ,_cdab ,_afeb .String ());};return _afeb ,_caab ;
};

// PageText represents the layout of text on a device page.
type PageText struct{_ecdd []*textMark ;_ccf string ;_bcbd []TextMark ;_ege []TextTable ;_aea _ec .PdfRectangle ;_fgda []pathSection ;_cdbc []pathSection ;};func _adef (_dbcc ,_ecde _ec .PdfRectangle )bool {return _edag (_dbcc ,_ecde )&&_bbed (_dbcc ,_ecde )};
func (_bgfb *shapesState )stroke (_efb *[]pathSection ){_bgef :=pathSection {_fgee :_bgfb ._dfae ,Color :_bgfb ._gcea .getStrokeColor ()};*_efb =append (*_efb ,_bgef );if _ffec {_cd .Printf ("\u0020 \u0020\u0020S\u0054\u0052\u004fK\u0045\u003a\u0020\u0025\u0064\u0020\u0073t\u0072\u006f\u006b\u0065\u0073\u0020s\u0073\u003d\u0025\u0073\u0020\u0063\u006f\u006c\u006f\u0072\u003d%\u002b\u0076\u0020\u0025\u0036\u002e\u0032\u0066\u000a",len (*_efb ),_bgfb ,_bgfb ._gcea .getStrokeColor (),_bgef .bbox ());
if _cbdd {for _ffaa ,_dcdf :=range _bgfb ._dfae {_cd .Printf ("\u0025\u0038\u0064\u003a\u0020\u0025\u0073\u000a",_ffaa ,_dcdf );if _ffaa ==10{break ;};};};};};func (_dgcge intSet )has (_gadad int )bool {_ ,_gcbfb :=_dgcge [_gadad ];return _gcbfb };func (_gfafg *textTable )reduce ()*textTable {_adge :=make ([]int ,0,_gfafg ._daac );
_ecac :=make ([]int ,0,_gfafg ._cfffa );for _deeb :=0;_deeb < _gfafg ._daac ;_deeb ++{if !_gfafg .emptyRow (_deeb ){_adge =append (_adge ,_deeb );};};for _aadea :=0;_aadea < _gfafg ._cfffa ;_aadea ++{if !_gfafg .emptyColumn (_aadea ){_ecac =append (_ecac ,_aadea );
};};if len (_adge )==_gfafg ._daac &&len (_ecac )==_gfafg ._cfffa {return _gfafg ;};_cagc :=textTable {_efdfb :_gfafg ._efdfb ,_cfffa :len (_ecac ),_daac :len (_adge ),_efeaf :make (map[uint64 ]*textPara ,len (_ecac )*len (_adge ))};if _gca {_dfa .Log .Info ("\u0072\u0065\u0064\u0075ce\u003a\u0020\u0025\u0064\u0078\u0025\u0064\u0020\u002d\u003e\u0020\u0025\u0064\u0078%\u0064",_gfafg ._cfffa ,_gfafg ._daac ,len (_ecac ),len (_adge ));
_dfa .Log .Info ("\u0072\u0065d\u0075\u0063\u0065d\u0043\u006f\u006c\u0073\u003a\u0020\u0025\u002b\u0076",_ecac );_dfa .Log .Info ("\u0072\u0065d\u0075\u0063\u0065d\u0052\u006f\u0077\u0073\u003a\u0020\u0025\u002b\u0076",_adge );};for _cebda ,_dfdce :=range _adge {for _eedcg ,_gbgb :=range _ecac {_cbab :=_gfafg .get (_gbgb ,_dfdce );
if _cbab ==nil {continue ;};if _gca {_cd .Printf ("\u0020 \u0025\u0032\u0064\u002c \u0025\u0032\u0064\u0020\u0028%\u0032d\u002c \u0025\u0032\u0064\u0029\u0020\u0025\u0071\n",_eedcg ,_cebda ,_gbgb ,_dfdce ,_abcg (_cbab .text (),50));};_cagc .put (_eedcg ,_cebda ,_cbab );
};};return &_cagc ;};func _edfe (_agcd _ec .PdfRectangle )*ruling {return &ruling {_dgdc :_aefb ,_bedda :_agcd .Lly ,_bbca :_agcd .Llx ,_fcc :_agcd .Urx };};func (_dafc paraList )findGridTables (_fgcab []gridTiling )[]*textTable {if _gca {_dfa .Log .Info ("\u0066i\u006e\u0064\u0047\u0072\u0069\u0064\u0054\u0061\u0062\u006c\u0065s\u003a\u0020\u0025\u0064\u0020\u0070\u0061\u0072\u0061\u0073",len (_dafc ));
for _cgcgbc ,_dace :=range _dafc {_cd .Printf ("\u0025\u0034\u0064\u003a\u0020\u0025\u0073\u000a",_cgcgbc ,_dace );};};var _ffebe []*textTable ;for _bfcbe ,_gdfd :=range _fgcab {_acdde ,_ecadf :=_dafc .findTableGrid (_gdfd );if _acdde !=nil {_acdde .log (_cd .Sprintf ("\u0066\u0069\u006e\u0064Ta\u0062\u006c\u0065\u0057\u0069\u0074\u0068\u0047\u0072\u0069\u0064\u0073\u003a\u0020%\u0064",_bfcbe ));
_ffebe =append (_ffebe ,_acdde );_acdde .markCells ();};for _fgdae :=range _ecadf {_fgdae ._abce =true ;};};if _gca {_dfa .Log .Info ("\u0066i\u006e\u0064\u0047\u0072i\u0064\u0054\u0061\u0062\u006ce\u0073:\u0020%\u0064\u0020\u0074\u0061\u0062\u006c\u0065s",len (_ffebe ));
};return _ffebe ;};type textMark struct{_ec .PdfRectangle ;_ggga int ;_fggb string ;_dbgg string ;_egfa *_ec .PdfFont ;_egdcg float64 ;_aabf float64 ;_bgaa _dg .Matrix ;_cffg _dg .Point ;_abdgg _ec .PdfRectangle ;_efad _dc .Color ;_fbd _dc .Color ;};var _gcfeb =map[markKind ]string {_fceb :"\u0073\u0074\u0072\u006f\u006b\u0065",_ccbea :"\u0066\u0069\u006c\u006c",_degb :"\u0061u\u0067\u006d\u0065\u006e\u0074"};
func (_agcf pathSection )bbox ()_ec .PdfRectangle {_bdcf :=_agcf ._fgee [0]._dgab [0];_fgcf :=_ec .PdfRectangle {Llx :_bdcf .X ,Urx :_bdcf .X ,Lly :_bdcf .Y ,Ury :_bdcf .Y };_fcb :=func (_bcgb _dg .Point ){if _bcgb .X < _fgcf .Llx {_fgcf .Llx =_bcgb .X ;
}else if _bcgb .X > _fgcf .Urx {_fgcf .Urx =_bcgb .X ;};if _bcgb .Y < _fgcf .Lly {_fgcf .Lly =_bcgb .Y ;}else if _bcgb .Y > _fgcf .Ury {_fgcf .Ury =_bcgb .Y ;};};for _ ,_ebdf :=range _agcf ._fgee [0]._dgab [1:]{_fcb (_ebdf );};for _ ,_dcc :=range _agcf ._fgee [1:]{for _ ,_aedfd :=range _dcc ._dgab {_fcb (_aedfd );
};};return _fgcf ;};func (_fgacb gridTile )contains (_cgcd _ec .PdfRectangle )bool {if _fgacb .numBorders ()< 3{return false ;};if _fgacb ._edfa &&_cgcd .Llx < _fgacb .Llx -_fgdb {return false ;};if _fgacb ._agdea &&_cgcd .Urx > _fgacb .Urx +_fgdb {return false ;
};if _fgacb ._cabd &&_cgcd .Lly < _fgacb .Lly -_fgdb {return false ;};if _fgacb ._deea &&_cgcd .Ury > _fgacb .Ury +_fgdb {return false ;};return true ;};func (_gag *stateStack )pop ()*textState {if _gag .empty (){return nil ;};_gadf :=*(*_gag )[len (*_gag )-1];
*_gag =(*_gag )[:len (*_gag )-1];return &_gadf ;};func (_bbf *textObject )setTextLeading (_bcac float64 ){if _bbf ==nil {return ;};_bbf ._caefc ._abe =_bcac ;};func _egdc (_babe []*wordBag )[]*wordBag {if len (_babe )<=1{return _babe ;};if _gaaac {_dfa .Log .Info ("\u006d\u0065\u0072\u0067\u0065\u0057\u006f\u0072\u0064B\u0061\u0067\u0073\u003a");
};_cg .Slice (_babe ,func (_gaacb ,_bbg int )bool {_becd ,_gcc :=_babe [_gaacb ],_babe [_bbg ];_ecge :=_becd .Width ()*_becd .Height ();_dffc :=_gcc .Width ()*_gcc .Height ();if _ecge !=_dffc {return _ecge > _dffc ;};if _becd .Height ()!=_gcc .Height (){return _becd .Height ()> _gcc .Height ();
};return _gaacb < _bbg ;});var _acec []*wordBag ;_dee :=make (intSet );for _cccf :=0;_cccf < len (_babe );_cccf ++{if _dee .has (_cccf ){continue ;};_fggf :=_babe [_cccf ];for _eeda :=_cccf +1;_eeda < len (_babe );_eeda ++{if _dee .has (_cccf ){continue ;
};_beea :=_babe [_eeda ];_aca :=_fggf .PdfRectangle ;_aca .Llx -=_fggf ._dca ;if _bdga (_aca ,_beea .PdfRectangle ){_fggf .absorb (_beea );_dee .add (_eeda );};};_acec =append (_acec ,_fggf );};if len (_babe )!=len (_acec )+len (_dee ){_dfa .Log .Error ("\u006d\u0065\u0072ge\u0057\u006f\u0072\u0064\u0042\u0061\u0067\u0073\u003a \u0025d\u2192%\u0064 \u0061\u0062\u0073\u006f\u0072\u0062\u0065\u0064\u003d\u0025\u0064",len (_babe ),len (_acec ),len (_dee ));
};return _acec ;};func (_cdfc *shapesState )moveTo (_cge ,_afca float64 ){_cdfc ._ddfb =true ;_cdfc ._fegd =_cdfc .devicePoint (_cge ,_afca );if _eabb {_dfa .Log .Info ("\u006d\u006fv\u0065\u0054\u006f\u003a\u0020\u0025\u002e\u0032\u0066\u002c\u0025\u002e\u0032\u0066\u0020\u0064\u0065\u0076\u0069\u0063\u0065\u003d%.\u0032\u0066",_cge ,_afca ,_cdfc ._fegd );
};};

// New returns an Extractor instance for extracting content from the input PDF page.
func New (page *_ec .PdfPage )(*Extractor ,error ){const _cae ="\u0065\u0078\u0074\u0072\u0061\u0063\u0074\u006f\u0072\u002e\u004e\u0065\u0077";_ba ,_bc :=page .GetAllContentStreams ();if _bc !=nil {return nil ,_bc ;};_fb ,_bc :=page .GetMediaBox ();if _bc !=nil {return nil ,_cd .Errorf ("\u0065\u0078\u0074r\u0061\u0063\u0074\u006fr\u0020\u0072\u0065\u0071\u0075\u0069\u0072e\u0073\u0020\u006d\u0065\u0064\u0069\u0061\u0042\u006f\u0078\u002e\u0020\u0025\u0076",_bc );
};_dba :=&Extractor {_aa :_ba ,_af :page .Resources ,_da :*_fb ,_gd :map[string ]fontEntry {},_ffe :map[string ]textResult {}};if _dba ._da .Llx > _dba ._da .Urx {_dfa .Log .Info ("\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u0068\u0061\u0073\u0020\u0058\u0020\u0063\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0073\u0020r\u0065\u0076\u0065\u0072\u0073\u0065\u0064\u002e\u0020\u0025\u002e\u0032\u0066\u0020F\u0069x\u0069\u006e\u0067\u002e",_dba ._da );
_dba ._da .Llx ,_dba ._da .Urx =_dba ._da .Urx ,_dba ._da .Llx ;};if _dba ._da .Lly > _dba ._da .Ury {_dfa .Log .Info ("\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u0068\u0061\u0073\u0020\u0059\u0020\u0063\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0073\u0020r\u0065\u0076\u0065\u0072\u0073\u0065\u0064\u002e\u0020\u0025\u002e\u0032\u0066\u0020F\u0069x\u0069\u006e\u0067\u002e",_dba ._da );
_dba ._da .Lly ,_dba ._da .Ury =_dba ._da .Ury ,_dba ._da .Lly ;};_ff .TrackUse (_cae );return _dba ,nil ;};func (_egcg *shapesState )devicePoint (_gdf ,_gaea float64 )_dg .Point {_fdde :=_egcg ._afbf .Mult (_egcg ._bbef );_gdf ,_gaea =_fdde .Transform (_gdf ,_gaea );
return _dg .NewPoint (_gdf ,_gaea );};

// PageImages represents extracted images on a PDF page with spatial information:
// display position and size.
type PageImages struct{Images []ImageMark ;};

// String returns a string describing the current state of the textState stack.
func (_eda *stateStack )String ()string {_adbf :=[]string {_cd .Sprintf ("\u002d\u002d\u002d\u002d f\u006f\u006e\u0074\u0020\u0073\u0074\u0061\u0063\u006b\u003a\u0020\u0025\u0064",len (*_eda ))};for _eea ,_cabgc :=range *_eda {_afbg :="\u003c\u006e\u0069l\u003e";
if _cabgc !=nil {_afbg =_cabgc .String ();};_adbf =append (_adbf ,_cd .Sprintf ("\u0009\u0025\u0032\u0064\u003a\u0020\u0025\u0073",_eea ,_afbg ));};return _g .Join (_adbf ,"\u000a");};func _edbf (_dfbe string )bool {for _ ,_gbeg :=range _dfbe {if !_df .IsSpace (_gbeg ){return false ;
};};return true ;};func (_bfad *textPara )toTextMarks (_adeg *int )[]TextMark {if _bfad ._dgba ==nil {return _bfad .toCellTextMarks (_adeg );};var _aafc []TextMark ;for _dfdf :=0;_dfdf < _bfad ._dgba ._daac ;_dfdf ++{for _dged :=0;_dged < _bfad ._dgba ._cfffa ;
_dged ++{_eaece :=_bfad ._dgba .get (_dged ,_dfdf );if _eaece ==nil {_aafc =_ced (_aafc ,_adeg ,"\u0009");}else {_ccac :=_eaece .toCellTextMarks (_adeg );_aafc =append (_aafc ,_ccac ...);};_aafc =_ced (_aafc ,_adeg ,"\u0020");};if _dfdf < _bfad ._dgba ._daac -1{_aafc =_ced (_aafc ,_adeg ,"\u000a");
};};return _aafc ;};func (_bfccc *ruling )encloses (_dcdcb ,_gfff float64 )bool {return _bfccc ._bbca -_bffc <=_dcdcb &&_gfff <=_bfccc ._fcc +_bffc ;};func _ebdc (_bddc []float64 ,_adgd ,_eafeb float64 )[]float64 {_dbfc ,_bgbdg :=_adgd ,_eafeb ;if _bgbdg < _dbfc {_dbfc ,_bgbdg =_bgbdg ,_dbfc ;
};_gfad :=make ([]float64 ,0,len (_bddc )+2);_gfad =append (_gfad ,_adgd );for _ ,_febeb :=range _bddc {if _febeb <=_dbfc {continue ;}else if _febeb >=_bgbdg {break ;};_gfad =append (_gfad ,_febeb );};_gfad =append (_gfad ,_eafeb );return _gfad ;};func (_eab *stateStack )empty ()bool {return len (*_eab )==0};
func (_edeg *ruling )alignsPrimary (_bfbff *ruling )bool {return _edeg ._dgdc ==_bfbff ._dgdc &&_gc .Abs (_edeg ._bedda -_bfbff ._bedda )< _fgb *0.5;};

// NewFromContents creates a new extractor from contents and page resources.
func NewFromContents (contents string ,resources *_ec .PdfPageResources )(*Extractor ,error ){const _fd ="\u0065x\u0074\u0072\u0061\u0063t\u006f\u0072\u002e\u004e\u0065w\u0046r\u006fm\u0043\u006f\u006e\u0074\u0065\u006e\u0074s";_eb :=&Extractor {_aa :contents ,_af :resources ,_gd :map[string ]fontEntry {},_ffe :map[string ]textResult {}};
_ff .TrackUse (_fd );return _eb ,nil ;};func _fcfa (_gcbf _ec .PdfRectangle )*ruling {return &ruling {_dgdc :_cacg ,_bedda :_gcbf .Llx ,_bbca :_gcbf .Lly ,_fcc :_gcbf .Ury };};func (_bcdd rulingList )toTilings ()(rulingList ,[]gridTiling ){_bcdd .log ("\u0074o\u0054\u0069\u006c\u0069\u006e\u0067s");
if len (_bcdd )==0{return nil ,nil ;};_bcdd =_bcdd .tidied ("\u0061\u006c\u006c");_bcdd .log ("\u0074\u0069\u0064\u0069\u0065\u0064");_gggf :=_bcdd .toGrids ();_beeab :=make ([]gridTiling ,len (_gggf ));for _dedec ,_fffd :=range _gggf {_beeab [_dedec ]=_fffd .asTiling ();
};return _bcdd ,_beeab ;};func (_eeaec rulingList )intersections ()map[int ]intSet {var _fcbfd ,_dfbc []int ;for _ceff ,_fgaea :=range _eeaec {switch _fgaea ._dgdc {case _cacg :_fcbfd =append (_fcbfd ,_ceff );case _aefb :_dfbc =append (_dfbc ,_ceff );};
};if len (_fcbfd )< _aeef +1||len (_dfbc )< _cefc +1{return nil ;};if len (_fcbfd )+len (_dfbc )> _bfcc {_dfa .Log .Debug ("\u0069\u006e\u0074\u0065\u0072\u0073e\u0063\u0074\u0069\u006f\u006e\u0073\u003a\u0020\u0054\u004f\u004f\u0020\u004d\u0041\u004e\u0059\u0020\u0072\u0075\u006ci\u006e\u0067\u0073\u0020\u0076\u0065\u0063\u0073\u003d\u0025\u0064\u0020\u003d\u0020%\u0064 \u0078\u0020\u0025\u0064",len (_eeaec ),len (_fcbfd ),len (_dfbc ));
return nil ;};_eacb :=make (map[int ]intSet ,len (_fcbfd )+len (_dfbc ));for _ ,_fggfe :=range _fcbfd {for _ ,_fcba :=range _dfbc {if _eeaec [_fggfe ].intersects (_eeaec [_fcba ]){if _ ,_dcec :=_eacb [_fggfe ];!_dcec {_eacb [_fggfe ]=make (intSet );};if _ ,_cafdd :=_eacb [_fcba ];
!_cafdd {_eacb [_fcba ]=make (intSet );};_eacb [_fggfe ].add (_fcba );_eacb [_fcba ].add (_fggfe );};};};return _eacb ;};func _bgdg (_bdcc ,_feda *textPara )bool {if _bdcc ._bfeg ||_feda ._bfeg {return true ;};return _cdfce (_bdcc .depth ()-_feda .depth ());
};func (_gfc *shapesState )establishSubpath ()*subpath {_dcbb ,_fdee :=_gfc .lastpointEstablished ();if !_fdee {_gfc ._dfae =append (_gfc ._dfae ,_cdfe (_dcbb ));};if len (_gfc ._dfae )==0{return nil ;};_gfc ._ddfb =false ;return _gfc ._dfae [len (_gfc ._dfae )-1];
};func (_efa *wordBag )highestWord (_fbcc int ,_defe ,_daaf float64 )*textWord {for _ ,_ddgg :=range _efa ._fgg [_fbcc ]{if _defe <=_ddgg ._ddbfa &&_ddgg ._ddbfa <=_daaf {return _ddgg ;};};return nil ;};func _cbae (_cgfag map[int ][]float64 )string {_dfaag :=_geab (_cgfag );
_gabaa :=make ([]string ,len (_cgfag ));for _gdcd ,_cfagc :=range _dfaag {_gabaa [_gdcd ]=_cd .Sprintf ("\u0025\u0064\u003a\u0020\u0025\u002e\u0032\u0066",_cfagc ,_cgfag [_cfagc ]);};return _cd .Sprintf ("\u007b\u0025\u0073\u007d",_g .Join (_gabaa ,"\u002c\u0020"));
};

// String returns a description of `b`.
func (_beb *wordBag )String ()string {var _gdggd []string ;for _ ,_efef :=range _beb .depthIndexes (){_gbag :=_beb ._fgg [_efef ];for _ ,_cfde :=range _gbag {_gdggd =append (_gdggd ,_cfde ._dfaagg );};};return _cd .Sprintf ("\u0025.\u0032\u0066\u0020\u0066\u006f\u006e\u0074\u0073\u0069\u007a\u0065=\u0025\u002e\u0032\u0066\u0020\u0025\u0064\u0020\u0025\u0071",_beb .PdfRectangle ,_beb ._dca ,len (_gdggd ),_gdggd );
};func (_ecbc *imageExtractContext )extractFormImages (_cee *_ca .PdfObjectName ,_ddgf _b .GraphicsState ,_gg *_ec .PdfPageResources )error {_feb ,_ece :=_gg .GetXObjectFormByName (*_cee );if _ece !=nil {return _ece ;};if _feb ==nil {return nil ;};_ged ,_ece :=_feb .GetContentStream ();
if _ece !=nil {return _ece ;};_ebdb :=_feb .Resources ;if _ebdb ==nil {_ebdb =_gg ;};_ece =_ecbc .extractContentStreamImages (string (_ged ),_ebdb );if _ece !=nil {return _ece ;};_ecbc ._daf ++;return nil ;};func _edag (_ebdag ,_fed _ec .PdfRectangle )bool {return _fed .Llx <=_ebdag .Urx &&_ebdag .Llx <=_fed .Urx ;
};func (_ceegg *textTable )putComposite (_addee ,_fdffc int ,_fgdfb paraList ,_abbg _ec .PdfRectangle ){if len (_fgdfb )==0{_dfa .Log .Error ("\u0074\u0065xt\u0054\u0061\u0062l\u0065\u0029\u0020\u0070utC\u006fmp\u006f\u0073\u0069\u0074\u0065\u003a\u0020em\u0070\u0074\u0079\u0020\u0070\u0061\u0072a\u0073");
return ;};_gecc :=compositeCell {_abbg ,_fgdfb };if _gca {_cd .Printf ("\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0020\u0070\u0075\u0074\u0043\u006f\u006d\u0070o\u0073i\u0074\u0065\u0028\u0025\u0064\u002c\u0025\u0064\u0029\u003c\u002d\u0025\u0073\u000a",_addee ,_fdffc ,_gecc .String ());
};_gecc .updateBBox ();_ceegg ._gfgf [_dgeff (_addee ,_fdffc )]=_gecc ;};func (_gcegc *textWord )absorb (_gaeag *textWord ){_gcegc .PdfRectangle =_bedc (_gcegc .PdfRectangle ,_gaeag .PdfRectangle );_gcegc ._afgbc =append (_gcegc ._afgbc ,_gaeag ._afgbc ...);
};func (_ebbca *textLine )bbox ()_ec .PdfRectangle {return _ebbca .PdfRectangle };func (_bgcc paraList )llyOrdering ()[]int {_gggab :=make ([]int ,len (_bgcc ));for _cefb :=range _bgcc {_gggab [_cefb ]=_cefb ;};_cg .SliceStable (_gggab ,func (_badc ,_acddb int )bool {_abee ,_dfad :=_gggab [_badc ],_gggab [_acddb ];
return _bgcc [_abee ].Lly < _bgcc [_dfad ].Lly ;});return _gggab ;};func (_bfaf paraList )llyRange (_bagb []int ,_dcbbe ,_acc float64 )[]int {_dcffa :=len (_bfaf );if _acc < _bfaf [_bagb [0]].Lly ||_dcbbe > _bfaf [_bagb [_dcffa -1]].Lly {return nil ;};
_cgeg :=_cg .Search (_dcffa ,func (_babb int )bool {return _bfaf [_bagb [_babb ]].Lly >=_dcbbe });_gggaa :=_cg .Search (_dcffa ,func (_bgag int )bool {return _bfaf [_bagb [_bgag ]].Lly > _acc });return _bagb [_cgeg :_gggaa ];};func (_fbbef rulingList )secMinMax ()(float64 ,float64 ){_bbefa ,_gcce :=_fbbef [0]._bbca ,_fbbef [0]._fcc ;
for _ ,_dead :=range _fbbef [1:]{if _dead ._bbca < _bbefa {_bbefa =_dead ._bbca ;};if _dead ._fcc > _gcce {_gcce =_dead ._fcc ;};};return _bbefa ,_gcce ;};type textLine struct{_ec .PdfRectangle ;_fgcd float64 ;_dcce []*textWord ;_gbfeg float64 ;};func (_cacdf *textWord )appendMark (_acdcf *textMark ,_eefb _ec .PdfRectangle ){_cacdf ._afgbc =append (_cacdf ._afgbc ,_acdcf );
_cacdf .PdfRectangle =_bedc (_cacdf .PdfRectangle ,_acdcf .PdfRectangle );if _acdcf ._egdcg > _cacdf ._dbcg {_cacdf ._dbcg =_acdcf ._egdcg ;};_cacdf ._ddbfa =_eefb .Ury -_cacdf .PdfRectangle .Lly ;};func (_bdfe rulingList )snapToGroups ()rulingList {_fdfeb ,_ccfed :=_bdfe .vertsHorzs ();
if len (_fdfeb )> 0{_fdfeb =_fdfeb .snapToGroupsDirection ();};if len (_ccfed )> 0{_ccfed =_ccfed .snapToGroupsDirection ();};_cgde :=append (_fdfeb ,_ccfed ...);_cgde .log ("\u0073\u006e\u0061p\u0054\u006f\u0047\u0072\u006f\u0075\u0070\u0073");return _cgde ;
};func (_ccde *textTable )compositeColCorridors ()map[int ][]float64 {_agfac :=make (map[int ][]float64 ,_ccde ._cfffa );if _gca {_dfa .Log .Info ("\u0063\u006f\u006d\u0070o\u0073\u0069\u0074\u0065\u0043\u006f\u006c\u0043\u006f\u0072r\u0069d\u006f\u0072\u0073\u003a\u0020\u0077\u003d%\u0064\u0020",_ccde ._cfffa );
};for _bacg :=0;_bacg < _ccde ._cfffa ;_bacg ++{_agfac [_bacg ]=nil ;};return _agfac ;};func _bfegc (_ecegd _ec .PdfRectangle ,_edga ,_bdcb ,_eeccf ,_fgca *ruling )gridTile {_dded :=_ecegd .Llx ;_agafa :=_ecegd .Urx ;_bdbbc :=_ecegd .Lly ;_caee :=_ecegd .Ury ;
return gridTile {PdfRectangle :_ecegd ,_edfa :_edga !=nil &&_edga .encloses (_bdbbc ,_caee ),_agdea :_bdcb !=nil &&_bdcb .encloses (_bdbbc ,_caee ),_cabd :_eeccf !=nil &&_eeccf .encloses (_dded ,_agafa ),_deea :_fgca !=nil &&_fgca .encloses (_dded ,_agafa )};
};func _aaed (_faef []int )[]int {_gdaf :=make ([]int ,len (_faef ));for _faafe ,_ecccbc :=range _faef {_gdaf [len (_faef )-1-_faafe ]=_ecccbc ;};return _gdaf ;};func (_edgf *textTable )get (_agegg ,_bgfe int )*textPara {return _edgf ._efeaf [_dgeff (_agegg ,_bgfe )]};
func _dfg (_fcbd ,_bbae bounded )float64 {return _fcbd .bbox ().Llx -_bbae .bbox ().Urx };func (_bfg paraList )tables ()[]TextTable {var _deda []TextTable ;if _gca {_dfa .Log .Info ("\u0070\u0061\u0072\u0061\u0073\u002e\u0074\u0061\u0062\u006c\u0065\u0073\u003a");
};for _ ,_beeb :=range _bfg {_beagd :=_beeb ._dgba ;if _beagd !=nil &&_beagd .isExportable (){_deda =append (_deda ,_beagd .toTextTable ());};};return _deda ;};

// String returns a human readable description of `ss`.
func (_bgac *shapesState )String ()string {return _cd .Sprintf ("\u007b\u0025\u0064\u0020su\u0062\u0070\u0061\u0074\u0068\u0073\u0020\u0066\u0072\u0065\u0073\u0068\u003d\u0025t\u007d",len (_bgac ._dfae ),_bgac ._ddfb );};func _bdga (_bede ,_aeaa _ec .PdfRectangle )bool {return _bede .Llx <=_aeaa .Llx &&_aeaa .Urx <=_bede .Urx &&_bede .Lly <=_aeaa .Lly &&_aeaa .Ury <=_bede .Ury ;
};var (_gfebd =map[rune ]string {0x0060:"\u0300",0x02CB:"\u0300",0x0027:"\u0301",0x00B4:"\u0301",0x02B9:"\u0301",0x02CA:"\u0301",0x005E:"\u0302",0x02C6:"\u0302",0x007E:"\u0303",0x02DC:"\u0303",0x00AF:"\u0304",0x02C9:"\u0304",0x02D8:"\u0306",0x02D9:"\u0307",0x00A8:"\u0308",0x00B0:"\u030a",0x02DA:"\u030a",0x02BA:"\u030b",0x02DD:"\u030b",0x02C7:"\u030c",0x02C8:"\u030d",0x0022:"\u030e",0x02BB:"\u0312",0x02BC:"\u0313",0x0486:"\u0313",0x055A:"\u0313",0x02BD:"\u0314",0x0485:"\u0314",0x0559:"\u0314",0x02D4:"\u031d",0x02D5:"\u031e",0x02D6:"\u031f",0x02D7:"\u0320",0x02B2:"\u0321",0x00B8:"\u0327",0x02CC:"\u0329",0x02B7:"\u032b",0x02CD:"\u0331",0x005F:"\u0332",0x204E:"\u0359"};
);func (_dfe *shapesState )quadraticTo (_aecgb ,_daae ,_fbbe ,_cceg float64 ){if _eabb {_dfa .Log .Info ("\u0071\u0075\u0061d\u0072\u0061\u0074\u0069\u0063\u0054\u006f\u003a");};_dfe .addPoint (_fbbe ,_cceg );};

// TextMark represents extracted text on a page with information regarding both textual content,
// formatting (font and size) and positioning.
// It is the smallest unit of text on a PDF page, typically a single character.
//
// getBBox() in test_text.go shows how to compute bounding boxes of substrings of extracted text.
// The following code extracts the text on PDF page `page` into `text` then finds the bounding box
// `bbox` of substring `term` in `text`.
//
//     ex, _ := New(page)
//     // handle errors
//     pageText, _, _, err := ex.ExtractPageText()
//     // handle errors
//     text := pageText.Text()
//     textMarks := pageText.Marks()
//
//     	start := strings.Index(text, term)
//      end := start + len(term)
//      spanMarks, err := textMarks.RangeOffset(start, end)
//      // handle errors
//      bbox, ok := spanMarks.BBox()
//      // handle errors
type TextMark struct{

// Text is the extracted text.
Text string ;

// Original is the text in the PDF. It has not been decoded like `Text`.
Original string ;

// BBox is the bounding box of the text.
BBox _ec .PdfRectangle ;

// Font is the font the text was drawn with.
Font *_ec .PdfFont ;

// FontSize is the font size the text was drawn with.
FontSize float64 ;

// Offset is the offset of the start of TextMark.Text in the extracted text. If you do this
//   text, textMarks := pageText.Text(), pageText.Marks()
//   marks := textMarks.Elements()
// then marks[i].Offset is the offset of marks[i].Text in text.
Offset int ;

// Meta is set true for spaces and line breaks that we insert in the extracted text. We insert
// spaces (line breaks) when we see characters that are over a threshold horizontal (vertical)
//  distance  apart. See wordJoiner (lineJoiner) in PageText.computeViews().
Meta bool ;

// FillColor is the fill color of the text.
// The color is nil for spaces and line breaks (i.e. the Meta field is true).
FillColor _dc .Color ;

// StrokeColor is the stroke color of the text.
// The color is nil for spaces and line breaks (i.e. the Meta field is true).
StrokeColor _dc .Color ;

// Orientation is the text orientation
Orientation int ;};var _aggd =map[rulingKind ]string {_fafdd :"\u006e\u006f\u006e\u0065",_aefb :"\u0068\u006f\u0072\u0069\u007a\u006f\u006e\u0074\u0061\u006c",_cacg :"\u0076\u0065\u0072\u0074\u0069\u0063\u0061\u006c"};func (_bbbd *textObject )getFontDirect (_gfgg string )(*_ec .PdfFont ,error ){_cgdf ,_aggc :=_bbbd .getFontDict (_gfgg );
if _aggc !=nil {return nil ,_aggc ;};_eed ,_aggc :=_ec .NewPdfFontFromPdfObject (_cgdf );if _aggc !=nil {_dfa .Log .Debug ("\u0067\u0065\u0074\u0046\u006f\u006e\u0074\u0044\u0069\u0072\u0065\u0063\u0074\u003a\u0020\u004e\u0065\u0077Pd\u0066F\u006f\u006e\u0074\u0046\u0072\u006f\u006d\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u006e\u0061\u006d\u0065\u003d%\u0023\u0071\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gfgg ,_aggc );
};return _eed ,_aggc ;};func (_beddb rulingList )splitSec ()[]rulingList {_cg .Slice (_beddb ,func (_eebbg ,_cegff int )bool {_cadd ,_bbefgf :=_beddb [_eebbg ],_beddb [_cegff ];if _cadd ._bbca !=_bbefgf ._bbca {return _cadd ._bbca < _bbefgf ._bbca ;};return _cadd ._fcc < _bbefgf ._fcc ;
});_ebaa :=make (map[*ruling ]struct{},len (_beddb ));_fbce :=func (_fcad *ruling )rulingList {_daba :=rulingList {_fcad };_ebaa [_fcad ]=struct{}{};for _ ,_adccf :=range _beddb {if _ ,_ebde :=_ebaa [_adccf ];_ebde {continue ;};for _ ,_gdced :=range _daba {if _adccf .alignsSec (_gdced ){_daba =append (_daba ,_adccf );
_ebaa [_adccf ]=struct{}{};break ;};};};return _daba ;};_bcdc :=[]rulingList {_fbce (_beddb [0])};for _ ,_ccba :=range _beddb [1:]{if _ ,_edagg :=_ebaa [_ccba ];_edagg {continue ;};_bcdc =append (_bcdc ,_fbce (_ccba ));};return _bcdc ;};func _dgeff (_afea ,_bffef int )uint64 {return uint64 (_afea )*0x1000000+uint64 (_bffef )};
func (_fda *textObject )reset (){_fda ._gcgc =_dg .IdentityMatrix ();_fda ._agab =_dg .IdentityMatrix ();_fda ._ebb =nil ;};func _dfeeb (_defb ,_ffbb int )int {if _defb > _ffbb {return _defb ;};return _ffbb ;};type intSet map[int ]struct{};func (_cceb paraList )lines ()[]*textLine {var _cegf []*textLine ;
for _ ,_efdf :=range _cceb {_cegf =append (_cegf ,_efdf ._cecf ...);};return _cegf ;};func _fdad (_gcgbg ,_gcaa float64 )bool {return _gc .Abs (_gcgbg -_gcaa )<=_bffc };const (_egcgf markKind =iota ;_fceb ;_ccbea ;_degb ;);func (_dfdc *wordBag )depthBand (_gegde ,_cef float64 )[]int {if len (_dfdc ._fgg )==0{return nil ;
};return _dfdc .depthRange (_dfdc .getDepthIdx (_gegde ),_dfdc .getDepthIdx (_cef ));};func _cdfce (_gcedbb float64 )bool {return _gc .Abs (_gcedbb )< _eebb };type shapesState struct{_bbef _dg .Matrix ;_afbf _dg .Matrix ;_dfae []*subpath ;_ddfb bool ;_fegd _dg .Point ;
_gcea *textObject ;};func (_gdcbg *textWord )bbox ()_ec .PdfRectangle {return _gdcbg .PdfRectangle };type textWord struct{_ec .PdfRectangle ;_ddbfa float64 ;_dfaagg string ;_afgbc []*textMark ;_dbcg float64 ;_fdfaf bool ;};func (_cbde *textLine )toTextMarks (_gafe *int )[]TextMark {var _acea []TextMark ;
for _ ,_aedd :=range _cbde ._dcce {if _aedd ._fdfaf {_acea =_ced (_acea ,_gafe ,"\u0020");};_bdbed :=_aedd .toTextMarks (_gafe );_acea =append (_acea ,_bdbed ...);};return _acea ;};func _gbeb (_eeba string )string {_cafd :=[]rune (_eeba );return string (_cafd [:len (_cafd )-1])};
func (_bfced *shapesState )lastpointEstablished ()(_dg .Point ,bool ){if _bfced ._ddfb {return _bfced ._fegd ,false ;};_cdgb :=len (_bfced ._dfae );if _cdgb > 0&&_bfced ._dfae [_cdgb -1]._dbdc {return _bfced ._dfae [_cdgb -1].last (),false ;};return _dg .Point {},true ;
};

// String returns a string describing `tm`.
func (_dfc TextMark )String ()string {_cad :=_dfc .BBox ;var _cbfdb string ;if _dfc .Font !=nil {_cbfdb =_dfc .Font .String ();if len (_cbfdb )> 50{_cbfdb =_cbfdb [:50]+"\u002e\u002e\u002e";};};var _bgfa string ;if _dfc .Meta {_bgfa ="\u0020\u002a\u004d\u002a";
};return _cd .Sprintf ("\u007b\u0054\u0065\u0078t\u004d\u0061\u0072\u006b\u003a\u0020\u0025\u0064\u0020%\u0071\u003d\u0025\u0030\u0032\u0078\u0020\u0028\u0025\u0036\u002e\u0032\u0066\u002c\u0020\u0025\u0036\u002e2\u0066\u0029\u0020\u0028\u00256\u002e\u0032\u0066\u002c\u0020\u0025\u0036\u002e\u0032\u0066\u0029\u0020\u0025\u0073\u0025\u0073\u007d",_dfc .Offset ,_dfc .Text ,[]rune (_dfc .Text ),_cad .Llx ,_cad .Lly ,_cad .Urx ,_cad .Ury ,_cbfdb ,_bgfa );
};func _deec (_ccedc []*textWord ,_bggc *textWord )[]*textWord {for _eega ,_dcaba :=range _ccedc {if _dcaba ==_bggc {return _accd (_ccedc ,_eega );};};_dfa .Log .Error ("\u0072\u0065\u006d\u006f\u0076e\u0057\u006f\u0072\u0064\u003a\u0020\u0077\u006f\u0072\u0064\u0073\u0020\u0064o\u0065\u0073\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0077\u006f\u0072\u0064\u003d\u0025\u0073",_bggc );
return nil ;};func (_ggca *wordBag )blocked (_cgfe *textWord )bool {if _cgfe .Urx < _ggca .Llx {_gdgg :=_fege (_cgfe .PdfRectangle );_ffbe :=_fcfa (_ggca .PdfRectangle );if _ggca ._agee .blocks (_gdgg ,_ffbe ){if _cgfa {_dfa .Log .Info ("\u0062\u006c\u006f\u0063ke\u0064\u0020\u2190\u0078\u003a\u0020\u0025\u0073\u0020\u0025\u0073",_cgfe ,_ggca );
};return true ;};}else if _ggca .Urx < _cgfe .Llx {_cded :=_fege (_ggca .PdfRectangle );_dcag :=_fcfa (_cgfe .PdfRectangle );if _ggca ._agee .blocks (_cded ,_dcag ){if _cgfa {_dfa .Log .Info ("b\u006co\u0063\u006b\u0065\u0064\u0020\u0078\u2192\u0020:\u0020\u0025\u0073\u0020%s",_cgfe ,_ggca );
};return true ;};};if _cgfe .Ury < _ggca .Lly {_dbff :=_ecdgg (_cgfe .PdfRectangle );_dfeg :=_edfe (_ggca .PdfRectangle );if _ggca ._befg .blocks (_dbff ,_dfeg ){if _cgfa {_dfa .Log .Info ("\u0062\u006c\u006f\u0063ke\u0064\u0020\u2190\u0079\u003a\u0020\u0025\u0073\u0020\u0025\u0073",_cgfe ,_ggca );
};return true ;};}else if _ggca .Ury < _cgfe .Lly {_ecbb :=_ecdgg (_ggca .PdfRectangle );_abg :=_edfe (_cgfe .PdfRectangle );if _ggca ._befg .blocks (_ecbb ,_abg ){if _cgfa {_dfa .Log .Info ("b\u006co\u0063\u006b\u0065\u0064\u0020\u0079\u2192\u0020:\u0020\u0025\u0073\u0020%s",_cgfe ,_ggca );
};return true ;};};return false ;};func (_bff *Extractor )extractPageText (_ecbe string ,_gcdc *_ec .PdfPageResources ,_dgb _dg .Matrix ,_aae int )(*PageText ,int ,int ,error ){_dfa .Log .Trace ("\u0065x\u0074\u0072\u0061\u0063t\u0050\u0061\u0067\u0065\u0054e\u0078t\u003a \u006c\u0065\u0076\u0065\u006c\u003d\u0025d",_aae );
_gdd :=&PageText {_aea :_bff ._da };_dfac :=_aecg (_bff ._da );var _cc stateStack ;_ega :=_bdf (_bff ,_gcdc ,_b .GraphicsState {},&_dfac ,&_cc );_gcf :=shapesState {_afbf :_dgb ,_bbef :_dg .IdentityMatrix (),_gcea :_ega };var _bcg bool ;if _aae > _abc {_eeb :=_e .New ("\u0066\u006f\u0072\u006d s\u0074\u0061\u0063\u006b\u0020\u006f\u0076\u0065\u0072\u0066\u006c\u006f\u0077");
_dfa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0065\u0078\u0074\u0072\u0061\u0063\u0074\u0050\u0061\u0067\u0065\u0054\u0065\u0078\u0074\u002e\u0020\u0072\u0065\u0063u\u0072\u0073\u0069\u006f\u006e\u0020\u006c\u0065\u0076\u0065\u006c\u003d\u0025\u0064 \u0065r\u0072\u003d\u0025\u0076",_aae ,_eeb );
return _gdd ,_dfac ._dede ,_dfac ._gfd ,_eeb ;};_gda :=_b .NewContentStreamParser (_ecbe );_fec ,_fdc :=_gda .Parse ();if _fdc !=nil {_dfa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020e\u0078\u0074\u0072a\u0063\u0074\u0050\u0061g\u0065\u0054\u0065\u0078\u0074\u0020\u0070\u0061\u0072\u0073\u0065\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fdc );
return _gdd ,_dfac ._dede ,_dfac ._gfd ,_fdc ;};_cdbd :=_b .NewContentStreamProcessor (*_fec );_cdbd .AddHandler (_b .HandlerConditionEnumAllOperands ,"",func (_abd *_b .ContentStreamOperation ,_bac _b .GraphicsState ,_efe *_ec .PdfPageResources )error {_cga :=_abd .Operand ;
if _fad {_dfa .Log .Info ("\u0026&\u0026\u0020\u006f\u0070\u003d\u0025s",_abd );};switch _cga {case "\u0071":if _eabb {_dfa .Log .Info ("\u0063\u0074\u006d\u003d\u0025\u0073",_gcf ._bbef );};_cc .push (&_dfac );case "\u0051":if !_cc .empty (){_dfac =*_cc .pop ();
};_gcf ._bbef =_bac .CTM ;if _eabb {_dfa .Log .Info ("\u0063\u0074\u006d\u003d\u0025\u0073",_gcf ._bbef );};case "\u0042\u0054":if _bcg {_dfa .Log .Debug ("\u0042\u0054\u0020\u0063\u0061\u006c\u006c\u0065\u0064\u0020\u0077\u0068\u0069\u006c\u0065 \u0069n\u0020\u0061\u0020\u0074\u0065\u0078\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_gdd ._ecdd =append (_gdd ._ecdd ,_ega ._ebb ...);};_bcg =true ;_gbb :=_bac ;_gbb .CTM =_dgb .Mult (_gbb .CTM );_ega =_bdf (_bff ,_efe ,_gbb ,&_dfac ,&_cc );_gcf ._gcea =_ega ;case "\u0045\u0054":if !_bcg {_dfa .Log .Debug ("\u0045\u0054\u0020ca\u006c\u006c\u0065\u0064\u0020\u006f\u0075\u0074\u0073i\u0064e\u0020o\u0066 \u0061\u0020\u0074\u0065\u0078\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_bcg =false ;_gdd ._ecdd =append (_gdd ._ecdd ,_ega ._ebb ...);_ega .reset ();case "\u0054\u002a":_ega .nextLine ();case "\u0054\u0064":if _adc ,_fca :=_ega .checkOp (_abd ,2,true );!_adc {_dfa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fca );
return _fca ;};_aeb ,_bfe ,_ebc :=_afcgda (_abd .Params );if _ebc !=nil {return _ebc ;};_ega .moveText (_aeb ,_bfe );case "\u0054\u0044":if _bbd ,_fga :=_ega .checkOp (_abd ,2,true );!_bbd {_dfa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fga );
return _fga ;};_geg ,_bgc ,_eca :=_afcgda (_abd .Params );if _eca !=nil {_dfa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_eca );return _eca ;};_ega .moveTextSetLeading (_geg ,_bgc );case "\u0054\u006a":if _dgc ,_cca :=_ega .checkOp (_abd ,1,true );
!_dgc {_dfa .Log .Debug ("\u0045\u0052\u0052\u004fR:\u0020\u0054\u006a\u0020\u006f\u0070\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d%\u0076",_abd ,_cca );return _cca ;};_eba ,_fcaa :=_ca .GetStringBytes (_abd .Params [0]);if !_fcaa {_dfa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020T\u006a\u0020o\u0070\u003d\u0025\u0073\u0020\u0047\u0065\u0074S\u0074\u0072\u0069\u006e\u0067\u0042\u0079\u0074\u0065\u0073\u0020\u0066a\u0069\u006c\u0065\u0064",_abd );
return _ca .ErrTypeError ;};return _ega .showText (_eba );case "\u0054\u004a":if _dbf ,_dbaac :=_ega .checkOp (_abd ,1,true );!_dbf {_dfa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a \u0054\u004a\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dbaac );return _dbaac ;
};_gef ,_aga :=_ca .GetArray (_abd .Params [0]);if !_aga {_dfa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0054\u004a\u0020\u006f\u0070\u003d\u0025s\u0020G\u0065t\u0041r\u0072\u0061\u0079\u0056\u0061\u006c\u0020\u0066\u0061\u0069\u006c\u0065\u0064",_abd );
return _fdc ;};return _ega .showTextAdjusted (_gef );case "\u0027":if _ggb ,_bcd :=_ega .checkOp (_abd ,1,true );!_ggb {_dfa .Log .Debug ("\u0045R\u0052O\u0052\u003a\u0020\u0027\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bcd );return _bcd ;};_ffc ,_gcg :=_ca .GetStringBytes (_abd .Params [0]);
if !_gcg {_dfa .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020'\u0020\u006f\u0070\u003d%s \u0047et\u0053\u0074\u0072\u0069\u006e\u0067\u0042yt\u0065\u0073\u0020\u0066\u0061\u0069\u006ce\u0064",_abd );return _ca .ErrTypeError ;};_ega .nextLine ();return _ega .showText (_ffc );
case "\u0022":if _cde ,_dab :=_ega .checkOp (_abd ,3,true );!_cde {_dfa .Log .Debug ("\u0045R\u0052O\u0052\u003a\u0020\u0022\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dab );return _dab ;};_eeg ,_dcb ,_ffed :=_afcgda (_abd .Params [:2]);if _ffed !=nil {return _ffed ;
};_fbfc ,_gff :=_ca .GetStringBytes (_abd .Params [2]);if !_gff {_dfa .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020\"\u0020\u006f\u0070\u003d%s \u0047et\u0053\u0074\u0072\u0069\u006e\u0067\u0042yt\u0065\u0073\u0020\u0066\u0061\u0069\u006ce\u0064",_abd );
return _ca .ErrTypeError ;};_ega .setCharSpacing (_eeg );_ega .setWordSpacing (_dcb );_ega .nextLine ();return _ega .showText (_fbfc );case "\u0054\u004c":_agg ,_dde :=_cfda (_abd );if _dde !=nil {_dfa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a \u0054\u004c\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dde );
return _dde ;};_ega .setTextLeading (_agg );case "\u0054\u0063":_fbb ,_baf :=_cfda (_abd );if _baf !=nil {_dfa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a \u0054\u0063\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_baf );return _baf ;};_ega .setCharSpacing (_fbb );
case "\u0054\u0066":if _ddgc ,_bcdb :=_ega .checkOp (_abd ,2,true );!_ddgc {_dfa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a \u0054\u0066\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bcdb );return _bcdb ;};_ddd ,_dggf :=_ca .GetNameVal (_abd .Params [0]);
if !_dggf {_dfa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0054\u0066\u0020\u006f\u0070\u003d\u0025\u0073\u0020\u0047\u0065\u0074\u004ea\u006d\u0065\u0056\u0061\u006c\u0020\u0066a\u0069\u006c\u0065\u0064",_abd );return _ca .ErrTypeError ;};_aab ,_fdd :=_ca .GetNumberAsFloat (_abd .Params [1]);
if !_dggf {_dfa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0054\u0066\u0020\u006f\u0070\u003d\u0025\u0073\u0020\u0047\u0065\u0074\u0046\u006c\u006f\u0061\u0074\u0056\u0061\u006c\u0020\u0066\u0061\u0069\u006c\u0065d\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_abd ,_fdd );
return _fdd ;};_fdd =_ega .setFont (_ddd ,_aab );_ega ._ead =_f .Is (_fdd ,_ca .ErrNotSupported );if _fdd !=nil &&!_ega ._ead {return _fdd ;};case "\u0054\u006d":if _gdbc ,_cbf :=_ega .checkOp (_abd ,6,true );!_gdbc {_dfa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a \u0054\u006d\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cbf );
return _cbf ;};_cbd ,_gcgg :=_ca .GetNumbersAsFloat (_abd .Params );if _gcgg !=nil {_dfa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_gcgg );return _gcgg ;};_ega .setTextMatrix (_cbd );case "\u0054\u0072":if _gfg ,_cdd :=_ega .checkOp (_abd ,1,true );
!_gfg {_dfa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a \u0054\u0072\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cdd );return _cdd ;};_def ,_fabd :=_ca .GetIntVal (_abd .Params [0]);if !_fabd {_dfa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0072\u0020\u006f\u0070\u003d\u0025\u0073 \u0047e\u0074\u0049\u006e\u0074\u0056\u0061\u006c\u0020\u0066\u0061\u0069\u006c\u0065\u0064",_abd );
return _ca .ErrTypeError ;};_ega .setTextRenderMode (_def );case "\u0054\u0073":if _fbgf ,_ceb :=_ega .checkOp (_abd ,1,true );!_fbgf {_dfa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a \u0054\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ceb );return _ceb ;
};_cgfb ,_cfc :=_ca .GetNumberAsFloat (_abd .Params [0]);if _cfc !=nil {_dfa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cfc );return _cfc ;};_ega .setTextRise (_cgfb );case "\u0054\u0077":if _ed ,_dec :=_ega .checkOp (_abd ,1,true );
!_ed {_dfa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dec );return _dec ;};_cbbb ,_fbfcc :=_ca .GetNumberAsFloat (_abd .Params [0]);if _fbfcc !=nil {_dfa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fbfcc );
return _fbfcc ;};_ega .setWordSpacing (_cbbb );case "\u0054\u007a":if _gad ,_bed :=_ega .checkOp (_abd ,1,true );!_gad {_dfa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bed );return _bed ;};_bag ,_decd :=_ca .GetNumberAsFloat (_abd .Params [0]);
if _decd !=nil {_dfa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_decd );return _decd ;};_ega .setHorizScaling (_bag );case "\u0063\u006d":_gcf ._bbef =_bac .CTM ;if _gcf ._bbef .Singular (){_ffd :=_dg .IdentityMatrix ().Translate (_gcf ._bbef .Translation ());
_dfa .Log .Debug ("S\u0069n\u0067\u0075\u006c\u0061\u0072\u0020\u0063\u0074m\u003d\u0025\u0073\u2192%s",_gcf ._bbef ,_ffd );_gcf ._bbef =_ffd ;};if _eabb {_dfa .Log .Info ("\u0063\u0074\u006d\u003d\u0025\u0073",_gcf ._bbef );};case "\u006d":if len (_abd .Params )!=2{_dfa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0065\u0072\u0072o\u0072\u0020\u0077\u0068\u0069\u006c\u0065\u0020\u0070\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0060\u006d\u0060\u0020o\u0070\u0065r\u0061\u0074o\u0072\u003a\u0020\u0025\u0076\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074 m\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063o\u0072\u0072\u0065\u0063\u0074\u002e",_eg );
return nil ;};_egg ,_ffg :=_ca .GetNumbersAsFloat (_abd .Params );if _ffg !=nil {return _ffg ;};_dfa .Log .Debug ("\u004d\u006f\u0076\u0065\u0020\u0074\u006f\u003a\u0020\u0025\u002e\u0032\u0066",_egg );_gcf .moveTo (_egg [0],_egg [1]);case "\u006c":if len (_abd .Params )!=2{_dfa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0065\u0072\u0072o\u0072\u0020\u0077\u0068\u0069\u006c\u0065\u0020\u0070\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0060\u006c\u0060\u0020o\u0070\u0065r\u0061\u0074o\u0072\u003a\u0020\u0025\u0076\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074 m\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063o\u0072\u0072\u0065\u0063\u0074\u002e",_eg );
return nil ;};_afcg ,_fddf :=_ca .GetNumbersAsFloat (_abd .Params );if _fddf !=nil {return _fddf ;};_gcf .lineTo (_afcg [0],_afcg [1]);case "\u0063":if len (_abd .Params )!=6{return _eg ;};_agf ,_gcb :=_ca .GetNumbersAsFloat (_abd .Params );if _gcb !=nil {return _gcb ;
};_dfa .Log .Debug ("\u0043u\u0062\u0069\u0063\u0020b\u0065\u007a\u0069\u0065\u0072 \u0070a\u0072a\u006d\u0073\u003a\u0020\u0025\u002e\u0032f",_agf );_gcf .cubicTo (_agf [0],_agf [1],_agf [2],_agf [3],_agf [4],_agf [5]);case "\u0076","\u0079":if len (_abd .Params )!=4{return _eg ;
};_fgd ,_cab :=_ca .GetNumbersAsFloat (_abd .Params );if _cab !=nil {return _cab ;};_dfa .Log .Debug ("\u0043u\u0062\u0069\u0063\u0020b\u0065\u007a\u0069\u0065\u0072 \u0070a\u0072a\u006d\u0073\u003a\u0020\u0025\u002e\u0032f",_fgd );_gcf .quadraticTo (_fgd [0],_fgd [1],_fgd [2],_fgd [3]);
case "\u0068":_gcf .closePath ();case "\u0072\u0065":if len (_abd .Params )!=4{return _eg ;};_egd ,_gebg :=_ca .GetNumbersAsFloat (_abd .Params );if _gebg !=nil {return _gebg ;};_gcf .drawRectangle (_egd [0],_egd [1],_egd [2],_egd [3]);_gcf .closePath ();
case "\u0053":_gcf .stroke (&_gdd ._fgda );_gcf .clearPath ();case "\u0073":_gcf .closePath ();_gcf .stroke (&_gdd ._fgda );_gcf .clearPath ();case "\u0046":_gcf .fill (&_gdd ._cdbc );_gcf .clearPath ();case "\u0066","\u0066\u002a":_gcf .closePath ();_gcf .fill (&_gdd ._cdbc );
_gcf .clearPath ();case "\u0042","\u0042\u002a":_gcf .fill (&_gdd ._cdbc );_gcf .stroke (&_gdd ._fgda );_gcf .clearPath ();case "\u0062","\u0062\u002a":_gcf .closePath ();_gcf .fill (&_gdd ._cdbc );_gcf .stroke (&_gdd ._fgda );_gcf .clearPath ();case "\u006e":_gcf .clearPath ();
case "\u0044\u006f":if len (_abd .Params )==0{_dfa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0058\u004fbj\u0065c\u0074\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0070\u0065\u0072\u0061n\u0064\u0020\u0066\u006f\u0072\u0020\u0044\u006f\u0020\u006f\u0070\u0065\u0072\u0061\u0074\u006f\u0072.\u0020\u0047\u006f\u0074\u0020\u0025\u002b\u0076\u002e",_abd .Params );
return _ca .ErrRangeError ;};_fcg ,_eafb :=_ca .GetName (_abd .Params [0]);if !_eafb {_dfa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0044\u006f\u0020\u006f\u0070e\u0072a\u0074\u006f\u0072\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u0061\u006d\u0065\u0020\u006fp\u0065\u0072\u0061\u006e\u0064\u003a\u0020\u0025\u002b\u0076\u002e",_abd .Params [0]);
return _ca .ErrTypeError ;};_ ,_fcae :=_efe .GetXObjectByName (*_fcg );if _fcae !=_ec .XObjectTypeForm {break ;};_cgd ,_eafb :=_bff ._ffe [_fcg .String ()];if !_eafb {_ecbcf ,_aee :=_efe .GetXObjectFormByName (*_fcg );if _aee !=nil {_dfa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aee );
return _aee ;};_gfe ,_aee :=_ecbcf .GetContentStream ();if _aee !=nil {_dfa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aee );return _aee ;};_ade :=_ecbcf .Resources ;if _ade ==nil {_ade =_efe ;};_ebg ,_bea ,_bada ,_aee :=_bff .extractPageText (string (_gfe ),_ade ,_dgb .Mult (_bac .CTM ),_aae +1);
if _aee !=nil {_dfa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aee );return _aee ;};_cgd =textResult {*_ebg ,_bea ,_bada };_bff ._ffe [_fcg .String ()]=_cgd ;};_gcf ._bbef =_bac .CTM ;if _eabb {_dfa .Log .Info ("\u0063\u0074\u006d\u003d\u0025\u0073",_gcf ._bbef );
};_gdd ._ecdd =append (_gdd ._ecdd ,_cgd ._efd ._ecdd ...);_gdd ._fgda =append (_gdd ._fgda ,_cgd ._efd ._fgda ...);_gdd ._cdbc =append (_gdd ._cdbc ,_cgd ._efd ._cdbc ...);_dfac ._dede +=_cgd ._aabe ;_dfac ._gfd +=_cgd ._ggf ;case "\u0072\u0067","\u0067","\u006b","\u0063\u0073","\u0073\u0063","\u0073\u0063\u006e":_ega ._bgcgd .ColorspaceNonStroking =_bac .ColorspaceNonStroking ;
_ega ._bgcgd .ColorNonStroking =_bac .ColorNonStroking ;case "\u0052\u0047","\u0047","\u004b","\u0043\u0053","\u0053\u0043","\u0053\u0043\u004e":_ega ._bgcgd .ColorspaceStroking =_bac .ColorspaceStroking ;_ega ._bgcgd .ColorStroking =_bac .ColorStroking ;
};return nil ;});_fdc =_cdbd .Process (_gcdc );return _gdd ,_dfac ._dede ,_dfac ._gfd ,_fdc ;};func _fgga (_bged *wordBag ,_aacf *textWord ,_dgf float64 )bool {return _bged .Urx <=_aacf .Llx &&_aacf .Llx < _bged .Urx +_dgf ;};func _bedc (_eafd ,_caa _ec .PdfRectangle )_ec .PdfRectangle {return _ec .PdfRectangle {Llx :_gc .Min (_eafd .Llx ,_caa .Llx ),Lly :_gc .Min (_eafd .Lly ,_caa .Lly ),Urx :_gc .Max (_eafd .Urx ,_caa .Urx ),Ury :_gc .Max (_eafd .Ury ,_caa .Ury )};
};func (_cggfb rulingList )sort (){_cg .Slice (_cggfb ,_cggfb .comp )};func (_agcfd rulingList )sortStrict (){_cg .Slice (_agcfd ,func (_fgab ,_fefe int )bool {_cfgdf ,_cdeab :=_agcfd [_fgab ],_agcfd [_fefe ];_aefa ,_cbgac :=_cfgdf ._dgdc ,_cdeab ._dgdc ;
if _aefa !=_cbgac {return _aefa > _cbgac ;};_dgedg ,_dcefc :=_cfgdf ._bedda ,_cdeab ._bedda ;if !_cdfce (_dgedg -_dcefc ){return _dgedg < _dcefc ;};_dgedg ,_dcefc =_cfgdf ._bbca ,_cdeab ._bbca ;if _dgedg !=_dcefc {return _dgedg < _dcefc ;};return _cfgdf ._fcc < _cdeab ._fcc ;
});};func (_efde *wordBag )removeDuplicates (){if _ccce {_dfa .Log .Info ("r\u0065m\u006f\u0076\u0065\u0044\u0075\u0070\u006c\u0069c\u0061\u0074\u0065\u0073: \u0025\u0071",_efde .text ());};for _ ,_bacb :=range _efde .depthIndexes (){if len (_efde ._fgg [_bacb ])==0{continue ;
};_cbded :=_efde ._fgg [_bacb ][0];_adgc :=_fgad *_cbded ._dbcg ;_cefbg :=_cbded ._ddbfa ;for _ ,_cdad :=range _efde .depthBand (_cefbg ,_cefbg +_adgc ){_aagd :=map[*textWord ]struct{}{};_bdd :=_efde ._fgg [_cdad ];for _ ,_gfdd :=range _bdd {if _ ,_addba :=_aagd [_gfdd ];
_addba {continue ;};for _ ,_dgeb :=range _bdd {if _ ,_cggf :=_aagd [_dgeb ];_cggf {continue ;};if _dgeb !=_gfdd &&_dgeb ._dfaagg ==_gfdd ._dfaagg &&_gc .Abs (_dgeb .Llx -_gfdd .Llx )< _adgc &&_gc .Abs (_dgeb .Urx -_gfdd .Urx )< _adgc &&_gc .Abs (_dgeb .Lly -_gfdd .Lly )< _adgc &&_gc .Abs (_dgeb .Ury -_gfdd .Ury )< _adgc {_aagd [_dgeb ]=struct{}{};
};};};if len (_aagd )> 0{_cggce :=0;for _ ,_cgbd :=range _bdd {if _ ,_aggcb :=_aagd [_cgbd ];!_aggcb {_bdd [_cggce ]=_cgbd ;_cggce ++;};};_efde ._fgg [_cdad ]=_bdd [:len (_bdd )-len (_aagd )];if len (_efde ._fgg [_cdad ])==0{delete (_efde ._fgg ,_cdad );
};};};};};func _dcee (_fgdf []*textMark ,_dbbf _ec .PdfRectangle ,_ecdfb rulingList ,_cdabf []gridTiling )paraList {_dfa .Log .Trace ("\u006d\u0061\u006b\u0065\u0054\u0065\u0078\u0074\u0050\u0061\u0067\u0065\u003a \u0025\u0064\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073\u0020\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065=\u0025\u002e\u0032\u0066",len (_fgdf ),_dbbf );
if len (_fgdf )==0{return nil ;};_fafd :=_eggea (_fgdf ,_dbbf );if len (_fafd )==0{return nil ;};_ecdfb .log ("\u006d\u0061\u006be\u0054\u0065\u0078\u0074\u0050\u0061\u0067\u0065");_cdea ,_fede :=_ecdfb .vertsHorzs ();_cfcb :=_gaga (_fafd ,_dbbf .Ury ,_cdea ,_fede );
_gfde :=_dagc (_cfcb ,_dbbf .Ury ,_cdea ,_fede );_gfde =_egdc (_gfde );_dfda :=make (paraList ,0,len (_gfde ));for _ ,_ggbfb :=range _gfde {_facd :=_ggbfb .arrangeText ();if _facd !=nil {_dfda =append (_dfda ,_facd );};};if len (_dfda )>=_eaa {_dfda =_dfda .extractTables (_cdabf );
};_dfda .sortReadingOrder ();_dfda .log ("\u0073\u006f\u0072te\u0064\u0020\u0069\u006e\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020\u006f\u0072\u0064\u0065\u0072");return _dfda ;};func (_ebec rulingList )comp (_ecccgb ,_gfafb int )bool {_gcggg ,_ecfda :=_ebec [_ecccgb ],_ebec [_gfafb ];
_gedbb ,_abbcc :=_gcggg ._dgdc ,_ecfda ._dgdc ;if _gedbb !=_abbcc {return _gedbb > _abbcc ;};if _gedbb ==_fafdd {return false ;};_ddda :=func (_addbae bool )bool {if _gedbb ==_aefb {return _addbae ;};return !_addbae ;};_fegga ,_gbcg :=_gcggg ._bedda ,_ecfda ._bedda ;
if _fegga !=_gbcg {return _ddda (_fegga > _gbcg );};_fegga ,_gbcg =_gcggg ._bbca ,_ecfda ._bbca ;if _fegga !=_gbcg {return _ddda (_fegga < _gbcg );};return _ddda (_gcggg ._fcc < _ecfda ._fcc );};func _fdgf (_bdgg _ec .PdfColorspace ,_baacf _ec .PdfColor )_dc .Color {if _bdgg ==nil ||_baacf ==nil {return _dc .Black ;
};_ebdg ,_cegcg :=_bdgg .ColorToRGB (_baacf );if _cegcg !=nil {_dfa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006fu\u006c\u0064\u0020no\u0074\u0020\u0063\u006f\u006e\u0076e\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0025\u0076\u0020\u0028\u0025\u0076)\u0020\u0074\u006f\u0020\u0052\u0047\u0042\u003a \u0025\u0073",_baacf ,_bdgg ,_cegcg );
return _dc .Black ;};_abab ,_efcf :=_ebdg .(*_ec .PdfColorDeviceRGB );if !_efcf {_dfa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0065\u0064 \u0063\u006f\u006c\u006f\u0072\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020i\u006e\u0020\u0074\u0068\u0065\u0020\u0052\u0047\u0042\u0020\u0063\u006flo\u0072\u0073\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0076",_ebdg );
return _dc .Black ;};return _dc .NRGBA {R :uint8 (_abab .R ()*255),G :uint8 (_abab .G ()*255),B :uint8 (_abab .B ()*255),A :uint8 (255)};};

// ExtractTextWithStats works like ExtractText but returns the number of characters in the output
// (`numChars`) and the number of characters that were not decoded (`numMisses`).
func (_efg *Extractor )ExtractTextWithStats ()(_bf string ,_cgf int ,_fbg int ,_fea error ){_cdg ,_cgf ,_fbg ,_fea :=_efg .ExtractPageText ();if _fea !=nil {return "",_cgf ,_fbg ,_fea ;};return _cdg .Text (),_cgf ,_fbg ,nil ;};

// ToTextMark returns the public view of `tm`.
func (_edc *textMark )ToTextMark ()TextMark {return TextMark {Text :_edc ._fggb ,Original :_edc ._dbgg ,BBox :_edc ._abdgg ,Font :_edc ._egfa ,FontSize :_edc ._egdcg ,FillColor :_edc ._efad ,StrokeColor :_edc ._fbd ,Orientation :_edc ._ggga };};