//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package sanitize ;import (_c "github.com/unidoc/unipdf/v3/common";_d "github.com/unidoc/unipdf/v3/core";);func (_eb *Sanitizer )processObjects (_g []_d .PdfObject )([]_d .PdfObject ,error ){_a :=[]_d .PdfObject {};_ca :=_eb ._cb ;for _ ,_aa :=range _g {switch _ed :=_aa .(type ){case *_d .PdfIndirectObject :_bc ,_ga :=_d .GetDict (_ed );
if _ga {if _bf ,_gc :=_d .GetName (_bc .Get ("\u0054\u0079\u0070\u0065"));_gc &&*_bf =="\u0043a\u0074\u0061\u006c\u006f\u0067"{if _ ,_cba :=_d .GetIndirect (_bc .Get ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e"));_cba &&_ca .OpenAction {_bc .Remove ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e");
};}else if _gdg ,_cbd :=_d .GetName (_bc .Get ("\u0053"));_cbd {switch *_gdg {case "\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074":if _ca .JavaScript {if _cad ,_eg :=_d .GetStream (_bc .Get ("\u004a\u0053"));_eg {_cbe :=[]byte {};_bff ,_aag :=_d .MakeStream (_cbe ,nil );
if _aag ==nil {*_cad =*_bff ;};};_c .Log .Debug ("\u004a\u0061\u0076\u0061\u0073\u0063\u0072\u0069\u0070\u0074\u0020a\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u006b\u0069\u0070p\u0065\u0064\u002e");continue ;};case "\u0055\u0052\u0049":if _ca .URI {_c .Log .Debug ("\u0055\u0052\u0049\u0020ac\u0074\u0069\u006f\u006e\u0020\u0073\u006b\u0069\u0070\u0070\u0065\u0064\u002e");
continue ;};case "\u0047\u006f\u0054\u006f":if _ca .GoTo {_c .Log .Debug ("G\u004fT\u004f\u0020\u0061\u0063\u0074\u0069\u006f\u006e \u0073\u006b\u0069\u0070pe\u0064\u002e");continue ;};case "\u0047\u006f\u0054o\u0052":if _ca .GoToR {_c .Log .Debug ("R\u0065\u006d\u006f\u0074\u0065\u0020G\u006f\u0054\u004f\u0020\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u006bi\u0070p\u0065\u0064\u002e");
continue ;};case "\u004c\u0061\u0075\u006e\u0063\u0068":if _ca .Launch {_c .Log .Debug ("\u004a\u0061\u0076\u0061\u0073\u0063\u0072\u0069\u0070\u0074\u0020a\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u006b\u0069\u0070p\u0065\u0064\u002e");continue ;};case "\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn":if _cadf ,_be :=_d .GetStream (_bc .Get ("\u004a\u0053"));
_be {_fg :=[]byte {};_ff ,_fe :=_d .MakeStream (_fg ,nil );if _fe ==nil {*_cadf =*_ff ;};};};}else if _ba :=_bc .Get ("\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074");_ba !=nil &&_ca .JavaScript {continue ;}else if _dc ,_ee :=_d .GetName (_bc .Get ("\u0054\u0079\u0070\u0065"));
_ee &&*_dc =="\u0041\u006e\u006eo\u0074"&&_ca .JavaScript {if _feg ,_dd :=_d .GetIndirect (_bc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_dd {if _gf ,_edd :=_d .GetDict (_feg .PdfObject );_edd {if _cf ,_ab :=_d .GetDict (_gf .Get ("\u0041\u0041"));
_ab {_dg ,_ec :=_d .GetIndirect (_cf .Get ("\u004b"));if _ec {if _ge ,_ad :=_d .GetDict (_dg .PdfObject );_ad {if _bfa ,_de :=_d .GetName (_ge .Get ("\u0053"));_de &&*_bfa =="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074"{_ge .Clear ();}else if _fgd :=_cf .Get ("\u0046");
_fgd !=nil {if _bg ,_gb :=_d .GetIndirect (_fgd );_gb {if _bb ,_gg :=_d .GetDict (_bg .PdfObject );_gg {if _fd ,_ecg :=_d .GetName (_bb .Get ("\u0053"));_ecg &&*_fd =="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074"{_bb .Clear ();};};};};
};};};};};};};case *_d .PdfObjectStream :_c .Log .Debug ("\u0070d\u0066\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073t\u0072e\u0061m\u0020\u0074\u0079\u0070\u0065\u0020\u0025T",_ed );case *_d .PdfObjectStreams :_c .Log .Debug ("\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020s\u0074\u0072\u0065\u0061\u006d\u0073\u0020\u0074\u0079\u0070e\u0020\u0025\u0054",_ed );
default:_c .Log .Debug ("u\u006e\u006b\u006e\u006fwn\u0020p\u0064\u0066\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0025\u0054",_ed );};_a =append (_a ,_aa );};_eb .analyze (_a );return _a ,nil ;};

// GetSuspiciousObjects returns a count of each detected suspicious object.
func (_dgfg *Sanitizer )GetSuspiciousObjects ()map[string ]int {return _dgfg ._f };func (_bffb *Sanitizer )analyze (_bd []_d .PdfObject ){_abb :=map[string ]int {};for _ ,_ecf :=range _bd {switch _cd :=_ecf .(type ){case *_d .PdfIndirectObject :_df ,_ag :=_d .GetDict (_cd .PdfObject );
if _ag {if _ae ,_ece :=_d .GetName (_df .Get ("\u0054\u0079\u0070\u0065"));_ece &&*_ae =="\u0043a\u0074\u0061\u006c\u006f\u0067"{if _ ,_aaa :=_d .GetIndirect (_df .Get ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e"));_aaa {_abb ["\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e"]++;
};}else if _aba ,_baf :=_d .GetName (_df .Get ("\u0053"));_baf {_bdg :=_aba .String ();if _bdg =="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074"||_bdg =="\u0055\u0052\u0049"||_bdg =="\u0047\u006f\u0054\u006f"||_bdg =="\u0047\u006f\u0054o\u0052"||_bdg =="\u004c\u0061\u0075\u006e\u0063\u0068"{_abb [_bdg ]++;
}else if _bdg =="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn"{if _ ,_cc :=_d .GetStream (_df .Get ("\u004a\u0053"));_cc {_abb [_bdg ]++;};};}else if _af :=_df .Get ("\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074");_af !=nil {_abb ["\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074"]++;
}else if _bea ,_db :=_d .GetIndirect (_df .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_db {if _ce ,_aee :=_d .GetDict (_bea .PdfObject );_aee {if _eeb ,_cde :=_d .GetDict (_ce .Get ("\u0041\u0041"));_cde {_fc :=_eeb .Get ("\u004b");_ffb ,_ceg :=_d .GetIndirect (_fc );
if _ceg {if _gda ,_aea :=_d .GetDict (_ffb .PdfObject );_aea {if _deed ,_adc :=_d .GetName (_gda .Get ("\u0053"));_adc &&*_deed =="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074"{_abb ["\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074"]++;
}else if _ ,_cce :=_d .GetString (_gda .Get ("\u004a\u0053"));_cce {_abb ["\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074"]++;}else {_ggb :=_eeb .Get ("\u0046");if _ggb !=nil {_cade ,_caec :=_d .GetIndirect (_ggb );if _caec {if _cg ,_dgf :=_d .GetDict (_cade .PdfObject );
_dgf {if _bfd ,_bcd :=_d .GetName (_cg .Get ("\u0053"));_bcd {_cbg :=_bfd .String ();_abb [_cbg ]++;};};};};};};};};};};};};};_bffb ._f =_abb ;};

// SanitizationOpts specifies the objects to be removed during sanitization.
type SanitizationOpts struct{

// JavaScript specifies wether JavaScript action should be removed. JavaScript Actions, section 12.6.4.16 of PDF32000_2008
JavaScript bool ;

// URI specifies if URI actions should be removed. 12.6.4.7 URI Actions, PDF32000_2008.
URI bool ;

// GoToR removes remote GoTo actions. 12.6.4.3 Remote Go-To Actions, PDF32000_2008.
GoToR bool ;

// GoTo specifies wether GoTo actions should be removed. 12.6.4.2 Go-To Actions, PDF32000_2008.
GoTo bool ;

// RenditionJS enables removing of `JS` entry from a Rendition Action.
// The `JS` entry has a value of text string or stream containing a JavaScript script that shall be executed when the action is triggered.
// 12.6.4.13 Rendition Actions Table 214, PDF32000_2008.
RenditionJS bool ;

// OpenAction removes OpenAction entry from the document catalog.
OpenAction bool ;

// Launch specifies wether Launch Action should be removed.
// A launch action launches an application or opens or prints a document.
// 12.6.4.5 Launch Actions, PDF32000_2008.
Launch bool ;};

// Optimize optimizes `objects` and returns updated list of objects.
func (_b *Sanitizer )Optimize (objects []_d .PdfObject )([]_d .PdfObject ,error ){return _b .processObjects (objects );};

// New returns a new sanitizer object.
func New (opts SanitizationOpts )*Sanitizer {return &Sanitizer {_cb :opts }};

// Sanitizer represents a sanitizer object.
// It implements the Optimizer interface to access the objects field from the writer.
type Sanitizer struct{_cb SanitizationOpts ;_f map[string ]int ;};