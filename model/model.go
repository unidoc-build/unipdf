//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_f "bufio";_bd "bytes";_ge "crypto/sha1";_fe "crypto/x509";_fa "encoding/binary";_ed "encoding/hex";_fc "errors";_d "fmt";_da "github.com/unidoc/pkcs7";_eg "github.com/unidoc/unipdf/v3/common";_bc "github.com/unidoc/unipdf/v3/common/license";_ged "github.com/unidoc/unipdf/v3/core";_gc "github.com/unidoc/unipdf/v3/core/security";_eb "github.com/unidoc/unipdf/v3/core/security/crypt";_ec "github.com/unidoc/unipdf/v3/internal/cmap";_daf "github.com/unidoc/unipdf/v3/internal/imageutil";_fec "github.com/unidoc/unipdf/v3/internal/sampling";_ffe "github.com/unidoc/unipdf/v3/internal/textencoding";_aea "github.com/unidoc/unipdf/v3/model/internal/fonts";_ce "github.com/unidoc/unipdf/v3/model/sigutil";_cff "github.com/unidoc/unipdf/v3/ps";_ff "github.com/unidoc/unitype";_ac "golang.org/x/xerrors";_faf "image";_dd "image/color";_ "image/gif";_ "image/png";_aa "io";_b "io/ioutil";_af "math";_ga "math/rand";_ad "os";_cf "regexp";_ae "sort";_ea "strconv";_bf "strings";_e "sync";_c "time";_dg "unicode";_fd "unicode/utf8";);

// ToPdfObject returns the button field dictionary within an indirect object.
func (_fagdc *PdfFieldButton )ToPdfObject ()_ged .PdfObject {_fagdc .PdfField .ToPdfObject ();_eeaa :=_fagdc ._bagb ;_bbegf :=_eeaa .PdfObject .(*_ged .PdfObjectDictionary );_bbegf .Set ("\u0046\u0054",_ged .MakeName ("\u0042\u0074\u006e"));if _fagdc .Opt !=nil {_bbegf .Set ("\u004f\u0070\u0074",_fagdc .Opt );};return _eeaa ;};

// ToPdfObject returns the PDF representation of the function.
func (_bgdc *PdfFunctionType3 )ToPdfObject ()_ged .PdfObject {_fagb :=_ged .MakeDict ();_fagb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ged .MakeInteger (3));_daab :=&_ged .PdfObjectArray {};for _ ,_gbea :=range _bgdc .Domain {_daab .Append (_ged .MakeFloat (_gbea ));};_fagb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_daab );if _bgdc .Range !=nil {_egfef :=&_ged .PdfObjectArray {};for _ ,_facga :=range _bgdc .Range {_egfef .Append (_ged .MakeFloat (_facga ));};_fagb .Set ("\u0052\u0061\u006eg\u0065",_egfef );};if _bgdc .Functions !=nil {_bfgea :=&_ged .PdfObjectArray {};for _ ,_edadb :=range _bgdc .Functions {_bfgea .Append (_edadb .ToPdfObject ());};_fagb .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_bfgea );};if _bgdc .Bounds !=nil {_eagd :=&_ged .PdfObjectArray {};for _ ,_gaec :=range _bgdc .Bounds {_eagd .Append (_ged .MakeFloat (_gaec ));};_fagb .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_eagd );};if _bgdc .Encode !=nil {_agcbd :=&_ged .PdfObjectArray {};for _ ,_fbbc :=range _bgdc .Encode {_agcbd .Append (_ged .MakeFloat (_fbbc ));};_fagb .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_agcbd );};if _bgdc ._abcec !=nil {_bgdc ._abcec .PdfObject =_fagb ;return _bgdc ._abcec ;};return _fagb ;};func _dge (_agf _ged .PdfObject )(*PdfFilespec ,error ){if _agf ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_agf );};func (_eeg *PdfReader )newPdfActionNamedFromDict (_ebab *_ged .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_ebab .Get ("\u004e")},nil ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_gcfffc *XObjectImage )SetFilter (encoder _ged .StreamEncoder )error {_begaf :=_gcfffc .Stream ;_cgcgb ,_abadf :=_gcfffc .Filter .DecodeBytes (_begaf );if _abadf !=nil {return _abadf ;};_gcfffc .Filter =encoder ;encoder .UpdateParams (_gcfffc .getParamsDict ());_begaf ,_abadf =encoder .EncodeBytes (_cgcgb );if _abadf !=nil {return _abadf ;};_gcfffc .Stream =_begaf ;return nil ;};func (_affdg *DSS )addCerts (_ggddg [][]byte )([]*_ged .PdfObjectStream ,error ){return _affdg .add (&_affdg .Certs ,_affdg ._gfee ,_ggddg );};

// Encoder returns the font's text encoder.
func (_cdfe pdfCIDFontType0 )Encoder ()_ffe .TextEncoder {return _cdfe ._cccd };func (_dfgc *PdfFilespec )getDict ()*_ged .PdfObjectDictionary {if _gcga ,_fdcg :=_dfgc ._eeebf .(*_ged .PdfIndirectObject );_fdcg {_gcfeg ,_acda :=_gcga .PdfObject .(*_ged .PdfObjectDictionary );if !_acda {return nil ;};return _gcfeg ;}else if _geggb ,_dddc :=_dfgc ._eeebf .(*_ged .PdfObjectDictionary );_dddc {return _geggb ;}else {_eg .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_dfgc ._eeebf );return nil ;};};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_bgbf DefaultImageHandler )NewImageFromGoImage (goimg _faf .Image )(*Image ,error ){_fcfab ,_beffc :=_daf .FromGoImage (goimg );if _beffc !=nil {return nil ,_beffc ;};_geadb :=_dfcbe (_fcfab .Base ());return &_geadb ,nil ;};

// SetContext sets the sub annotation (context).
func (_fcd *PdfAnnotation )SetContext (ctx PdfModel ){_fcd ._edg =ctx };

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_acdd *_ged .PdfIndirectObject ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_fdbg *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _ged .PdfObject ;};func (_eeaf *PdfReader )newPdfAnnotationStampFromDict (_bde *_ged .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_acgd :=PdfAnnotationStamp {};_bcgd ,_gegg :=_eeaf .newPdfAnnotationMarkupFromDict (_bde );if _gegg !=nil {return nil ,_gegg ;};_acgd .PdfAnnotationMarkup =_bcgd ;_acgd .Name =_bde .Get ("\u004e\u0061\u006d\u0065");return &_acgd ,nil ;};func _egfc (_agcfa *PdfField ,_dgfag _ged .PdfObject ){for _ ,_adcc :=range _agcfa .Annotations {_adcc .AS =_dgfag ;_adcc .ToPdfObject ();};};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _ged .PdfObject ;Q _ged .PdfObject ;RC _ged .PdfObject ;DS _ged .PdfObject ;CL _ged .PdfObject ;IT _ged .PdfObject ;BE _ged .PdfObject ;RD _ged .PdfObject ;BS _ged .PdfObject ;LE _ged .PdfObject ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _ged .PdfObject ;Name _ged .PdfObject ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_gcdfg ,_dcbc :=NewStandard14Font (basefont );if _dcbc !=nil {panic (_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));};return _gcdfg ;};

// GetContainingPdfObject implements interface PdfModel.
func (_gggaa *PdfFilespec )GetContainingPdfObject ()_ged .PdfObject {return _gggaa ._eeebf };func _eddae ()string {_gdabg .Lock ();defer _gdabg .Unlock ();return _afccc };func (_eaeb *PdfReader )newPdfAnnotationPrinterMarkFromDict (_caff *_ged .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_abe :=PdfAnnotationPrinterMark {};_abe .MN =_caff .Get ("\u004d\u004e");return &_abe ,nil ;};

// SetContentStream sets the pattern cell's content stream.
func (_gaecg *PdfTilingPattern )SetContentStream (content []byte ,encoder _ged .StreamEncoder )error {_bgdg ,_gddgf :=_gaecg ._abgg .(*_ged .PdfObjectStream );if !_gddgf {_eg .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gaecg ._abgg );return _ged .ErrTypeError ;};if encoder ==nil {encoder =_ged .NewRawEncoder ();};_egfbad :=_bgdg .PdfObjectDictionary ;_faeea :=encoder .MakeStreamDict ();_egfbad .Merge (_faeea );_egfbf ,_cdeae :=encoder .EncodeBytes (content );if _cdeae !=nil {return _cdeae ;};_egfbad .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ged .MakeInteger (int64 (len (_egfbf ))));_bgdg .Stream =_egfbf ;return nil ;};

// B returns the value of the B component of the color.
func (_gagd *PdfColorLab )B ()float64 {return _gagd [2]};func (_agagg *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _agagg ._ebea .GetCrypter ()!=nil &&!_agagg ._ebea .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_gcdge :=_agagg ._fffe ;_gabe :=_gcdge .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _gabe ==nil {return nil ,nil ;};_eg .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_facec :=_ged .ResolveReference (_gabe );_eg .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_facec );if _efeddd :=_ged .IsNullObject (_facec );_efeddd {_eg .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");return nil ,nil ;};_gfcba ,_cdbeb :=_facec .(*_ged .PdfIndirectObject );if !_cdbeb {if _ ,_gbbde :=_ged .GetDict (_facec );!_gbbde {_eg .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");return nil ,nil ;};_eg .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");_gfcba =_ged .MakeIndirectObject (_facec );};_cface ,_cdbeb :=_gfcba .PdfObject .(*_ged .PdfObjectDictionary );if !_cdbeb {return nil ,_fc .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");};_eg .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_cface );_ffgba ,_ ,_dfeee :=_agagg .buildOutlineTree (_gfcba ,nil ,nil ,nil );if _dfeee !=nil {return nil ,_dfeee ;};_eg .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_ffgba );return _ffgba ,nil ;};func (_cgeba *PdfReader )newPdfAnnotationScreenFromDict (_fafe *_ged .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_gaaf :=PdfAnnotationScreen {};_gaaf .T =_fafe .Get ("\u0054");_gaaf .MK =_fafe .Get ("\u004d\u004b");_gaaf .A =_fafe .Get ("\u0041");_gaaf .AA =_fafe .Get ("\u0041\u0041");return &_gaaf ,nil ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_defe :=NewPdfAnnotation ();_dcag :=&PdfAnnotation3D {};_dcag .PdfAnnotation =_defe ;_defe .SetContext (_dcag );return _dcag ;};

// ToInteger convert to an integer format.
func (_cege *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_adge :=_af .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_adge *_cege .C ()),uint32 (_adge *_cege .M ()),uint32 (_adge *_cege .Y ()),uint32 (_adge *_cege .K ())};};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _ged .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _ged .PdfObject ;Contents _ged .PdfObject ;Rotate *int64 ;Group _ged .PdfObject ;Thumb _ged .PdfObject ;B _ged .PdfObject ;Dur _ged .PdfObject ;Trans _ged .PdfObject ;AA _ged .PdfObject ;Metadata _ged .PdfObject ;PieceInfo _ged .PdfObject ;StructParents _ged .PdfObject ;ID _ged .PdfObject ;PZ _ged .PdfObject ;SeparationInfo _ged .PdfObject ;Tabs _ged .PdfObject ;TemplateInstantiated _ged .PdfObject ;PresSteps _ged .PdfObject ;UserUnit _ged .PdfObject ;VP _ged .PdfObject ;Annots _ged .PdfObject ;_fedfg []*PdfAnnotation ;_egbgb *_ged .PdfObjectDictionary ;_egef *_ged .PdfIndirectObject ;_agcfc *PdfReader ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _ged .PdfObject )(*PdfFont ,error ){return _adea (fontObj ,true )};

// SetBorderWidth sets the style's border width.
func (_aaae *PdfBorderStyle )SetBorderWidth (width float64 ){_aaae .W =&width };

// AddWatermarkImage adds a watermark to the page.
func (_fdgfe *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_efdf ,_acafg :=_fdgfe .GetMediaBox ();if _acafg !=nil {return _acafg ;};_agdce :=_efdf .Urx -_efdf .Llx ;_febf :=_efdf .Ury -_efdf .Lly ;_ffcad :=float64 (*ximg .Width );_dbgdb :=(_agdce -_ffcad )/2;if opt .FitToWidth {_ffcad =_agdce ;_dbgdb =0;};_aadge :=_febf ;_dfabc :=float64 (0);if opt .PreserveAspectRatio {_aadge =_ffcad *float64 (*ximg .Height )/float64 (*ximg .Width );_dfabc =(_febf -_aadge )/2;};if _fdgfe .Resources ==nil {_fdgfe .Resources =NewPdfPageResources ();};_dgbbf :=0;_bgaa :=_ged .PdfObjectName (_d .Sprintf ("\u0049\u006d\u0077%\u0064",_dgbbf ));for _fdgfe .Resources .HasXObjectByName (_bgaa ){_dgbbf ++;_bgaa =_ged .PdfObjectName (_d .Sprintf ("\u0049\u006d\u0077%\u0064",_dgbbf ));};_acafg =_fdgfe .AddImageResource (_bgaa ,ximg );if _acafg !=nil {return _acafg ;};_dgbbf =0;_gebfc :=_ged .PdfObjectName (_d .Sprintf ("\u0047\u0053\u0025\u0064",_dgbbf ));for _fdgfe .HasExtGState (_gebfc ){_dgbbf ++;_gebfc =_ged .PdfObjectName (_d .Sprintf ("\u0047\u0053\u0025\u0064",_dgbbf ));};_ecgfb :=_ged .MakeDict ();_ecgfb .Set ("\u0042\u004d",_ged .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_ecgfb .Set ("\u0043\u0041",_ged .MakeFloat (opt .Alpha ));_ecgfb .Set ("\u0063\u0061",_ged .MakeFloat (opt .Alpha ));_acafg =_fdgfe .AddExtGState (_gebfc ,_ecgfb );if _acafg !=nil {return _acafg ;};_bead :=_d .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_gebfc ,_ffcad ,_aadge ,_dbgdb ,_dfabc ,_bgaa );_fdgfe .AddContentStreamByString (_bead );return nil ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_ggfa *PdfColorCalRGB )GetNumComponents ()int {return 3};func (_ddfb *PdfSignature )extractChainFromCert ()([]*_fe .Certificate ,error ){var _geag *_ged .PdfObjectArray ;switch _bbag :=_ddfb .Cert .(type ){case *_ged .PdfObjectString :_geag =_ged .MakeArray (_bbag );case *_ged .PdfObjectArray :_geag =_bbag ;default:return nil ,_d .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_bbag );};var _eccee _bd .Buffer ;for _ ,_adgeb :=range _geag .Elements (){_aecga ,_ecfab :=_ged .GetString (_adgeb );if !_ecfab {return nil ,_d .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_adgeb );};if _ ,_dfaag :=_eccee .Write (_aecga .Bytes ());_dfaag !=nil {return nil ,_dfaag ;};};return _fe .ParseCertificates (_eccee .Bytes ());};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_cdbce *PdfPageResources )GetContainingPdfObject ()_ged .PdfObject {return _cdbce ._bbga };func (_daddc *PdfWriter )writeBytes (_agcbf []byte ){if _daddc ._eagag !=nil {return ;};_fgebb ,_bbdbf :=_daddc ._adcf .Write (_agcbf );_daddc ._faaggc +=int64 (_fgebb );_daddc ._eagag =_bbdbf ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_gdabg .Lock ();defer _gdabg .Unlock ();_eaaaf =subject };

// ToPdfObject implements interface PdfModel.
func (_edbe *PdfAnnotationTrapNet )ToPdfObject ()_ged .PdfObject {_edbe .PdfAnnotation .ToPdfObject ();_fafb :=_edbe ._efb ;_caffb :=_fafb .PdfObject .(*_ged .PdfObjectDictionary );_caffb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));return _fafb ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_cacfg *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_ged .PdfObject )(PdfColor ,error ){if _cacfg .Alternate ==nil {if _cacfg .N ==1{_ffaee :=NewPdfColorspaceDeviceGray ();return _ffaee .ColorFromPdfObjects (objects );}else if _cacfg .N ==3{_faaa :=NewPdfColorspaceDeviceRGB ();return _faaa .ColorFromPdfObjects (objects );}else if _cacfg .N ==4{_daad :=NewPdfColorspaceDeviceCMYK ();return _daad .ColorFromPdfObjects (objects );}else {return nil ,_fc .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _cacfg .Alternate .ColorFromPdfObjects (objects );};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_afdda pdfFontSimple )GetRuneMetrics (r rune )(_aea .CharMetrics ,bool ){if _afdda ._bged !=nil {_aacc ,_gabca :=_afdda ._bged [r ];if _gabca {return _aacc ,true ;};};_caaae :=_afdda .Encoder ();if _caaae ==nil {_eg .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_afdda );return _aea .CharMetrics {},false ;};_gead ,_fbfdd :=_caaae .RuneToCharcode (r );if !_fbfdd {if r !=' '{_eg .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_afdda );};return _aea .CharMetrics {},false ;};_bccfc ,_agbfb :=_afdda .GetCharMetrics (_gead );return _bccfc ,_agbfb ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_cfeb *PdfColorspaceCalGray )GetNumComponents ()int {return 1};func (_eaaa *PdfReader )traverseObjectData (_dgebg _ged .PdfObject )error {return _ged .ResolveReferencesDeep (_dgebg ,_eaaa ._ebagc );};

// ToPdfObject implements interface PdfModel.
func (_gee *PdfActionThread )ToPdfObject ()_ged .PdfObject {_gee .PdfAction .ToPdfObject ();_aed :=_gee ._ebd ;_geea :=_aed .PdfObject .(*_ged .PdfObjectDictionary );_geea .SetIfNotNil ("\u0053",_ged .MakeName (string (ActionTypeThread )));if _gee .F !=nil {_geea .Set ("\u0046",_gee .F .ToPdfObject ());};_geea .SetIfNotNil ("\u0044",_gee .D );_geea .SetIfNotNil ("\u0042",_gee .B );return _aed ;};

// ToPdfObject implements interface PdfModel.
func (_bbeg *PdfAnnotationStamp )ToPdfObject ()_ged .PdfObject {_bbeg .PdfAnnotation .ToPdfObject ();_ddd :=_bbeg ._efb ;_aecc :=_ddd .PdfObject .(*_ged .PdfObjectDictionary );_bbeg .PdfAnnotationMarkup .appendToPdfDictionary (_aecc );_aecc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0053\u0074\u0061m\u0070"));_aecc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bbeg .Name );return _ddd ;};

// GetBorderWidth returns the border style's width.
func (_ddfe *PdfBorderStyle )GetBorderWidth ()float64 {if _ddfe .W ==nil {return 1;};return *_ddfe .W ;};func _bedab ()string {_gdabg .Lock ();defer _gdabg .Unlock ();return _dbcb };

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_cgffe *_ged .PdfIndirectObject ;};func (_fabg *PdfReader )newPdfActionGotoFromDict (_fca *_ged .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_fca .Get ("\u0044")},nil ;};func _gbfee ()string {return _eg .Version };

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _ged .PdfObject ;Sy _ged .PdfObject ;};type pdfFont interface{_aea .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_ged .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_dbc *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_cffa ,_baea :=color .(*PdfColorCalGray );if !_baea {_eg .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");return nil ,_fc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_cffa .Val ();X :=_dbc .WhitePoint [0]*_af .Pow (ANorm ,_dbc .Gamma );Y :=_dbc .WhitePoint [1]*_af .Pow (ANorm ,_dbc .Gamma );Z :=_dbc .WhitePoint [2]*_af .Pow (ANorm ,_dbc .Gamma );_bfbdd :=3.240479*X +-1.537150*Y +-0.498535*Z ;_bffg :=-0.969256*X +1.875992*Y +0.041556*Z ;_efce :=0.055648*X +-0.204043*Y +1.057311*Z ;_bfbdd =_af .Min (_af .Max (_bfbdd ,0),1.0);_bffg =_af .Min (_af .Max (_bffg ,0),1.0);_efce =_af .Min (_af .Max (_efce ,0),1.0);return NewPdfColorDeviceRGB (_bfbdd ,_bffg ,_efce ),nil ;};

// SetDecode sets the decode image float slice.
func (_eecf *Image )SetDecode (decode []float64 ){_eecf ._caaed =decode };func (_fdccf *fontFile )loadFromSegments (_afcff ,_fbee []byte )error {_eg .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_afcff ),len (_fbee ));_fccdc :=_fdccf .parseASCIIPart (_afcff );if _fccdc !=nil {return _fccdc ;};_eg .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_fdccf );if len (_fbee )==0{return nil ;};_eg .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_fdccf );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_gcc *PdfActionImportData )ToPdfObject ()_ged .PdfObject {_gcc .PdfAction .ToPdfObject ();_fab :=_gcc ._ebd ;_eee :=_fab .PdfObject .(*_ged .PdfObjectDictionary );_eee .SetIfNotNil ("\u0053",_ged .MakeName (string (ActionTypeImportData )));if _gcc .F !=nil {_eee .Set ("\u0046",_gcc .F .ToPdfObject ());};return _fab ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_begb *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _begb .Alternate ==nil {_eg .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _begb .N ==1{_eg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_bggae :=NewPdfColorspaceDeviceGray ();return _bggae .ImageToRGB (img );}else if _begb .N ==3{_eg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return img ,nil ;}else if _begb .N ==4{_eg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_cbeb :=NewPdfColorspaceDeviceCMYK ();return _cbeb .ImageToRGB (img );}else {return img ,_fc .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_eg .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_begb );_cgef ,_cdefcb :=_begb .Alternate .ImageToRGB (img );_eg .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_eg .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_cgef );return _cgef ,_cdefcb ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_ged .PdfObjectArray ;Matrix *_ged .PdfObjectArray ;Function []PdfFunction ;};

// R returns the value of the red component of the color.
func (_ddbbc *PdfColorDeviceRGB )R ()float64 {return _ddbbc [0]};

// ToPdfObject implements interface PdfModel.
func (_dbbg *PdfActionSound )ToPdfObject ()_ged .PdfObject {_dbbg .PdfAction .ToPdfObject ();_ddg :=_dbbg ._ebd ;_caf :=_ddg .PdfObject .(*_ged .PdfObjectDictionary );_caf .SetIfNotNil ("\u0053",_ged .MakeName (string (ActionTypeSound )));_caf .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_dbbg .Sound );_caf .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_dbbg .Volume );_caf .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_dbbg .Synchronous );_caf .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_dbbg .Repeat );_caf .SetIfNotNil ("\u004d\u0069\u0078",_dbbg .Mix );return _ddg ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_efaag *PdfSignature )bool ;Validate (_cddfd *PdfSignature ,_accgeg Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_ccggg *PdfSignature )(Hasher ,error );Sign (_gfbeg *PdfSignature ,_cbacb Hasher )error ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_aadd :=NewPdfAction ();_acb :=&PdfActionSound {};_acb .PdfAction =_aadd ;_aadd .SetContext (_acb );return _acb ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_abcd *XObjectImage )GetContainingPdfObject ()_ged .PdfObject {return _abcd ._fcdab };

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_feg *PdfAction )GetContext ()PdfModel {if _feg ==nil {return nil ;};return _feg ._ab ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_aagb pdfCIDFontType0 )GetRuneMetrics (r rune )(_aea .CharMetrics ,bool ){return _aea .CharMetrics {Wx :_aagb ._adcdf },true ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_agaaa DefaultImageHandler )Read (reader _aa .Reader )(*Image ,error ){_cfcg ,_ ,_gfagb :=_faf .Decode (reader );if _gfagb !=nil {_eg .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_gfagb );return nil ,_gfagb ;};return _agaaa .NewImageFromGoImage (_cfcg );};func _ddca (_gdece _ged .PdfObject )(*PdfShading ,error ){_bcbcd :=&PdfShading {};var _cafcc *_ged .PdfObjectDictionary ;if _fgga ,_bdcc :=_ged .GetIndirect (_gdece );_bdcc {_bcbcd ._gfaace =_fgga ;_feddf ,_deebf :=_fgga .PdfObject .(*_ged .PdfObjectDictionary );if !_deebf {_eg .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_ged .ErrTypeError ;};_cafcc =_feddf ;}else if _cegc ,_befdb :=_ged .GetStream (_gdece );_befdb {_bcbcd ._gfaace =_cegc ;_cafcc =_cegc .PdfObjectDictionary ;}else if _fgcg ,_abcbb :=_ged .GetDict (_gdece );_abcbb {_bcbcd ._gfaace =_fgcg ;_cafcc =_fgcg ;}else {_eg .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_gdece );return nil ,_ged .ErrTypeError ;};if _cafcc ==nil {_eg .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_fc .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_gdece =_cafcc .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _gdece ==nil {_eg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gdece =_ged .TraceToDirectObject (_gdece );_dcbad ,_gfdde :=_gdece .(*_ged .PdfObjectInteger );if !_gfdde {_eg .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_gdece );return nil ,_ged .ErrTypeError ;};if *_dcbad < 1||*_dcbad > 7{_eg .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_dcbad );return nil ,_ged .ErrTypeError ;};_bcbcd .ShadingType =_dcbad ;_gdece =_cafcc .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _gdece ==nil {_eg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bdabc ,_ddgac :=NewPdfColorspaceFromPdfObject (_gdece );if _ddgac !=nil {_eg .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_ddgac );return nil ,_ddgac ;};_bcbcd .ColorSpace =_bdabc ;_gdece =_cafcc .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _gdece !=nil {_gdece =_ged .TraceToDirectObject (_gdece );_dccf ,_defbb :=_gdece .(*_ged .PdfObjectArray );if !_defbb {_eg .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gdece );return nil ,_ged .ErrTypeError ;};_bcbcd .Background =_dccf ;};_gdece =_cafcc .Get ("\u0042\u0042\u006f\u0078");if _gdece !=nil {_gdece =_ged .TraceToDirectObject (_gdece );_fcgde ,_deaef :=_gdece .(*_ged .PdfObjectArray );if !_deaef {_eg .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gdece );return nil ,_ged .ErrTypeError ;};_bcdad ,_feaee :=NewPdfRectangle (*_fcgde );if _feaee !=nil {_eg .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_feaee );return nil ,_feaee ;};_bcbcd .BBox =_bcdad ;};_gdece =_cafcc .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");if _gdece !=nil {_gdece =_ged .TraceToDirectObject (_gdece );_fgbce ,_cdda :=_gdece .(*_ged .PdfObjectBool );if !_cdda {_eg .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gdece );return nil ,_ged .ErrTypeError ;};_bcbcd .AntiAlias =_fgbce ;};switch *_dcbad {case 1:_bfae ,_fafg :=_bebf (_cafcc );if _fafg !=nil {return nil ,_fafg ;};_bfae .PdfShading =_bcbcd ;_bcbcd ._dbgdea =_bfae ;return _bcbcd ,nil ;case 2:_dbbb ,_cgfe :=_aaef (_cafcc );if _cgfe !=nil {return nil ,_cgfe ;};_dbbb .PdfShading =_bcbcd ;_bcbcd ._dbgdea =_dbbb ;return _bcbcd ,nil ;case 3:_acccg ,_efdag :=_cecdd (_cafcc );if _efdag !=nil {return nil ,_efdag ;};_acccg .PdfShading =_bcbcd ;_bcbcd ._dbgdea =_acccg ;return _bcbcd ,nil ;case 4:_baccgd ,_afbbb :=_ffbeb (_cafcc );if _afbbb !=nil {return nil ,_afbbb ;};_baccgd .PdfShading =_bcbcd ;_bcbcd ._dbgdea =_baccgd ;return _bcbcd ,nil ;case 5:_afbf ,_ageb :=_cbfffb (_cafcc );if _ageb !=nil {return nil ,_ageb ;};_afbf .PdfShading =_bcbcd ;_bcbcd ._dbgdea =_afbf ;return _bcbcd ,nil ;case 6:_bgff ,_abbe :=_cagaa (_cafcc );if _abbe !=nil {return nil ,_abbe ;};_bgff .PdfShading =_bcbcd ;_bcbcd ._dbgdea =_bgff ;return _bcbcd ,nil ;case 7:_fbaf ,_gacdd :=_afbdca (_cafcc );if _gacdd !=nil {return nil ,_gacdd ;};_fbaf .PdfShading =_bcbcd ;_bcbcd ._dbgdea =_fbaf ;return _bcbcd ,nil ;};return nil ,_fc .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// GetContainingPdfObject implements interface PdfModel.
func (_gcd *PdfAction )GetContainingPdfObject ()_ged .PdfObject {return _gcd ._ebd };

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_dbdd *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _ged .PdfObject ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _ged .PdfObject ;Name _ged .PdfObject ;State _ged .PdfObject ;StateModel _ged .PdfObject ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_bccfa *Image )GetParamsDict ()*_ged .PdfObjectDictionary {_gedag :=_ged .MakeDict ();_gedag .Set ("\u0057\u0069\u0064t\u0068",_ged .MakeInteger (_bccfa .Width ));_gedag .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_ged .MakeInteger (_bccfa .Height ));_gedag .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_ged .MakeInteger (int64 (_bccfa .ColorComponents )));_gedag .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ged .MakeInteger (_bccfa .BitsPerComponent ));return _gedag ;};func (_bgcb *pdfCIDFontType0 )baseFields ()*fontCommon {return &_bgcb .fontCommon };

// SetPatternByName sets a pattern resource specified by keyName.
func (_bggf *PdfPageResources )SetPatternByName (keyName _ged .PdfObjectName ,pattern _ged .PdfObject )error {if _bggf .Pattern ==nil {_bggf .Pattern =_ged .MakeDict ();};_eddg ,_fagee :=_bggf .Pattern .(*_ged .PdfObjectDictionary );if !_fagee {return _ged .ErrTypeError ;};_eddg .Set (keyName ,pattern );return nil ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _ged .PdfObject ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_bgab :=PdfColorDeviceRGB {r ,g ,b };return &_bgab ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_dccef *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fega :=vals [0];if _fega < 0.0||_fega > 100.0{_eg .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_fega );return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dfb :=vals [1];_gggge :=float64 (-100);_ecfa :=float64 (100);if len (_dccef .Range )> 1{_gggge =_dccef .Range [0];_ecfa =_dccef .Range [1];};if _dfb < _gggge ||_dfb > _ecfa {_eg .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_dfb ,_gggge ,_ecfa );return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gceb :=vals [2];_faad :=float64 (-100);_ceaa :=float64 (100);if len (_dccef .Range )> 3{_faad =_dccef .Range [2];_ceaa =_dccef .Range [3];};if _gceb < _faad ||_gceb > _ceaa {_eg .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_gceb ,_faad ,_ceaa );return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aceb :=NewPdfColorLab (_fega ,_dfb ,_gceb );return _aceb ,nil ;};

// GetPage returns the PdfPage model for the specified page number.
func (_eefcg *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _eefcg ._ebea .GetCrypter ()!=nil &&!_eefcg ._ebea .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};if len (_eefcg ._deeb )< pageNumber {return nil ,_fc .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");};_accge :=pageNumber -1;if _accge < 0{return nil ,_d .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_effg :=_eefcg .PageList [_accge ];return _effg ,nil ;};func _ccbd (_dbfc *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_bccf ,_bbaa :=_ged .GetDict (_dbfc .AP );if !_bbaa {return nil ,nil ,_fc .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _bccf ==nil {return nil ,nil ,nil ;};_acbfeg ,_bbaa :=_ged .GetArray (_dbfc .Rect );if !_bbaa ||_acbfeg .Len ()!=4{return nil ,nil ,_fc .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_abbfc ,_gecc :=NewPdfRectangle (*_acbfeg );if _gecc !=nil {return nil ,nil ,_gecc ;};_cbad :=_ged .TraceToDirectObject (_bccf .Get ("\u004e"));switch _adbga :=_cbad .(type ){case *_ged .PdfObjectStream :_ggbb :=_adbga ;_dddcf ,_affe :=NewXObjectFormFromStream (_ggbb );return _dddcf ,_abbfc ,_affe ;case *_ged .PdfObjectDictionary :_gabg :=_adbga ;_bdga ,_fedeb :=_ged .GetName (_dbfc .AS );if !_fedeb {return nil ,nil ,nil ;};if _gabg .Get (*_bdga )==nil {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");return nil ,nil ,nil ;};_dgdb ,_fedeb :=_ged .GetStream (_gabg .Get (*_bdga ));if !_fedeb {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_bdga );return nil ,nil ,_fc .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_agcaf ,_febba :=NewXObjectFormFromStream (_dgdb );return _agcaf ,_abbfc ,_febba ;};_eg .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_cbad );return nil ,nil ,_fc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// ToPdfObject implements interface PdfModel.
func (_edcc *PdfAnnotationSound )ToPdfObject ()_ged .PdfObject {_edcc .PdfAnnotation .ToPdfObject ();_bcbb :=_edcc ._efb ;_egab :=_bcbb .PdfObject .(*_ged .PdfObjectDictionary );_edcc .PdfAnnotationMarkup .appendToPdfDictionary (_egab );_egab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0053\u006f\u0075n\u0064"));_egab .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_edcc .Sound );_egab .SetIfNotNil ("\u004e\u0061\u006d\u0065",_edcc .Name );return _bcbb ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_ccdf *LTV )EnableByName (name string ,extraCerts []*_fe .Certificate )error {_dfabe :=_ccdf ._fbaef ._add .AcroForm ;for _ ,_edecf :=range _dfabe .AllFields (){_cbcdb ,_ :=_edecf .GetContext ().(*PdfFieldSignature );if _cbcdb ==nil {continue ;};if _eefg :=_cbcdb .PartialName ();_eefg !=name {continue ;};return _ccdf .Enable (_cbcdb .V ,extraCerts );};return nil ;};func _bagc (_eceg _ged .PdfObject )(*PdfColorspaceICCBased ,error ){_eded :=&PdfColorspaceICCBased {};if _gcgd ,_dafdf :=_eceg .(*_ged .PdfIndirectObject );_dafdf {_eded ._feab =_gcgd ;};_eceg =_ged .TraceToDirectObject (_eceg );_fggc ,_cgea :=_eceg .(*_ged .PdfObjectArray );if !_cgea {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fggc .Len ()!=2{return nil ,_d .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_eceg =_ged .TraceToDirectObject (_fggc .Get (0));_gafg ,_cgea :=_eceg .(*_ged .PdfObjectName );if !_cgea {return nil ,_d .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_gafg !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_d .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_eceg =_fggc .Get (1);_fagd ,_cgea :=_ged .GetStream (_eceg );if !_cgea {_eg .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_eceg );return nil ,_d .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_aaeaa :=_fagd .PdfObjectDictionary ;_bgec ,_cgea :=_aaeaa .Get ("\u004e").(*_ged .PdfObjectInteger );if !_cgea {return nil ,_d .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_bgec !=1&&*_bgec !=3&&*_bgec !=4{return nil ,_d .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");};_eded .N =int (*_bgec );if _facc :=_aaeaa .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_facc !=nil {_bdfbf ,_cega :=NewPdfColorspaceFromPdfObject (_facc );if _cega !=nil {return nil ,_cega ;};_eded .Alternate =_bdfbf ;};if _gdac :=_aaeaa .Get ("\u0052\u0061\u006eg\u0065");_gdac !=nil {_gdac =_ged .TraceToDirectObject (_gdac );_eeafe ,_fgfdf :=_gdac .(*_ged .PdfObjectArray );if !_fgfdf {return nil ,_d .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");};if _eeafe .Len ()!=2*_eded .N {return nil ,_d .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");};_bgcg ,_gaff :=_eeafe .GetAsFloat64Slice ();if _gaff !=nil {return nil ,_gaff ;};_eded .Range =_bgcg ;}else {_eded .Range =make ([]float64 ,2*_eded .N );for _bec :=0;_bec < _eded .N ;_bec ++{_eded .Range [2*_bec ]=0.0;_eded .Range [2*_bec +1]=1.0;};};if _gefc :=_aaeaa .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_gefc !=nil {_edbad ,_cbdc :=_gefc .(*_ged .PdfObjectStream );if !_cbdc {return nil ,_d .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");};_eded .Metadata =_edbad ;};_baeaa ,_efac :=_ged .DecodeStream (_fagd );if _efac !=nil {return nil ,_efac ;};_eded .Data =_baeaa ;_eded ._dadf =_fagd ;return _eded ,nil ;};func _efbcb (_ccbc []*_ged .PdfObjectStream )*_ged .PdfObjectArray {if len (_ccbc )==0{return nil ;};_gbee :=make ([]_ged .PdfObject ,0,len (_ccbc ));for _ ,_gdaf :=range _ccbc {_gbee =append (_gbee ,_gdaf );};return _ged .MakeArray (_gbee ...);};func _fada (_bafcg *PdfField ,_abed _ged .PdfObject )error {switch _bafcg .GetContext ().(type ){case *PdfFieldText :switch _adbge :=_abed .(type ){case *_ged .PdfObjectName :_edccg :=_adbge ;_eg .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_edccg .String ());_bafcg .V =_ged .MakeEncodedString (_adbge .String (),true );case *_ged .PdfObjectString :_bafcg .V =_ged .MakeEncodedString (_adbge .String (),true );default:_eg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_adbge ,_adbge );};case *PdfFieldButton :switch _abed .(type ){case *_ged .PdfObjectName :if len (_abed .String ())> 0{_bafcg .V =_abed ;_egfc (_bafcg ,_abed );};case *_ged .PdfObjectString :if len (_abed .String ())> 0{_bafcg .V =_ged .MakeName (_abed .String ());_egfc (_bafcg ,_bafcg .V );};default:_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_bafcg .PartialName (),_abed );_bafcg .V =_abed ;};case *PdfFieldChoice :switch _abed .(type ){case *_ged .PdfObjectName :if len (_abed .String ())> 0{_bafcg .V =_ged .MakeString (_abed .String ());_egfc (_bafcg ,_abed );};case *_ged .PdfObjectString :if len (_abed .String ())> 0{_bafcg .V =_abed ;_egfc (_bafcg ,_ged .MakeName (_abed .String ()));};default:_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_bafcg .PartialName (),_abed );_bafcg .V =_abed ;};case *PdfFieldSignature :_eg .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_bafcg .PartialName (),_abed );};return nil ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_eaf :=NewPdfAction ();_gcde :=&PdfActionRendition {};_gcde .PdfAction =_eaf ;_eaf .SetContext (_gcde );return _gcde ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ged .PdfObject ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_ged .PdfObjectInteger ;TilingType *_ged .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_ged .PdfObjectFloat ;YStep *_ged .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_ged .PdfObjectArray ;};func (_bdcff *PdfWriter )updateObjectNumbers (){_ffgeg :=_bdcff .ObjNumOffset ;_dcdfa :=0;for _ ,_ddac :=range _bdcff ._fedfa {_bgfga :=int64 (_dcdfa +1+_ffgeg );_agegf :=true ;if _bdcff ._fbbgd {if _addbd ,_fbeg :=_bdcff ._deagf [_ddac ];_fbeg {_bgfga =_addbd ;_agegf =false ;};};switch _geaaf :=_ddac .(type ){case *_ged .PdfIndirectObject :_geaaf .ObjectNumber =_bgfga ;_geaaf .GenerationNumber =0;case *_ged .PdfObjectStream :_geaaf .ObjectNumber =_bgfga ;_geaaf .GenerationNumber =0;case *_ged .PdfObjectStreams :_geaaf .ObjectNumber =_bgfga ;_geaaf .GenerationNumber =0;default:_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_geaaf );continue ;};if _agegf {_dcdfa ++;};};_edafb :=func (_gbfde _ged .PdfObject )int64 {switch _abeeg :=_gbfde .(type ){case *_ged .PdfIndirectObject :return _abeeg .ObjectNumber ;case *_ged .PdfObjectStream :return _abeeg .ObjectNumber ;case *_ged .PdfObjectStreams :return _abeeg .ObjectNumber ;};return 0;};_ae .SliceStable (_bdcff ._fedfa ,func (_dcaff ,_egccg int )bool {return _edafb (_bdcff ._fedfa [_dcaff ])< _edafb (_bdcff ._fedfa [_egccg ])});};func _fcdde (_fgeaf *_ged .PdfObjectArray )(float64 ,error ){_befgf ,_cbefe :=_fgeaf .ToFloat64Array ();if _cbefe !=nil {_eg .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fgeaf ,_cbefe );};switch len (_befgf ){case 1:return _befgf [0],nil ;case 3:_cdeffe :=PdfColorspaceDeviceRGB {};_edada ,_ecbd :=_cdeffe .ColorFromFloats (_befgf );if _ecbd !=nil {return 0.0,_ecbd ;};return _edada .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_eddeb :=PdfColorspaceDeviceCMYK {};_eccf ,_acgec :=_eddeb .ColorFromFloats (_befgf );if _acgec !=nil {return 0.0,_acgec ;};_efbga ,_acgec :=_eddeb .ColorToRGB (_eccf .(*PdfColorDeviceCMYK ));if _acgec !=nil {return 0.0,_acgec ;};return _efbga .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_cbefe =_fc .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_eg .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fgeaf ,_cbefe );return 0.0,_cbefe ;};func _cadac (_bbdg []rune ,_aggc map[rune ]int ,_abeg map[rune ]_aea .GID )*_ged .PdfObjectArray {_egffc :=&_ged .PdfObjectArray {};for _accf :=0;_accf < len (_bbdg );{_gffgd :=_aggc [_bbdg [_accf ]];_eagbd :=_accf ;for _agdae :=_accf +1;_agdae < len (_bbdg );_agdae ++{_gfgc :=_aggc [_bbdg [_agdae ]];if _gffgd ==_gfgc {_eagbd =_agdae ;}else {break ;};};_eecba :=_abeg [_bbdg [_accf ]];_gaagf :=_abeg [_bbdg [_eagbd ]];_egffc .Append (_ged .MakeInteger (int64 (_eecba )));_egffc .Append (_ged .MakeInteger (int64 (_gaagf )));_egffc .Append (_ged .MakeInteger (int64 (_gffgd )));_accf =_eagbd +1;};return _egffc ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _ged .PdfObject ;Flags _ged .PdfObject ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_gbfae *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _ged .GetNumberAsFloat (_gbfae .CapHeight );};func (_edb *PdfReader )newPdfActionJavaScriptFromDict (_fcb *_ged .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_fcb .Get ("\u004a\u0053")},nil ;};

// Write writes out the PDF.
func (_gefg *PdfWriter )Write (writer _aa .Writer )error {_eg .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_afbfe :=_bc .GetLicenseKey ();if (_afbfe ==nil ||!_afbfe .IsLicensed ())&&!_gdcg {_d .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");_d .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");return _fc .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _gefg ._fbfdb !=nil {_eg .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_gefg ._fbfdb );_fgfgfg :=_gefg ._fbfdb .ToPdfObject ();_eg .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_fgfgfg ,_fgfgfg ,_fgfgfg );_gefg ._ffceb .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_fgfgfg );_fbdfb :=_gefg .addObjects (_fgfgfg );if _fbdfb !=nil {return _fbdfb ;};};if _gefg ._agdfd !=nil {_eg .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_fefda :=_gefg ._agdfd .ToPdfObject ();_eg .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_fefda );_gefg ._ffceb .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_fefda );_befa :=_gefg .addObjects (_fefda );if _befa !=nil {return _befa ;};};for _acdcbd ,_edcga :=range _gefg ._ecga {if !_gefg .hasObject (_acdcbd ){_eg .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_acdcbd ,_acdcbd ,_acdcbd );for _ ,_bdag :=range _edcga {for _ ,_gccaa :=range _bdag .Keys (){_agecb :=_bdag .Get (_gccaa );if _agecb ==_acdcbd {_eg .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");_bdag .Set (_gccaa ,_ged .MakeNull ());break ;};};};};};_gefg ._ffceb .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_ged .MakeName (_d .Sprintf ("\u0025\u0064\u002e%\u0064",_gefg ._cbdcad ,_gefg ._febbf )));_gefg .copyObjects ();if _gefg ._daade !=nil {var _gfdfb error ;_gefg ._fedfa ,_gfdfb =_gefg ._daade .Optimize (_gefg ._fedfa );if _gfdfb !=nil {return _gfdfb ;};_gaaea :=make (map[_ged .PdfObject ]struct{},len (_gefg ._fedfa ));for _ ,_cgaef :=range _gefg ._fedfa {_gaaea [_cgaef ]=struct{}{};};_gefg ._fdbab =_gaaea ;};_gefg ._faaggc =_gefg ._aabddf ;_gefg ._adcf =_f .NewWriter (writer );_ddeac :=_gefg ._cbdcad > 1||(_gefg ._cbdcad ==1&&_gefg ._febbf > 4);if _gefg ._ffgab !=nil {_ddeac =*_gefg ._ffgab ;};_aaff :=make (map[_ged .PdfObject ]bool );for _ ,_efgg :=range _gefg ._fedfa {if _ddee ,_bfaga :=_efgg .(*_ged .PdfObjectStreams );_bfaga {_ddeac =true ;for _ ,_affadg :=range _ddee .Elements (){_aaff [_affadg ]=true ;if _cced ,_afeec :=_affadg .(*_ged .PdfIndirectObject );_afeec {_aaff [_cced .PdfObject ]=true ;};};};};if _ddeac &&_gefg ._cbdcad ==1&&_gefg ._febbf < 5{_gefg ._febbf =5;};if _gefg ._fbbgd {_gefg .writeString ("\u000a");}else {_gefg .writeString (_d .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_gefg ._cbdcad ,_gefg ._febbf ));_gefg .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};_gefg .updateObjectNumbers ();_eg .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_gefg ._fedfa ));_gefg ._gcffd =make (map[int ]crossReference );_gefg ._gcffd [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _gefg ._dbgda .ObjectMap !=nil {for _agdde ,_ddaga :=range _gefg ._dbgda .ObjectMap {if _agdde ==0{continue ;};if _ddaga .XType ==_ged .XrefTypeObjectStream {_eege :=crossReference {Type :2,ObjectNumber :_ddaga .OsObjNumber ,Index :_ddaga .OsObjIndex };_gefg ._gcffd [_agdde ]=_eege ;};if _ddaga .XType ==_ged .XrefTypeTableEntry {_cabeg :=crossReference {Type :1,ObjectNumber :_ddaga .ObjectNumber ,Offset :_ddaga .Offset };_gefg ._gcffd [_agdde ]=_cabeg ;};};};for _ ,_baabe :=range _gefg ._fedfa {if _gdacd :=_aaff [_baabe ];_gdacd {continue ;};_eafgc :=int64 (0);switch _abfccg :=_baabe .(type ){case *_ged .PdfIndirectObject :_eafgc =_abfccg .ObjectNumber ;case *_ged .PdfObjectStream :_eafgc =_abfccg .ObjectNumber ;case *_ged .PdfObjectStreams :_eafgc =_abfccg .ObjectNumber ;default:_eg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_baabe );return ErrTypeCheck ;};if _gefg ._cdgc !=nil &&_baabe !=_gefg ._ecdgg {_cfcda :=_gefg ._cdgc .Encrypt (_baabe ,_eafgc ,0);if _cfcda !=nil {_eg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_cfcda );return _cfcda ;};};_gefg .writeObject (int (_eafgc ),_baabe );};_bedgc :=_gefg ._faaggc ;var _bcage int ;for _fedb :=range _gefg ._gcffd {if _fedb > _bcage {_bcage =_fedb ;};};if _ddeac {_bbeca :=_bcage +1;_gefg ._gcffd [_bbeca ]=crossReference {Type :1,ObjectNumber :_bbeca ,Offset :_bedgc };_deaa :=_bd .NewBuffer (nil );_gcgfc :=_ged .MakeArray ();for _afcbf :=0;_afcbf <=_bcage ;{for ;_afcbf <=_bcage ;_afcbf ++{_ebce ,_bfegc :=_gefg ._gcffd [_afcbf ];if _bfegc &&(!_gefg ._fbbgd ||_gefg ._fbbgd &&(_ebce .Type ==1&&_ebce .Offset >=_gefg ._baabf ||_ebce .Type ==0)){break ;};};var _bccbd int ;for _bccbd =_afcbf +1;_bccbd <=_bcage ;_bccbd ++{_ababf ,_gcage :=_gefg ._gcffd [_bccbd ];if _gcage &&(!_gefg ._fbbgd ||_gefg ._fbbgd &&(_ababf .Type ==1&&_ababf .Offset > _gefg ._baabf )){continue ;};break ;};_gcgfc .Append (_ged .MakeInteger (int64 (_afcbf )),_ged .MakeInteger (int64 (_bccbd -_afcbf )));for _bgecg :=_afcbf ;_bgecg < _bccbd ;_bgecg ++{_fgbeb :=_gefg ._gcffd [_bgecg ];switch _fgbeb .Type {case 0:_fa .Write (_deaa ,_fa .BigEndian ,byte (0));_fa .Write (_deaa ,_fa .BigEndian ,uint32 (0));_fa .Write (_deaa ,_fa .BigEndian ,uint16 (0xFFFF));case 1:_fa .Write (_deaa ,_fa .BigEndian ,byte (1));_fa .Write (_deaa ,_fa .BigEndian ,uint32 (_fgbeb .Offset ));_fa .Write (_deaa ,_fa .BigEndian ,uint16 (_fgbeb .Generation ));case 2:_fa .Write (_deaa ,_fa .BigEndian ,byte (2));_fa .Write (_deaa ,_fa .BigEndian ,uint32 (_fgbeb .ObjectNumber ));_fa .Write (_deaa ,_fa .BigEndian ,uint16 (_fgbeb .Index ));};};_afcbf =_bccbd +1;};_bgefd ,_addgd :=_ged .MakeStream (_deaa .Bytes (),_ged .NewFlateEncoder ());if _addgd !=nil {return _addgd ;};_bgefd .ObjectNumber =int64 (_bbeca );_bgefd .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_ged .MakeName ("\u0058\u0052\u0065\u0066"));_bgefd .PdfObjectDictionary .Set ("\u0057",_ged .MakeArray (_ged .MakeInteger (1),_ged .MakeInteger (4),_ged .MakeInteger (2)));_bgefd .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_gcgfc );_bgefd .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_ged .MakeInteger (int64 (_bbeca +1)));_bgefd .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_gefg ._dceeg );_bgefd .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_gefg ._ceef );if _gefg ._fbbgd &&_gefg ._cdbge > 0{_bgefd .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_ged .MakeInteger (_gefg ._cdbge ));};if _gefg ._cdgc !=nil {_bgefd .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_gefg ._ecdgg );_bgefd .Set ("\u0049\u0044",_gefg ._eaadd );_eg .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_gefg ._eaadd );};_gefg .writeObject (int (_bgefd .ObjectNumber ),_bgefd );}else {_gefg .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _cfecf :=0;_cfecf <=_bcage ;{for ;_cfecf <=_bcage ;_cfecf ++{_acfca ,_ecfcb :=_gefg ._gcffd [_cfecf ];if _ecfcb &&(!_gefg ._fbbgd ||_gefg ._fbbgd &&(_acfca .Type ==1&&_acfca .Offset >=_gefg ._baabf ||_acfca .Type ==0)){break ;};};var _ggbff int ;for _ggbff =_cfecf +1;_ggbff <=_bcage ;_ggbff ++{_cgegdb ,_bfcfg :=_gefg ._gcffd [_ggbff ];if _bfcfg &&(!_gefg ._fbbgd ||_gefg ._fbbgd &&(_cgegdb .Type ==1&&_cgegdb .Offset > _gefg ._baabf )){continue ;};break ;};_baaag :=_d .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_cfecf ,_ggbff -_cfecf );_gefg .writeString (_baaag );for _fdcgg :=_cfecf ;_fdcgg < _ggbff ;_fdcgg ++{_efaba :=_gefg ._gcffd [_fdcgg ];switch _efaba .Type {case 0:_baaag =_d .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_gefg .writeString (_baaag );case 1:_baaag =_d .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_efaba .Offset ,0);_gefg .writeString (_baaag );};};_cfecf =_ggbff +1;};_geacf :=_ged .MakeDict ();_geacf .Set ("\u0049\u006e\u0066\u006f",_gefg ._dceeg );_geacf .Set ("\u0052\u006f\u006f\u0074",_gefg ._ceef );_geacf .Set ("\u0053\u0069\u007a\u0065",_ged .MakeInteger (int64 (_bcage +1)));if _gefg ._fbbgd &&_gefg ._cdbge > 0{_geacf .Set ("\u0050\u0072\u0065\u0076",_ged .MakeInteger (_gefg ._cdbge ));};if _gefg ._cdgc !=nil {_geacf .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_gefg ._ecdgg );_geacf .Set ("\u0049\u0044",_gefg ._eaadd );_eg .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_gefg ._eaadd );};_gefg .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_gefg .writeString (_geacf .WriteString ());_gefg .writeString ("\u000a");};_dege :=_d .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_bedgc );_gefg .writeString (_dege );_gefg .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");if _gefg ._eagag ==nil {_gefg ._eagag =_gefg ._adcf .Flush ();};return _gefg ._eagag ;};

// GetNamedDestinations returns the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_daeff *PdfReader )GetNamedDestinations ()(_ged .PdfObject ,error ){_afffe :=_ged .ResolveReference (_daeff ._fffe .Get ("\u004e\u0061\u006de\u0073"));if _afffe ==nil {return nil ,nil ;};if !_daeff ._dbfdg {_cggbb :=_daeff .traverseObjectData (_afffe );if _cggbb !=nil {return nil ,_cggbb ;};};return _afffe ,nil ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_ebagc :map[_ged .PdfObject ]struct{}{},_accc :_adacbb (),_ebea :_ged .NewParserFromString (txt )};};

// SetAnnotations sets the annotations list.
func (_cgge *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_cgge ._fedfg =annotations };

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_ccb *PdfField )SetContext (ctx PdfModel ){_ccb ._effe =ctx };func (_bgddb *PdfReader )newPdfFieldSignatureFromDict (_ccda *_ged .PdfObjectDictionary )(*PdfFieldSignature ,error ){_gabfb :=&PdfFieldSignature {};_abaf ,_bcdbe :=_ged .GetIndirect (_ccda .Get ("\u0056"));if _bcdbe {var _caffe error ;_gabfb .V ,_caffe =_bgddb .newPdfSignatureFromIndirect (_abaf );if _caffe !=nil {return nil ,_caffe ;};};_gabfb .Lock ,_ =_ged .GetIndirect (_ccda .Get ("\u004c\u006f\u0063\u006b"));_gabfb .SV ,_ =_ged .GetIndirect (_ccda .Get ("\u0053\u0056"));return _gabfb ,nil ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_aeecc *PdfWriter )AddPage (page *PdfPage )error {_gbdbb (page );_efgab :=page .ToPdfObject ();_eg .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");_eg .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_efgab );_bbaf ,_bffcb :=_ged .GetIndirect (_efgab );if !_bffcb {return _fc .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");};_eg .Log .Trace ("\u0025\u0073",_bbaf );_eg .Log .Trace ("\u0025\u0073",_bbaf .PdfObject );_cdbdc ,_bffcb :=_ged .GetDict (_bbaf .PdfObject );if !_bffcb {return _fc .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_dcbb ,_bffcb :=_ged .GetName (_cdbdc .Get ("\u0054\u0079\u0070\u0065"));if !_bffcb {return _d .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_cdbdc .Get ("\u0054\u0079\u0070\u0065"));};if _dcbb .String ()!="\u0050\u0061\u0067\u0065"{return _fc .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_bfaef :=[]_ged .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};_bdbdd ,_fgdff :=_ged .GetIndirect (_cdbdc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_eg .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_cdbdc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_fgdff );for _fgdff {_eg .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_bdbdd );_fdace ,_fgcge :=_ged .GetDict (_bdbdd .PdfObject );if !_fgcge {return _fc .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_cebda :=range _bfaef {_eg .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cebda );if _cdbdc .Get (_cebda )!=nil {_eg .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _fafef :=_fdace .Get (_cebda );_fafef !=nil {_eg .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cebda );_cdbdc .Set (_cebda ,_fafef );};};_bdbdd ,_fgdff =_ged .GetIndirect (_fdace .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_eg .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fdace .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_eg .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");_cdbdc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_aeecc ._aegg );_bbaf .PdfObject =_cdbdc ;_bbff ,_bffcb :=_ged .GetDict (_aeecc ._aegg .PdfObject );if !_bffcb {return _fc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_ebeab ,_bffcb :=_ged .GetArray (_bbff .Get ("\u004b\u0069\u0064\u0073"));if !_bffcb {return _fc .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_ebeab .Append (_bbaf );_aeecc ._cacdf [_cdbdc ]=struct{}{};_beddf ,_bffcb :=_ged .GetInt (_bbff .Get ("\u0043\u006f\u0075n\u0074"));if !_bffcb {return _fc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};*_beddf =*_beddf +1;_aeecc .addObject (_bbaf );_dgade :=_aeecc .addObjects (_cdbdc );if _dgade !=nil {return _dgade ;};return nil ;};func _abda (_abdea *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_abdea }};func _egca (_cdeb []byte )[]byte {const _cgfba =52845;const _ebdg =22719;_cgefa :=55665;for _ ,_ecbeb :=range _cdeb [:4]{_cgefa =(int (_ecbeb )+_cgefa )*_cgfba +_ebdg ;};_dedfe :=make ([]byte ,len (_cdeb )-4);for _bfad ,_adcdd :=range _cdeb [4:]{_dedfe [_bfad ]=byte (int (_adcdd )^_cgefa >>8);_cgefa =(int (_adcdd )+_cgefa )*_cgfba +_ebdg ;};return _dedfe ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_dce :=NewPdfAnnotation ();_fbga :=&PdfAnnotationProjection {};_fbga .PdfAnnotation =_dce ;_fbga .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dce .SetContext (_fbga );return _fbga ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_becb :=&PdfSignature {Type :_ged .MakeName ("\u0053\u0069\u0067"),Handler :handler };_gddfa :=&pdfSignDictionary {PdfObjectDictionary :_ged .MakeDict (),_ccabd :&handler ,_affb :_becb };_becb ._fadfb =_ged .MakeIndirectObject (_gddfa );return _becb ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_ged .PdfObjectBool ;SigFlags *_ged .PdfObjectInteger ;CO *_ged .PdfObjectArray ;DR *PdfPageResources ;DA *_ged .PdfObjectString ;Q *_ged .PdfObjectInteger ;XFA _ged .PdfObject ;_ddbae *_ged .PdfIndirectObject ;};

// GetOptimizer returns current PDF optimizer.
func (_ddbdd *PdfWriter )GetOptimizer ()Optimizer {return _ddbdd ._daade };

// Fill populates `form` with values provided by `provider`.
func (_edbebg *PdfAcroForm )Fill (provider FieldValueProvider )error {return _edbebg .fill (provider ,nil );};type modelManager struct{_ccgfb map[PdfModel ]_ged .PdfObject ;_defb map[_ged .PdfObject ]PdfModel ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _ged .PdfObject ;FontFamily _ged .PdfObject ;FontStretch _ged .PdfObject ;FontWeight _ged .PdfObject ;Flags _ged .PdfObject ;FontBBox _ged .PdfObject ;ItalicAngle _ged .PdfObject ;Ascent _ged .PdfObject ;Descent _ged .PdfObject ;Leading _ged .PdfObject ;CapHeight _ged .PdfObject ;XHeight _ged .PdfObject ;StemV _ged .PdfObject ;StemH _ged .PdfObject ;AvgWidth _ged .PdfObject ;MaxWidth _ged .PdfObject ;MissingWidth _ged .PdfObject ;FontFile _ged .PdfObject ;FontFile2 _ged .PdfObject ;FontFile3 _ged .PdfObject ;CharSet _ged .PdfObject ;_cfaef int ;_ecad float64 ;*fontFile ;_beec *_aea .TtfType ;

// Additional entries for CIDFonts
Style _ged .PdfObject ;Lang _ged .PdfObject ;FD _ged .PdfObject ;CIDSet _ged .PdfObject ;_egegc *_ged .PdfIndirectObject ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_begg *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_ged .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gega ,_adgc :=_ged .GetNumbersAsFloat (objects );if _adgc !=nil {return nil ,_adgc ;};return _begg .ColorFromFloats (_gega );};

// ToPdfObject implements interface PdfModel.
func (_gfa *PdfAnnotationRedact )ToPdfObject ()_ged .PdfObject {_gfa .PdfAnnotation .ToPdfObject ();_beba :=_gfa ._efb ;_ccgb :=_beba .PdfObject .(*_ged .PdfObjectDictionary );_gfa .PdfAnnotationMarkup .appendToPdfDictionary (_ccgb );_ccgb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));_ccgb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gfa .QuadPoints );_ccgb .SetIfNotNil ("\u0049\u0043",_gfa .IC );_ccgb .SetIfNotNil ("\u0052\u004f",_gfa .RO );_ccgb .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_gfa .OverlayText );_ccgb .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_gfa .Repeat );_ccgb .SetIfNotNil ("\u0044\u0041",_gfa .DA );_ccgb .SetIfNotNil ("\u0051",_gfa .Q );return _beba ;};

// AddFont adds a font dictionary to the Font resources.
func (_abee *PdfPage )AddFont (name _ged .PdfObjectName ,font _ged .PdfObject )error {if _abee .Resources ==nil {_abee .Resources =NewPdfPageResources ();};if _abee .Resources .Font ==nil {_abee .Resources .Font =_ged .MakeDict ();};_aaacg ,_efeae :=_ged .TraceToDirectObject (_abee .Resources .Font ).(*_ged .PdfObjectDictionary );if !_efeae {_eg .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_ged .TraceToDirectObject (_abee .Resources .Font ));return _fc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aaacg .Set (name ,font );return nil ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;func (_fgfba *PdfReader )loadAnnotations (_abcag _ged .PdfObject )([]*PdfAnnotation ,error ){_gbdfe ,_bfdgc :=_ged .GetArray (_abcag );if !_bfdgc {return nil ,_d .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _ceaec []*PdfAnnotation ;for _ ,_feacc :=range _gbdfe .Elements (){_feacc =_ged .ResolveReference (_feacc );if _ ,_ccad :=_feacc .(*_ged .PdfObjectNull );_ccad {continue ;};_cafeg ,_egeaa :=_feacc .(*_ged .PdfObjectDictionary );_gafb ,_bbbgg :=_feacc .(*_ged .PdfIndirectObject );if _egeaa {_gafb =&_ged .PdfIndirectObject {};_gafb .PdfObject =_cafeg ;}else {if !_bbbgg {return nil ,_d .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");};};_facf ,_beebb :=_fgfba .newPdfAnnotationFromIndirectObject (_gafb );if _beebb !=nil {return nil ,_beebb ;};switch _bcdg :=_facf .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_bafd :=range _fgfba .AcroForm .AllFields (){if _bafd ._bagb ==_bcdg .Parent {_bcdg ._fgd =_bafd ;break ;};};};if _facf !=nil {_ceaec =append (_ceaec ,_facf );};};return _ceaec ,nil ;};func (_fadc *PdfReader )newPdfAnnotationPolygonFromDict (_gea *_ged .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_bbcc :=PdfAnnotationPolygon {};_cdce ,_abg :=_fadc .newPdfAnnotationMarkupFromDict (_gea );if _abg !=nil {return nil ,_abg ;};_bbcc .PdfAnnotationMarkup =_cdce ;_bbcc .Vertices =_gea .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_bbcc .LE =_gea .Get ("\u004c\u0045");_bbcc .BS =_gea .Get ("\u0042\u0053");_bbcc .IC =_gea .Get ("\u0049\u0043");_bbcc .BE =_gea .Get ("\u0042\u0045");_bbcc .IT =_gea .Get ("\u0049\u0054");_bbcc .Measure =_gea .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_bbcc ,nil ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_efdbb :=&XObjectForm {};_dgeab :=&_ged .PdfObjectStream {};_dgeab .PdfObjectDictionary =_ged .MakeDict ();_efdbb ._dfbddc =_dgeab ;return _efdbb ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_ffe .SimpleEncoder ,error ){_ecgf ,_egeg :=_bbea (basefont );if _egeg !=nil {return nil ,nil ,_egeg ;};_gbdge ,_eebc :=_ecgf .Encoder ().(_ffe .SimpleEncoder );if !_eebc {return nil ,nil ,_d .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_ecgf .Encoder ());};_egegf :=make (map[rune ]_ffe .GlyphName );for _cbcca :=range alphabet {if _ ,_dbag :=_gbdge .RuneToCharcode (_cbcca );!_dbag {_ ,_dfdb :=_ecgf ._bged [_cbcca ];if !_dfdb {_eg .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_cbcca ,_cbcca );continue ;};_efeab ,_dfdb :=_ffe .RuneToGlyph (_cbcca );if !_dfdb {_eg .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_cbcca ,_cbcca );continue ;};if len (_egegf )>=255{return nil ,nil ,_fc .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");};_egegf [_cbcca ]=_efeab ;};};var (_bafc []_ffe .CharCode ;_faceg []_ffe .CharCode ;);for _gacg :=_ffe .CharCode (1);_gacg <=0xff;_gacg ++{_caaag ,_adfcf :=_gbdge .CharcodeToRune (_gacg );if !_adfcf {_bafc =append (_bafc ,_gacg );continue ;};if _ ,_adfcf =alphabet [_caaag ];!_adfcf {_faceg =append (_faceg ,_gacg );};};_eeed :=append (_bafc ,_faceg ...);if len (_eeed )< len (_egegf ){return nil ,nil ,_d .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_egegf ),len (_eeed ));};_fgcf :=make ([]rune ,0,len (_egegf ));for _bgeg :=range _egegf {_fgcf =append (_fgcf ,_bgeg );};_ae .Slice (_fgcf ,func (_dcac ,_bbcd int )bool {return _fgcf [_dcac ]< _fgcf [_bbcd ]});_adacc :=make (map[_ffe .CharCode ]_ffe .GlyphName ,len (_fgcf ));for _ ,_gdddb :=range _fgcf {_fbfd :=_eeed [0];_eeed =_eeed [1:];_adacc [_fbfd ]=_egegf [_gdddb ];};_gbdge =_ffe .ApplyDifferences (_gbdge ,_adacc );_ecgf .SetEncoder (_gbdge );return &PdfFont {_gfdbg :&_ecgf },_gbdge ,nil ;};

// GetAction returns the PDF action for the annotation link.
func (_ebg *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _ebg ._egfd !=nil {return _ebg ._egfd ,nil ;};if _ebg .A ==nil {return nil ,nil ;};if _ebg ._edf ==nil {return nil ,nil ;};_fdd ,_fegc :=_ebg ._edf .loadAction (_ebg .A );if _fegc !=nil {return nil ,_fegc ;};_ebg ._egfd =_fdd ;return _ebg ._egfd ,nil ;};func (_gfea *pdfFontSimple )getFontEncoding ()(_eaca string ,_egec map[_ffe .CharCode ]_ffe .GlyphName ,_ddfd error ){_eaca ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _abbfcc ,_caec :=_aggfd [_gfea ._dgefe ];_caec {_eaca =_abbfcc ;}else if _gfea .fontFlags ()&_ffcc !=0{for _fcgg ,_ffbd :=range _aggfd {if _bf .Contains (_gfea ._dgefe ,_fcgg ){_eaca =_ffbd ;break ;};};};if _gfea .Encoding ==nil {return _eaca ,nil ,nil ;};switch _egcd :=_gfea .Encoding .(type ){case *_ged .PdfObjectName :return string (*_egcd ),nil ,nil ;case *_ged .PdfObjectDictionary :_ggad ,_fdadb :=_ged .GetName (_egcd .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _fdadb {_eaca =_ggad .String ();};if _fedgg :=_egcd .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_fedgg !=nil {_bedac ,_fabef :=_ged .GetArray (_fedgg );if !_fabef {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_egcd ,_egcd .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));return "",nil ,_ged .ErrTypeError ;};_egec ,_ddfd =_ffe .FromFontDifferences (_bedac );};return _eaca ,_egec ,_ddfd ;default:_eg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_gfea .Encoding ,_gfea .Encoding );return "",nil ,_ged .ErrTypeError ;};};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_edadd ,_defdb :=_aea .NewStdFontByName (HelveticaName );if !_defdb {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");};_adbgb :=_fged (_edadd );return &PdfFont {_gfdbg :&_adbgb };};var ImageHandling ImageHandler =DefaultImageHandler {};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_fff :=&PdfAction {};_fff ._ebd =_ged .MakeIndirectObject (_ged .MakeDict ());return _fff ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_aefa _ged .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fae *PdfActionURI )ToPdfObject ()_ged .PdfObject {_fae .PdfAction .ToPdfObject ();_bbe :=_fae ._ebd ;_ffc :=_bbe .PdfObject .(*_ged .PdfObjectDictionary );_ffc .SetIfNotNil ("\u0053",_ged .MakeName (string (ActionTypeURI )));_ffc .SetIfNotNil ("\u0055\u0052\u0049",_fae .URI );_ffc .SetIfNotNil ("\u0049\u0073\u004da\u0070",_fae .IsMap );return _bbe ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_ceef *_ged .PdfIndirectObject ;_aegg *_ged .PdfIndirectObject ;_cacdf map[_ged .PdfObject ]struct{};_fedfa []_ged .PdfObject ;_fdbab map[_ged .PdfObject ]struct{};_cgebg []*_ged .PdfIndirectObject ;_fbfdb *PdfOutlineTreeNode ;_ffceb *_ged .PdfObjectDictionary ;_abga []_ged .PdfObject ;_dceeg *_ged .PdfIndirectObject ;_adcf *_f .Writer ;_faaggc int64 ;_eagag error ;_cdgc *_ged .PdfCrypt ;_dbccc *_ged .PdfObjectDictionary ;_ecdgg *_ged .PdfIndirectObject ;_eaadd *_ged .PdfObjectArray ;_cbdcad int ;_febbf int ;_ffgab *bool ;_ecga map[_ged .PdfObject ][]*_ged .PdfObjectDictionary ;_agdfd *PdfAcroForm ;_daade Optimizer ;_gcffd map[int ]crossReference ;_aabddf int64 ;ObjNumOffset int ;_fbbgd bool ;_dbgda _ged .XrefTable ;_cdbge int64 ;_baabf int64 ;_deagf map[_ged .PdfObject ]int64 ;_gabeg map[_ged .PdfObject ]struct{};};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _ged .PdfObject ;FS _ged .PdfObject ;F _ged .PdfObject ;UF _ged .PdfObject ;DOS _ged .PdfObject ;Mac _ged .PdfObject ;Unix _ged .PdfObject ;ID _ged .PdfObject ;V _ged .PdfObject ;EF _ged .PdfObject ;RF _ged .PdfObject ;Desc _ged .PdfObject ;CI _ged .PdfObject ;_eeebf _ged .PdfObject ;};func (_dbbe *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_gaegg *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_ddfef :=_gaegg .GetContentStreamObjs ();wrapContents =wrapContents &&len (_ddfef )> 0;_egda :=_ged .NewFlateEncoder ();_dgead :=_ged .MakeArray ();if wrapContents {_aedef ,_fgfce :=_ged .MakeStream ([]byte ("\u0071\u000a"),_egda );if _fgfce !=nil {return _fgfce ;};_dgead .Append (_aedef );};_dgead .Append (_ddfef ...);if wrapContents {_ddeg ,_geee :=_ged .MakeStream ([]byte ("\u000a\u0051\u000a"),_egda );if _geee !=nil {return _geee ;};_dgead .Append (_ddeg );};_cecec ,_badb :=_ged .MakeStream (cs ,_egda );if _badb !=nil {return _badb ;};_dgead .Append (_cecec );_gaegg .Contents =_dgead ;return nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_fbgdg *PdfOutline )ToPdfObject ()_ged .PdfObject {_deag :=_fbgdg ._agbgd ;_ggacb :=_deag .PdfObject .(*_ged .PdfObjectDictionary );_ggacb .Set ("\u0054\u0079\u0070\u0065",_ged .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _fbgdg .First !=nil {_ggacb .Set ("\u0046\u0069\u0072s\u0074",_fbgdg .First .ToPdfObject ());};if _fbgdg .Last !=nil {_ggacb .Set ("\u004c\u0061\u0073\u0074",_fbgdg .Last .GetContext ().GetContainingPdfObject ());};if _fbgdg .Parent !=nil {_ggacb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fbgdg .Parent .GetContext ().GetContainingPdfObject ());};if _fbgdg .Count !=nil {_ggacb .Set ("\u0043\u006f\u0075n\u0074",_ged .MakeInteger (*_fbgdg .Count ));};return _deag ;};

// ToPdfObject implements interface PdfModel.
func (_egff *PdfAnnotationCircle )ToPdfObject ()_ged .PdfObject {_egff .PdfAnnotation .ToPdfObject ();_aabdd :=_egff ._efb ;_cbe :=_aabdd .PdfObject .(*_ged .PdfObjectDictionary );_egff .PdfAnnotationMarkup .appendToPdfDictionary (_cbe );_cbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));_cbe .SetIfNotNil ("\u0042\u0053",_egff .BS );_cbe .SetIfNotNil ("\u0049\u0043",_egff .IC );_cbe .SetIfNotNil ("\u0042\u0045",_egff .BE );_cbe .SetIfNotNil ("\u0052\u0044",_egff .RD );return _aabdd ;};func (_dbgg *LTV )generateVRIKey (_cfca *PdfSignature )(string ,error ){_acagb ,_gdcdd :=_fegcd (_cfca .Contents .Bytes ());if _gdcdd !=nil {return "",_gdcdd ;};return _bf .ToUpper (_ed .EncodeToString (_acagb )),nil ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_cacab :=PdfWriter {};_cacab ._fdbab =map[_ged .PdfObject ]struct{}{};_cacab ._fedfa =[]_ged .PdfObject {};_cacab ._ecga =map[_ged .PdfObject ][]*_ged .PdfObjectDictionary {};_cacab ._gabeg =map[_ged .PdfObject ]struct{}{};_cacab ._cbdcad =1;_cacab ._febbf =3;_ggebd :=_ged .MakeDict ();_gbcdb :=[]struct{_agbdf _ged .PdfObjectName ;_edfab string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_gdcgb ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_cedea ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_bedab ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_acfga ()},{"\u0054\u0069\u0074l\u0065",_cagde ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_eddae ()}};for _ ,_gbeda :=range _gbcdb {if _gbeda ._edfab !=""{_ggebd .Set (_gbeda ._agbdf ,_ged .MakeString (_gbeda ._edfab ));};};if _eaae :=_fgbe ();!_eaae .IsZero (){if _gdeg ,_dfedag :=NewPdfDateFromTime (_eaae );_dfedag ==nil {_ggebd .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_gdeg .ToPdfObject ());};};if _gfffg :=_gcccf ();!_gfffg .IsZero (){if _ggeff ,_ggggc :=NewPdfDateFromTime (_gfffg );_ggggc ==nil {_ggebd .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_ggeff .ToPdfObject ());};};_eabgf :=_ged .PdfIndirectObject {};_eabgf .PdfObject =_ggebd ;_cacab ._dceeg =&_eabgf ;_cacab .addObject (&_eabgf );_abgga :=_ged .PdfIndirectObject {};_bcgbc :=_ged .MakeDict ();_bcgbc .Set ("\u0054\u0079\u0070\u0065",_ged .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_abgga .PdfObject =_bcgbc ;_cacab ._ceef =&_abgga ;_cacab .addObject (_cacab ._ceef );_dgacd :=_ged .PdfIndirectObject {};_abdca :=_ged .MakeDict ();_abdca .Set ("\u0054\u0079\u0070\u0065",_ged .MakeName ("\u0050\u0061\u0067e\u0073"));_ebbfg :=_ged .PdfObjectArray {};_abdca .Set ("\u004b\u0069\u0064\u0073",&_ebbfg );_abdca .Set ("\u0043\u006f\u0075n\u0074",_ged .MakeInteger (0));_dgacd .PdfObject =_abdca ;_cacab ._aegg =&_dgacd ;_cacab ._cacdf =map[_ged .PdfObject ]struct{}{};_cacab .addObject (_cacab ._aegg );_bcgbc .Set ("\u0050\u0061\u0067e\u0073",&_dgacd );_cacab ._ffceb =_bcgbc ;_eg .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_abgga );return _cacab ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};func (_ggfe *PdfAcroForm )fill (_gdbg FieldValueProvider ,_gafe FieldAppearanceGenerator )error {if _ggfe ==nil {return nil ;};_cegfa ,_bfcb :=_gdbg .FieldValues ();if _bfcb !=nil {return _bfcb ;};for _ ,_gfafc :=range _ggfe .AllFields (){_gbdbe :=_gfafc .PartialName ();_cadg ,_gdbge :=_cegfa [_gbdbe ];if !_gdbge {if _daadd ,_eaebb :=_gfafc .FullName ();_eaebb ==nil {_cadg ,_gdbge =_cegfa [_daadd ];};};if !_gdbge {_eg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_gbdbe );continue ;};if _cegb :=_fada (_gfafc ,_cadg );_cegb !=nil {return _cegb ;};if _gafe ==nil {continue ;};for _ ,_gbddd :=range _gfafc .Annotations {_bdeb ,_gcadc :=_gafe .GenerateAppearanceDict (_ggfe ,_gfafc ,_gbddd );if _gcadc !=nil {return _gcadc ;};_gbddd .AP =_bdeb ;_gbddd .ToPdfObject ();};};return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_facgc *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebef :=vals [0];_gdcb :=[]float64 {_ebef };_aecg ,_aafa :=_facgc .TintTransform .Evaluate (_gdcb );if _aafa !=nil {_eg .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_aafa );_eg .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_facgc .TintTransform );return nil ,_aafa ;};_eg .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_aecg ,_facgc .AlternateSpace );_agddc ,_aafa :=_facgc .AlternateSpace .ColorFromFloats (_aecg );if _aafa !=nil {_eg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_aafa );return nil ,_aafa ;};return _agddc ,nil ;};func (_ffbe *PdfReader )newPdfAnnotationLineFromDict (_aege *_ged .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_geead :=PdfAnnotationLine {};_cecb ,_ddge :=_ffbe .newPdfAnnotationMarkupFromDict (_aege );if _ddge !=nil {return nil ,_ddge ;};_geead .PdfAnnotationMarkup =_cecb ;_geead .L =_aege .Get ("\u004c");_geead .BS =_aege .Get ("\u0042\u0053");_geead .LE =_aege .Get ("\u004c\u0045");_geead .IC =_aege .Get ("\u0049\u0043");_geead .LL =_aege .Get ("\u004c\u004c");_geead .LLE =_aege .Get ("\u004c\u004c\u0045");_geead .Cap =_aege .Get ("\u0043\u0061\u0070");_geead .IT =_aege .Get ("\u0049\u0054");_geead .LLO =_aege .Get ("\u004c\u004c\u004f");_geead .CP =_aege .Get ("\u0043\u0050");_geead .Measure =_aege .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_geead .CO =_aege .Get ("\u0043\u004f");return &_geead ,nil ;};

// Encoder returns the font's text encoder.
func (_ccde *PdfFont )Encoder ()_ffe .TextEncoder {_bcgg :=_ccde .actualFont ();if _bcgg ==nil {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_ccde ._gfdbg );return nil ;};return _bcgg .Encoder ();};var (_efbcc =_cf .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_geggg =_cf .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_eabfd =_cf .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");_fcbgg ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_fbdc ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_eebg ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";);

// ToPdfObject returns a stream object.
func (_cgcfe *XObjectImage )ToPdfObject ()_ged .PdfObject {_ffdcbf :=_cgcfe ._fcdab ;_gfbffb :=_ffdcbf .PdfObjectDictionary ;if _cgcfe .Filter !=nil {_gfbffb =_cgcfe .Filter .MakeStreamDict ();_ffdcbf .PdfObjectDictionary =_gfbffb ;};_gfbffb .Set ("\u0054\u0079\u0070\u0065",_ged .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_gfbffb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0049\u006d\u0061g\u0065"));_gfbffb .Set ("\u0057\u0069\u0064t\u0068",_ged .MakeInteger (*(_cgcfe .Width )));_gfbffb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_ged .MakeInteger (*(_cgcfe .Height )));if _cgcfe .BitsPerComponent !=nil {_gfbffb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ged .MakeInteger (*(_cgcfe .BitsPerComponent )));};if _cgcfe .ColorSpace !=nil {_gfbffb .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_cgcfe .ColorSpace .ToPdfObject ());};_gfbffb .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_cgcfe .Intent );_gfbffb .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_cgcfe .ImageMask );_gfbffb .SetIfNotNil ("\u004d\u0061\u0073\u006b",_cgcfe .Mask );_gfbffb .SetIfNotNil ("\u0044\u0065\u0063\u006f\u0064\u0065",_cgcfe .Decode );_gfbffb .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_cgcfe .Interpolate );_gfbffb .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_cgcfe .Alternatives );_gfbffb .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_cgcfe .SMask );_gfbffb .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_cgcfe .SMaskInData );_gfbffb .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_cgcfe .Matte );_gfbffb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cgcfe .Name );_gfbffb .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_cgcfe .StructParent );_gfbffb .SetIfNotNil ("\u0049\u0044",_cgcfe .ID );_gfbffb .SetIfNotNil ("\u004f\u0050\u0049",_cgcfe .OPI );_gfbffb .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_cgcfe .Metadata );_gfbffb .SetIfNotNil ("\u004f\u0043",_cgcfe .OC );_gfbffb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ged .MakeInteger (int64 (len (_cgcfe .Stream ))));_ffdcbf .Stream =_cgcfe .Stream ;return _ffdcbf ;};func (_dfedb *PdfWriter )writeObject (_cgebeb int ,_ccdaf _ged .PdfObject ){_eg .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_cgebeb );if _gddbg ,_daadf :=_ccdaf .(*_ged .PdfIndirectObject );_daadf {_dfedb ._gcffd [_cgebeb ]=crossReference {Type :1,Offset :_dfedb ._faaggc ,Generation :_gddbg .GenerationNumber };_gdcde :=_d .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cgebeb );if _fddfg ,_eacgd :=_gddbg .PdfObject .(*pdfSignDictionary );_eacgd {_fddfg ._ccaae =_dfedb ._faaggc +int64 (len (_gdcde ));};if _gddbg .PdfObject ==nil {_eg .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");_gddbg .PdfObject =_ged .MakeNull ();};_gdcde +=_gddbg .PdfObject .WriteString ();_gdcde +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_dfedb .writeString (_gdcde );return ;};if _ccdbb ,_cbaba :=_ccdaf .(*_ged .PdfObjectStream );_cbaba {_dfedb ._gcffd [_cgebeb ]=crossReference {Type :1,Offset :_dfedb ._faaggc ,Generation :_ccdbb .GenerationNumber };_aegd :=_d .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cgebeb );_aegd +=_ccdbb .PdfObjectDictionary .WriteString ();_aegd +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_dfedb .writeString (_aegd );_dfedb .writeBytes (_ccdbb .Stream );_dfedb .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _fbcfg ,_aadgc :=_ccdaf .(*_ged .PdfObjectStreams );_aadgc {_dfedb ._gcffd [_cgebeb ]=crossReference {Type :1,Offset :_dfedb ._faaggc ,Generation :_fbcfg .GenerationNumber };_aafc :=_d .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cgebeb );var _acgac []string ;var _cfdfa string ;var _fgdgf int64 ;for _feeeea ,_addcg :=range _fbcfg .Elements (){_daaee ,_befga :=_addcg .(*_ged .PdfIndirectObject );if !_befga {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_cgebeb ,_addcg );continue ;};_gfbdc :=_daaee .PdfObject .WriteString ()+"\u0020";_cfdfa =_cfdfa +_gfbdc ;_acgac =append (_acgac ,_d .Sprintf ("\u0025\u0064\u0020%\u0064",_daaee .ObjectNumber ,_fgdgf ));_dfedb ._gcffd [int (_daaee .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_cgebeb ,Index :_feeeea };_fgdgf =_fgdgf +int64 (len ([]byte (_gfbdc )));};_cbaed :=_bf .Join (_acgac ,"\u0020")+"\u0020";_gddca :=_ged .NewFlateEncoder ();_beac :=_gddca .MakeStreamDict ();_beac .Set (_ged .PdfObjectName ("\u0054\u0079\u0070\u0065"),_ged .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));_baad :=int64 (_fbcfg .Len ());_beac .Set (_ged .PdfObjectName ("\u004e"),_ged .MakeInteger (_baad ));_bafb :=int64 (len (_cbaed ));_beac .Set (_ged .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_ged .MakeInteger (_bafb ));_gcebf ,_ :=_gddca .EncodeBytes ([]byte (_cbaed +_cfdfa ));_cfecd :=int64 (len (_gcebf ));_beac .Set (_ged .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_ged .MakeInteger (_cfecd ));_aafc +=_beac .WriteString ();_aafc +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_dfedb .writeString (_aafc );_dfedb .writeBytes (_gcebf );_dfedb .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_dfedb .writeString (_ccdaf .WriteString ());};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};type pdfCIDFontType2 struct{fontCommon ;_dgfg *_ged .PdfIndirectObject ;_gecbd _ffe .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_ged .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _ged .PdfObject ;W _ged .PdfObject ;DW2 _ged .PdfObject ;W2 _ged .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _ged .PdfObject ;_bafcc map[_ffe .CharCode ]float64 ;_bafe float64 ;_bfaf map[rune ]int ;};

// Encoder returns the font's text encoder.
func (_fedd pdfFontType0 )Encoder ()_ffe .TextEncoder {return _fedd ._ddga };

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _c .Time )(PdfDate ,error ){_cbdce :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_aebe ,_ :=_ea .ParseInt (_cbdce [1:3],10,32);_aagga ,_ :=_ea .ParseInt (_cbdce [4:6],10,32);return PdfDate {_fegf :int64 (timeObj .Year ()),_ggdde :int64 (timeObj .Month ()),_afbdgf :int64 (timeObj .Day ()),_gaadc :int64 (timeObj .Hour ()),_geeba :int64 (timeObj .Minute ()),_eeddb :int64 (timeObj .Second ()),_fgacaa :_cbdce [0],_eeegec :_aebe ,_acea :_aagga },nil ;};func (_bccec *PdfReader )newPdfAnnotationWidgetFromDict (_bea *_ged .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_ebgge :=PdfAnnotationWidget {};_ebgge .H =_bea .Get ("\u0048");_ebgge .MK =_bea .Get ("\u004d\u004b");_ebgge .A =_bea .Get ("\u0041");_ebgge .AA =_bea .Get ("\u0041\u0041");_ebgge .BS =_bea .Get ("\u0042\u0053");_ebgge .Parent =_bea .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_ebgge ,nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_cdcaa *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _cdcaa .MediaBox !=nil {return _cdcaa .MediaBox ,nil ;};_gbfd :=_cdcaa .Parent ;for _gbfd !=nil {_bggd ,_dgaafe :=_ged .GetDict (_gbfd );if !_dgaafe {return nil ,_fc .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");};if _gfgfd :=_bggd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_gfgfd !=nil {_cbeeg ,_adaa :=_ged .GetArray (_gfgfd );if !_adaa {return nil ,_fc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");};_cgebe ,_dfcdb :=NewPdfRectangle (*_cbeeg );if _dfcdb !=nil {return nil ,_dfcdb ;};return _cgebe ,nil ;};_gbfd =_bggd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_fc .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");};

// GetContainingPdfObject implements interface PdfModel.
func (_bdfc *PdfSignature )GetContainingPdfObject ()_ged .PdfObject {return _bdfc ._fadfb };

// ToPdfObject implements interface PdfModel.
func (_aeff *PdfAnnotationRichMedia )ToPdfObject ()_ged .PdfObject {_aeff .PdfAnnotation .ToPdfObject ();_ceada :=_aeff ._efb ;_bgac :=_ceada .PdfObject .(*_ged .PdfObjectDictionary );_bgac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));_bgac .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_aeff .RichMediaSettings );_bgac .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_aeff .RichMediaContent );return _ceada ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_edcac *PdfShadingType3 )ToPdfObject ()_ged .PdfObject {_edcac .PdfShading .ToPdfObject ();_bbcbd ,_ebefd :=_edcac .getShadingDict ();if _ebefd !=nil {_eg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _edcac .Coords !=nil {_bbcbd .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_edcac .Coords );};if _edcac .Domain !=nil {_bbcbd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_edcac .Domain );};if _edcac .Function !=nil {if len (_edcac .Function )==1{_bbcbd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_edcac .Function [0].ToPdfObject ());}else {_gggab :=_ged .MakeArray ();for _ ,_befdg :=range _edcac .Function {_gggab .Append (_befdg .ToPdfObject ());};_bbcbd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gggab );};};if _edcac .Extend !=nil {_bbcbd .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_edcac .Extend );};return _edcac ._gfaace ;};func (_afef *LTV )getCerts (_gggede []*_fe .Certificate )([][]byte ,error ){_cfbf :=make ([][]byte ,0,len (_gggede ));for _ ,_dcfea :=range _gggede {_cfbf =append (_cfbf ,_dcfea .Raw );};return _cfbf ,nil ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_gffcf :=appender .Reader .DSS ;if _gffcf ==nil {_gffcf =NewDSS ();};if _cbegg :=_gffcf .generateHashMaps ();_cbegg !=nil {return nil ,_cbegg ;};return &LTV {CertClient :_ce .NewCertClient (),OCSPClient :_ce .NewOCSPClient (),CRLClient :_ce .NewCRLClient (),SkipExisting :true ,_fbaef :appender ,_cdbfg :_gffcf },nil ;};func (_eeaca *pdfFontSimple )updateStandard14Font (){_edcca ,_eegba :=_eeaca .Encoder ().(_ffe .SimpleEncoder );if !_eegba {_eg .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_eeaca .Encoder (),_eeaca );return ;};_eefc :=_edcca .Charcodes ();_eeaca ._aagc =make (map[_ffe .CharCode ]float64 ,len (_eefc ));for _ ,_eebcd :=range _eefc {_ddefg ,_ :=_edcca .CharcodeToRune (_eebcd );_eeaca ._aagc [_eebcd ]=_eeaca ._bged [_ddefg ].Wx ;};};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_gdgf :=NewPdfAnnotation ();_ffag :=&PdfAnnotationScreen {};_ffag .PdfAnnotation =_gdgf ;_gdgf .SetContext (_ffag );return _ffag ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_adab *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_adab .Base .GetNumComponents ();_dadbg :=int (vals [0])*N ;if _dadbg < 0||(_dadbg +N -1)>=len (_adab ._aabff ){return nil ,_fc .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_ddba :=_adab ._aabff [_dadbg :_dadbg +N ];var _eabeb []float64 ;for _ ,_fdaad :=range _ddba {_eabeb =append (_eabeb ,float64 (_fdaad )/255.0);};_dede ,_fbe :=_adab .Base .ColorFromFloats (_eabeb );if _fbe !=nil {return nil ,_fbe ;};return _dede ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gbdd *PdfAnnotationFreeText )ToPdfObject ()_ged .PdfObject {_gbdd .PdfAnnotation .ToPdfObject ();_bdb :=_gbdd ._efb ;_ccge :=_bdb .PdfObject .(*_ged .PdfObjectDictionary );_gbdd .PdfAnnotationMarkup .appendToPdfDictionary (_ccge );_ccge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));_ccge .SetIfNotNil ("\u0044\u0041",_gbdd .DA );_ccge .SetIfNotNil ("\u0051",_gbdd .Q );_ccge .SetIfNotNil ("\u0052\u0043",_gbdd .RC );_ccge .SetIfNotNil ("\u0044\u0053",_gbdd .DS );_ccge .SetIfNotNil ("\u0043\u004c",_gbdd .CL );_ccge .SetIfNotNil ("\u0049\u0054",_gbdd .IT );_ccge .SetIfNotNil ("\u0042\u0045",_gbdd .BE );_ccge .SetIfNotNil ("\u0052\u0044",_gbdd .RD );_ccge .SetIfNotNil ("\u0042\u0053",_gbdd .BS );_ccge .SetIfNotNil ("\u004c\u0045",_gbdd .LE );return _bdb ;};

// ToPdfObject implements interface PdfModel.
func (_ccfd *PdfAnnotationPolygon )ToPdfObject ()_ged .PdfObject {_ccfd .PdfAnnotation .ToPdfObject ();_fdgb :=_ccfd ._efb ;_gddd :=_fdgb .PdfObject .(*_ged .PdfObjectDictionary );_ccfd .PdfAnnotationMarkup .appendToPdfDictionary (_gddd );_gddd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));_gddd .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_ccfd .Vertices );_gddd .SetIfNotNil ("\u004c\u0045",_ccfd .LE );_gddd .SetIfNotNil ("\u0042\u0053",_ccfd .BS );_gddd .SetIfNotNil ("\u0049\u0043",_ccfd .IC );_gddd .SetIfNotNil ("\u0042\u0045",_ccfd .BE );_gddd .SetIfNotNil ("\u0049\u0054",_ccfd .IT );_gddd .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_ccfd .Measure );return _fdgb ;};func (_dfegd *Image )samplesAddPadding (_ebegd []uint32 )[]uint32 {_bgedd :=_daf .BytesPerLine (int (_dfegd .Width ),int (_dfegd .BitsPerComponent ),_dfegd .ColorComponents )*(8/int (_dfegd .BitsPerComponent ));_cdcbe :=_bgedd *int (_dfegd .Height );if len (_ebegd )==_cdcbe {return _ebegd ;};_eeeag :=make ([]uint32 ,_cdcbe );_cecad :=int (_dfegd .Width )*_dfegd .ColorComponents ;for _fdacd :=0;_fdacd < int (_dfegd .Height );_fdacd ++{_gfbee :=_fdacd *int (_dfegd .Width );_aadg :=_fdacd *_bgedd ;for _efcda :=0;_efcda < _cecad ;_efcda ++{_eeeag [_aadg +_efcda ]=_ebegd [_gfbee +_efcda ];};};return _eeeag ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_ddbae :_ged .MakeIndirectObject (_ged .MakeDict ())};};

// String implements interface PdfObject.
func (_aad *PdfAction )String ()string {_bfg ,_ebb :=_aad .ToPdfObject ().(*_ged .PdfIndirectObject );if _ebb {return _d .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_aad ._ab ,_bfg .PdfObject .String ());};return "";};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_ggb :=NewPdfAnnotation ();_dcf :=&PdfAnnotationSound {};_dcf .PdfAnnotation =_ggb ;_dcf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggb .SetContext (_dcf );return _dcf ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_eeac *PdfColorspaceLab )GetNumComponents ()int {return 3};

// WriteToFile writes the Appender output to file specified by path.
func (_gadc *PdfAppender )WriteToFile (outputPath string )error {_fgaf ,_aebdf :=_ad .Create (outputPath );if _aebdf !=nil {return _aebdf ;};defer _fgaf .Close ();return _gadc .Write (_fgaf );};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_acdca :=PdfColorLab {l ,a ,b };return &_acdca };func _cecdd (_fdgbd *_ged .PdfObjectDictionary )(*PdfShadingType3 ,error ){_efca :=PdfShadingType3 {};_fagad :=_fdgbd .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _fagad ==nil {_eg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;};_cbdgd ,_bbdfb :=_fagad .(*_ged .PdfObjectArray );if !_bbdfb {_eg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fagad );return nil ,_ged .ErrTypeError ;};if _cbdgd .Len ()!=6{_eg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cbdgd .Len ());return nil ,ErrInvalidAttribute ;};_efca .Coords =_cbdgd ;if _cdbed :=_fdgbd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_cdbed !=nil {_cdbed =_ged .TraceToDirectObject (_cdbed );_fdccd ,_efdaa :=_cdbed .(*_ged .PdfObjectArray );if !_efdaa {_eg .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cdbed );return nil ,_ged .ErrTypeError ;};_efca .Domain =_fdccd ;};_fagad =_fdgbd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fagad ==nil {_eg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_efca .Function =[]PdfFunction {};if _cbeag ,_faceb :=_fagad .(*_ged .PdfObjectArray );_faceb {for _ ,_abaa :=range _cbeag .Elements (){_fgbg ,_abfdb :=_gecdb (_abaa );if _abfdb !=nil {_eg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_abfdb );return nil ,_abfdb ;};_efca .Function =append (_efca .Function ,_fgbg );};}else {_agdf ,_feaec :=_gecdb (_fagad );if _feaec !=nil {_eg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_feaec );return nil ,_feaec ;};_efca .Function =append (_efca .Function ,_agdf );};if _aagge :=_fdgbd .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_aagge !=nil {_aagge =_ged .TraceToDirectObject (_aagge );_ggbcc ,_bebac :=_aagge .(*_ged .PdfObjectArray );if !_bebac {_eg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aagge );return nil ,_ged .ErrTypeError ;};if _ggbcc .Len ()!=2{_eg .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ggbcc .Len ());return nil ,ErrInvalidAttribute ;};_efca .Extend =_ggbcc ;};return &_efca ,nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_cfggb *PdfPage )AppendContentStream (contentStr string )error {_affga ,_aedfa :=_cfggb .GetContentStreams ();if _aedfa !=nil {return _aedfa ;};if len (_affga )==0{_affga =[]string {contentStr };return _cfggb .SetContentStreams (_affga ,_ged .NewFlateEncoder ());};var _egcfb _bd .Buffer ;_egcfb .WriteString (_affga [len (_affga )-1]);_egcfb .WriteString ("\u000a");_egcfb .WriteString (contentStr );_affga [len (_affga )-1]=_egcfb .String ();return _cfggb .SetContentStreams (_affga ,_ged .NewFlateEncoder ());};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_bgcbb *pdfFontSimple )SetEncoder (encoder _ffe .TextEncoder ){_bgcbb ._efda =encoder };

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_ged .PdfObjectName ;Colorants _ged .PdfObject ;Process _ged .PdfObject ;MixingHints _ged .PdfObject ;_eecb *_ged .PdfIndirectObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_cdbe *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffgg :=vals [0];if _ffgg < 0.0||_ffgg > 1.0{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cebg :=NewPdfColorCalGray (_ffgg );return _cebg ,nil ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);func _gecdb (_afdfg _ged .PdfObject )(PdfFunction ,error ){_afdfg =_ged .ResolveReference (_afdfg );if _cgfa ,_dgac :=_afdfg .(*_ged .PdfObjectStream );_dgac {_bdadg :=_cgfa .PdfObjectDictionary ;_gbece ,_cagef :=_bdadg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_ged .PdfObjectInteger );if !_cagef {_eg .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_gbece ==0{return _bebgff (_cgfa );}else if *_gbece ==4{return _dfafc (_cgfa );}else {return nil ,_fc .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _dafg ,_aagfb :=_afdfg .(*_ged .PdfIndirectObject );_aagfb {_ddfdb ,_afaf :=_dafg .PdfObject .(*_ged .PdfObjectDictionary );if !_afaf {_eg .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_fc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_aceee ,_afaf :=_ddfdb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_ged .PdfObjectInteger );if !_afaf {_eg .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_aceee ==2{return _bdggf (_dafg );}else if *_aceee ==3{return _adfcda (_dafg );}else {return nil ,_fc .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _egce ,_ecbfa :=_afdfg .(*_ged .PdfObjectDictionary );_ecbfa {_dbfde ,_efaa :=_egce .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_ged .PdfObjectInteger );if !_efaa {_eg .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_dbfde ==2{return _bdggf (_egce );}else if *_dbfde ==3{return _adfcda (_egce );}else {return nil ,_fc .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_eg .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_afdfg );return nil ,_fc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// AddExtGState adds a graphics state to the XObject resources.
func (_geabf *PdfPage )AddExtGState (name _ged .PdfObjectName ,egs *_ged .PdfObjectDictionary )error {if _geabf .Resources ==nil {_geabf .Resources =NewPdfPageResources ();};if _geabf .Resources .ExtGState ==nil {_geabf .Resources .ExtGState =_ged .MakeDict ();};_fbdcb ,_gcgad :=_ged .TraceToDirectObject (_geabf .Resources .ExtGState ).(*_ged .PdfObjectDictionary );if !_gcgad {_eg .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_ged .TraceToDirectObject (_geabf .Resources .ExtGState ));return _fc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fbdcb .Set (name ,egs );return nil ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_ceabd :=NewPdfOutline ();_ceabd ._babg =&_ceabd ;return _ceabd ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_ddc *PdfFieldChoice )ToPdfObject ()_ged .PdfObject {_ddc .PdfField .ToPdfObject ();_bdgce :=_ddc ._bagb ;_edbb :=_bdgce .PdfObject .(*_ged .PdfObjectDictionary );_edbb .Set ("\u0046\u0054",_ged .MakeName ("\u0043\u0068"));if _ddc .Opt !=nil {_edbb .Set ("\u004f\u0070\u0074",_ddc .Opt );};if _ddc .TI !=nil {_edbb .Set ("\u0054\u0049",_ddc .TI );};if _ddc .I !=nil {_edbb .Set ("\u0049",_ddc .I );};return _bdgce ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_efba *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _efba .AlternateSpace ==nil {return nil ,_fc .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _efba .AlternateSpace .ColorToRGB (color );};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_edfa *Outline )ToPdfOutline ()*PdfOutline {_bccb :=NewPdfOutline ();var _bcfb []*PdfOutlineItem ;var _gdbgg int64 ;var _ffbf *PdfOutlineItem ;for _ ,_cdebc :=range _edfa .Entries {_gbdf ,_gedad :=_cdebc .ToPdfOutlineItem ();_gbdf .Parent =&_bccb .PdfOutlineTreeNode ;if _ffbf !=nil {_ffbf .Next =&_gbdf .PdfOutlineTreeNode ;_gbdf .Prev =&_ffbf .PdfOutlineTreeNode ;};_bcfb =append (_bcfb ,_gbdf );_gdbgg +=_gedad ;_ffbf =_gbdf ;};_gdcbf :=int64 (len (_bcfb ));_gdbgg +=_gdcbf ;if _gdcbf > 0{_bccb .First =&_bcfb [0].PdfOutlineTreeNode ;_bccb .Last =&_bcfb [_gdcbf -1].PdfOutlineTreeNode ;_bccb .Count =&_gdbgg ;};return _bccb ;};

// String returns the name of the colorspace (DeviceN).
func (_fded *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// GetCerts returns the signature certificate chain.
func (_fbefe *PdfSignature )GetCerts ()([]*_fe .Certificate ,error ){var _dfafb []func ()([]*_fe .Certificate ,error );switch _bafcga ,_ :=_ged .GetNameVal (_fbefe .SubFilter );_bafcga {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_dfafb =append (_dfafb ,_fbefe .extractChainFromPKCS7 ,_fbefe .extractChainFromCert );case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_dfafb =append (_dfafb ,_fbefe .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_dfafb =append (_dfafb ,_fbefe .extractChainFromPKCS7 );default:return nil ,_d .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_bafcga );};for _ ,_cecbd :=range _dfafb {_daaed ,_beafc :=_cecbd ();if _beafc !=nil {return nil ,_beafc ;};if len (_daaed )> 0{return _daaed ,nil ;};};return nil ,ErrSignNoCertificates ;};

// GetOutlineTree returns the outline tree.
func (_aabaa *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _aabaa ._dgge };func (_ddab *LTV )getOCSPs (_ccage []*_fe .Certificate ,_baefb map[string ]*_fe .Certificate )([][]byte ,error ){_deccg :=make ([][]byte ,0,len (_ccage ));for _ ,_cebd :=range _ccage {for _ ,_fdgfa :=range _cebd .OCSPServer {if _ddab .CertClient .IsCA (_cebd ){continue ;};_fage ,_ceac :=_baefb [_cebd .Issuer .CommonName ];if !_ceac {_eg .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");continue ;};_ ,_egbb ,_feaaf :=_ddab .OCSPClient .MakeRequest (_fdgfa ,_cebd ,_fage );if _feaaf !=nil {_eg .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_feaaf );continue ;};_deccg =append (_deccg ,_egbb );};};return _deccg ,nil ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_gdecgc *PdfOutlineTreeNode )GetContext ()PdfModel {if _daec ,_daga :=_gdecgc ._babg .(*PdfOutline );_daga {return _daec ;};if _efgf ,_gaeg :=_gdecgc ._babg .(*PdfOutlineItem );_gaeg {return _efgf ;};_eg .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");return nil ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_baead *Outline )Insert (index uint ,item *OutlineItem ){_fege :=uint (len (_baead .Entries ));if index > _fege {index =_fege ;};_baead .Entries =append (_baead .Entries [:index ],append ([]*OutlineItem {item },_baead .Entries [index :]...)...);};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_ggdgf *PdfReader )GetEncryptionMethod ()string {_bdcfb :=_ggdgf ._ebea .GetCrypter ();return _bdcfb .String ();};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_accdb *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _accdb .fill (provider ,appGen );};

// ToPdfObject implements interface PdfModel.
func (_gde *PdfActionJavaScript )ToPdfObject ()_ged .PdfObject {_gde .PdfAction .ToPdfObject ();_bae :=_gde ._ebd ;_cb :=_bae .PdfObject .(*_ged .PdfObjectDictionary );_cb .SetIfNotNil ("\u0053",_ged .MakeName (string (ActionTypeJavaScript )));_cb .SetIfNotNil ("\u004a\u0053",_gde .JS );return _bae ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_gbdce :=&PdfColorspaceDeviceN {};return _gbdce ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_ebeg :=NewPdfAnnotation ();_ccc :=&PdfAnnotationLink {};_ccc .PdfAnnotation =_ebeg ;_ebeg .SetContext (_ccc );return _ccc ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_dgfad PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_ged .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_gbg []_ged .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_bdce []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};func (_dfdg *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _begeb []*PdfFieldSignature ;for _ ,_geaab :=range _dfdg .AllFields (){switch _ededg :=_geaab .GetContext ().(type ){case *PdfFieldSignature :_fagfa :=_ededg ;_begeb =append (_begeb ,_fagfa );};};return _begeb ;};func _eeedc (_fgddc _ged .PdfObject )(*PdfFontDescriptor ,error ){_cggcff :=&PdfFontDescriptor {};_fgddc =_ged .ResolveReference (_fgddc );if _gcdab ,_afeef :=_fgddc .(*_ged .PdfIndirectObject );_afeef {_cggcff ._egegc =_gcdab ;_fgddc =_gcdab .PdfObject ;};_eabd ,_cbef :=_ged .GetDict (_fgddc );if !_cbef {_eg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fgddc );return nil ,_ged .ErrTypeError ;};if _gggb :=_eabd .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_gggb !=nil {_cggcff .FontName =_gggb ;}else {_eg .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");};_cgfbd ,_ :=_ged .GetName (_cggcff .FontName );if _gffba :=_eabd .Get ("\u0054\u0079\u0070\u0065");_gffba !=nil {_bacce ,_feaf :=_gffba .(*_ged .PdfObjectName );if !_feaf ||string (*_bacce )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_eg .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_gffba ,_cgfbd ,_cggcff .FontName );};}else {_eg .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_cgfbd ,_cggcff .FontName );};_cggcff .FontFamily =_eabd .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_cggcff .FontStretch =_eabd .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_cggcff .FontWeight =_eabd .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");_cggcff .Flags =_eabd .Get ("\u0046\u006c\u0061g\u0073");_cggcff .FontBBox =_eabd .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_cggcff .ItalicAngle =_eabd .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_cggcff .Ascent =_eabd .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");_cggcff .Descent =_eabd .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_cggcff .Leading =_eabd .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_cggcff .CapHeight =_eabd .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_cggcff .XHeight =_eabd .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");_cggcff .StemV =_eabd .Get ("\u0053\u0074\u0065m\u0056");_cggcff .StemH =_eabd .Get ("\u0053\u0074\u0065m\u0048");_cggcff .AvgWidth =_eabd .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_cggcff .MaxWidth =_eabd .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");_cggcff .MissingWidth =_eabd .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_cggcff .FontFile =_eabd .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_cggcff .FontFile2 =_eabd .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");_cggcff .FontFile3 =_eabd .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_cggcff .CharSet =_eabd .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_cggcff .Style =_eabd .Get ("\u0053\u0074\u0079l\u0065");_cggcff .Lang =_eabd .Get ("\u004c\u0061\u006e\u0067");_cggcff .FD =_eabd .Get ("\u0046\u0044");_cggcff .CIDSet =_eabd .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _cggcff .Flags !=nil {if _affaa ,_cbee :=_ged .GetIntVal (_cggcff .Flags );_cbee {_cggcff ._cfaef =_affaa ;};};if _cggcff .MissingWidth !=nil {if _fade ,_feee :=_ged .GetNumberAsFloat (_cggcff .MissingWidth );_feee ==nil {_cggcff ._ecad =_fade ;};};if _cggcff .FontFile !=nil {_gccba ,_fgfc :=_fggeg (_cggcff .FontFile );if _fgfc !=nil {return _cggcff ,_fgfc ;};_eg .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_gccba );_cggcff .fontFile =_gccba ;};if _cggcff .FontFile2 !=nil {_afdfd ,_edbca :=_aea .NewFontFile2FromPdfObject (_cggcff .FontFile2 );if _edbca !=nil {return _cggcff ,_edbca ;};_eg .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_afdfd .String ());_cggcff ._beec =&_afdfd ;};return _cggcff ,nil ;};

// ToInteger convert to an integer format.
func (_fbfc *PdfColorCalGray )ToInteger (bits int )uint32 {_abfc :=_af .Pow (2,float64 (bits ))-1;return uint32 (_abfc *_fbfc .Val ());};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_abag *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_bfbc ,_cbed :=color .(*PdfColorPattern );if !_cbed {_eg .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );return nil ,ErrTypeCheck ;};if _bfbc .Color ==nil {return color ,nil ;};if _abag .UnderlyingCS ==nil {return nil ,_fc .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _abag .UnderlyingCS .ColorToRGB (_bfbc .Color );};var _dbfgd =_cf .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_gbabe :=&PdfColorspaceSpecialSeparation {};return _gbabe ;};func (_fdf *PdfReader )newPdfActionTransFromDict (_afc *_ged .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_afc .Get ("\u0054\u0072\u0061n\u0073")},nil ;};var _ pdfFont =(*pdfFontSimple )(nil );

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_dfgfc :=&PdfColorspaceLab {};_dfgfc .BlackPoint =[]float64 {0.0,0.0,0.0};_dfgfc .Range =[]float64 {-100,100,-100,100};return _dfgfc ;};

// String returns a string representation of the field.
func (_fabbg *PdfField )String ()string {if _beebf ,_ebbb :=_fabbg .ToPdfObject ().(*_ged .PdfIndirectObject );_ebbb {return _d .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_fabbg ._effe ,_beebf .PdfObject .String ());};return "";};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _ged .PdfObject ;ColorSpace _ged .PdfObject ;Pattern _ged .PdfObject ;Shading _ged .PdfObject ;XObject _ged .PdfObject ;Font _ged .PdfObject ;ProcSet _ged .PdfObject ;Properties _ged .PdfObject ;_bbga *_ged .PdfObjectDictionary ;_cedfg *PdfPageResourcesColorspaces ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_ecacc *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _ecacc .UnderlyingCS ==nil {return nil ,_fc .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");};return _ecacc .UnderlyingCS .ColorFromFloats (vals );};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_ged .PdfObjectArray ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_acgdf *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_acgdf .ToPdfOutline ().PdfOutlineTreeNode ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_ceag *PdfFont )BytesToCharcodes (data []byte )[]_ffe .CharCode {_eg .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );if _cbfff ,_gdacb :=_ceag ._gfdbg .(*pdfFontType0 );_gdacb &&_cbfff ._ffcaa !=nil {if _fbfeb ,_becf :=_cbfff .bytesToCharcodes (data );_becf {return _fbfeb ;};};_cefbd :=make ([]_ffe .CharCode ,0,len (data )+len (data )%2);if _ceag .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};};if len (data )%2!=0{_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );data =append (data ,0);};for _eadeb :=0;_eadeb < len (data );_eadeb +=2{_cefd :=uint16 (data [_eadeb ])<<8|uint16 (data [_eadeb +1]);_cefbd =append (_cefbd ,_ffe .CharCode (_cefd ));};}else {for _ ,_acgge :=range data {_cefbd =append (_cefbd ,_ffe .CharCode (_acgge ));};};return _cefbd ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_dbgf *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};func (_fgf *PdfReader )newPdfActionSetOCGStateFromDict (_cea *_ged .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_cea .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_cea .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_fcaba *PdfColorspaceLab )DecodeArray ()[]float64 {_gfcf :=[]float64 {0,100};if _fcaba .Range !=nil &&len (_fcaba .Range )==4{_gfcf =append (_gfcf ,_fcaba .Range ...);}else {_gfcf =append (_gfcf ,-100,100,-100,100);};return _gfcf ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_fdcb *_ged .PdfObjectDictionary ;_dbde *_ged .PdfIndirectObject ;};func (_gcf *PdfReader )newPdfAnnotationFromIndirectObject (_badc *_ged .PdfIndirectObject )(*PdfAnnotation ,error ){_fbcd ,_bbfd :=_badc .PdfObject .(*_ged .PdfObjectDictionary );if !_bbfd {return nil ,_d .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_gcf ._accc .GetModelFromPrimitive (_fbcd );model !=nil {_acaa ,_gdd :=model .(*PdfAnnotation );if !_gdd {return nil ,_d .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");};return _acaa ,nil ;};_dgf :=&PdfAnnotation {};_dgf ._efb =_badc ;_gcf ._accc .Register (_fbcd ,_dgf );if _dfeg :=_fbcd .Get ("\u0054\u0079\u0070\u0065");_dfeg !=nil {_agfd ,_baafg :=_dfeg .(*_ged .PdfObjectName );if !_baafg {_eg .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_dfeg );}else {if *_agfd !="\u0041\u006e\u006eo\u0074"{_eg .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_agfd );};};};if _dcbe :=_fbcd .Get ("\u0052\u0065\u0063\u0074");_dcbe !=nil {_dgf .Rect =_dcbe ;};if _ceb :=_fbcd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_ceb !=nil {_dgf .Contents =_ceb ;};if _beda :=_fbcd .Get ("\u0050");_beda !=nil {_dgf .P =_beda ;};if _fdda :=_fbcd .Get ("\u004e\u004d");_fdda !=nil {_dgf .NM =_fdda ;};if _dga :=_fbcd .Get ("\u004d");_dga !=nil {_dgf .M =_dga ;};if _fdfe :=_fbcd .Get ("\u0046");_fdfe !=nil {_dgf .F =_fdfe ;};if _ebga :=_fbcd .Get ("\u0041\u0050");_ebga !=nil {_dgf .AP =_ebga ;};if _cce :=_fbcd .Get ("\u0041\u0053");_cce !=nil {_dgf .AS =_cce ;};if _caca :=_fbcd .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_caca !=nil {_dgf .Border =_caca ;};if _fgfg :=_fbcd .Get ("\u0043");_fgfg !=nil {_dgf .C =_fgfg ;};if _egfb :=_fbcd .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_egfb !=nil {_dgf .StructParent =_egfb ;};if _bbc :=_fbcd .Get ("\u004f\u0043");_bbc !=nil {_dgf .OC =_bbc ;};_fgg :=_fbcd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _fgg ==nil {_eg .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");_dgf ._edg =nil ;return _dgf ,nil ;};_ccg ,_fge :=_fgg .(*_ged .PdfObjectName );if !_fge {_eg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fgg );return nil ,_d .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_fgg );};switch *_ccg {case "\u0054\u0065\u0078\u0074":_bgae ,_aga :=_gcf .newPdfAnnotationTextFromDict (_fbcd );if _aga !=nil {return nil ,_aga ;};_bgae .PdfAnnotation =_dgf ;_dgf ._edg =_bgae ;return _dgf ,nil ;case "\u004c\u0069\u006e\u006b":_bcag ,_cee :=_gcf .newPdfAnnotationLinkFromDict (_fbcd );if _cee !=nil {return nil ,_cee ;};_bcag .PdfAnnotation =_dgf ;_dgf ._edg =_bcag ;return _dgf ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_bgfgd ,_cfa :=_gcf .newPdfAnnotationFreeTextFromDict (_fbcd );if _cfa !=nil {return nil ,_cfa ;};_bgfgd .PdfAnnotation =_dgf ;_dgf ._edg =_bgfgd ;return _dgf ,nil ;case "\u004c\u0069\u006e\u0065":_dgd ,_acfcc :=_gcf .newPdfAnnotationLineFromDict (_fbcd );if _acfcc !=nil {return nil ,_acfcc ;};_dgd .PdfAnnotation =_dgf ;_dgf ._edg =_dgd ;_eg .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_dgf ,_dgf );_eg .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_dgd ,_dgd );_eg .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_dgd .PdfAnnotationMarkup ,_dgd .PdfAnnotationMarkup );return _dgf ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_adcb ,_bcgc :=_gcf .newPdfAnnotationSquareFromDict (_fbcd );if _bcgc !=nil {return nil ,_bcgc ;};_adcb .PdfAnnotation =_dgf ;_dgf ._edg =_adcb ;return _dgf ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_dcc ,_ffdd :=_gcf .newPdfAnnotationCircleFromDict (_fbcd );if _ffdd !=nil {return nil ,_ffdd ;};_dcc .PdfAnnotation =_dgf ;_dgf ._edg =_dcc ;return _dgf ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_cad ,_gff :=_gcf .newPdfAnnotationPolygonFromDict (_fbcd );if _gff !=nil {return nil ,_gff ;};_cad .PdfAnnotation =_dgf ;_dgf ._edg =_cad ;return _dgf ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_fbdf ,_gce :=_gcf .newPdfAnnotationPolyLineFromDict (_fbcd );if _gce !=nil {return nil ,_gce ;};_fbdf .PdfAnnotation =_dgf ;_dgf ._edg =_fbdf ;return _dgf ,nil ;case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_fdga ,_fgb :=_gcf .newPdfAnnotationHighlightFromDict (_fbcd );if _fgb !=nil {return nil ,_fgb ;};_fdga .PdfAnnotation =_dgf ;_dgf ._edg =_fdga ;return _dgf ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_aaea ,_abc :=_gcf .newPdfAnnotationUnderlineFromDict (_fbcd );if _abc !=nil {return nil ,_abc ;};_aaea .PdfAnnotation =_dgf ;_dgf ._edg =_aaea ;return _dgf ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_gfd ,_gab :=_gcf .newPdfAnnotationSquigglyFromDict (_fbcd );if _gab !=nil {return nil ,_gab ;};_gfd .PdfAnnotation =_dgf ;_dgf ._edg =_gfd ;return _dgf ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_bcda ,_bdc :=_gcf .newPdfAnnotationStrikeOut (_fbcd );if _bdc !=nil {return nil ,_bdc ;};_bcda .PdfAnnotation =_dgf ;_dgf ._edg =_bcda ;return _dgf ,nil ;case "\u0043\u0061\u0072e\u0074":_aec ,_egb :=_gcf .newPdfAnnotationCaretFromDict (_fbcd );if _egb !=nil {return nil ,_egb ;};_aec .PdfAnnotation =_dgf ;_dgf ._edg =_aec ;return _dgf ,nil ;case "\u0053\u0074\u0061m\u0070":_cgf ,_cbd :=_gcf .newPdfAnnotationStampFromDict (_fbcd );if _cbd !=nil {return nil ,_cbd ;};_cgf .PdfAnnotation =_dgf ;_dgf ._edg =_cgf ;return _dgf ,nil ;case "\u0049\u006e\u006b":_eeag ,_eeef :=_gcf .newPdfAnnotationInkFromDict (_fbcd );if _eeef !=nil {return nil ,_eeef ;};_eeag .PdfAnnotation =_dgf ;_dgf ._edg =_eeag ;return _dgf ,nil ;case "\u0050\u006f\u0070u\u0070":_dcec ,_geef :=_gcf .newPdfAnnotationPopupFromDict (_fbcd );if _geef !=nil {return nil ,_geef ;};_dcec .PdfAnnotation =_dgf ;_dgf ._edg =_dcec ;return _dgf ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_aabb ,_gece :=_gcf .newPdfAnnotationFileAttachmentFromDict (_fbcd );if _gece !=nil {return nil ,_gece ;};_aabb .PdfAnnotation =_dgf ;_dgf ._edg =_aabb ;return _dgf ,nil ;case "\u0053\u006f\u0075n\u0064":_bfd ,_beg :=_gcf .newPdfAnnotationSoundFromDict (_fbcd );if _beg !=nil {return nil ,_beg ;};_bfd .PdfAnnotation =_dgf ;_dgf ._edg =_bfd ;return _dgf ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_fgca ,_bcb :=_gcf .newPdfAnnotationRichMediaFromDict (_fbcd );if _bcb !=nil {return nil ,_bcb ;};_fgca .PdfAnnotation =_dgf ;_dgf ._edg =_fgca ;return _dgf ,nil ;case "\u004d\u006f\u0076i\u0065":_dcbg ,_dag :=_gcf .newPdfAnnotationMovieFromDict (_fbcd );if _dag !=nil {return nil ,_dag ;};_dcbg .PdfAnnotation =_dgf ;_dgf ._edg =_dcbg ;return _dgf ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_eaga ,_feaa :=_gcf .newPdfAnnotationScreenFromDict (_fbcd );if _feaa !=nil {return nil ,_feaa ;};_eaga .PdfAnnotation =_dgf ;_dgf ._edg =_eaga ;return _dgf ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_dagf ,_edba :=_gcf .newPdfAnnotationWidgetFromDict (_fbcd );if _edba !=nil {return nil ,_edba ;};_dagf .PdfAnnotation =_dgf ;_dgf ._edg =_dagf ;return _dgf ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_gdc ,_geb :=_gcf .newPdfAnnotationPrinterMarkFromDict (_fbcd );if _geb !=nil {return nil ,_geb ;};_gdc .PdfAnnotation =_dgf ;_dgf ._edg =_gdc ;return _dgf ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_ddf ,_bgdd :=_gcf .newPdfAnnotationTrapNetFromDict (_fbcd );if _bgdd !=nil {return nil ,_bgdd ;};_ddf .PdfAnnotation =_dgf ;_dgf ._edg =_ddf ;return _dgf ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_gcag ,_cgeg :=_gcf .newPdfAnnotationWatermarkFromDict (_fbcd );if _cgeg !=nil {return nil ,_cgeg ;};_gcag .PdfAnnotation =_dgf ;_dgf ._edg =_gcag ;return _dgf ,nil ;case "\u0033\u0044":_gae ,_cdga :=_gcf .newPdfAnnotation3DFromDict (_fbcd );if _cdga !=nil {return nil ,_cdga ;};_gae .PdfAnnotation =_dgf ;_dgf ._edg =_gae ;return _dgf ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_ddbd ,_aabd :=_gcf .newPdfAnnotationProjectionFromDict (_fbcd );if _aabd !=nil {return nil ,_aabd ;};_ddbd .PdfAnnotation =_dgf ;_dgf ._edg =_ddbd ;return _dgf ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_bdf ,_dcdc :=_gcf .newPdfAnnotationRedactFromDict (_fbcd );if _dcdc !=nil {return nil ,_dcdc ;};_bdf .PdfAnnotation =_dgf ;_dgf ._edg =_bdf ;return _dgf ,nil ;};_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_ccg );return nil ,nil ;};func (_eaad *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_cbfgb *pdfCIDFontType0 )ToPdfObject ()_ged .PdfObject {return _ged .MakeNull ()};func _eabge (_adfcfd ,_dcee string )string {if _bf .Contains (_adfcfd ,"\u002b"){_bbbf :=_bf .Split (_adfcfd ,"\u002b");if len (_bbbf )==2{_adfcfd =_bbbf [1];};};return _dcee +"\u002b"+_adfcfd ;};

// MergePageWith appends page content to source Pdf file page content.
func (_aefg *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_ebgaa :=pageNum -1;var _bfbf *PdfPage ;for _cfad ,_adcbf :=range _aefg ._feeg {if _cfad ==_ebgaa {_bfbf =_adcbf ;};};if _bfbf ==nil {return _d .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );};if _bfbf ._egef !=nil &&_bfbf ._egef .GetParser ()==_aefg ._add ._ebea {_bfbf =_bfbf .Duplicate ();_aefg ._feeg [_ebgaa ]=_bfbf ;};page =page .Duplicate ();_gbdbb (page );_bfdg :=_ace (_bfbf );_cage :=_ace (page );_bdfae :=make (map[_ged .PdfObjectName ]_ged .PdfObjectName );for _baae :=range _cage {if _ ,_fbfg :=_bfdg [_baae ];_fbfg {for _bddb :=1;true ;_bddb ++{_cdcea :=_ged .PdfObjectName (string (_baae )+_ea .Itoa (_bddb ));if _ ,_afab :=_bfdg [_cdcea ];!_afab {_bdfae [_baae ]=_cdcea ;break ;};};};};_cbfd ,_bffa :=page .GetContentStreams ();if _bffa !=nil {return _bffa ;};_gbaa ,_bffa :=_bfbf .GetContentStreams ();if _bffa !=nil {return _bffa ;};for _degd ,_geae :=range _cbfd {for _bbca ,_efa :=range _bdfae {_geae =_bf .Replace (_geae ,"\u002f"+string (_bbca ),"\u002f"+string (_efa ),-1);};_cbfd [_degd ]=_geae ;};_gbaa =append (_gbaa ,_cbfd ...);if _aacab :=_bfbf .SetContentStreams (_gbaa ,_ged .NewFlateEncoder ());_aacab !=nil {return _aacab ;};_bfbf ._fedfg =append (_bfbf ._fedfg ,page ._fedfg ...);if _bfbf .Resources ==nil {_bfbf .Resources =NewPdfPageResources ();};if page .Resources !=nil {_bfbf .Resources .Font =_aefg .mergeResources (_bfbf .Resources .Font ,page .Resources .Font ,_bdfae );_bfbf .Resources .XObject =_aefg .mergeResources (_bfbf .Resources .XObject ,page .Resources .XObject ,_bdfae );_bfbf .Resources .Properties =_aefg .mergeResources (_bfbf .Resources .Properties ,page .Resources .Properties ,_bdfae );if _bfbf .Resources .ProcSet ==nil {_bfbf .Resources .ProcSet =page .Resources .ProcSet ;};_bfbf .Resources .Shading =_aefg .mergeResources (_bfbf .Resources .Shading ,page .Resources .Shading ,_bdfae );_bfbf .Resources .ExtGState =_aefg .mergeResources (_bfbf .Resources .ExtGState ,page .Resources .ExtGState ,_bdfae );};_dgea ,_bffa :=_bfbf .GetMediaBox ();if _bffa !=nil {return _bffa ;};_cagb ,_bffa :=page .GetMediaBox ();if _bffa !=nil {return _bffa ;};var _dgfc bool ;if _dgea .Llx > _cagb .Llx {_dgea .Llx =_cagb .Llx ;_dgfc =true ;};if _dgea .Lly > _cagb .Lly {_dgea .Lly =_cagb .Lly ;_dgfc =true ;};if _dgea .Urx < _cagb .Urx {_dgea .Urx =_cagb .Urx ;_dgfc =true ;};if _dgea .Ury < _cagb .Ury {_dgea .Ury =_cagb .Ury ;_dgfc =true ;};if _dgfc {_bfbf .MediaBox =_dgea ;};return nil ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_abcec *_ged .PdfIndirectObject ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_gaee []_ged .PdfObject )([]_ged .PdfObject ,error );};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_dfe :=NewPdfAnnotation ();_fgc :=&PdfAnnotationStamp {};_fgc .PdfAnnotation =_dfe ;_fgc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dfe .SetContext (_fgc );return _fgc ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_cfag *PdfWriter )SetOptimizer (optimizer Optimizer ){_cfag ._daade =optimizer };

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_adc :=NewPdfAnnotation ();_fbd :=&PdfAnnotationCaret {};_fbd .PdfAnnotation =_adc ;_fbd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_adc .SetContext (_fbd );return _fbd ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ceab *PdfColorspaceSpecialSeparation )ToPdfObject ()_ged .PdfObject {_bfeb :=_ged .MakeArray (_ged .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_bfeb .Append (_ceab .ColorantName );_bfeb .Append (_ceab .AlternateSpace .ToPdfObject ());_bfeb .Append (_ceab .TintTransform .ToPdfObject ());if _ceab ._bcac !=nil {_ceab ._bcac .PdfObject =_bfeb ;return _ceab ._bcac ;};return _bfeb ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_abce *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _ged .GetNumberAsFloat (_abce .Descent );};func _ddaff (_eeege _ged .PdfObject ,_bdcab *fontCommon )(*_ec .CMap ,error ){_ecdc ,_bbedg :=_ged .GetStream (_eeege );if !_bbedg {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_eeege );return nil ,_ged .ErrTypeError ;};_eccac ,_decdb :=_ged .DecodeStream (_ecdc );if _decdb !=nil {return nil ,_decdb ;};_dbab ,_decdb :=_ec .LoadCmapFromData (_eccac ,!_bdcab .isCIDFont ());if _decdb !=nil {_eg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_ecdc .ObjectNumber ,_decdb );};return _dbab ,_decdb ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_cbcee :=&PdfOutline {_agbgd :_ged .MakeIndirectObject (_ged .MakeDict ())};_cbcee ._babg =_cbcee ;return _cbcee ;};

// ToPdfObject implements interface PdfModel.
func (_ef *PdfActionGoToR )ToPdfObject ()_ged .PdfObject {_ef .PdfAction .ToPdfObject ();_dec :=_ef ._ebd ;_eda :=_dec .PdfObject .(*_ged .PdfObjectDictionary );_eda .SetIfNotNil ("\u0053",_ged .MakeName (string (ActionTypeGoToR )));if _ef .F !=nil {_eda .Set ("\u0046",_ef .F .ToPdfObject ());};_eda .SetIfNotNil ("\u0044",_ef .D );_eda .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ef .NewWindow );return _dec ;};func (_ebffg *PdfReader )resolveReference (_aeeda *_ged .PdfObjectReference )(_ged .PdfObject ,bool ,error ){_aedc ,_dcage :=_ebffg ._ebea .ObjCache [int (_aeeda .ObjectNumber )];if !_dcage {_eg .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_aeeda );_bgdf ,_cfddff :=_ebffg ._ebea .LookupByReference (*_aeeda );if _cfddff !=nil {return nil ,false ,_cfddff ;};_ebffg ._ebea .ObjCache [int (_aeeda .ObjectNumber )]=_bgdf ;return _bgdf ,false ,nil ;};return _aedc ,true ,nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_fffad *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_fffad .NumInputs {_eg .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");return nil ,_fc .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _fffad ._fbde ==nil {_faab :=_fffad .processSamples ();if _faab !=nil {return nil ,_faab ;};};_afdaf :=_fffad .Encode ;if _afdaf ==nil {_afdaf =[]float64 {};for _dafb :=0;_dafb < len (_fffad .Size );_dafb ++{_afdaf =append (_afdaf ,0);_afdaf =append (_afdaf ,float64 (_fffad .Size [_dafb ]-1));};};_aabca :=_fffad .Decode ;if _aabca ==nil {_aabca =_fffad .Range ;};_dfde :=make ([]int ,len (x ));for _fegbb :=0;_fegbb < len (x );_fegbb ++{_edfeb :=x [_fegbb ];_cacb :=_af .Min (_af .Max (_edfeb ,_fffad .Domain [2*_fegbb ]),_fffad .Domain [2*_fegbb +1]);_caef :=_daf .LinearInterpolate (_cacb ,_fffad .Domain [2*_fegbb ],_fffad .Domain [2*_fegbb +1],_afdaf [2*_fegbb ],_afdaf [2*_fegbb +1]);_agga :=_af .Min (_af .Max (_caef ,0),float64 (_fffad .Size [_fegbb ]-1));_dgaff :=int (_af .Floor (_agga +0.5));if _dgaff < 0{_dgaff =0;}else if _dgaff > _fffad .Size [_fegbb ]{_dgaff =_fffad .Size [_fegbb ]-1;};_dfde [_fegbb ]=_dgaff ;};_dfbee :=_dfde [0];for _cddf :=1;_cddf < _fffad .NumInputs ;_cddf ++{_eebcdd :=_dfde [_cddf ];for _eecab :=0;_eecab < _cddf ;_eecab ++{_eebcdd *=_fffad .Size [_eecab ];};_dfbee +=_eebcdd ;};_dfbee *=_fffad .NumOutputs ;var _cgaa []float64 ;for _edbd :=0;_edbd < _fffad .NumOutputs ;_edbd ++{_bfdb :=_dfbee +_edbd ;if _bfdb >=len (_fffad ._fbde ){_eg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");continue ;};_ebed :=_fffad ._fbde [_bfdb ];_aecag :=_daf .LinearInterpolate (float64 (_ebed ),0,_af .Pow (2,float64 (_fffad .BitsPerSample )),_aabca [2*_edbd ],_aabca [2*_edbd +1]);_fgaa :=_af .Min (_af .Max (_aecag ,_fffad .Range [2*_edbd ]),_fffad .Range [2*_edbd +1]);_cgaa =append (_cgaa ,_fgaa );};return _cgaa ,nil ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_edfaf *PdfPageResources )GetXObjectImageByName (keyName _ged .PdfObjectName )(*XObjectImage ,error ){_ecdg ,_ceffe :=_edfaf .GetXObjectByName (keyName );if _ecdg ==nil {return nil ,nil ;};if _ceffe !=XObjectTypeImage {return nil ,_fc .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");};_abafe ,_agcga :=NewXObjectImageFromStream (_ecdg );if _agcga !=nil {return nil ,_agcga ;};return _abafe ,nil ;};var (ErrRequiredAttributeMissing =_fc .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_fc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_fc .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_ggged =_fc .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_fc .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_fc .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_ac .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_ged .ErrNotSupported );ErrType1CFontNotSupported =_ac .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_ged .ErrNotSupported );ErrType3FontNotSupported =_ac .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_ged .ErrNotSupported );ErrTTCmapNotSupported =_ac .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_ged .ErrNotSupported );ErrSignNotEnoughSpace =_ac .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");ErrSignNoCertificates =_ac .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););func (_cbb *PdfReader )newPdfActionSoundFromDict (_acbf *_ged .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_acbf .Get ("\u0053\u006f\u0075n\u0064"),Volume :_acbf .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_acbf .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_acbf .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_acbf .Get ("\u004d\u0069\u0078")},nil ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_dfab *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_faed *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_fadfb *_ged .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_ged .PdfObjectName ;Filter *_ged .PdfObjectName ;SubFilter *_ged .PdfObjectName ;Contents *_ged .PdfObjectString ;Cert _ged .PdfObject ;ByteRange *_ged .PdfObjectArray ;Reference *_ged .PdfObjectArray ;Changes *_ged .PdfObjectArray ;Name *_ged .PdfObjectString ;M *_ged .PdfObjectString ;Location *_ged .PdfObjectString ;Reason *_ged .PdfObjectString ;ContactInfo *_ged .PdfObjectString ;R *_ged .PdfObjectInteger ;V *_ged .PdfObjectInteger ;PropBuild *_ged .PdfObjectDictionary ;PropAuthTime *_ged .PdfObjectInteger ;PropAuthType *_ged .PdfObjectName ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_eef :=NewPdfAnnotation ();_bce :=&PdfAnnotationSquare {};_bce .PdfAnnotation =_eef ;_bce .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eef .SetContext (_bce );return _bce ;};var _aggfd =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};

// C returns the value of the cyan component of the color.
func (_eedf *PdfColorDeviceCMYK )C ()float64 {return _eedf [0]};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_fdeg *Image )SetSamples (samples []uint32 ){if _fdeg .BitsPerComponent < 8{samples =_fdeg .samplesAddPadding (samples );};_fddaa :=_fec .ResampleUint32 (samples ,int (_fdeg .BitsPerComponent ),8);_dcaf :=make ([]byte ,len (_fddaa ));for _bcfd ,_bdcfe :=range _fddaa {_dcaf [_bcfd ]=byte (_bdcfe );};_fdeg .Data =_dcaf ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_dgef :=PdfColorDeviceGray (grayVal );return &_dgef ;};func _fgce (_adec []byte )bool {if len (_adec )< 4{return true ;};for _adacb :=range _adec [:4]{_fgag :=rune (_adacb );if !_dg .Is (_dg .ASCII_Hex_Digit ,_fgag )&&!_dg .IsSpace (_fgag ){return true ;};};return false ;};

// ToInteger convert to an integer format.
func (_edfd *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_bbac :=_af .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_bbac *_edfd .A ()),uint32 (_bbac *_edfd .B ()),uint32 (_bbac *_edfd .C ())};};func _gbgf (_agad _ged .PdfObject )(*PdfColorspaceCalGray ,error ){_cgda :=NewPdfColorspaceCalGray ();if _gebc ,_cdcdg :=_agad .(*_ged .PdfIndirectObject );_cdcdg {_cgda ._cfbd =_gebc ;};_agad =_ged .TraceToDirectObject (_agad );_fdaa ,_cegd :=_agad .(*_ged .PdfObjectArray );if !_cegd {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fdaa .Len ()!=2{return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_agad =_ged .TraceToDirectObject (_fdaa .Get (0));_bedce ,_cegd :=_agad .(*_ged .PdfObjectName );if !_cegd {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_bedce !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_d .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_agad =_ged .TraceToDirectObject (_fdaa .Get (1));_abbad ,_cegd :=_agad .(*_ged .PdfObjectDictionary );if !_cegd {return nil ,_d .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};_agad =_abbad .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_agad =_ged .TraceToDirectObject (_agad );_feef ,_cegd :=_agad .(*_ged .PdfObjectArray );if !_cegd {return nil ,_d .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");};if _feef .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_babec ,_adeeg :=_feef .GetAsFloat64Slice ();if _adeeg !=nil {return nil ,_adeeg ;};_cgda .WhitePoint =_babec ;_agad =_abbad .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _agad !=nil {_agad =_ged .TraceToDirectObject (_agad );_ead ,_badca :=_agad .(*_ged .PdfObjectArray );if !_badca {return nil ,_d .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _ead .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_edbc ,_cdeg :=_ead .GetAsFloat64Slice ();if _cdeg !=nil {return nil ,_cdeg ;};_cgda .BlackPoint =_edbc ;};_agad =_abbad .Get ("\u0047\u0061\u006dm\u0061");if _agad !=nil {_agad =_ged .TraceToDirectObject (_agad );_adeef ,_ggaga :=_ged .GetNumberAsFloat (_agad );if _ggaga !=nil {return nil ,_d .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_cgda .Gamma =_adeef ;};return _cgda ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_fcfbc *PdfColorspaceLab )ColorFromPdfObjects (objects []_ged .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbgb ,_acbee :=_ged .GetNumbersAsFloat (objects );if _acbee !=nil {return nil ,_acbee ;};return _fcfbc .ColorFromFloats (_dbgb );};

// ToPdfObject implements interface PdfModel.
func (_ccef *PdfSignature )ToPdfObject ()_ged .PdfObject {_dcfge :=_ccef ._fadfb ;var _dbade *_ged .PdfObjectDictionary ;if _dgegc ,_efde :=_dcfge .PdfObject .(*pdfSignDictionary );_efde {_dbade =_dgegc .PdfObjectDictionary ;}else {_dbade =_dcfge .PdfObject .(*_ged .PdfObjectDictionary );};_dbade .SetIfNotNil ("\u0054\u0079\u0070\u0065",_ccef .Type );_dbade .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_ccef .Filter );_dbade .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_ccef .SubFilter );_dbade .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_ccef .ByteRange );_dbade .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_ccef .Contents );_dbade .SetIfNotNil ("\u0043\u0065\u0072\u0074",_ccef .Cert );_dbade .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ccef .Name );_dbade .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_ccef .Reason );_dbade .SetIfNotNil ("\u004d",_ccef .M );_dbade .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_ccef .Reference );_dbade .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_ccef .Changes );_dbade .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_ccef .ContactInfo );return _dcfge ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_dbfa *PdfFieldButton )IsCheckbox ()bool {return _dbfa .GetType ()==ButtonTypeCheckbox };func (_ebc *PdfReader )newPdfAnnotation3DFromDict (_ede *_ged .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_ceadb :=PdfAnnotation3D {};_ceadb .T3DD =_ede .Get ("\u0033\u0044\u0044");_ceadb .T3DV =_ede .Get ("\u0033\u0044\u0056");_ceadb .T3DA =_ede .Get ("\u0033\u0044\u0041");_ceadb .T3DI =_ede .Get ("\u0033\u0044\u0049");_ceadb .T3DB =_ede .Get ("\u0033\u0044\u0042");return &_ceadb ,nil ;};func _gffa (_dagag _ged .PdfObject )(*PdfPattern ,error ){_gcdfgd :=&PdfPattern {};var _faagg *_ged .PdfObjectDictionary ;if _fgacd ,_fecd :=_ged .GetIndirect (_dagag );_fecd {_gcdfgd ._abgg =_fgacd ;_dfae ,_bgccc :=_fgacd .PdfObject .(*_ged .PdfObjectDictionary );if !_bgccc {_eg .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_fgacd .PdfObject );return nil ,_ged .ErrTypeError ;};_faagg =_dfae ;}else if _gcgg ,_bfbed :=_ged .GetStream (_dagag );_bfbed {_gcdfgd ._abgg =_gcgg ;_faagg =_gcgg .PdfObjectDictionary ;}else {_eg .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_dagag );return nil ,_ged .ErrTypeError ;};_eadg :=_faagg .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _eadg ==nil {_eg .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");return nil ,ErrRequiredAttributeMissing ;};_ddabg ,_cdffa :=_eadg .(*_ged .PdfObjectInteger );if !_cdffa {_eg .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_eadg );return nil ,_ged .ErrTypeError ;};if *_ddabg !=1&&*_ddabg !=2{_eg .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_ddabg );return nil ,_ged .ErrRangeError ;};_gcdfgd .PatternType =int64 (*_ddabg );switch *_ddabg {case 1:_bcff ,_cdbc :=_dcebe (_faagg );if _cdbc !=nil {return nil ,_cdbc ;};_bcff .PdfPattern =_gcdfgd ;_gcdfgd ._bcbc =_bcff ;return _gcdfgd ,nil ;case 2:_geeb ,_fgda :=_eagbe (_faagg );if _fgda !=nil {return nil ,_fgda ;};_geeb .PdfPattern =_gcdfgd ;_gcdfgd ._bcbc =_geeb ;return _gcdfgd ,nil ;};return nil ,_fc .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_efgff *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _efgff ._bcbc .(*PdfShadingPattern );};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _ged .PdfObject ;};func (_fgee *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_aefgc :=PdfDate {};_gfeg :=_dbfgd .FindAllStringSubmatch (dateStr ,1);if len (_gfeg )< 1{return _aefgc ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );};if len (_gfeg [0])!=10{return _aefgc ,_fc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");};_aefgc ._fegf ,_ =_ea .ParseInt (_gfeg [0][1],10,32);_aefgc ._ggdde ,_ =_ea .ParseInt (_gfeg [0][2],10,32);_aefgc ._afbdgf ,_ =_ea .ParseInt (_gfeg [0][3],10,32);_aefgc ._gaadc ,_ =_ea .ParseInt (_gfeg [0][4],10,32);_aefgc ._geeba ,_ =_ea .ParseInt (_gfeg [0][5],10,32);_aefgc ._eeddb ,_ =_ea .ParseInt (_gfeg [0][6],10,32);if len (_gfeg [0][7])> 0{_aefgc ._fgacaa =_gfeg [0][7][0];}else {_aefgc ._fgacaa ='+';};if len (_gfeg [0][8])> 0{_aefgc ._eeegec ,_ =_ea .ParseInt (_gfeg [0][8],10,32);}else {_aefgc ._eeegec =0;};if len (_gfeg [0][9])> 0{_aefgc ._acea ,_ =_ea .ParseInt (_gfeg [0][9],10,32);}else {_aefgc ._acea =0;};return _aefgc ,nil ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_cgff *PdfFont )ToUnicode ()string {if _cgff .baseFields ()._ggdea ==nil {return "";};return _cgff .baseFields ()._ggdea .Name ();};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_gcfff *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _gcfff .UnderlyingCS .GetNumComponents ();};

// Mask returns the uin32 bitmask for the specific flag.
func (_bddg FieldFlag )Mask ()uint32 {return uint32 (_bddg )};func (_deefg *PdfReader )newPdfAnnotationFileAttachmentFromDict (_cfae *_ged .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_ebgad :=PdfAnnotationFileAttachment {};_facg ,_gbbgg :=_deefg .newPdfAnnotationMarkupFromDict (_cfae );if _gbbgg !=nil {return nil ,_gbbgg ;};_ebgad .PdfAnnotationMarkup =_facg ;_ebgad .FS =_cfae .Get ("\u0046\u0053");_ebgad .Name =_cfae .Get ("\u004e\u0061\u006d\u0065");return &_ebgad ,nil ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_dcdcb *PdfOutlineTreeNode )GetContainingPdfObject ()_ged .PdfObject {return _dcdcb .GetContext ().GetContainingPdfObject ();};func (_eefe *PdfAppender )mergeResources (_ecf ,_adda _ged .PdfObject ,_caae map[_ged .PdfObjectName ]_ged .PdfObjectName )_ged .PdfObject {if _adda ==nil &&_ecf ==nil {return nil ;};if _adda ==nil {return _ecf ;};_cbdd ,_ecbc :=_ged .GetDict (_adda );if !_ecbc {return _ecf ;};if _ecf ==nil {_bacc :=_ged .MakeDict ();_bacc .Merge (_cbdd );return _adda ;};_ddfeb ,_ecbc :=_ged .GetDict (_ecf );if !_ecbc {_eg .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");_ddfeb =_ged .MakeDict ();};for _ ,_dae :=range _cbdd .Keys (){if _addc ,_ebfc :=_caae [_dae ];_ebfc {_ddfeb .Set (_addc ,_cbdd .Get (_dae ));}else {_ddfeb .Set (_dae ,_cbdd .Get (_dae ));};};return _ddfeb ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_fffcd byte )byte ;

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_edde *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_ged .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_fc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");};_aeae :=&PdfColorPattern {};_gcgb ,_cgag :=objects [len (objects )-1].(*_ged .PdfObjectName );if !_cgag {_eg .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);return nil ,ErrTypeCheck ;};_aeae .PatternName =*_gcgb ;if len (objects )> 1{_aceg :=objects [0:len (objects )-1];if _edde .UnderlyingCS ==nil {_eg .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");return nil ,_fc .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_ddag ,_dfeb :=_edde .UnderlyingCS .ColorFromPdfObjects (_aceg );if _dfeb !=nil {_eg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_dfeb );return nil ,_dfeb ;};_aeae .Color =_ddag ;};return _aeae ,nil ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;func _eabf (_fcca _ged .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_ggdd :=NewPdfColorspaceSpecialSeparation ();if _decbd ,_edea :=_fcca .(*_ged .PdfIndirectObject );_edea {_ggdd ._bcac =_decbd ;};_fcca =_ged .TraceToDirectObject (_fcca );_ecec ,_gcdg :=_fcca .(*_ged .PdfObjectArray );if !_gcdg {return nil ,_d .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _ecec .Len ()!=4{return nil ,_d .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_fcca =_ecec .Get (0);_degbe ,_gcdg :=_fcca .(*_ged .PdfObjectName );if !_gcdg {return nil ,_d .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_degbe !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_d .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};_fcca =_ecec .Get (1);_degbe ,_gcdg =_fcca .(*_ged .PdfObjectName );if !_gcdg {return nil ,_d .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");};_ggdd .ColorantName =_degbe ;_fcca =_ecec .Get (2);_gcbc ,_ebbd :=NewPdfColorspaceFromPdfObject (_fcca );if _ebbd !=nil {return nil ,_ebbd ;};_ggdd .AlternateSpace =_gcbc ;_gcbaa ,_ebbd :=_gecdb (_ecec .Get (3));if _ebbd !=nil {return nil ,_ebbd ;};_ggdd .TintTransform =_gcbaa ;return _ggdd ,nil ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_dgeg *PdfPageResources )GetXObjectFormByName (keyName _ged .PdfObjectName )(*XObjectForm ,error ){_dacfd ,_fdfb :=_dgeg .GetXObjectByName (keyName );if _dacfd ==nil {return nil ,nil ;};if _fdfb !=XObjectTypeForm {return nil ,_fc .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");};_ffagab ,_acff :=NewXObjectFormFromStream (_dacfd );if _acff !=nil {return nil ,_acff ;};return _ffagab ,nil ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _ged .PdfObject ;_aabff []byte ;_dgcb *_ged .PdfIndirectObject ;};

// Val returns the color value.
func (_bcgdf *PdfColorDeviceGray )Val ()float64 {return float64 (*_bcgdf )};func _ceffd (_dccee *_ged .PdfObjectDictionary ,_cfdfd *fontCommon ,_fffd _ffe .TextEncoder )(*pdfFontSimple ,error ){_edbec :=_agbf (_cfdfd );_edbec ._fbgad =_fffd ;if _fffd ==nil {_aada :=_dccee .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _aada ==nil {_aada =_ged .MakeInteger (0);};_edbec .FirstChar =_aada ;_efbc ,_ddeb :=_ged .GetIntVal (_aada );if !_ddeb {_eg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_aada );return nil ,_ged .ErrTypeError ;};_fggdb :=_ffe .CharCode (_efbc );_aada =_dccee .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _aada ==nil {_aada =_ged .MakeInteger (255);};_edbec .LastChar =_aada ;_efbc ,_ddeb =_ged .GetIntVal (_aada );if !_ddeb {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_aada );return nil ,_ged .ErrTypeError ;};_cgddf :=_ffe .CharCode (_efbc );_edbec ._aagc =make (map[_ffe .CharCode ]float64 );_aada =_dccee .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _aada !=nil {_edbec .Widths =_aada ;_beeg ,_fbcf :=_ged .GetArray (_aada );if !_fbcf {_eg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_aada );return nil ,_ged .ErrTypeError ;};_gfdg ,_bgacc :=_beeg .ToFloat64Array ();if _bgacc !=nil {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");return nil ,_bgacc ;};if len (_gfdg )!=int (_cgddf -_fggdb +1){_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_cgddf -_fggdb +1,len (_gfdg ));return nil ,_ged .ErrRangeError ;};for _bfcd ,_dfafa :=range _gfdg {_edbec ._aagc [_fggdb +_ffe .CharCode (_bfcd )]=_dfafa ;};};};_edbec .Encoding =_ged .TraceToDirectObject (_dccee .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _edbec ,nil ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_cdef :=NewPdfAnnotation ();_fddc :=&PdfAnnotationPopup {};_fddc .PdfAnnotation =_cdef ;_cdef .SetContext (_fddc );return _fddc ;};var _fecec =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};func _fegg (_gcfc _ged .PdfObject )(*PdfColorspaceLab ,error ){_ebag :=NewPdfColorspaceLab ();if _cacc ,_afdf :=_gcfc .(*_ged .PdfIndirectObject );_afdf {_ebag ._dcca =_cacc ;};_gcfc =_ged .TraceToDirectObject (_gcfc );_dgbg ,_caccd :=_gcfc .(*_ged .PdfObjectArray );if !_caccd {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dgbg .Len ()!=2{return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_gcfc =_ged .TraceToDirectObject (_dgbg .Get (0));_fcfb ,_caccd :=_gcfc .(*_ged .PdfObjectName );if !_caccd {return nil ,_d .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_fcfb !="\u004c\u0061\u0062"{return nil ,_d .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_gcfc =_ged .TraceToDirectObject (_dgbg .Get (1));_edbg ,_caccd :=_gcfc .(*_ged .PdfObjectDictionary );if !_caccd {return nil ,_d .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_gcfc =_edbg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_gcfc =_ged .TraceToDirectObject (_gcfc );_cedb ,_caccd :=_gcfc .(*_ged .PdfObjectArray );if !_caccd {return nil ,_d .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _cedb .Len ()!=3{return nil ,_d .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_bbege ,_dcfff :=_cedb .GetAsFloat64Slice ();if _dcfff !=nil {return nil ,_dcfff ;};_ebag .WhitePoint =_bbege ;_gcfc =_edbg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gcfc !=nil {_gcfc =_ged .TraceToDirectObject (_gcfc );_cdac ,_gaga :=_gcfc .(*_ged .PdfObjectArray );if !_gaga {return nil ,_d .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _cdac .Len ()!=3{return nil ,_d .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_gbaag ,_dfagf :=_cdac .GetAsFloat64Slice ();if _dfagf !=nil {return nil ,_dfagf ;};_ebag .BlackPoint =_gbaag ;};_gcfc =_edbg .Get ("\u0052\u0061\u006eg\u0065");if _gcfc !=nil {_gcfc =_ged .TraceToDirectObject (_gcfc );_aggd ,_aecb :=_gcfc .(*_ged .PdfObjectArray );if !_aecb {_eg .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_d .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _aggd .Len ()!=4{_eg .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");return nil ,_d .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_bafg ,_cdba :=_aggd .GetAsFloat64Slice ();if _cdba !=nil {return nil ,_cdba ;};_ebag .Range =_bafg ;};return _ebag ,nil ;};

// GetNumComponents returns the number of color components.
func (_eecg *PdfColorspaceICCBased )GetNumComponents ()int {return _eecg .N };func (_dffa *LTV )buildCertChain (_cdbac ,_ebddgg []*_fe .Certificate )([]*_fe .Certificate ,map[string ]*_fe .Certificate ,error ){_bgfe :=map[string ]*_fe .Certificate {};for _ ,_fedfb :=range _cdbac {_bgfe [_fedfb .Subject .CommonName ]=_fedfb ;};_bgfbe :=_cdbac ;for _ ,_badf :=range _ebddgg {_cdddc :=_badf .Subject .CommonName ;if _ ,_ecfc :=_bgfe [_cdddc ];_ecfc {continue ;};_bgfe [_cdddc ]=_badf ;_bgfbe =append (_bgfbe ,_badf );};if len (_bgfbe )==0{return nil ,nil ,ErrSignNoCertificates ;};var _cfde error ;for _aaabf :=_bgfbe [0];_aaabf !=nil &&!_dffa .CertClient .IsCA (_aaabf );{_fbdfe ,_acfg :=_bgfe [_aaabf .Issuer .CommonName ];if !_acfg {if _fbdfe ,_cfde =_dffa .CertClient .GetIssuer (_aaabf );_cfde !=nil {_eg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_cfde );break ;};_bgfe [_aaabf .Issuer .CommonName ]=_fbdfe ;_bgfbe =append (_bgfbe ,_fbdfe );};_aaabf =_fbdfe ;};return _bgfbe ,_bgfe ,nil ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_ccgbd :=&PdfOutlineItem {_befdc :_ged .MakeIndirectObject (_ged .MakeDict ())};_ccgbd ._babg =_ccgbd ;return _ccgbd ;};func (_effbd *PdfReader )newPdfAnnotationSoundFromDict (_eced *_ged .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_bgfb :=PdfAnnotationSound {};_cggf ,_ada :=_effbd .newPdfAnnotationMarkupFromDict (_eced );if _ada !=nil {return nil ,_ada ;};_bgfb .PdfAnnotationMarkup =_cggf ;_bgfb .Name =_eced .Get ("\u004e\u0061\u006d\u0065");_bgfb .Sound =_eced .Get ("\u0053\u006f\u0075n\u0064");return &_bgfb ,nil ;};func (_afg *DSS )addOCSPs (_eacf [][]byte )([]*_ged .PdfObjectStream ,error ){return _afg .add (&_afg .OCSPs ,_afg ._fcfcd ,_eacf );};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_dgdc FieldFlag )Has (fl FieldFlag )bool {return (_dgdc .Mask ()&fl .Mask ())> 0};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_gccga *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _efcgd []*PdfField ;_eecggb :=map[*_ged .PdfIndirectObject ]struct{}{};for _ ,_cedff :=range _gccga .PageList {_cdfcb ,_efabeb :=_cedff .GetAnnotations ();if _efabeb !=nil {return _efabeb ;};for _ ,_gdca :=range _cdfcb {var _adbdb *PdfField ;switch _gegcc :=_gdca .GetContext ().(type ){case *PdfAnnotationWidget :if _gegcc ._fgd !=nil {_adbdb =_gegcc ._fgd ;break ;};if _bdfff ,_agde :=_ged .GetIndirect (_gegcc .Parent );_agde {_adbdb ,_efabeb =_gccga .newPdfFieldFromIndirectObject (_bdfff ,nil );if _efabeb ==nil {break ;};_eg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_bdfff ,_efabeb );};if _gegcc ._efb !=nil {_adbdb ,_efabeb =_gccga .newPdfFieldFromIndirectObject (_gegcc ._efb ,nil );if _efabeb ==nil {break ;};_eg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_gegcc ._efb ,_efabeb );};};if _adbdb ==nil {continue ;};if _ ,_bbab :=_eecggb [_adbdb ._bagb ];_bbab {continue ;};_eecggb [_adbdb ._bagb ]=struct{}{};_efcgd =append (_efcgd ,_adbdb );};};if len (_efcgd )==0{return nil ;};if _gccga .AcroForm ==nil {_gccga .AcroForm =NewPdfAcroForm ();};_gccga .AcroForm .Fields =&_efcgd ;return nil ;};func _feag (_afac *_ged .PdfObjectDictionary )(*PdfFieldText ,error ){_gggec :=&PdfFieldText {};_gggec .DA ,_ =_ged .GetString (_afac .Get ("\u0044\u0041"));_gggec .Q ,_ =_ged .GetInt (_afac .Get ("\u0051"));_gggec .DS ,_ =_ged .GetString (_afac .Get ("\u0044\u0053"));_gggec .RV =_afac .Get ("\u0052\u0056");_gggec .MaxLen ,_ =_ged .GetInt (_afac .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _gggec ,nil ;};type pdfSignDictionary struct{*_ged .PdfObjectDictionary ;_ccabd *SignatureHandler ;_affb *PdfSignature ;_ccaae int64 ;_cfaba int ;_defee int ;_efefb int ;_edgad int ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _c .Time ){_gdabg .Lock ();defer _gdabg .Unlock ();_ggedf =creationDate ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_fbgb *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_ged .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbcaa ,_bfcf :=_ged .GetNumbersAsFloat (objects );if _bfcf !=nil {return nil ,_bfcf ;};return _fbgb .ColorFromFloats (_fbcaa );};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_eaef *LTV )Enable (sig *PdfSignature ,extraCerts []*_fe .Certificate )error {if _gdeba :=_eaef .validateSig (sig );_gdeba !=nil {return _gdeba ;};_bccgg ,_effbb :=_eaef .generateVRIKey (sig );if _effbb !=nil {return _effbb ;};if _ ,_gabd :=_eaef ._cdbfg .VRI [_bccgg ];_gabd &&_eaef .SkipExisting {return nil ;};_ggefa ,_effbb :=sig .GetCerts ();if _effbb !=nil {return _effbb ;};return _eaef .enable (_ggefa ,extraCerts ,_bccgg );};

// ToPdfObject implements interface PdfModel.
func (_fcg *PdfActionGoToE )ToPdfObject ()_ged .PdfObject {_fcg .PdfAction .ToPdfObject ();_dca :=_fcg ._ebd ;_adeg :=_dca .PdfObject .(*_ged .PdfObjectDictionary );_adeg .SetIfNotNil ("\u0053",_ged .MakeName (string (ActionTypeGoToE )));if _fcg .F !=nil {_adeg .Set ("\u0046",_fcg .F .ToPdfObject ());};_adeg .SetIfNotNil ("\u0044",_fcg .D );_adeg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_fcg .NewWindow );_adeg .SetIfNotNil ("\u0054",_fcg .T );return _dca ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_cagbf *PdfReader )IsEncrypted ()(bool ,error ){return _cagbf ._ebea .IsEncrypted ()};

// ToPdfObject implements interface PdfModel.
func (_aaba *PdfAnnotationStrikeOut )ToPdfObject ()_ged .PdfObject {_aaba .PdfAnnotation .ToPdfObject ();_cebbc :=_aaba ._efb ;_cecd :=_cebbc .PdfObject .(*_ged .PdfObjectDictionary );_aaba .PdfAnnotationMarkup .appendToPdfDictionary (_cecd );_cecd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));_cecd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_aaba .QuadPoints );return _cebbc ;};func _dacd (_beecc *_ged .PdfIndirectObject )(*PdfOutline ,error ){_baecd ,_cfdg :=_beecc .PdfObject .(*_ged .PdfObjectDictionary );if !_cfdg {return nil ,_d .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_feddag :=NewPdfOutline ();if _cecdf :=_baecd .Get ("\u0054\u0079\u0070\u0065");_cecdf !=nil {_ffge ,_bfdbc :=_cecdf .(*_ged .PdfObjectName );if _bfdbc {if *_ffge !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_eg .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_ffge );};};};if _adff :=_baecd .Get ("\u0043\u006f\u0075n\u0074");_adff !=nil {_ecaa ,_fdbae :=_ged .GetNumberAsInt64 (_adff );if _fdbae !=nil {return nil ,_fdbae ;};_feddag .Count =&_ecaa ;};return _feddag ,nil ;};func (_ccfed *DSS )generateHashMaps ()error {_efead ,_cdgg :=_ccfed .generateHashMap (_ccfed .Certs );if _cdgg !=nil {return _cdgg ;};_bebgf ,_cdgg :=_ccfed .generateHashMap (_ccfed .OCSPs );if _cdgg !=nil {return _cdgg ;};_bcdf ,_cdgg :=_ccfed .generateHashMap (_ccfed .CRLs );if _cdgg !=nil {return _cdgg ;};_ccfed ._gfee =_efead ;_ccfed ._fcfcd =_bebgf ;_ccfed ._dfeda =_bcdf ;return nil ;};func (_abfcc *PdfReader )loadStructure ()error {if _abfcc ._ebea .GetCrypter ()!=nil &&!_abfcc ._ebea .IsAuthenticated (){return _d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_eedaf :=_abfcc ._ebea .GetTrailer ();if _eedaf ==nil {return _d .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_adbd ,_dbca :=_eedaf .Get ("\u0052\u006f\u006f\u0074").(*_ged .PdfObjectReference );if !_dbca {return _d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_eedaf );};_ecadf ,_egece :=_abfcc ._ebea .LookupByReference (*_adbd );if _egece !=nil {_eg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_egece );return _egece ;};_dabd ,_dbca :=_ecadf .(*_ged .PdfIndirectObject );if !_dbca {_eg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_ecadf ,*_eedaf );return _fc .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_bgcgd ,_dbca :=(*_dabd ).PdfObject .(*_ged .PdfObjectDictionary );if !_dbca {_eg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_dabd .PdfObject );return _fc .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_eg .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_bgcgd );_gegad ,_dbca :=_bgcgd .Get ("\u0050\u0061\u0067e\u0073").(*_ged .PdfObjectReference );if !_dbca {return _fc .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_addg ,_egece :=_abfcc ._ebea .LookupByReference (*_gegad );if _egece !=nil {_eg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _egece ;};_ggfge ,_dbca :=_addg .(*_ged .PdfIndirectObject );if !_dbca {_eg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");_eg .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_ggfge );return _fc .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_ecfca ,_dbca :=_ggfge .PdfObject .(*_ged .PdfObjectDictionary );if !_dbca {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_ggfge );return _fc .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_egba ,_dbca :=_ged .GetInt (_ecfca .Get ("\u0043\u006f\u0075n\u0074"));if !_dbca {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return _fc .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_dbca =_ged .GetName (_ecfca .Get ("\u0054\u0079\u0070\u0065"));!_dbca {_eg .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");_ecfca .Set ("\u0054\u0079\u0070\u0065",_ged .MakeName ("\u0050\u0061\u0067e\u0073"));};_abfcc ._bdcbb =_adbd ;_abfcc ._fffe =_bgcgd ;_abfcc ._aecee =_ecfca ;_abfcc ._efeag =_ggfge ;_abfcc ._ecagf =int (*_egba );_abfcc ._deeb =[]*_ged .PdfIndirectObject {};_adgcba :=map[_ged .PdfObject ]struct{}{};_egece =_abfcc .buildPageList (_ggfge ,nil ,_adgcba );if _egece !=nil {return _egece ;};_eg .Log .Trace ("\u002d\u002d\u002d");_eg .Log .Trace ("\u0054\u004f\u0043");_eg .Log .Trace ("\u0050\u0061\u0067e\u0073");_eg .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_abfcc ._deeb ),_abfcc ._deeb );_abfcc ._dgge ,_egece =_abfcc .loadOutlines ();if _egece !=nil {_eg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_egece );return _egece ;};_abfcc .AcroForm ,_egece =_abfcc .loadForms ();if _egece !=nil {return _egece ;};_abfcc .DSS ,_egece =_abfcc .loadDSS ();if _egece !=nil {return _egece ;};return nil ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_gebba *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _gebba .Range };

// Flags returns the field flags for the field accounting for any inherited flags.
func (_ababe *PdfField )Flags ()FieldFlag {var _egdda FieldFlag ;_cfab ,_bbaca :=_ababe .inherit (func (_fbeb *PdfField )bool {if _fbeb .Ff !=nil {_egdda =FieldFlag (*_ababe .Ff );return true ;};return false ;});if _bbaca !=nil {_eg .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_bbaca );};if !_cfab {_eg .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _egdda ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_deccf *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_fbgbed :=RC4_128bit ;if options !=nil {_fbgbed =options .Algorithm ;};_gecge :=_gc .PermOwner ;if options !=nil {_gecge =options .Permissions ;};var _fgcdc _eb .Filter ;switch _fbgbed {case RC4_128bit :_fgcdc =_eb .NewFilterV2 (16);case AES_128bit :_fgcdc =_eb .NewFilterAESV2 ();case AES_256bit :_fgcdc =_eb .NewFilterAESV3 ();default:return _d .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );};_fceec ,_dgfb ,_bbbeb :=_ged .PdfCryptNewEncrypt (_fgcdc ,userPass ,ownerPass ,_gecge );if _bbbeb !=nil {return _bbbeb ;};_deccf ._cdgc =_fceec ;if _dgfb .Major !=0{_deccf .SetVersion (_dgfb .Major ,_dgfb .Minor );};_deccf ._dbccc =_dgfb .Encrypt ;_deccf ._eaadd =_ged .MakeArray (_ged .MakeHexString (_dgfb .ID0 ),_ged .MakeHexString (_dgfb .ID1 ));_fcfea :=_ged .MakeIndirectObject (_dgfb .Encrypt );_deccf ._ecdgg =_fcfea ;_deccf .addObject (_fcfea );return nil ;};func _dfggb (_cecf _ged .PdfObject )(*PdfColorspaceCalRGB ,error ){_ddfg :=NewPdfColorspaceCalRGB ();if _gbca ,_aecde :=_cecf .(*_ged .PdfIndirectObject );_aecde {_ddfg ._dbde =_gbca ;};_cecf =_ged .TraceToDirectObject (_cecf );_fce ,_ceafb :=_cecf .(*_ged .PdfObjectArray );if !_ceafb {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fce .Len ()!=2{return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_cecf =_ged .TraceToDirectObject (_fce .Get (0));_bfag ,_ceafb :=_cecf .(*_ged .PdfObjectName );if !_ceafb {return nil ,_d .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_bfag !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_d .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_cecf =_ged .TraceToDirectObject (_fce .Get (1));_cggcf ,_ceafb :=_cecf .(*_ged .PdfObjectDictionary );if !_ceafb {return nil ,_d .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_cecf =_cggcf .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cecf =_ged .TraceToDirectObject (_cecf );_eedd ,_ceafb :=_cecf .(*_ged .PdfObjectArray );if !_ceafb {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");};if _eedd .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_ecag ,_bef :=_eedd .GetAsFloat64Slice ();if _bef !=nil {return nil ,_bef ;};_ddfg .WhitePoint =_ecag ;_cecf =_cggcf .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cecf !=nil {_cecf =_ged .TraceToDirectObject (_cecf );_afcf ,_caaa :=_cecf .(*_ged .PdfObjectArray );if !_caaa {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _afcf .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_egdb ,_fagf :=_afcf .GetAsFloat64Slice ();if _fagf !=nil {return nil ,_fagf ;};_ddfg .BlackPoint =_egdb ;};_cecf =_cggcf .Get ("\u0047\u0061\u006dm\u0061");if _cecf !=nil {_cecf =_ged .TraceToDirectObject (_cecf );_feca ,_ffbg :=_cecf .(*_ged .PdfObjectArray );if !_ffbg {return nil ,_d .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _feca .Len ()!=3{return nil ,_d .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_edgg ,_gbab :=_feca .GetAsFloat64Slice ();if _gbab !=nil {return nil ,_gbab ;};_ddfg .Gamma =_edgg ;};_cecf =_cggcf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _cecf !=nil {_cecf =_ged .TraceToDirectObject (_cecf );_dgee ,_gbcf :=_cecf .(*_ged .PdfObjectArray );if !_gbcf {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _dgee .Len ()!=9{_eg .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_dgee .String ());return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_fcbd ,_gcab :=_dgee .GetAsFloat64Slice ();if _gcab !=nil {return nil ,_gcab ;};_ddfg .Matrix =_fcbd ;};return _ddfg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fda *PdfAnnotationCaret )ToPdfObject ()_ged .PdfObject {_fda .PdfAnnotation .ToPdfObject ();_ccfc :=_fda ._efb ;_aeba :=_ccfc .PdfObject .(*_ged .PdfObjectDictionary );_fda .PdfAnnotationMarkup .appendToPdfDictionary (_aeba );_aeba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0043\u0061\u0072e\u0074"));_aeba .SetIfNotNil ("\u0052\u0044",_fda .RD );_aeba .SetIfNotNil ("\u0053\u0079",_fda .Sy );return _ccfc ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;func (_ecb *PdfReader )newPdfAnnotationLinkFromDict (_bagg *_ged .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_eae :=PdfAnnotationLink {};_eae .A =_bagg .Get ("\u0041");_eae .Dest =_bagg .Get ("\u0044\u0065\u0073\u0074");_eae .H =_bagg .Get ("\u0048");_eae .PA =_bagg .Get ("\u0050\u0041");_eae .QuadPoints =_bagg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_eae .BS =_bagg .Get ("\u0042\u0053");return &_eae ,nil ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_eadgf *PdfPageResources )SetShadingByName (keyName _ged .PdfObjectName ,shadingObj _ged .PdfObject )error {if _eadgf .Shading ==nil {_eadgf .Shading =_ged .MakeDict ();};_dfdc ,_gefe :=_eadgf .Shading .(*_ged .PdfObjectDictionary );if !_gefe {return _ged .ErrTypeError ;};_dfdc .Set (keyName ,shadingObj );return nil ;};

// ImageToRGB convert an indexed image to RGB.
func (_aebde *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_aebde .Base .GetNumComponents ();if N < 1{return Image {},_d .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );};_ecbf :=_daf .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._fgaab ,img ._caaed );_bfegb :=_fec .NewReader (img .getBase ());_fegd :=_fec .NewWriter (_ecbf );var (_dggbf uint32 ;_acbef int ;_cgdbb error ;);for {_dggbf ,_cgdbb =_bfegb .ReadSample ();if _cgdbb ==_aa .EOF {break ;}else if _cgdbb !=nil {return img ,_cgdbb ;};_acbef =int (_dggbf );_eg .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_acbef ,N ,len (_aebde ._aabff ));if (_acbef +1)*N > len (_aebde ._aabff ){_acbef =len (_aebde ._aabff )/N -1;_eg .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_acbef );if _acbef < 0{_eg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");break ;};};for _degb :=_acbef *N ;_degb < (_acbef +1)*N ;_degb ++{if _cgdbb =_fegd .WriteSample (uint32 (_aebde ._aabff [_degb ]));_cgdbb !=nil {return img ,_cgdbb ;};};};return _aebde .Base .ImageToRGB (_dfcbe (&_ecbf ));};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_deea *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_efad :=_fec .NewReader (img .getBase ());_gfcff :=_daf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_deea .AlternateSpace .GetNumComponents (),nil ,img ._fgaab ,nil );_ecfd :=_fec .NewWriter (_gfcff );_dcdeg :=_af .Pow (2,float64 (img .BitsPerComponent ))-1;_eg .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");_eg .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_deea .TintTransform );_ecc :=_deea .AlternateSpace .DecodeArray ();var (_adbfb uint32 ;_edfc error ;);for {_adbfb ,_edfc =_efad .ReadSample ();if _edfc ==_aa .EOF {break ;};if _edfc !=nil {return img ,_edfc ;};_cfea :=float64 (_adbfb )/_dcdeg ;_fbbf ,_ebefa :=_deea .TintTransform .Evaluate ([]float64 {_cfea });if _ebefa !=nil {return img ,_ebefa ;};for _bcfc ,_fcdb :=range _fbbf {_daae :=_daf .LinearInterpolate (_fcdb ,_ecc [_bcfc *2],_ecc [_bcfc *2+1],0,1);if _ebefa =_ecfd .WriteSample (uint32 (_daae *_dcdeg ));_ebefa !=nil {return img ,_ebefa ;};};};return _deea .AlternateSpace .ImageToRGB (_dfcbe (&_gfcff ));};func _gbdbb (_acaba *PdfPage ){_fcdgc :=_bc .GetLicenseKey ();if _fcdgc !=nil &&_fcdgc .IsLicensed (){return ;};_eagfg :=_ged .PdfObjectName ("\u0055\u0046\u0031");if !_acaba .Resources .HasFontByName (_eagfg ){_acaba .Resources .SetFontByName (_eagfg ,DefaultFont ().ToPdfObject ());};var _gcgfe []string ;_gcgfe =append (_gcgfe ,"\u0071");_gcgfe =append (_gcgfe ,"\u0042\u0054");_gcgfe =append (_gcgfe ,_d .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_eagfg .String ()));_gcgfe =append (_gcgfe ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_gcgfe =append (_gcgfe ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_dage :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";_gcgfe =append (_gcgfe ,_d .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_dage ));_gcgfe =append (_gcgfe ,"\u0045\u0054");_gcgfe =append (_gcgfe ,"\u0051");_acbc :=_bf .Join (_gcgfe ,"\u000a");_acaba .AddContentStreamByString (_acbc );_acaba .ToPdfObject ();};func _dfafc (_cggb *_ged .PdfObjectStream )(*PdfFunctionType4 ,error ){_cafe :=&PdfFunctionType4 {};_cafe ._dbad =_cggb ;_fedgge :=_cggb .PdfObjectDictionary ;_ccbda ,_dgefd :=_ged .TraceToDirectObject (_fedgge .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ged .PdfObjectArray );if !_dgefd {_eg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _ccbda .Len ()%2!=0{_eg .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_cedc ,_ggacge :=_ccbda .ToFloat64Array ();if _ggacge !=nil {return nil ,_ggacge ;};_cafe .Domain =_cedc ;_ccbda ,_dgefd =_ged .TraceToDirectObject (_fedgge .Get ("\u0052\u0061\u006eg\u0065")).(*_ged .PdfObjectArray );if _dgefd {if _ccbda .Len ()< 0||_ccbda .Len ()%2!=0{return nil ,_fc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_cagba ,_cefbb :=_ccbda .ToFloat64Array ();if _cefbb !=nil {return nil ,_cefbb ;};_cafe .Range =_cagba ;};_bbbef ,_ggacge :=_ged .DecodeStream (_cggb );if _ggacge !=nil {return nil ,_ggacge ;};_cafe ._cbgg =_bbbef ;_dgaaf :=_cff .NewPSParser (_bbbef );_bgdee ,_ggacge :=_dgaaf .Parse ();if _ggacge !=nil {return nil ,_ggacge ;};_cafe .Program =_bgdee ;return _cafe ,nil ;};

// Height returns the height of `rect`.
func (_gfagd *PdfRectangle )Height ()float64 {return _af .Abs (_gfagd .Ury -_gfagd .Lly )};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_cfddc *PdfPageResources )GetXObjectByName (keyName _ged .PdfObjectName )(*_ged .PdfObjectStream ,XObjectType ){if _cfddc .XObject ==nil {return nil ,XObjectTypeUndefined ;};_cfba ,_gddb :=_ged .TraceToDirectObject (_cfddc .XObject ).(*_ged .PdfObjectDictionary );if !_gddb {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ged .TraceToDirectObject (_cfddc .XObject ));return nil ,XObjectTypeUndefined ;};if _ddbdb :=_cfba .Get (keyName );_ddbdb !=nil {_faccf ,_feefb :=_ged .GetStream (_ddbdb );if !_feefb {_eg .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_ddbdb );return nil ,XObjectTypeUndefined ;};_fgbaf :=_faccf .PdfObjectDictionary ;_bfabg ,_feefb :=_ged .TraceToDirectObject (_fgbaf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_ged .PdfObjectName );if !_feefb {_eg .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_fgbaf .String ());return nil ,XObjectTypeUndefined ;};if *_bfabg =="\u0049\u006d\u0061g\u0065"{return _faccf ,XObjectTypeImage ;}else if *_bfabg =="\u0046\u006f\u0072\u006d"{return _faccf ,XObjectTypeForm ;}else if *_bfabg =="\u0050\u0053"{return _faccf ,XObjectTypePS ;}else {_eg .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_bfabg );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _ged .PdfObject ;AN _ged .PdfObject ;OP _ged .PdfObject ;JS _ged .PdfObject ;};func _gdcgb ()string {_gdabg .Lock ();defer _gdabg .Unlock ();_bgddbg :=_bc .GetLicenseKey ();if len (_bafac )> 0&&(_bgddbg .IsLicensed ()||_gdcg ){return _bafac ;};return _d .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_gbfee (),_bgddbg .TypeToString ());};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_fbdff *PdfFont )CharcodesToUnicodeWithStats (charcodes []_ffe .CharCode )(_fcea []rune ,_egdc ,_bccd int ){_afbcc ,_egdc ,_bccd :=_fbdff .CharcodesToStrings (charcodes );return []rune (_bf .Join (_afbcc ,"")),_egdc ,_bccd ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// ToPdfObject implements interface PdfModel.
func (_cgac *PdfAnnotation3D )ToPdfObject ()_ged .PdfObject {_cgac .PdfAnnotation .ToPdfObject ();_babb :=_cgac ._efb ;_faa :=_babb .PdfObject .(*_ged .PdfObjectDictionary );_faa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0033\u0044"));_faa .SetIfNotNil ("\u0033\u0044\u0044",_cgac .T3DD );_faa .SetIfNotNil ("\u0033\u0044\u0056",_cgac .T3DV );_faa .SetIfNotNil ("\u0033\u0044\u0041",_cgac .T3DA );_faa .SetIfNotNil ("\u0033\u0044\u0049",_cgac .T3DI );_faa .SetIfNotNil ("\u0033\u0044\u0042",_cgac .T3DB );return _babb ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_fagfad *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_eg .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return nil ,_fc .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_gdabg .Lock ();defer _gdabg .Unlock ();_afccc =keywords };

// IsColored specifies if the pattern is colored.
func (_cggfa *PdfTilingPattern )IsColored ()bool {if _cggfa .PaintType !=nil &&*_cggfa .PaintType ==1{return true ;};return false ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_abbgc []byte )(_adfba int ,_fadeg error );};

// ToPdfObject implements interface PdfModel.
func (_ced *PdfActionRendition )ToPdfObject ()_ged .PdfObject {_ced .PdfAction .ToPdfObject ();_ffff :=_ced ._ebd ;_dcb :=_ffff .PdfObject .(*_ged .PdfObjectDictionary );_dcb .SetIfNotNil ("\u0053",_ged .MakeName (string (ActionTypeRendition )));_dcb .SetIfNotNil ("\u0052",_ced .R );_dcb .SetIfNotNil ("\u0041\u004e",_ced .AN );_dcb .SetIfNotNil ("\u004f\u0050",_ced .OP );_dcb .SetIfNotNil ("\u004a\u0053",_ced .JS );return _ffff ;};var (_gdabg _e .Mutex ;_dbcb ="";_ggedf _c .Time ;_dccbg ="";_afccc ="";_edaac _c .Time ;_bafac ="";_eaaaf ="";_cdbacc ="";);const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_bfgb *PdfOutline )GetContainingPdfObject ()_ged .PdfObject {return _bfgb ._agbgd };func (_dcbda *PdfWriter )hasObject (_afaa _ged .PdfObject )bool {_ ,_bgcf :=_dcbda ._fdbab [_afaa ];return _bgcf ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_bfcg *PdfAnnotation )ToPdfObject ()_ged .PdfObject {_bdgg :=_bfcg ._efb ;_ebae :=_bdgg .PdfObject .(*_ged .PdfObjectDictionary );_ebae .Clear ();_ebae .Set ("\u0054\u0079\u0070\u0065",_ged .MakeName ("\u0041\u006e\u006eo\u0074"));_ebae .SetIfNotNil ("\u0052\u0065\u0063\u0074",_bfcg .Rect );_ebae .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bfcg .Contents );_ebae .SetIfNotNil ("\u0050",_bfcg .P );_ebae .SetIfNotNil ("\u004e\u004d",_bfcg .NM );_ebae .SetIfNotNil ("\u004d",_bfcg .M );_ebae .SetIfNotNil ("\u0046",_bfcg .F );_ebae .SetIfNotNil ("\u0041\u0050",_bfcg .AP );_ebae .SetIfNotNil ("\u0041\u0053",_bfcg .AS );_ebae .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_bfcg .Border );_ebae .SetIfNotNil ("\u0043",_bfcg .C );_ebae .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_bfcg .StructParent );_ebae .SetIfNotNil ("\u004f\u0043",_bfcg .OC );return _bdgg ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_gfbdb *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_abdbb *PdfPattern )SetContext (ctx PdfModel ){_abdbb ._bcbc =ctx };

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_ged .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_cgfcd *_ged .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_afdbc *PdfPageResources )ToPdfObject ()_ged .PdfObject {_aabba :=_afdbc ._bbga ;_aabba .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_afdbc .ExtGState );if _afdbc ._cedfg !=nil {_afdbc .ColorSpace =_afdbc ._cedfg .ToPdfObject ();};_aabba .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_afdbc .ColorSpace );_aabba .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_afdbc .Pattern );_aabba .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_afdbc .Shading );_aabba .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_afdbc .XObject );_aabba .SetIfNotNil ("\u0046\u006f\u006e\u0074",_afdbc .Font );_aabba .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_afdbc .ProcSet );_aabba .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_afdbc .Properties );return _aabba ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_gfca *PdfAppender )UpdatePage (page *PdfPage ){_gfca .updateObjectsDeep (page .ToPdfObject (),nil )};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _ged .PdfObject ;BS _ged .PdfObject ;};func _bebf (_cdefgf *_ged .PdfObjectDictionary )(*PdfShadingType1 ,error ){_aedbg :=PdfShadingType1 {};if _gacfd :=_cdefgf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_gacfd !=nil {_gacfd =_ged .TraceToDirectObject (_gacfd );_ffecb ,_badda :=_gacfd .(*_ged .PdfObjectArray );if !_badda {_eg .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gacfd );return nil ,_fc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aedbg .Domain =_ffecb ;};if _fabf :=_cdefgf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_fabf !=nil {_fabf =_ged .TraceToDirectObject (_fabf );_febd ,_ccggca :=_fabf .(*_ged .PdfObjectArray );if !_ccggca {_eg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fabf );return nil ,_fc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aedbg .Matrix =_febd ;};_bfde :=_cdefgf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bfde ==nil {_eg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_aedbg .Function =[]PdfFunction {};if _eacb ,_baca :=_bfde .(*_ged .PdfObjectArray );_baca {for _ ,_bgacg :=range _eacb .Elements (){_gfff ,_egabf :=_gecdb (_bgacg );if _egabf !=nil {_eg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_egabf );return nil ,_egabf ;};_aedbg .Function =append (_aedbg .Function ,_gfff );};}else {_aceda ,_gdaea :=_gecdb (_bfde );if _gdaea !=nil {_eg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gdaea );return nil ,_gdaea ;};_aedbg .Function =append (_aedbg .Function ,_aceda );};return &_aedbg ,nil ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_dbdc *PdfField )FullName ()(string ,error ){var _efbf _bd .Buffer ;_adac :=[]string {};if _dbdc .T !=nil {_adac =append (_adac ,_dbdc .T .Decoded ());};_abged :=map[*PdfField ]bool {};_abged [_dbdc ]=true ;_fdad :=_dbdc .Parent ;for _fdad !=nil {if _ ,_ebbc :=_abged [_fdad ];_ebbc {return _efbf .String (),_fc .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _fdad .T ==nil {return _efbf .String (),_fc .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");};_adac =append (_adac ,_fdad .T .Decoded ());_abged [_fdad ]=true ;_fdad =_fdad .Parent ;};for _gcee :=len (_adac )-1;_gcee >=0;_gcee --{_efbf .WriteString (_adac [_gcee ]);if _gcee > 0{_efbf .WriteString ("\u002e");};};return _efbf .String (),nil ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_ged .PdfObjectArray ;Domain *_ged .PdfObjectArray ;Function []PdfFunction ;Extend *_ged .PdfObjectArray ;};

// ToPdfObject implements interface PdfModel.
func (_bdfa *PdfAnnotationLink )ToPdfObject ()_ged .PdfObject {_bdfa .PdfAnnotation .ToPdfObject ();_bdd :=_bdfa ._efb ;_ccfe :=_bdd .PdfObject .(*_ged .PdfObjectDictionary );_ccfe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u004c\u0069\u006e\u006b"));if _bdfa ._egfd !=nil &&_bdfa ._egfd ._ab !=nil {_ccfe .Set ("\u0041",_bdfa ._egfd ._ab .ToPdfObject ());}else if _bdfa .A !=nil {_ccfe .Set ("\u0041",_bdfa .A );};_ccfe .SetIfNotNil ("\u0044\u0065\u0073\u0074",_bdfa .Dest );_ccfe .SetIfNotNil ("\u0048",_bdfa .H );_ccfe .SetIfNotNil ("\u0050\u0041",_bdfa .PA );_ccfe .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bdfa .QuadPoints );_ccfe .SetIfNotNil ("\u0042\u0053",_bdfa .BS );return _bdd ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _ged .PdfObjectName ;};func (_eedbd *fontFile )parseASCIIPart (_ggfb []byte )error {if len (_ggfb )< 2||string (_ggfb [:2])!="\u0025\u0021"{return _fc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");};_edaba ,_bcdca ,_bbgfa :=_aabdb (_ggfb );if _bbgfa !=nil {return _bbgfa ;};_gcgdf :=_dcebf (_edaba );_eedbd ._adbec =_gcgdf ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _eedbd ._adbec ==""{_eg .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");};if _bcdca !=""{_ceca ,_eeec :=_cfda (_bcdca );if _eeec !=nil {return _eeec ;};_gggfa ,_eeec :=_ffe .NewCustomSimpleTextEncoder (_ceca ,nil );if _eeec !=nil {_eg .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_eeec );return nil ;};_eedbd ._edege =_gggfa ;};return nil ;};

// BaseFont returns the font's "BaseFont" field.
func (_bgce *PdfFont )BaseFont ()string {return _bgce .baseFields ()._dgefe };func (_afcb *PdfWriter )addObjects (_cedce _ged .PdfObject )error {_eg .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _cgcee ,_fgaabc :=_cedce .(*_ged .PdfIndirectObject );_fgaabc {_eg .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_eg .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_cedce ,_cgcee );_eg .Log .Trace ("\u002d\u0020\u0025\u0073",_cgcee .PdfObject );if _afcb .addObject (_cgcee ){_cgfd :=_afcb .addObjects (_cgcee .PdfObject );if _cgfd !=nil {return _cgfd ;};};return nil ;};if _fcfad ,_cgfbdc :=_cedce .(*_ged .PdfObjectStream );_cgfbdc {_eg .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_eg .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_cedce ,_cedce );if _afcb .addObject (_fcfad ){_fabac :=_afcb .addObjects (_fcfad .PdfObjectDictionary );if _fabac !=nil {return _fabac ;};};return nil ;};if _feaea ,_cafcf :=_cedce .(*_ged .PdfObjectDictionary );_cafcf {_eg .Log .Trace ("\u0044\u0069\u0063\u0074");_eg .Log .Trace ("\u002d\u0020\u0025\u0073",_cedce );for _ ,_eegbf :=range _feaea .Keys (){_bdgaac :=_feaea .Get (_eegbf );if _feafd ,_cgga :=_bdgaac .(*_ged .PdfObjectReference );_cgga {_bdgaac =_feafd .Resolve ();_feaea .Set (_eegbf ,_bdgaac );};if _eegbf !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _ccggcf :=_afcb .addObjects (_bdgaac );_ccggcf !=nil {return _ccggcf ;};}else {if _ ,_aeddd :=_bdgaac .(*_ged .PdfObjectNull );_aeddd {continue ;};if _dbcccd :=_afcb .hasObject (_bdgaac );!_dbcccd {_eg .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_bdgaac ,_bdgaac ,_bdgaac );_afcb ._ecga [_bdgaac ]=append (_afcb ._ecga [_bdgaac ],_feaea );};};};return nil ;};if _gdgd ,_babbd :=_cedce .(*_ged .PdfObjectArray );_babbd {_eg .Log .Trace ("\u0041\u0072\u0072a\u0079");_eg .Log .Trace ("\u002d\u0020\u0025\u0073",_cedce );if _gdgd ==nil {return _fc .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};for _dfcbd ,_ddcdf :=range _gdgd .Elements (){if _cgegd ,_fgagc :=_ddcdf .(*_ged .PdfObjectReference );_fgagc {_ddcdf =_cgegd .Resolve ();_gdgd .Set (_dfcbd ,_ddcdf );};if _acgbg :=_afcb .addObjects (_ddcdf );_acgbg !=nil {return _acgbg ;};};return nil ;};if _ ,_abfdcf :=_cedce .(*_ged .PdfObjectReference );_abfdcf {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_cedce );return _fc .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_dfga *PdfColorspaceLab )ToPdfObject ()_ged .PdfObject {_gfaa :=_ged .MakeArray ();_gfaa .Append (_ged .MakeName ("\u004c\u0061\u0062"));_befd :=_ged .MakeDict ();if _dfga .WhitePoint !=nil {_cabe :=_ged .MakeArray (_ged .MakeFloat (_dfga .WhitePoint [0]),_ged .MakeFloat (_dfga .WhitePoint [1]),_ged .MakeFloat (_dfga .WhitePoint [2]));_befd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_cabe );}else {_eg .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};if _dfga .BlackPoint !=nil {_aaab :=_ged .MakeArray (_ged .MakeFloat (_dfga .BlackPoint [0]),_ged .MakeFloat (_dfga .BlackPoint [1]),_ged .MakeFloat (_dfga .BlackPoint [2]));_befd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_aaab );};if _dfga .Range !=nil {_cedf :=_ged .MakeArray (_ged .MakeFloat (_dfga .Range [0]),_ged .MakeFloat (_dfga .Range [1]),_ged .MakeFloat (_dfga .Range [2]),_ged .MakeFloat (_dfga .Range [3]));_befd .Set ("\u0052\u0061\u006eg\u0065",_cedf );};_gfaa .Append (_befd );if _dfga ._dcca !=nil {_dfga ._dcca .PdfObject =_gfaa ;return _dfga ._dcca ;};return _gfaa ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_eebd *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _eebd .Alternate ==nil {_eg .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _eebd .N ==1{_eg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_agfc :=NewPdfColorspaceDeviceGray ();return _agfc .ColorToRGB (color );}else if _eebd .N ==3{_eg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return color ,nil ;}else if _eebd .N ==4{_eg .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_aacb :=NewPdfColorspaceDeviceCMYK ();return _aacb .ColorToRGB (color );}else {return nil ,_fc .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_eg .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_eebd );return _eebd .Alternate .ColorToRGB (color );};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_acgba *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _acgba .RunesToCharcodeBytes ([]rune (str ));};func _ggbbd (_edfcg _ged .PdfObject )(map[_ffe .CharCode ]float64 ,error ){if _edfcg ==nil {return nil ,nil ;};_fegbd ,_fcce :=_ged .GetArray (_edfcg );if !_fcce {return nil ,nil ;};_fgef :=map[_ffe .CharCode ]float64 {};_abcg :=_fegbd .Len ();for _feadg :=0;_feadg < _abcg -1;_feadg ++{_egfe :=_ged .TraceToDirectObject (_fegbd .Get (_feadg ));_daca ,_gada :=_ged .GetIntVal (_egfe );if !_gada {return nil ,_d .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_feadg ,_egfe );};_feadg ++;if _feadg > _abcg -1{return nil ,_d .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_fegbd );};_ggbba :=_ged .TraceToDirectObject (_fegbd .Get (_feadg ));switch _ggbba .(type ){case *_ged .PdfObjectArray :_fgaea ,_ :=_ged .GetArray (_ggbba );if _dcgb ,_cfbb :=_fgaea .ToFloat64Array ();_cfbb ==nil {for _ddgf :=0;_ddgf < len (_dcgb );_ddgf ++{_fgef [_ffe .CharCode (_daca +_ddgf )]=_dcgb [_ddgf ];};}else {return nil ,_d .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_feadg ,_ggbba );};case *_ged .PdfObjectInteger :_abfb ,_ggdgg :=_ged .GetIntVal (_ggbba );if !_ggdgg {return nil ,_d .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_feadg ,_ggbba );};_feadg ++;if _feadg > _abcg -1{return nil ,_d .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_fegbd );};_egcfd :=_fegbd .Get (_feadg );_gcbg ,_ggedce :=_ged .GetNumberAsFloat (_egcfd );if _ggedce !=nil {return nil ,_d .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_feadg ,_egcfd );};for _gbdbg :=_daca ;_gbdbg <=_abfb ;_gbdbg ++{_fgef [_ffe .CharCode (_gbdbg )]=_gcbg ;};default:return nil ,_d .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_feadg ,_ggbba );};};return _fgef ,nil ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_dbffb *PdfPageResources )HasFontByName (keyName _ged .PdfObjectName )bool {_ ,_fdgeb :=_dbffb .GetFontByName (keyName );return _fdgeb ;};func (_cfgaa *PdfReader )flattenFieldsWithOpts (_abbfa bool ,_degf FieldAppearanceGenerator ,_egabb *FieldFlattenOpts )error {if _egabb ==nil {_egabb =&FieldFlattenOpts {};};var _cgcf bool ;_ggda :=map[*PdfAnnotation ]bool {};{var _eeefc []*PdfField ;_dac :=_cfgaa .AcroForm ;if _dac !=nil {if _egabb .FilterFunc !=nil {_eeefc =_dac .filteredFields (_egabb .FilterFunc ,true );_cgcf =_dac .Fields !=nil &&len (*_dac .Fields )> 0;}else {_eeefc =_dac .AllFields ();};};for _ ,_fddg :=range _eeefc {for _ ,_ecdfg :=range _fddg .Annotations {_ggda [_ecdfg .PdfAnnotation ]=_fddg .V !=nil ;if _degf !=nil {_bgbd ,_ggcc :=_degf .GenerateAppearanceDict (_dac ,_fddg ,_ecdfg );if _ggcc !=nil {return _ggcc ;};_ecdfg .AP =_bgbd ;};};};};if _abbfa {for _ ,_deae :=range _cfgaa .PageList {_deca ,_baeb :=_deae .GetAnnotations ();if _baeb !=nil {return _baeb ;};for _ ,_efgaa :=range _deca {_ggda [_efgaa ]=true ;};};};for _ ,_dbbf :=range _cfgaa .PageList {var _bcfee []*PdfAnnotation ;if _degf !=nil {if _afabc :=_degf .WrapContentStream (_dbbf );_afabc !=nil {return _afabc ;};};_bbcf ,_fgcc :=_dbbf .GetAnnotations ();if _fgcc !=nil {return _fgcc ;};for _ ,_ggfae :=range _bbcf {_ddbe ,_fcgef :=_ggda [_ggfae ];if !_fcgef {_bcfee =append (_bcfee ,_ggfae );continue ;};switch _ggfae .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;};_dgefa ,_fddgb ,_fgad :=_ccbd (_ggfae );if _fgad !=nil {if !_ddbe {_eg .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");continue ;};_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_fgad );continue ;};if _dgefa ==nil {continue ;};_agbe :=_dbbf .Resources .GenerateXObjectName ();_dbbf .Resources .SetXObjectFormByName (_agbe ,_dgefa );_gfae :=_af .Min (_fddgb .Llx ,_fddgb .Urx );_fgfgeg :=_af .Min (_fddgb .Lly ,_fddgb .Ury );var _dfbd []string ;_dfbd =append (_dfbd ,"\u0071");_dfbd =append (_dfbd ,_d .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_gfae ,_fgfgeg ));_dfbd =append (_dfbd ,_d .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_agbe .String ()));_dfbd =append (_dfbd ,"\u0051");_eeeab :=_bf .Join (_dfbd ,"\u000a");_fgad =_dbbf .AppendContentStream (_eeeab );if _fgad !=nil {return _fgad ;};if _dgefa .Resources !=nil {_bbec ,_bdaae :=_ged .GetDict (_dgefa .Resources .Font );if _bdaae {for _ ,_aebab :=range _bbec .Keys (){if !_dbbf .Resources .HasFontByName (_aebab ){_dbbf .Resources .SetFontByName (_aebab ,_bbec .Get (_aebab ));};};};};};if len (_bcfee )> 0{_dbbf ._fedfg =_bcfee ;}else {_dbbf ._fedfg =[]*PdfAnnotation {};};};if !_cgcf {_cfgaa .AcroForm =nil ;};return nil ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _ged .PdfObject ;T _ged .PdfObject ;Operation _ged .PdfObject ;};func _fgbe ()_c .Time {_gdabg .Lock ();defer _gdabg .Unlock ();return _ggedf };

// GetAllContentStreams gets all the content streams for a page as one string.
func (_afcd *PdfPage )GetAllContentStreams ()(string ,error ){_egbgf ,_bcfgd :=_afcd .GetContentStreams ();if _bcfgd !=nil {return "",_bcfgd ;};return _bf .Join (_egbgf ,"\u0020"),nil ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_afdd pdfCIDFontType2 )GetRuneMetrics (r rune )(_aea .CharMetrics ,bool ){_bdae ,_eedb :=_afdd ._bfaf [r ];if !_eedb {_eeaad ,_bfgag :=_ged .GetInt (_afdd .DW );if !_bfgag {return _aea .CharMetrics {},false ;};_bdae =int (*_eeaad );};return _aea .CharMetrics {Wx :float64 (_bdae )},true ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_ged .PdfObjectInteger ;BitsPerComponent *_ged .PdfObjectInteger ;BitsPerFlag *_ged .PdfObjectInteger ;Decode *_ged .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _ged .PdfObjectArray )(*PdfRectangle ,error ){_abedd :=PdfRectangle {};if arr .Len ()!=4{return nil ,_fc .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");};var _aefbd error ;_abedd .Llx ,_aefbd =_ged .GetNumberAsFloat (arr .Get (0));if _aefbd !=nil {return nil ,_aefbd ;};_abedd .Lly ,_aefbd =_ged .GetNumberAsFloat (arr .Get (1));if _aefbd !=nil {return nil ,_aefbd ;};_abedd .Urx ,_aefbd =_ged .GetNumberAsFloat (arr .Get (2));if _aefbd !=nil {return nil ,_aefbd ;};_abedd .Ury ,_aefbd =_ged .GetNumberAsFloat (arr .Get (3));if _aefbd !=nil {return nil ,_aefbd ;};return &_abedd ,nil ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_ged .PdfObjectArray ;ExtGState _ged .PdfObject ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_bded *PdfPageResources )HasColorspaceByName (keyName _ged .PdfObjectName )bool {_cefdb ,_gbggb :=_bded .GetColorspaces ();if _gbggb !=nil {_eg .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_gbggb );return false ;};if _cefdb ==nil {return false ;};_ ,_bcdcb :=_cefdb .Colorspaces [string (keyName )];return _bcdcb ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// SetFontByName sets the font specified by keyName to the given object.
func (_ceafg *PdfPageResources )SetFontByName (keyName _ged .PdfObjectName ,obj _ged .PdfObject )error {if _ceafg .Font ==nil {_ceafg .Font =_ged .MakeDict ();};_fegcc ,_eabc :=_ged .TraceToDirectObject (_ceafg .Font ).(*_ged .PdfObjectDictionary );if !_eabc {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_ged .TraceToDirectObject (_ceafg .Font ));return _ged .ErrTypeError ;};_fegcc .Set (keyName ,obj );return nil ;};func (_dgga *PdfReader )newPdfActionFromIndirectObject (_cdea *_ged .PdfIndirectObject )(*PdfAction ,error ){_dafd ,_ggd :=_cdea .PdfObject .(*_ged .PdfObjectDictionary );if !_ggd {return nil ,_d .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_dgga ._accc .GetModelFromPrimitive (_dafd );model !=nil {_eaa ,_cdb :=model .(*PdfAction );if !_cdb {return nil ,_d .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");};return _eaa ,nil ;};_gge :=&PdfAction {};_gge ._ebd =_cdea ;_dgga ._accc .Register (_dafd ,_gge );if _cfg :=_dafd .Get ("\u0054\u0079\u0070\u0065");_cfg !=nil {_bbf ,_bfc :=_cfg .(*_ged .PdfObjectName );if !_bfc {_eg .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_cfg );}else {if *_bbf !="\u0041\u0063\u0074\u0069\u006f\u006e"{_eg .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_bbf );};_gge .Type =_bbf ;};};if _gcb :=_dafd .Get ("\u004e\u0065\u0078\u0074");_gcb !=nil {_gge .Next =_gcb ;};if _cac :=_dafd .Get ("\u0053");_cac !=nil {_gge .S =_cac ;};_bag ,_aeb :=_gge .S .(*_ged .PdfObjectName );if !_aeb {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_gge .S );return nil ,_d .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_gge .S );};_bfge :=PdfActionType (_bag .String ());switch _bfge {case ActionTypeGoTo :_dda ,_cge :=_dgga .newPdfActionGotoFromDict (_dafd );if _cge !=nil {return nil ,_cge ;};_dda .PdfAction =_gge ;_gge ._ab =_dda ;return _gge ,nil ;case ActionTypeGoToR :_eeee ,_dad :=_dgga .newPdfActionGotoRFromDict (_dafd );if _dad !=nil {return nil ,_dad ;};_eeee .PdfAction =_gge ;_gge ._ab =_eeee ;return _gge ,nil ;case ActionTypeGoToE :_abb ,_fcfc :=_dgga .newPdfActionGotoEFromDict (_dafd );if _fcfc !=nil {return nil ,_fcfc ;};_abb .PdfAction =_gge ;_gge ._ab =_abb ;return _gge ,nil ;case ActionTypeLaunch :_fee ,_cede :=_dgga .newPdfActionLaunchFromDict (_dafd );if _cede !=nil {return nil ,_cede ;};_fee .PdfAction =_gge ;_gge ._ab =_fee ;return _gge ,nil ;case ActionTypeThread :_dcg ,_ebf :=_dgga .newPdfActionThreadFromDict (_dafd );if _ebf !=nil {return nil ,_ebf ;};_dcg .PdfAction =_gge ;_gge ._ab =_dcg ;return _gge ,nil ;case ActionTypeURI :_edd ,_deb :=_dgga .newPdfActionURIFromDict (_dafd );if _deb !=nil {return nil ,_deb ;};_edd .PdfAction =_gge ;_gge ._ab =_edd ;return _gge ,nil ;case ActionTypeSound :_eag ,_afd :=_dgga .newPdfActionSoundFromDict (_dafd );if _afd !=nil {return nil ,_afd ;};_eag .PdfAction =_gge ;_gge ._ab =_eag ;return _gge ,nil ;case ActionTypeMovie :_aaa ,_ebba :=_dgga .newPdfActionMovieFromDict (_dafd );if _ebba !=nil {return nil ,_ebba ;};_aaa .PdfAction =_gge ;_gge ._ab =_aaa ;return _gge ,nil ;case ActionTypeHide :_ega ,_eec :=_dgga .newPdfActionHideFromDict (_dafd );if _eec !=nil {return nil ,_eec ;};_ega .PdfAction =_gge ;_gge ._ab =_ega ;return _gge ,nil ;case ActionTypeNamed :_egf ,_eddb :=_dgga .newPdfActionNamedFromDict (_dafd );if _eddb !=nil {return nil ,_eddb ;};_egf .PdfAction =_gge ;_gge ._ab =_egf ;return _gge ,nil ;case ActionTypeSubmitForm :_fga ,_cdf :=_dgga .newPdfActionSubmitFormFromDict (_dafd );if _cdf !=nil {return nil ,_cdf ;};_fga .PdfAction =_gge ;_gge ._ab =_fga ;return _gge ,nil ;case ActionTypeResetForm :_fcgb ,_gdf :=_dgga .newPdfActionResetFormFromDict (_dafd );if _gdf !=nil {return nil ,_gdf ;};_fcgb .PdfAction =_gge ;_gge ._ab =_fcgb ;return _gge ,nil ;case ActionTypeImportData :_bgf ,_bfe :=_dgga .newPdfActionImportDataFromDict (_dafd );if _bfe !=nil {return nil ,_bfe ;};_bgf .PdfAction =_gge ;_gge ._ab =_bgf ;return _gge ,nil ;case ActionTypeSetOCGState :_gdg ,_fdg :=_dgga .newPdfActionSetOCGStateFromDict (_dafd );if _fdg !=nil {return nil ,_fdg ;};_gdg .PdfAction =_gge ;_gge ._ab =_gdg ;return _gge ,nil ;case ActionTypeRendition :_daa ,_eed :=_dgga .newPdfActionRenditionFromDict (_dafd );if _eed !=nil {return nil ,_eed ;};_daa .PdfAction =_gge ;_gge ._ab =_daa ;return _gge ,nil ;case ActionTypeTrans :_cgd ,_cec :=_dgga .newPdfActionTransFromDict (_dafd );if _cec !=nil {return nil ,_cec ;};_cgd .PdfAction =_gge ;_gge ._ab =_cgd ;return _gge ,nil ;case ActionTypeGoTo3DView :_gaad ,_adf :=_dgga .newPdfActionGoTo3DViewFromDict (_dafd );if _adf !=nil {return nil ,_adf ;};_gaad .PdfAction =_gge ;_gge ._ab =_gaad ;return _gge ,nil ;case ActionTypeJavaScript :_bgfg ,_gcba :=_dgga .newPdfActionJavaScriptFromDict (_dafd );if _gcba !=nil {return nil ,_gcba ;};_bgfg .PdfAction =_gge ;_gge ._ab =_bgfg ;return _gge ,nil ;};_eg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_bfge );return nil ,nil ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_cdae pdfFontSimple )GetCharMetrics (code _ffe .CharCode )(_aea .CharMetrics ,bool ){if _bbeea ,_bfbg :=_cdae ._aagc [code ];_bfbg {return _aea .CharMetrics {Wx :_bbeea },true ;};if _aea .IsStdFont (_aea .StdFontName (_cdae ._dgefe )){return _aea .CharMetrics {Wx :250},true ;};return _aea .CharMetrics {},false ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_adecb *XObjectImage )ToImage ()(*Image ,error ){_bcfac :=&Image {};if _adecb .Height ==nil {return nil ,_fc .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_bcfac .Height =*_adecb .Height ;if _adecb .Width ==nil {return nil ,_fc .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_bcfac .Width =*_adecb .Width ;if _adecb .BitsPerComponent ==nil {return nil ,_fc .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");};_bcfac .BitsPerComponent =*_adecb .BitsPerComponent ;_bcfac .ColorComponents =_adecb .ColorSpace .GetNumComponents ();_adecb ._fcdab .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_ged .MakeInteger (int64 (_bcfac .ColorComponents )));_gcege ,_cgdbc :=_ged .DecodeStream (_adecb ._fcdab );if _cgdbc !=nil {return nil ,_cgdbc ;};_bcfac .Data =_gcege ;if _adecb .Decode !=nil {_eedeb ,_cdeffb :=_adecb .Decode .(*_ged .PdfObjectArray );if !_cdeffb {_eg .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");return nil ,_fc .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_ecbba ,_gfaacf :=_eedeb .ToFloat64Array ();if _gfaacf !=nil {return nil ,_gfaacf ;};_bcfac ._caaed =_ecbba ;};return _bcfac ,nil ;};func (_bedd *PdfReader )newPdfAnnotationMovieFromDict (_bbdf *_ged .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_eafd :=PdfAnnotationMovie {};_eafd .T =_bbdf .Get ("\u0054");_eafd .Movie =_bbdf .Get ("\u004d\u006f\u0076i\u0065");_eafd .A =_bbdf .Get ("\u0041");return &_eafd ,nil ;};func (_acge *Image )resampleLowBits (_aagd []uint32 ){_gddgc :=_daf .BytesPerLine (int (_acge .Width ),int (_acge .BitsPerComponent ),_acge .ColorComponents );_geecad :=make ([]byte ,_acge .ColorComponents *_gddgc *int (_acge .Height ));_fgbc :=int (_acge .BitsPerComponent )*_acge .ColorComponents *int (_acge .Width );_eadbd :=uint8 (8);var (_fedcc ,_dadfe int ;_bdgag uint32 ;);for _adbfa :=0;_adbfa < int (_acge .Height );_adbfa ++{_dadfe =_adbfa *_gddgc ;for _dbadg :=0;_dbadg < _fgbc ;_dbadg ++{_bdgag =_aagd [_fedcc ];_eadbd -=uint8 (_acge .BitsPerComponent );_geecad [_dadfe ]|=byte (_bdgag )<<_eadbd ;if _eadbd ==0{_eadbd =8;_dadfe ++;};_fedcc ++;};};_acge .Data =_geecad ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_gac :_ged .MakeIndirectObject (_ged .MakeDict ()),VRI :map[string ]*VRI {}};};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_decef :=&PdfFilespec {};_decef ._eeebf =_ged .MakeIndirectObject (_ged .MakeDict ());return _decef ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_feaaa *PdfAcroForm )ToPdfObject ()_ged .PdfObject {_bebd :=_feaaa ._ddbae ;_aedd :=_bebd .PdfObject .(*_ged .PdfObjectDictionary );if _feaaa .Fields !=nil {_egfg :=_ged .PdfObjectArray {};for _ ,_cbda :=range *_feaaa .Fields {_ebddg :=_cbda .GetContext ();if _ebddg !=nil {_egfg .Append (_ebddg .ToPdfObject ());}else {_egfg .Append (_cbda .ToPdfObject ());};};_aedd .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_egfg );};if _feaaa .NeedAppearances !=nil {_aedd .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_feaaa .NeedAppearances );};if _feaaa .SigFlags !=nil {_aedd .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_feaaa .SigFlags );};if _feaaa .CO !=nil {_aedd .Set ("\u0043\u004f",_feaaa .CO );};if _feaaa .DR !=nil {_aedd .Set ("\u0044\u0052",_feaaa .DR .ToPdfObject ());};if _feaaa .DA !=nil {_aedd .Set ("\u0044\u0041",_feaaa .DA );};if _feaaa .Q !=nil {_aedd .Set ("\u0051",_feaaa .Q );};if _feaaa .XFA !=nil {_aedd .Set ("\u0058\u0046\u0041",_feaaa .XFA );};return _bebd ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };func (_geac *PdfReader )newPdfAnnotationRichMediaFromDict (_eddbe *_ged .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_dba :=&PdfAnnotationRichMedia {};_dba .RichMediaSettings =_eddbe .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_dba .RichMediaContent =_eddbe .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _dba ,nil ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _ged .PdfObject ;T3DV _ged .PdfObject ;T3DA _ged .PdfObject ;T3DI _ged .PdfObject ;T3DB _ged .PdfObject ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_acdee *PdfPageResources )HasExtGState (keyName _ged .PdfObjectName )bool {_ ,_cgdf :=_acdee .GetFontByName (keyName );return _cgdf ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _ged .PdfObject ;Popup *PdfAnnotationPopup ;CA _ged .PdfObject ;RC _ged .PdfObject ;CreationDate _ged .PdfObject ;IRT _ged .PdfObject ;Subj _ged .PdfObject ;RT _ged .PdfObject ;IT _ged .PdfObject ;ExData _ged .PdfObject ;};

// C returns the value of the C component of the color.
func (_bgfd *PdfColorCalRGB )C ()float64 {return _bgfd [2]};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_aded *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_dgdg ,_ffac :=color .(*PdfColorDeviceCMYK );if !_ffac {_eg .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");return nil ,_fc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_efef :=_dgdg .C ();_aeged :=_dgdg .M ();_aacff :=_dgdg .Y ();_gbbdg :=_dgdg .K ();_efef =_efef *(1-_gbbdg )+_gbbdg ;_aeged =_aeged *(1-_gbbdg )+_gbbdg ;_aacff =_aacff *(1-_gbbdg )+_gbbdg ;_dfffa :=1-_efef ;_bdbg :=1-_aeged ;_effbe :=1-_aacff ;return NewPdfColorDeviceRGB (_dfffa ,_bdbg ,_effbe ),nil ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_acf :=NewPdfAnnotation ();_fgff :=&PdfAnnotationText {};_fgff .PdfAnnotation =_acf ;_fgff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_acf .SetContext (_fgff );return _fgff ;};func _cbaa (_babe _ged .PdfObject )(*PdfBorderStyle ,error ){_dfee :=&PdfBorderStyle {};_dfee ._aefa =_babe ;var _babbf *_ged .PdfObjectDictionary ;_babe =_ged .TraceToDirectObject (_babe );_babbf ,_ffdb :=_babe .(*_ged .PdfObjectDictionary );if !_ffdb {return nil ,_fc .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _ebcd :=_babbf .Get ("\u0054\u0079\u0070\u0065");_ebcd !=nil {_bbcg ,_ccgf :=_ebcd .(*_ged .PdfObjectName );if !_ccgf {_eg .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_ebcd );}else {if *_bbcg !="\u0042\u006f\u0072\u0064\u0065\u0072"{_eg .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_bbcg );};};};if _aabea :=_babbf .Get ("\u0057");_aabea !=nil {_cbaac ,_adbg :=_ged .GetNumberAsFloat (_aabea );if _adbg !=nil {_eg .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_adbg );return nil ,_adbg ;};_dfee .W =&_cbaac ;};if _gef :=_babbf .Get ("\u0053");_gef !=nil {_dde ,_cef :=_gef .(*_ged .PdfObjectName );if !_cef {return nil ,_fc .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};var _eaab BorderStyle ;switch *_dde {case "\u0053":_eaab =BorderStyleSolid ;case "\u0044":_eaab =BorderStyleDashed ;case "\u0042":_eaab =BorderStyleBeveled ;case "\u0049":_eaab =BorderStyleInset ;case "\u0055":_eaab =BorderStyleUnderline ;default:_eg .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_dde );return nil ,_fc .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_dfee .S =&_eaab ;};if _dbg :=_babbf .Get ("\u0044");_dbg !=nil {_ggag ,_baf :=_dbg .(*_ged .PdfObjectArray );if !_baf {_eg .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_dbg );return nil ,_fc .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");};_abca ,_dfcb :=_ggag .ToIntegerArray ();if _dfcb !=nil {_eg .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_dfcb );return nil ,_dfcb ;};_dfee .D =&_abca ;};return _dfee ,nil ;};func (_cbacd *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_geg :=NewPdfAction ();_dgc :=&PdfActionURI {};_dgc .PdfAction =_geg ;_geg .SetContext (_dgc );return _dgc ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_cffef *PdfPattern )GetContainingPdfObject ()_ged .PdfObject {return _cffef ._abgg };

// ToPdfObject returns the PDF representation of the shading pattern.
func (_afdac *PdfShadingPattern )ToPdfObject ()_ged .PdfObject {_afdac .PdfPattern .ToPdfObject ();_aefec :=_afdac .getDict ();if _afdac .Shading !=nil {_aefec .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_afdac .Shading .ToPdfObject ());};if _afdac .Matrix !=nil {_aefec .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_afdac .Matrix );};if _afdac .ExtGState !=nil {_aefec .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_afdac .ExtGState );};return _afdac ._abgg ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_dcaac *OutlineItem )Insert (index uint ,item *OutlineItem ){_eeebd :=uint (len (_dcaac .Entries ));if index > _eeebd {index =_eeebd ;};_dcaac .Entries =append (_dcaac .Entries [:index ],append ([]*OutlineItem {item },_dcaac .Entries [index :]...)...);};type fontFile struct{_adbec string ;_babdc string ;_edege _ffe .SimpleEncoder ;};

// RemovePage removes a page by number.
func (_bbgf *PdfAppender )RemovePage (pageNum int ){_cafb :=pageNum -1;_bbgf ._feeg =append (_bbgf ._feeg [0:_cafb ],_bbgf ._feeg [pageNum :]...);};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_cfbd *_ged .PdfIndirectObject ;};func _bfdaf (_gdab _ged .PdfObject )(*PdfColorspaceDeviceN ,error ){_bcgag :=NewPdfColorspaceDeviceN ();if _gdddg ,_aaga :=_gdab .(*_ged .PdfIndirectObject );_aaga {_bcgag ._cgfcd =_gdddg ;};_gdab =_ged .TraceToDirectObject (_gdab );_ccaf ,_edfce :=_gdab .(*_ged .PdfObjectArray );if !_edfce {return nil ,_d .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _ccaf .Len ()!=4&&_ccaf .Len ()!=5{return nil ,_d .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_gdab =_ccaf .Get (0);_addb ,_edfce :=_gdab .(*_ged .PdfObjectName );if !_edfce {return nil ,_d .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_addb !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_d .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_gdab =_ccaf .Get (1);_gdab =_ged .TraceToDirectObject (_gdab );_bfgad ,_edfce :=_gdab .(*_ged .PdfObjectArray );if !_edfce {return nil ,_d .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");};_bcgag .ColorantNames =_bfgad ;_gdab =_ccaf .Get (2);_adabc ,_bacgc :=NewPdfColorspaceFromPdfObject (_gdab );if _bacgc !=nil {return nil ,_bacgc ;};_bcgag .AlternateSpace =_adabc ;_fefe ,_bacgc :=_gecdb (_ccaf .Get (3));if _bacgc !=nil {return nil ,_bacgc ;};_bcgag .TintTransform =_fefe ;if _ccaf .Len ()==5{_gbed ,_gbae :=_gdad (_ccaf .Get (4));if _gbae !=nil {return nil ,_gbae ;};_bcgag .Attributes =_gbed ;};return _bcgag ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dbbgb pdfFontType0 )GetCharMetrics (code _ffe .CharCode )(_aea .CharMetrics ,bool ){if _dbbgb .DescendantFont ==nil {_eg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_dbbgb );return _aea .CharMetrics {},false ;};return _dbbgb .DescendantFont .GetCharMetrics (code );};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_ged .PdfIndirectObject ;SV *_ged .PdfIndirectObject ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_ddae *PdfPage )GetContainingPdfObject ()_ged .PdfObject {return _ddae ._egef };

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_gdgb *PdfFieldButton )SetType (btype ButtonType ){_acfcb :=uint32 (0);if _gdgb .Ff !=nil {_acfcb =uint32 (*_gdgb .Ff );};switch btype {case ButtonTypePush :_acfcb |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_acfcb |=FieldFlagRadio .Mask ();};_gdgb .Ff =_ged .MakeInteger (int64 (_acfcb ));};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _aa .ReadSeeker )(*PdfFont ,error ){_gfbe ,_aacbd :=_b .ReadAll (r );if _aacbd !=nil {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_aacbd );return nil ,_aacbd ;};_dddb ,_aacbd :=_aea .TtfParse (_bd .NewReader (_gfbe ));if _aacbd !=nil {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_aacbd );return nil ,_aacbd ;};_efdg :=&pdfCIDFontType2 {fontCommon :fontCommon {_ecaga :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_ged .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};_ebgd :=make ([]rune ,0,len (_dddb .Chars ));for _feed :=range _dddb .Chars {_ebgd =append (_ebgd ,_feed );};_ae .Slice (_ebgd ,func (_fggd ,_fgdgd int )bool {return _ebgd [_fggd ]< _ebgd [_fgdgd ]});_efcb :=1000.0/float64 (_dddb .UnitsPerEm );if len (_dddb .Widths )<=0{return nil ,_fc .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_dedeed :=_efcb *float64 (_dddb .Widths [0]);_eafg :=make (map[rune ]int );for _ ,_ebgb :=range _ebgd {_aegac :=_dddb .Chars [_ebgb ];_gbbdd :=_efcb *float64 (_dddb .Widths [_aegac ]);_eafg [_ebgb ]=int (_gbbdd );};_efdg ._bfaf =_eafg ;_efdg .DW =_ged .MakeInteger (int64 (_dedeed ));_cfgbb :=_cadac (_ebgd ,_eafg ,_dddb .Chars );_efdg .W =_ged .MakeIndirectObject (_cfgbb );_ddea :=_ged .MakeDict ();_ddea .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_ged .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_ddea .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_ged .MakeString ("\u0041\u0064\u006fb\u0065"));_ddea .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_ged .MakeInteger (0));_efdg .CIDSystemInfo =_ddea ;_fbbda :=&PdfFontDescriptor {FontName :_ged .MakeName (_dddb .PostScriptName ),Ascent :_ged .MakeFloat (_efcb *float64 (_dddb .TypoAscender )),Descent :_ged .MakeFloat (_efcb *float64 (_dddb .TypoDescender )),CapHeight :_ged .MakeFloat (_efcb *float64 (_dddb .CapHeight )),FontBBox :_ged .MakeArrayFromFloats ([]float64 {_efcb *float64 (_dddb .Xmin ),_efcb *float64 (_dddb .Ymin ),_efcb *float64 (_dddb .Xmax ),_efcb *float64 (_dddb .Ymax )}),ItalicAngle :_ged .MakeFloat (_dddb .ItalicAngle ),MissingWidth :_ged .MakeFloat (_efcb *float64 (_dddb .Widths [0]))};_gbcbg ,_aacbd :=_ged .MakeStream (_gfbe ,_ged .NewFlateEncoder ());if _aacbd !=nil {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_aacbd );return nil ,_aacbd ;};_gbcbg .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_ged .MakeInteger (int64 (len (_gfbe ))));_fbbda .FontFile2 =_gbcbg ;if _dddb .Bold {_fbbda .StemV =_ged .MakeInteger (120);}else {_fbbda .StemV =_ged .MakeInteger (70);};_dagdf :=_ffcc ;if _dddb .IsFixedPitch {_dagdf |=_faaac ;};if _dddb .ItalicAngle !=0{_dagdf |=_fdea ;};_fbbda .Flags =_ged .MakeInteger (int64 (_dagdf ));_efdg ._dgefe =_dddb .PostScriptName ;_efdg ._dfede =_fbbda ;_gbcac :=pdfFontType0 {fontCommon :fontCommon {_ecaga :"\u0054\u0079\u0070e\u0030",_dgefe :_dddb .PostScriptName },DescendantFont :&PdfFont {_gfdbg :_efdg },Encoding :_ged .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_ddga :_dddb .NewEncoder ()};if len (_dddb .Chars )> 0{_eafc :=make (map[_ec .CharCode ]rune ,len (_dddb .Chars ));for _ggcfe ,_aefb :=range _dddb .Chars {_dgeece :=_ec .CharCode (_aefb );if _fegce ,_efge :=_eafc [_dgeece ];!_efge ||(_efge &&_fegce > _ggcfe ){_eafc [_dgeece ]=_ggcfe ;};};_gbcac ._ggdea =_ec .NewToUnicodeCMap (_eafc );};_bede :=PdfFont {_gfdbg :&_gbcac };return &_bede ,nil ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _ged .StreamEncoder ;Intent _ged .PdfObject ;ImageMask _ged .PdfObject ;Mask _ged .PdfObject ;Matte _ged .PdfObject ;Decode _ged .PdfObject ;Interpolate _ged .PdfObject ;Alternatives _ged .PdfObject ;SMask _ged .PdfObject ;SMaskInData _ged .PdfObject ;Name _ged .PdfObject ;StructParent _ged .PdfObject ;ID _ged .PdfObject ;OPI _ged .PdfObject ;Metadata _ged .PdfObject ;OC _ged .PdfObject ;Stream []byte ;_fcdab *_ged .PdfObjectStream ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_gagc PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _gagc ._gfdbg .getFontDescriptor (),nil ;};

// ToPdfObject implements interface PdfModel.
func (_fcc *PdfAnnotationHighlight )ToPdfObject ()_ged .PdfObject {_fcc .PdfAnnotation .ToPdfObject ();_abbf :=_fcc ._efb ;_fadb :=_abbf .PdfObject .(*_ged .PdfObjectDictionary );_fcc .PdfAnnotationMarkup .appendToPdfDictionary (_fadb );_fadb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));_fadb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fcc .QuadPoints );return _abbf ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_gdef *PdfFont )GetCharMetrics (code _ffe .CharCode )(CharMetrics ,bool ){var _aafe _aea .CharMetrics ;switch _cbbfe :=_gdef ._gfdbg .(type ){case *pdfFontSimple :if _edcf ,_bcgef :=_cbbfe .GetCharMetrics (code );_bcgef {return _edcf ,_bcgef ;};case *pdfFontType0 :if _fdba ,_cdcb :=_cbbfe .GetCharMetrics (code );_cdcb {return _fdba ,_cdcb ;};case *pdfCIDFontType0 :if _gaffa ,_eggbd :=_cbbfe .GetCharMetrics (code );_eggbd {return _gaffa ,_eggbd ;};case *pdfCIDFontType2 :if _cfdd ,_eecc :=_cbbfe .GetCharMetrics (code );_eecc {return _cfdd ,_eecc ;};default:_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_gdef ._gfdbg );return _aafe ,false ;};if _ccac ,_geaf :=_gdef .GetFontDescriptor ();_geaf ==nil &&_ccac !=nil {return _aea .CharMetrics {Wx :_ccac ._ecad },true ;};_eg .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_gdef );return _aafe ,false ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _c .Time ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_edce *XObjectForm )SetContentStream (content []byte ,encoder _ged .StreamEncoder )error {_adcaa :=content ;if encoder ==nil {if _edce .Filter !=nil {encoder =_edce .Filter ;}else {encoder =_ged .NewRawEncoder ();};};_dfbef ,_cffbd :=encoder .EncodeBytes (_adcaa );if _cffbd !=nil {return _cffbd ;};_adcaa =_dfbef ;_edce .Stream =_adcaa ;_edce .Filter =encoder ;return nil ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// GetPageDict converts the Page to a PDF object dictionary.
func (_fffaa *PdfPage )GetPageDict ()*_ged .PdfObjectDictionary {_fffff :=_fffaa ._egbgb ;_fffff .Clear ();_fffff .Set ("\u0054\u0079\u0070\u0065",_ged .MakeName ("\u0050\u0061\u0067\u0065"));_fffff .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fffaa .Parent );if _fffaa .LastModified !=nil {_fffff .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_fffaa .LastModified .ToPdfObject ());};if _fffaa .Resources !=nil {_fffff .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_fffaa .Resources .ToPdfObject ());};if _fffaa .CropBox !=nil {_fffff .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_fffaa .CropBox .ToPdfObject ());};if _fffaa .MediaBox !=nil {_fffff .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_fffaa .MediaBox .ToPdfObject ());};if _fffaa .BleedBox !=nil {_fffff .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_fffaa .BleedBox .ToPdfObject ());};if _fffaa .TrimBox !=nil {_fffff .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_fffaa .TrimBox .ToPdfObject ());};if _fffaa .ArtBox !=nil {_fffff .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_fffaa .ArtBox .ToPdfObject ());};_fffff .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_fffaa .BoxColorInfo );_fffff .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_fffaa .Contents );if _fffaa .Rotate !=nil {_fffff .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_ged .MakeInteger (*_fffaa .Rotate ));};_fffff .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_fffaa .Group );_fffff .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_fffaa .Thumb );_fffff .SetIfNotNil ("\u0042",_fffaa .B );_fffff .SetIfNotNil ("\u0044\u0075\u0072",_fffaa .Dur );_fffff .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_fffaa .Trans );_fffff .SetIfNotNil ("\u0041\u0041",_fffaa .AA );_fffff .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_fffaa .Metadata );_fffff .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_fffaa .PieceInfo );_fffff .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_fffaa .StructParents );_fffff .SetIfNotNil ("\u0049\u0044",_fffaa .ID );_fffff .SetIfNotNil ("\u0050\u005a",_fffaa .PZ );_fffff .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_fffaa .SeparationInfo );_fffff .SetIfNotNil ("\u0054\u0061\u0062\u0073",_fffaa .Tabs );_fffff .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_fffaa .TemplateInstantiated );_fffff .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_fffaa .PresSteps );_fffff .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_fffaa .UserUnit );_fffff .SetIfNotNil ("\u0056\u0050",_fffaa .VP );if _fffaa ._fedfg !=nil {_dbfg :=_ged .MakeArray ();for _ ,_fadd :=range _fffaa ._fedfg {if _fcgfc :=_fadd .GetContext ();_fcgfc !=nil {_dbfg .Append (_fcgfc .ToPdfObject ());}else {_dbfg .Append (_fadd .ToPdfObject ());};};if _dbfg .Len ()> 0{_fffff .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_dbfg );};}else if _fffaa .Annots !=nil {_fffff .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_fffaa .Annots );};return _fffff ;};

// GetContentStream returns the XObject Form's content stream.
func (_befe *XObjectForm )GetContentStream ()([]byte ,error ){_eebf ,_fgcee :=_ged .DecodeStream (_befe ._dfbddc );if _fgcee !=nil {return nil ,_fgcee ;};return _eebf ,nil ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_ce .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_ce .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_ce .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_fbaef *PdfAppender ;_cdbfg *DSS ;};func (_aadb fontCommon )asPdfObjectDictionary (_edbab string )*_ged .PdfObjectDictionary {if _edbab !=""&&_aadb ._ecaga !=""&&_edbab !=_aadb ._ecaga {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_edbab ,_aadb );}else if _edbab ==""&&_aadb ._ecaga ==""{_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_aadb );}else if _aadb ._ecaga ==""{_aadb ._ecaga =_edbab ;};_ebbg :=_ged .MakeDict ();_ebbg .Set ("\u0054\u0079\u0070\u0065",_ged .MakeName ("\u0046\u006f\u006e\u0074"));_ebbg .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_ged .MakeName (_aadb ._dgefe ));_ebbg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName (_aadb ._ecaga ));if _aadb ._dfede !=nil {_ebbg .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_aadb ._dfede .ToPdfObject ());};if _aadb ._eecgg !=nil {_ebbg .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_aadb ._eecgg );}else if _aadb ._ggdea !=nil {_fcaf ,_cefde :=_aadb ._ggdea .Stream ();if _cefde !=nil {_eg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_cefde );}else {_ebbg .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_fcaf );};};return _ebbg ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _ged .PdfObject ;V _ged .PdfObject ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_bdde *PdfAppender )UpdateObject (obj _ged .PdfObject ){_bdde .replaceObject (obj ,obj );if _ ,_dggb :=_bdde ._cgdd [obj ];!_dggb {_bdde ._beae =append (_bdde ._beae ,obj );_bdde ._cgdd [obj ]=struct{}{};};};

// ToPdfObject converts the font to a PDF representation.
func (_cdbfd *pdfFontType0 )ToPdfObject ()_ged .PdfObject {if _cdbfd ._efbfc ==nil {_cdbfd ._efbfc =&_ged .PdfIndirectObject {};};_fedc :=_cdbfd .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_cdbfd ._efbfc .PdfObject =_fedc ;if _cdbfd .Encoding !=nil {_fedc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cdbfd .Encoding );}else if _cdbfd ._ddga !=nil {_fedc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cdbfd ._ddga .ToPdfObject ());};if _cdbfd .DescendantFont !=nil {_fedc .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_ged .MakeArray (_cdbfd .DescendantFont .ToPdfObject ()));};return _cdbfd ._efbfc ;};

// ToPdfObject implements interface PdfModel.
func (_faef *PdfAnnotationPolyLine )ToPdfObject ()_ged .PdfObject {_faef .PdfAnnotation .ToPdfObject ();_cgfc :=_faef ._efb ;_gbag :=_cgfc .PdfObject .(*_ged .PdfObjectDictionary );_faef .PdfAnnotationMarkup .appendToPdfDictionary (_gbag );_gbag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));_gbag .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_faef .Vertices );_gbag .SetIfNotNil ("\u004c\u0045",_faef .LE );_gbag .SetIfNotNil ("\u0042\u0053",_faef .BS );_gbag .SetIfNotNil ("\u0049\u0043",_faef .IC );_gbag .SetIfNotNil ("\u0042\u0045",_faef .BE );_gbag .SetIfNotNil ("\u0049\u0054",_faef .IT );_gbag .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_faef .Measure );return _cgfc ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_agcc :=&PdfFieldSignature {};_agcc .PdfField =NewPdfField ();_agcc .PdfField .SetContext (_agcc );_agcc .PdfAnnotationWidget =NewPdfAnnotationWidget ();_agcc .PdfAnnotationWidget .SetContext (_agcc );_agcc .PdfAnnotationWidget ._efb =_agcc .PdfField ._bagb ;_agcc .T =_ged .MakeString ("");_agcc .F =_ged .MakeInteger (132);_agcc .V =signature ;return _agcc ;};func (_gccg *PdfReader )newPdfActionResetFormFromDict (_bgd *_ged .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_bgd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_bgd .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_ged .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _ged .PdfObject ;A _ged .PdfObject ;SE _ged .PdfObject ;C _ged .PdfObject ;F _ged .PdfObject ;_befdc *_ged .PdfIndirectObject ;};func (_eeca *PdfReader )newPdfAnnotationWatermarkFromDict (_ecba *_ged .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_adg :=PdfAnnotationWatermark {};_adg .FixedPrint =_ecba .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_adg ,nil ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_gbcg OutlineDest )ToPdfObject ()_ged .PdfObject {if (_gbcg .PageObj ==nil &&_gbcg .Page < 0)||_gbcg .Mode ==""{return _ged .MakeNull ();};_ceaga :=_ged .MakeArray ();if _gbcg .PageObj !=nil {_ceaga .Append (_gbcg .PageObj );}else {_ceaga .Append (_ged .MakeInteger (_gbcg .Page ));};_ceaga .Append (_ged .MakeName (_gbcg .Mode ));switch _gbcg .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_ceaga .Append (_ged .MakeFloat (_gbcg .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_ceaga .Append (_ged .MakeFloat (_gbcg .X ));case "\u0058\u0059\u005a":_ceaga .Append (_ged .MakeFloat (_gbcg .X ));_ceaga .Append (_ged .MakeFloat (_gbcg .Y ));_ceaga .Append (_ged .MakeFloat (_gbcg .Zoom ));default:_ceaga .Set (1,_ged .MakeName ("\u0046\u0069\u0074"));};return _ceaga ;};func _fged (_ebgef _aea .StdFont )pdfFontSimple {_ddgc :=_ebgef .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_ecaga :"\u0054\u0079\u0070e\u0031",_dgefe :_ebgef .Name ()},_bged :_ebgef .GetMetricsTable (),_ffccg :&PdfFontDescriptor {FontName :_ged .MakeName (string (_ddgc .Name )),FontFamily :_ged .MakeName (_ddgc .Family ),FontWeight :_ged .MakeFloat (float64 (_ddgc .Weight )),Flags :_ged .MakeInteger (int64 (_ddgc .Flags )),FontBBox :_ged .MakeArrayFromFloats (_ddgc .BBox [:]),ItalicAngle :_ged .MakeFloat (_ddgc .ItalicAngle ),Ascent :_ged .MakeFloat (_ddgc .Ascent ),Descent :_ged .MakeFloat (_ddgc .Descent ),CapHeight :_ged .MakeFloat (_ddgc .CapHeight ),XHeight :_ged .MakeFloat (_ddgc .XHeight ),StemV :_ged .MakeFloat (_ddgc .StemV ),StemH :_ged .MakeFloat (_ddgc .StemH )},_fbgad :_ebgef .Encoder ()};};

// SetReason sets the `Reason` field of the signature.
func (_cbaff *PdfSignature )SetReason (reason string ){_cbaff .Reason =_ged .MakeString (reason )};func (_aedgba *PdfWriter )copyObjects (){_gccge :=make (map[_ged .PdfObject ]_ged .PdfObject );_cedfe :=make ([]_ged .PdfObject ,0,len (_aedgba ._fedfa ));_cffcf :=make (map[_ged .PdfObject ]struct{},len (_aedgba ._fedfa ));_bafge :=make (map[_ged .PdfObject ]struct{});for _ ,_gdbda :=range _aedgba ._fedfa {_fcde :=_aedgba .copyObject (_gdbda ,_gccge ,_bafge ,false );if _ ,_cfce :=_bafge [_gdbda ];_cfce {continue ;};_cedfe =append (_cedfe ,_fcde );_cffcf [_fcde ]=struct{}{};};_aedgba ._fedfa =_cedfe ;_aedgba ._fdbab =_cffcf ;_aedgba ._dceeg =_aedgba .copyObject (_aedgba ._dceeg ,_gccge ,nil ,false ).(*_ged .PdfIndirectObject );_aedgba ._ceef =_aedgba .copyObject (_aedgba ._ceef ,_gccge ,nil ,false ).(*_ged .PdfIndirectObject );if _aedgba ._ecdgg !=nil {_aedgba ._ecdgg =_aedgba .copyObject (_aedgba ._ecdgg ,_gccge ,nil ,false ).(*_ged .PdfIndirectObject );};if _aedgba ._fbbgd {_egggfg :=make (map[_ged .PdfObject ]int64 );for _cadgd ,_gacc :=range _aedgba ._deagf {if _feeae ,_gceef :=_gccge [_cadgd ];_gceef {_egggfg [_feeae ]=_gacc ;}else {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");};};_aedgba ._deagf =_egggfg ;};};func (_aecdc *pdfFontSimple )baseFields ()*fontCommon {return &_aecdc .fontCommon };

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_fdcdg *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_agada :=func (_adbe float64 )float64 {if _adbe >=6.0/29{return _adbe *_adbe *_adbe ;};return 108.0/841*(_adbe -4/29);};_gbccd :=img ._caaed ;if len (_gbccd )!=6{_eg .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");_gbccd =_fdcdg .DecodeArray ();};_gefa :=_fec .NewReader (img .getBase ());_cded :=_daf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._fgaab ,img ._caaed );_bcbd :=_fec .NewWriter (_cded );_fgde :=_af .Pow (2,float64 (img .BitsPerComponent ))-1;_cfef :=make ([]uint32 ,3);var (_gabf error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_fffcf ,_fgdd ,_fddag float64 ;);for {_gabf =_gefa .ReadSamples (_cfef );if _gabf ==_aa .EOF {break ;}else if _gabf !=nil {return img ,_gabf ;};Ls =float64 (_cfef [0])/_fgde ;As =float64 (_cfef [1])/_fgde ;Bs =float64 (_cfef [2])/_fgde ;Ls =_daf .LinearInterpolate (Ls ,0.0,1.0,_gbccd [0],_gbccd [1]);As =_daf .LinearInterpolate (As ,0.0,1.0,_gbccd [2],_gbccd [3]);Bs =_daf .LinearInterpolate (Bs ,0.0,1.0,_gbccd [4],_gbccd [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_fdcdg .WhitePoint [0]*_agada (L );Y =_fdcdg .WhitePoint [1]*_agada (M );Z =_fdcdg .WhitePoint [2]*_agada (N );_fffcf =3.240479*X +-1.537150*Y +-0.498535*Z ;_fgdd =-0.969256*X +1.875992*Y +0.041556*Z ;_fddag =0.055648*X +-0.204043*Y +1.057311*Z ;_fffcf =_af .Min (_af .Max (_fffcf ,0),1.0);_fgdd =_af .Min (_af .Max (_fgdd ,0),1.0);_fddag =_af .Min (_af .Max (_fddag ,0),1.0);_cfef [0]=uint32 (_fffcf *_fgde );_cfef [1]=uint32 (_fgdd *_fgde );_cfef [2]=uint32 (_fddag *_fgde );if _gabf =_bcbd .WriteSamples (_cfef );_gabf !=nil {return img ,_gabf ;};};return _dfcbe (&_cded ),nil ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_afgdg *PdfPageResources )GetPatternByName (keyName _ged .PdfObjectName )(*PdfPattern ,bool ){if _afgdg .Pattern ==nil {return nil ,false ;};_fecde ,_cgafe :=_ged .TraceToDirectObject (_afgdg .Pattern ).(*_ged .PdfObjectDictionary );if !_cgafe {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_afgdg .Pattern );return nil ,false ;};if _bddbf :=_fecde .Get (keyName );_bddbf !=nil {_bcfge ,_gagaa :=_gffa (_bddbf );if _gagaa !=nil {_eg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_gagaa );return nil ,false ;};return _bcfge ,true ;};return nil ,false ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_cdeab *PdfPage )Duplicate ()*PdfPage {_bdbe :=*_cdeab ;_bdbe ._egbgb =_ged .MakeDict ();_bdbe ._egef =_ged .MakeIndirectObject (_bdbe ._egbgb );return &_bdbe ;};func (_fdge *PdfReader )newPdfAnnotationPopupFromDict (_acd *_ged .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_eaee :=PdfAnnotationPopup {};_eaee .Parent =_acd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_eaee .Open =_acd .Get ("\u004f\u0070\u0065\u006e");return &_eaee ,nil ;};

// SetOCProperties sets the optional content properties.
func (_cgfee *PdfWriter )SetOCProperties (ocProperties _ged .PdfObject )error {_bfeca :=_cgfee ._ffceb ;if ocProperties !=nil {_eg .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");_bfeca .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _cgfee .addObjects (ocProperties );};return nil ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_dfcd *PdfFontDescriptor )ToPdfObject ()_ged .PdfObject {_aceef :=_ged .MakeDict ();if _dfcd ._egegc ==nil {_dfcd ._egegc =&_ged .PdfIndirectObject {};};_dfcd ._egegc .PdfObject =_aceef ;_aceef .Set ("\u0054\u0079\u0070\u0065",_ged .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));if _dfcd .FontName !=nil {_aceef .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_dfcd .FontName );};if _dfcd .FontFamily !=nil {_aceef .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_dfcd .FontFamily );};if _dfcd .FontStretch !=nil {_aceef .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_dfcd .FontStretch );};if _dfcd .FontWeight !=nil {_aceef .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_dfcd .FontWeight );};if _dfcd .Flags !=nil {_aceef .Set ("\u0046\u006c\u0061g\u0073",_dfcd .Flags );};if _dfcd .FontBBox !=nil {_aceef .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_dfcd .FontBBox );};if _dfcd .ItalicAngle !=nil {_aceef .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_dfcd .ItalicAngle );};if _dfcd .Ascent !=nil {_aceef .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_dfcd .Ascent );};if _dfcd .Descent !=nil {_aceef .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_dfcd .Descent );};if _dfcd .Leading !=nil {_aceef .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_dfcd .Leading );};if _dfcd .CapHeight !=nil {_aceef .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_dfcd .CapHeight );};if _dfcd .XHeight !=nil {_aceef .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_dfcd .XHeight );};if _dfcd .StemV !=nil {_aceef .Set ("\u0053\u0074\u0065m\u0056",_dfcd .StemV );};if _dfcd .StemH !=nil {_aceef .Set ("\u0053\u0074\u0065m\u0048",_dfcd .StemH );};if _dfcd .AvgWidth !=nil {_aceef .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_dfcd .AvgWidth );};if _dfcd .MaxWidth !=nil {_aceef .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_dfcd .MaxWidth );};if _dfcd .MissingWidth !=nil {_aceef .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_dfcd .MissingWidth );};if _dfcd .FontFile !=nil {_aceef .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_dfcd .FontFile );};if _dfcd .FontFile2 !=nil {_aceef .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_dfcd .FontFile2 );};if _dfcd .FontFile3 !=nil {_aceef .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_dfcd .FontFile3 );};if _dfcd .CharSet !=nil {_aceef .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_dfcd .CharSet );};if _dfcd .Style !=nil {_aceef .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_dfcd .FontName );};if _dfcd .Lang !=nil {_aceef .Set ("\u004c\u0061\u006e\u0067",_dfcd .Lang );};if _dfcd .FD !=nil {_aceef .Set ("\u0046\u0044",_dfcd .FD );};if _dfcd .CIDSet !=nil {_aceef .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_dfcd .CIDSet );};return _dfcd ._egegc ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};func (_dcgf *PdfReader )newPdfActionGotoRFromDict (_fea *_ged .PdfObjectDictionary )(*PdfActionGoToR ,error ){_cgeb ,_gecf :=_dge (_fea .Get ("\u0046"));if _gecf !=nil {return nil ,_gecf ;};return &PdfActionGoToR {D :_fea .Get ("\u0044"),NewWindow :_fea .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_cgeb },nil ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_ged .PdfObject ,error );};func (_ggba *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _ggba ._dfede };

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_bfcbe *PdfReader )GetPageLabels ()(_ged .PdfObject ,error ){_fbbce :=_ged .ResolveReference (_bfcbe ._fffe .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _fbbce ==nil {return nil ,nil ;};if !_bfcbe ._dbfdg {_edfebe :=_bfcbe .traverseObjectData (_fbbce );if _edfebe !=nil {return nil ,_edfebe ;};};return _fbbce ,nil ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);func (_dddde *PdfWriter )seekByName (_ccdac _ged .PdfObject ,_facaa []string ,_bbdc string )([]_ged .PdfObject ,error ){_eg .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_ccdac );var _gfab []_ged .PdfObject ;if _gbff ,_gacfg :=_ccdac .(*_ged .PdfIndirectObject );_gacfg {return _dddde .seekByName (_gbff .PdfObject ,_facaa ,_bbdc );};if _ggdacd ,_fbgff :=_ccdac .(*_ged .PdfObjectStream );_fbgff {return _dddde .seekByName (_ggdacd .PdfObjectDictionary ,_facaa ,_bbdc );};if _gfbff ,_gbeag :=_ccdac .(*_ged .PdfObjectDictionary );_gbeag {_eg .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_gbdac :=range _gfbff .Keys (){_dffcg :=_gfbff .Get (_gbdac );if string (_gbdac )==_bbdc {_gfab =append (_gfab ,_dffcg );};for _ ,_gefcb :=range _facaa {if string (_gbdac )==_gefcb {_eg .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_gefcb );_dfbdd ,_cdcg :=_dddde .seekByName (_dffcg ,_facaa ,_bbdc );if _cdcg !=nil {return _gfab ,_cdcg ;};_gfab =append (_gfab ,_dfbdd ...);break ;};};};return _gfab ,nil ;};return _gfab ,nil ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_ebdab *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_ecfb :=_fec .NewReader (img .getBase ());_ecdf :=_daf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_ceaf :=_fec .NewWriter (_ecdf );_gfdb :=_af .Pow (2,float64 (img .BitsPerComponent ))-1;_cacd :=make ([]uint32 ,3);var (_dgba uint32 ;ANorm ,X ,Y ,Z ,_ggdb ,_aegec ,_defd float64 ;_adbgg error ;);for {_dgba ,_adbgg =_ecfb .ReadSample ();if _adbgg ==_aa .EOF {break ;}else if _adbgg !=nil {return img ,_adbgg ;};ANorm =float64 (_dgba )/_gfdb ;X =_ebdab .WhitePoint [0]*_af .Pow (ANorm ,_ebdab .Gamma );Y =_ebdab .WhitePoint [1]*_af .Pow (ANorm ,_ebdab .Gamma );Z =_ebdab .WhitePoint [2]*_af .Pow (ANorm ,_ebdab .Gamma );_ggdb =3.240479*X +-1.537150*Y +-0.498535*Z ;_aegec =-0.969256*X +1.875992*Y +0.041556*Z ;_defd =0.055648*X +-0.204043*Y +1.057311*Z ;_ggdb =_af .Min (_af .Max (_ggdb ,0),1.0);_aegec =_af .Min (_af .Max (_aegec ,0),1.0);_defd =_af .Min (_af .Max (_defd ,0),1.0);_cacd [0]=uint32 (_ggdb *_gfdb );_cacd [1]=uint32 (_aegec *_gfdb );_cacd [2]=uint32 (_defd *_gfdb );if _adbgg =_ceaf .WriteSamples (_cacd );_adbgg !=nil {return img ,_adbgg ;};};return _dfcbe (&_ecdf ),nil ;};func (_egebc *PdfPattern )getDict ()*_ged .PdfObjectDictionary {if _febbb ,_fgfda :=_egebc ._abgg .(*_ged .PdfIndirectObject );_fgfda {_abcfe ,_cbaebb :=_febbb .PdfObject .(*_ged .PdfObjectDictionary );if !_cbaebb {return nil ;};return _abcfe ;}else if _defdc ,_fbebd :=_egebc ._abgg .(*_ged .PdfObjectStream );_fbebd {return _defdc .PdfObjectDictionary ;}else {_eg .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_egebc ._abgg );return nil ;};};

// ToPdfObject returns the PDF representation of the function.
func (_gfbb *PdfFunctionType0 )ToPdfObject ()_ged .PdfObject {if _gfbb ._ggef ==nil {_gfbb ._ggef =&_ged .PdfObjectStream {};};_afeefc :=_ged .MakeDict ();_afeefc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ged .MakeInteger (0));_ecfafc :=&_ged .PdfObjectArray {};for _ ,_bdffe :=range _gfbb .Domain {_ecfafc .Append (_ged .MakeFloat (_bdffe ));};_afeefc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ecfafc );_aacfd :=&_ged .PdfObjectArray {};for _ ,_gdgbd :=range _gfbb .Range {_aacfd .Append (_ged .MakeFloat (_gdgbd ));};_afeefc .Set ("\u0052\u0061\u006eg\u0065",_aacfd );_fbfebf :=&_ged .PdfObjectArray {};for _ ,_ecff :=range _gfbb .Size {_fbfebf .Append (_ged .MakeInteger (int64 (_ecff )));};_afeefc .Set ("\u0053\u0069\u007a\u0065",_fbfebf );_afeefc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_ged .MakeInteger (int64 (_gfbb .BitsPerSample )));if _gfbb .Order !=1{_afeefc .Set ("\u004f\u0072\u0064e\u0072",_ged .MakeInteger (int64 (_gfbb .Order )));};_afeefc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ged .MakeInteger (int64 (len (_gfbb ._fcad ))));_gfbb ._ggef .Stream =_gfbb ._fcad ;_gfbb ._ggef .PdfObjectDictionary =_afeefc ;return _gfbb ._ggef ;};func (_bdfd *Image )samplesTrimPadding (_cddd []uint32 )[]uint32 {_ccfce :=_bdfd .ColorComponents *int (_bdfd .Width )*int (_bdfd .Height );if len (_cddd )==_ccfce {return _cddd ;};_ecda :=make ([]uint32 ,_ccfce );_aeadb :=int (_bdfd .Width )*_bdfd .ColorComponents ;var _feece ,_gbgff ,_dbgde ,_ddde int ;_efbcf :=_daf .BytesPerLine (int (_bdfd .Width ),int (_bdfd .BitsPerComponent ),_bdfd .ColorComponents );for _feece =0;_feece < int (_bdfd .Height );_feece ++{_gbgff =_feece *int (_bdfd .Width );_dbgde =_feece *_efbcf ;for _ddde =0;_ddde < _aeadb ;_ddde ++{_ecda [_gbgff +_ddde ]=_cddd [_dbgde +_ddde ];};};return _ecda ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_aage FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_aage .Mask ()|fl .Mask ())};func (_gbgd *PdfReader )newPdfFieldFromIndirectObject (_ggbfg *_ged .PdfIndirectObject ,_gfga *PdfField )(*PdfField ,error ){if _bfegbd ,_acgc :=_gbgd ._accc .GetModelFromPrimitive (_ggbfg ).(*PdfField );_acgc {return _bfegbd ,nil ;};_fcfac ,_bgebe :=_ged .GetDict (_ggbfg );if !_bgebe {return nil ,_d .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_bebe :=NewPdfField ();_bebe ._bagb =_ggbfg ;_bebe ._bagb .PdfObject =_fcfac ;if _dffc ,_gecec :=_ged .GetName (_fcfac .Get ("\u0046\u0054"));_gecec {_bebe .FT =_dffc ;};if _gfga !=nil {_bebe .Parent =_gfga ;};_bebe .T ,_ =_fcfac .Get ("\u0054").(*_ged .PdfObjectString );_bebe .TU ,_ =_fcfac .Get ("\u0054\u0055").(*_ged .PdfObjectString );_bebe .TM ,_ =_fcfac .Get ("\u0054\u004d").(*_ged .PdfObjectString );_bebe .Ff ,_ =_fcfac .Get ("\u0046\u0066").(*_ged .PdfObjectInteger );_bebe .V =_fcfac .Get ("\u0056");_bebe .DV =_fcfac .Get ("\u0044\u0056");_bebe .AA =_fcfac .Get ("\u0041\u0041");_fafa :=_bebe .FT ;if _fafa ==nil &&_gfga !=nil {_fafa =_gfga .FT ;};if _fafa !=nil {switch *_fafa {case "\u0054\u0078":_fgeaa ,_edbaf :=_feag (_fcfac );if _edbaf !=nil {return nil ,_edbaf ;};_fgeaa .PdfField =_bebe ;_bebe ._effe =_fgeaa ;case "\u0043\u0068":_bgbe ,_feae :=_aacd (_fcfac );if _feae !=nil {return nil ,_feae ;};_bgbe .PdfField =_bebe ;_bebe ._effe =_bgbe ;case "\u0042\u0074\u006e":_dedf ,_eggce :=_bfddf (_fcfac );if _eggce !=nil {return nil ,_eggce ;};_dedf .PdfField =_bebe ;_bebe ._effe =_dedf ;case "\u0053\u0069\u0067":_fdaaa ,_dadfb :=_gbgd .newPdfFieldSignatureFromDict (_fcfac );if _dadfb !=nil {return nil ,_dadfb ;};_fdaaa .PdfField =_bebe ;_bebe ._effe =_fdaaa ;default:_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_bebe .FT );return nil ,_fc .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _aefc ,_gfbdg :=_ged .GetName (_fcfac .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_gfbdg {if *_aefc =="\u0057\u0069\u0064\u0067\u0065\u0074"{_gegd ,_gdeb :=_gbgd .newPdfAnnotationFromIndirectObject (_ggbfg );if _gdeb !=nil {return nil ,_gdeb ;};_afee ,_gage :=_gegd .GetContext ().(*PdfAnnotationWidget );if !_gage {return nil ,_fc .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_afee ._fgd =_bebe ;_afee .Parent =_bebe ._bagb ;_bebe .Annotations =append (_bebe .Annotations ,_afee );return _bebe ,nil ;};};_abfaa :=true ;if _cacaf ,_fddaf :=_ged .GetArray (_fcfac .Get ("\u004b\u0069\u0064\u0073"));_fddaf {_gbcbe :=make ([]*_ged .PdfIndirectObject ,0,_cacaf .Len ());for _ ,_ffaeb :=range _cacaf .Elements (){_afdb ,_fgfgf :=_ged .GetIndirect (_ffaeb );if !_fgfgf {_dddd ,_fbggf :=_ged .GetStream (_ffaeb );if _fbggf &&_dddd .PdfObjectDictionary !=nil {_agca ,_cbdf :=_ged .GetNameVal (_dddd .Get ("\u0054\u0079\u0070\u0065"));if _cbdf &&_agca =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_eg .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");continue ;};};return nil ,_fc .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_ebabd ,_gcad :=_ged .GetDict (_afdb );if !_gcad {return nil ,ErrTypeCheck ;};if _abfaa {_abfaa =!_acdcb (_ebabd );};_gbcbe =append (_gbcbe ,_afdb );};for _ ,_dbcd :=range _gbcbe {if _abfaa {_dcda ,_egcb :=_gbgd .newPdfAnnotationFromIndirectObject (_dbcd );if _egcb !=nil {_eg .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_egcb );return nil ,_egcb ;};_ccec ,_edbac :=_dcda ._edg .(*PdfAnnotationWidget );if !_edbac {return nil ,ErrTypeCheck ;};_ccec ._fgd =_bebe ;_bebe .Annotations =append (_bebe .Annotations ,_ccec );}else {_cgfb ,_gcdd :=_gbgd .newPdfFieldFromIndirectObject (_dbcd ,_bebe );if _gcdd !=nil {_eg .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_gcdd );return nil ,_gcdd ;};_bebe .Kids =append (_bebe .Kids ,_cgfb );};};};return _bebe ,nil ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _ged .PdfObject ;B _ged .PdfObject ;};func (_abgeb *DSS )addCRLs (_cadd [][]byte )([]*_ged .PdfObjectStream ,error ){return _abgeb .add (&_abgeb .CRLs ,_abgeb ._dfeda ,_cadd );};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bdfb *PdfColorspaceDeviceGray )ToPdfObject ()_ged .PdfObject {return _ged .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};func (_fdaab fontCommon )isCIDFont ()bool {if _fdaab ._ecaga ==""{_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fdaab );};_ecfaa :=false ;switch _fdaab ._ecaga {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_ecfaa =true ;};_eg .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_ecfaa ,_fdaab );return _ecfaa ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_gbbdc *PdfPageResources )GetFontByName (keyName _ged .PdfObjectName )(_ged .PdfObject ,bool ){if _gbbdc .Font ==nil {return nil ,false ;};_ddfdf ,_gbfg :=_ged .TraceToDirectObject (_gbbdc .Font ).(*_ged .PdfObjectDictionary );if !_gbfg {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_ged .TraceToDirectObject (_gbbdc .Font ));return nil ,false ;};if _baafe :=_ddfdf .Get (keyName );_baafe !=nil {return _baafe ,true ;};return nil ,false ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_agg :=NewPdfAction ();_cdg :=&PdfActionImportData {};_cdg .PdfAction =_agg ;_agg .SetContext (_cdg );return _cdg ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_cabdb *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// IsCID returns true if the underlying font is CID.
func (_fbdfc *PdfFont )IsCID ()bool {return _fbdfc .baseFields ().isCIDFont ()};

// SetContext set the sub annotation (context).
func (_gebff *PdfShading )SetContext (ctx PdfModel ){_gebff ._dbgdea =ctx };func _fdfc (_efedd *_ged .PdfObjectDictionary ,_cabf *fontCommon )(*pdfCIDFontType0 ,error ){if _cabf ._ecaga !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_eg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_cabf );return nil ,_ged .ErrRangeError ;};_ecbae :=_abda (_cabf );_aagg ,_cbdbg :=_ged .GetDict (_efedd .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_cbdbg {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_cabf );return nil ,ErrRequiredAttributeMissing ;};_ecbae .CIDSystemInfo =_aagg ;_ecbae .DW =_efedd .Get ("\u0044\u0057");_ecbae .W =_efedd .Get ("\u0057");_ecbae .DW2 =_efedd .Get ("\u0044\u0057\u0032");_ecbae .W2 =_efedd .Get ("\u0057\u0032");_ecbae ._adcdf =1000.0;if _aecge ,_dbdag :=_ged .GetNumberAsFloat (_ecbae .DW );_dbdag ==nil {_ecbae ._adcdf =_aecge ;};_bggef ,_feac :=_ggbbd (_ecbae .W );if _feac !=nil {return nil ,_feac ;};if _bggef ==nil {_bggef =map[_ffe .CharCode ]float64 {};};_ecbae ._caad =_bggef ;return _ecbae ,nil ;};

// Items returns all children outline items.
func (_febcc *Outline )Items ()[]*OutlineItem {return _febcc .Entries };

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_eggg *PdfColorspaceCalGray )ToPdfObject ()_ged .PdfObject {_fgfd :=&_ged .PdfObjectArray {};_fgfd .Append (_ged .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_edac :=_ged .MakeDict ();if _eggg .WhitePoint !=nil {_edac .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_ged .MakeArray (_ged .MakeFloat (_eggg .WhitePoint [0]),_ged .MakeFloat (_eggg .WhitePoint [1]),_ged .MakeFloat (_eggg .WhitePoint [2])));}else {_eg .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _eggg .BlackPoint !=nil {_edac .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_ged .MakeArray (_ged .MakeFloat (_eggg .BlackPoint [0]),_ged .MakeFloat (_eggg .BlackPoint [1]),_ged .MakeFloat (_eggg .BlackPoint [2])));};_edac .Set ("\u0047\u0061\u006dm\u0061",_ged .MakeFloat (_eggg .Gamma ));_fgfd .Append (_edac );if _eggg ._cfbd !=nil {_eggg ._cfbd .PdfObject =_fgfd ;return _eggg ._cfbd ;};return _fgfd ;};

// A returns the value of the A component of the color.
func (_fgge *PdfColorCalRGB )A ()float64 {return _fgge [0]};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_edeaa *modelManager )GetModelFromPrimitive (primitive _ged .PdfObject )PdfModel {model ,_dbce :=_edeaa ._defb [primitive ];if !_dbce {return nil ;};return model ;};func _adfcda (_eeccb _ged .PdfObject )(*PdfFunctionType3 ,error ){_abdd :=&PdfFunctionType3 {};var _ggeb *_ged .PdfObjectDictionary ;if _ddafc ,_gfcaa :=_eeccb .(*_ged .PdfIndirectObject );_gfcaa {_bdfbff ,_dega :=_ddafc .PdfObject .(*_ged .PdfObjectDictionary );if !_dega {return nil ,_fc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_abdd ._abcec =_ddafc ;_ggeb =_bdfbff ;}else if _acggc ,_aeddf :=_eeccb .(*_ged .PdfObjectDictionary );_aeddf {_ggeb =_acggc ;}else {return nil ,_fc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cbcff ,_bdcbd :=_ged .TraceToDirectObject (_ggeb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ged .PdfObjectArray );if !_bdcbd {_eg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _cbcff .Len ()!=2{_eg .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_cbaeb ,_aaed :=_cbcff .ToFloat64Array ();if _aaed !=nil {return nil ,_aaed ;};_abdd .Domain =_cbaeb ;_cbcff ,_bdcbd =_ged .TraceToDirectObject (_ggeb .Get ("\u0052\u0061\u006eg\u0065")).(*_ged .PdfObjectArray );if _bdcbd {if _cbcff .Len ()< 0||_cbcff .Len ()%2!=0{return nil ,_fc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_cbfc ,_gcagf :=_cbcff .ToFloat64Array ();if _gcagf !=nil {return nil ,_gcagf ;};_abdd .Range =_cbfc ;};_cbcff ,_bdcbd =_ged .TraceToDirectObject (_ggeb .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_ged .PdfObjectArray );if !_bdcbd {_eg .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_fc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_abdd .Functions =[]PdfFunction {};for _ ,_fddcc :=range _cbcff .Elements (){_acaff ,_eagc :=_gecdb (_fddcc );if _eagc !=nil {return nil ,_eagc ;};_abdd .Functions =append (_abdd .Functions ,_acaff );};_cbcff ,_bdcbd =_ged .TraceToDirectObject (_ggeb .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_ged .PdfObjectArray );if !_bdcbd {_eg .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_afeed ,_aaed :=_cbcff .ToFloat64Array ();if _aaed !=nil {return nil ,_aaed ;};_abdd .Bounds =_afeed ;if len (_abdd .Bounds )!=len (_abdd .Functions )-1{_eg .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_abdd .Bounds ),len (_abdd .Functions ));return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbcff ,_bdcbd =_ged .TraceToDirectObject (_ggeb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_ged .PdfObjectArray );if !_bdcbd {_eg .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_cbea ,_aaed :=_cbcff .ToFloat64Array ();if _aaed !=nil {return nil ,_aaed ;};_abdd .Encode =_cbea ;if len (_abdd .Encode )!=2*len (_abdd .Functions ){_eg .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_abdd .Encode ),len (_abdd .Functions ));return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _abdd ,nil ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_cff .PSProgram ;_afbe *_cff .PSExecutor ;_cbgg []byte ;_dbad *_ged .PdfObjectStream ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_edg PdfModel ;Rect _ged .PdfObject ;Contents _ged .PdfObject ;P _ged .PdfObject ;NM _ged .PdfObject ;M _ged .PdfObject ;F _ged .PdfObject ;AP _ged .PdfObject ;AS _ged .PdfObject ;Border _ged .PdfObject ;C _ged .PdfObject ;StructParent _ged .PdfObject ;OC _ged .PdfObject ;_efb *_ged .PdfIndirectObject ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_bfeda *PdfPageResources )SetXObjectFormByName (keyName _ged .PdfObjectName ,xform *XObjectForm )error {_gabea :=xform .ToPdfObject ().(*_ged .PdfObjectStream );_ebbcc :=_bfeda .SetXObjectByName (keyName ,_gabea );return _ebbcc ;};

// Encoder returns the font's text encoder.
func (_fedda *pdfFontSimple )Encoder ()_ffe .TextEncoder {if _fedda ._efda !=nil {return _fedda ._efda ;};if _fedda ._fbgad !=nil {return _fedda ._fbgad ;};_cacgc ,_ :=_ffe .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );return _cacgc ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_cdeff *PdfPage )GetPageAsIndirectObject ()*_ged .PdfIndirectObject {return _cdeff ._egef };func (_gffc *DSS )generateHashMap (_efed []*_ged .PdfObjectStream )(map[string ]*_ged .PdfObjectStream ,error ){_cacg :=map[string ]*_ged .PdfObjectStream {};for _ ,_cfdcg :=range _efed {_acdcaa ,_ffee :=_ged .DecodeStream (_cfdcg );if _ffee !=nil {return nil ,_ffee ;};_fefg ,_ffee :=_fegcd (_acdcaa );if _ffee !=nil {return nil ,_ffee ;};_cacg [string (_fefg )]=_cfdcg ;};return _cacg ,nil ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _aa .ReadSeeker )(*PdfFont ,error ){const _ebbcf =_ffe .CharCode (32);const _edgf =_ffe .CharCode (255);_bced ,_ffgag :=_b .ReadAll (r );if _ffgag !=nil {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_ffgag );return nil ,_ffgag ;};_gbeb ,_ffgag :=_aea .TtfParse (_bd .NewReader (_bced ));if _ffgag !=nil {_eg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_ffgag );return nil ,_ffgag ;};_gffbe :=&pdfFontSimple {_aagc :make (map[_ffe .CharCode ]float64 ),fontCommon :fontCommon {_ecaga :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_gffbe ._efda =_ffe .NewWinAnsiEncoder ();_gffbe ._dgefe =_gbeb .PostScriptName ;_gffbe .FirstChar =_ged .MakeInteger (int64 (_ebbcf ));_gffbe .LastChar =_ged .MakeInteger (int64 (_edgf ));_ecdff :=1000.0/float64 (_gbeb .UnitsPerEm );if len (_gbeb .Widths )<=0{return nil ,_fc .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_aggdd :=_ecdff *float64 (_gbeb .Widths [0]);_fbba :=make ([]float64 ,0,_edgf -_ebbcf +1);for _fecffa :=_ebbcf ;_fecffa <=_edgf ;_fecffa ++{_agcb ,_efgcb :=_gffbe .Encoder ().CharcodeToRune (_fecffa );if !_efgcb {_eg .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_fecffa );_fbba =append (_fbba ,_aggdd );continue ;};_dgbb ,_egad :=_gbeb .Chars [_agcb ];if !_egad {_eg .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_fbba =append (_fbba ,_aggdd );continue ;};_deccd :=_ecdff *float64 (_gbeb .Widths [_dgbb ]);_fbba =append (_fbba ,_deccd );};_gffbe .Widths =_ged .MakeIndirectObject (_ged .MakeArrayFromFloats (_fbba ));if len (_fbba )< int (_edgf -_ebbcf +1){_eg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_fbba ),255-32+1);return nil ,_ged .ErrRangeError ;};for _ebff :=_ebbcf ;_ebff <=_edgf ;_ebff ++{_gffbe ._aagc [_ebff ]=_fbba [_ebff -_ebbcf ];};_gffbe .Encoding =_ged .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_fafd :=&PdfFontDescriptor {};_fafd .FontName =_ged .MakeName (_gbeb .PostScriptName );_fafd .Ascent =_ged .MakeFloat (_ecdff *float64 (_gbeb .TypoAscender ));_fafd .Descent =_ged .MakeFloat (_ecdff *float64 (_gbeb .TypoDescender ));_fafd .CapHeight =_ged .MakeFloat (_ecdff *float64 (_gbeb .CapHeight ));_fafd .FontBBox =_ged .MakeArrayFromFloats ([]float64 {_ecdff *float64 (_gbeb .Xmin ),_ecdff *float64 (_gbeb .Ymin ),_ecdff *float64 (_gbeb .Xmax ),_ecdff *float64 (_gbeb .Ymax )});_fafd .ItalicAngle =_ged .MakeFloat (_gbeb .ItalicAngle );_fafd .MissingWidth =_ged .MakeFloat (_ecdff *float64 (_gbeb .Widths [0]));_fbfag ,_ffgag :=_ged .MakeStream (_bced ,_ged .NewFlateEncoder ());if _ffgag !=nil {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_ffgag );return nil ,_ffgag ;};_fbfag .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_ged .MakeInteger (int64 (len (_bced ))));_fafd .FontFile2 =_fbfag ;if _gbeb .Bold {_fafd .StemV =_ged .MakeInteger (120);}else {_fafd .StemV =_ged .MakeInteger (70);};_fgaee :=_facced ;if _gbeb .IsFixedPitch {_fgaee |=_faaac ;};if _gbeb .ItalicAngle !=0{_fgaee |=_fdea ;};_fafd .Flags =_ged .MakeInteger (int64 (_fgaee ));_gffbe ._dfede =_fafd ;_fbfce :=&PdfFont {_gfdbg :_gffbe };return _fbfce ,nil ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_fffg :=NewPdfAction ();_dgg :=&PdfActionGoTo3DView {};_dgg .PdfAction =_fffg ;_fffg .SetContext (_dgg );return _dgg ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_dfdf *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_adage *PdfFieldButton )GetType ()ButtonType {_fdgbe :=ButtonTypeCheckbox ;if _adage .Ff !=nil {if (uint32 (*_adage .Ff )&FieldFlagPushbutton .Mask ())> 0{_fdgbe =ButtonTypePush ;}else if (uint32 (*_adage .Ff )&FieldFlagRadio .Mask ())> 0{_fdgbe =ButtonTypeRadio ;};};return _fdgbe ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _c .Time ){_gdabg .Lock ();defer _gdabg .Unlock ();_edaac =modifiedDate ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_bga :=NewPdfAnnotation ();_fbca :=&PdfAnnotationRichMedia {};_fbca .PdfAnnotation =_bga ;_bga .SetContext (_fbca );return _fbca ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_eagf *PdfField )IsTerminal ()bool {return len (_eagf .Kids )==0};var _ _ged .PdfObject =&pdfSignDictionary {};

// Evaluate runs the function on the passed in slice and returns the results.
func (_efebfg *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_eg .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_becfea :=[]float64 {0.0};if _efebfg .C0 !=nil {_becfea =_efebfg .C0 ;};_bfba :=[]float64 {1.0};if _efebfg .C1 !=nil {_bfba =_efebfg .C1 ;};var _gcaf []float64 ;for _gafc :=0;_gafc < len (_becfea );_gafc ++{_cdee :=_becfea [_gafc ]+_af .Pow (x [0],_efebfg .N )*(_bfba [_gafc ]-_becfea [_gafc ]);_gcaf =append (_gcaf ,_cdee );};return _gcaf ,nil ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// String returns a string describing the font descriptor.
func (_dcaebg *PdfFontDescriptor )String ()string {var _adbee []string ;if _dcaebg .FontName !=nil {_adbee =append (_adbee ,_dcaebg .FontName .String ());};if _dcaebg .FontFamily !=nil {_adbee =append (_adbee ,_dcaebg .FontFamily .String ());};if _dcaebg .fontFile !=nil {_adbee =append (_adbee ,_dcaebg .fontFile .String ());};if _dcaebg ._beec !=nil {_adbee =append (_adbee ,_dcaebg ._beec .String ());};_adbee =append (_adbee ,_d .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_dcaebg .FontFile3 !=nil ));return _d .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_bf .Join (_adbee ,"\u002c\u0020"));};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ddgg *PdfColorspaceSpecialPattern )ToPdfObject ()_ged .PdfObject {if _ddgg .UnderlyingCS ==nil {return _ged .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_efabe :=_ged .MakeArray (_ged .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_efabe .Append (_ddgg .UnderlyingCS .ToPdfObject ());if _ddgg ._gcaea !=nil {_ddgg ._gcaea .PdfObject =_efabe ;return _ddgg ._gcaea ;};return _efabe ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_bgdbe *PdfPageResources )GetColorspaceByName (keyName _ged .PdfObjectName )(PdfColorspace ,bool ){_gccdd ,_bdec :=_bgdbe .GetColorspaces ();if _bdec !=nil {_eg .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bdec );return nil ,false ;};if _gccdd ==nil {return nil ,false ;};_fggf ,_aaag :=_gccdd .Colorspaces [string (keyName )];if !_aaag {return nil ,false ;};return _fggf ,true ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _ged .PdfObject ;Dest _ged .PdfObject ;H _ged .PdfObject ;PA _ged .PdfObject ;QuadPoints _ged .PdfObject ;BS _ged .PdfObject ;_egfd *PdfAction ;_edf *PdfReader ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_facb *PdfField )GetContainingPdfObject ()_ged .PdfObject {return _facb ._bagb };func (_bge *PdfReader )newPdfActionThreadFromDict (_ffa *_ged .PdfObjectDictionary )(*PdfActionThread ,error ){_gcdc ,_bcc :=_dge (_ffa .Get ("\u0046"));if _bcc !=nil {return nil ,_bcc ;};return &PdfActionThread {D :_ffa .Get ("\u0044"),B :_ffa .Get ("\u0042"),F :_gcdc },nil ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_eacc *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_ged .PdfObject )(PdfColor ,error ){if len (objects )!=_eacc .GetNumComponents (){return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_egcf ,_bfff :=_ged .GetNumbersAsFloat (objects );if _bfff !=nil {return nil ,_bfff ;};return _eacc .ColorFromFloats (_egcf );};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// ToPdfObject implements interface PdfModel.
func (_dfc *PdfAnnotationWatermark )ToPdfObject ()_ged .PdfObject {_dfc .PdfAnnotation .ToPdfObject ();_aeada :=_dfc ._efb ;_aecd :=_aeada .PdfObject .(*_ged .PdfObjectDictionary );_aecd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));_aecd .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_dfc .FixedPrint );return _aeada ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_cbcaf *PdfFont )SubsetRegistered ()error {switch _acgdg :=_cbcaf ._gfdbg .(type ){case *pdfFontType0 :_bdca :=_acgdg .subsetRegistered ();if _bdca !=nil {_eg .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_bdca );return _bdca ;};if _acgdg ._efbfc !=nil {if _acgdg ._ddga !=nil {_acgdg ._ddga .ToPdfObject ();};_acgdg .ToPdfObject ();};default:_eg .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_acgdg );};return nil ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_fac :=&PdfAnnotation {};_fac ._efb =_ged .MakeIndirectObject (_ged .MakeDict ());return _fac ;};func (_fdde *PdfReader )newPdfAnnotationHighlightFromDict (_cbg *_ged .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_ddfc :=PdfAnnotationHighlight {};_eece ,_bbee :=_fdde .newPdfAnnotationMarkupFromDict (_cbg );if _bbee !=nil {return nil ,_bbee ;};_ddfc .PdfAnnotationMarkup =_eece ;_ddfc .QuadPoints =_cbg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_ddfc ,nil ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_abbcb *PdfWriter )SetDocInfo (info *PdfInfo ){if _abbcb .hasObject (_abbcb ._dceeg ){delete (_abbcb ._fdbab ,_abbcb ._dceeg );delete (_abbcb ._gabeg ,_abbcb ._dceeg );for _acac ,_ededa :=range _abbcb ._fedfa {if _ededa ==_abbcb ._dceeg {copy (_abbcb ._fedfa [_acac :],_abbcb ._fedfa [_acac +1:]);_abbcb ._fedfa [len (_abbcb ._fedfa )-1]=nil ;_abbcb ._fedfa =_abbcb ._fedfa [:len (_abbcb ._fedfa )-1];break ;};};};_bbba :=_ged .PdfIndirectObject {};_bbba .PdfObject =info .ToPdfObject ();_abbcb ._dceeg =&_bbba ;_abbcb .addObject (&_bbba );};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_gdae *Image )AlphaMap (mapFunc AlphaMapFunc ){for _fedca ,_cfgd :=range _gdae ._fgaab {_gdae ._fgaab [_fedca ]=mapFunc (_cfgd );};};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_ged .PdfObjectString ;Q *_ged .PdfObjectInteger ;DS *_ged .PdfObjectString ;RV _ged .PdfObject ;MaxLen *_ged .PdfObjectInteger ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_acgf *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_fc .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");};_aabc ,_faea :=_daf .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._fgaab ,img ._caaed );if _faea !=nil {return img ,_faea ;};_faee ,_faea :=_daf .GrayConverter .Convert (_aabc );if _faea !=nil {return img ,_faea ;};return _dfcbe (_faee .Base ()),nil ;};

// ToPdfObject implements interface PdfModel.
func (_fddba *PdfAnnotationPopup )ToPdfObject ()_ged .PdfObject {_fddba .PdfAnnotation .ToPdfObject ();_ecac :=_fddba ._efb ;_cbae :=_ecac .PdfObject .(*_ged .PdfObjectDictionary );_cbae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0050\u006f\u0070u\u0070"));_cbae .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fddba .Parent );_cbae .SetIfNotNil ("\u004f\u0070\u0065\u006e",_fddba .Open );return _ecac ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_gaf *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _fc .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");};_ccfb :=field .V ;if _ccfb ==nil {return _fc .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_bcee :=pageNum -1;if _bcee < 0||_bcee > len (_gaf ._feeg )-1{return _d .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_gccc :=_gaf .Reader .PageList [_bcee ];field .P =_gccc .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_ged .MakeString (_d .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_gccc .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _gaf ._acgg ==_gaf ._add .AcroForm {_gaf ._acgg =_gaf .Reader .AcroForm ;};_ffcde :=_gaf ._acgg ;if _ffcde ==nil {_ffcde =NewPdfAcroForm ();};_ffcde .SigFlags =_ged .MakeInteger (3);_gccgc :=append (_ffcde .AllFields (),field .PdfField );_ffcde .Fields =&_gccgc ;_gaf .ReplaceAcroForm (_ffcde );_gaf .UpdatePage (_gccc );_gaf ._feeg [_bcee ]=_gccc ;return nil ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_ccfeb *Image )ToGoImage ()(_faf .Image ,error ){_eg .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_bdbgb ,_daaba :=_daf .NewImage (int (_ccfeb .Width ),int (_ccfeb .Height ),int (_ccfeb .BitsPerComponent ),_ccfeb .ColorComponents ,_ccfeb .Data ,_ccfeb ._fgaab ,_ccfeb ._caaed );if _daaba !=nil {return nil ,_daaba ;};return _bdbgb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ggbc *PdfAnnotationMovie )ToPdfObject ()_ged .PdfObject {_ggbc .PdfAnnotation .ToPdfObject ();_dfgg :=_ggbc ._efb ;_gdb :=_dfgg .PdfObject .(*_ged .PdfObjectDictionary );_gdb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u004d\u006f\u0076i\u0065"));_gdb .SetIfNotNil ("\u0054",_ggbc .T );_gdb .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_ggbc .Movie );_gdb .SetIfNotNil ("\u0041",_ggbc .A );return _dfgg ;};func (_gbfa *DSS )add (_cfbec *[]*_ged .PdfObjectStream ,_cacgd map[string ]*_ged .PdfObjectStream ,_gfgg [][]byte )([]*_ged .PdfObjectStream ,error ){_efga :=make ([]*_ged .PdfObjectStream ,0,len (_gfgg ));for _ ,_feefd :=range _gfgg {_fdbf ,_debe :=_fegcd (_feefd );if _debe !=nil {return nil ,_debe ;};_ebdac ,_gbabd :=_cacgd [string (_fdbf )];if !_gbabd {_ebdac ,_debe =_ged .MakeStream (_feefd ,_ged .NewRawEncoder ());if _debe !=nil {return nil ,_debe ;};_cacgd [string (_fdbf )]=_ebdac ;*_cfbec =append (*_cfbec ,_ebdac );};_efga =append (_efga ,_ebdac );};return _efga ,nil ;};func (_cdbb *PdfReader )newPdfActionMovieFromDict (_afb *_ged .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_afb .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_afb .Get ("\u0054"),Operation :_afb .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// A returns the value of the A component of the color.
func (_cbbf *PdfColorLab )A ()float64 {return _cbbf [1]};func _bacge (_abgea *_ged .PdfIndirectObject ,_gecb *_ged .PdfObjectDictionary )(*DSS ,error ){if _abgea ==nil {_abgea =_ged .MakeIndirectObject (nil );};_abgea .PdfObject =_ged .MakeDict ();_eaadf :=map[string ]*VRI {};if _dgeed ,_cdfb :=_ged .GetDict (_gecb .Get ("\u0056\u0052\u0049"));_cdfb {for _ ,_dccae :=range _dgeed .Keys (){if _efebf ,_fecc :=_ged .GetDict (_dgeed .Get (_dccae ));_fecc {_eaadf [_bf .ToUpper (_dccae .String ())]=_accd (_efebf );};};};return &DSS {Certs :_afecc (_gecb .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_afecc (_gecb .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_afecc (_gecb .Get ("\u0043\u0052\u004c\u0073")),VRI :_eaadf ,_gac :_abgea },nil ;};func (_gbdb fontCommon )fontFlags ()int {if _gbdb ._dfede ==nil {return 0;};return _gbdb ._dfede ._cfaef ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _ged .PdfObject ;Flags _ged .PdfObject ;};func (_ffdbd *pdfFontType0 )bytesToCharcodes (_edbeb []byte )([]_ffe .CharCode ,bool ){if _ffdbd ._ffcaa ==nil {return nil ,false ;};_eeff ,_deeab :=_ffdbd ._ffcaa .BytesToCharcodes (_edbeb );if !_deeab {return nil ,false ;};_fdeag :=make ([]_ffe .CharCode ,len (_eeff ));for _baafgd ,_eacca :=range _eeff {_fdeag [_baafgd ]=_ffe .CharCode (_eacca );};return _fdeag ,true ;};func _adea (_gecbg _ged .PdfObject ,_acgfc bool )(*PdfFont ,error ){_gefce ,_fgacg ,_ebbf :=_agaa (_gecbg );if _ebbf !=nil {if _ebbf ==ErrType3FontNotSupported ||_ebbf ==ErrType1CFontNotSupported {_cdace ,_fefc :=_ceffd (_gefce ,_fgacg ,nil );if _fefc !=nil {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_fgacg ,_fefc );return nil ,_ebbf ;};return &PdfFont {_gfdbg :_cdace },_ebbf ;};return nil ,_ebbf ;};_ceaaf :=&PdfFont {};switch _fgacg ._ecaga {case "\u0054\u0079\u0070e\u0030":if !_acgfc {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fgacg );return nil ,_fc .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_cbcf ,_dbbed :=_gebcb (_gefce ,_fgacg );if _dbbed !=nil {_eg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fgacg ,_dbbed );return nil ,_dbbed ;};_ceaaf ._gfdbg =_cbcf ;case "\u0054\u0079\u0070e\u0031","\u0054\u0079\u0070e\u0033","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _ccca *pdfFontSimple ;_caga ,_edbgf :=_aea .NewStdFontByName (_aea .StdFontName (_fgacg ._dgefe ));if _edbgf {_gcecf :=_fged (_caga );_ceaaf ._gfdbg =&_gcecf ;_edgd :=_ged .TraceToDirectObject (_gcecf .ToPdfObject ());_fdacg ,_bbbe ,_cafcb :=_agaa (_edgd );if _cafcb !=nil {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_fgacg ,_gcecf );return nil ,_cafcb ;};for _ ,_fdcc :=range _gefce .Keys (){_fdacg .Set (_fdcc ,_gefce .Get (_fdcc ));};_ccca ,_cafcb =_ceffd (_fdacg ,_bbbe ,_gcecf ._fbgad );if _cafcb !=nil {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_fgacg ,_gcecf );return nil ,_cafcb ;};_ccca ._aagc =_gcecf ._aagc ;_ccca ._bged =_gcecf ._bged ;}else {_ccca ,_ebbf =_ceffd (_gefce ,_fgacg ,nil );if _ebbf !=nil {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_fgacg ,_ebbf );return nil ,_ebbf ;};};_ebbf =_ccca .addEncoding ();if _ebbf !=nil {return nil ,_ebbf ;};if _edbgf {_ccca .updateStandard14Font ();};if _edbgf &&_ccca ._efda ==nil &&_ccca ._fbgad ==nil {_eg .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ccca );_eg .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_caga );};if len (_ccca ._aagc )==0{_eg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_ccca );};_ceaaf ._gfdbg =_ccca ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_fgbff ,_fgecc :=_fdfc (_gefce ,_fgacg );if _fgecc !=nil {_eg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_fgecc );return nil ,_fgecc ;};_ceaaf ._gfdbg =_fgbff ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_cbaag ,_gacf :=_cgcg (_gefce ,_fgacg );if _gacf !=nil {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fgacg ,_gacf );return nil ,_gacf ;};_ceaaf ._gfdbg =_cbaag ;default:_eg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_fgacg );return nil ,_d .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fgacg );};return _ceaaf ,nil ;};func (_bcgb *PdfReader )newPdfAnnotationStrikeOut (_dbbgc *_ged .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_bcdaf :=PdfAnnotationStrikeOut {};_eaac ,_dgec :=_bcgb .newPdfAnnotationMarkupFromDict (_dbbgc );if _dgec !=nil {return nil ,_dgec ;};_bcdaf .PdfAnnotationMarkup =_eaac ;_bcdaf .QuadPoints =_dbbgc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bcdaf ,nil ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_fecff :=&PdfBorderStyle {};return _fecff };

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_cbdbb *PdfPage )ToPdfObject ()_ged .PdfObject {_dbcc :=_cbdbb ._egef ;_cbdbb .GetPageDict ();return _dbcc ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_dfbdg *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _ged .GetNumberAsFloat (_dfbdg .Ascent );};func (_adaf *PdfReader )newPdfAnnotationRedactFromDict (_dgcf *_ged .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_gddg :=PdfAnnotationRedact {};_fcbf ,_bbdb :=_adaf .newPdfAnnotationMarkupFromDict (_dgcf );if _bbdb !=nil {return nil ,_bbdb ;};_gddg .PdfAnnotationMarkup =_fcbf ;_gddg .QuadPoints =_dgcf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_gddg .IC =_dgcf .Get ("\u0049\u0043");_gddg .RO =_dgcf .Get ("\u0052\u004f");_gddg .OverlayText =_dgcf .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_gddg .Repeat =_dgcf .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_gddg .DA =_dgcf .Get ("\u0044\u0041");_gddg .Q =_dgcf .Get ("\u0051");return &_gddg ,nil ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_ebcda *PdfFont )CharcodesToStrings (charcodes []_ffe .CharCode )([]string ,int ,int ){_feec :=_ebcda .baseFields ();_abdc :=make ([]string ,0,len (charcodes ));_cada :=0;for _ ,_gfcc :=range charcodes {if _feec ._ggdea !=nil {if _cegf ,_cgcb :=_feec ._ggdea .CharcodeToUnicode (_ec .CharCode (_gfcc ));_cgcb {_abdc =append (_abdc ,_cegf );continue ;};};_agbc :=_ebcda .Encoder ();if _agbc !=nil {if _cfafe ,_cgacg :=_agbc .CharcodeToRune (_gfcc );_cgacg {_abdc =append (_abdc ,string (_cfafe ));continue ;};};_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_gfcc ,charcodes ,_feec .isCIDFont (),_ebcda ,_agbc );_cada ++;_abdc =append (_abdc ,_ec .MissingCodeString );};if _cada !=0{_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_cada ,_ebcda );};return _abdc ,len (_abdc ),_cada ;};func (_bfbda *pdfCIDFontType2 )baseFields ()*fontCommon {return &_bfbda .fontCommon };

// K returns the value of the key component of the color.
func (_gegf *PdfColorDeviceCMYK )K ()float64 {return _gegf [3]};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _ged .PdfObject ;Volume _ged .PdfObject ;Synchronous _ged .PdfObject ;Repeat _ged .PdfObject ;Mix _ged .PdfObject ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_fgaab []byte ;_caaed []float64 ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ged .PdfObject ;};func _dcebe (_fcbb *_ged .PdfObjectDictionary )(*PdfTilingPattern ,error ){_ebfbf :=&PdfTilingPattern {};_cfaad :=_fcbb .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _cfaad ==nil {_eg .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gedfc ,_gbfbf :=_cfaad .(*_ged .PdfObjectInteger );if !_gbfbf {_eg .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_cfaad );return nil ,_ged .ErrTypeError ;};_ebfbf .PaintType =_gedfc ;_cfaad =_fcbb .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _cfaad ==nil {_eg .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_dbec ,_gbfbf :=_cfaad .(*_ged .PdfObjectInteger );if !_gbfbf {_eg .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cfaad );return nil ,_ged .ErrTypeError ;};_ebfbf .TilingType =_dbec ;_cfaad =_fcbb .Get ("\u0042\u0042\u006f\u0078");if _cfaad ==nil {_eg .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cfaad =_ged .TraceToDirectObject (_cfaad );_ecgeb ,_gbfbf :=_cfaad .(*_ged .PdfObjectArray );if !_gbfbf {_eg .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cfaad );return nil ,_ged .ErrTypeError ;};_bfcea ,_ffdg :=NewPdfRectangle (*_ecgeb );if _ffdg !=nil {_eg .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_ffdg );return nil ,_ffdg ;};_ebfbf .BBox =_bfcea ;_cfaad =_fcbb .Get ("\u0058\u0053\u0074e\u0070");if _cfaad ==nil {_eg .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_abccg ,_ffdg :=_ged .GetNumberAsFloat (_cfaad );if _ffdg !=nil {_eg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_abccg );return nil ,_ffdg ;};_ebfbf .XStep =_ged .MakeFloat (_abccg );_cfaad =_fcbb .Get ("\u0059\u0053\u0074e\u0070");if _cfaad ==nil {_eg .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_eebec ,_ffdg :=_ged .GetNumberAsFloat (_cfaad );if _ffdg !=nil {_eg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_eebec );return nil ,_ffdg ;};_ebfbf .YStep =_ged .MakeFloat (_eebec );_cfaad =_fcbb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _cfaad ==nil {_eg .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fcbb ,_gbfbf =_ged .TraceToDirectObject (_cfaad ).(*_ged .PdfObjectDictionary );if !_gbfbf {return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cfaad );};_dbcf ,_ffdg :=NewPdfPageResourcesFromDict (_fcbb );if _ffdg !=nil {return nil ,_ffdg ;};_ebfbf .Resources =_dbcf ;if _ebfcd :=_fcbb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_ebfcd !=nil {_ccggc ,_cbcga :=_ebfcd .(*_ged .PdfObjectArray );if !_cbcga {_eg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ebfcd );return nil ,_ged .ErrTypeError ;};_ebfbf .Matrix =_ccggc ;};return _ebfbf ,nil ;};

// Width returns the width of `rect`.
func (_ccdbc *PdfRectangle )Width ()float64 {return _af .Abs (_ccdbc .Urx -_ccdbc .Llx )};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _ged .PdfObject ;PreserveRB _ged .PdfObject ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_gcaea *_ged .PdfIndirectObject ;};func (_ccdd Image )getBase ()_daf .ImageBase {return _daf .NewImageBase (int (_ccdd .Width ),int (_ccdd .Height ),int (_ccdd .BitsPerComponent ),_ccdd .ColorComponents ,_ccdd .Data ,_ccdd ._fgaab ,_ccdd ._caaed );};

// GetSubFilter returns SubFilter value or empty string.
func (_bcabd *pdfSignDictionary )GetSubFilter ()string {_aefd :=_bcabd .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _aefd ==nil {return "";};if _dace ,_ddcd :=_ged .GetNameVal (_aefd );_ddcd {return _dace ;};return "";};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_cagea *PdfWriter )SetPageLabels (pageLabels _ged .PdfObject )error {if pageLabels ==nil {return nil ;};_eg .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");_cagea ._ffceb .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _cagea .addObjects (pageLabels );};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_aaddd *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_faff :=NewPdfAnnotation ();_afbd :=&PdfAnnotationPrinterMark {};_afbd .PdfAnnotation =_faff ;_faff .SetContext (_afbd );return _afbd ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_dcce *PdfColorCalGray )GetNumComponents ()int {return 1};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_abd :=NewPdfAction ();_ee :=&PdfActionThread {};_ee .PdfAction =_abd ;_abd .SetContext (_ee );return _ee ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_fagbf *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _fagbf ._bcbc .(*PdfTilingPattern );};

// ToPdfObject implements interface PdfModel.
func (_cae *PdfActionLaunch )ToPdfObject ()_ged .PdfObject {_cae .PdfAction .ToPdfObject ();_eba :=_cae ._ebd ;_ece :=_eba .PdfObject .(*_ged .PdfObjectDictionary );_ece .SetIfNotNil ("\u0053",_ged .MakeName (string (ActionTypeLaunch )));if _cae .F !=nil {_ece .Set ("\u0046",_cae .F .ToPdfObject ());};_ece .SetIfNotNil ("\u0057\u0069\u006e",_cae .Win );_ece .SetIfNotNil ("\u004d\u0061\u0063",_cae .Mac );_ece .SetIfNotNil ("\u0055\u006e\u0069\u0078",_cae .Unix );_ece .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_cae .NewWindow );return _eba ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_cbcc *PdfFieldText )ToPdfObject ()_ged .PdfObject {_cbcc .PdfField .ToPdfObject ();_dfba :=_cbcc ._bagb ;_ffda :=_dfba .PdfObject .(*_ged .PdfObjectDictionary );_ffda .Set ("\u0046\u0054",_ged .MakeName ("\u0054\u0078"));if _cbcc .DA !=nil {_ffda .Set ("\u0044\u0041",_cbcc .DA );};if _cbcc .Q !=nil {_ffda .Set ("\u0051",_cbcc .Q );};if _cbcc .DS !=nil {_ffda .Set ("\u0044\u0053",_cbcc .DS );};if _cbcc .RV !=nil {_ffda .Set ("\u0052\u0056",_cbcc .RV );};if _cbcc .MaxLen !=nil {_ffda .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_cbcc .MaxLen );};return _dfba ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// ColorToRGB converts an Indexed color to an RGB color.
func (_baag *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _baag .Base ==nil {return nil ,_fc .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _baag .Base .ColorToRGB (color );};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_bagb :_ged .MakeIndirectObject (_ged .MakeDict ())}};func (_gga *PdfAnnotationMarkup )appendToPdfDictionary (_abea *_ged .PdfObjectDictionary ){_abea .SetIfNotNil ("\u0054",_gga .T );if _gga .Popup !=nil {_abea .Set ("\u0050\u006f\u0070u\u0070",_gga .Popup .ToPdfObject ());};_abea .SetIfNotNil ("\u0043\u0041",_gga .CA );_abea .SetIfNotNil ("\u0052\u0043",_gga .RC );_abea .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_gga .CreationDate );_abea .SetIfNotNil ("\u0049\u0052\u0054",_gga .IRT );_abea .SetIfNotNil ("\u0053\u0075\u0062\u006a",_gga .Subj );_abea .SetIfNotNil ("\u0052\u0054",_gga .RT );_abea .SetIfNotNil ("\u0049\u0054",_gga .IT );_abea .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_gga .ExData );};

// GetCharMetrics returns the char metrics for character code `code`.
func (_addcf pdfCIDFontType2 )GetCharMetrics (code _ffe .CharCode )(_aea .CharMetrics ,bool ){if _bfbfd ,_dbdac :=_addcf ._bafcc [code ];_dbdac {return _aea .CharMetrics {Wx :_bfbfd },true ;};_aebag :=rune (code );_defdg ,_gdcd :=_addcf ._bfaf [_aebag ];if !_gdcd {_defdg =int (_addcf ._bafe );};return _aea .CharMetrics {Wx :float64 (_defdg )},true ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_gfgb *Image )ConvertToBinary ()error {if _gfgb .ColorComponents ==1&&_gfgb .BitsPerComponent ==1{return nil ;};_eadb ,_gdcbd :=_gfgb .ToGoImage ();if _gdcbd !=nil {return _gdcbd ;};_dcaa ,_gdcbd :=_daf .MonochromeConverter .Convert (_eadb );if _gdcbd !=nil {return _gdcbd ;};_gfgb .BitsPerComponent =1;_gfgb .ColorComponents =1;_gfgb .Data =_dcaa .Base ().Data ;return nil ;};var (CourierName =_aea .CourierName ;CourierBoldName =_aea .CourierBoldName ;CourierObliqueName =_aea .CourierObliqueName ;CourierBoldObliqueName =_aea .CourierBoldObliqueName ;HelveticaName =_aea .HelveticaName ;HelveticaBoldName =_aea .HelveticaBoldName ;HelveticaObliqueName =_aea .HelveticaObliqueName ;HelveticaBoldObliqueName =_aea .HelveticaBoldObliqueName ;SymbolName =_aea .SymbolName ;ZapfDingbatsName =_aea .ZapfDingbatsName ;TimesRomanName =_aea .TimesRomanName ;TimesBoldName =_aea .TimesBoldName ;TimesItalicName =_aea .TimesItalicName ;TimesBoldItalicName =_aea .TimesBoldItalicName ;);func (_fcbaf *PdfReader )buildPageList (_cbecg *_ged .PdfIndirectObject ,_cebac *_ged .PdfIndirectObject ,_ebfgc map[_ged .PdfObject ]struct{})error {if _cbecg ==nil {return nil ;};if _ ,_dbef :=_ebfgc [_cbecg ];_dbef {_eg .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_cbecg .ObjectNumber );return nil ;};_ebfgc [_cbecg ]=struct{}{};_fbeacg ,_fcdd :=_cbecg .PdfObject .(*_ged .PdfObjectDictionary );if !_fcdd {return _fc .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_cfbc ,_fcdd :=(*_fbeacg ).Get ("\u0054\u0079\u0070\u0065").(*_ged .PdfObjectName );if !_fcdd {if _fbeacg .Get ("\u004b\u0069\u0064\u0073")==nil {return _fc .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_eg .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");_cfbc =_ged .MakeName ("\u0050\u0061\u0067e\u0073");_fbeacg .Set ("\u0054\u0079\u0070\u0065",_cfbc );};_eg .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_cfbc ,_cbecg );if *_cfbc =="\u0050\u0061\u0067\u0065"{_dfdac ,_adbae :=_fcbaf .newPdfPageFromDict (_fbeacg );if _adbae !=nil {return _adbae ;};_dfdac .setContainer (_cbecg );if _cebac !=nil {_fbeacg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cebac );};_fcbaf ._deeb =append (_fcbaf ._deeb ,_cbecg );_fcbaf .PageList =append (_fcbaf .PageList ,_dfdac );return nil ;};if *_cfbc !="\u0050\u0061\u0067e\u0073"{_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_cfbc );return _fc .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");};if _cebac !=nil {_fbeacg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cebac );};if !_fcbaf ._dbfdg {_edbdf :=_fcbaf .traverseObjectData (_cbecg );if _edbdf !=nil {return _edbdf ;};};_cafca ,_dcdcc :=_fcbaf ._ebea .Resolve (_fbeacg .Get ("\u004b\u0069\u0064\u0073"));if _dcdcc !=nil {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _dcdcc ;};var _dgcc *_ged .PdfObjectArray ;_dgcc ,_fcdd =_cafca .(*_ged .PdfObjectArray );if !_fcdd {_faae ,_abddb :=_cafca .(*_ged .PdfIndirectObject );if !_abddb {return _fc .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dgcc ,_fcdd =_faae .PdfObject .(*_ged .PdfObjectArray );if !_fcdd {return _fc .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_eg .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_dgcc );for _badfd ,_gcfdf :=range _dgcc .Elements (){_gebcd ,_dgca :=_ged .GetIndirect (_gcfdf );if !_dgca {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_gebcd );return _fc .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dgcc .Set (_badfd ,_gebcd );_dcdcc =_fcbaf .buildPageList (_gebcd ,_cbecg ,_ebfgc );if _dcdcc !=nil {return _dcdcc ;};};return nil ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_cefb *VRI )ToPdfObject ()*_ged .PdfObjectDictionary {_beeb :=_ged .MakeDict ();_beeb .SetIfNotNil (_ged .PdfObjectName ("\u0043\u0065\u0072\u0074"),_efbcb (_cefb .Cert ));_beeb .SetIfNotNil (_ged .PdfObjectName ("\u004f\u0043\u0053\u0050"),_efbcb (_cefb .OCSP ));_beeb .SetIfNotNil (_ged .PdfObjectName ("\u0043\u0052\u004c"),_efbcb (_cefb .CRL ));_beeb .SetIfNotNil ("\u0054\u0055",_cefb .TU );_beeb .SetIfNotNil ("\u0054\u0053",_cefb .TS );return _beeb ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_fdgef *PdfField )GetContext ()PdfModel {return _fdgef ._effe };func (_eceb *LTV )validateSig (_fgbb *PdfSignature )error {if _fgbb ==nil ||_fgbb .Contents ==nil ||len (_fgbb .Contents .Bytes ())==0{return _d .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_fgbb );};return nil ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_dedb *PdfShading )GetContainingPdfObject ()_ged .PdfObject {return _dedb ._gfaace };func (_fbgd *PdfAcroForm )filteredFields (_dfcca FieldFilterFunc ,_dcbcb bool )[]*PdfField {if _fbgd ==nil {return nil ;};return _affc (_fbgd .Fields ,_dfcca ,_dcbcb );};

// SetFlag sets the flag for the field.
func (_fgfb *PdfField )SetFlag (flag FieldFlag ){_fgfb .Ff =_ged .MakeInteger (int64 (flag ))};

// ToPdfObject implements interface PdfModel.
func (_fba *PdfActionSubmitForm )ToPdfObject ()_ged .PdfObject {_fba .PdfAction .ToPdfObject ();_aade :=_fba ._ebd ;_dcae :=_aade .PdfObject .(*_ged .PdfObjectDictionary );_dcae .SetIfNotNil ("\u0053",_ged .MakeName (string (ActionTypeSubmitForm )));if _fba .F !=nil {_dcae .Set ("\u0046",_fba .F .ToPdfObject ());};_dcae .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_fba .Fields );_dcae .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_fba .Flags );return _aade ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_aedgb *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gfbg *PdfShadingType1 )ToPdfObject ()_ged .PdfObject {_gfbg .PdfShading .ToPdfObject ();_efdaga ,_dddbb :=_gfbg .getShadingDict ();if _dddbb !=nil {_eg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _gfbg .Domain !=nil {_efdaga .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gfbg .Domain );};if _gfbg .Matrix !=nil {_efdaga .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gfbg .Matrix );};if _gfbg .Function !=nil {if len (_gfbg .Function )==1{_efdaga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfbg .Function [0].ToPdfObject ());}else {_edabaf :=_ged .MakeArray ();for _ ,_gdcdf :=range _gfbg .Function {_edabaf .Append (_gdcdf .ToPdfObject ());};_efdaga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_edabaf );};};return _gfbg ._gfaace ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_gdea :=NewPdfAnnotation ();_baaf :=&PdfAnnotationWatermark {};_baaf .PdfAnnotation =_gdea ;_gdea .SetContext (_baaf );return _baaf ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_ged .PdfObjectStream )(*XObjectImage ,error ){_efffgf :=&XObjectImage {};_efffgf ._fcdab =stream ;_acggfb :=*(stream .PdfObjectDictionary );_efbed ,_deddd :=_ged .NewEncoderFromStream (stream );if _deddd !=nil {return nil ,_deddd ;};_efffgf .Filter =_efbed ;if _abbgd :=_ged .TraceToDirectObject (_acggfb .Get ("\u0057\u0069\u0064t\u0068"));_abbgd !=nil {_ceabg ,_eeebb :=_abbgd .(*_ged .PdfObjectInteger );if !_eeebb {return nil ,_fc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");};_gaggg :=int64 (*_ceabg );_efffgf .Width =&_gaggg ;}else {return nil ,_fc .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _fgdfe :=_ged .TraceToDirectObject (_acggfb .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_fgdfe !=nil {_gafd ,_cbfdb :=_fgdfe .(*_ged .PdfObjectInteger );if !_cbfdb {return nil ,_fc .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_ggdeb :=int64 (*_gafd );_efffgf .Height =&_ggdeb ;}else {return nil ,_fc .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _agaf :=_ged .TraceToDirectObject (_acggfb .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));_agaf !=nil {_gedd ,_eaead :=NewPdfColorspaceFromPdfObject (_agaf );if _eaead !=nil {return nil ,_eaead ;};_efffgf .ColorSpace =_gedd ;}else {_eg .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");_efffgf .ColorSpace =NewPdfColorspaceDeviceGray ();};if _efbee :=_ged .TraceToDirectObject (_acggfb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_efbee !=nil {_cddg ,_ecafaa :=_efbee .(*_ged .PdfObjectInteger );if !_ecafaa {return nil ,_fc .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_ceeg :=int64 (*_cddg );_efffgf .BitsPerComponent =&_ceeg ;};_efffgf .Intent =_acggfb .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");_efffgf .ImageMask =_acggfb .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_efffgf .Mask =_acggfb .Get ("\u004d\u0061\u0073\u006b");_efffgf .Decode =_acggfb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_efffgf .Interpolate =_acggfb .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");_efffgf .Alternatives =_acggfb .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_efffgf .SMask =_acggfb .Get ("\u0053\u004d\u0061s\u006b");_efffgf .SMaskInData =_acggfb .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");_efffgf .Matte =_acggfb .Get ("\u004d\u0061\u0074t\u0065");_efffgf .Name =_acggfb .Get ("\u004e\u0061\u006d\u0065");_efffgf .StructParent =_acggfb .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_efffgf .ID =_acggfb .Get ("\u0049\u0044");_efffgf .OPI =_acggfb .Get ("\u004f\u0050\u0049");_efffgf .Metadata =_acggfb .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_efffgf .OC =_acggfb .Get ("\u004f\u0043");_efffgf .Stream =stream .Stream ;return _efffgf ,nil ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_bafef *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_ged .StreamEncoder ,error ){_cccfc ,_daada :=_bafef ._abgg .(*_ged .PdfObjectStream );if !_daada {_eg .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bafef ._abgg );return nil ,nil ,_ged .ErrTypeError ;};_ccbg ,_fffbb :=_ged .DecodeStream (_cccfc );if _fffbb !=nil {_eg .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_fffbb );return nil ,nil ,_fffbb ;};_eggbbe ,_fffbb :=_ged .NewEncoderFromStream (_cccfc );if _fffbb !=nil {_eg .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_fffbb );return nil ,nil ,_fffbb ;};return _ccbg ,_eggbbe ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ddcb *PdfShadingType4 )ToPdfObject ()_ged .PdfObject {_ddcb .PdfShading .ToPdfObject ();_gaebd ,_agfdb :=_ddcb .getShadingDict ();if _agfdb !=nil {_eg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _ddcb .BitsPerCoordinate !=nil {_gaebd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ddcb .BitsPerCoordinate );};if _ddcb .BitsPerComponent !=nil {_gaebd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ddcb .BitsPerComponent );};if _ddcb .BitsPerFlag !=nil {_gaebd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ddcb .BitsPerFlag );};if _ddcb .Decode !=nil {_gaebd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ddcb .Decode );};if _ddcb .Function !=nil {if len (_ddcb .Function )==1{_gaebd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ddcb .Function [0].ToPdfObject ());}else {_dffca :=_ged .MakeArray ();for _ ,_agdac :=range _ddcb .Function {_dffca .Append (_agdac .ToPdfObject ());};_gaebd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dffca );};};return _ddcb ._gfaace ;};

// WriteString outputs the object as it is to be written to file.
func (_dafgd *pdfSignDictionary )WriteString ()string {_dafgd ._cfaba =0;_dafgd ._defee =0;_dafgd ._efefb =0;_dafgd ._edgad =0;_dcffe :=_bd .NewBuffer (nil );_dcffe .WriteString ("\u003c\u003c");for _ ,_dadfed :=range _dafgd .Keys (){_bfbdag :=_dafgd .Get (_dadfed );switch _dadfed {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_dcffe .WriteString (_dadfed .WriteString ());_dcffe .WriteString ("\u0020");_dafgd ._efefb =_dcffe .Len ();_dcffe .WriteString (_bfbdag .WriteString ());_dcffe .WriteString ("\u0020");_dafgd ._edgad =_dcffe .Len ()-1;case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_dcffe .WriteString (_dadfed .WriteString ());_dcffe .WriteString ("\u0020");_dafgd ._cfaba =_dcffe .Len ();_dcffe .WriteString (_bfbdag .WriteString ());_dcffe .WriteString ("\u0020");_dafgd ._defee =_dcffe .Len ()-1;default:_dcffe .WriteString (_dadfed .WriteString ());_dcffe .WriteString ("\u0020");_dcffe .WriteString (_bfbdag .WriteString ());};};_dcffe .WriteString ("\u003e\u003e");return _dcffe .String ();};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _ged .PdfObject ;Mac _ged .PdfObject ;Unix _ged .PdfObject ;NewWindow _ged .PdfObject ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_babg interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _ged .PdfObject ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_afcc *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_dadbe :=0.3*_afcc .R ()+0.59*_afcc .G ()+0.11*_afcc .B ();_dadbe =_af .Min (_af .Max (_dadbe ,0.0),1.0);return NewPdfColorDeviceGray (_dadbe );};func _afecc (_cgagf _ged .PdfObject )[]*_ged .PdfObjectStream {if _cgagf ==nil {return nil ;};_aecf ,_fffca :=_ged .GetArray (_cgagf );if !_fffca ||_aecf .Len ()==0{return nil ;};_ggaa :=make ([]*_ged .PdfObjectStream ,0,_aecf .Len ());for _ ,_eaebd :=range _aecf .Elements (){if _gdeac ,_deac :=_ged .GetStream (_eaebd );_deac {_ggaa =append (_ggaa ,_gdeac );};};return _ggaa ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _ged .PdfObject ;MK _ged .PdfObject ;A _ged .PdfObject ;AA _ged .PdfObject ;};

// GetNumPages returns the number of pages in the document.
func (_eefeb *PdfReader )GetNumPages ()(int ,error ){if _eefeb ._ebea .GetCrypter ()!=nil &&!_eefeb ._ebea .IsAuthenticated (){return 0,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};return len (_eefeb ._deeb ),nil ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_gg :=NewPdfAction ();_fb :=&PdfActionResetForm {};_fb .PdfAction =_gg ;_gg .SetContext (_fb );return _fb ;};

// ToGoTime returns the date in time.Time format.
func (_cdgge PdfDate )ToGoTime ()_c .Time {_cgfcg :=int (_cdgge ._eeegec *60*60+_cdgge ._acea *60);switch _cdgge ._fgacaa {case '-':_cgfcg =-_cgfcg ;case 'Z':_cgfcg =0;};_aeaaf :=_d .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_cdgge ._fgacaa ,_cdgge ._eeegec ,_cdgge ._acea );_fageg :=_c .FixedZone (_aeaaf ,_cgfcg );return _c .Date (int (_cdgge ._fegf ),_c .Month (_cdgge ._ggdde ),int (_cdgge ._afbdgf ),int (_cdgge ._gaadc ),int (_cdgge ._geeba ),int (_cdgge ._eeddb ),0,_fageg );};

// SetImage updates XObject Image with new image data.
func (_bdfea *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_bdfea .Filter .UpdateParams (img .GetParamsDict ());_acega ,_cdebe :=_bdfea .Filter .EncodeBytes (img .Data );if _cdebe !=nil {return _cdebe ;};_bdfea .Stream =_acega ;_dfef :=img .Width ;_bdfea .Width =&_dfef ;_dfdgc :=img .Height ;_bdfea .Height =&_dfdgc ;_agdcec :=img .BitsPerComponent ;_bdfea .BitsPerComponent =&_agdcec ;if cs ==nil {if img .ColorComponents ==1{_bdfea .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_bdfea .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_bdfea .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _fc .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_bdfea .ColorSpace =cs ;};return nil ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_aeeb *PdfColorspaceDeviceN )GetNumComponents ()int {return _aeeb .ColorantNames .Len ()};

// AddPages adds pages to be appended to the end of the source PDF.
func (_eede *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_fbad :=range pages {_fbad =_fbad .Duplicate ();_gbdbb (_fbad );_eede ._feeg =append (_eede ._feeg ,_fbad );};};func (_aecgb *PdfField )inherit (_aggb func (*PdfField )bool )(bool ,error ){_deded :=map[*PdfField ]bool {};_ggce :=false ;_fabd :=_aecgb ;for _fabd !=nil {if _ ,_gfgf :=_deded [_fabd ];_gfgf {return false ,_fc .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_decc :=_aggb (_fabd );if _decc {_ggce =true ;break ;};_deded [_fabd ]=true ;_fabd =_fabd .Parent ;};return _ggce ,nil ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_gdabg .Lock ();defer _gdabg .Unlock ();_cdbacc =title };

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_ged .PdfObjectInteger ;BitsPerComponent *_ged .PdfObjectInteger ;VerticesPerRow *_ged .PdfObjectInteger ;Decode *_ged .PdfObjectArray ;Function []PdfFunction ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ged .PdfObject ;IC _ged .PdfObject ;RO _ged .PdfObject ;OverlayText _ged .PdfObject ;Repeat _ged .PdfObject ;DA _ged .PdfObject ;Q _ged .PdfObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_cfbe *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_ged .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eedg ,_cedbd :=_ged .GetNumbersAsFloat (objects );if _cedbd !=nil {return nil ,_cedbd ;};return _cfbe .ColorFromFloats (_eedg );};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_ggde *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_decg :=_fec .NewReader (img .getBase ());_gfaac :=_daf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._fgaab ,img ._caaed );_bfed :=_fec .NewWriter (_gfaac );_cfdc :=_af .Pow (2,float64 (img .BitsPerComponent ))-1;_fbgbe :=_ggde .GetNumComponents ();_ccgg :=make ([]uint32 ,_fbgbe );_fddeg :=make ([]float64 ,_fbgbe );for {_eabg :=_decg .ReadSamples (_ccgg );if _eabg ==_aa .EOF {break ;}else if _eabg !=nil {return img ,_eabg ;};for _fccc :=0;_fccc < _fbgbe ;_fccc ++{_gdec :=float64 (_ccgg [_fccc ])/_cfdc ;_fddeg [_fccc ]=_gdec ;};_eade ,_eabg :=_ggde .TintTransform .Evaluate (_fddeg );if _eabg !=nil {return img ,_eabg ;};for _ ,_fccd :=range _eade {_fccd =_af .Min (_af .Max (0,_fccd ),1.0);if _eabg =_bfed .WriteSample (uint32 (_fccd *_cfdc ));_eabg !=nil {return img ,_eabg ;};};};return _ggde .AlternateSpace .ImageToRGB (_dfcbe (&_gfaac ));};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_befde *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_ebbdb ,_ ,_afdg :=_befde .CharcodesToUnicodeWithStats (_befde .BytesToCharcodes (data ));_gcca :=_ffe .ExpandLigatures (_ebbdb );return _gcca ,_fd .RuneCountInString (_gcca ),_afdg ;};

// SetContext sets the sub action (context).
func (_ffd *PdfAction )SetContext (ctx PdfModel ){_ffd ._ab =ctx };

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_gac *_ged .PdfIndirectObject ;Certs []*_ged .PdfObjectStream ;OCSPs []*_ged .PdfObjectStream ;CRLs []*_ged .PdfObjectStream ;VRI map[string ]*VRI ;_gfee map[string ]*_ged .PdfObjectStream ;_fcfcd map[string ]*_ged .PdfObjectStream ;_dfeda map[string ]*_ged .PdfObjectStream ;};func (_ddgcg *PdfPage )getParentResources ()(*PdfPageResources ,error ){_gcgfg :=_ddgcg .Parent ;for _gcgfg !=nil {_abfae ,_gdbd :=_ged .GetDict (_gcgfg );if !_gdbd {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_fc .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _eaged :=_abfae .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_eaged !=nil {_ffbgeg ,_dfgb :=_ged .GetDict (_eaged );if !_dfgb {return nil ,_fc .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_ggedg ,_bdeacg :=NewPdfPageResourcesFromDict (_ffbgeg );if _bdeacg !=nil {return nil ,_bdeacg ;};return _ggedg ,nil ;};_gcgfg =_abfae .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};func (_cab *PdfReader )newPdfAnnotationMarkupFromDict (_cga *_ged .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_cdff :=&PdfAnnotationMarkup {};if _gffb :=_cga .Get ("\u0054");_gffb !=nil {_cdff .T =_gffb ;};if _bbd :=_cga .Get ("\u0050\u006f\u0070u\u0070");_bbd !=nil {_deed ,_badg :=_bbd .(*_ged .PdfIndirectObject );if !_badg {if _ ,_fed :=_bbd .(*_ged .PdfObjectNull );!_fed {return nil ,_fc .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");};}else {_dcfc ,_agec :=_cab .newPdfAnnotationFromIndirectObject (_deed );if _agec !=nil {return nil ,_agec ;};if _dcfc !=nil {_bedg ,_fef :=_dcfc ._edg .(*PdfAnnotationPopup );if !_fef {return nil ,_fc .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");};_cdff .Popup =_bedg ;};};};if _cead :=_cga .Get ("\u0043\u0041");_cead !=nil {_cdff .CA =_cead ;};if _dgaf :=_cga .Get ("\u0052\u0043");_dgaf !=nil {_cdff .RC =_dgaf ;};if _bab :=_cga .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");_bab !=nil {_cdff .CreationDate =_bab ;};if _edad :=_cga .Get ("\u0049\u0052\u0054");_edad !=nil {_cdff .IRT =_edad ;};if _aead :=_cga .Get ("\u0053\u0075\u0062\u006a");_aead !=nil {_cdff .Subj =_aead ;};if _gfda :=_cga .Get ("\u0052\u0054");_gfda !=nil {_cdff .RT =_gfda ;};if _cfaa :=_cga .Get ("\u0049\u0054");_cfaa !=nil {_cdff .IT =_cfaa ;};if _caeae :=_cga .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_caeae !=nil {_cdff .ExData =_caeae ;};return _cdff ,nil ;};func (_bffc *PdfReader )newPdfAnnotationTextFromDict (_ggg *_ged .PdfObjectDictionary )(*PdfAnnotationText ,error ){_affd :=PdfAnnotationText {};_aaf ,_bda :=_bffc .newPdfAnnotationMarkupFromDict (_ggg );if _bda !=nil {return nil ,_bda ;};_affd .PdfAnnotationMarkup =_aaf ;_affd .Open =_ggg .Get ("\u004f\u0070\u0065\u006e");_affd .Name =_ggg .Get ("\u004e\u0061\u006d\u0065");_affd .State =_ggg .Get ("\u0053\u0074\u0061t\u0065");_affd .StateModel =_ggg .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_affd ,nil ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// ColorToRGB converts a CalRGB color to an RGB color.
func (_ceded *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_dgeec ,_aeade :=color .(*PdfColorCalRGB );if !_aeade {_eg .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");return nil ,_fc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fcee :=_dgeec .A ();_adae :=_dgeec .B ();_bdcea :=_dgeec .C ();X :=_ceded .Matrix [0]*_af .Pow (_fcee ,_ceded .Gamma [0])+_ceded .Matrix [3]*_af .Pow (_adae ,_ceded .Gamma [1])+_ceded .Matrix [6]*_af .Pow (_bdcea ,_ceded .Gamma [2]);Y :=_ceded .Matrix [1]*_af .Pow (_fcee ,_ceded .Gamma [0])+_ceded .Matrix [4]*_af .Pow (_adae ,_ceded .Gamma [1])+_ceded .Matrix [7]*_af .Pow (_bdcea ,_ceded .Gamma [2]);Z :=_ceded .Matrix [2]*_af .Pow (_fcee ,_ceded .Gamma [0])+_ceded .Matrix [5]*_af .Pow (_adae ,_ceded .Gamma [1])+_ceded .Matrix [8]*_af .Pow (_bdcea ,_ceded .Gamma [2]);_daea :=3.240479*X +-1.537150*Y +-0.498535*Z ;_abgf :=-0.969256*X +1.875992*Y +0.041556*Z ;_fedg :=0.055648*X +-0.204043*Y +1.057311*Z ;_daea =_af .Min (_af .Max (_daea ,0),1.0);_abgf =_af .Min (_af .Max (_abgf ,0),1.0);_fedg =_af .Min (_af .Max (_fedg ,0),1.0);return NewPdfColorDeviceRGB (_daea ,_abgf ,_fedg ),nil ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_bad :=NewPdfAnnotation ();_abab :=&PdfAnnotationUnderline {};_abab .PdfAnnotation =_bad ;_abab .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bad .SetContext (_abab );return _abab ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_ged .PdfObjectDictionary )(*PdfPageResources ,error ){_efae :=NewPdfPageResources ();if _ddgfe :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_ddgfe !=nil {_efae .ExtGState =_ddgfe ;};if _bcdfe :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");_bcdfe !=nil &&!_ged .IsNullObject (_bcdfe ){_efae .ColorSpace =_bcdfe ;};if _daead :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_daead !=nil {_efae .Pattern =_daead ;};if _aaec :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_aaec !=nil {_efae .Shading =_aaec ;};if _bfcbd :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_bfcbd !=nil {_efae .XObject =_bfcbd ;};if _fgefa :=_ged .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_fgefa !=nil {_efae .Font =_fgefa ;};if _ggdec :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");_ggdec !=nil {_efae .ProcSet =_ggdec ;};if _faefe :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_faefe !=nil {_efae .Properties =_faefe ;};return _efae ,nil ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_ged .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_bcac *_ged .PdfIndirectObject ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_fdcdb *modelManager )GetPrimitiveFromModel (model PdfModel )_ged .PdfObject {_dgad ,_ccba :=_fdcdb ._ccgfb [model ];if !_ccba {return nil ;};return _dgad ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_bdbf :=map[rune ]int {};for _ ,_cbgf :=range text {_bdbf [_cbgf ]++;};return _bdbf ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_eeaga pdfFontType0 )GetRuneMetrics (r rune )(_aea .CharMetrics ,bool ){if _eeaga .DescendantFont ==nil {_eg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_eeaga );return _aea .CharMetrics {},false ;};return _eeaga .DescendantFont .GetRuneMetrics (r );};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _ged .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_ged .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_cbccf ,_adcbc :=encoder .EncodeBytes (img .Data );if _adcbc !=nil {_eg .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_adcbc );return nil ,_adcbc ;};_cgfgc :=NewXObjectImage ();_dcgba :=img .Width ;_agabb :=img .Height ;_cgfgc .Width =&_dcgba ;_cgfgc .Height =&_agabb ;_bceda :=img .BitsPerComponent ;_cgfgc .BitsPerComponent =&_bceda ;_cgfgc .Filter =encoder ;_cgfgc .Stream =_cbccf ;if cs ==nil {if img .ColorComponents ==1{_cgfgc .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_cgfgc .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_cgfgc .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_fc .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_cgfgc .ColorSpace =cs ;};if len (img ._fgaab )!=0{_afce :=NewXObjectImage ();_afce .Filter =encoder ;_dfdgb ,_babga :=encoder .EncodeBytes (img ._fgaab );if _babga !=nil {_eg .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_babga );return nil ,_babga ;};_afce .Stream =_dfdgb ;_afce .BitsPerComponent =_cgfgc .BitsPerComponent ;_afce .Width =&img .Width ;_afce .Height =&img .Height ;_afce .ColorSpace =NewPdfColorspaceDeviceGray ();_cgfgc .SMask =_afce .ToPdfObject ();}else {_cgfgc .SMask =xobjIn .SMask ;_cgfgc .ImageMask =xobjIn .ImageMask ;if _cgfgc .ColorSpace .GetNumComponents ()==1{_cgddc (_cgfgc );};};return _cgfgc ,nil ;};

// SetAction sets the PDF action for the annotation link.
func (_bed *PdfAnnotationLink )SetAction (action *PdfAction ){_bed ._egfd =action ;if action ==nil {_bed .A =nil ;};};

// ToPdfObject implements interface PdfModel.
func (_gbbd *PdfAnnotationLine )ToPdfObject ()_ged .PdfObject {_gbbd .PdfAnnotation .ToPdfObject ();_eeeg :=_gbbd ._efb ;_gaed :=_eeeg .PdfObject .(*_ged .PdfObjectDictionary );_gbbd .PdfAnnotationMarkup .appendToPdfDictionary (_gaed );_gaed .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u004c\u0069\u006e\u0065"));_gaed .SetIfNotNil ("\u004c",_gbbd .L );_gaed .SetIfNotNil ("\u0042\u0053",_gbbd .BS );_gaed .SetIfNotNil ("\u004c\u0045",_gbbd .LE );_gaed .SetIfNotNil ("\u0049\u0043",_gbbd .IC );_gaed .SetIfNotNil ("\u004c\u004c",_gbbd .LL );_gaed .SetIfNotNil ("\u004c\u004c\u0045",_gbbd .LLE );_gaed .SetIfNotNil ("\u0043\u0061\u0070",_gbbd .Cap );_gaed .SetIfNotNil ("\u0049\u0054",_gbbd .IT );_gaed .SetIfNotNil ("\u004c\u004c\u004f",_gbbd .LLO );_gaed .SetIfNotNil ("\u0043\u0050",_gbbd .CP );_gaed .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gbbd .Measure );_gaed .SetIfNotNil ("\u0043\u004f",_gbbd .CO );return _eeeg ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};func (_bcagf *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _bcagf ._ebea .GetCrypter ()!=nil &&!_bcagf ._ebea .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_fbeac :=_bcagf ._fffe ;_cdbfdf :=_fbeac .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _cdbfdf ==nil {return nil ,nil ;};_bebga ,_ :=_ged .GetIndirect (_cdbfdf );_cdbfdf =_ged .TraceToDirectObject (_cdbfdf );if _ged .IsNullObject (_cdbfdf ){_eg .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");return nil ,nil ;};_cdgfa ,_adfdb :=_ged .GetDict (_cdbfdf );if !_adfdb {_eg .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_cdbfdf );_eg .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_cdbfdf );};_eg .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");_eg .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_bcagf ._dbfdg {_baafd :=_bcagf .traverseObjectData (_cdgfa );if _baafd !=nil {_eg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_baafd );return nil ,_baafd ;};};_ddddg ,_dffff :=_bcagf .newPdfAcroFormFromDict (_bebga ,_cdgfa );if _dffff !=nil {return nil ,_dffff ;};return _ddddg ,nil ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_abff *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_aega :=func (_cadc float64 )float64 {if _cadc >=6.0/29{return _cadc *_cadc *_cadc ;};return 108.0/841*(_cadc -4/29);};_cagc ,_eeea :=color .(*PdfColorLab );if !_eeea {_eg .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");return nil ,_fc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_cagc .L ();AStar :=_cagc .A ();BStar :=_cagc .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;X :=_abff .WhitePoint [0]*_aega (L );Y :=_abff .WhitePoint [1]*_aega (M );Z :=_abff .WhitePoint [2]*_aega (N );_cdd :=3.240479*X +-1.537150*Y +-0.498535*Z ;_eabed :=-0.969256*X +1.875992*Y +0.041556*Z ;_beabb :=0.055648*X +-0.204043*Y +1.057311*Z ;_cdd =_af .Min (_af .Max (_cdd ,0),1.0);_eabed =_af .Min (_af .Max (_eabed ,0),1.0);_beabb =_af .Min (_af .Max (_beabb ,0),1.0);return NewPdfColorDeviceRGB (_cdd ,_eabed ,_beabb ),nil ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_dcffb *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _aa .ReadSeeker )(*PdfReader ,error ){_fgefd :=&PdfReader {_gbda :rs ,_ebagc :map[_ged .PdfObject ]struct{}{},_accc :_adacbb (),_dbfdg :true };_adgca ,_cbada :=_ged .NewParser (rs );if _cbada !=nil {return nil ,_cbada ;};_fgefd ._ebea =_adgca ;_edadc ,_cbada :=_fgefd .IsEncrypted ();if _cbada !=nil {return nil ,_cbada ;};if !_edadc {_cbada =_fgefd .loadStructure ();if _cbada !=nil {return nil ,_cbada ;};};return _fgefd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gf *PdfActionGoTo )ToPdfObject ()_ged .PdfObject {_gf .PdfAction .ToPdfObject ();_ca :=_gf ._ebd ;_cc :=_ca .PdfObject .(*_ged .PdfObjectDictionary );_cc .SetIfNotNil ("\u0053",_ged .MakeName (string (ActionTypeGoTo )));_cc .SetIfNotNil ("\u0044",_gf .D );return _ca ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_adeb *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcfg :=vals [0];if _dcfg < 0.0||_dcfg > 1.0{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cccf :=vals [1];if _cccf < 0.0||_cccf > 1.0{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acag :=vals [2];if _acag < 0.0||_acag > 1.0{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eeda :=vals [3];if _eeda < 0.0||_eeda > 1.0{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_febb :=NewPdfColorDeviceCMYK (_dcfg ,_cccf ,_acag ,_eeda );return _febb ,nil ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_de :=NewPdfAction ();_db :=&PdfActionLaunch {};_db .PdfAction =_de ;_de .SetContext (_db );return _db ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_egdf *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_bdef :=_egdf .actualFont ();if _bdef ==nil {_eg .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_egdf ._gfdbg );return _aea .CharMetrics {},false ;};if _bgabg ,_cfebe :=_bdef .GetRuneMetrics (r );_cfebe {return _bgabg ,true ;};if _bbcadg ,_bece :=_egdf .GetFontDescriptor ();_bece ==nil &&_bbcadg !=nil {return _aea .CharMetrics {Wx :_bbcadg ._ecad },true ;};_eg .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_egdf );return _aea .CharMetrics {},false ;};func _afbdca (_efdgc *_ged .PdfObjectDictionary )(*PdfShadingType7 ,error ){_baaa :=PdfShadingType7 {};_beee :=_efdgc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _beee ==nil {_eg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_fdddb ,_efadc :=_beee .(*_ged .PdfObjectInteger );if !_efadc {_eg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_beee );return nil ,_ged .ErrTypeError ;};_baaa .BitsPerCoordinate =_fdddb ;_beee =_efdgc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _beee ==nil {_eg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_fdddb ,_efadc =_beee .(*_ged .PdfObjectInteger );if !_efadc {_eg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_beee );return nil ,_ged .ErrTypeError ;};_baaa .BitsPerComponent =_fdddb ;_beee =_efdgc .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _beee ==nil {_eg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_fdddb ,_efadc =_beee .(*_ged .PdfObjectInteger );if !_efadc {_eg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_beee );return nil ,_ged .ErrTypeError ;};_baaa .BitsPerComponent =_fdddb ;_beee =_efdgc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _beee ==nil {_eg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_efcbe ,_efadc :=_beee .(*_ged .PdfObjectArray );if !_efadc {_eg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_beee );return nil ,_ged .ErrTypeError ;};_baaa .Decode =_efcbe ;if _ccded :=_efdgc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ccded !=nil {_baaa .Function =[]PdfFunction {};if _agegg ,_cabfe :=_ccded .(*_ged .PdfObjectArray );_cabfe {for _ ,_bfffa :=range _agegg .Elements (){_ccbed ,_beggf :=_gecdb (_bfffa );if _beggf !=nil {_eg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_beggf );return nil ,_beggf ;};_baaa .Function =append (_baaa .Function ,_ccbed );};}else {_gbecd ,_gfec :=_gecdb (_ccded );if _gfec !=nil {_eg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gfec );return nil ,_gfec ;};_baaa .Function =append (_baaa .Function ,_gbecd );};};return &_baaa ,nil ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_becc *pdfCIDFontType2 )ToPdfObject ()_ged .PdfObject {if _becc ._dgfg ==nil {_becc ._dgfg =&_ged .PdfIndirectObject {};};_bbded :=_becc .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");_becc ._dgfg .PdfObject =_bbded ;if _becc .CIDSystemInfo !=nil {_bbded .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_becc .CIDSystemInfo );};if _becc .DW !=nil {_bbded .Set ("\u0044\u0057",_becc .DW );};if _becc .DW2 !=nil {_bbded .Set ("\u0044\u0057\u0032",_becc .DW2 );};if _becc .W !=nil {_bbded .Set ("\u0057",_becc .W );};if _becc .W2 !=nil {_bbded .Set ("\u0057\u0032",_becc .W2 );};if _becc .CIDToGIDMap !=nil {_bbded .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_becc .CIDToGIDMap );};return _becc ._dgfg ;};

// GetXObjectByName gets XObject by name.
func (_adecf *PdfPage )GetXObjectByName (name _ged .PdfObjectName )(_ged .PdfObject ,bool ){_edfegb ,_bdab :=_adecf .Resources .XObject .(*_ged .PdfObjectDictionary );if !_bdab {return nil ,false ;};if _bdbdb :=_edfegb .Get (name );_bdbdb !=nil {return _bdbdb ,true ;};return nil ,false ;};func (_dged *PdfWriter )writeString (_gcdeg string ){if _dged ._eagag !=nil {return ;};_bbfbc ,_gfacg :=_dged ._adcf .WriteString (_gcdeg );_dged ._faaggc +=int64 (_bbfbc );_dged ._eagag =_gfacg ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_gcda *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func _bebgff (_aeedc *_ged .PdfObjectStream )(*PdfFunctionType0 ,error ){_fcbcd :=&PdfFunctionType0 {};_fcbcd ._ggef =_aeedc ;_cffb :=_aeedc .PdfObjectDictionary ;_bcfg ,_fcged :=_ged .TraceToDirectObject (_cffb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ged .PdfObjectArray );if !_fcged {_eg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bcfg .Len ()< 0||_bcfg .Len ()%2!=0{_eg .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_fcbcd .NumInputs =_bcfg .Len ()/2;_feba ,_dbbgg :=_bcfg .ToFloat64Array ();if _dbbgg !=nil {return nil ,_dbbgg ;};_fcbcd .Domain =_feba ;_bcfg ,_fcged =_ged .TraceToDirectObject (_cffb .Get ("\u0052\u0061\u006eg\u0065")).(*_ged .PdfObjectArray );if !_fcged {_eg .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_fc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bcfg .Len ()< 0||_bcfg .Len ()%2!=0{return nil ,_fc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_fcbcd .NumOutputs =_bcfg .Len ()/2;_fdedd ,_dbbgg :=_bcfg .ToFloat64Array ();if _dbbgg !=nil {return nil ,_dbbgg ;};_fcbcd .Range =_fdedd ;_bcfg ,_fcged =_ged .TraceToDirectObject (_cffb .Get ("\u0053\u0069\u007a\u0065")).(*_ged .PdfObjectArray );if !_fcged {_eg .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");return nil ,_fc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_eecdb ,_dbbgg :=_bcfg .ToIntegerArray ();if _dbbgg !=nil {return nil ,_dbbgg ;};if len (_eecdb )!=_fcbcd .NumInputs {_eg .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcbcd .Size =_eecdb ;_ggae ,_fcged :=_ged .TraceToDirectObject (_cffb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_ged .PdfObjectInteger );if !_fcged {_eg .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_fc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if *_ggae !=1&&*_ggae !=2&&*_ggae !=4&&*_ggae !=8&&*_ggae !=12&&*_ggae !=16&&*_ggae !=24&&*_ggae !=32{_eg .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_ggae );return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcbcd .BitsPerSample =int (*_ggae );_fcbcd .Order =1;_dfcgf ,_fcged :=_ged .TraceToDirectObject (_cffb .Get ("\u004f\u0072\u0064e\u0072")).(*_ged .PdfObjectInteger );if _fcged {if *_dfcgf !=1&&*_dfcgf !=3{_eg .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_dfcgf );return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcbcd .Order =int (*_dfcgf );};_bcfg ,_fcged =_ged .TraceToDirectObject (_cffb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_ged .PdfObjectArray );if _fcged {_becg ,_abcb :=_bcfg .ToFloat64Array ();if _abcb !=nil {return nil ,_abcb ;};_fcbcd .Encode =_becg ;};_bcfg ,_fcged =_ged .TraceToDirectObject (_cffb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_ged .PdfObjectArray );if _fcged {_acae ,_baccg :=_bcfg .ToFloat64Array ();if _baccg !=nil {return nil ,_baccg ;};_fcbcd .Decode =_acae ;};_ggdba ,_dbbgg :=_ged .DecodeStream (_aeedc );if _dbbgg !=nil {return nil ,_dbbgg ;};_fcbcd ._fcad =_ggdba ;return _fcbcd ,nil ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_afa *PdfAnnotationWidget )Field ()*PdfField {return _afa ._fgd };

// ToPdfObject returns the PDF representation of the function.
func (_ddcf *PdfFunctionType2 )ToPdfObject ()_ged .PdfObject {_aafd :=_ged .MakeDict ();_aafd .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ged .MakeInteger (2));_egffdg :=&_ged .PdfObjectArray {};for _ ,_abfe :=range _ddcf .Domain {_egffdg .Append (_ged .MakeFloat (_abfe ));};_aafd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_egffdg );if _ddcf .Range !=nil {_dbdcc :=&_ged .PdfObjectArray {};for _ ,_feecd :=range _ddcf .Range {_dbdcc .Append (_ged .MakeFloat (_feecd ));};_aafd .Set ("\u0052\u0061\u006eg\u0065",_dbdcc );};if _ddcf .C0 !=nil {_dggab :=&_ged .PdfObjectArray {};for _ ,_dbgba :=range _ddcf .C0 {_dggab .Append (_ged .MakeFloat (_dbgba ));};_aafd .Set ("\u0043\u0030",_dggab );};if _ddcf .C1 !=nil {_eaabg :=&_ged .PdfObjectArray {};for _ ,_bfec :=range _ddcf .C1 {_eaabg .Append (_ged .MakeFloat (_bfec ));};_aafd .Set ("\u0043\u0031",_eaabg );};_aafd .Set ("\u004e",_ged .MakeFloat (_ddcf .N ));if _ddcf ._cgffe !=nil {_ddcf ._cgffe .PdfObject =_aafd ;return _ddcf ._cgffe ;};return _aafd ;};func _cedea ()string {_gdabg .Lock ();defer _gdabg .Unlock ();if len (_dccbg )> 0{return _dccbg ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_gaacfd *PdfPage )GetContentStreamObjs ()[]_ged .PdfObject {if _gaacfd .Contents ==nil {return nil ;};_bbad :=_ged .TraceToDirectObject (_gaacfd .Contents );if _gfeag ,_bffad :=_bbad .(*_ged .PdfObjectArray );_bffad {return _gfeag .Elements ();};return []_ged .PdfObject {_bbad };};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_adag *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfcb :=vals [0];if _gfcb < 0.0||_gfcb > 1.0{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgcg :=vals [1];if _dgcg < 0.0||_dgcg > 1.0{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbca :=vals [2];if _cbca < 0.0||_cbca > 1.0{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgea :=NewPdfColorCalRGB (_gfcb ,_dgcg ,_cbca );return _bgea ,nil ;};

// HasXObjectByName checks if has XObject resource by name.
func (_gfafgf *PdfPage )HasXObjectByName (name _ged .PdfObjectName )bool {_adefg ,_cfdad :=_gfafgf .Resources .XObject .(*_ged .PdfObjectDictionary );if !_cfdad {return false ;};if _deee :=_adefg .Get (name );_deee !=nil {return true ;};return false ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_edeg *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_ged .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aeec ,_cdgad :=_ged .GetNumbersAsFloat (objects );if _cdgad !=nil {return nil ,_cdgad ;};return _edeg .ColorFromFloats (_aeec );};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_gfdbg pdfFont };

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_ged .PdfObject ;GetContainingPdfObject ()_ged .PdfObject ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_baeg *PdfPageResources )GetExtGState (keyName _ged .PdfObjectName )(_ged .PdfObject ,bool ){if _baeg .ExtGState ==nil {return nil ,false ;};_ccbb ,_gceec :=_ged .TraceToDirectObject (_baeg .ExtGState ).(*_ged .PdfObjectDictionary );if !_gceec {_eg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_baeg .ExtGState );return nil ,false ;};if _cceaa :=_ccbb .Get (keyName );_cceaa !=nil {return _cceaa ,true ;};return nil ,false ;};func (_ddbee *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _ddbee ._dfede };func (_acc *PdfAppender )addNewObject (_cbdb _ged .PdfObject ){if _ ,_bcad :=_acc ._cgdd [_cbdb ];!_bcad {_acc ._beae =append (_acc ._beae ,_cbdb );_acc ._cgdd [_cbdb ]=struct{}{};};};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_ged .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_cde *PdfActionTrans )ToPdfObject ()_ged .PdfObject {_cde .PdfAction .ToPdfObject ();_fbc :=_cde ._ebd ;_dgb :=_fbc .PdfObject .(*_ged .PdfObjectDictionary );_dgb .SetIfNotNil ("\u0053",_ged .MakeName (string (ActionTypeTrans )));_dgb .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_cde .Trans );return _fbc ;};func (_bfcc *PdfReader )newPdfAnnotationCircleFromDict (_agc *_ged .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_dbbc :=PdfAnnotationCircle {};_ebdd ,_fffc :=_bfcc .newPdfAnnotationMarkupFromDict (_agc );if _fffc !=nil {return nil ,_fffc ;};_dbbc .PdfAnnotationMarkup =_ebdd ;_dbbc .BS =_agc .Get ("\u0042\u0053");_dbbc .IC =_agc .Get ("\u0049\u0043");_dbbc .BE =_agc .Get ("\u0042\u0045");_dbbc .RD =_agc .Get ("\u0052\u0044");return &_dbbc ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_defg *PdfAnnotation )GetContainingPdfObject ()_ged .PdfObject {return _defg ._efb };func _affc (_ageg *[]*PdfField ,_ddfdc FieldFilterFunc ,_dbgc bool )[]*PdfField {if _ageg ==nil {return nil ;};_dbbga :=*_ageg ;if len (*_ageg )==0{return nil ;};_ebca :=_dbbga [:0];if _ddfdc ==nil {_ddfdc =func (*PdfField )bool {return true };};var _fcfd []*PdfField ;for _ ,_fgcac :=range _dbbga {_fcgd :=_ddfdc (_fgcac );if _fcgd {_fcfd =append (_fcfd ,_fgcac );if len (_fgcac .Kids )> 0{_fcfd =append (_fcfd ,_affc (&_fgcac .Kids ,_ddfdc ,_dbgc )...);};};if !_dbgc ||!_fcgd ||len (_fgcac .Kids )> 0{_ebca =append (_ebca ,_fgcac );};};*_ageg =_ebca ;return _fcfd ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_fcabb *LTV )EnableChain (chain []*_fe .Certificate )error {return _fcabb .enable (nil ,chain ,"")};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_ebbcfd *PdfRectangle )Normalize (){if _ebbcfd .Llx > _ebbcfd .Urx {_ebbcfd .Llx ,_ebbcfd .Urx =_ebbcfd .Urx ,_ebbcfd .Llx ;};if _ebbcfd .Lly > _ebbcfd .Ury {_ebbcfd .Lly ,_ebbcfd .Ury =_ebbcfd .Ury ,_ebbcfd .Lly ;};};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _ged .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cbfe *PdfShadingType5 )ToPdfObject ()_ged .PdfObject {_cbfe .PdfShading .ToPdfObject ();_bcfefe ,_edcg :=_cbfe .getShadingDict ();if _edcg !=nil {_eg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _cbfe .BitsPerCoordinate !=nil {_bcfefe .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cbfe .BitsPerCoordinate );};if _cbfe .BitsPerComponent !=nil {_bcfefe .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cbfe .BitsPerComponent );};if _cbfe .VerticesPerRow !=nil {_bcfefe .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_cbfe .VerticesPerRow );};if _cbfe .Decode !=nil {_bcfefe .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cbfe .Decode );};if _cbfe .Function !=nil {if len (_cbfe .Function )==1{_bcfefe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cbfe .Function [0].ToPdfObject ());}else {_ggcef :=_ged .MakeArray ();for _ ,_gddfe :=range _cbfe .Function {_ggcef .Append (_gddfe .ToPdfObject ());};_bcfefe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ggcef );};};return _cbfe ._gfaace ;};func _bfddf (_ggaf *_ged .PdfObjectDictionary )(*PdfFieldButton ,error ){_ggdg :=&PdfFieldButton {};_ggdg .Opt ,_ =_ged .GetArray (_ggaf .Get ("\u004f\u0070\u0074"));return _ggdg ,nil ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_bbge DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// Register registers (caches) a model to primitive object relationship.
func (_acdcbc *modelManager )Register (primitive _ged .PdfObject ,model PdfModel ){_acdcbc ._ccgfb [model ]=primitive ;_acdcbc ._defb [primitive ]=model ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_cfefc *PdfOutlineTreeNode )ToPdfObject ()_ged .PdfObject {return _cfefc .GetContext ().ToPdfObject ();};func _degbea (_adbad *PdfField )[]*PdfField {_fabc :=[]*PdfField {_adbad };for _ ,_gddga :=range _adbad .Kids {_fabc =append (_fabc ,_degbea (_gddga )...);};return _fabc ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_ebea *_ged .PdfParser ;_bdcbb _ged .PdfObject ;_efeag *_ged .PdfIndirectObject ;_aecee *_ged .PdfObjectDictionary ;_deeb []*_ged .PdfIndirectObject ;PageList []*PdfPage ;_ecagf int ;_fffe *_ged .PdfObjectDictionary ;_dgge *PdfOutlineTreeNode ;AcroForm *PdfAcroForm ;DSS *DSS ;_accc *modelManager ;_dbfdg bool ;_ebagc map[_ged .PdfObject ]struct{};_gbda _aa .ReadSeeker ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_bff :=NewPdfAnnotation ();_bcd :=&PdfAnnotationFreeText {};_bcd .PdfAnnotation =_bff ;_bcd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bff .SetContext (_bcd );return _bcd ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_aegf *DSS )GetContainingPdfObject ()_ged .PdfObject {return _aegf ._gac };func (_cefbg *PdfReader )newPdfOutlineItemFromIndirectObject (_eaea *_ged .PdfIndirectObject )(*PdfOutlineItem ,error ){_dgeae ,_dbgce :=_eaea .PdfObject .(*_ged .PdfObjectDictionary );if !_dbgce {return nil ,_d .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_gbaf :=NewPdfOutlineItem ();_debef :=_dgeae .Get ("\u0054\u0069\u0074l\u0065");if _debef ==nil {return nil ,_d .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};_babc ,_dfcgg :=_ged .GetString (_debef );if !_dfcgg {return nil ,_d .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_debef );};_gbaf .Title =_babc ;if _bcfda :=_dgeae .Get ("\u0043\u006f\u0075n\u0074");_bcfda !=nil {_abbde ,_daff :=_bcfda .(*_ged .PdfObjectInteger );if !_daff {return nil ,_d .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_bcfda );};_ecdd :=int64 (*_abbde );_gbaf .Count =&_ecdd ;};if _bceeg :=_dgeae .Get ("\u0044\u0065\u0073\u0074");_bceeg !=nil {_gbaf .Dest =_ged .ResolveReference (_bceeg );if !_cefbg ._dbfdg {_agee :=_cefbg .traverseObjectData (_gbaf .Dest );if _agee !=nil {return nil ,_agee ;};};};if _accdf :=_dgeae .Get ("\u0041");_accdf !=nil {_gbaf .A =_ged .ResolveReference (_accdf );if !_cefbg ._dbfdg {_gacgc :=_cefbg .traverseObjectData (_gbaf .A );if _gacgc !=nil {return nil ,_gacgc ;};};};if _aadgf :=_dgeae .Get ("\u0053\u0045");_aadgf !=nil {_gbaf .SE =nil ;};if _fcda :=_dgeae .Get ("\u0043");_fcda !=nil {_gbaf .C =_ged .ResolveReference (_fcda );};if _bgdef :=_dgeae .Get ("\u0046");_bgdef !=nil {_gbaf .F =_ged .ResolveReference (_bgdef );};return _gbaf ,nil ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// ToPdfObject implements interface PdfModel.
func (_gbde *PdfAnnotationFileAttachment )ToPdfObject ()_ged .PdfObject {_gbde .PdfAnnotation .ToPdfObject ();_fcbg :=_gbde ._efb ;_bee :=_fcbg .PdfObject .(*_ged .PdfObjectDictionary );_gbde .PdfAnnotationMarkup .appendToPdfDictionary (_bee );_bee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));_bee .SetIfNotNil ("\u0046\u0053",_gbde .FS );_bee .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gbde .Name );return _fcbg ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_cfc *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cfc .AlternateSpace ==nil {return nil ,_fc .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};return _cfc .AlternateSpace .ColorToRGB (color );};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_dfa :=NewPdfAction ();_gaa :=&PdfActionGoToE {};_gaa .PdfAction =_dfa ;_dfa .SetContext (_gaa );return _gaa ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_fgbbg :=&PdfPageResourcesColorspaces {};_fgbbg .Names =[]string {};_fgbbg .Colorspaces =map[string ]PdfColorspace {};_fgbbg ._acdd =&_ged .PdfIndirectObject {};return _fgbbg ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_fecb *PdfColorspaceDeviceN )ToPdfObject ()_ged .PdfObject {_ccccc :=_ged .MakeArray (_ged .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_ccccc .Append (_fecb .ColorantNames );_ccccc .Append (_fecb .AlternateSpace .ToPdfObject ());_ccccc .Append (_fecb .TintTransform .ToPdfObject ());if _fecb .Attributes !=nil {_ccccc .Append (_fecb .Attributes .ToPdfObject ());};if _fecb ._cgfcd !=nil {_fecb ._cgfcd .PdfObject =_ccccc ;return _fecb ._cgfcd ;};return _ccccc ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_ged .PdfObjectArray ;TI *_ged .PdfObjectInteger ;I *_ged .PdfObjectArray ;};

// ToPdfObject implements interface PdfModel.
func (_dbd *PdfAnnotationUnderline )ToPdfObject ()_ged .PdfObject {_dbd .PdfAnnotation .ToPdfObject ();_edfe :=_dbd ._efb ;_aabbe :=_edfe .PdfObject .(*_ged .PdfObjectDictionary );_dbd .PdfAnnotationMarkup .appendToPdfDictionary (_aabbe );_aabbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));_aabbe .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dbd .QuadPoints );return _edfe ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_df :=NewPdfAction ();_dff :=&PdfActionGoToR {};_dff .PdfAction =_df ;_df .SetContext (_dff );return _dff ;};func (_ffcd *PdfReader )newPdfAnnotationCaretFromDict (_debd *_ged .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_ebdf :=PdfAnnotationCaret {};_abge ,_efe :=_ffcd .newPdfAnnotationMarkupFromDict (_debd );if _efe !=nil {return nil ,_efe ;};_ebdf .PdfAnnotationMarkup =_abge ;_ebdf .RD =_debd .Get ("\u0052\u0044");_ebdf .Sy =_debd .Get ("\u0053\u0079");return &_ebdf ,nil ;};func _cfda (_efeg string )(map[_ffe .CharCode ]_ffe .GlyphName ,error ){_ccfbc :=_bf .Split (_efeg ,"\u000a");_bcadb :=make (map[_ffe .CharCode ]_ffe .GlyphName );for _ ,_eaedb :=range _ccfbc {_ababb :=_eabfd .FindStringSubmatch (_eaedb );if _ababb ==nil {continue ;};_acef ,_acede :=_ababb [1],_ababb [2];_cefa ,_eeded :=_ea .Atoi (_acef );if _eeded !=nil {_eg .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_eaedb );return nil ,_ged .ErrTypeError ;};_bcadb [_ffe .CharCode (_cefa )]=_ffe .GlyphName (_acede );};_eg .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_bcadb );return _bcadb ,nil ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_aff :=NewPdfAction ();_ade :=&PdfActionTrans {};_ade .PdfAction =_aff ;_aff .SetContext (_ade );return _ade ;};

// B returns the value of the blue component of the color.
func (_afda *PdfColorDeviceRGB )B ()float64 {return _afda [2]};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_bcbc PdfModel ;_abgg _ged .PdfObject ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};type pdfFontType0 struct{fontCommon ;_efbfc *_ged .PdfIndirectObject ;_ddga _ffe .TextEncoder ;Encoding _ged .PdfObject ;DescendantFont *PdfFont ;_ffcaa *_ec .CMap ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_fbdfa *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_gcac :=NewPdfOutlineItem ();_gcac .Title =_ged .MakeEncodedString (_fbdfa .Title ,true );_gcac .Dest =_fbdfa .Dest .ToPdfObject ();var _ebbeb []*PdfOutlineItem ;var _fdff int64 ;var _feefg *PdfOutlineItem ;for _ ,_aaebe :=range _fbdfa .Entries {_debdc ,_bgegg :=_aaebe .ToPdfOutlineItem ();_debdc .Parent =&_gcac .PdfOutlineTreeNode ;if _feefg !=nil {_feefg .Next =&_debdc .PdfOutlineTreeNode ;_debdc .Prev =&_feefg .PdfOutlineTreeNode ;};_ebbeb =append (_ebbeb ,_debdc );_fdff +=_bgegg ;_feefg =_debdc ;};_fcfaa :=len (_ebbeb );_fdff +=int64 (_fcfaa );if _fcfaa > 0{_gcac .First =&_ebbeb [0].PdfOutlineTreeNode ;_gcac .Last =&_ebbeb [_fcfaa -1].PdfOutlineTreeNode ;_gcac .Count =&_fdff ;};return _gcac ,_fdff ;};func (_ecab *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// AddAnnotation appends `annot` to the list of page annotations.
func (_gdgfd *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _gdgfd ._fedfg ==nil {_gdgfd .GetAnnotations ();};_gdgfd ._fedfg =append (_gdgfd ._fedfg ,annot );};

// PdfVersion returns version of the PDF file.
func (_cgega *PdfReader )PdfVersion ()_ged .Version {return _cgega ._ebea .PdfVersion ()};

// ToPdfObject returns the PDF representation of the pattern.
func (_cadec *PdfPattern )ToPdfObject ()_ged .PdfObject {_ffbgd :=_cadec .getDict ();_ffbgd .Set ("\u0054\u0079\u0070\u0065",_ged .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_ffbgd .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_ged .MakeInteger (_cadec .PatternType ));return _cadec ._abgg ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_dfcbg *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcfe :=vals [0];if _gcfe < 0.0||_gcfe > 1.0{_eg .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");};if _gcfe < 0.0{_gcfe =0.0;}else if _gcfe > 1.0{_gcfe =1.0;};return NewPdfColorDeviceGray (_gcfe ),nil ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_afag :=NewPdfAnnotation ();_fdb :=&PdfAnnotationInk {};_fdb .PdfAnnotation =_afag ;_fdb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_afag .SetContext (_fdb );return _fdb ;};func (_eeb *PdfAppender )replaceObject (_edga ,_bdbc _ged .PdfObject ){switch _eaec :=_edga .(type ){case *_ged .PdfIndirectObject :_eeb ._adbf [_bdbc ]=_eaec .ObjectNumber ;case *_ged .PdfObjectStream :_eeb ._adbf [_bdbc ]=_eaec .ObjectNumber ;};};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_ege *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_dfff ,_cgce :=color .(*PdfColorDeviceRGB );if !_cgce {_eg .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");return nil ,_fc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _dfff ,nil ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_facee *Image )Resample (targetBitsPerComponent int64 ){if _facee .BitsPerComponent ==targetBitsPerComponent {return ;};_bfab :=_facee .GetSamples ();if targetBitsPerComponent < _facee .BitsPerComponent {_dcged :=_facee .BitsPerComponent -targetBitsPerComponent ;for _bcdfc :=range _bfab {_bfab [_bcdfc ]>>=uint (_dcged );};}else if targetBitsPerComponent > _facee .BitsPerComponent {_gdfc :=targetBitsPerComponent -_facee .BitsPerComponent ;for _bcgff :=range _bfab {_bfab [_bcgff ]<<=uint (_gdfc );};};_facee .BitsPerComponent =targetBitsPerComponent ;if _facee .BitsPerComponent < 8{_facee .resampleLowBits (_bfab );return ;};_aecgf :=_daf .BytesPerLine (int (_facee .Width ),int (_facee .BitsPerComponent ),_facee .ColorComponents );_ffdc :=make ([]byte ,_aecgf *int (_facee .Height ));var (_cfdb ,_daef ,_bdfg ,_fabdc int ;_agbd uint32 ;);for _bdfg =0;_bdfg < int (_facee .Height );_bdfg ++{_cfdb =_bdfg *_aecgf ;_daef =(_bdfg +1)*_aecgf -1;_abdaa :=_fec .ResampleUint32 (_bfab [_cfdb :_daef ],int (targetBitsPerComponent ),8);for _fabdc ,_agbd =range _abdaa {_ffdc [_fabdc +_cfdb ]=byte (_agbd );};};_facee .Data =_ffdc ;};

// GetContentStream returns the pattern cell's content stream
func (_cfddf *PdfTilingPattern )GetContentStream ()([]byte ,error ){_efbae ,_ ,_eccec :=_cfddf .GetContentStreamWithEncoder ();return _efbae ,_eccec ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_fegf int64 ;_ggdde int64 ;_afbdgf int64 ;_gaadc int64 ;_geeba int64 ;_eeddb int64 ;_fgacaa byte ;_eeegec int64 ;_acea int64 ;};

// Encoder returns the font's text encoder.
func (_babee pdfCIDFontType2 )Encoder ()_ffe .TextEncoder {return _babee ._gecbd };func (_badd *LTV )getCRLs (_gcegf []*_fe .Certificate )([][]byte ,error ){_cggcb :=make ([][]byte ,0,len (_gcegf ));for _ ,_gbddb :=range _gcegf {for _ ,_efcdb :=range _gbddb .CRLDistributionPoints {if _badd .CertClient .IsCA (_gbddb ){continue ;};_fgccb ,_bgda :=_badd .CRLClient .MakeRequest (_efcdb ,_gbddb );if _bgda !=nil {_eg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_bgda );continue ;};_cggcb =append (_cggcb ,_fgccb );};};return _cggcb ,nil ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_egg :=NewPdfAnnotation ();_aedg :=&PdfAnnotationSquiggly {};_aedg .PdfAnnotation =_egg ;_aedg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_egg .SetContext (_aedg );return _aedg ;};func (_bbbec *PdfWriter )copyObject (_aegb _ged .PdfObject ,_gedac map[_ged .PdfObject ]_ged .PdfObject ,_ebcg map[_ged .PdfObject ]struct{},_adca bool )_ged .PdfObject {_gaddc :=!_bbbec ._fbbgd &&_ebcg !=nil ;if _debgg ,_deeef :=_gedac [_aegb ];_deeef {if _gaddc &&!_adca {delete (_ebcg ,_aegb );};return _debgg ;};_edaff :=_aegb ;switch _bbcgg :=_aegb .(type ){case *_ged .PdfObjectArray :_bbcgb :=_ged .MakeArray ();_edaff =_bbcgb ;_gedac [_aegb ]=_edaff ;for _ ,_efaf :=range _bbcgg .Elements (){_bbcgb .Append (_bbbec .copyObject (_efaf ,_gedac ,_ebcg ,_adca ));};case *_ged .PdfObjectStreams :_fcfae :=&_ged .PdfObjectStreams {PdfObjectReference :_bbcgg .PdfObjectReference };_edaff =_fcfae ;_gedac [_aegb ]=_edaff ;for _ ,_efbdf :=range _bbcgg .Elements (){_fcfae .Append (_bbbec .copyObject (_efbdf ,_gedac ,_ebcg ,_adca ));};case *_ged .PdfObjectStream :_fdbb :=&_ged .PdfObjectStream {Stream :_bbcgg .Stream ,PdfObjectReference :_bbcgg .PdfObjectReference };_edaff =_fdbb ;_gedac [_aegb ]=_edaff ;_fdbb .PdfObjectDictionary =_bbbec .copyObject (_bbcgg .PdfObjectDictionary ,_gedac ,_ebcg ,_adca ).(*_ged .PdfObjectDictionary );case *_ged .PdfObjectDictionary :var _acffeg bool ;if _gaddc &&!_adca {if _eccga ,_ :=_ged .GetNameVal (_bbcgg .Get ("\u0054\u0079\u0070\u0065"));_eccga =="\u0050\u0061\u0067\u0065"{_ ,_geff :=_bbbec ._cacdf [_bbcgg ];_adca =!_geff ;_acffeg =_adca ;};};_eefgf :=_ged .MakeDict ();_edaff =_eefgf ;_gedac [_aegb ]=_edaff ;for _ ,_agfcg :=range _bbcgg .Keys (){_eefgf .Set (_agfcg ,_bbbec .copyObject (_bbcgg .Get (_agfcg ),_gedac ,_ebcg ,_adca ));};if _acffeg {_edaff =_ged .MakeNull ();_adca =false ;};case *_ged .PdfIndirectObject :_aeeed :=&_ged .PdfIndirectObject {PdfObjectReference :_bbcgg .PdfObjectReference };_edaff =_aeeed ;_gedac [_aegb ]=_edaff ;_aeeed .PdfObject =_bbbec .copyObject (_bbcgg .PdfObject ,_gedac ,_ebcg ,_adca );case *_ged .PdfObjectString :_dbed :=*_bbcgg ;_edaff =&_dbed ;_gedac [_aegb ]=_edaff ;case *_ged .PdfObjectName :_fcec :=*_bbcgg ;_edaff =&_fcec ;_gedac [_aegb ]=_edaff ;case *_ged .PdfObjectNull :_edaff =_ged .MakeNull ();_gedac [_aegb ]=_edaff ;case *_ged .PdfObjectInteger :_cgggd :=*_bbcgg ;_edaff =&_cgggd ;_gedac [_aegb ]=_edaff ;case *_ged .PdfObjectReference :_gaafa :=*_bbcgg ;_edaff =&_gaafa ;_gedac [_aegb ]=_edaff ;case *_ged .PdfObjectFloat :_gbagg :=*_bbcgg ;_edaff =&_gbagg ;_gedac [_aegb ]=_edaff ;case *_ged .PdfObjectBool :_facag :=*_bbcgg ;_edaff =&_facag ;_gedac [_aegb ]=_edaff ;case *pdfSignDictionary :_cccbb :=&pdfSignDictionary {PdfObjectDictionary :_ged .MakeDict (),_ccabd :_bbcgg ._ccabd ,_affb :_bbcgg ._affb };_edaff =_cccbb ;_gedac [_aegb ]=_edaff ;for _ ,_gddgac :=range _bbcgg .Keys (){_cccbb .Set (_gddgac ,_bbbec .copyObject (_bbcgg .Get (_gddgac ),_gedac ,_ebcg ,_adca ));};default:_eg .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_aegb );};if _gaddc &&_adca {_ebcg [_aegb ]=struct{}{};};return _edaff ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_afaga *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _afaga ._afbe ==nil {_afaga ._afbe =_cff .NewPSExecutor (_afaga .Program );};var _gbfb []_cff .PSObject ;for _ ,_bgcec :=range xVec {_gbfb =append (_gbfb ,_cff .MakeReal (_bgcec ));};_eagg ,_dcggc :=_afaga ._afbe .Execute (_gbfb );if _dcggc !=nil {return nil ,_dcggc ;};_ebfcf ,_dcggc :=_cff .PSObjectArrayToFloat64Array (_eagg );if _dcggc !=nil {return nil ,_dcggc ;};return _ebfcf ,nil ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_agagc *PdfReader )CheckAccessRights (password []byte )(bool ,_gc .Permissions ,error ){return _agagc ._ebea .CheckAccessRights (password );};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_edddd :=&XObjectImage {};_fbcgd :=&_ged .PdfObjectStream {};_fbcgd .PdfObjectDictionary =_ged .MakeDict ();_edddd ._fcdab =_fbcgd ;return _edddd ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_bgeae *DSS )ToPdfObject ()_ged .PdfObject {_aafb :=_bgeae ._gac .PdfObject .(*_ged .PdfObjectDictionary );_aafb .Clear ();_fdeda :=_ged .MakeDict ();for _fbgbb ,_cfga :=range _bgeae .VRI {_fdeda .Set (*_ged .MakeName (_fbgbb ),_cfga .ToPdfObject ());};_aafb .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_efbcb (_bgeae .Certs ));_aafb .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_efbcb (_bgeae .OCSPs ));_aafb .SetIfNotNil ("\u0043\u0052\u004c\u0073",_efbcb (_bgeae .CRLs ));_aafb .Set ("\u0056\u0052\u0049",_fdeda );return _bgeae ._gac ;};

// ToPdfObject implements interface PdfModel.
func (_efbg *PdfAnnotationPrinterMark )ToPdfObject ()_ged .PdfObject {_efbg .PdfAnnotation .ToPdfObject ();_bacg :=_efbg ._efb ;_faeg :=_bacg .PdfObject .(*_ged .PdfObjectDictionary );_faeg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));_faeg .SetIfNotNil ("\u004d\u004e",_efbg .MN );return _bacg ;};func (_dbf *PdfAnnotation )String ()string {_bcg :="";_fgac ,_adee :=_dbf .ToPdfObject ().(*_ged .PdfIndirectObject );if _adee {_bcg =_d .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_dbf ._edg ,_fgac .PdfObject .String ());};return _bcg ;};

// AddImageResource adds an image to the XObject resources.
func (_agef *PdfPage )AddImageResource (name _ged .PdfObjectName ,ximg *XObjectImage )error {var _gdfgf *_ged .PdfObjectDictionary ;if _agef .Resources .XObject ==nil {_gdfgf =_ged .MakeDict ();_agef .Resources .XObject =_gdfgf ;}else {var _efecc bool ;_gdfgf ,_efecc =(_agef .Resources .XObject ).(*_ged .PdfObjectDictionary );if !_efecc {return _fc .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_gdfgf .Set (name ,ximg .ToPdfObject ());return nil ;};

// ToPdfObject implements interface PdfModel.
func (_ebgab *PdfAnnotationInk )ToPdfObject ()_ged .PdfObject {_ebgab .PdfAnnotation .ToPdfObject ();_aaca :=_ebgab ._efb ;_gaac :=_aaca .PdfObject .(*_ged .PdfObjectDictionary );_ebgab .PdfAnnotationMarkup .appendToPdfDictionary (_gaac );_gaac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0049\u006e\u006b"));_gaac .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_ebgab .InkList );_gaac .SetIfNotNil ("\u0042\u0053",_ebgab .BS );return _aaca ;};

// ToPdfObject implements interface PdfModel.
func (_aab *PdfActionHide )ToPdfObject ()_ged .PdfObject {_aab .PdfAction .ToPdfObject ();_fag :=_aab ._ebd ;_egd :=_fag .PdfObject .(*_ged .PdfObjectDictionary );_egd .SetIfNotNil ("\u0053",_ged .MakeName (string (ActionTypeHide )));_egd .SetIfNotNil ("\u0054",_aab .T );_egd .SetIfNotNil ("\u0048",_aab .H );return _fag ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_ggfgb *PdfPageResources )SetColorspaceByName (keyName _ged .PdfObjectName ,cs PdfColorspace )error {_abbag ,_fcaa :=_ggfgb .GetColorspaces ();if _fcaa !=nil {_eg .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_fcaa );return _fcaa ;};if _abbag ==nil {_abbag =NewPdfPageResourcesColorspaces ();_ggfgb .SetColorSpace (_abbag );};_abbag .Set (keyName ,cs );return nil ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_cdag :=PdfPage {};_cdag ._egbgb =_ged .MakeDict ();_cdag .Resources =NewPdfPageResources ();_gdeee :=_ged .PdfIndirectObject {};_gdeee .PdfObject =_cdag ._egbgb ;_cdag ._egef =&_gdeee ;return &_cdag ;};

// String returns a human readable description of `fontfile`.
func (_bgcd *fontFile )String ()string {_gcfa :="\u005b\u004e\u006f\u006e\u0065\u005d";if _bgcd ._edege !=nil {_gcfa =_bgcd ._edege .String ();};return _d .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_bgcd ._adbec ,_gcfa );};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _ged .PdfObject ;NewWindow _ged .PdfObject ;T _ged .PdfObject ;};func _eeefg (_bcfga _ged .PdfObject ){_eg .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_bcfga ,_bcfga .String ());if _gbcdf ,_decf :=_bcfga .(*_ged .PdfObjectStream );_decf {_gagcd ,_geaag :=_ged .DecodeStream (_gbcdf );if _geaag !=nil {_eg .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_geaag );return ;};_eg .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_gagcd );}else if _gdce ,_dcbfa :=_bcfga .(*_ged .PdfIndirectObject );_dcbfa {_eg .Log .Debug ("\u0025\u0054\u0020%\u0076",_gdce .PdfObject ,_gdce .PdfObject );_eg .Log .Debug ("\u0025\u0073",_gdce .PdfObject .String ());};};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_ged .PdfObjectString ;Author *_ged .PdfObjectString ;Subject *_ged .PdfObjectString ;Keywords *_ged .PdfObjectString ;Creator *_ged .PdfObjectString ;Producer *_ged .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_ged .PdfObjectName ;};func (_faagb *PdfPage )setContainer (_daggg *_ged .PdfIndirectObject ){_daggg .PdfObject =_faagb ._egbgb ;_faagb ._egef =_daggg ;};func (_gcae *PdfReader )newPdfAnnotationInkFromDict (_cgg *_ged .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_agcf :=PdfAnnotationInk {};_efbb ,_gbd :=_gcae .newPdfAnnotationMarkupFromDict (_cgg );if _gbd !=nil {return nil ,_gbd ;};_agcf .PdfAnnotationMarkup =_efbb ;_agcf .InkList =_cgg .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_agcf .BS =_cgg .Get ("\u0042\u0053");return &_agcf ,nil ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_acfc :=NewPdfAnnotation ();_eea :=&PdfAnnotationPolyLine {};_eea .PdfAnnotation =_acfc ;_eea .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_acfc .SetContext (_eea );return _eea ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };func (_abfbd *PdfReader )newPdfSignatureFromIndirect (_bgdbea *_ged .PdfIndirectObject )(*PdfSignature ,error ){_ebebd ,_efdb :=_bgdbea .PdfObject .(*_ged .PdfObjectDictionary );if !_efdb {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,ErrTypeCheck ;};if _gfggf ,_gfgae :=_abfbd ._accc .GetModelFromPrimitive (_bgdbea ).(*PdfSignature );_gfgae {return _gfggf ,nil ;};_ccecg :=&PdfSignature {};_ccecg ._fadfb =_bgdbea ;_ccecg .Type ,_ =_ged .GetName (_ebebd .Get ("\u0054\u0079\u0070\u0065"));_ccecg .Filter ,_efdb =_ged .GetName (_ebebd .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_efdb {_eg .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_ccecg .SubFilter ,_ =_ged .GetName (_ebebd .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_ccecg .Contents ,_efdb =_ged .GetString (_ebebd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_efdb {_eg .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_ccecg .Cert =_ebebd .Get ("\u0043\u0065\u0072\u0074");_ccecg .ByteRange ,_ =_ged .GetArray (_ebebd .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_ccecg .Reference ,_ =_ged .GetArray (_ebebd .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_ccecg .Changes ,_ =_ged .GetArray (_ebebd .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_ccecg .Name ,_ =_ged .GetString (_ebebd .Get ("\u004e\u0061\u006d\u0065"));_ccecg .M ,_ =_ged .GetString (_ebebd .Get ("\u004d"));_ccecg .Location ,_ =_ged .GetString (_ebebd .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));_ccecg .Reason ,_ =_ged .GetString (_ebebd .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_ccecg .ContactInfo ,_ =_ged .GetString (_ebebd .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_ccecg .R ,_ =_ged .GetInt (_ebebd .Get ("\u0052"));_ccecg .V ,_ =_ged .GetInt (_ebebd .Get ("\u0056"));_ccecg .PropBuild ,_ =_ged .GetDict (_ebebd .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_ccecg .PropAuthTime ,_ =_ged .GetInt (_ebebd .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));_ccecg .PropAuthType ,_ =_ged .GetName (_ebebd .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _ccecg ,nil ;};

// ReplacePage replaces the original page to a new page.
func (_ddef *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_fcfa :=pageNum -1;for _faaf :=range _ddef ._feeg {if _faaf ==_fcfa {_fccg :=page .Duplicate ();_gbdbb (_fccg );_ddef ._feeg [_faaf ]=_fccg ;};};};func _adacbb ()*modelManager {_efcef :=modelManager {};_efcef ._ccgfb =map[PdfModel ]_ged .PdfObject {};_efcef ._defb =map[_ged .PdfObject ]PdfModel {};return &_efcef ;};var _gdcg =false ;func (_gaag *PdfReader )newPdfAnnotationTrapNetFromDict (_bbb *_ged .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_bfga :=PdfAnnotationTrapNet {};return &_bfga ,nil ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_cffc *PdfPageResources )HasXObjectByName (keyName _ged .PdfObjectName )bool {_gbbda ,_ :=_cffc .GetXObjectByName (keyName );return _gbbda !=nil ;};func (_ffce *PdfReader )buildOutlineTree (_egdfa _ged .PdfObject ,_fdbag *PdfOutlineTreeNode ,_bdfda *PdfOutlineTreeNode ,_gedc map[_ged .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _gedc ==nil {_gedc =map[_ged .PdfObject ]struct{}{};};_gedc [_egdfa ]=struct{}{};_adccf ,_eedga :=_egdfa .(*_ged .PdfIndirectObject );if !_eedga {return nil ,nil ,_d .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_egdfa );};_bcdac ,_fdgdb :=_adccf .PdfObject .(*_ged .PdfObjectDictionary );if !_fdgdb {return nil ,nil ,_fc .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_eg .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_bcdac ,_adccf ,_adccf );if _becec :=_bcdac .Get ("\u0054\u0069\u0074l\u0065");_becec !=nil {_ceeb ,_fefga :=_ffce .newPdfOutlineItemFromIndirectObject (_adccf );if _fefga !=nil {return nil ,nil ,_fefga ;};_ceeb .Parent =_fdbag ;_ceeb .Prev =_bdfda ;_fbfaa :=_ged .ResolveReference (_bcdac .Get ("\u0046\u0069\u0072s\u0074"));if _ ,_bbbbg :=_gedc [_fbfaa ];_fbfaa !=nil &&_fbfaa !=_adccf &&!_bbbbg {if !_ged .IsNullObject (_fbfaa ){_bcbe ,_fgebf ,_bdbb :=_ffce .buildOutlineTree (_fbfaa ,&_ceeb .PdfOutlineTreeNode ,nil ,_gedc );if _bdbb !=nil {_eg .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_bdbb );}else {_ceeb .First =_bcbe ;_ceeb .Last =_fgebf ;};};};_fdgba :=_ged .ResolveReference (_bcdac .Get ("\u004e\u0065\u0078\u0074"));if _ ,_egggf :=_gedc [_fdgba ];_fdgba !=nil &&_fdgba !=_adccf &&!_egggf {if !_ged .IsNullObject (_fdgba ){_ceagac ,_ccbe ,_bbbbgd :=_ffce .buildOutlineTree (_fdgba ,_fdbag ,&_ceeb .PdfOutlineTreeNode ,_gedc );if _bbbbgd !=nil {_eg .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_bbbbgd );}else {_ceeb .Next =_ceagac ;return &_ceeb .PdfOutlineTreeNode ,_ccbe ,nil ;};};};return &_ceeb .PdfOutlineTreeNode ,&_ceeb .PdfOutlineTreeNode ,nil ;};_bafad ,_fbfdg :=_dacd (_adccf );if _fbfdg !=nil {return nil ,nil ,_fbfdg ;};_bafad .Parent =_fdbag ;if _eeedd :=_bcdac .Get ("\u0046\u0069\u0072s\u0074");_eeedd !=nil {_eeedd =_ged .ResolveReference (_eeedd );if _ ,_bcfef :=_gedc [_eeedd ];_eeedd !=nil &&_eeedd !=_adccf &&!_bcfef {_gccd :=_ged .TraceToDirectObject (_eeedd );if _ ,_cagf :=_gccd .(*_ged .PdfObjectNull );!_cagf &&_gccd !=nil {_afeb ,_cfdcc ,_cfaeg :=_ffce .buildOutlineTree (_eeedd ,&_bafad .PdfOutlineTreeNode ,nil ,_gedc );if _cfaeg !=nil {_eg .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_cfaeg );}else {_bafad .First =_afeb ;_bafad .Last =_cfdcc ;};};};};return &_bafad .PdfOutlineTreeNode ,&_bafad .PdfOutlineTreeNode ,nil ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ged .PdfObject ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_ccab *PdfReader )Decrypt (password []byte )(bool ,error ){_bfedd ,_bffe :=_ccab ._ebea .Decrypt (password );if _bffe !=nil {return false ,_bffe ;};if !_bfedd {return false ,nil ;};_bffe =_ccab .loadStructure ();if _bffe !=nil {_eg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_bffe );return false ,_bffe ;};return true ,nil ;};

// String returns a string representation of what flags are set.
func (_gecg FieldFlag )String ()string {_fegdg :="";if _gecg ==FieldFlagClear {_fegdg ="\u0043\u006c\u0065a\u0072";return _fegdg ;};if _gecg &FieldFlagReadOnly > 0{_fegdg +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _gecg &FieldFlagRequired > 0{_fegdg +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _gecg &FieldFlagNoExport > 0{_fegdg +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _gecg &FieldFlagNoToggleToOff > 0{_fegdg +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _gecg &FieldFlagRadio > 0{_fegdg +="\u007c\u0052\u0061\u0064\u0069\u006f";};if _gecg &FieldFlagPushbutton > 0{_fegdg +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _gecg &FieldFlagRadiosInUnision > 0{_fegdg +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _gecg &FieldFlagMultiline > 0{_fegdg +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";};if _gecg &FieldFlagPassword > 0{_fegdg +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _gecg &FieldFlagFileSelect > 0{_fegdg +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _gecg &FieldFlagDoNotScroll > 0{_fegdg +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";};if _gecg &FieldFlagComb > 0{_fegdg +="\u007c\u0043\u006fm\u0062";};if _gecg &FieldFlagRichText > 0{_fegdg +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _gecg &FieldFlagDoNotSpellCheck > 0{_fegdg +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";};if _gecg &FieldFlagCombo > 0{_fegdg +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _gecg &FieldFlagEdit > 0{_fegdg +="\u007c\u0045\u0064i\u0074";};if _gecg &FieldFlagSort > 0{_fegdg +="\u007c\u0053\u006fr\u0074";};if _gecg &FieldFlagMultiSelect > 0{_fegdg +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";};if _gecg &FieldFlagCommitOnSelChange > 0{_fegdg +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _bf .Trim (_fegdg ,"\u007c");};func (_edfb *PdfReader )newPdfAnnotationPolyLineFromDict (_bcce *_ged .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_eefa :=PdfAnnotationPolyLine {};_ggf ,_cccc :=_edfb .newPdfAnnotationMarkupFromDict (_bcce );if _cccc !=nil {return nil ,_cccc ;};_eefa .PdfAnnotationMarkup =_ggf ;_eefa .Vertices =_bcce .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_eefa .LE =_bcce .Get ("\u004c\u0045");_eefa .BS =_bcce .Get ("\u0042\u0053");_eefa .IC =_bcce .Get ("\u0049\u0043");_eefa .BE =_bcce .Get ("\u0042\u0045");_eefa .IT =_bcce .Get ("\u0049\u0054");_eefa .Measure =_bcce .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_eefa ,nil ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _ged .PdfObject ;Movie _ged .PdfObject ;A _ged .PdfObject ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_ebegf *pdfFontSimple )ToPdfObject ()_ged .PdfObject {if _ebegf ._gaacf ==nil {_ebegf ._gaacf =&_ged .PdfIndirectObject {};};_ffdbg :=_ebegf .baseFields ().asPdfObjectDictionary ("");_ebegf ._gaacf .PdfObject =_ffdbg ;if _ebegf .FirstChar !=nil {_ffdbg .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_ebegf .FirstChar );};if _ebegf .LastChar !=nil {_ffdbg .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_ebegf .LastChar );};if _ebegf .Widths !=nil {_ffdbg .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_ebegf .Widths );};if _ebegf .Encoding !=nil {_ffdbg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ebegf .Encoding );}else if _ebegf ._efda !=nil {_cafa :=_ebegf ._efda .ToPdfObject ();if _cafa !=nil {_ffdbg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cafa );};};return _ebegf ._gaacf ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_deegb *PdfInfo )ToPdfObject ()_ged .PdfObject {_eddf :=_ged .MakeDict ();_eddf .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_deegb .Title );_eddf .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_deegb .Author );_eddf .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_deegb .Subject );_eddf .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_deegb .Keywords );_eddf .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_deegb .Creator );_eddf .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_deegb .Producer );_eddf .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_deegb .Trapped );if _deegb .CreationDate !=nil {_eddf .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_deegb .CreationDate .ToPdfObject ());};if _deegb .ModifiedDate !=nil {_eddf .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_deegb .ModifiedDate .ToPdfObject ());};return _eddf ;};func _agba (_gcdccf *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_gcdccf }};func (_ggfg *PdfAppender )updateObjectsDeep (_dgae _ged .PdfObject ,_bbde map[_ged .PdfObject ]struct{}){if _bbde ==nil {_bbde =map[_ged .PdfObject ]struct{}{};};if _ ,_ddaa :=_bbde [_dgae ];_ddaa ||_dgae ==nil {return ;};_bbde [_dgae ]=struct{}{};_aabf :=_ged .ResolveReferencesDeep (_dgae ,_ggfg ._dfgf );if _aabf !=nil {_eg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aabf );};switch _agab :=_dgae .(type ){case *_ged .PdfIndirectObject :switch {case _agab .GetParser ()==_ggfg ._add ._ebea :return ;case _agab .GetParser ()==_ggfg .Reader ._ebea :_aag ,_ :=_ggfg ._add .GetIndirectObjectByNumber (int (_agab .ObjectNumber ));_cdca ,_edfba :=_aag .(*_ged .PdfIndirectObject );if _edfba &&_cdca !=nil {if _cdca .PdfObject !=_agab .PdfObject &&_cdca .PdfObject .WriteString ()!=_agab .PdfObject .WriteString (){_ggfg .addNewObject (_dgae );_ggfg ._adbf [_dgae ]=_agab .ObjectNumber ;};};default:_ggfg .addNewObject (_dgae );};_ggfg .updateObjectsDeep (_agab .PdfObject ,_bbde );case *_ged .PdfObjectArray :for _ ,_edec :=range _agab .Elements (){_ggfg .updateObjectsDeep (_edec ,_bbde );};case *_ged .PdfObjectDictionary :for _ ,_bbg :=range _agab .Keys (){_ggfg .updateObjectsDeep (_agab .Get (_bbg ),_bbde );};case *_ged .PdfObjectStreams :if _agab .GetParser ()!=_ggfg ._add ._ebea {for _ ,_eefb :=range _agab .Elements (){_ggfg .updateObjectsDeep (_eefb ,_bbde );};};case *_ged .PdfObjectStream :switch {case _agab .GetParser ()==_ggfg ._add ._ebea :return ;case _agab .GetParser ()==_ggfg .Reader ._ebea :if _bfa ,_eggb :=_ggfg ._add ._ebea .LookupByReference (_agab .PdfObjectReference );_eggb ==nil {var _dadb bool ;if _ffea ,_gebb :=_ged .GetStream (_bfa );_gebb &&_bd .Equal (_ffea .Stream ,_agab .Stream ){_dadb =true ;};if _bcge ,_gccgd :=_ged .GetDict (_bfa );_dadb &&_gccgd {_dadb =_bcge .WriteString ()==_agab .PdfObjectDictionary .WriteString ();};if _dadb {return ;};};if _agab .ObjectNumber !=0{_ggfg ._adbf [_dgae ]=_agab .ObjectNumber ;};default:if _ ,_gaage :=_ggfg ._cgdd [_dgae ];!_gaage {_ggfg .addNewObject (_dgae );};};_ggfg .updateObjectsDeep (_agab .PdfObjectDictionary ,_bbde );};};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_bbeaf :=&PdfPageResources {};_bbeaf ._bbga =_ged .MakeDict ();return _bbeaf ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_gdabg .Lock ();defer _gdabg .Unlock ();_dbcb =author };

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_ebe :=NewPdfAction ();_gecd :=&PdfActionSetOCGState {};_gecd .PdfAction =_ebe ;_ebe .SetContext (_gecd );return _gecd ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_bafa _aa .ReadSeeker ;_gdee *_ged .PdfParser ;_add *PdfReader ;Reader *PdfReader ;_feeg []*PdfPage ;_acgg *PdfAcroForm ;_bebg *DSS ;_fdae _ged .XrefTable ;_dggda int64 ;_gbbc int ;_beae []_ged .PdfObject ;_cgdd map[_ged .PdfObject ]struct{};_adbf map[_ged .PdfObject ]int64 ;_fde map[_ged .PdfObject ]struct{};_dfgf map[_ged .PdfObject ]struct{};_fgfa int64 ;_feb bool ;};

// AddOutlineTree adds outlines to a PDF file.
func (_agcgc *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_agcgc ._fbfdb =outlineTree };

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_cgbc *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _cgbc .flattenFieldsWithOpts (allannots ,appgen ,nil );};func _eedaa (_fbda *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_fbda }};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_ffb :=NewPdfAnnotation ();_caea :=&PdfAnnotationStrikeOut {};_caea .PdfAnnotation =_ffb ;_caea .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffb .SetContext (_caea );return _caea ;};func (_fccde *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _fccde ._dfede ==nil &&_fccde .DescendantFont !=nil {return _fccde .DescendantFont .FontDescriptor ();};return _fccde ._dfede ;};func (_cgdg *PdfWriter )addObject (_eccdc _ged .PdfObject )bool {_bgaba :=_cgdg .hasObject (_eccdc );if !_bgaba {_dabgg :=_ged .ResolveReferencesDeep (_eccdc ,_cgdg ._gabeg );if _dabgg !=nil {_eg .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_dabgg );};_cgdg ._fedfa =append (_cgdg ._fedfa ,_eccdc );_cgdg ._fdbab [_eccdc ]=struct{}{};return true ;};return false ;};

// SetNamedDestinations sets the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_ebfge *PdfWriter )SetNamedDestinations (names _ged .PdfObject )error {if names ==nil {return nil ;};_eg .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");_ebfge ._ffceb .Set ("\u004e\u0061\u006de\u0073",names );return _ebfge .addObjects (names );};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_fcf :=NewPdfAction ();_gbb :=&PdfActionSubmitForm {};_gbb .PdfAction =_fcf ;_fcf .SetContext (_gbb );return _gbb ;};func _cgddc (_ddgbd *XObjectImage )error {if _ddgbd .SMask ==nil {return nil ;};_fcfdb ,_egebe :=_ddgbd .SMask .(*_ged .PdfObjectStream );if !_egebe {_eg .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _ged .ErrTypeError ;};_abcee :=_fcfdb .PdfObjectDictionary ;_eebff :=_abcee .Get ("\u004d\u0061\u0074t\u0065");if _eebff ==nil {return nil ;};_cedg ,_bggaa :=_fcdde (_eebff .(*_ged .PdfObjectArray ));if _bggaa !=nil {return _bggaa ;};_cagfb :=_ged .MakeArrayFromFloats ([]float64 {_cedg });_abcee .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_cagfb );return nil ;};func (_bggg *PdfReader )newPdfActionGoTo3DViewFromDict (_fegb *_ged .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_fegb .Get ("\u0054\u0041"),V :_fegb .Get ("\u0056")},nil ;};func (_gegc *PdfFont )baseFields ()*fontCommon {if _gegc ._gfdbg ==nil {_eg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");return nil ;};return _gegc ._gfdbg .baseFields ();};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_bbcad *PdfField )ToPdfObject ()_ged .PdfObject {_adfa :=_bbcad ._bagb ;_cdgb :=_adfa .PdfObject .(*_ged .PdfObjectDictionary );_ffgb :=_ged .MakeArray ();for _ ,_agcg :=range _bbcad .Kids {_ffgb .Append (_agcg .ToPdfObject ());};for _ ,_bcgf :=range _bbcad .Annotations {if _bcgf ._efb !=_bbcad ._bagb {_ffgb .Append (_bcgf .GetContext ().ToPdfObject ());};};if _bbcad .Parent !=nil {_cdgb .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bbcad .Parent .GetContainingPdfObject ());};if _ffgb .Len ()> 0{_cdgb .Set ("\u004b\u0069\u0064\u0073",_ffgb );};_cdgb .SetIfNotNil ("\u0046\u0054",_bbcad .FT );_cdgb .SetIfNotNil ("\u0054",_bbcad .T );_cdgb .SetIfNotNil ("\u0054\u0055",_bbcad .TU );_cdgb .SetIfNotNil ("\u0054\u004d",_bbcad .TM );_cdgb .SetIfNotNil ("\u0046\u0066",_bbcad .Ff );_cdgb .SetIfNotNil ("\u0056",_bbcad .V );_cdgb .SetIfNotNil ("\u0044\u0056",_bbcad .DV );_cdgb .SetIfNotNil ("\u0041\u0041",_bbcad .AA );return _adfa ;};func _ace (_aeadf *PdfPage )map[_ged .PdfObjectName ]_ged .PdfObject {_eggc :=make (map[_ged .PdfObjectName ]_ged .PdfObject );if _aeadf .Resources ==nil {return _eggc ;};if _aeadf .Resources .Font !=nil {if _abdb ,_gcgf :=_ged .GetDict (_aeadf .Resources .Font );_gcgf {for _ ,_gedg :=range _abdb .Keys (){_eggc [_gedg ]=_abdb .Get (_gedg );};};};if _aeadf .Resources .ExtGState !=nil {if _agd ,_dcfcb :=_ged .GetDict (_aeadf .Resources .ExtGState );_dcfcb {for _ ,_gfdee :=range _agd .Keys (){_eggc [_gfdee ]=_agd .Get (_gfdee );};};};if _aeadf .Resources .XObject !=nil {if _fgfgd ,_cfb :=_ged .GetDict (_aeadf .Resources .XObject );_cfb {for _ ,_acec :=range _fgfgd .Keys (){_eggc [_acec ]=_fgfgd .Get (_acec );};};};if _aeadf .Resources .Pattern !=nil {if _dcbd ,_gadb :=_ged .GetDict (_aeadf .Resources .Pattern );_gadb {for _ ,_aegc :=range _dcbd .Keys (){_eggc [_aegc ]=_dcbd .Get (_aegc );};};};if _aeadf .Resources .Shading !=nil {if _effc ,_dcba :=_ged .GetDict (_aeadf .Resources .Shading );_dcba {for _ ,_eddd :=range _effc .Keys (){_eggc [_eddd ]=_effc .Get (_eddd );};};};if _aeadf .Resources .ProcSet !=nil {if _defea ,_bgb :=_ged .GetDict (_aeadf .Resources .ProcSet );_bgb {for _ ,_dfge :=range _defea .Keys (){_eggc [_dfge ]=_defea .Get (_dfge );};};};if _aeadf .Resources .Properties !=nil {if _fffb ,_deg :=_ged .GetDict (_aeadf .Resources .Properties );_deg {for _ ,_bfca :=range _fffb .Keys (){_eggc [_bfca ]=_fffb .Get (_bfca );};};};return _eggc ;};func (_cbaca *PdfReader )newPdfPageFromDict (_deccc *_ged .PdfObjectDictionary )(*PdfPage ,error ){_bfcaf :=NewPdfPage ();_bfcaf ._egbgb =_deccc ;_beced :=*_deccc ;_bdgcb ,_bcgfb :=_beced .Get ("\u0054\u0079\u0070\u0065").(*_ged .PdfObjectName );if !_bcgfb {return nil ,_fc .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_bdgcb !="\u0050\u0061\u0067\u0065"{return nil ,_fc .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _dfaga :=_beced .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_dfaga !=nil {_bfcaf .Parent =_dfaga ;};if _eadd :=_beced .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_eadd !=nil {_aeaa ,_fbgf :=_ged .GetString (_eadd );if !_fbgf {return nil ,_fc .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};_dabcb ,_gbgg :=NewPdfDate (_aeaa .Str ());if _gbgg !=nil {return nil ,_gbgg ;};_bfcaf .LastModified =&_dabcb ;};if _cfdde :=_beced .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_cfdde !=nil &&!_ged .IsNullObject (_cfdde ){_bebgb ,_eacg :=_ged .GetDict (_cfdde );if !_eacg {return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cfdde );};var _bdgf error ;_bfcaf .Resources ,_bdgf =NewPdfPageResourcesFromDict (_bebgb );if _bdgf !=nil {return nil ,_bdgf ;};}else {_defge ,_ccgge :=_bfcaf .getParentResources ();if _ccgge !=nil {return nil ,_ccgge ;};if _defge ==nil {_defge =NewPdfPageResources ();};_bfcaf .Resources =_defge ;};if _dgdd :=_beced .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_dgdd !=nil {_ggdc ,_ceda :=_ged .GetArray (_dgdd );if !_ceda {return nil ,_fc .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _decec error ;_bfcaf .MediaBox ,_decec =NewPdfRectangle (*_ggdc );if _decec !=nil {return nil ,_decec ;};};if _fcbcf :=_beced .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_fcbcf !=nil {_bdbd ,_efadd :=_ged .GetArray (_fcbcf );if !_efadd {return nil ,_fc .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _dacf error ;_bfcaf .CropBox ,_dacf =NewPdfRectangle (*_bdbd );if _dacf !=nil {return nil ,_dacf ;};};if _dbdcg :=_beced .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_dbdcg !=nil {_abffd ,_adaff :=_ged .GetArray (_dbdcg );if !_adaff {return nil ,_fc .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _cfdca error ;_bfcaf .BleedBox ,_cfdca =NewPdfRectangle (*_abffd );if _cfdca !=nil {return nil ,_cfdca ;};};if _geecg :=_beced .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_geecg !=nil {_cfdfdd ,_dfcag :=_ged .GetArray (_geecg );if !_dfcag {return nil ,_fc .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _fcafb error ;_bfcaf .TrimBox ,_fcafb =NewPdfRectangle (*_cfdfdd );if _fcafb !=nil {return nil ,_fcafb ;};};if _dcacfe :=_beced .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_dcacfe !=nil {_baecf ,_cdgfd :=_ged .GetArray (_dcacfe );if !_cdgfd {return nil ,_fc .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _egdfc error ;_bfcaf .ArtBox ,_egdfc =NewPdfRectangle (*_baecf );if _egdfc !=nil {return nil ,_egdfc ;};};if _gabda :=_beced .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_gabda !=nil {_bfcaf .BoxColorInfo =_gabda ;};if _gcbcd :=_beced .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_gcbcd !=nil {_bfcaf .Contents =_gcbcd ;};if _gagga :=_beced .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_gagga !=nil {_gdfd ,_efec :=_ged .GetInt (_gagga );if !_efec {return nil ,_fc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};_aacdb :=int64 (*_gdfd );_bfcaf .Rotate =&_aacdb ;};if _cafbg :=_beced .Get ("\u0047\u0072\u006fu\u0070");_cafbg !=nil {_bfcaf .Group =_cafbg ;};if _bfabb :=_beced .Get ("\u0054\u0068\u0075m\u0062");_bfabb !=nil {_bfcaf .Thumb =_bfabb ;};if _adacfg :=_beced .Get ("\u0042");_adacfg !=nil {_bfcaf .B =_adacfg ;};if _bgabc :=_beced .Get ("\u0044\u0075\u0072");_bgabc !=nil {_bfcaf .Dur =_bgabc ;};if _ggdac :=_beced .Get ("\u0054\u0072\u0061n\u0073");_ggdac !=nil {_bfcaf .Trans =_ggdac ;};if _cbgff :=_beced .Get ("\u0041\u0041");_cbgff !=nil {_bfcaf .AA =_cbgff ;};if _abece :=_beced .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_abece !=nil {_bfcaf .Metadata =_abece ;};if _ggff :=_beced .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_ggff !=nil {_bfcaf .PieceInfo =_ggff ;};if _egfba :=_beced .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_egfba !=nil {_bfcaf .StructParents =_egfba ;};if _egaeb :=_beced .Get ("\u0049\u0044");_egaeb !=nil {_bfcaf .ID =_egaeb ;};if _gcadb :=_beced .Get ("\u0050\u005a");_gcadb !=nil {_bfcaf .PZ =_gcadb ;};if _ggafa :=_beced .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");_ggafa !=nil {_bfcaf .SeparationInfo =_ggafa ;};if _fggdf :=_beced .Get ("\u0054\u0061\u0062\u0073");_fggdf !=nil {_bfcaf .Tabs =_fggdf ;};if _gdefc :=_beced .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");_gdefc !=nil {_bfcaf .TemplateInstantiated =_gdefc ;};if _faca :=_beced .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_faca !=nil {_bfcaf .PresSteps =_faca ;};if _fcbcfc :=_beced .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_fcbcfc !=nil {_bfcaf .UserUnit =_fcbcfc ;};if _eaebe :=_beced .Get ("\u0056\u0050");_eaebe !=nil {_bfcaf .VP =_eaebe ;};if _gfdbf :=_beced .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_gfdbf !=nil {_bfcaf .Annots =_gfdbf ;};_bfcaf ._agcfc =_cbaca ;return _bfcaf ,nil ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_bfbe *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_eg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");return img ,_fc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fbfe *PdfColorspaceDeviceRGB )ToPdfObject ()_ged .PdfObject {return _ged .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};func _ebfe ()string {_fabe :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _agcda _bd .Buffer ;for _eebb :=0;_eebb < 6;_eebb ++{_agcda .WriteRune (rune (_fabe [_ga .Intn (len (_fabe ))]));};return _agcda .String ();};func _fegcd (_agadb []byte )([]byte ,error ){_cbdca :=_ge .New ();if _ ,_eagdf :=_aa .Copy (_cbdca ,_bd .NewReader (_agadb ));_eagdf !=nil {return nil ,_eagdf ;};return _cbdca .Sum (nil ),nil ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_gbc *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_gbc .updateObjectsDeep (dss .ToPdfObject (),nil );};_gbc ._bebg =dss ;};func (_aged *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _cbcd :=_aged ._dfede ;_cbcd !=nil {return _cbcd ;};return _aged ._ffccg ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _ged .PdfObject ;LE _ged .PdfObject ;BS _ged .PdfObject ;IC _ged .PdfObject ;BE _ged .PdfObject ;IT _ged .PdfObject ;Measure _ged .PdfObject ;};

// Items returns all children outline items.
func (_cefg *OutlineItem )Items ()[]*OutlineItem {return _cefg .Entries };

// SetVersion sets the PDF version of the output file.
func (_ecdcg *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_ecdcg ._cbdcad =majorVersion ;_ecdcg ._febbf =minorVersion ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_gfaff *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _ddgge []_ffe .TextEncoder ;if _aaddg :=_gfaff .baseFields ()._ggdea ;_aaddg !=nil {_ddgge =append (_ddgge ,_ffe .NewCMapEncoder ("",nil ,_aaddg ));};if _caed :=_gfaff .Encoder ();_caed !=nil {_ddgge =append (_ddgge ,_caed );};var _cgbb _bd .Buffer ;var _ecbe int ;for _ ,_dcdgf :=range data {var _fecef bool ;for _ ,_eage :=range _ddgge {if _adga :=_eage .Encode (string (_dcdgf ));len (_adga )> 0{_cgbb .Write (_adga );_fecef =true ;break ;};};if !_fecef {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_dcdgf );_ecbe ++;};};if _ecbe !=0{_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_ecbe ,_gfaff ,_ddgge );};return _cgbb .Bytes (),_ecbe ;};func _gcccf ()_c .Time {_gdabg .Lock ();defer _gdabg .Unlock ();return _edaac };

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _ged .PdfObject ;RichMediaContent _ged .PdfObject ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// SetDate sets the `M` field of the signature.
func (_fbcaf *PdfSignature )SetDate (date _c .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_fbcaf .M =_ged .MakeString (date .Format (format ));};func (_dee *PdfReader )newPdfActionRenditionFromDict (_bgg *_ged .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_bgg .Get ("\u0052"),AN :_bgg .Get ("\u0041\u004e"),OP :_bgg .Get ("\u004f\u0050"),JS :_bgg .Get ("\u004a\u0053")},nil ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_gecce *PdfTilingPattern )ToPdfObject ()_ged .PdfObject {_gecce .PdfPattern .ToPdfObject ();_gddgag :=_gecce .getDict ();if _gecce .PaintType !=nil {_gddgag .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_gecce .PaintType );};if _gecce .TilingType !=nil {_gddgag .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_gecce .TilingType );};if _gecce .BBox !=nil {_gddgag .Set ("\u0042\u0042\u006f\u0078",_gecce .BBox .ToPdfObject ());};if _gecce .XStep !=nil {_gddgag .Set ("\u0058\u0053\u0074e\u0070",_gecce .XStep );};if _gecce .YStep !=nil {_gddgag .Set ("\u0059\u0053\u0074e\u0070",_gecce .YStep );};if _gecce .Resources !=nil {_gddgag .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gecce .Resources .ToPdfObject ());};if _gecce .Matrix !=nil {_gddgag .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gecce .Matrix );};return _gecce ._abgg ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_ecdffg *PdfPage )SetContentStreams (cStreams []string ,encoder _ged .StreamEncoder )error {if len (cStreams )==0{_ecdffg .Contents =nil ;return nil ;};if encoder ==nil {encoder =_ged .NewRawEncoder ();};var _fcfgd []*_ged .PdfObjectStream ;for _ ,_cfcab :=range cStreams {_cebfe :=&_ged .PdfObjectStream {};_cebc :=encoder .MakeStreamDict ();_dcgeb ,_bggegb :=encoder .EncodeBytes ([]byte (_cfcab ));if _bggegb !=nil {return _bggegb ;};_cebc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ged .MakeInteger (int64 (len (_dcgeb ))));_cebfe .PdfObjectDictionary =_cebc ;_cebfe .Stream =_dcgeb ;_fcfgd =append (_fcfgd ,_cebfe );};if len (_fcfgd )==1{_ecdffg .Contents =_fcfgd [0];}else {_bgfeb :=_ged .MakeArray ();for _ ,_fgcfa :=range _fcfgd {_bgfeb .Append (_fgcfa );};_ecdffg .Contents =_bgfeb ;};return nil ;};func _acfga ()string {_gdabg .Lock ();defer _gdabg .Unlock ();return _eaaaf };

// ToInteger convert to an integer format.
func (_agag *PdfColorDeviceGray )ToInteger (bits int )uint32 {_faga :=_af .Pow (2,float64 (bits ))-1;return uint32 (_faga *_agag .Val ());};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_ged .PdfObjectInteger ;BitsPerComponent *_ged .PdfObjectInteger ;BitsPerFlag *_ged .PdfObjectInteger ;Decode *_ged .PdfObjectArray ;Function []PdfFunction ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_agbgd *_ged .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_bfb *PdfAnnotationWidget )ToPdfObject ()_ged .PdfObject {_bfb .PdfAnnotation .ToPdfObject ();_dcde :=_bfb ._efb ;_afae :=_dcde .PdfObject .(*_ged .PdfObjectDictionary );if _bfb ._cdc {return _dcde ;};_bfb ._cdc =true ;_afae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));_afae .SetIfNotNil ("\u0048",_bfb .H );_afae .SetIfNotNil ("\u004d\u004b",_bfb .MK );_afae .SetIfNotNil ("\u0041",_bfb .A );_afae .SetIfNotNil ("\u0041\u0041",_bfb .AA );_afae .SetIfNotNil ("\u0042\u0053",_bfb .BS );_gggg :=_bfb .Parent ;if _bfb ._fgd !=nil {if _bfb ._fgd ._bagb ==_bfb ._efb {_bfb ._fgd .ToPdfObject ();};_gggg =_bfb ._fgd .GetContainingPdfObject ();};if _gggg !=_dcde {_afae .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_gggg );};_bfb ._cdc =false ;return _dcde ;};func _bbea (_dccg StdFontName )(pdfFontSimple ,error ){_ddfcc ,_ffdfe :=_aea .NewStdFontByName (_dccg );if !_ffdfe {return pdfFontSimple {},ErrFontNotSupported ;};_cgcd :=_fged (_ddfcc );return _cgcd ,nil ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_gcccc *PdfReader )PageFromIndirectObject (ind *_ged .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_gcccc .PageList )!=len (_gcccc ._deeb ){return nil ,0,_fc .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};for _gbdde ,_ddaed :=range _gcccc ._deeb {if _ddaed ==ind {return _gcccc .PageList [_gbdde ],_gbdde +1,nil ;};};return nil ,0,_fc .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// HasExtGState checks if ExtGState name is available.
func (_adfd *PdfPage )HasExtGState (name _ged .PdfObjectName )bool {if _adfd .Resources ==nil {return false ;};if _adfd .Resources .ExtGState ==nil {return false ;};_efdad ,_fgbab :=_ged .TraceToDirectObject (_adfd .Resources .ExtGState ).(*_ged .PdfObjectDictionary );if !_fgbab {_eg .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_ged .TraceToDirectObject (_adfd .Resources .ExtGState ));return false ;};_bfea :=_efdad .Get (name );_acggf :=_bfea !=nil ;return _acggf ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_ged .PdfObjectStream )(*XObjectForm ,error ){_cgdbbc :=&XObjectForm {};_cgdbbc ._dfbddc =stream ;_dgcac :=*(stream .PdfObjectDictionary );_fdfbd ,_gggac :=_ged .NewEncoderFromStream (stream );if _gggac !=nil {return nil ,_gggac ;};_cgdbbc .Filter =_fdfbd ;if _cbbd :=_dgcac .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_cbbd !=nil {_fceae ,_dcffec :=_cbbd .(*_ged .PdfObjectName );if !_dcffec {return nil ,_fc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if *_fceae !="\u0046\u006f\u0072\u006d"{_eg .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_fc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");};};if _bgfae :=_dgcac .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_bgfae !=nil {_cgdbbc .FormType =_bgfae ;};if _ccbgg :=_dgcac .Get ("\u0042\u0042\u006f\u0078");_ccbgg !=nil {_cgdbbc .BBox =_ccbgg ;};if _ecaec :=_dgcac .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_ecaec !=nil {_cgdbbc .Matrix =_ecaec ;};if _bgfc :=_dgcac .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_bgfc !=nil {_bgfc =_ged .TraceToDirectObject (_bgfc );_bffb ,_ffecgg :=_bgfc .(*_ged .PdfObjectDictionary );if !_ffecgg {_eg .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_ged .ErrTypeError ;};_egeag ,_fffbc :=NewPdfPageResourcesFromDict (_bffb );if _fffbc !=nil {_eg .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");return nil ,_fffbc ;};_cgdbbc .Resources =_egeag ;_eg .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_cgdbbc .Resources );};_cgdbbc .Group =_dgcac .Get ("\u0047\u0072\u006fu\u0070");_cgdbbc .Ref =_dgcac .Get ("\u0052\u0065\u0066");_cgdbbc .MetaData =_dgcac .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_cgdbbc .PieceInfo =_dgcac .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_cgdbbc .LastModified =_dgcac .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_cgdbbc .StructParent =_dgcac .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_cgdbbc .StructParents =_dgcac .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_cgdbbc .OPI =_dgcac .Get ("\u004f\u0050\u0049");_cgdbbc .OC =_dgcac .Get ("\u004f\u0043");_cgdbbc .Name =_dgcac .Get ("\u004e\u0061\u006d\u0065");_cgdbbc .Stream =stream .Stream ;return _cgdbbc ,nil ;};func (_cbf *PdfReader )newPdfActionHideFromDict (_aae *_ged .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_aae .Get ("\u0054"),H :_aae .Get ("\u0048")},nil ;};

// M returns the value of the magenta component of the color.
func (_eabe *PdfColorDeviceCMYK )M ()float64 {return _eabe [1]};

// ToPdfObject implements interface PdfModel.
func (_cacf *PdfAnnotationSquiggly )ToPdfObject ()_ged .PdfObject {_cacf .PdfAnnotation .ToPdfObject ();_acgb :=_cacf ._efb ;_eca :=_acgb .PdfObject .(*_ged .PdfObjectDictionary );_cacf .PdfAnnotationMarkup .appendToPdfDictionary (_eca );_eca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));_eca .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cacf .QuadPoints );return _acgb ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_beebe *PdfFont )ToPdfObject ()_ged .PdfObject {if _beebe ._gfdbg ==nil {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _ged .MakeNull ();};return _beebe ._gfdbg .ToPdfObject ();};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _ged .StreamEncoder ;FormType _ged .PdfObject ;BBox _ged .PdfObject ;Matrix _ged .PdfObject ;Resources *PdfPageResources ;Group _ged .PdfObject ;Ref _ged .PdfObject ;MetaData _ged .PdfObject ;PieceInfo _ged .PdfObject ;LastModified _ged .PdfObject ;StructParent _ged .PdfObject ;StructParents _ged .PdfObject ;OPI _ged .PdfObject ;OC _ged .PdfObject ;Name _ged .PdfObject ;

// Stream data.
Stream []byte ;_dfbddc *_ged .PdfObjectStream ;};func (_effb *PdfReader )newPdfAnnotationSquareFromDict (_deef *_ged .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_gcg :=PdfAnnotationSquare {};_aabe ,_dgdf :=_effb .newPdfAnnotationMarkupFromDict (_deef );if _dgdf !=nil {return nil ,_dgdf ;};_gcg .PdfAnnotationMarkup =_aabe ;_gcg .BS =_deef .Get ("\u0042\u0053");_gcg .IC =_deef .Get ("\u0049\u0043");_gcg .BE =_deef .Get ("\u0042\u0045");_gcg .RD =_deef .Get ("\u0052\u0044");return &_gcg ,nil ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_ddaf *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_caba ,_aaeaf :=color .(*PdfColorDeviceGray );if !_aaeaf {_eg .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );return nil ,_fc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_caba ),float64 (*_caba ),float64 (*_caba )),nil ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_afec *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// ToPdfObject returns a PDF object representation of the outline.
func (_cfgdb *Outline )ToPdfObject ()_ged .PdfObject {return _cfgdb .ToPdfOutline ().ToPdfObject ()};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_bacgb :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");};_bacgb .N =N ;return _bacgb ,nil ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);func _eagbe (_bbcce *_ged .PdfObjectDictionary )(*PdfShadingPattern ,error ){_eaabf :=&PdfShadingPattern {};_dfdfc :=_bbcce .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _dfdfc ==nil {_eg .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_dggfg ,_dfcgd :=_ddca (_dfdfc );if _dfcgd !=nil {_eg .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_dfcgd );return nil ,_dfcgd ;};_eaabf .Shading =_dggfg ;if _bgecc :=_bbcce .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_bgecc !=nil {_efebe ,_cagbc :=_bgecc .(*_ged .PdfObjectArray );if !_cagbc {_eg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bgecc );return nil ,_ged .ErrTypeError ;};_eaabf .Matrix =_efebe ;};if _abcf :=_bbcce .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_abcf !=nil {_eaabf .ExtGState =_abcf ;};return _eaabf ,nil ;};func (_gcece fontCommon )coreString ()string {_cdde :="";if _gcece ._dfede !=nil {_cdde =_gcece ._dfede .String ();};return _d .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_gcece ._ecaga ,_gcece ._dgefe ,_gcece ._ecbed ,_gcece ._egbc ,_gcece ._eecgg !=nil ,_gcece .fontFlags (),_cdde );};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _ged .PdfObject )(_ged .PdfObjectName ,error ){var _dcbdb *_ged .PdfObjectName ;var _fcba *_ged .PdfObjectArray ;if _ceba ,_gbcc :=obj .(*_ged .PdfIndirectObject );_gbcc {if _aeccf ,_dadd :=_ceba .PdfObject .(*_ged .PdfObjectArray );_dadd {_fcba =_aeccf ;}else if _gcdf ,_aabag :=_ceba .PdfObject .(*_ged .PdfObjectName );_aabag {_dcbdb =_gcdf ;};}else if _dfad ,_fgcb :=obj .(*_ged .PdfObjectArray );_fgcb {_fcba =_dfad ;}else if _ffaga ,_gaae :=obj .(*_ged .PdfObjectName );_gaae {_dcbdb =_ffaga ;};if _dcbdb !=nil {switch *_dcbdb {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_dcbdb ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_dcbdb ,nil ;};};if _fcba !=nil &&_fcba .Len ()> 0{if _fcge ,_dbgd :=_fcba .Get (0).(*_ged .PdfObjectName );_dbgd {switch *_fcge {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _fcba .Len ()==1{return *_fcge ,nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_fcge ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_fcge ,nil ;case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_fcge ,nil ;};};};return "",nil ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_cgbe *PdfPageResources )SetXObjectImageByName (keyName _ged .PdfObjectName ,ximg *XObjectImage )error {_agff :=ximg .ToPdfObject ().(*_ged .PdfObjectStream );_fedcaf :=_cgbe .SetXObjectByName (keyName ,_agff );return _fedcaf ;};func (_aeg *PdfReader )newPdfActionImportDataFromDict (_dfg *_ged .PdfObjectDictionary )(*PdfActionImportData ,error ){_dfag ,_aba :=_dge (_dfg .Get ("\u0046"));if _aba !=nil {return nil ,_aba ;};return &PdfActionImportData {F :_dfag },nil ;};func (_ebbeg *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_dgbfg *PdfReader )Inspect ()(map[string ]int ,error ){return _dgbfg ._ebea .Inspect ()};func (_egffd PdfFont )actualFont ()pdfFont {if _egffd ._gfdbg ==nil {_eg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_egffd );};return _egffd ._gfdbg ;};func _afagb (_cfbfg _ged .PdfObject )(string ,error ){_cfbfg =_ged .TraceToDirectObject (_cfbfg );switch _fdcfe :=_cfbfg .(type ){case *_ged .PdfObjectString :return _fdcfe .Str (),nil ;case *_ged .PdfObjectStream :_gaab ,_adacd :=_ged .DecodeStream (_fdcfe );if _adacd !=nil {return "",_adacd ;};return string (_gaab ),nil ;};return "",_d .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_cfbfg );};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _ged .PdfObject ;IsMap _ged .PdfObject ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _ged .PdfObject ;};func (_ggcg *LTV )enable (_efbdg ,_abcbe []*_fe .Certificate ,_dddg string )error {_cgddd ,_ebec ,_dcbf :=_ggcg .buildCertChain (_efbdg ,_abcbe );if _dcbf !=nil {return _dcbf ;};_edaaa ,_dcbf :=_ggcg .getCerts (_cgddd );if _dcbf !=nil {return _dcbf ;};_egddc ,_dcbf :=_ggcg .getOCSPs (_cgddd ,_ebec );if _dcbf !=nil {return _dcbf ;};_defc ,_dcbf :=_ggcg .getCRLs (_cgddd );if _dcbf !=nil {return _dcbf ;};_ecge :=_ggcg ._cdbfg ;_acdf ,_dcbf :=_ecge .addCerts (_edaaa );if _dcbf !=nil {return _dcbf ;};_babdf ,_dcbf :=_ecge .addOCSPs (_egddc );if _dcbf !=nil {return _dcbf ;};_gcbb ,_dcbf :=_ecge .addCRLs (_defc );if _dcbf !=nil {return _dcbf ;};if _dddg !=""{_ecge .VRI [_dddg ]=&VRI {Cert :_acdf ,OCSP :_babdf ,CRL :_gcbb };};_ggcg ._fbaef .SetDSS (_ecge );return nil ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_edff :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_edff ;};func (_ebda *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_fgdf :=NewPdfAnnotation ();_fdgd :=&PdfAnnotationMovie {};_fdgd .PdfAnnotation =_fgdf ;_fgdf .SetContext (_fdgd );return _fdgd ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_ab PdfModel ;Type _ged .PdfObject ;S _ged .PdfObject ;Next _ged .PdfObject ;_ebd *_ged .PdfIndirectObject ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_dgaa *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _dgaa .flattenFieldsWithOpts (false ,appgen ,opts );};func _acdcb (_gaef *_ged .PdfObjectDictionary )bool {for _ ,_cegg :=range _gaef .Keys (){if _ ,_aaac :=_fecec [_cegg .String ()];_aaac {return true ;};};return false ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_eff :=NewPdfAnnotation ();_face :=&PdfAnnotationCircle {};_face .PdfAnnotation =_eff ;_face .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eff .SetContext (_face );return _face ;};

// ToPdfObject implements interface PdfModel.
func (_geda *PdfActionGoTo3DView )ToPdfObject ()_ged .PdfObject {_geda .PdfAction .ToPdfObject ();_fbg :=_geda ._ebd ;_fece :=_fbg .PdfObject .(*_ged .PdfObjectDictionary );_fece .SetIfNotNil ("\u0053",_ged .MakeName (string (ActionTypeGoTo3DView )));_fece .SetIfNotNil ("\u0054\u0041",_geda .TA );_fece .SetIfNotNil ("\u0056",_geda .V );return _fbg ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_gdabg .Lock ();defer _gdabg .Unlock ();_dccbg =creator };

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_ged .PdfObjectStream ;OCSP []*_ged .PdfObjectStream ;CRL []*_ged .PdfObjectStream ;TU *_ged .PdfObjectString ;TS *_ged .PdfObjectString ;};

// IsShading specifies if the pattern is a shading pattern.
func (_ggeeb *PdfPattern )IsShading ()bool {return _ggeeb .PatternType ==2};

// GetNumComponents returns the number of color components (3 for RGB).
func (_bedcf *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_fbae *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _fbae .Alternate ==nil {if _fbae .N ==1{_ffad :=NewPdfColorspaceDeviceGray ();return _ffad .ColorFromFloats (vals );}else if _fbae .N ==3{_bgeb :=NewPdfColorspaceDeviceRGB ();return _bgeb .ColorFromFloats (vals );}else if _fbae .N ==4{_aaeb :=NewPdfColorspaceDeviceCMYK ();return _aaeb .ColorFromFloats (vals );}else {return nil ,_fc .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _fbae .Alternate .ColorFromFloats (vals );};

// ToPdfObject implements interface PdfModel.
func (_gfc *PdfActionMovie )ToPdfObject ()_ged .PdfObject {_gfc .PdfAction .ToPdfObject ();_ba :=_gfc ._ebd ;_bg :=_ba .PdfObject .(*_ged .PdfObjectDictionary );_bg .SetIfNotNil ("\u0053",_ged .MakeName (string (ActionTypeMovie )));_bg .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_gfc .Annotation );_bg .SetIfNotNil ("\u0054",_gfc .T );_bg .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_gfc .Operation );return _ba ;};type pdfCIDFontType0 struct{fontCommon ;_gede *_ged .PdfIndirectObject ;_cccd _ffe .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_ged .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _ged .PdfObject ;W _ged .PdfObject ;DW2 _ged .PdfObject ;W2 _ged .PdfObject ;_caad map[_ffe .CharCode ]float64 ;_adcdf float64 ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_eabfa ,_efcg :=_ad .Open (filePath );if _efcg !=nil {_eg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_efcg );return nil ,_efcg ;};defer _eabfa .Close ();return NewCompositePdfFontFromTTF (_eabfa );};

// ToInteger convert to an integer format.
func (_faeb *PdfColorLab )ToInteger (bits int )[3]uint32 {_abfa :=_af .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_abfa *_faeb .L ()),uint32 (_abfa *_faeb .A ()),uint32 (_abfa *_faeb .B ())};};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _ged .PdfObject ;BS _ged .PdfObject ;LE _ged .PdfObject ;IC _ged .PdfObject ;LL _ged .PdfObject ;LLE _ged .PdfObject ;Cap _ged .PdfObject ;IT _ged .PdfObject ;LLO _ged .PdfObject ;CP _ged .PdfObject ;Measure _ged .PdfObject ;CO _ged .PdfObject ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_egeb *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _egeb .baseFields ()._dfede !=nil {return _egeb .baseFields ()._dfede ;};if _bgbg :=_egeb ._gfdbg .getFontDescriptor ();_bgbg !=nil {return _bgbg ;};_eg .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_egeb );return nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_edbade *PdfShading )ToPdfObject ()_ged .PdfObject {_fggec :=_edbade ._gfaace ;_bdfdd ,_ggddd :=_edbade .getShadingDict ();if _ggddd !=nil {_eg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _edbade .ShadingType !=nil {_bdfdd .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_edbade .ShadingType );};if _edbade .ColorSpace !=nil {_bdfdd .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_edbade .ColorSpace .ToPdfObject ());};if _edbade .Background !=nil {_bdfdd .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_edbade .Background );};if _edbade .BBox !=nil {_bdfdd .Set ("\u0042\u0042\u006f\u0078",_edbade .BBox .ToPdfObject ());};if _edbade .AntiAlias !=nil {_bdfdd .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_edbade .AntiAlias );};return _fggec ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_efdd *PdfColorspaceDeviceNAttributes )ToPdfObject ()_ged .PdfObject {_ddfa :=_ged .MakeDict ();if _efdd .Subtype !=nil {_ddfa .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_efdd .Subtype );};_ddfa .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_efdd .Colorants );_ddfa .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_efdd .Process );_ddfa .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_efdd .MixingHints );if _efdd ._eecb !=nil {_efdd ._eecb .PdfObject =_ddfa ;return _efdd ._eecb ;};return _ddfa ;};func _ffbeb (_ggfd *_ged .PdfObjectDictionary )(*PdfShadingType4 ,error ){_efabee :=PdfShadingType4 {};_agaae :=_ggfd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _agaae ==nil {_eg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_gcddd ,_bgaff :=_agaae .(*_ged .PdfObjectInteger );if !_bgaff {_eg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_agaae );return nil ,_ged .ErrTypeError ;};_efabee .BitsPerCoordinate =_gcddd ;_agaae =_ggfd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _agaae ==nil {_eg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_gcddd ,_bgaff =_agaae .(*_ged .PdfObjectInteger );if !_bgaff {_eg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_agaae );return nil ,_ged .ErrTypeError ;};_efabee .BitsPerComponent =_gcddd ;_agaae =_ggfd .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _agaae ==nil {_eg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_gcddd ,_bgaff =_agaae .(*_ged .PdfObjectInteger );if !_bgaff {_eg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_agaae );return nil ,_ged .ErrTypeError ;};_efabee .BitsPerComponent =_gcddd ;_agaae =_ggfd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _agaae ==nil {_eg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_dbcfg ,_bgaff :=_agaae .(*_ged .PdfObjectArray );if !_bgaff {_eg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_agaae );return nil ,_ged .ErrTypeError ;};_efabee .Decode =_dbcfg ;_agaae =_ggfd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _agaae ==nil {_eg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_efabee .Function =[]PdfFunction {};if _ebgf ,_aaecd :=_agaae .(*_ged .PdfObjectArray );_aaecd {for _ ,_afeg :=range _ebgf .Elements (){_bagbg ,_aeee :=_gecdb (_afeg );if _aeee !=nil {_eg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aeee );return nil ,_aeee ;};_efabee .Function =append (_efabee .Function ,_bagbg );};}else {_fefde ,_dedec :=_gecdb (_agaae );if _dedec !=nil {_eg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dedec );return nil ,_dedec ;};_efabee .Function =append (_efabee .Function ,_fefde );};return &_efabee ,nil ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_dffg :=NewPdfAction ();_fbb :=&PdfActionJavaScript {};_fbb .PdfAction =_dffg ;_dffg .SetContext (_fbb );return _fbb ;};

// PartialName returns the partial name of the field.
func (_adaba *PdfField )PartialName ()string {_decd :="";if _adaba .T !=nil {_decd =_adaba .T .Decoded ();}else {_eg .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");};return _decd ;};func _agaa (_dded _ged .PdfObject )(*_ged .PdfObjectDictionary ,*fontCommon ,error ){_dcdb :=&fontCommon {};if _fedf ,_efff :=_dded .(*_ged .PdfIndirectObject );_efff {_dcdb ._egbc =_fedf .ObjectNumber ;};_edabg ,_gccb :=_ged .GetDict (_dded );if !_gccb {_eg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_dded );return nil ,nil ,ErrFontNotSupported ;};_afbb ,_gccb :=_ged .GetNameVal (_edabg .Get ("\u0054\u0079\u0070\u0065"));if !_gccb {_eg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};if _afbb !="\u0046\u006f\u006e\u0074"{_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_afbb ,"\u0046\u006f\u006e\u0074");return nil ,nil ,_ged .ErrTypeError ;};_ceff ,_gccb :=_ged .GetNameVal (_edabg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_gccb {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};_dcdb ._ecaga =_ceff ;_aafaf ,_gccb :=_ged .GetNameVal (_edabg .Get ("\u004e\u0061\u006d\u0065"));if _gccb {_dcdb ._ecbed =_aafaf ;};if _ceff =="\u0054\u0079\u0070e\u0033"{_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0033\u0020\u0066\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0073u\u0070\u0070\u006f\u0072\u0074e\u0064\u002e \u0064\u003d\u0025\u0073",_edabg );return _edabg ,_dcdb ,ErrType3FontNotSupported ;};_cegfb ,_gccb :=_ged .GetNameVal (_edabg .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_gccb {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return _edabg ,_dcdb ,ErrRequiredAttributeMissing ;};_dcdb ._dgefe =_cegfb ;_ffga :=_edabg .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _ffga !=nil {_abgb ,_dade :=_eeedc (_ffga );if _dade !=nil {_eg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dade );return _edabg ,_dcdb ,_dade ;};_dcdb ._dfede =_abgb ;};_geaa :=_edabg .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _geaa !=nil {_dcdb ._eecgg =_ged .TraceToDirectObject (_geaa );_abbg ,_afgg :=_ddaff (_dcdb ._eecgg ,_dcdb );if _afgg !=nil {return _edabg ,_dcdb ,_afgg ;};_dcdb ._ggdea =_abbg ;}else if _ceff =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_ceff =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_fbebe ,_dadc :=_ec .NewCIDSystemInfo (_edabg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if _dadc !=nil {return _edabg ,_dcdb ,_dadc ;};_cafd :=_d .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_fbebe .Registry ,_fbebe .Ordering );if _ec .IsPredefinedCMap (_cafd ){_dcdb ._ggdea ,_dadc =_ec .LoadPredefinedCMap (_cafd );if _dadc !=nil {_eg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_cafd ,_dadc );};};};return _edabg ,_dcdb ,nil ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_cadgb *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _eged []*PdfField ;if _cadgb .AcroForm !=nil {_eged =_cadgb .AcroForm .AllFields ();};_faba :=make (map[*PdfField ]struct{},len (_eged ));for _ ,_dagggf :=range _eged {_faba [_dagggf ]=struct{}{};};for _ ,_gbege :=range _cadgb .PageList {_cgaba ,_bbdaf :=_gbege .GetAnnotations ();if _bbdaf !=nil {return false ,_bbdaf ;};for _ ,_eaeg :=range _cgaba {_fcgec ,_gbecb :=_eaeg .GetContext ().(*PdfAnnotationWidget );if !_gbecb {continue ;};_eedad :=_fcgec .Field ();if _eedad ==nil {return true ,nil ;};if _ ,_eaadfc :=_faba [_eedad ];!_eaadfc {return true ,nil ;};};};return false ,nil ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _ged .PdfObject )(PdfColorspace ,error ){var _affa *_ged .PdfIndirectObject ;var _bada *_ged .PdfObjectName ;var _dabg *_ged .PdfObjectArray ;if _cggg ,_gbdc :=obj .(*_ged .PdfIndirectObject );_gbdc {_affa =_cggg ;};obj =_ged .TraceToDirectObject (obj );switch _cabd :=obj .(type ){case *_ged .PdfObjectArray :_dabg =_cabd ;case *_ged .PdfObjectName :_bada =_cabd ;};if _bada !=nil {switch *_bada {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;default:_eg .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_bada );return nil ,_ggged ;};};if _dabg !=nil &&_dabg .Len ()> 0{var _gedf _ged .PdfObject =_affa ;if _affa ==nil {_gedf =_dabg ;};if _dcbgd ,_beab :=_ged .GetName (_dabg .Get (0));_beab {switch _dcbgd .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _dabg .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _dabg .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _dabg .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _gbgf (_gedf );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _dfggb (_gedf );case "\u004c\u0061\u0062":return _fegg (_gedf );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _bagc (_gedf );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _egggc (_gedf );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _gffbc (_gedf );case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _eabf (_gedf );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _bfdaf (_gedf );default:_eg .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_dcbgd );};};};_eg .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());return nil ,ErrTypeCheck ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_gabcc *PdfFieldButton )IsPush ()bool {return _gabcc .GetType ()==ButtonTypePush };func (_fead *PdfReader )loadAction (_bgaf _ged .PdfObject )(*PdfAction ,error ){if _gbbg ,_ggge :=_ged .GetIndirect (_bgaf );_ggge {_fddb ,_gag :=_fead .newPdfActionFromIndirectObject (_gbbg );if _gag !=nil {return nil ,_gag ;};return _fddb ,nil ;}else if !_ged .IsNullObject (_bgaf ){return nil ,_fc .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};return nil ,nil ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_cdbf :=NewPdfAnnotation ();_ccf :=&PdfAnnotationLine {};_ccf .PdfAnnotation =_cdbf ;_ccf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cdbf .SetContext (_ccf );return _ccf ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_ffbae *PdfOutlineItem )GetContainingPdfObject ()_ged .PdfObject {return _ffbae ._befdc };

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_beb :=NewPdfAnnotation ();_gca :=&PdfAnnotationRedact {};_gca .PdfAnnotation =_beb ;_gca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_beb .SetContext (_gca );return _gca ;};func (_bfged *pdfFontType0 )baseFields ()*fontCommon {return &_bfged .fontCommon };

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_abad :=NewPdfAnnotation ();_fbgc :=&PdfAnnotationHighlight {};_fbgc .PdfAnnotation =_abad ;_fbgc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abad .SetContext (_fbgc );return _fbgc ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_abfdcd *Image )ToJBIG2Image ()(*_ged .JBIG2Image ,error ){_cfdbc ,_bgedb :=_abfdcd .ToGoImage ();if _bgedb !=nil {return nil ,_bgedb ;};return _ged .GoImageToJBIG2 (_cfdbc ,_ged .JB2ImageAutoThreshold );};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_cfdf *PdfFont )CharcodesToUnicode (charcodes []_ffe .CharCode )[]rune {_ebcf ,_ ,_ :=_cfdf .CharcodesToUnicodeWithStats (charcodes );return _ebcf ;};func _cagde ()string {_gdabg .Lock ();defer _gdabg .Unlock ();return _cdbacc };

// DecodeArray returns the component range values for the Indexed colorspace.
func (_acga *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_acga .HiVal )};};

// String returns a string that describes `font`.
func (_ffeca *PdfFont )String ()string {_afgd :="";if _ffeca ._gfdbg .Encoder ()!=nil {_afgd =_ffeca ._gfdbg .Encoder ().String ();};return _d .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_ffeca ._gfdbg ,_ffeca .baseFields ().coreString (),_afgd );};func _dfcbe (_ffdda *_daf .ImageBase )(_cccee Image ){_cccee .Width =int64 (_ffdda .Width );_cccee .Height =int64 (_ffdda .Height );_cccee .BitsPerComponent =int64 (_ffdda .BitsPerComponent );_cccee .ColorComponents =_ffdda .ColorComponents ;_cccee .Data =_ffdda .Data ;_cccee ._caaed =_ffdda .Decode ;_cccee ._fgaab =_ffdda .Alpha ;return _cccee ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _ged .StreamEncoder )(*XObjectImage ,error ){_eedba :=NewXObjectImage ();return UpdateXObjectImageFromImage (_eedba ,img ,cs ,encoder );};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_ebge *PdfAppender )Write (w _aa .Writer )error {if _ebge ._feb {return _fc .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");};_dgfd :=NewPdfWriter ();_gadd ,_cfgb :=_ged .GetDict (_dgfd ._aegg );if !_cfgb {return _fc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_dbfe ,_cfgb :=_gadd .Get ("\u004b\u0069\u0064\u0073").(*_ged .PdfObjectArray );if !_cfgb {return _fc .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_cabb ,_cfgb :=_gadd .Get ("\u0043\u006f\u0075n\u0074").(*_ged .PdfObjectInteger );if !_cfgb {return _fc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};_dbff :=_ebge ._add ._ebea ;_ecea :=_dbff .GetTrailer ();if _ecea ==nil {return _fc .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_eggf ,_cfgb :=_ged .GetIndirect (_ecea .Get ("\u0052\u006f\u006f\u0074"));if !_cfgb {return _fc .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_ebbe ,_cfgb :=_ged .GetDict (_eggf );if !_cfgb {_eg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_eggf ,*_ecea );return _fc .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_afbc :=range _ebbe .Keys (){if _dgfd ._ffceb .Get (_afbc )==nil {_agdd :=_ebbe .Get (_afbc );_dgfd ._ffceb .Set (_afbc ,_agdd );};};if _ebge ._acgg !=nil {_dgfd ._ffceb .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_ebge ._acgg .ToPdfObject ());_ebge .updateObjectsDeep (_ebge ._acgg .ToPdfObject (),nil );};if _ebge ._bebg !=nil {_ebge .updateObjectsDeep (_ebge ._bebg .ToPdfObject (),nil );_dgfd ._ffceb .Set ("\u0044\u0053\u0053",_ebge ._bebg .GetContainingPdfObject ());};if _dgfd ._cbdcad < 2{_dgfd .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);_dgfd .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};_ebge .addNewObject (_dgfd ._dceeg );_ebge .addNewObject (_dgfd ._ceef );_dffb :=false ;if len (_ebge ._add .PageList )!=len (_ebge ._feeg ){_dffb =true ;}else {for _bedc :=range _ebge ._add .PageList {switch {case _ebge ._feeg [_bedc ]==_ebge ._add .PageList [_bedc ]:case _ebge ._feeg [_bedc ]==_ebge .Reader .PageList [_bedc ]:default:_dffb =true ;};if _dffb {break ;};};};if _dffb {_ebge .updateObjectsDeep (_dgfd ._aegg ,nil );}else {_ebge ._fde [_dgfd ._aegg ]=struct{}{};};_dgfd ._aegg .ObjectNumber =_ebge .Reader ._efeag .ObjectNumber ;_ebge ._adbf [_dgfd ._aegg ]=_ebge .Reader ._efeag .ObjectNumber ;_gfaf :=[]_ged .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_febe :=range _ebge ._feeg {_fdcf :=_febe .ToPdfObject ();*_cabb =*_cabb +1;if _defeb ,_dece :=_fdcf .(*_ged .PdfIndirectObject );_dece &&_defeb .GetParser ()==_ebge ._add ._ebea {_dbfe .Append (&_defeb .PdfObjectReference );continue ;};if _bcbf ,_egga :=_ged .GetDict (_fdcf );_egga {_febc ,_bgga :=_bcbf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_ged .PdfIndirectObject );for _bgga {_eg .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_febc );_fdac ,_ccd :=_febc .PdfObject .(*_ged .PdfObjectDictionary );if !_ccd {return _fc .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_eefbg :=range _gfaf {_eg .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_eefbg );if _bcbf .Get (_eefbg )!=nil {_eg .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _gfe :=_fdac .Get (_eefbg );_gfe !=nil {_eg .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_eefbg );_bcbf .Set (_eefbg ,_gfe );};};_febc ,_bgga =_fdac .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_ged .PdfIndirectObject );_eg .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fdac .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_bcbf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dgfd ._aegg );};_ebge .updateObjectsDeep (_fdcf ,nil );_dbfe .Append (_fdcf );};if _ ,_cdefg :=_ebge ._bafa .Seek (0,_aa .SeekStart );_cdefg !=nil {return _cdefg ;};_cfe :=make (map[SignatureHandler ]_aa .Writer );_dcge :=_ged .MakeArray ();for _ ,_dbe :=range _ebge ._beae {if _fgea ,_eecd :=_ged .GetIndirect (_dbe );_eecd {if _gfb ,_abf :=_fgea .PdfObject .(*pdfSignDictionary );_abf {_bdcb :=*_gfb ._ccabd ;var _fcbe error ;_cfe [_bdcb ],_fcbe =_bdcb .NewDigest (_gfb ._affb );if _fcbe !=nil {return _fcbe ;};_dcge .Append (_ged .MakeInteger (0xfffff),_ged .MakeInteger (0xfffff));};};};if _dcge .Len ()> 0{_dcge .Append (_ged .MakeInteger (0xfffff),_ged .MakeInteger (0xfffff));};for _ ,_cggc :=range _ebge ._beae {if _bfgac ,_cdefc :=_ged .GetIndirect (_cggc );_cdefc {if _geec ,_edab :=_bfgac .PdfObject .(*pdfSignDictionary );_edab {_geec .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_dcge );};};};_cbc :=len (_cfe )> 0;var _bfbd _aa .Reader =_ebge ._bafa ;if _cbc {_bdgc :=make ([]_aa .Writer ,0,len (_cfe ));for _ ,_cbga :=range _cfe {_bdgc =append (_bdgc ,_cbga );};_bfbd =_aa .TeeReader (_ebge ._bafa ,_aa .MultiWriter (_bdgc ...));};_ccce ,_abeb :=_aa .Copy (w ,_bfbd );if _abeb !=nil {return _abeb ;};if len (_ebge ._beae )==0{return nil ;};_dgfd ._aabddf =_ccce ;_dgfd .ObjNumOffset =_ebge ._gbbc ;_dgfd ._fbbgd =true ;_dgfd ._dbgda =_ebge ._fdae ;_dgfd ._cdbge =_ebge ._dggda ;_dgfd ._baabf =_ebge ._fgfa ;_dgfd ._febbf =_ebge ._add .PdfVersion ().Minor ;_dgfd ._deagf =_ebge ._adbf ;_ffcf :=_ebge ._gdee .GetXrefType ();if _ffcf !=nil {_fabb :=*_ffcf ==_ged .XrefTypeObjectStream ;_dgfd ._ffgab =&_fabb ;};_dgfd ._fdbab =map[_ged .PdfObject ]struct{}{};_dgfd ._fedfa =[]_ged .PdfObject {};for _ ,_acee :=range _ebge ._beae {if _ ,_fgdb :=_ebge ._fde [_acee ];_fgdb {continue ;};_dgfd .addObject (_acee );};_bcdb :=w ;if _cbc {_bcdb =_bd .NewBuffer (nil );};if _bdgcd :=_dgfd .Write (_bcdb );_bdgcd !=nil {return _bdgcd ;};if _cbc {_cbff :=_bcdb .(*_bd .Buffer ).Bytes ();_bbda :=_ged .MakeArray ();var _dbeb []*pdfSignDictionary ;var _bdaa int64 ;for _ ,_dfaf :=range _dgfd ._fedfa {if _ffca ,_dbae :=_ged .GetIndirect (_dfaf );_dbae {if _cade ,_fffa :=_ffca .PdfObject .(*pdfSignDictionary );_fffa {_dbeb =append (_dbeb ,_cade );_eebe :=_cade ._ccaae +int64 (_cade ._cfaba );_bbda .Append (_ged .MakeInteger (_bdaa ),_ged .MakeInteger (_eebe -_bdaa ));_bdaa =_cade ._ccaae +int64 (_cade ._defee );};};};_bbda .Append (_ged .MakeInteger (_bdaa ),_ged .MakeInteger (_ccce +int64 (len (_cbff ))-_bdaa ));_gbcd :=[]byte (_bbda .WriteString ());for _ ,_ffagg :=range _dbeb {_ddbb :=int (_ffagg ._ccaae -_ccce );for _efgc :=_ffagg ._efefb ;_efgc < _ffagg ._edgad ;_efgc ++{_cbff [_ddbb +_efgc ]=' ';};_bcga :=_cbff [_ddbb +_ffagg ._efefb :_ddbb +_ffagg ._edgad ];copy (_bcga ,_gbcd );};var _cgdb int ;for _ ,_debdf :=range _dbeb {_gbdg :=int (_debdf ._ccaae -_ccce );_gbaaf :=_cbff [_cgdb :_gbdg +_debdf ._cfaba ];_adeeb :=*_debdf ._ccabd ;_cfe [_adeeb ].Write (_gbaaf );_cgdb =_gbdg +_debdf ._defee ;};for _ ,_dab :=range _dbeb {_bgge :=_cbff [_cgdb :];_gfac :=*_dab ._ccabd ;_cfe [_gfac ].Write (_bgge );};for _ ,_efcc :=range _dbeb {_bdad :=int (_efcc ._ccaae -_ccce );_acbfe :=*_efcc ._ccabd ;_gbbe :=_cfe [_acbfe ];if _dfd :=_acbfe .Sign (_efcc ._affb ,_gbbe );_dfd !=nil {return _dfd ;};_efcc ._affb .ByteRange =_bbda ;_ffdfb :=[]byte (_efcc ._affb .Contents .WriteString ());for _fcag :=_efcc ._efefb ;_fcag < _efcc ._edgad ;_fcag ++{_cbff [_bdad +_fcag ]=' ';};for _edaf :=_efcc ._cfaba ;_edaf < _efcc ._defee ;_edaf ++{_cbff [_bdad +_edaf ]=' ';};_egdd :=_cbff [_bdad +_efcc ._efefb :_bdad +_efcc ._edgad ];copy (_egdd ,_gbcd );_egdd =_cbff [_bdad +_efcc ._cfaba :_bdad +_efcc ._defee ];copy (_egdd ,_ffdfb );};_gced :=_bd .NewBuffer (_cbff );_ ,_abeb =_aa .Copy (w ,_gced );if _abeb !=nil {return _abeb ;};};_ebge ._feb =true ;return nil ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_ged .PdfObjectStream ;Data []byte ;_feab *_ged .PdfIndirectObject ;_dadf *_ged .PdfObjectStream ;};func (_aca *PdfReader )newPdfActionURIFromDict (_abde *_ged .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_abde .Get ("\u0055\u0052\u0049"),IsMap :_abde .Get ("\u0049\u0073\u004da\u0070")},nil ;};var _eabec =_cf .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _ged .PdfObject ;H _ged .PdfObject ;};func _gffbc (_efea _ged .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_facce :=NewPdfColorspaceSpecialIndexed ();if _acbd ,_cfaf :=_efea .(*_ged .PdfIndirectObject );_cfaf {_facce ._dgcb =_acbd ;};_efea =_ged .TraceToDirectObject (_efea );_gabc ,_aeca :=_efea .(*_ged .PdfObjectArray );if !_aeca {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gabc .Len ()!=4{return nil ,_d .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_efea =_gabc .Get (0);_ggagf ,_aeca :=_efea .(*_ged .PdfObjectName );if !_aeca {return nil ,_d .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_ggagf !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_d .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");};_efea =_gabc .Get (1);_bgef ,_begf :=DetermineColorspaceNameFromPdfObject (_efea );if _begf !=nil {return nil ,_begf ;};if _bgef =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_bgef =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_eg .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_bgef );return nil ,_ggged ;};_efd ,_begf :=NewPdfColorspaceFromPdfObject (_efea );if _begf !=nil {return nil ,_begf ;};_facce .Base =_efd ;_efea =_gabc .Get (2);_beaa ,_begf :=_ged .GetNumberAsInt64 (_efea );if _begf !=nil {return nil ,_begf ;};if _beaa > 255{return nil ,_d .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");};_facce .HiVal =int (_beaa );_efea =_gabc .Get (3);_facce .Lookup =_efea ;_efea =_ged .TraceToDirectObject (_efea );var _adgb []byte ;if _fede ,_gagdf :=_efea .(*_ged .PdfObjectString );_gagdf {_adgb =_fede .Bytes ();_eg .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_adgb );}else if _gaeda ,_bfdf :=_efea .(*_ged .PdfObjectStream );_bfdf {_eg .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_efea .String ());_eg .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_gaeda .Stream ),_gaeda .Stream );_aggf ,_ebccg :=_ged .DecodeStream (_gaeda );if _ebccg !=nil {return nil ,_ebccg ;};_eg .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_aggf ),_aggf );_adgb =_aggf ;}else {_eg .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_efea );return nil ,_d .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_adgb )< _facce .Base .GetNumComponents ()*(_facce .HiVal +1){_eg .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");_eg .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_adgb ),_facce .Base .GetNumComponents (),_facce .HiVal );}else {_adgb =_adgb [:_facce .Base .GetNumComponents ()*(_facce .HiVal +1)];};_facce ._aabff =_adgb ;return _facce ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_efc *PdfActionSetOCGState )ToPdfObject ()_ged .PdfObject {_efc .PdfAction .ToPdfObject ();_fdc :=_efc ._ebd ;_fbf :=_fdc .PdfObject .(*_ged .PdfObjectDictionary );_fbf .SetIfNotNil ("\u0053",_ged .MakeName (string (ActionTypeSetOCGState )));_fbf .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_efc .State );_fbf .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_efc .PreserveRB );return _fdc ;};

// ToPdfObject implements interface PdfModel.
func (_gceg *PdfAnnotationProjection )ToPdfObject ()_ged .PdfObject {_gceg .PdfAnnotation .ToPdfObject ();_cgc :=_gceg ._efb ;_fbfa :=_cgc .PdfObject .(*_ged .PdfObjectDictionary );_gceg .PdfAnnotationMarkup .appendToPdfDictionary (_fbfa );return _cgc ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_ggegb *OutlineItem )ToPdfObject ()_ged .PdfObject {_fddd ,_ :=_ggegb .ToPdfOutlineItem ();return _fddd .ToPdfObject ();};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_ged .PdfIndirectObject )*PdfOutlineItem {_ebfg :=PdfOutlineItem {};_ebfg ._babg =&_ebfg ;_ebfg .Title =_ged .MakeString (title );_bcfa :=_ged .MakeArray ();_bcfa .Append (page );_bcfa .Append (_ged .MakeName ("\u0046\u0069\u0074"));_ebfg .Dest =_bcfa ;return &_ebfg ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_eggbb :=PdfColorCalRGB {a ,b ,c };return &_eggbb ;};func (_gfbdd *pdfFontType0 )subsetRegistered ()error {_ffbge ,_egfa :=_gfbdd .DescendantFont ._gfdbg .(*pdfCIDFontType2 );if !_egfa {_eg .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_gfbdd .DescendantFont );return nil ;};if _ffbge ==nil {return nil ;};if _ffbge ._dfede ==nil {_eg .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _gfbdd ._ddga ==nil {_eg .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");return nil ;};_dagg ,_egfa :=_ged .GetStream (_ffbge ._dfede .FontFile2 );if !_egfa {_eg .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");return _fc .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_debg ,_ffde :=_ged .DecodeStream (_dagg );if _ffde !=nil {_eg .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_ffde );return _ffde ;};_fdgac ,_ffde :=_ff .Parse (_bd .NewReader (_debg ));if _ffde !=nil {_eg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_dagg .Stream ));return _ffde ;};var _fgcd []rune ;var _dbda *_ff .Font ;switch _dgbe :=_gfbdd ._ddga .(type ){case *_ffe .TrueTypeFontEncoder :_fgcd =_dgbe .RegisteredRunes ();_dbda ,_ffde =_fdgac .SubsetKeepRunes (_fgcd );if _ffde !=nil {_eg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ffde );return _ffde ;};_dgbe .SubsetRegistered ();case *_ffe .IdentityEncoder :_fgcd =_dgbe .RegisteredRunes ();_bcab :=make ([]_ff .GlyphIndex ,len (_fgcd ));for _fdec ,_gdecg :=range _fgcd {_bcab [_fdec ]=_ff .GlyphIndex (_gdecg );};_dbda ,_ffde =_fdgac .SubsetKeepIndices (_bcab );if _ffde !=nil {_eg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ffde );return _ffde ;};case _ffe .SimpleEncoder :_ffdbda :=_dgbe .Charcodes ();for _ ,_bbdad :=range _ffdbda {_dgcd ,_ddgd :=_dgbe .CharcodeToRune (_bbdad );if !_ddgd {_eg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_bbdad );continue ;};_fgcd =append (_fgcd ,_dgcd );};default:return _d .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_gfbdd ._ddga );};var _daac _bd .Buffer ;_ffde =_dbda .Write (&_daac );if _ffde !=nil {_eg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ffde );return _ffde ;};if _gfbdd ._ggdea !=nil {_gbfe :=make (map[_ec .CharCode ]rune ,len (_fgcd ));for _ ,_fdadg :=range _fgcd {_gbgfd ,_abec :=_gfbdd ._ddga .RuneToCharcode (_fdadg );if !_abec {continue ;};_gbfe [_ec .CharCode (_gbgfd )]=_fdadg ;};_gfbdd ._ggdea =_ec .NewToUnicodeCMap (_gbfe );};_dagg ,_ffde =_ged .MakeStream (_daac .Bytes (),_ged .NewFlateEncoder ());if _ffde !=nil {_eg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ffde );return _ffde ;};_dagg .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_ged .MakeInteger (int64 (_daac .Len ())));if _dedee ,_ggcf :=_ged .GetStream (_ffbge ._dfede .FontFile2 );_ggcf {*_dedee =*_dagg ;}else {_ffbge ._dfede .FontFile2 =_dagg ;};_ccfca :=_ebfe ();if len (_gfbdd ._dgefe )> 0{_gfbdd ._dgefe =_eabge (_gfbdd ._dgefe ,_ccfca );};if len (_ffbge ._dgefe )> 0{_ffbge ._dgefe =_eabge (_ffbge ._dgefe ,_ccfca );};if len (_gfbdd ._ecbed )> 0{_gfbdd ._ecbed =_eabge (_gfbdd ._ecbed ,_ccfca );};if _ffbge ._dfede !=nil {_eggfa ,_fccbf :=_ged .GetName (_ffbge ._dfede .FontName );if _fccbf &&len (_eggfa .String ())> 0{_fddf :=_eabge (_eggfa .String (),_ccfca );_ffbge ._dfede .FontName =_ged .MakeName (_fddf );};};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_age *PdfActionResetForm )ToPdfObject ()_ged .PdfObject {_age .PdfAction .ToPdfObject ();_fecf :=_age ._ebd ;_bca :=_fecf .PdfObject .(*_ged .PdfObjectDictionary );_bca .SetIfNotNil ("\u0053",_ged .MakeName (string (ActionTypeResetForm )));_bca .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_age .Fields );_bca .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_age .Flags );return _fecf ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_dgfa :=&PdfAppender {_bafa :reader ._gbda ,Reader :reader ,_gdee :reader ._ebea ,_dfgf :reader ._ebagc };_afagg ,_cdgf :=_dgfa ._bafa .Seek (0,_aa .SeekEnd );if _cdgf !=nil {return nil ,_cdgf ;};_dgfa ._fgfa =_afagg ;if _ ,_cdgf =_dgfa ._bafa .Seek (0,_aa .SeekStart );_cdgf !=nil {return nil ,_cdgf ;};_dgfa ._add ,_cdgf =NewPdfReader (_dgfa ._bafa );if _cdgf !=nil {return nil ,_cdgf ;};for _ ,_bfgg :=range _dgfa .Reader .GetObjectNums (){if _dgfa ._gbbc < _bfgg {_dgfa ._gbbc =_bfgg ;};};_dgfa ._fdae =_dgfa ._gdee .GetXrefTable ();_dgfa ._dggda =_dgfa ._gdee .GetXrefOffset ();_dgfa ._feeg =append (_dgfa ._feeg ,_dgfa ._add .PageList ...);_dgfa ._cgdd =make (map[_ged .PdfObject ]struct{});_dgfa ._adbf =make (map[_ged .PdfObject ]int64 );_dgfa ._fde =make (map[_ged .PdfObject ]struct{});_dgfa ._acgg =_dgfa ._add .AcroForm ;_dgfa ._bebg =_dgfa ._add .DSS ;return _dgfa ,nil ;};

// GetPdfInfo returns the PDF info dictionary.
func (_eccg *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_ddgef :=PdfInfo {};_cfec ,_dcacfd :=_eccg .GetTrailer ();if _dcacfd !=nil {return nil ,_dcacfd ;};var _gdbgf *_ged .PdfObjectDictionary ;_deba :=_cfec .Get ("\u0049\u006e\u0066\u006f");switch _cgdbe :=_deba .(type ){case *_ged .PdfObjectReference :_dgebgg :=_cgdbe ;_deba ,_dcacfd =_eccg .GetIndirectObjectByNumber (int (_dgebgg .ObjectNumber ));_deba =_ged .TraceToDirectObject (_deba );if _dcacfd !=nil {return nil ,_dcacfd ;};_gdbgf ,_ =_deba .(*_ged .PdfObjectDictionary );case *_ged .PdfObjectDictionary :_gdbgf =_cgdbe ;};if _gdbgf ==nil {return nil ,_fc .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_ddgef .Title ,_ =_ged .GetString (_gdbgf .Get ("\u0054\u0069\u0074l\u0065"));_ddgef .Author ,_ =_ged .GetString (_gdbgf .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));_ddgef .Subject ,_ =_ged .GetString (_gdbgf .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));_ddgef .Keywords ,_ =_ged .GetString (_gdbgf .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));_ddgef .Creator ,_ =_ged .GetString (_gdbgf .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));_ddgef .Producer ,_ =_ged .GetString (_gdbgf .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));_ddgef .Trapped ,_ =_ged .GetName (_gdbgf .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));if _afea ,_fecba :=_gdbgf .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065").(*_ged .PdfObjectString );_fecba {_gecda ,_dfgaa :=NewPdfDate (_afea .String ());if _dfgaa !=nil {return nil ,_dfgaa ;};_ddgef .CreationDate =&_gecda ;};if _fgccg ,_aaaca :=_gdbgf .Get ("\u004do\u0064\u0044\u0061\u0074\u0065").(*_ged .PdfObjectString );_aaaca {_gedfce ,_dbaddf :=NewPdfDate (_fgccg .String ());if _dbaddf !=nil {return nil ,_dbaddf ;};_ddgef .ModifiedDate =&_gedfce ;};return &_ddgef ,nil ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_gcaa *PdfShading )GetContext ()PdfModel {return _gcaa ._dbgdea };

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_gbddbb *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _cgde []*PdfOutlineTreeNode ;var _cfgc []string ;var _aabbg func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_aabbg =func (_ccea *PdfOutlineTreeNode ,_dfcf *[]*PdfOutlineTreeNode ,_becd *[]string ,_aecgeg int ){if _ccea ==nil {return ;};if _ccea ._babg ==nil {_eg .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_eacad ,_aeaaa :=_ccea ._babg .(*PdfOutlineItem );if _aeaaa {*_dfcf =append (*_dfcf ,&_eacad .PdfOutlineTreeNode );_ecef :=_bf .Repeat ("\u0020",_aecgeg *2)+_eacad .Title .Decoded ();*_becd =append (*_becd ,_ecef );};if _ccea .First !=nil {_adcbfg :=_bf .Repeat ("\u0020",_aecgeg *2)+"\u002b";*_becd =append (*_becd ,_adcbfg );_aabbg (_ccea .First ,_dfcf ,_becd ,_aecgeg +1);};if _aeaaa &&_eacad .Next !=nil {_aabbg (_eacad .Next ,_dfcf ,_becd ,_aecgeg );};};_aabbg (_gbddbb ._dgge ,&_cgde ,&_cfgc ,0);return _cgde ,_cfgc ,nil ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_ggfc *PdfReader )GetObjectNums ()[]int {return _ggfc ._ebea .GetObjectNums ()};

// SetForms sets the Acroform for a PDF file.
func (_aedbb *PdfWriter )SetForms (form *PdfAcroForm )error {_aedbb ._agdfd =form ;return nil };

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_cdcc *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_cdcc ._cedfg =colorspace ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};func (_baba *pdfFontSimple )addEncoding ()error {var (_edegb string ;_bcgad map[_ffe .CharCode ]_ffe .GlyphName ;_cece _ffe .SimpleEncoder ;);if _baba .Encoder ()!=nil {_dggag ,_gfge :=_baba .Encoder ().(_ffe .SimpleEncoder );if _gfge &&_dggag !=nil {_edegb =_dggag .BaseName ();};};if _baba .Encoding !=nil {_acab ,_dfgd ,_cgaed :=_baba .getFontEncoding ();if _cgaed !=nil {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_baba ._dgefe ,_baba ._ecaga ,_baba .Encoding ,_baba .Encoding ,_cgaed );return _cgaed ;};if _acab !=""{_edegb =_acab ;};_bcgad =_dfgd ;_cece ,_cgaed =_ffe .NewSimpleTextEncoder (_edegb ,_bcgad );if _cgaed !=nil {return _cgaed ;};};if _cece ==nil {_cacgf :=_baba ._dfede ;if _cacgf !=nil {switch _baba ._ecaga {case "\u0054\u0079\u0070e\u0031":if _cacgf .fontFile !=nil &&_cacgf .fontFile ._edege !=nil {_eg .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");_cece =_cacgf .fontFile ._edege ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _cacgf ._beec !=nil {_eg .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_gfeb ,_cagab :=_cacgf ._beec .MakeEncoder ();if _cagab ==nil {_cece =_gfeb ;};};};};};if _cece !=nil {if _bcgad !=nil {_eg .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bcgad ,_baba .baseFields ());_cece =_ffe .ApplyDifferences (_cece ,_bcgad );};_baba .SetEncoder (_cece );};return nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_bcde *PdfFunctionType4 )ToPdfObject ()_ged .PdfObject {_bdffd :=_bcde ._dbad ;if _bdffd ==nil {_bcde ._dbad =&_ged .PdfObjectStream {};_bdffd =_bcde ._dbad ;};_ggbe :=_ged .MakeDict ();_ggbe .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_ged .MakeInteger (4));_fbbg :=&_ged .PdfObjectArray {};for _ ,_gfgda :=range _bcde .Domain {_fbbg .Append (_ged .MakeFloat (_gfgda ));};_ggbe .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fbbg );_adfb :=&_ged .PdfObjectArray {};for _ ,_ffba :=range _bcde .Range {_adfb .Append (_ged .MakeFloat (_ffba ));};_ggbe .Set ("\u0052\u0061\u006eg\u0065",_adfb );if _bcde ._cbgg ==nil &&_bcde .Program !=nil {_bcde ._cbgg =[]byte (_bcde .Program .String ());};_ggbe .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ged .MakeInteger (int64 (len (_bcde ._cbgg ))));_bdffd .Stream =_bcde ._cbgg ;_bdffd .PdfObjectDictionary =_ggbe ;return _bdffd ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_efbd *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_ged .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfbf ,_fgec :=_ged .GetNumbersAsFloat (objects );if _fgec !=nil {return nil ,_fgec ;};return _efbd .ColorFromFloats (_gfbf );};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_bcaf :=&PdfColorspaceCalGray {};_bcaf .BlackPoint =[]float64 {0.0,0.0,0.0};_bcaf .Gamma =1;return _bcaf ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_baddf *PdfShadingType6 )ToPdfObject ()_ged .PdfObject {_baddf .PdfShading .ToPdfObject ();_cdeda ,_daed :=_baddf .getShadingDict ();if _daed !=nil {_eg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _baddf .BitsPerCoordinate !=nil {_cdeda .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_baddf .BitsPerCoordinate );};if _baddf .BitsPerComponent !=nil {_cdeda .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_baddf .BitsPerComponent );};if _baddf .BitsPerFlag !=nil {_cdeda .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_baddf .BitsPerFlag );};if _baddf .Decode !=nil {_cdeda .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_baddf .Decode );};if _baddf .Function !=nil {if len (_baddf .Function )==1{_cdeda .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_baddf .Function [0].ToPdfObject ());}else {_efbe :=_ged .MakeArray ();for _ ,_degc :=range _baddf .Function {_efbe .Append (_degc .ToPdfObject ());};_cdeda .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_efbe );};};return _baddf ._gfaace ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_cgfg *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _cgfg ._cedfg !=nil {return _cgfg ._cedfg ,nil ;};if _cgfg .ColorSpace ==nil {return nil ,nil ;};_dfbaa ,_dedc :=_bdgced (_cgfg .ColorSpace );if _dedc !=nil {return nil ,_dedc ;};_cgfg ._cedfg =_dfbaa ;return _cgfg ._cedfg ,nil ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_eaedg *PdfPageResources )GenerateXObjectName ()_ged .PdfObjectName {_gccbc :=1;for {_caefa :=_ged .MakeName (_d .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_gccbc ));if !_eaedg .HasXObjectByName (*_caefa ){return *_caefa ;};_gccbc ++;};};func (_bfeg *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// GetContentStreams returns the content stream as an array of strings.
func (_acecf *PdfPage )GetContentStreams ()([]string ,error ){_edafd :=_acecf .GetContentStreamObjs ();var _cfeag []string ;for _ ,_bgcc :=range _edafd {_gfaec ,_afbdg :=_afagb (_bgcc );if _afbdg !=nil {return nil ,_afbdg ;};_cfeag =append (_cfeag ,_gfaec );};return _cfeag ,nil ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_fbbb *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_cca :=_fec .NewReader (img .getBase ());_egbg :=_daf .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_gbf :=_fec .NewWriter (_egbg );_fgbf :=_af .Pow (2,float64 (img .BitsPerComponent ))-1;_dcdg :=make ([]uint32 ,3);var (_cagbe error ;_decb ,_ggee ,_fbfgb ,_bfef ,_dcef ,_agcd float64 ;);for {_cagbe =_cca .ReadSamples (_dcdg );if _cagbe ==_aa .EOF {break ;}else if _cagbe !=nil {return img ,_cagbe ;};_decb =float64 (_dcdg [0])/_fgbf ;_ggee =float64 (_dcdg [1])/_fgbf ;_fbfgb =float64 (_dcdg [2])/_fgbf ;_bfef =_fbbb .Matrix [0]*_af .Pow (_decb ,_fbbb .Gamma [0])+_fbbb .Matrix [3]*_af .Pow (_ggee ,_fbbb .Gamma [1])+_fbbb .Matrix [6]*_af .Pow (_fbfgb ,_fbbb .Gamma [2]);_dcef =_fbbb .Matrix [1]*_af .Pow (_decb ,_fbbb .Gamma [0])+_fbbb .Matrix [4]*_af .Pow (_ggee ,_fbbb .Gamma [1])+_fbbb .Matrix [7]*_af .Pow (_fbfgb ,_fbbb .Gamma [2]);_agcd =_fbbb .Matrix [2]*_af .Pow (_decb ,_fbbb .Gamma [0])+_fbbb .Matrix [5]*_af .Pow (_ggee ,_fbbb .Gamma [1])+_fbbb .Matrix [8]*_af .Pow (_fbfgb ,_fbbb .Gamma [2]);_decb =3.240479*_bfef +-1.537150*_dcef +-0.498535*_agcd ;_ggee =-0.969256*_bfef +1.875992*_dcef +0.041556*_agcd ;_fbfgb =0.055648*_bfef +-0.204043*_dcef +1.057311*_agcd ;_decb =_af .Min (_af .Max (_decb ,0),1.0);_ggee =_af .Min (_af .Max (_ggee ,0),1.0);_fbfgb =_af .Min (_af .Max (_fbfgb ,0),1.0);_dcdg [0]=uint32 (_decb *_fgbf );_dcdg [1]=uint32 (_ggee *_fgbf );_dcdg [2]=uint32 (_fbfgb *_fgbf );if _cagbe =_gbf .WriteSamples (_dcdg );_cagbe !=nil {return img ,_cagbe ;};};return _dfcbe (&_egbg ),nil ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_fgdg *PdfAcroForm ,_eddff *PdfField ,_gdgc *PdfAnnotationWidget )(*_ged .PdfObjectDictionary ,error );};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_gaadg *Image )ColorAt (x ,y int )(_dd .Color ,error ){_bdaaa :=_daf .BytesPerLine (int (_gaadg .Width ),int (_gaadg .BitsPerComponent ),_gaadg .ColorComponents );switch _gaadg .ColorComponents {case 1:return _daf .ColorAtGrayscale (x ,y ,int (_gaadg .BitsPerComponent ),_bdaaa ,_gaadg .Data ,_gaadg ._caaed );case 3:return _daf .ColorAtNRGBA (x ,y ,int (_gaadg .Width ),_bdaaa ,int (_gaadg .BitsPerComponent ),_gaadg .Data ,_gaadg ._fgaab ,_gaadg ._caaed );case 4:return _daf .ColorAtCMYK (x ,y ,int (_gaadg .Width ),_gaadg .Data ,_gaadg ._caaed );};_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gaadg .ColorComponents ,_gaadg .BitsPerComponent );return nil ,_fc .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// ValidateSignatures validates digital signatures in the document.
func (_deede *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _deede .AcroForm ==nil {return nil ,nil ;};if _deede .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_gcgdc *PdfSignature ;_babbe *PdfField ;_gbdgd SignatureHandler ;};var _efbac []*sigFieldPair ;for _ ,_dabb :=range _deede .AcroForm .AllFields (){if _dabb .V ==nil {continue ;};if _ecgd ,_cbdcd :=_ged .GetDict (_dabb .V );_cbdcd {if _bdaaf ,_baegg :=_ged .GetNameVal (_ecgd .Get ("\u0054\u0079\u0070\u0065"));_baegg &&_bdaaf =="\u0053\u0069\u0067"{_cafba ,_aaefg :=_ged .GetIndirect (_dabb .V );if !_aaefg {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");return nil ,ErrTypeCheck ;};_gabfe ,_ccdgc :=_deede .newPdfSignatureFromIndirect (_cafba );if _ccdgc !=nil {return nil ,_ccdgc ;};var _egffe SignatureHandler ;for _ ,_eagec :=range handlers {if _eagec .IsApplicable (_gabfe ){_egffe =_eagec ;break ;};};_efbac =append (_efbac ,&sigFieldPair {_gcgdc :_gabfe ,_babbe :_dabb ,_gbdgd :_egffe });};};};var _cgcdg []SignatureValidationResult ;for _ ,_fgcfc :=range _efbac {_egdga :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_fgcfc ._babbe }};if _fgcfc ._gbdgd ==nil {_egdga .Errors =append (_egdga .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_cgcdg =append (_cgcdg ,_egdga );continue ;};_cbdfb ,_egebd :=_fgcfc ._gbdgd .NewDigest (_fgcfc ._gcgdc );if _egebd !=nil {_egdga .Errors =append (_egdga .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_egebd .Error ());_cgcdg =append (_cgcdg ,_egdga );continue ;};_gcbgd :=_fgcfc ._gcgdc .ByteRange ;if _gcbgd ==nil {_egdga .Errors =append (_egdga .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_cgcdg =append (_cgcdg ,_egdga );continue ;};for _adbgea :=0;_adbgea < _gcbgd .Len ();_adbgea =_adbgea +2{_ffdcb ,_ :=_ged .GetNumberAsInt64 (_gcbgd .Get (_adbgea ));_fggad ,_ :=_ged .GetIntVal (_gcbgd .Get (_adbgea +1));if _ ,_abegb :=_deede ._gbda .Seek (_ffdcb ,_aa .SeekStart );_abegb !=nil {return nil ,_abegb ;};_fcced :=make ([]byte ,_fggad );if _ ,_ggbg :=_deede ._gbda .Read (_fcced );_ggbg !=nil {return nil ,_ggbg ;};_cbdfb .Write (_fcced );};_abaea ,_egebd :=_fgcfc ._gbdgd .Validate (_fgcfc ._gcgdc ,_cbdfb );if _egebd !=nil {return nil ,_egebd ;};_abaea .Name =_fgcfc ._gcgdc .Name .Decoded ();_abaea .Reason =_fgcfc ._gcgdc .Reason .Decoded ();if _fgcfc ._gcgdc .M !=nil {_baebf ,_fcdff :=NewPdfDate (_fgcfc ._gcgdc .M .String ());if _fcdff !=nil {_abaea .Errors =append (_abaea .Errors ,_fcdff .Error ());continue ;};_abaea .Date =_baebf ;};_abaea .ContactInfo =_fgcfc ._gcgdc .ContactInfo .Decoded ();_abaea .Location =_fgcfc ._gcgdc .Location .Decoded ();_abaea .Fields =_egdga .Fields ;_cgcdg =append (_cgcdg ,_abaea );};return _cgcdg ,nil ;};

// B returns the value of the B component of the color.
func (_aeda *PdfColorCalRGB )B ()float64 {return _aeda [1]};func _cbfffb (_bade *_ged .PdfObjectDictionary )(*PdfShadingType5 ,error ){_befg :=PdfShadingType5 {};_gdgg :=_bade .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _gdgg ==nil {_eg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_gecdd ,_bccbe :=_gdgg .(*_ged .PdfObjectInteger );if !_bccbe {_eg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gdgg );return nil ,_ged .ErrTypeError ;};_befg .BitsPerCoordinate =_gecdd ;_gdgg =_bade .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gdgg ==nil {_eg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_gecdd ,_bccbe =_gdgg .(*_ged .PdfObjectInteger );if !_bccbe {_eg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gdgg );return nil ,_ged .ErrTypeError ;};_befg .BitsPerComponent =_gecdd ;_gdgg =_bade .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _gdgg ==nil {_eg .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");return nil ,ErrRequiredAttributeMissing ;};_gecdd ,_bccbe =_gdgg .(*_ged .PdfObjectInteger );if !_bccbe {_eg .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_gdgg );return nil ,_ged .ErrTypeError ;};_befg .VerticesPerRow =_gecdd ;_gdgg =_bade .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gdgg ==nil {_eg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_dafa ,_bccbe :=_gdgg .(*_ged .PdfObjectArray );if !_bccbe {_eg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gdgg );return nil ,_ged .ErrTypeError ;};_befg .Decode =_dafa ;if _fbgaa :=_bade .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_fbgaa !=nil {_befg .Function =[]PdfFunction {};if _baaea ,_gdbe :=_fbgaa .(*_ged .PdfObjectArray );_gdbe {for _ ,_bcabf :=range _baaea .Elements (){_eddfe ,_fdcaa :=_gecdb (_bcabf );if _fdcaa !=nil {_eg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fdcaa );return nil ,_fdcaa ;};_befg .Function =append (_befg .Function ,_eddfe );};}else {_ggecf ,_ccbbe :=_gecdb (_fbgaa );if _ccbbe !=nil {_eg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ccbbe );return nil ,_ccbbe ;};_befg .Function =append (_befg .Function ,_ggecf );};};return &_befg ,nil ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _ged .PdfObject ;LE _ged .PdfObject ;BS _ged .PdfObject ;IC _ged .PdfObject ;BE _ged .PdfObject ;IT _ged .PdfObject ;Measure _ged .PdfObject ;};func (_bgece SignatureValidationResult )String ()string {var _efbbg _bd .Buffer ;_efbbg .WriteString (_d .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_bgece .Name ));if _bgece .Date ._fegf > 0{_efbbg .WriteString (_d .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_bgece .Date .ToGoTime ().String ()));}else {_efbbg .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_bgece .Reason )> 0{_efbbg .WriteString (_d .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_bgece .Reason ));}else {_efbbg .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_bgece .Location )> 0{_efbbg .WriteString (_d .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_bgece .Location ));}else {_efbbg .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_bgece .ContactInfo )> 0{_efbbg .WriteString (_d .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_bgece .ContactInfo ));}else {_efbbg .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_efbbg .WriteString (_d .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_bgece .Fields )));if _bgece .IsSigned {_efbbg .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_efbbg .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _bgece .IsVerified {_efbbg .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_efbbg .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _bgece .IsTrusted {_efbbg .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_efbbg .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_bgece .GeneralizedTime .IsZero (){_efbbg .WriteString (_d .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_bgece .GeneralizedTime .String ()));};return _efbbg .String ();};func _gaaae (_adacf _ged .PdfObject ,_daaea *PdfReader )(*OutlineDest ,error ){_dfcba ,_cdfce :=_ged .GetArray (_adacf );if !_cdfce {return nil ,_fc .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};_gaaab :=_dfcba .Len ();if _gaaab < 2{return nil ,_d .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_gaaab );};_bdada :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_gaeee :=_dfcba .Get (0);if _cdfg ,_ecbaa :=_ged .GetIndirect (_gaeee );_ecbaa {if _ ,_gfcd ,_ecedb :=_daaea .PageFromIndirectObject (_cdfg );_ecedb ==nil {_bdada .Page =int64 (_gfcd -1);}else {_eg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_cdfg );};_bdada .PageObj =_cdfg ;}else if _efeef ,_abgc :=_ged .GetIntVal (_gaeee );_abgc {if _efeef >=0&&_efeef < len (_daaea .PageList ){_bdada .PageObj =_daaea .PageList [_efeef ].GetPageAsIndirectObject ();}else {_eg .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_efeef );};_bdada .Page =int64 (_efeef );}else {return nil ,_d .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_gaeee );};_beeca ,_cdfce :=_ged .GetNameVal (_dfcba .Get (1));if !_cdfce {_eg .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_dfcba .Get (1));return _bdada ,nil ;};switch _beeca {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _gaaab > 2{_bdada .Y ,_ =_ged .GetNumberAsFloat (_ged .TraceToDirectObject (_dfcba .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _gaaab > 2{_bdada .X ,_ =_ged .GetNumberAsFloat (_ged .TraceToDirectObject (_dfcba .Get (2)));};case "\u0058\u0059\u005a":if _gaaab > 4{_bdada .X ,_ =_ged .GetNumberAsFloat (_ged .TraceToDirectObject (_dfcba .Get (2)));_bdada .Y ,_ =_ged .GetNumberAsFloat (_ged .TraceToDirectObject (_dfcba .Get (3)));_bdada .Zoom ,_ =_ged .GetNumberAsFloat (_ged .TraceToDirectObject (_dfcba .Get (4)));};default:_beeca ="\u0046\u0069\u0074";};_bdada .Mode =_beeca ;return _bdada ,nil ;};var _ pdfFont =(*pdfFontType0 )(nil );

// GetCharMetrics returns the char metrics for character code `code`.
func (_ecce pdfCIDFontType0 )GetCharMetrics (code _ffe .CharCode )(_aea .CharMetrics ,bool ){_cffg :=_ecce ._adcdf ;if _egdcc ,_bbfc :=_ecce ._caad [code ];_bbfc {_cffg =_egdcc ;};return _aea .CharMetrics {Wx :_cffg },true ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_effe PdfModel ;_bagb *_ged .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_ged .PdfObjectName ;T *_ged .PdfObjectString ;TU *_ged .PdfObjectString ;TM *_ged .PdfObjectString ;Ff *_ged .PdfObjectInteger ;V _ged .PdfObject ;DV _ged .PdfObject ;AA _ged .PdfObject ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_gbedg *PdfPattern )GetContext ()PdfModel {return _gbedg ._bcbc };var _ pdfFont =(*pdfCIDFontType2 )(nil );

// ToPdfObject returns a stream object.
func (_faaea *XObjectForm )ToPdfObject ()_ged .PdfObject {_gfeed :=_faaea ._dfbddc ;_dgeea :=_gfeed .PdfObjectDictionary ;if _faaea .Filter !=nil {_dgeea =_faaea .Filter .MakeStreamDict ();_gfeed .PdfObjectDictionary =_dgeea ;};_dgeea .Set ("\u0054\u0079\u0070\u0065",_ged .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_dgeea .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0046\u006f\u0072\u006d"));_dgeea .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_faaea .FormType );_dgeea .SetIfNotNil ("\u0042\u0042\u006f\u0078",_faaea .BBox );_dgeea .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_faaea .Matrix );if _faaea .Resources !=nil {_dgeea .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_faaea .Resources .ToPdfObject ());};_dgeea .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_faaea .Group );_dgeea .SetIfNotNil ("\u0052\u0065\u0066",_faaea .Ref );_dgeea .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_faaea .MetaData );_dgeea .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_faaea .PieceInfo );_dgeea .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_faaea .LastModified );_dgeea .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_faaea .StructParent );_dgeea .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_faaea .StructParents );_dgeea .SetIfNotNil ("\u004f\u0050\u0049",_faaea .OPI );_dgeea .SetIfNotNil ("\u004f\u0043",_faaea .OC );_dgeea .SetIfNotNil ("\u004e\u0061\u006d\u0065",_faaea .Name );_dgeea .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ged .MakeInteger (int64 (len (_faaea .Stream ))));_gfeed .Stream =_faaea .Stream ;return _gfeed ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_bgdb *PdfOutlineItem )ToPdfObject ()_ged .PdfObject {_dfbdb :=_bgdb ._befdc ;_agae :=_dfbdb .PdfObject .(*_ged .PdfObjectDictionary );_agae .Set ("\u0054\u0069\u0074l\u0065",_bgdb .Title );if _bgdb .A !=nil {_agae .Set ("\u0041",_bgdb .A );};if _gcfef :=_agae .Get ("\u0053\u0045");_gcfef !=nil {_agae .Remove ("\u0053\u0045");};if _bgdb .C !=nil {_agae .Set ("\u0043",_bgdb .C );};if _bgdb .Dest !=nil {_agae .Set ("\u0044\u0065\u0073\u0074",_bgdb .Dest );};if _bgdb .F !=nil {_agae .Set ("\u0046",_bgdb .F );};if _bgdb .Count !=nil {_agae .Set ("\u0043\u006f\u0075n\u0074",_ged .MakeInteger (*_bgdb .Count ));};if _bgdb .Next !=nil {_agae .Set ("\u004e\u0065\u0078\u0074",_bgdb .Next .ToPdfObject ());};if _bgdb .First !=nil {_agae .Set ("\u0046\u0069\u0072s\u0074",_bgdb .First .ToPdfObject ());};if _bgdb .Prev !=nil {_agae .Set ("\u0050\u0072\u0065\u0076",_bgdb .Prev .GetContext ().GetContainingPdfObject ());};if _bgdb .Last !=nil {_agae .Set ("\u004c\u0061\u0073\u0074",_bgdb .Last .GetContext ().GetContainingPdfObject ());};if _bgdb .Parent !=nil {_agae .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bgdb .Parent .GetContext ().GetContainingPdfObject ());};return _dfbdb ;};func _cgcg (_abgfc *_ged .PdfObjectDictionary ,_ddbc *fontCommon )(*pdfCIDFontType2 ,error ){if _ddbc ._ecaga !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_eg .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_ddbc );return nil ,_ged .ErrRangeError ;};_gdda :=_agba (_ddbc );_fegag ,_fbcb :=_ged .GetDict (_abgfc .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_fbcb {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_ddbc );return nil ,ErrRequiredAttributeMissing ;};_gdda .CIDSystemInfo =_fegag ;_gdda .DW =_abgfc .Get ("\u0044\u0057");_gdda .W =_abgfc .Get ("\u0057");_gdda .DW2 =_abgfc .Get ("\u0044\u0057\u0032");_gdda .W2 =_abgfc .Get ("\u0057\u0032");_gdda .CIDToGIDMap =_abgfc .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");_gdda ._bafe =1000.0;if _agdb ,_cgffd :=_ged .GetNumberAsFloat (_gdda .DW );_cgffd ==nil {_gdda ._bafe =_agdb ;};_bdbga ,_fbbd :=_ggbbd (_gdda .W );if _fbbd !=nil {return nil ,_fbbd ;};if _bdbga ==nil {_bdbga =map[_ffe .CharCode ]float64 {};};_gdda ._bafcc =_bdbga ;return _gdda ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_aabbb *PdfShadingType7 )ToPdfObject ()_ged .PdfObject {_aabbb .PdfShading .ToPdfObject ();_ceadg ,_fbfca :=_aabbb .getShadingDict ();if _fbfca !=nil {_eg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _aabbb .BitsPerCoordinate !=nil {_ceadg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_aabbb .BitsPerCoordinate );};if _aabbb .BitsPerComponent !=nil {_ceadg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aabbb .BitsPerComponent );};if _aabbb .BitsPerFlag !=nil {_ceadg .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_aabbb .BitsPerFlag );};if _aabbb .Decode !=nil {_ceadg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_aabbb .Decode );};if _aabbb .Function !=nil {if len (_aabbb .Function )==1{_ceadg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aabbb .Function [0].ToPdfObject ());}else {_ddeag :=_ged .MakeArray ();for _ ,_eccd :=range _aabbb .Function {_ddeag .Append (_eccd .ToPdfObject ());};_ceadg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ddeag );};};return _aabbb ._gfaace ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_aecca *PdfAcroForm )GetContainingPdfObject ()_ged .PdfObject {return _aecca ._ddbae };

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_aac :=NewPdfAnnotation ();_acg :=&PdfAnnotationTrapNet {};_acg .PdfAnnotation =_aac ;_aac .SetContext (_acg );return _acg ;};

// Y returns the value of the yellow component of the color.
func (_dfed *PdfColorDeviceCMYK )Y ()float64 {return _dfed [2]};

// ToPdfObject implements interface PdfModel.
func (_cda *PdfBorderStyle )ToPdfObject ()_ged .PdfObject {_fdgf :=_ged .MakeDict ();if _cda ._aefa !=nil {if _afe ,_ceg :=_cda ._aefa .(*_ged .PdfIndirectObject );_ceg {_afe .PdfObject =_fdgf ;};};_fdgf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));if _cda .W !=nil {_fdgf .Set ("\u0057",_ged .MakeFloat (*_cda .W ));};if _cda .S !=nil {_fdgf .Set ("\u0053",_ged .MakeName (_cda .S .GetPdfName ()));};if _cda .D !=nil {_fdgf .Set ("\u0044",_ged .MakeArrayFromIntegers (*_cda .D ));};if _cda ._aefa !=nil {return _cda ._aefa ;};return _fdgf ;};func (_cdeag *PdfSignature )extractChainFromPKCS7 ()([]*_fe .Certificate ,error ){_agfa ,_degfc :=_da .Parse (_cdeag .Contents .Bytes ());if _degfc !=nil {return nil ,_degfc ;};return _agfa .Certificates ,nil ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// HasFontByName checks if has font resource by name.
func (_gegcb *PdfPage )HasFontByName (name _ged .PdfObjectName )bool {_adeca ,_fdcag :=_gegcb .Resources .Font .(*_ged .PdfObjectDictionary );if !_fdcag {return false ;};if _fcbdd :=_adeca .Get (name );_fcbdd !=nil {return true ;};return false ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_cbeg *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_cbeg .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_cbeg ._acgg =acroForm ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_cbcg *Image )GetSamples ()[]uint32 {_bafcb :=_fec .ResampleBytes (_cbcg .Data ,int (_cbcg .BitsPerComponent ));if _cbcg .BitsPerComponent < 8{_bafcb =_cbcg .samplesTrimPadding (_bafcb );};_cgcgg :=int (_cbcg .Width )*int (_cbcg .Height )*_cbcg .ColorComponents ;if len (_bafcb )< _cgcgg {_eg .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_bafcb ),_cgcgg );return _bafcb ;}else if len (_bafcb )> _cgcgg {_eg .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_bafcb ),_cgcgg );_bafcb =_bafcb [:_cgcgg ];};return _bafcb ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_ged .PdfObjectInteger ;BitsPerComponent *_ged .PdfObjectInteger ;BitsPerFlag *_ged .PdfObjectInteger ;Decode *_ged .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_gfag *PdfColorspaceSpecialIndexed )ToPdfObject ()_ged .PdfObject {_cbfg :=_ged .MakeArray (_ged .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_cbfg .Append (_gfag .Base .ToPdfObject ());_cbfg .Append (_ged .MakeInteger (int64 (_gfag .HiVal )));_cbfg .Append (_gfag .Lookup );if _gfag ._dgcb !=nil {_gfag ._dgcb .PdfObject =_cbfg ;return _gfag ._dgcb ;};return _cbfg ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _ged .PdfObject ;IC _ged .PdfObject ;BE _ged .PdfObject ;RD _ged .PdfObject ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_dfac *PdfPageResources )GetShadingByName (keyName _ged .PdfObjectName )(*PdfShading ,bool ){if _dfac .Shading ==nil {return nil ,false ;};_bbbdb ,_ccdfe :=_ged .TraceToDirectObject (_dfac .Shading ).(*_ged .PdfObjectDictionary );if !_ccdfe {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dfac .Shading );return nil ,false ;};if _cebbb :=_bbbdb .Get (keyName );_cebbb !=nil {_fgaec ,_efbaa :=_ddca (_cebbb );if _efbaa !=nil {_eg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_efbaa );return nil ,false ;};return _fgaec ,true ;};return nil ,false ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_fgae *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gda :=vals [0];if _gda < 0.0||_gda > 1.0{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_edaa :=vals [1];if _edaa < 0.0||_edaa > 1.0{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgba :=vals [2];if _fgba < 0.0||_fgba > 1.0{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bggeg :=NewPdfColorDeviceRGB (_gda ,_edaa ,_fgba );return _bggeg ,nil ;};func _aacd (_gcbe *_ged .PdfObjectDictionary )(*PdfFieldChoice ,error ){_dea :=&PdfFieldChoice {};_dea .Opt ,_ =_ged .GetArray (_gcbe .Get ("\u004f\u0070\u0074"));_dea .TI ,_ =_ged .GetInt (_gcbe .Get ("\u0054\u0049"));_dea .I ,_ =_ged .GetArray (_gcbe .Get ("\u0049"));return _dea ,nil ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _ged .PdfObject )(*PdfFilespec ,error ){_fegbf :=&PdfFilespec {};var _geeca *_ged .PdfObjectDictionary ;if _cffe ,_agagb :=_ged .GetIndirect (obj );_agagb {_fegbf ._eeebf =_cffe ;_eegb ,_fgfge :=_ged .GetDict (_cffe .PdfObject );if !_fgfge {_eg .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_ged .ErrTypeError ;};_geeca =_eegb ;}else if _aefe ,_abfd :=_ged .GetDict (obj );_abfd {_fegbf ._eeebf =_aefe ;_geeca =_aefe ;}else {_eg .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_ged .ErrTypeError ;};if _geeca ==nil {_eg .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_fc .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _abae :=_geeca .Get ("\u0054\u0079\u0070\u0065");_abae !=nil {_fbfb ,_egaba :=_abae .(*_ged .PdfObjectName );if !_egaba {_eg .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_abae );}else {if *_fbfb !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_eg .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_fbfb );};};};if _dceb :=_geeca .Get ("\u0046\u0053");_dceb !=nil {_fegbf .FS =_dceb ;};if _faegd :=_geeca .Get ("\u0046");_faegd !=nil {_fegbf .F =_faegd ;};if _ggedc :=_geeca .Get ("\u0055\u0046");_ggedc !=nil {_fegbf .UF =_ggedc ;};if _fcgfa :=_geeca .Get ("\u0044\u004f\u0053");_fcgfa !=nil {_fegbf .DOS =_fcgfa ;};if _dabc :=_geeca .Get ("\u004d\u0061\u0063");_dabc !=nil {_fegbf .Mac =_dabc ;};if _cfadc :=_geeca .Get ("\u0055\u006e\u0069\u0078");_cfadc !=nil {_fegbf .Unix =_cfadc ;};if _accb :=_geeca .Get ("\u0049\u0044");_accb !=nil {_fegbf .ID =_accb ;};if _cbab :=_geeca .Get ("\u0056");_cbab !=nil {_fegbf .V =_cbab ;};if _ggacg :=_geeca .Get ("\u0045\u0046");_ggacg !=nil {_fegbf .EF =_ggacg ;};if _ffef :=_geeca .Get ("\u0052\u0046");_ffef !=nil {_fegbf .RF =_ffef ;};if _affad :=_geeca .Get ("\u0044\u0065\u0073\u0063");_affad !=nil {_fegbf .Desc =_affad ;};if _fadf :=_geeca .Get ("\u0043\u0049");_fadf !=nil {_fegbf .CI =_fadf ;};return _fegbf ,nil ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_dc :=NewPdfAction ();_be :=&PdfActionGoTo {};_be .PdfAction =_dc ;_dc .SetContext (_be );return _be ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_eadf *PdfShadingType2 )ToPdfObject ()_ged .PdfObject {_eadf .PdfShading .ToPdfObject ();_acffe ,_fffdb :=_eadf .getShadingDict ();if _fffdb !=nil {_eg .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _acffe ==nil {_eg .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _eadf .Coords !=nil {_acffe .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_eadf .Coords );};if _eadf .Domain !=nil {_acffe .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_eadf .Domain );};if _eadf .Function !=nil {if len (_eadf .Function )==1{_acffe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eadf .Function [0].ToPdfObject ());}else {_gfgdb :=_ged .MakeArray ();for _ ,_fbgea :=range _eadf .Function {_gfgdb .Append (_fbgea .ToPdfObject ());};_acffe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfgdb );};};if _eadf .Extend !=nil {_acffe .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_eadf .Extend );};return _eadf ._gfaace ;};

// ToPdfObject implements interface PdfModel.
func (_dgbf *PdfAnnotationScreen )ToPdfObject ()_ged .PdfObject {_dgbf .PdfAnnotation .ToPdfObject ();_ffg :=_dgbf ._efb ;_adba :=_ffg .PdfObject .(*_ged .PdfObjectDictionary );_adba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));_adba .SetIfNotNil ("\u0054",_dgbf .T );_adba .SetIfNotNil ("\u004d\u004b",_dgbf .MK );_adba .SetIfNotNil ("\u0041",_dgbf .A );_adba .SetIfNotNil ("\u0041\u0041",_dgbf .AA );return _ffg ;};func _cagaa (_ceggd *_ged .PdfObjectDictionary )(*PdfShadingType6 ,error ){_abgef :=PdfShadingType6 {};_dedd :=_ceggd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _dedd ==nil {_eg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_dcdbd ,_abcba :=_dedd .(*_ged .PdfObjectInteger );if !_abcba {_eg .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dedd );return nil ,_ged .ErrTypeError ;};_abgef .BitsPerCoordinate =_dcdbd ;_dedd =_ceggd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _dedd ==nil {_eg .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_dcdbd ,_abcba =_dedd .(*_ged .PdfObjectInteger );if !_abcba {_eg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_dedd );return nil ,_ged .ErrTypeError ;};_abgef .BitsPerComponent =_dcdbd ;_dedd =_ceggd .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _dedd ==nil {_eg .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_dcdbd ,_abcba =_dedd .(*_ged .PdfObjectInteger );if !_abcba {_eg .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_dedd );return nil ,_ged .ErrTypeError ;};_abgef .BitsPerComponent =_dcdbd ;_dedd =_ceggd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _dedd ==nil {_eg .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_aeab ,_abcba :=_dedd .(*_ged .PdfObjectArray );if !_abcba {_eg .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dedd );return nil ,_ged .ErrTypeError ;};_abgef .Decode =_aeab ;if _febga :=_ceggd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_febga !=nil {_abgef .Function =[]PdfFunction {};if _ffed ,_cdcdb :=_febga .(*_ged .PdfObjectArray );_cdcdb {for _ ,_ddbbe :=range _ffed .Elements (){_bdcae ,_decbb :=_gecdb (_ddbbe );if _decbb !=nil {_eg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_decbb );return nil ,_decbb ;};_abgef .Function =append (_abgef .Function ,_bdcae );};}else {_efcag ,_bcdcg :=_gecdb (_febga );if _bcdcg !=nil {_eg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bcdcg );return nil ,_bcdcg ;};_abgef .Function =append (_abgef .Function ,_efcag );};};return &_abgef ,nil ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _aa .ReadSeeker )(*PdfReader ,error ){_dabe :=&PdfReader {_gbda :rs ,_ebagc :map[_ged .PdfObject ]struct{}{},_accc :_adacbb (),_dbfdg :false };_adbgd ,_cfdfdb :=_ged .NewParser (rs );if _cfdfdb !=nil {return nil ,_cfdfdb ;};_dabe ._ebea =_adbgd ;_gbaec ,_cfdfdb :=_dabe .IsEncrypted ();if _cfdfdb !=nil {return nil ,_cfdfdb ;};if !_gbaec {_cfdfdb =_dabe .loadStructure ();if _cfdfdb !=nil {return nil ,_cfdfdb ;};};return _dabe ,nil ;};func _egggc (_eacd _ged .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_eg .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_eacd .String (),_eacd );_geaeg :=NewPdfColorspaceSpecialPattern ();if _dgda ,_ceae :=_eacd .(*_ged .PdfIndirectObject );_ceae {_geaeg ._gcaea =_dgda ;};_eacd =_ged .TraceToDirectObject (_eacd );if _egdg ,_ebcc :=_eacd .(*_ged .PdfObjectName );_ebcc {if *_egdg !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_d .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};return _geaeg ,nil ;};_bbbg ,_ccdc :=_eacd .(*_ged .PdfObjectArray );if !_ccdc {_eg .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_eacd );return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _bbbg .Len ()!=1&&_bbbg .Len ()!=2{_eg .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_bbbg );return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_eacd =_bbbg .Get (0);if _edca ,_ggec :=_eacd .(*_ged .PdfObjectName );_ggec {if *_edca !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_eg .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_edca );return nil ,_d .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _bbbg .Len ()> 1{_eacd =_bbbg .Get (1);_eacd =_ged .TraceToDirectObject (_eacd );_ebeb ,_ggga :=NewPdfColorspaceFromPdfObject (_eacd );if _ggga !=nil {return nil ,_ggga ;};_geaeg .UnderlyingCS =_ebeb ;};_eg .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_geaeg .UnderlyingCS );return _geaeg ,nil ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _ged .PdfObject ;Name _ged .PdfObject ;};

// SetName sets the `Name` field of the signature.
func (_caeac *PdfSignature )SetName (name string ){_caeac .Name =_ged .MakeString (name )};

// G returns the value of the green component of the color.
func (_dbfd *PdfColorDeviceRGB )G ()float64 {return _dbfd [1]};

// StdFontName represents name of a standard font.
type StdFontName =_aea .StdFontName ;

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_ffae :=NewPdfAnnotation ();_baef :=&PdfAnnotationWidget {};_baef .PdfAnnotation =_ffae ;_ffae .SetContext (_baef );return _baef ;};func (_aabg *PdfReader )newPdfAnnotationSquigglyFromDict (_fdcd *_ged .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_gaaa :=PdfAnnotationSquiggly {};_caa ,_dggd :=_aabg .newPdfAnnotationMarkupFromDict (_fdcd );if _dggd !=nil {return nil ,_dggd ;};_gaaa .PdfAnnotationMarkup =_caa ;_gaaa .QuadPoints =_fdcd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gaaa ,nil ;};

// Subtype returns the font's "Subtype" field.
func (_dgdfc *PdfFont )Subtype ()string {_ecbb :=_dgdfc .baseFields ()._ecaga ;if _dgab ,_acaf :=_dgdfc ._gfdbg .(*pdfFontType0 );_acaf {_ecbb =_ecbb +"\u003a"+_dgab .DescendantFont .Subtype ();};return _ecbb ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// L returns the value of the L component of the color.
func (_gedae *PdfColorLab )L ()float64 {return _gedae [0]};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_ged .PdfObjectArray ;Domain *_ged .PdfObjectArray ;Function []PdfFunction ;Extend *_ged .PdfObjectArray ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_ged .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_ged .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_ged .PdfObjectBool ;_dbgdea PdfModel ;_gfaace _ged .PdfObject ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_bffac *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_ged .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eegg ,_ded :=_ged .GetNumbersAsFloat (objects );if _ded !=nil {return nil ,_ded ;};return _bffac .ColorFromFloats (_eegg );};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_fddce *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// ToInteger convert to an integer format.
func (_babd *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_gagg :=_af .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gagg *_babd .R ()),uint32 (_gagg *_babd .G ()),uint32 (_gagg *_babd .B ())};};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_dcff :=PdfColorCalGray (grayVal );return &_dcff ;};

// String returns a string that describes `base`.
func (_fdgdc fontCommon )String ()string {return _d .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_fdgdc .coreString ());};

// ToPdfObject returns the PDF representation of the colorspace.
func (_aadda *PdfColorspaceDeviceCMYK )ToPdfObject ()_ged .PdfObject {return _ged .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};func (_adeed *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// ToPdfObject implements interface PdfModel.
func (_bb *PdfAction )ToPdfObject ()_ged .PdfObject {_cd :=_bb ._ebd ;_edc :=_cd .PdfObject .(*_ged .PdfObjectDictionary );_edc .Clear ();_edc .Set ("\u0054\u0079\u0070\u0065",_ged .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_edc .SetIfNotNil ("\u0053",_bb .S );_edc .SetIfNotNil ("\u004e\u0065\u0078\u0074",_bb .Next );return _cd ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_dcca *_ged .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_abfce *PdfFilespec )ToPdfObject ()_ged .PdfObject {_edfeg :=_abfce .getDict ();_edfeg .Clear ();_edfeg .Set ("\u0054\u0079\u0070\u0065",_ged .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_edfeg .SetIfNotNil ("\u0046\u0053",_abfce .FS );_edfeg .SetIfNotNil ("\u0046",_abfce .F );_edfeg .SetIfNotNil ("\u0055\u0046",_abfce .UF );_edfeg .SetIfNotNil ("\u0044\u004f\u0053",_abfce .DOS );_edfeg .SetIfNotNil ("\u004d\u0061\u0063",_abfce .Mac );_edfeg .SetIfNotNil ("\u0055\u006e\u0069\u0078",_abfce .Unix );_edfeg .SetIfNotNil ("\u0049\u0044",_abfce .ID );_edfeg .SetIfNotNil ("\u0056",_abfce .V );_edfeg .SetIfNotNil ("\u0045\u0046",_abfce .EF );_edfeg .SetIfNotNil ("\u0052\u0046",_abfce .RF );_edfeg .SetIfNotNil ("\u0044\u0065\u0073\u0063",_abfce .Desc );_edfeg .SetIfNotNil ("\u0043\u0049",_abfce .CI );return _abfce ._eeebf ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_gdabg .Lock ();defer _gdabg .Unlock ();_bafac =producer };

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_dgeb *PdfAnnotation )GetContext ()PdfModel {if _dgeb ==nil {return nil ;};return _dgeb ._edg ;};func (_aebd *PdfReader )newPdfActionSubmitFormFromDict (_bcf *_ged .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_dcd ,_baa :=_dge (_bcf .Get ("\u0046"));if _baa !=nil {return nil ,_baa ;};return &PdfActionSubmitForm {F :_dcd ,Fields :_bcf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_bcf .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_fad :=NewPdfAnnotation ();_egae :=&PdfAnnotationPolygon {};_egae .PdfAnnotation =_fad ;_egae .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fad .SetContext (_egae );return _egae ;};func (_cfgg *PdfReader )newPdfActionLaunchFromDict (_cba *_ged .PdfObjectDictionary )(*PdfActionLaunch ,error ){_fabgg ,_def :=_dge (_cba .Get ("\u0046"));if _def !=nil {return nil ,_def ;};return &PdfActionLaunch {Win :_cba .Get ("\u0057\u0069\u006e"),Mac :_cba .Get ("\u004d\u0061\u0063"),Unix :_cba .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_cba .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_fabgg },nil ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_bfce *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _fddagd []float64 ;for _cafc :=0;_cafc < _bfce .GetNumComponents ();_cafc ++{_fddagd =append (_fddagd ,0.0,1.0);};return _fddagd ;};func (_fbgg *PdfReader )newPdfAnnotationFreeTextFromDict (_daaa *_ged .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_fcab :=PdfAnnotationFreeText {};_fcfe ,_cbac :=_fbgg .newPdfAnnotationMarkupFromDict (_daaa );if _cbac !=nil {return nil ,_cbac ;};_fcab .PdfAnnotationMarkup =_fcfe ;_fcab .DA =_daaa .Get ("\u0044\u0041");_fcab .Q =_daaa .Get ("\u0051");_fcab .RC =_daaa .Get ("\u0052\u0043");_fcab .DS =_daaa .Get ("\u0044\u0053");_fcab .CL =_daaa .Get ("\u0043\u004c");_fcab .IT =_daaa .Get ("\u0049\u0054");_fcab .BE =_daaa .Get ("\u0042\u0045");_fcab .RD =_daaa .Get ("\u0052\u0044");_fcab .BS =_daaa .Get ("\u0042\u0053");_fcab .LE =_daaa .Get ("\u004c\u0045");return &_fcab ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gd *PdfActionNamed )ToPdfObject ()_ged .PdfObject {_gd .PdfAction .ToPdfObject ();_fg :=_gd ._ebd ;_cg :=_fg .PdfObject .(*_ged .PdfObjectDictionary );_cg .SetIfNotNil ("\u0053",_ged .MakeName (string (ActionTypeNamed )));_cg .SetIfNotNil ("\u004e",_gd .N );return _fg ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _ged .PdfObject ;IC _ged .PdfObject ;BE _ged .PdfObject ;RD _ged .PdfObject ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_aaad FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_aaad .Mask ()&^fl .Mask ())};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_gggbb *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_dagb ,_cabg :=_ged .GetDict (_gggbb ._ffceb .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_cabg {_dagb =_ged .MakeDict ();_gggbb ._ffceb .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_dagb );};_fcccg ,_cabg :=_ged .GetDict (_dagb .Get (_ged .PdfObjectName (extName )));if !_cabg {_fcccg =_ged .MakeDict ();_dagb .Set (_ged .PdfObjectName (extName ),_fcccg );};if _ecgc ,_ :=_ged .GetNameVal (_fcccg .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));_ecgc !=baseVersion {_fcccg .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_ged .MakeName (baseVersion ));};if _bdfe ,_ :=_ged .GetIntVal (_fcccg .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));_bdfe !=extLevel {_fcccg .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_ged .MakeInteger (int64 (extLevel )));};};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_ebgg :=NewPdfAnnotation ();_gbeg :=&PdfAnnotationFileAttachment {};_gbeg .PdfAnnotation =_ebgg ;_gbeg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebgg .SetContext (_gbeg );return _gbeg ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_ecae *PdfPage )AddContentStreamByString (contentStr string )error {_cccegb ,_ggafe :=_ged .MakeStream ([]byte (contentStr ),_ged .NewFlateEncoder ());if _ggafe !=nil {return _ggafe ;};if _ecae .Contents ==nil {_ecae .Contents =_cccegb ;}else {_caeb :=_ged .TraceToDirectObject (_ecae .Contents );_baab ,_edda :=_caeb .(*_ged .PdfObjectArray );if !_edda {_baab =_ged .MakeArray (_caeb );};_baab .Append (_cccegb );_ecae .Contents =_baab ;};return nil ;};func (_dfegb *XObjectImage )getParamsDict ()*_ged .PdfObjectDictionary {_gddcd :=_ged .MakeDict ();_gddcd .Set ("\u0057\u0069\u0064t\u0068",_ged .MakeInteger (*_dfegb .Width ));_gddcd .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_ged .MakeInteger (*_dfegb .Height ));_gddcd .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_ged .MakeInteger (int64 (_dfegb .ColorSpace .GetNumComponents ())));_gddcd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ged .MakeInteger (*_dfegb .BitsPerComponent ));return _gddcd ;};type fontCommon struct{_dgefe string ;_ecaga string ;_ecbed string ;_eecgg _ged .PdfObject ;_ggdea *_ec .CMap ;_dfede *PdfFontDescriptor ;_egbc int64 ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_gdbf DefaultImageHandler )NewGrayImageFromGoImage (goimg _faf .Image )(*Image ,error ){_ccgc :=goimg .Bounds ();_cbfdg :=&Image {Width :int64 (_ccgc .Dx ()),Height :int64 (_ccgc .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _ebfb :=goimg .(type ){case *_faf .Gray :if len (_ebfb .Pix )!=_ccgc .Dx ()*_ccgc .Dy (){_ffgfc ,_gbfbe :=_daf .GrayConverter .Convert (goimg );if _gbfbe !=nil {return nil ,_gbfbe ;};_cbfdg .Data =_ffgfc .Pix ();}else {_cbfdg .Data =_ebfb .Pix ;};case *_faf .Gray16 :_cbfdg .BitsPerComponent =16;if len (_ebfb .Pix )!=_ccgc .Dx ()*_ccgc .Dy ()*2{_gdabf ,_gfafg :=_daf .Gray16Converter .Convert (goimg );if _gfafg !=nil {return nil ,_gfafg ;};_cbfdg .Data =_gdabf .Pix ();}else {_cbfdg .Data =_ebfb .Pix ;};default:_bbegg ,_bfebc :=_daf .GrayConverter .Convert (goimg );if _bfebc !=nil {return nil ,_bfebc ;};_cbfdg .Data =_bbegg .Pix ();};return _cbfdg ,nil ;};

// ToPdfObject converts date to a PDF string object.
func (_debb *PdfDate )ToPdfObject ()_ged .PdfObject {_bdeba :=_d .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_debb ._fegf ,_debb ._ggdde ,_debb ._afbdgf ,_debb ._gaadc ,_debb ._geeba ,_debb ._eeddb ,_debb ._fgacaa ,_debb ._eeegec ,_debb ._acea );return _ged .MakeString (_bdeba );};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_ecd *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_bfda *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_efccd *LTV )EnableAll (extraCerts []*_fe .Certificate )error {_efgcf :=_efccd ._fbaef ._add .AcroForm ;for _ ,_bedbd :=range _efgcf .AllFields (){_gagce ,_ :=_bedbd .GetContext ().(*PdfFieldSignature );if _gagce ==nil {continue ;};_ddeda :=_gagce .V ;if _dbba :=_efccd .validateSig (_ddeda );_dbba !=nil {_eg .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_dbba );};if _dggf :=_efccd .Enable (_ddeda ,extraCerts );_dggf !=nil {return _dggf ;};};return nil ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _ged .PdfObject ;MK _ged .PdfObject ;A _ged .PdfObject ;AA _ged .PdfObject ;BS _ged .PdfObject ;Parent _ged .PdfObject ;_fgd *PdfField ;_cdc bool ;};func (_bgafb *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _ged .PdfObject ;NewWindow _ged .PdfObject ;};func _dcebf (_acca string )map[string ]string {_fgeb :=_eabec .Split (_acca ,-1);_ccag :=map[string ]string {};for _ ,_bgfa :=range _fgeb {_adgcb :=_geggg .FindStringSubmatch (_bgfa );if _adgcb ==nil {continue ;};_adbc ,_baec :=_adgcb [1],_adgcb [2];_ccag [_adbc ]=_baec ;};return _ccag ;};

// Add appends an outline item as a child of the current outline item.
func (_cegec *OutlineItem )Add (item *OutlineItem ){_cegec .Entries =append (_cegec .Entries ,item )};

// Add appends a top level outline item to the outline.
func (_dfdag *Outline )Add (item *OutlineItem ){_dfdag .Entries =append (_dfdag .Entries ,item )};func _bdggf (_addd _ged .PdfObject )(*PdfFunctionType2 ,error ){_cagg :=&PdfFunctionType2 {};var _dcdgd *_ged .PdfObjectDictionary ;if _daeg ,_geaba :=_addd .(*_ged .PdfIndirectObject );_geaba {_cfgad ,_cbgd :=_daeg .PdfObject .(*_ged .PdfObjectDictionary );if !_cbgd {return nil ,_fc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cagg ._cgffe =_daeg ;_dcdgd =_cfgad ;}else if _ebee ,_aefea :=_addd .(*_ged .PdfObjectDictionary );_aefea {_dcdgd =_ebee ;}else {return nil ,_fc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eg .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_dcdgd .String ());_bdcf ,_daaf :=_ged .TraceToDirectObject (_dcdgd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_ged .PdfObjectArray );if !_daaf {_eg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fc .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _bdcf .Len ()< 0||_bdcf .Len ()%2!=0{_eg .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_fc .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_eefef ,_cccb :=_bdcf .ToFloat64Array ();if _cccb !=nil {return nil ,_cccb ;};_cagg .Domain =_eefef ;_bdcf ,_daaf =_ged .TraceToDirectObject (_dcdgd .Get ("\u0052\u0061\u006eg\u0065")).(*_ged .PdfObjectArray );if _daaf {if _bdcf .Len ()< 0||_bdcf .Len ()%2!=0{return nil ,_fc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_gcfd ,_dafc :=_bdcf .ToFloat64Array ();if _dafc !=nil {return nil ,_dafc ;};_cagg .Range =_gcfd ;};_bdcf ,_daaf =_ged .TraceToDirectObject (_dcdgd .Get ("\u0043\u0030")).(*_ged .PdfObjectArray );if _daaf {_caefg ,_cbaf :=_bdcf .ToFloat64Array ();if _cbaf !=nil {return nil ,_cbaf ;};_cagg .C0 =_caefg ;};_bdcf ,_daaf =_ged .TraceToDirectObject (_dcdgd .Get ("\u0043\u0031")).(*_ged .PdfObjectArray );if _daaf {_bgde ,_adfcd :=_bdcf .ToFloat64Array ();if _adfcd !=nil {return nil ,_adfcd ;};_cagg .C1 =_bgde ;};if len (_cagg .C0 )!=len (_cagg .C1 ){_eg .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_ged .ErrRangeError ;};N ,_cccb :=_ged .GetNumberAsFloat (_ged .TraceToDirectObject (_dcdgd .Get ("\u004e")));if _cccb !=nil {_eg .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_dcdgd .String ());return nil ,_cccb ;};_cagg .N =N ;return _cagg ,nil ;};func _aabdb (_beed []byte )(_gcedd ,_bgbeg string ,_dfca error ){_eg .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_beed ));_deaf :=_efbcc .FindIndex (_beed );if _deaf ==nil {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");return "","",_ged .ErrTypeError ;};_baga :=_deaf [1];_gbec :=_bf .Index (string (_beed [_baga :]),_fcbgg );if _gbec < 0{_gcedd =string (_beed [_baga :]);return _gcedd ,"",nil ;};_aagfc :=_baga +_gbec ;_gcedd =string (_beed [_baga :_aagfc ]);_fecce :=_aagfc ;_gbec =_bf .Index (string (_beed [_fecce :]),_fbdc );if _gbec < 0{_eg .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dfca );return "","",_ged .ErrTypeError ;};_aece :=_fecce +_gbec ;_bgbeg =string (_beed [_fecce :_aece ]);return _gcedd ,_bgbeg ,nil ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_gdga *PdfPageResources )SetXObjectByName (keyName _ged .PdfObjectName ,stream *_ged .PdfObjectStream )error {if _gdga .XObject ==nil {_gdga .XObject =_ged .MakeDict ();};_gebd :=_ged .TraceToDirectObject (_gdga .XObject );_dffffc ,_gcgdb :=_gebd .(*_ged .PdfObjectDictionary );if !_gcgdb {_eg .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_gdga .XObject ,_gebd );return _fc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dffffc .Set (keyName ,stream );return nil ;};func _fggeg (_fgddcb _ged .PdfObject )(*fontFile ,error ){_eg .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_fgddcb );_dcga :=&fontFile {};_fgddcb =_ged .TraceToDirectObject (_fgddcb );_dbfb ,_bgfgf :=_fgddcb .(*_ged .PdfObjectStream );if !_bgfgf {_eg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_fgddcb );return nil ,_ged .ErrTypeError ;};_fcfg :=_dbfb .PdfObjectDictionary ;_gbba ,_ecaf :=_ged .DecodeStream (_dbfb );if _ecaf !=nil {return nil ,_ecaf ;};_fdgff ,_bgfgf :=_ged .GetNameVal (_fcfg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_bgfgf {_dcga ._babdc =_fdgff ;if _fdgff =="\u0054\u0079\u0070\u0065\u0031\u0043"{_eg .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");return nil ,ErrType1CFontNotSupported ;};};_beaf ,_ :=_ged .GetIntVal (_fcfg .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_ccaa ,_ :=_ged .GetIntVal (_fcfg .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _beaf > len (_gbba ){_beaf =len (_gbba );};if _beaf +_ccaa > len (_gbba ){_ccaa =len (_gbba )-_beaf ;};_abgec :=_gbba [:_beaf ];var _aace []byte ;if _ccaa > 0{_aace =_gbba [_beaf :_beaf +_ccaa ];};if _beaf > 0&&_ccaa > 0{_ccgbe :=_dcga .loadFromSegments (_abgec ,_aace );if _ccgbe !=nil {return nil ,_ccgbe ;};};return _dcga ,nil ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_bbfa *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _bbfa ._fedfg !=nil {return _bbfa ._fedfg ,nil ;};if _bbfa .Annots ==nil {_bbfa ._fedfg =[]*PdfAnnotation {};return nil ,nil ;};if _bbfa ._agcfc ==nil {_bbfa ._fedfg =[]*PdfAnnotation {};return nil ,nil ;};_bbcb ,_ddgcf :=_bbfa ._agcfc .loadAnnotations (_bbfa .Annots );if _ddgcf !=nil {return nil ,_ddgcf ;};if _bbcb ==nil {_bbfa ._fedfg =[]*PdfAnnotation {};};_bbfa ._fedfg =_bbcb ;return _bbfa ._fedfg ,nil ;};

// ToPdfObject converts rectangle to a PDF object.
func (_aggfb *PdfRectangle )ToPdfObject ()_ged .PdfObject {return _ged .MakeArray (_ged .MakeFloat (_aggfb .Llx ),_ged .MakeFloat (_aggfb .Lly ),_ged .MakeFloat (_aggfb .Urx ),_ged .MakeFloat (_aggfb .Ury ));};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_bdg :=NewPdfAction ();_dbb :=&PdfActionMovie {};_dbb .PdfAction =_bdg ;_bdg .SetContext (_dbb );return _dbb ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_ecbaac *PdfReader )GetIndirectObjectByNumber (number int )(_ged .PdfObject ,error ){_cbdbe ,_eeffc :=_ecbaac ._ebea .LookupByNumber (number );return _cbdbe ,_eeffc ;};type pdfFontSimple struct{fontCommon ;_gaacf *_ged .PdfIndirectObject ;_aagc map[_ffe .CharCode ]float64 ;_efda _ffe .TextEncoder ;_fbgad _ffe .TextEncoder ;_ffccg *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _ged .PdfObject ;LastChar _ged .PdfObject ;Widths _ged .PdfObject ;Encoding _ged .PdfObject ;_bged map[rune ]_aea .CharMetrics ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_edfceb *PdfReader )GetOutlines ()(*Outline ,error ){if _edfceb ==nil {return nil ,_fc .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");};_agfg :=_edfceb .GetOutlineTree ();if _agfg ==nil {return nil ,_fc .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");};var _fcdf func (_aggba *PdfOutlineTreeNode ,_feff *[]*OutlineItem );_fcdf =func (_dbadd *PdfOutlineTreeNode ,_adbaf *[]*OutlineItem ){if _dbadd ==nil {return ;};if _dbadd ._babg ==nil {_eg .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");return ;};var _bacgf *OutlineItem ;if _ecgbb ,_eagdd :=_dbadd ._babg .(*PdfOutlineItem );_eagdd {_ggeeg :=_ecgbb .Dest ;if (_ggeeg ==nil ||_ged .IsNullObject (_ggeeg ))&&_ecgbb .A !=nil {if _fbef ,_aadbg :=_ged .GetDict (_ecgbb .A );_aadbg {_ggeeg ,_ =_ged .GetArray (_fbef .Get ("\u0044"));};};var _beef OutlineDest ;if _ggeeg !=nil &&!_ged .IsNullObject (_ggeeg ){if _afbdc ,_bedbc :=_gaaae (_ggeeg ,_edfceb );_bedbc ==nil {_beef =*_afbdc ;}else {_eg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_ggeeg ,_bedbc );};};_bacgf =NewOutlineItem (_ecgbb .Title .Decoded (),_beef );*_adbaf =append (*_adbaf ,_bacgf );if _ecgbb .Next !=nil {_fcdf (_ecgbb .Next ,_adbaf );};};if _dbadd .First !=nil {if _bacgf !=nil {_adbaf =&_bacgf .Entries ;};_fcdf (_dbadd .First ,_adbaf );};};_faadc :=NewOutline ();_fcdf (_agfg ,&_faadc .Entries );return _faadc ,nil ;};func (_daecf *PdfReader )loadDSS ()(*DSS ,error ){if _daecf ._ebea .GetCrypter ()!=nil &&!_daecf ._ebea .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_ceec :=_daecf ._fffe .Get ("\u0044\u0053\u0053");if _ceec ==nil {return nil ,nil ;};_dfgcd ,_ :=_ged .GetIndirect (_ceec );_ceec =_ged .TraceToDirectObject (_ceec );switch _cafdg :=_ceec .(type ){case *_ged .PdfObjectNull :return nil ,nil ;case *_ged .PdfObjectDictionary :return _bacge (_dfgcd ,_cafdg );};return nil ,_d .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_ceec );};

// GetNumComponents returns the number of color components (3 for Lab).
func (_adef *PdfColorLab )GetNumComponents ()int {return 3};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _ged .PdfObject ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_ged .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// ToPdfObject implements interface PdfModel.
func (_bdff *PdfAnnotationSquare )ToPdfObject ()_ged .PdfObject {_bdff .PdfAnnotation .ToPdfObject ();_adb :=_bdff ._efb ;_aacf :=_adb .PdfObject .(*_ged .PdfObjectDictionary );if _bdff .PdfAnnotationMarkup !=nil {_bdff .PdfAnnotationMarkup .appendToPdfDictionary (_aacf );};_aacf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_aacf .SetIfNotNil ("\u0042\u0053",_bdff .BS );_aacf .SetIfNotNil ("\u0049\u0043",_bdff .IC );_aacf .SetIfNotNil ("\u0042\u0045",_bdff .BE );_aacf .SetIfNotNil ("\u0052\u0044",_bdff .RD );return _adb ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_eacgc *PdfPageResourcesColorspaces )Set (key _ged .PdfObjectName ,val PdfColorspace ){if _ ,_agcca :=_eacgc .Colorspaces [string (key )];!_agcca {_eacgc .Names =append (_eacgc .Names ,string (key ));};_eacgc .Colorspaces [string (key )]=val ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_cdfc ,_aefce :=_ad .Open (filePath );if _aefce !=nil {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_aefce );return nil ,_aefce ;};defer _cdfc .Close ();return NewPdfFontFromTTF (_cdfc );};

// ToPdfObject implements interface PdfModel.
func (_fgfga *PdfAnnotationText )ToPdfObject ()_ged .PdfObject {_fgfga .PdfAnnotation .ToPdfObject ();_ggbf :=_fgfga ._efb ;_gfde :=_ggbf .PdfObject .(*_ged .PdfObjectDictionary );if _fgfga .PdfAnnotationMarkup !=nil {_fgfga .PdfAnnotationMarkup .appendToPdfDictionary (_gfde );};_gfde .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ged .MakeName ("\u0054\u0065\u0078\u0074"));_gfde .SetIfNotNil ("\u004f\u0070\u0065\u006e",_fgfga .Open );_gfde .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fgfga .Name );_gfde .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_fgfga .State );_gfde .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_fgfga .StateModel );return _ggbf ;};func (_ggbbe *PdfFunctionType0 )processSamples ()error {_bdcd :=_fec .ResampleBytes (_ggbbe ._fcad ,_ggbbe .BitsPerSample );_ggbbe ._fbde =_bdcd ;return nil ;};func (_cebb *PdfReader )newPdfAnnotationUnderlineFromDict (_bac *_ged .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_bgad :=PdfAnnotationUnderline {};_deeg ,_ebaf :=_cebb .newPdfAnnotationMarkupFromDict (_bac );if _ebaf !=nil {return nil ,_ebaf ;};_bgad .PdfAnnotationMarkup =_deeg ;_bgad .QuadPoints =_bac .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bgad ,nil ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_eaccg *XObjectForm )GetContainingPdfObject ()_ged .PdfObject {return _eaccg ._dfbddc };func _bdgced (_aadddg _ged .PdfObject )(*PdfPageResourcesColorspaces ,error ){_gfeeb :=&PdfPageResourcesColorspaces {};if _babcg ,_bebeg :=_aadddg .(*_ged .PdfIndirectObject );_bebeg {_gfeeb ._acdd =_babcg ;_aadddg =_babcg .PdfObject ;};_fbbad ,_dcebg :=_ged .GetDict (_aadddg );if !_dcebg {return nil ,_fc .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_gfeeb .Names =[]string {};_gfeeb .Colorspaces =map[string ]PdfColorspace {};for _ ,_bgadf :=range _fbbad .Keys (){_acggg :=_fbbad .Get (_bgadf );_gfeeb .Names =append (_gfeeb .Names ,string (_bgadf ));_gdfa ,_gbbf :=NewPdfColorspaceFromPdfObject (_acggg );if _gbbf !=nil {return nil ,_gbbf ;};_gfeeb .Colorspaces [string (_bgadf )]=_gdfa ;};return _gfeeb ,nil ;};

// Initialize initializes the PdfSignature.
func (_agcfg *PdfSignature )Initialize ()error {if _agcfg .Handler ==nil {return _fc .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};return _agcfg .Handler .InitSignature (_agcfg );};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_ffec *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_eg .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_eg .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );_eg .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_eg .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );_efab ,_geab :=_daf .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._fgaab ,img ._caaed );if _geab !=nil {return Image {},_geab ;};_gcec ,_geab :=_daf .NRGBAConverter .Convert (_efab );if _geab !=nil {return Image {},_geab ;};return _dfcbe (_gcec .Base ()),nil ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _ged .PdfObject ;Open _ged .PdfObject ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_geba *BorderStyle )GetPdfName ()string {switch *_geba {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";};return "";};func (_cdbd *PdfReader )newPdfAnnotationProjectionFromDict (_cgab *_ged .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_acdc :=&PdfAnnotationProjection {};_cfd ,_bgc :=_cdbd .newPdfAnnotationMarkupFromDict (_cgab );if _bgc !=nil {return nil ,_bgc ;};_acdc .PdfAnnotationMarkup =_cfd ;return _acdc ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_bbed *PdfColorspaceCalRGB )ToPdfObject ()_ged .PdfObject {_beff :=&_ged .PdfObjectArray {};_beff .Append (_ged .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_cfebd :=_ged .MakeDict ();if _bbed .WhitePoint !=nil {_efeff :=_ged .MakeArray (_ged .MakeFloat (_bbed .WhitePoint [0]),_ged .MakeFloat (_bbed .WhitePoint [1]),_ged .MakeFloat (_bbed .WhitePoint [2]));_cfebd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_efeff );}else {_eg .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");};if _bbed .BlackPoint !=nil {_gbcb :=_ged .MakeArray (_ged .MakeFloat (_bbed .BlackPoint [0]),_ged .MakeFloat (_bbed .BlackPoint [1]),_ged .MakeFloat (_bbed .BlackPoint [2]));_cfebd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_gbcb );};if _bbed .Gamma !=nil {_bdeac :=_ged .MakeArray (_ged .MakeFloat (_bbed .Gamma [0]),_ged .MakeFloat (_bbed .Gamma [1]),_ged .MakeFloat (_bbed .Gamma [2]));_cfebd .Set ("\u0047\u0061\u006dm\u0061",_bdeac );};if _bbed .Matrix !=nil {_gdfg :=_ged .MakeArray (_ged .MakeFloat (_bbed .Matrix [0]),_ged .MakeFloat (_bbed .Matrix [1]),_ged .MakeFloat (_bbed .Matrix [2]),_ged .MakeFloat (_bbed .Matrix [3]),_ged .MakeFloat (_bbed .Matrix [4]),_ged .MakeFloat (_bbed .Matrix [5]),_ged .MakeFloat (_bbed .Matrix [6]),_ged .MakeFloat (_bbed .Matrix [7]),_ged .MakeFloat (_bbed .Matrix [8]));_cfebd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gdfg );};_beff .Append (_cfebd );if _bbed ._dbde !=nil {_bbed ._dbde .PdfObject =_beff ;return _bbed ._dbde ;};return _beff ;};func _gdad (_dfcg _ged .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_cgaf :=&PdfColorspaceDeviceNAttributes {};var _aced *_ged .PdfObjectDictionary ;if _cbfa ,_gfdd :=_dfcg .(*_ged .PdfIndirectObject );_gfdd {_cgaf ._eecb =_cbfa ;var _fdef bool ;_aced ,_fdef =_cbfa .PdfObject .(*_ged .PdfObjectDictionary );if !_fdef {_eg .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_fc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};}else if _dcfga ,_ggac :=_dfcg .(*_ged .PdfObjectDictionary );_ggac {_aced =_dcfga ;}else {_eg .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_fc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _efceg :=_aced .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_efceg !=nil {_ebgga ,_cdcf :=_ged .TraceToDirectObject (_efceg ).(*_ged .PdfObjectName );if !_cdcf {_eg .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");return nil ,_fc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_cgaf .Subtype =_ebgga ;};if _eabgb :=_aced .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_eabgb !=nil {_cgaf .Colorants =_eabgb ;};if _gged :=_aced .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");_gged !=nil {_cgaf .Process =_gged ;};if _affg :=_aced .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_affg !=nil {_cgaf .MixingHints =_affg ;};return _cgaf ,nil ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_effce *PdfFieldButton )IsRadio ()bool {return _effce .GetType ()==ButtonTypeRadio };

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;func _accd (_ddgb *_ged .PdfObjectDictionary )*VRI {_dgce ,_ :=_ged .GetString (_ddgb .Get ("\u0054\u0055"));_dfbe ,_ :=_ged .GetString (_ddgb .Get ("\u0054\u0053"));return &VRI {Cert :_afecc (_ddgb .Get ("\u0043\u0065\u0072\u0074")),OCSP :_afecc (_ddgb .Get ("\u004f\u0043\u0053\u0050")),CRL :_afecc (_ddgb .Get ("\u0043\u0052\u004c")),TU :_dgce ,TS :_dfbe };};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bfaa *PdfPageResourcesColorspaces )ToPdfObject ()_ged .PdfObject {_gaea :=_ged .MakeDict ();for _ ,_gbgdc :=range _bfaa .Names {_gaea .Set (_ged .PdfObjectName (_gbgdc ),_bfaa .Colorspaces [_gbgdc ].ToPdfObject ());};if _bfaa ._acdd !=nil {_bfaa ._acdd .PdfObject =_gaea ;return _bfaa ._acdd ;};return _gaea ;};func _gebcb (_agfdc *_ged .PdfObjectDictionary ,_gaeb *fontCommon )(*pdfFontType0 ,error ){_ebbda ,_bdaf :=_ged .GetArray (_agfdc .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_bdaf {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_gaeb );return nil ,_ged .ErrRangeError ;};if _ebbda .Len ()!=1{_eg .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_ebbda .Len ());return nil ,_ged .ErrRangeError ;};_cbdg ,_bdafc :=_adea (_ebbda .Get (0),false );if _bdafc !=nil {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_bdafc ,_gaeb );return nil ,_bdafc ;};_gcdcc :=_eedaa (_gaeb );_gcdcc .DescendantFont =_cbdg ;_cfebb ,_bdaf :=_ged .GetNameVal (_agfdc .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _bdaf {if _cfebb =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_cfebb =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_gcdcc ._ddga =_ffe .NewIdentityTextEncoder (_cfebb );}else if _ec .IsPredefinedCMap (_cfebb ){_gcdcc ._ffcaa ,_bdafc =_ec .LoadPredefinedCMap (_cfebb );if _bdafc !=nil {_eg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_cfebb ,_bdafc );};}else {_eg .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_cfebb );};};if _gagcc :=_cbdg .baseFields ()._ggdea ;_gagcc !=nil {if _gdgbc :=_gagcc .Name ();_gdgbc =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_gdgbc =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_gdgbc =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_gdgbc =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_gcdcc ._ddga =_ffe .NewCMapEncoder (_cfebb ,_gcdcc ._ffcaa ,_gagcc );};};return _gcdcc ,nil ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_aea .CharMetrics ;func (_gad *PdfReader )newPdfActionGotoEFromDict (_ddb *_ged .PdfObjectDictionary )(*PdfActionGoToE ,error ){_ggc ,_eab :=_dge (_ddb .Get ("\u0046"));if _eab !=nil {return nil ,_eab ;};return &PdfActionGoToE {D :_ddb .Get ("\u0044"),NewWindow :_ddb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_ddb .Get ("\u0054"),F :_ggc },nil ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_gdaa *PdfPageResources )AddExtGState (gsName _ged .PdfObjectName ,gsDict _ged .PdfObject )error {if _gdaa .ExtGState ==nil {_gdaa .ExtGState =_ged .MakeDict ();};_ffcb :=_gdaa .ExtGState ;_cagbce ,_dbgff :=_ged .TraceToDirectObject (_ffcb ).(*_ged .PdfObjectDictionary );if !_dbgff {_eg .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_ffcb ,_ged .TraceToDirectObject (_ffcb ));return _ged .ErrTypeError ;};_cagbce .Set (gsName ,gsDict );return nil ;};func _aaef (_eafdc *_ged .PdfObjectDictionary )(*PdfShadingType2 ,error ){_cagd :=PdfShadingType2 {};_bfggf :=_eafdc .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _bfggf ==nil {_eg .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;};_bcecb ,_fdgfag :=_bfggf .(*_ged .PdfObjectArray );if !_fdgfag {_eg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bfggf );return nil ,_fc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _bcecb .Len ()!=4{_eg .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bcecb .Len ());return nil ,_fc .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_cagd .Coords =_bcecb ;if _edccd :=_eafdc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_edccd !=nil {_edccd =_ged .TraceToDirectObject (_edccd );_ededgd ,_bbdge :=_edccd .(*_ged .PdfObjectArray );if !_bbdge {_eg .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_edccd );return nil ,_fc .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cagd .Domain =_ededgd ;};_bfggf =_eafdc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bfggf ==nil {_eg .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_cagd .Function =[]PdfFunction {};if _gbdca ,_ffgc :=_bfggf .(*_ged .PdfObjectArray );_ffgc {for _ ,_egdbc :=range _gbdca .Elements (){_cegcc ,_agge :=_gecdb (_egdbc );if _agge !=nil {_eg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_agge );return nil ,_agge ;};_cagd .Function =append (_cagd .Function ,_cegcc );};}else {_afdfb ,_gedgg :=_gecdb (_bfggf );if _gedgg !=nil {_eg .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gedgg );return nil ,_gedgg ;};_cagd .Function =append (_cagd .Function ,_afdfb );};if _gddcc :=_eafdc .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_gddcc !=nil {_gddcc =_ged .TraceToDirectObject (_gddcc );_aegaa ,_dcfcbd :=_gddcc .(*_ged .PdfObjectArray );if !_dcfcbd {_eg .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gddcc );return nil ,_ged .ErrTypeError ;};if _aegaa .Len ()!=2{_eg .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_aegaa .Len ());return nil ,ErrInvalidAttribute ;};_cagd .Extend =_aegaa ;};return &_cagd ,nil ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// ColorFromFloats returns a new PdfColor based on input color components.
func (_fgcag *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_fgcag .GetNumComponents (){return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_febbg ,_ecdb :=_fgcag .TintTransform .Evaluate (vals );if _ecdb !=nil {return nil ,_ecdb ;};_ebfa ,_ecdb :=_fgcag .AlternateSpace .ColorFromFloats (_febbg );if _ecdb !=nil {return nil ,_ecdb ;};return _ebfa ,nil ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_decac *PdfReader )GetOCProperties ()(_ged .PdfObject ,error ){_acgbaf :=_decac ._fffe ;_dgdbg :=_acgbaf .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_dgdbg =_ged .ResolveReference (_dgdbg );if !_decac ._dbfdg {_abfbc :=_decac .traverseObjectData (_dgdbg );if _abfbc !=nil {return nil ,_abfbc ;};};return _dgdbg ,nil ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_bbgg *PdfPattern )IsTiling ()bool {return _bbgg .PatternType ==1};func (_bcagg *PdfShading )getShadingDict ()(*_ged .PdfObjectDictionary ,error ){_ddda :=_bcagg ._gfaace ;if _eeaae ,_fgfe :=_ddda .(*_ged .PdfIndirectObject );_fgfe {_fgfef ,_abddd :=_eeaae .PdfObject .(*_ged .PdfObjectDictionary );if !_abddd {return nil ,_ged .ErrTypeError ;};return _fgfef ,nil ;}else if _cfcd ,_gbdda :=_ddda .(*_ged .PdfObjectStream );_gbdda {return _cfcd .PdfObjectDictionary ,nil ;}else if _acfd ,_cbgdb :=_ddda .(*_ged .PdfObjectDictionary );_cbgdb {return _acfd ,nil ;}else {_eg .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_ged .ErrTypeError ;};};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_gbga *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_ged .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fc .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffeg ,_gfbd :=_ged .GetNumbersAsFloat (objects );if _gfbd !=nil {return nil ,_gfbd ;};return _gbga .ColorFromFloats (_ffeg );};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_egc :=&PdfColorspaceCalRGB {};_egc .BlackPoint =[]float64 {0.0,0.0,0.0};_egc .Gamma =[]float64 {1.0,1.0,1.0};_egc .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _egc ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_cgdba *PdfReader )GetTrailer ()(*_ged .PdfObjectDictionary ,error ){_eeedg :=_cgdba ._ebea .GetTrailer ();if _eeedg ==nil {return nil ,_fc .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _eeedg ,nil ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _gc .Permissions ;Algorithm EncryptionAlgorithm ;};

// Val returns the value of the color.
func (_bddf *PdfColorCalGray )Val ()float64 {return float64 (*_bddf )};

// SetLocation sets the `Location` field of the signature.
func (_agdfg *PdfSignature )SetLocation (location string ){_agdfg .Location =_ged .MakeString (location )};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_cgae *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_fc .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");};_eaed ,_dggc :=_daf .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._fgaab ,img ._caaed );if _dggc !=nil {return img ,_dggc ;};_bedca ,_dggc :=_daf .NRGBAConverter .Convert (_eaed );if _dggc !=nil {return img ,_dggc ;};_abba :=_dfcbe (_bedca .Base ());_eg .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_eg .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_eg .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_abba .Data );_eg .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_abba );return _abba ,nil ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_ffgf *PdfPage )error ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_beag ,_aecdg :=_bbea (basefont );if _aecdg !=nil {return nil ,_aecdg ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_beag ._efda =_ffe .NewWinAnsiEncoder ();};return &PdfFont {_gfdbg :&_beag },nil ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_gec :=NewPdfAction ();_gba :=&PdfActionHide {};_gba .PdfAction =_gec ;_gec .SetContext (_gba );return _gba ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_bcba *PdfColorspaceICCBased )ToPdfObject ()_ged .PdfObject {_ecagb :=&_ged .PdfObjectArray {};_ecagb .Append (_ged .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _cacaa *_ged .PdfObjectStream ;if _bcba ._dadf !=nil {_cacaa =_bcba ._dadf ;}else {_cacaa =&_ged .PdfObjectStream {};};_gcff :=_ged .MakeDict ();_gcff .Set ("\u004e",_ged .MakeInteger (int64 (_bcba .N )));if _bcba .Alternate !=nil {_gcff .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_bcba .Alternate .ToPdfObject ());};if _bcba .Metadata !=nil {_gcff .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bcba .Metadata );};if _bcba .Range !=nil {var _gegga []_ged .PdfObject ;for _ ,_dfaa :=range _bcba .Range {_gegga =append (_gegga ,_ged .MakeFloat (_dfaa ));};_gcff .Set ("\u0052\u0061\u006eg\u0065",_ged .MakeArray (_gegga ...));};_gcff .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_ged .MakeInteger (int64 (len (_bcba .Data ))));_cacaa .Stream =_bcba .Data ;_cacaa .PdfObjectDictionary =_gcff ;_ecagb .Append (_cacaa );if _bcba ._feab !=nil {_bcba ._feab .PdfObject =_ecagb ;return _bcba ._feab ;};return _ecagb ;};

// AllFields returns a flattened list of all fields in the form.
func (_agbg *PdfAcroForm )AllFields ()[]*PdfField {if _agbg ==nil {return nil ;};var _dfged []*PdfField ;if _agbg .Fields !=nil {for _ ,_cabfg :=range *_agbg .Fields {_dfged =append (_dfged ,_degbea (_cabfg )...);};};return _dfged ;};func (_fadbe *PdfReader )newPdfAcroFormFromDict (_fefed *_ged .PdfIndirectObject ,_fcbc *_ged .PdfObjectDictionary )(*PdfAcroForm ,error ){_eggd :=NewPdfAcroForm ();if _fefed !=nil {_eggd ._ddbae =_fefed ;_fefed .PdfObject =_ged .MakeDict ();};if _bgbef :=_fcbc .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_bgbef !=nil {_becfe ,_badce :=_ged .GetArray (_bgbef );if !_badce {return nil ,_d .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_bgbef );};var _egea []*PdfField ;for _ ,_deff :=range _becfe .Elements (){_fddbf ,_aceeg :=_ged .GetIndirect (_deff );if !_aceeg {if _ ,_dgceb :=_deff .(*_ged .PdfObjectNull );_dgceb {_eg .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");continue ;};_eg .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_deff );return nil ,_d .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ffecg ,_dgcbf :=_fadbe .newPdfFieldFromIndirectObject (_fddbf ,nil );if _dgcbf !=nil {return nil ,_dgcbf ;};_eg .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_ffecg );_egea =append (_egea ,_ffecg );};_eggd .Fields =&_egea ;};if _cbec :=_fcbc .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_cbec !=nil {_abfdc ,_cbgc :=_ged .GetBool (_cbec );if _cbgc {_eggd .NeedAppearances =_abfdc ;}else {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_cbec );};};if _fdca :=_fcbc .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_fdca !=nil {_cfee ,_ebccf :=_ged .GetInt (_fdca );if _ebccf {_eggd .SigFlags =_cfee ;}else {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fdca );};};if _dcgg :=_fcbc .Get ("\u0043\u004f");_dcgg !=nil {_adfcg ,_gdgbe :=_ged .GetArray (_dcgg );if _gdgbe {_eggd .CO =_adfcg ;}else {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_dcgg );};};if _ecfaf :=_fcbc .Get ("\u0044\u0052");_ecfaf !=nil {if _ebbegb ,_fcegb :=_ged .GetDict (_ecfaf );_fcegb {_bbfdf ,_gfdae :=NewPdfPageResourcesFromDict (_ebbegb );if _gfdae !=nil {_eg .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_gfdae );return nil ,_gfdae ;};_eggd .DR =_bbfdf ;}else {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_ecfaf );};};if _fbfda :=_fcbc .Get ("\u0044\u0041");_fbfda !=nil {_efee ,_gbef :=_ged .GetString (_fbfda );if _gbef {_eggd .DA =_efee ;}else {_eg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fbfda );};};if _cbbb :=_fcbc .Get ("\u0051");_cbbb !=nil {_bdcg ,_fcbcg :=_ged .GetInt (_cbbb );if _fcbcg {_eggd .Q =_bdcg ;}else {_eg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_cbbb );};};if _fdgda :=_fcbc .Get ("\u0058\u0046\u0041");_fdgda !=nil {_eggd .XFA =_fdgda ;};return _eggd ,nil ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_aagf *PdfFieldSignature )ToPdfObject ()_ged .PdfObject {if _aagf .PdfAnnotationWidget !=nil {_aagf .PdfAnnotationWidget .ToPdfObject ();};_aagf .PdfField .ToPdfObject ();_gegab :=_aagf ._bagb ;_aeed :=_gegab .PdfObject .(*_ged .PdfObjectDictionary );_aeed .SetIfNotNil ("\u0046\u0054",_ged .MakeName ("\u0053\u0069\u0067"));_aeed .SetIfNotNil ("\u004c\u006f\u0063\u006b",_aagf .Lock );_aeed .SetIfNotNil ("\u0053\u0056",_aagf .SV );if _aagf .V !=nil {_aeed .SetIfNotNil ("\u0056",_aagf .V .ToPdfObject ());};return _gegab ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_efefc _aa .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_fccba _faf .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_accdc _faf .Image )(*Image ,error );

// Compress an image.
Compress (_ccece *Image ,_daggf int64 )(*Image ,error );};const (_faaac =0x00001;_ddbg =0x00002;_ffcc =0x00004;_fcff =0x00008;_facced =0x00020;_fdea =0x00040;_fbce =0x10000;_ecdbc =0x20000;_agea =0x40000;);

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_fcad []byte ;_fbde []uint32 ;_ggef *_ged .PdfObjectStream ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_ag :=NewPdfAction ();_gbe :=&PdfActionNamed {};_gbe .PdfAction =_ag ;_ag .SetContext (_gbe );return _gbe ;};func (_ggbfa *PdfReader )lookupPageByObject (_eaedd _ged .PdfObject )(*PdfPage ,error ){return nil ,_fc .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func _agbf (_bagca *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_bagca }};