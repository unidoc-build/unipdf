//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_bb "bufio";_add "bytes";_df "crypto/sha1";_ad "crypto/x509";_eb "encoding/binary";_a "encoding/hex";_ed "errors";_g "fmt";_ecgb "github.com/unidoc/pkcs7";_de "github.com/unidoc/unipdf/v3/common";_dce "github.com/unidoc/unipdf/v3/common/license";_aec "github.com/unidoc/unipdf/v3/core";_ecb "github.com/unidoc/unipdf/v3/core/security";_dag "github.com/unidoc/unipdf/v3/core/security/crypt";_fa "github.com/unidoc/unipdf/v3/internal/cmap";_be "github.com/unidoc/unipdf/v3/internal/imageutil";_bdd "github.com/unidoc/unipdf/v3/internal/sampling";_cad "github.com/unidoc/unipdf/v3/internal/textencoding";_ge "github.com/unidoc/unipdf/v3/model/internal/fonts";_dfc "github.com/unidoc/unipdf/v3/model/sigutil";_ae "github.com/unidoc/unipdf/v3/ps";_gge "github.com/unidoc/unitype";_bbg "golang.org/x/xerrors";_dfd "image";_f "image/color";_ "image/gif";_ "image/png";_fb "io";_ecg "io/ioutil";_dc "math";_ec "math/rand";_gg "os";_dff "regexp";_dd "sort";_da "strconv";_ee "strings";_b "sync";_d "time";_ca "unicode";_bd "unicode/utf8";);

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_cbc :=&PdfAnnotation {};_cbc ._bcce =_aec .MakeIndirectObject (_aec .MakeDict ());return _cbc ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_egab *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// BaseFont returns the font's "BaseFont" field.
func (_eaec *PdfFont )BaseFont ()string {return _eaec .baseFields ()._ecbb };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_cbad *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_aec .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acecf ,_fcff :=_aec .GetNumbersAsFloat (objects );if _fcff !=nil {return nil ,_fcff ;};return _cbad .ColorFromFloats (_acecf );};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_ccgc *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_dagc ,_dcabba :=color .(*PdfColorDeviceCMYK );if !_dcabba {_de .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_acbgb :=_dagc .C ();_fdfa :=_dagc .M ();_gaca :=_dagc .Y ();_cgfd :=_dagc .K ();_acbgb =_acbgb *(1-_cgfd )+_cgfd ;_fdfa =_fdfa *(1-_cgfd )+_cgfd ;_gaca =_gaca *(1-_cgfd )+_cgfd ;_fede :=1-_acbgb ;_dbcbf :=1-_fdfa ;_ddbg :=1-_gaca ;return NewPdfColorDeviceRGB (_fede ,_dbcbf ,_ddbg ),nil ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_bcffc *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _bcffc ._cfdbe .(*PdfShadingPattern );};

// SetLocation sets the `Location` field of the signature.
func (_aeag *PdfSignature )SetLocation (location string ){_aeag .Location =_aec .MakeString (location )};func _efgf (_dagff _aec .PdfObject ){_de .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_dagff ,_dagff .String ());if _badebd ,_dfggf :=_dagff .(*_aec .PdfObjectStream );_dfggf {_effdg ,_ggafd :=_aec .DecodeStream (_badebd );if _ggafd !=nil {_de .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_ggafd );return ;};_de .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_effdg );}else if _caffd ,_ccgec :=_dagff .(*_aec .PdfIndirectObject );_ccgec {_de .Log .Debug ("\u0025\u0054\u0020%\u0076",_caffd .PdfObject ,_caffd .PdfObject );_de .Log .Debug ("\u0025\u0073",_caffd .PdfObject .String ());};};func _baggb (_ccbga _aec .PdfObject )(*PdfPattern ,error ){_cbeff :=&PdfPattern {};var _dgae *_aec .PdfObjectDictionary ;if _dbbce ,_ffbcff :=_aec .GetIndirect (_ccbga );_ffbcff {_cbeff ._aabdf =_dbbce ;_feeg ,_gbgfd :=_dbbce .PdfObject .(*_aec .PdfObjectDictionary );if !_gbgfd {_de .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_dbbce .PdfObject );return nil ,_aec .ErrTypeError ;};_dgae =_feeg ;}else if _aabc ,_cegac :=_aec .GetStream (_ccbga );_cegac {_cbeff ._aabdf =_aabc ;_dgae =_aabc .PdfObjectDictionary ;}else {_de .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_ccbga );return nil ,_aec .ErrTypeError ;};_fbfaa :=_dgae .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _fbfaa ==nil {_de .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");return nil ,ErrRequiredAttributeMissing ;};_fcec ,_gccc :=_fbfaa .(*_aec .PdfObjectInteger );if !_gccc {_de .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_fbfaa );return nil ,_aec .ErrTypeError ;};if *_fcec !=1&&*_fcec !=2{_de .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_fcec );return nil ,_aec .ErrRangeError ;};_cbeff .PatternType =int64 (*_fcec );switch *_fcec {case 1:_adcfa ,_abcb :=_eddfg (_dgae );if _abcb !=nil {return nil ,_abcb ;};_adcfa .PdfPattern =_cbeff ;_cbeff ._cfdbe =_adcfa ;return _cbeff ,nil ;case 2:_adee ,_ffgge :=_beccf (_dgae );if _ffgge !=nil {return nil ,_ffgge ;};_adee .PdfPattern =_cbeff ;_cbeff ._cfdbe =_adee ;return _cbeff ,nil ;};return nil ,_ed .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_egag *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _dabdf []*PdfField ;if _egag .AcroForm !=nil {_dabdf =_egag .AcroForm .AllFields ();};_feagc :=make (map[*PdfField ]struct{},len (_dabdf ));for _ ,_dadgc :=range _dabdf {_feagc [_dadgc ]=struct{}{};};for _ ,_becfg :=range _egag .PageList {_accg ,_aedbb :=_becfg .GetAnnotations ();if _aedbb !=nil {return false ,_aedbb ;};for _ ,_fbdee :=range _accg {_fabbd ,_fcbaa :=_fbdee .GetContext ().(*PdfAnnotationWidget );if !_fcbaa {continue ;};_cbbbc :=_fabbd .Field ();if _cbbbc ==nil {return true ,nil ;};if _ ,_bfgbgc :=_feagc [_cbbbc ];!_bfgbgc {return true ,nil ;};};};return false ,nil ;};func (_caeaa *PdfReader )newPdfFieldFromIndirectObject (_dabd *_aec .PdfIndirectObject ,_ggacd *PdfField )(*PdfField ,error ){if _gffg ,_becbc :=_caeaa ._bgeab .GetModelFromPrimitive (_dabd ).(*PdfField );_becbc {return _gffg ,nil ;};_dgbdb ,_effgf :=_aec .GetDict (_dabd );if !_effgf {return nil ,_g .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_dbbe :=NewPdfField ();_dbbe ._cfaef =_dabd ;_dbbe ._cfaef .PdfObject =_dgbdb ;if _ccecg ,_gceab :=_aec .GetName (_dgbdb .Get ("\u0046\u0054"));_gceab {_dbbe .FT =_ccecg ;};if _ggacd !=nil {_dbbe .Parent =_ggacd ;};_dbbe .T ,_ =_dgbdb .Get ("\u0054").(*_aec .PdfObjectString );_dbbe .TU ,_ =_dgbdb .Get ("\u0054\u0055").(*_aec .PdfObjectString );_dbbe .TM ,_ =_dgbdb .Get ("\u0054\u004d").(*_aec .PdfObjectString );_dbbe .Ff ,_ =_dgbdb .Get ("\u0046\u0066").(*_aec .PdfObjectInteger );_dbbe .V =_dgbdb .Get ("\u0056");_dbbe .DV =_dgbdb .Get ("\u0044\u0056");_dbbe .AA =_dgbdb .Get ("\u0041\u0041");_dfdbd :=_dbbe .FT ;if _dfdbd ==nil &&_ggacd !=nil {_dfdbd =_ggacd .FT ;};if _dfdbd !=nil {switch *_dfdbd {case "\u0054\u0078":_ebffa ,_eadb :=_agbf (_dgbdb );if _eadb !=nil {return nil ,_eadb ;};_ebffa .PdfField =_dbbe ;_dbbe ._ccegg =_ebffa ;case "\u0043\u0068":_eedaa ,_ageg :=_ceeac (_dgbdb );if _ageg !=nil {return nil ,_ageg ;};_eedaa .PdfField =_dbbe ;_dbbe ._ccegg =_eedaa ;case "\u0042\u0074\u006e":_cada ,_bbcb :=_bfaf (_dgbdb );if _bbcb !=nil {return nil ,_bbcb ;};_cada .PdfField =_dbbe ;_dbbe ._ccegg =_cada ;case "\u0053\u0069\u0067":_ccbde ,_dfag :=_caeaa .newPdfFieldSignatureFromDict (_dgbdb );if _dfag !=nil {return nil ,_dfag ;};_ccbde .PdfField =_dbbe ;_dbbe ._ccegg =_ccbde ;default:_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_dbbe .FT );return nil ,_ed .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _fca ,_bace :=_aec .GetName (_dgbdb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_bace {if *_fca =="\u0057\u0069\u0064\u0067\u0065\u0074"{_gbgcc ,_eceac :=_caeaa .newPdfAnnotationFromIndirectObject (_dabd );if _eceac !=nil {return nil ,_eceac ;};_debae ,_cgea :=_gbgcc .GetContext ().(*PdfAnnotationWidget );if !_cgea {return nil ,_ed .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_debae ._ebff =_dbbe ;_debae .Parent =_dbbe ._cfaef ;_dbbe .Annotations =append (_dbbe .Annotations ,_debae );return _dbbe ,nil ;};};_efac :=true ;if _gfcef ,_egdb :=_aec .GetArray (_dgbdb .Get ("\u004b\u0069\u0064\u0073"));_egdb {_ebbg :=make ([]*_aec .PdfIndirectObject ,0,_gfcef .Len ());for _ ,_cead :=range _gfcef .Elements (){_fafe ,_cccb :=_aec .GetIndirect (_cead );if !_cccb {_aadbe ,_gcfd :=_aec .GetStream (_cead );if _gcfd &&_aadbe .PdfObjectDictionary !=nil {_dcege ,_dadf :=_aec .GetNameVal (_aadbe .Get ("\u0054\u0079\u0070\u0065"));if _dadf &&_dcege =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_de .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");continue ;};};return nil ,_ed .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_aedbg ,_ccce :=_aec .GetDict (_fafe );if !_ccce {return nil ,ErrTypeCheck ;};if _efac {_efac =!_cfgf (_aedbg );};_ebbg =append (_ebbg ,_fafe );};for _ ,_fgce :=range _ebbg {if _efac {_befg ,_dadga :=_caeaa .newPdfAnnotationFromIndirectObject (_fgce );if _dadga !=nil {_de .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_dadga );return nil ,_dadga ;};_cgffb ,_gedaa :=_befg ._debf .(*PdfAnnotationWidget );if !_gedaa {return nil ,ErrTypeCheck ;};_cgffb ._ebff =_dbbe ;_dbbe .Annotations =append (_dbbe .Annotations ,_cgffb );}else {_fcbfa ,_fbbac :=_caeaa .newPdfFieldFromIndirectObject (_fgce ,_dbbe );if _fbbac !=nil {_de .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_fbbac );return nil ,_fbbac ;};_dbbe .Kids =append (_dbbe .Kids ,_fcbfa );};};};return _dbbe ,nil ;};func _ddfdc (_bagga _aec .PdfObject )(string ,error ){_bagga =_aec .TraceToDirectObject (_bagga );switch _daac :=_bagga .(type ){case *_aec .PdfObjectString :return _daac .Str (),nil ;case *_aec .PdfObjectStream :_gddad ,_aefe :=_aec .DecodeStream (_daac );if _aefe !=nil {return "",_aefe ;};return string (_gddad ),nil ;};return "",_g .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_bagga );};func _dbbb (_ecacd _aec .PdfObject )(map[_cad .CharCode ]float64 ,error ){if _ecacd ==nil {return nil ,nil ;};_fgcg ,_cgbe :=_aec .GetArray (_ecacd );if !_cgbe {return nil ,nil ;};_gdbeaf :=map[_cad .CharCode ]float64 {};_acc :=_fgcg .Len ();for _baefed :=0;_baefed < _acc -1;_baefed ++{_fbgbc :=_aec .TraceToDirectObject (_fgcg .Get (_baefed ));_bdgf ,_bfgce :=_aec .GetIntVal (_fbgbc );if !_bfgce {return nil ,_g .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_baefed ,_fbgbc );};_baefed ++;if _baefed > _acc -1{return nil ,_g .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_fgcg );};_aagb :=_aec .TraceToDirectObject (_fgcg .Get (_baefed ));switch _aagb .(type ){case *_aec .PdfObjectArray :_dcef ,_ :=_aec .GetArray (_aagb );if _cgce ,_fgbec :=_dcef .ToFloat64Array ();_fgbec ==nil {for _cdbca :=0;_cdbca < len (_cgce );_cdbca ++{_gdbeaf [_cad .CharCode (_bdgf +_cdbca )]=_cgce [_cdbca ];};}else {return nil ,_g .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_baefed ,_aagb );};case *_aec .PdfObjectInteger :_faae ,_aeegc :=_aec .GetIntVal (_aagb );if !_aeegc {return nil ,_g .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_baefed ,_aagb );};_baefed ++;if _baefed > _acc -1{return nil ,_g .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_fgcg );};_gdgd :=_fgcg .Get (_baefed );_bdegg ,_ggdgd :=_aec .GetNumberAsFloat (_gdgd );if _ggdgd !=nil {return nil ,_g .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_baefed ,_gdgd );};for _daeda :=_bdgf ;_daeda <=_faae ;_daeda ++{_gdbeaf [_cad .CharCode (_daeda )]=_bdegg ;};default:return nil ,_g .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_baefed ,_aagb );};};return _gdbeaf ,nil ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_edaf *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_adfa :=_bdd .NewReader (img .getBase ());_gcac :=_be .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._aaaa ,img ._dbdfe );_fefe :=_bdd .NewWriter (_gcac );_edgb :=_dc .Pow (2,float64 (img .BitsPerComponent ))-1;_fceeg :=_edaf .GetNumComponents ();_gaeed :=make ([]uint32 ,_fceeg );_fcce :=make ([]float64 ,_fceeg );for {_aedg :=_adfa .ReadSamples (_gaeed );if _aedg ==_fb .EOF {break ;}else if _aedg !=nil {return img ,_aedg ;};for _aaad :=0;_aaad < _fceeg ;_aaad ++{_ecea :=float64 (_gaeed [_aaad ])/_edgb ;_fcce [_aaad ]=_ecea ;};_eddgd ,_aedg :=_edaf .TintTransform .Evaluate (_fcce );if _aedg !=nil {return img ,_aedg ;};for _ ,_aeecf :=range _eddgd {_aeecf =_dc .Min (_dc .Max (0,_aeecf ),1.0);if _aedg =_fefe .WriteSample (uint32 (_aeecf *_edgb ));_aedg !=nil {return img ,_aedg ;};};};return _edaf .AlternateSpace .ImageToRGB (_ffefc (&_gcac ));};

// HasExtGState checks if ExtGState name is available.
func (_fffe *PdfPage )HasExtGState (name _aec .PdfObjectName )bool {if _fffe .Resources ==nil {return false ;};if _fffe .Resources .ExtGState ==nil {return false ;};_agbg ,_eacbf :=_aec .TraceToDirectObject (_fffe .Resources .ExtGState ).(*_aec .PdfObjectDictionary );if !_eacbf {_de .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_aec .TraceToDirectObject (_fffe .Resources .ExtGState ));return false ;};_gbcgg :=_agbg .Get (name );_bbdge :=_gbcgg !=nil ;return _bbdge ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_acee :=NewPdfAnnotation ();_af :=&PdfAnnotationPolyLine {};_af .PdfAnnotation =_acee ;_af .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_acee .SetContext (_af );return _af ;};func (_dbb *PdfReader )newPdfActionMovieFromDict (_cee *_aec .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_cee .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_cee .Get ("\u0054"),Operation :_cee .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_facbe *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _ed .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");};_cbcc :=field .V ;if _cbcc ==nil {return _ed .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_efee :=pageNum -1;if _efee < 0||_efee > len (_facbe ._fbbe )-1{return _g .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_agfe :=_facbe .Reader .PageList [_efee ];field .P =_agfe .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_aec .MakeString (_g .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_agfe .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _facbe ._bedb ==_facbe ._aea .AcroForm {_facbe ._bedb =_facbe .Reader .AcroForm ;};_cfgba :=_facbe ._bedb ;if _cfgba ==nil {_cfgba =NewPdfAcroForm ();};_cfgba .SigFlags =_aec .MakeInteger (3);_dabaf :=append (_cfgba .AllFields (),field .PdfField );_cfgba .Fields =&_dabaf ;_facbe .ReplaceAcroForm (_cfgba );_facbe .UpdatePage (_agfe );_facbe ._fbbe [_efee ]=_agfe ;return nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ggcg *PdfColorspaceSpecialSeparation )ToPdfObject ()_aec .PdfObject {_edda :=_aec .MakeArray (_aec .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_edda .Append (_ggcg .ColorantName );_edda .Append (_ggcg .AlternateSpace .ToPdfObject ());_edda .Append (_ggcg .TintTransform .ToPdfObject ());if _ggcg ._agea !=nil {_ggcg ._agea .PdfObject =_edda ;return _ggcg ._agea ;};return _edda ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_fbgb *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_fbgb .HiVal )};};func _bgfe (_ggfg *_aec .PdfIndirectObject ,_acaff *_aec .PdfObjectDictionary )(*DSS ,error ){if _ggfg ==nil {_ggfg =_aec .MakeIndirectObject (nil );};_ggfg .PdfObject =_aec .MakeDict ();_eccg :=map[string ]*VRI {};if _bceeg ,_fcgd :=_aec .GetDict (_acaff .Get ("\u0056\u0052\u0049"));_fcgd {for _ ,_gbcda :=range _bceeg .Keys (){if _cddd ,_ecgf :=_aec .GetDict (_bceeg .Get (_gbcda ));_ecgf {_eccg [_ee .ToUpper (_gbcda .String ())]=_aecea (_cddd );};};};return &DSS {Certs :_ddbag (_acaff .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_ddbag (_acaff .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_ddbag (_acaff .Get ("\u0043\u0052\u004c\u0073")),VRI :_eccg ,_gcdf :_ggfg },nil ;};var _ _aec .PdfObject =&pdfSignDictionary {};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _fb .ReadSeeker )(*PdfFont ,error ){_ecafff ,_debde :=_ecg .ReadAll (r );if _debde !=nil {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_debde );return nil ,_debde ;};_cacd ,_debde :=_ge .TtfParse (_add .NewReader (_ecafff ));if _debde !=nil {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_debde );return nil ,_debde ;};_dfce :=&pdfCIDFontType2 {fontCommon :fontCommon {_daed :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_aec .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};_adfg :=make ([]rune ,0,len (_cacd .Chars ));for _aggd :=range _cacd .Chars {_adfg =append (_adfg ,_aggd );};_dd .Slice (_adfg ,func (_feab ,_abbf int )bool {return _adfg [_feab ]< _adfg [_abbf ]});_fcdec :=1000.0/float64 (_cacd .UnitsPerEm );if len (_cacd .Widths )<=0{return nil ,_ed .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_aadd :=_fcdec *float64 (_cacd .Widths [0]);_bedfg :=make (map[rune ]int );for _ ,_edec :=range _adfg {_fbfc :=_cacd .Chars [_edec ];_afaac :=_fcdec *float64 (_cacd .Widths [_fbfc ]);_bedfg [_edec ]=int (_afaac );};_dfce ._ffgec =_bedfg ;_dfce .DW =_aec .MakeInteger (int64 (_aadd ));_gdcc :=_cgcg (_adfg ,_bedfg ,_cacd .Chars );_dfce .W =_aec .MakeIndirectObject (_gdcc );_eabfgc :=_aec .MakeDict ();_eabfgc .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_aec .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_eabfgc .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_aec .MakeString ("\u0041\u0064\u006fb\u0065"));_eabfgc .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_aec .MakeInteger (0));_dfce .CIDSystemInfo =_eabfgc ;_bbeaf :=&PdfFontDescriptor {FontName :_aec .MakeName (_cacd .PostScriptName ),Ascent :_aec .MakeFloat (_fcdec *float64 (_cacd .TypoAscender )),Descent :_aec .MakeFloat (_fcdec *float64 (_cacd .TypoDescender )),CapHeight :_aec .MakeFloat (_fcdec *float64 (_cacd .CapHeight )),FontBBox :_aec .MakeArrayFromFloats ([]float64 {_fcdec *float64 (_cacd .Xmin ),_fcdec *float64 (_cacd .Ymin ),_fcdec *float64 (_cacd .Xmax ),_fcdec *float64 (_cacd .Ymax )}),ItalicAngle :_aec .MakeFloat (_cacd .ItalicAngle ),MissingWidth :_aec .MakeFloat (_fcdec *float64 (_cacd .Widths [0]))};_gfbgb ,_debde :=_aec .MakeStream (_ecafff ,_aec .NewFlateEncoder ());if _debde !=nil {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_debde );return nil ,_debde ;};_gfbgb .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_aec .MakeInteger (int64 (len (_ecafff ))));_bbeaf .FontFile2 =_gfbgb ;if _cacd .Bold {_bbeaf .StemV =_aec .MakeInteger (120);}else {_bbeaf .StemV =_aec .MakeInteger (70);};_aeadc :=_fdce ;if _cacd .IsFixedPitch {_aeadc |=_gddd ;};if _cacd .ItalicAngle !=0{_aeadc |=_fccf ;};_bbeaf .Flags =_aec .MakeInteger (int64 (_aeadc ));_dfce ._ecbb =_cacd .PostScriptName ;_dfce ._dabc =_bbeaf ;_bgded :=pdfFontType0 {fontCommon :fontCommon {_daed :"\u0054\u0079\u0070e\u0030",_ecbb :_cacd .PostScriptName },DescendantFont :&PdfFont {_gaga :_dfce },Encoding :_aec .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_cdab :_cacd .NewEncoder ()};if len (_cacd .Chars )> 0{_adccd :=make (map[_fa .CharCode ]rune ,len (_cacd .Chars ));for _bgfbc ,_dabdg :=range _cacd .Chars {_bdfed :=_fa .CharCode (_dabdg );if _dcfbc ,_ebga :=_adccd [_bdfed ];!_ebga ||(_ebga &&_dcfbc > _bgfbc ){_adccd [_bdfed ]=_bgfbc ;};};_bgded ._bgae =_fa .NewToUnicodeCMap (_adccd );};_ccca :=PdfFont {_gaga :&_bgded };return &_ccca ,nil ;};func (_cfee PdfFont )actualFont ()pdfFont {if _cfee ._gaga ==nil {_de .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cfee );};return _cfee ._gaga ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_dec :=NewPdfAnnotation ();_dece :=&PdfAnnotationPopup {};_dece .PdfAnnotation =_dec ;_dec .SetContext (_dece );return _dece ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_agfeb *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_deef :=func (_acea float64 )float64 {if _acea >=6.0/29{return _acea *_acea *_acea ;};return 108.0/841*(_acea -4/29);};_dgff ,_beeag :=color .(*PdfColorLab );if !_beeag {_de .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_dgff .L ();AStar :=_dgff .A ();BStar :=_dgff .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;X :=_agfeb .WhitePoint [0]*_deef (L );Y :=_agfeb .WhitePoint [1]*_deef (M );Z :=_agfeb .WhitePoint [2]*_deef (N );_bbfd :=3.240479*X +-1.537150*Y +-0.498535*Z ;_eggd :=-0.969256*X +1.875992*Y +0.041556*Z ;_gdef :=0.055648*X +-0.204043*Y +1.057311*Z ;_bbfd =_dc .Min (_dc .Max (_bbfd ,0),1.0);_eggd =_dc .Min (_dc .Max (_eggd ,0),1.0);_gdef =_dc .Min (_dc .Max (_gdef ,0),1.0);return NewPdfColorDeviceRGB (_bbfd ,_eggd ,_gdef ),nil ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_ecfcf *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _dcede []*PdfOutlineTreeNode ;var _gefag []string ;var _fgefb func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_fgefb =func (_gbegc *PdfOutlineTreeNode ,_afge *[]*PdfOutlineTreeNode ,_abcg *[]string ,_becg int ){if _gbegc ==nil {return ;};if _gbegc ._gdagc ==nil {_de .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_bfefg ,_gbdc :=_gbegc ._gdagc .(*PdfOutlineItem );if _gbdc {*_afge =append (*_afge ,&_bfefg .PdfOutlineTreeNode );_bfefd :=_ee .Repeat ("\u0020",_becg *2)+_bfefg .Title .Decoded ();*_abcg =append (*_abcg ,_bfefd );};if _gbegc .First !=nil {_eaeg :=_ee .Repeat ("\u0020",_becg *2)+"\u002b";*_abcg =append (*_abcg ,_eaeg );_fgefb (_gbegc .First ,_afge ,_abcg ,_becg +1);};if _gbdc &&_bfefg .Next !=nil {_fgefb (_bfefg .Next ,_afge ,_abcg ,_becg );};};_fgefb (_ecfcf ._afaea ,&_dcede ,&_gefag ,0);return _dcede ,_gefag ,nil ;};func (_fgaac *PdfReader )newPdfFieldSignatureFromDict (_fbbce *_aec .PdfObjectDictionary )(*PdfFieldSignature ,error ){_acdd :=&PdfFieldSignature {};_acbe ,_befd :=_aec .GetIndirect (_fbbce .Get ("\u0056"));if _befd {var _gefdceb error ;_acdd .V ,_gefdceb =_fgaac .newPdfSignatureFromIndirect (_acbe );if _gefdceb !=nil {return nil ,_gefdceb ;};};_acdd .Lock ,_ =_aec .GetIndirect (_fbbce .Get ("\u004c\u006f\u0063\u006b"));_acdd .SV ,_ =_aec .GetIndirect (_fbbce .Get ("\u0053\u0056"));return _acdd ,nil ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_faeag *PdfPageResourcesColorspaces )Set (key _aec .PdfObjectName ,val PdfColorspace ){if _ ,_abfdb :=_faeag .Colorspaces [string (key )];!_abfdb {_faeag .Names =append (_faeag .Names ,string (key ));};_faeag .Colorspaces [string (key )]=val ;};

// ToPdfObject implements interface PdfModel.
func (_eaga *PdfAnnotationText )ToPdfObject ()_aec .PdfObject {_eaga .PdfAnnotation .ToPdfObject ();_bad :=_eaga ._bcce ;_fagc :=_bad .PdfObject .(*_aec .PdfObjectDictionary );if _eaga .PdfAnnotationMarkup !=nil {_eaga .PdfAnnotationMarkup .appendToPdfDictionary (_fagc );};_fagc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0054\u0065\u0078\u0074"));_fagc .SetIfNotNil ("\u004f\u0070\u0065\u006e",_eaga .Open );_fagc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eaga .Name );_fagc .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_eaga .State );_fagc .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_eaga .StateModel );return _bad ;};

// ToPdfObject implements interface PdfModel.
func (_gfbe *PdfActionSound )ToPdfObject ()_aec .PdfObject {_gfbe .PdfAction .ToPdfObject ();_bec :=_gfbe ._gf ;_bef :=_bec .PdfObject .(*_aec .PdfObjectDictionary );_bef .SetIfNotNil ("\u0053",_aec .MakeName (string (ActionTypeSound )));_bef .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_gfbe .Sound );_bef .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_gfbe .Volume );_bef .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_gfbe .Synchronous );_bef .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_gfbe .Repeat );_bef .SetIfNotNil ("\u004d\u0069\u0078",_gfbe .Mix );return _bec ;};func _gdcgc (_efgb *PdfPage ){_eage :=_dce .GetLicenseKey ();if _eage !=nil &&_eage .IsLicensed (){return ;};_bbcbd :=_aec .PdfObjectName ("\u0055\u0046\u0031");if !_efgb .Resources .HasFontByName (_bbcbd ){_efgb .Resources .SetFontByName (_bbcbd ,DefaultFont ().ToPdfObject ());};var _bccaf []string ;_bccaf =append (_bccaf ,"\u0071");_bccaf =append (_bccaf ,"\u0042\u0054");_bccaf =append (_bccaf ,_g .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_bbcbd .String ()));_bccaf =append (_bccaf ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_bccaf =append (_bccaf ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_eacfe :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";_bccaf =append (_bccaf ,_g .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_eacfe ));_bccaf =append (_bccaf ,"\u0045\u0054");_bccaf =append (_bccaf ,"\u0051");_dafcf :=_ee .Join (_bccaf ,"\u000a");_efgb .AddContentStreamByString (_dafcf );_efgb .ToPdfObject ();};func (_aeffa *XObjectImage )getParamsDict ()*_aec .PdfObjectDictionary {_bdfdc :=_aec .MakeDict ();_bdfdc .Set ("\u0057\u0069\u0064t\u0068",_aec .MakeInteger (*_aeffa .Width ));_bdfdc .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_aec .MakeInteger (*_aeffa .Height ));_bdfdc .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_aec .MakeInteger (int64 (_aeffa .ColorSpace .GetNumComponents ())));_bdfdc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aec .MakeInteger (*_aeffa .BitsPerComponent ));return _bdfdc ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_deab *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// SetAction sets the PDF action for the annotation link.
func (_degg *PdfAnnotationLink )SetAction (action *PdfAction ){_degg ._bccc =action ;if action ==nil {_degg .A =nil ;};};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_ccgbd *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _ccgbd .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// GetNumComponents returns the number of color components (3 for RGB).
func (_bdad *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_aec .PdfObjectStream ;OCSP []*_aec .PdfObjectStream ;CRL []*_aec .PdfObjectStream ;TU *_aec .PdfObjectString ;TS *_aec .PdfObjectString ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_begc *Image )SetSamples (samples []uint32 ){if _begc .BitsPerComponent < 8{samples =_begc .samplesAddPadding (samples );};_agebg :=_bdd .ResampleUint32 (samples ,int (_begc .BitsPerComponent ),8);_acfff :=make ([]byte ,len (_agebg ));for _gfde ,_gfgeca :=range _agebg {_acfff [_gfde ]=byte (_gfgeca );};_begc .Data =_acfff ;};

// ToPdfObject implements interface PdfModel.
func (_fbfe *PdfAnnotationWatermark )ToPdfObject ()_aec .PdfObject {_fbfe .PdfAnnotation .ToPdfObject ();_gfcff :=_fbfe ._bcce ;_gdbe :=_gfcff .PdfObject .(*_aec .PdfObjectDictionary );_gdbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));_gdbe .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_fbfe .FixedPrint );return _gfcff ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_aec .PdfObjectInteger ;BitsPerComponent *_aec .PdfObjectInteger ;BitsPerFlag *_aec .PdfObjectInteger ;Decode *_aec .PdfObjectArray ;Function []PdfFunction ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_ceedf *PdfReader )GetTrailer ()(*_aec .PdfObjectDictionary ,error ){_gdbec :=_ceedf ._adecd .GetTrailer ();if _gdbec ==nil {return nil ,_ed .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _gdbec ,nil ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _aec .PdfObject ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_gdfde []_aec .PdfObject )([]_aec .PdfObject ,error );};

// Encoder returns the font's text encoder.
func (_ggfc pdfCIDFontType2 )Encoder ()_cad .TextEncoder {return _ggfc ._dcea };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_cdfd *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcbf :=vals [0];if _gcbf < 0.0||_gcbf > 1.0{_de .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");};if _gcbf < 0.0{_gcbf =0.0;}else if _gcbf > 1.0{_gcbf =1.0;};return NewPdfColorDeviceGray (_gcbf ),nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_gbaed *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _gbaed .UnderlyingCS ==nil {return nil ,_ed .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");};return _gbaed .UnderlyingCS .ColorFromFloats (vals );};

// GetNumPages returns the number of pages in the document.
func (_gedaad *PdfReader )GetNumPages ()(int ,error ){if _gedaad ._adecd .GetCrypter ()!=nil &&!_gedaad ._adecd .IsAuthenticated (){return 0,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};return len (_gedaad ._daffa ),nil ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_abee *PdfPageResources )HasColorspaceByName (keyName _aec .PdfObjectName )bool {_bcgfe ,_ggbfc :=_abee .GetColorspaces ();if _ggbfc !=nil {_de .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_ggbfc );return false ;};if _bcgfe ==nil {return false ;};_ ,_dabdd :=_bcgfe .Colorspaces [string (keyName )];return _dabdd ;};

// B returns the value of the blue component of the color.
func (_afgb *PdfColorDeviceRGB )B ()float64 {return _afgb [2]};func (_edb *PdfReader )newPdfAnnotationLinkFromDict (_fegb *_aec .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_bdfb :=PdfAnnotationLink {};_bdfb .A =_fegb .Get ("\u0041");_bdfb .Dest =_fegb .Get ("\u0044\u0065\u0073\u0074");_bdfb .H =_fegb .Get ("\u0048");_bdfb .PA =_fegb .Get ("\u0050\u0041");_bdfb .QuadPoints =_fegb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_bdfb .BS =_fegb .Get ("\u0042\u0053");return &_bdfb ,nil ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_fgec ,_fcgbf :=_gg .Open (filePath );if _fcgbf !=nil {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_fcgbf );return nil ,_fcgbf ;};defer _fgec .Close ();return NewPdfFontFromTTF (_fgec );};func _ebdfb (_cgdac *_aec .PdfObjectDictionary ,_dbafd *fontCommon )(*pdfCIDFontType2 ,error ){if _dbafd ._daed !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_de .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_dbafd );return nil ,_aec .ErrRangeError ;};_deggf :=_fedfc (_dbafd );_edfcg ,_aefb :=_aec .GetDict (_cgdac .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_aefb {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dbafd );return nil ,ErrRequiredAttributeMissing ;};_deggf .CIDSystemInfo =_edfcg ;_deggf .DW =_cgdac .Get ("\u0044\u0057");_deggf .W =_cgdac .Get ("\u0057");_deggf .DW2 =_cgdac .Get ("\u0044\u0057\u0032");_deggf .W2 =_cgdac .Get ("\u0057\u0032");_deggf .CIDToGIDMap =_cgdac .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");_deggf ._dacfb =1000.0;if _gabbd ,_ggaee :=_aec .GetNumberAsFloat (_deggf .DW );_ggaee ==nil {_deggf ._dacfb =_gabbd ;};_fgfc ,_eagac :=_dbbb (_deggf .W );if _eagac !=nil {return nil ,_eagac ;};if _fgfc ==nil {_fgfc =map[_cad .CharCode ]float64 {};};_deggf ._effeg =_fgfc ;return _deggf ,nil ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_aag :=NewPdfAnnotation ();_gcgd :=&PdfAnnotationWatermark {};_gcgd .PdfAnnotation =_aag ;_aag .SetContext (_gcgd );return _gcgd ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _aec .PdfObject ;};func (_bfgdf *LTV )getCRLs (_caca []*_ad .Certificate )([][]byte ,error ){_ccaeb :=make ([][]byte ,0,len (_caca ));for _ ,_cegg :=range _caca {for _ ,_gfagd :=range _cegg .CRLDistributionPoints {if _bfgdf .CertClient .IsCA (_cegg ){continue ;};_dbdff ,_cdgff :=_bfgdf .CRLClient .MakeRequest (_gfagd ,_cegg );if _cdgff !=nil {_de .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_cdgff );continue ;};_ccaeb =append (_ccaeb ,_dbdff );};};return _ccaeb ,nil ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_aegdg int64 ;_fddeg int64 ;_gcfga int64 ;_fcedg int64 ;_dgbfe int64 ;_ccaf int64 ;_gbfeg byte ;_cdagg int64 ;_bebd int64 ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_cedfg *PdfPage )GetPageDict ()*_aec .PdfObjectDictionary {_baee :=_cedfg ._defa ;_baee .Clear ();_baee .Set ("\u0054\u0079\u0070\u0065",_aec .MakeName ("\u0050\u0061\u0067\u0065"));_baee .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cedfg .Parent );if _cedfg .LastModified !=nil {_baee .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_cedfg .LastModified .ToPdfObject ());};if _cedfg .Resources !=nil {_baee .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_cedfg .Resources .ToPdfObject ());};if _cedfg .CropBox !=nil {_baee .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_cedfg .CropBox .ToPdfObject ());};if _cedfg .MediaBox !=nil {_baee .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_cedfg .MediaBox .ToPdfObject ());};if _cedfg .BleedBox !=nil {_baee .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_cedfg .BleedBox .ToPdfObject ());};if _cedfg .TrimBox !=nil {_baee .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_cedfg .TrimBox .ToPdfObject ());};if _cedfg .ArtBox !=nil {_baee .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_cedfg .ArtBox .ToPdfObject ());};_baee .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_cedfg .BoxColorInfo );_baee .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cedfg .Contents );if _cedfg .Rotate !=nil {_baee .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_aec .MakeInteger (*_cedfg .Rotate ));};_baee .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_cedfg .Group );_baee .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_cedfg .Thumb );_baee .SetIfNotNil ("\u0042",_cedfg .B );_baee .SetIfNotNil ("\u0044\u0075\u0072",_cedfg .Dur );_baee .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_cedfg .Trans );_baee .SetIfNotNil ("\u0041\u0041",_cedfg .AA );_baee .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_cedfg .Metadata );_baee .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_cedfg .PieceInfo );_baee .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_cedfg .StructParents );_baee .SetIfNotNil ("\u0049\u0044",_cedfg .ID );_baee .SetIfNotNil ("\u0050\u005a",_cedfg .PZ );_baee .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_cedfg .SeparationInfo );_baee .SetIfNotNil ("\u0054\u0061\u0062\u0073",_cedfg .Tabs );_baee .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_cedfg .TemplateInstantiated );_baee .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_cedfg .PresSteps );_baee .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_cedfg .UserUnit );_baee .SetIfNotNil ("\u0056\u0050",_cedfg .VP );if _cedfg ._cbbgf !=nil {_bdgc :=_aec .MakeArray ();for _ ,_befga :=range _cedfg ._cbbgf {if _bfaeb :=_befga .GetContext ();_bfaeb !=nil {_bdgc .Append (_bfaeb .ToPdfObject ());}else {_bdgc .Append (_befga .ToPdfObject ());};};if _bdgc .Len ()> 0{_baee .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_bdgc );};}else if _cedfg .Annots !=nil {_baee .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_cedfg .Annots );};return _baee ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_debb :=&PdfPageResourcesColorspaces {};_debb .Names =[]string {};_debb .Colorspaces =map[string ]PdfColorspace {};_debb ._ccgag =&_aec .PdfIndirectObject {};return _debb ;};

// ToPdfObject implements interface PdfModel.
func (_cefd *PdfAnnotationUnderline )ToPdfObject ()_aec .PdfObject {_cefd .PdfAnnotation .ToPdfObject ();_gggd :=_cefd ._bcce ;_dggb :=_gggd .PdfObject .(*_aec .PdfObjectDictionary );_cefd .PdfAnnotationMarkup .appendToPdfDictionary (_dggb );_dggb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));_dggb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cefd .QuadPoints );return _gggd ;};func _faffc (_cecg *_aec .PdfObjectDictionary )(*PdfShadingType6 ,error ){_cggbcg :=PdfShadingType6 {};_cbcga :=_cecg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _cbcga ==nil {_de .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_bbcga ,_cfccb :=_cbcga .(*_aec .PdfObjectInteger );if !_cfccb {_de .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cbcga );return nil ,_aec .ErrTypeError ;};_cggbcg .BitsPerCoordinate =_bbcga ;_cbcga =_cecg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cbcga ==nil {_de .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_bbcga ,_cfccb =_cbcga .(*_aec .PdfObjectInteger );if !_cfccb {_de .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cbcga );return nil ,_aec .ErrTypeError ;};_cggbcg .BitsPerComponent =_bbcga ;_cbcga =_cecg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _cbcga ==nil {_de .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_bbcga ,_cfccb =_cbcga .(*_aec .PdfObjectInteger );if !_cfccb {_de .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cbcga );return nil ,_aec .ErrTypeError ;};_cggbcg .BitsPerComponent =_bbcga ;_cbcga =_cecg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cbcga ==nil {_de .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_ebdd ,_cfccb :=_cbcga .(*_aec .PdfObjectArray );if !_cfccb {_de .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cbcga );return nil ,_aec .ErrTypeError ;};_cggbcg .Decode =_ebdd ;if _dbec :=_cecg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_dbec !=nil {_cggbcg .Function =[]PdfFunction {};if _fedgd ,_ffegd :=_dbec .(*_aec .PdfObjectArray );_ffegd {for _ ,_cbbbg :=range _fedgd .Elements (){_eeaa ,_cdagf :=_cgefb (_cbbbg );if _cdagf !=nil {_de .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cdagf );return nil ,_cdagf ;};_cggbcg .Function =append (_cggbcg .Function ,_eeaa );};}else {_bbgg ,_ccgfe :=_cgefb (_dbec );if _ccgfe !=nil {_de .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ccgfe );return nil ,_ccgfe ;};_cggbcg .Function =append (_cggbcg .Function ,_bbgg );};};return &_cggbcg ,nil ;};func _cgaae (_gggde StdFontName )(pdfFontSimple ,error ){_adaeb ,_gcbg :=_ge .NewStdFontByName (_gggde );if !_gcbg {return pdfFontSimple {},ErrFontNotSupported ;};_efcf :=_bedbc (_adaeb );return _efcf ,nil ;};func (_cdcc SignatureValidationResult )String ()string {var _ebec _add .Buffer ;_ebec .WriteString (_g .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_cdcc .Name ));if _cdcc .Date ._aegdg > 0{_ebec .WriteString (_g .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_cdcc .Date .ToGoTime ().String ()));}else {_ebec .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_cdcc .Reason )> 0{_ebec .WriteString (_g .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_cdcc .Reason ));}else {_ebec .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_cdcc .Location )> 0{_ebec .WriteString (_g .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_cdcc .Location ));}else {_ebec .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_cdcc .ContactInfo )> 0{_ebec .WriteString (_g .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_cdcc .ContactInfo ));}else {_ebec .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_ebec .WriteString (_g .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_cdcc .Fields )));if _cdcc .IsSigned {_ebec .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_ebec .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _cdcc .IsVerified {_ebec .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_ebec .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _cdcc .IsTrusted {_ebec .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_ebec .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_cdcc .GeneralizedTime .IsZero (){_ebec .WriteString (_g .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_cdcc .GeneralizedTime .String ()));};return _ebec .String ();};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_gfbf *PdfPage )AddContentStreamByString (contentStr string )error {_aadca ,_bcggf :=_aec .MakeStream ([]byte (contentStr ),_aec .NewFlateEncoder ());if _bcggf !=nil {return _bcggf ;};if _gfbf .Contents ==nil {_gfbf .Contents =_aadca ;}else {_beeae :=_aec .TraceToDirectObject (_gfbf .Contents );_fcfdg ,_abgf :=_beeae .(*_aec .PdfObjectArray );if !_abgf {_fcfdg =_aec .MakeArray (_beeae );};_fcfdg .Append (_aadca );_gfbf .Contents =_fcfdg ;};return nil ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_cdbe :=NewPdfOutline ();_cdbe ._gdagc =&_cdbe ;return _cdbe };

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _aec .PdfObject ;LE _aec .PdfObject ;BS _aec .PdfObject ;IC _aec .PdfObject ;BE _aec .PdfObject ;IT _aec .PdfObject ;Measure _aec .PdfObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_eegf *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_aec .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddff ,_cdgb :=_aec .GetNumbersAsFloat (objects );if _cdgb !=nil {return nil ,_cdgb ;};return _eegf .ColorFromFloats (_ddff );};

// ToPdfObject returns the PDF representation of the function.
func (_ddec *PdfFunctionType2 )ToPdfObject ()_aec .PdfObject {_cebb :=_aec .MakeDict ();_cebb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_aec .MakeInteger (2));_efgcg :=&_aec .PdfObjectArray {};for _ ,_ddfb :=range _ddec .Domain {_efgcg .Append (_aec .MakeFloat (_ddfb ));};_cebb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_efgcg );if _ddec .Range !=nil {_gadbe :=&_aec .PdfObjectArray {};for _ ,_fgcgd :=range _ddec .Range {_gadbe .Append (_aec .MakeFloat (_fgcgd ));};_cebb .Set ("\u0052\u0061\u006eg\u0065",_gadbe );};if _ddec .C0 !=nil {_gceac :=&_aec .PdfObjectArray {};for _ ,_gggda :=range _ddec .C0 {_gceac .Append (_aec .MakeFloat (_gggda ));};_cebb .Set ("\u0043\u0030",_gceac );};if _ddec .C1 !=nil {_dbafe :=&_aec .PdfObjectArray {};for _ ,_fdac :=range _ddec .C1 {_dbafe .Append (_aec .MakeFloat (_fdac ));};_cebb .Set ("\u0043\u0031",_dbafe );};_cebb .Set ("\u004e",_aec .MakeFloat (_ddec .N ));if _ddec ._bacaa !=nil {_ddec ._bacaa .PdfObject =_cebb ;return _ddec ._bacaa ;};return _cebb ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _aec .PdfObject ;Flags _aec .PdfObject ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_acg :=NewPdfAnnotation ();_gdbc :=&PdfAnnotationStamp {};_gdbc .PdfAnnotation =_acg ;_gdbc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_acg .SetContext (_gdbc );return _gdbc ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_aec .PdfObjectStream )(*XObjectForm ,error ){_fddbd :=&XObjectForm {};_fddbd ._fgddc =stream ;_cgfc :=*(stream .PdfObjectDictionary );_abcgd ,_beeeb :=_aec .NewEncoderFromStream (stream );if _beeeb !=nil {return nil ,_beeeb ;};_fddbd .Filter =_abcgd ;if _bbbfe :=_cgfc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_bbbfe !=nil {_cagdf ,_aggbf :=_bbbfe .(*_aec .PdfObjectName );if !_aggbf {return nil ,_ed .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if *_cagdf !="\u0046\u006f\u0072\u006d"{_de .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_ed .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");};};if _aaacef :=_cgfc .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_aaacef !=nil {_fddbd .FormType =_aaacef ;};if _acgbc :=_cgfc .Get ("\u0042\u0042\u006f\u0078");_acgbc !=nil {_fddbd .BBox =_acgbc ;};if _caddg :=_cgfc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_caddg !=nil {_fddbd .Matrix =_caddg ;};if _gdadc :=_cgfc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gdadc !=nil {_gdadc =_aec .TraceToDirectObject (_gdadc );_cccec ,_gfcgcd :=_gdadc .(*_aec .PdfObjectDictionary );if !_gfcgcd {_de .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_aec .ErrTypeError ;};_cadbb ,_efaef :=NewPdfPageResourcesFromDict (_cccec );if _efaef !=nil {_de .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");return nil ,_efaef ;};_fddbd .Resources =_cadbb ;_de .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_fddbd .Resources );};_fddbd .Group =_cgfc .Get ("\u0047\u0072\u006fu\u0070");_fddbd .Ref =_cgfc .Get ("\u0052\u0065\u0066");_fddbd .MetaData =_cgfc .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_fddbd .PieceInfo =_cgfc .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_fddbd .LastModified =_cgfc .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_fddbd .StructParent =_cgfc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_fddbd .StructParents =_cgfc .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_fddbd .OPI =_cgfc .Get ("\u004f\u0050\u0049");_fddbd .OC =_cgfc .Get ("\u004f\u0043");_fddbd .Name =_cgfc .Get ("\u004e\u0061\u006d\u0065");_fddbd .Stream =stream .Stream ;return _fddbd ,nil ;};func (_gbega *fontFile )loadFromSegments (_aeccc ,_dbgef []byte )error {_de .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_aeccc ),len (_dbgef ));_agfaf :=_gbega .parseASCIIPart (_aeccc );if _agfaf !=nil {return _agfaf ;};_de .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_gbega );if len (_dbgef )==0{return nil ;};_de .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_gbega );return nil ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_cged *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// C returns the value of the cyan component of the color.
func (_cbgg *PdfColorDeviceCMYK )C ()float64 {return _cbgg [0]};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_efcd *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_aec .PdfObject )(PdfColor ,error ){if _efcd .Alternate ==nil {if _efcd .N ==1{_agcaf :=NewPdfColorspaceDeviceGray ();return _agcaf .ColorFromPdfObjects (objects );}else if _efcd .N ==3{_cdbg :=NewPdfColorspaceDeviceRGB ();return _cdbg .ColorFromPdfObjects (objects );}else if _efcd .N ==4{_deccd :=NewPdfColorspaceDeviceCMYK ();return _deccd .ColorFromPdfObjects (objects );}else {return nil ,_ed .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _efcd .Alternate .ColorFromPdfObjects (objects );};func (_aagc *PdfReader )newPdfAnnotation3DFromDict (_faca *_aec .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_cef :=PdfAnnotation3D {};_cef .T3DD =_faca .Get ("\u0033\u0044\u0044");_cef .T3DV =_faca .Get ("\u0033\u0044\u0056");_cef .T3DA =_faca .Get ("\u0033\u0044\u0041");_cef .T3DI =_faca .Get ("\u0033\u0044\u0049");_cef .T3DB =_faca .Get ("\u0033\u0044\u0042");return &_cef ,nil ;};

// ToGoTime returns the date in time.Time format.
func (_agfc PdfDate )ToGoTime ()_d .Time {_ggaad :=int (_agfc ._cdagg *60*60+_agfc ._bebd *60);switch _agfc ._gbfeg {case '-':_ggaad =-_ggaad ;case 'Z':_ggaad =0;};_ggebb :=_g .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_agfc ._gbfeg ,_agfc ._cdagg ,_agfc ._bebd );_daead :=_d .FixedZone (_ggebb ,_ggaad );return _d .Date (int (_agfc ._aegdg ),_d .Month (_agfc ._fddeg ),int (_agfc ._gcfga ),int (_agfc ._fcedg ),int (_agfc ._dgbfe ),int (_agfc ._ccaf ),0,_daead );};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_cag :=NewPdfAction ();_gda :=&PdfActionResetForm {};_gda .PdfAction =_cag ;_cag .SetContext (_gda );return _gda ;};

// ToPdfObject implements interface PdfModel.
func (_dbf *PdfActionGoTo )ToPdfObject ()_aec .PdfObject {_dbf .PdfAction .ToPdfObject ();_ba :=_dbf ._gf ;_ddb :=_ba .PdfObject .(*_aec .PdfObjectDictionary );_ddb .SetIfNotNil ("\u0053",_aec .MakeName (string (ActionTypeGoTo )));_ddb .SetIfNotNil ("\u0044",_dbf .D );return _ba ;};func (_gaeg *DSS )addCRLs (_geabf [][]byte )([]*_aec .PdfObjectStream ,error ){return _gaeg .add (&_gaeg .CRLs ,_gaeg ._ccfba ,_geabf );};

// SetContext sets the sub action (context).
func (_cg *PdfAction )SetContext (ctx PdfModel ){_cg ._bbgc =ctx };

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_ffegc *PdfOutlineTreeNode )GetContainingPdfObject ()_aec .PdfObject {return _ffegc .GetContext ().GetContainingPdfObject ();};

// ToPdfObject implements interface PdfModel.
func (_dgb *PdfActionTrans )ToPdfObject ()_aec .PdfObject {_dgb .PdfAction .ToPdfObject ();_egc :=_dgb ._gf ;_ff :=_egc .PdfObject .(*_aec .PdfObjectDictionary );_ff .SetIfNotNil ("\u0053",_aec .MakeName (string (ActionTypeTrans )));_ff .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_dgb .Trans );return _egc ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_aec .PdfObjectArray ;};func _cdac (_adffb _aec .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_ebbeb :=&PdfColorspaceDeviceNAttributes {};var _aaae *_aec .PdfObjectDictionary ;if _acdce ,_geeb :=_adffb .(*_aec .PdfIndirectObject );_geeb {_ebbeb ._ceafa =_acdce ;var _affa bool ;_aaae ,_affa =_acdce .PdfObject .(*_aec .PdfObjectDictionary );if !_affa {_de .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_ed .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};}else if _dcfb ,_aaaee :=_adffb .(*_aec .PdfObjectDictionary );_aaaee {_aaae =_dcfb ;}else {_de .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_ed .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _aeeeg :=_aaae .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_aeeeg !=nil {_dbag ,_fggd :=_aec .TraceToDirectObject (_aeeeg ).(*_aec .PdfObjectName );if !_fggd {_de .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");return nil ,_ed .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_ebbeb .Subtype =_dbag ;};if _ccecd :=_aaae .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_ccecd !=nil {_ebbeb .Colorants =_ccecd ;};if _beceb :=_aaae .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");_beceb !=nil {_ebbeb .Process =_beceb ;};if _gcbc :=_aaae .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_gcbc !=nil {_ebbeb .MixingHints =_gcbc ;};return _ebbeb ,nil ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_fefb ,_fcddb :=_cgaae (basefont );if _fcddb !=nil {return nil ,_fcddb ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_fefb ._bfdb =_cad .NewWinAnsiEncoder ();};return &PdfFont {_gaga :&_fefb },nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_cefc *PdfColorspaceLab )ColorFromPdfObjects (objects []_aec .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgbd ,_afecc :=_aec .GetNumbersAsFloat (objects );if _afecc !=nil {return nil ,_afecc ;};return _cefc .ColorFromFloats (_bgbd );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_dggbf *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afae :=vals [0];_gfac :=[]float64 {_afae };_aefcc ,_gbgd :=_dggbf .TintTransform .Evaluate (_gfac );if _gbgd !=nil {_de .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_gbgd );_de .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_dggbf .TintTransform );return nil ,_gbgd ;};_de .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_aefcc ,_dggbf .AlternateSpace );_cefg ,_gbgd :=_dggbf .AlternateSpace .ColorFromFloats (_aefcc );if _gbgd !=nil {_de .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_gbgd );return nil ,_gbgd ;};return _cefg ,nil ;};func (_eccd *PdfAnnotationMarkup )appendToPdfDictionary (_aege *_aec .PdfObjectDictionary ){_aege .SetIfNotNil ("\u0054",_eccd .T );if _eccd .Popup !=nil {_aege .Set ("\u0050\u006f\u0070u\u0070",_eccd .Popup .ToPdfObject ());};_aege .SetIfNotNil ("\u0043\u0041",_eccd .CA );_aege .SetIfNotNil ("\u0052\u0043",_eccd .RC );_aege .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_eccd .CreationDate );_aege .SetIfNotNil ("\u0049\u0052\u0054",_eccd .IRT );_aege .SetIfNotNil ("\u0053\u0075\u0062\u006a",_eccd .Subj );_aege .SetIfNotNil ("\u0052\u0054",_eccd .RT );_aege .SetIfNotNil ("\u0049\u0054",_eccd .IT );_aege .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_eccd .ExData );};func _ebgc (_gceg _aec .PdfObject )(*PdfBorderStyle ,error ){_egb :=&PdfBorderStyle {};_egb ._aefg =_gceg ;var _fdeb *_aec .PdfObjectDictionary ;_gceg =_aec .TraceToDirectObject (_gceg );_fdeb ,_eaf :=_gceg .(*_aec .PdfObjectDictionary );if !_eaf {return nil ,_ed .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _afdba :=_fdeb .Get ("\u0054\u0079\u0070\u0065");_afdba !=nil {_cfddg ,_bdca :=_afdba .(*_aec .PdfObjectName );if !_bdca {_de .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_afdba );}else {if *_cfddg !="\u0042\u006f\u0072\u0064\u0065\u0072"{_de .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_cfddg );};};};if _dbcb :=_fdeb .Get ("\u0057");_dbcb !=nil {_gdbdb ,_bce :=_aec .GetNumberAsFloat (_dbcb );if _bce !=nil {_de .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_bce );return nil ,_bce ;};_egb .W =&_gdbdb ;};if _fgad :=_fdeb .Get ("\u0053");_fgad !=nil {_efdbc ,_dacfcg :=_fgad .(*_aec .PdfObjectName );if !_dacfcg {return nil ,_ed .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};var _agef BorderStyle ;switch *_efdbc {case "\u0053":_agef =BorderStyleSolid ;case "\u0044":_agef =BorderStyleDashed ;case "\u0042":_agef =BorderStyleBeveled ;case "\u0049":_agef =BorderStyleInset ;case "\u0055":_agef =BorderStyleUnderline ;default:_de .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_efdbc );return nil ,_ed .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_egb .S =&_agef ;};if _fgaa :=_fdeb .Get ("\u0044");_fgaa !=nil {_aecgc ,_bgea :=_fgaa .(*_aec .PdfObjectArray );if !_bgea {_de .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_fgaa );return nil ,_ed .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");};_fgbcg ,_bdda :=_aecgc .ToIntegerArray ();if _bdda !=nil {_de .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_bdda );return nil ,_bdda ;};_egb .D =&_fgbcg ;};return _egb ,nil ;};func _ccfd (_cbd _aec .PdfObject )(*PdfFilespec ,error ){if _cbd ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_cbd );};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_fgfa :=&PdfFieldSignature {};_fgfa .PdfField =NewPdfField ();_fgfa .PdfField .SetContext (_fgfa );_fgfa .PdfAnnotationWidget =NewPdfAnnotationWidget ();_fgfa .PdfAnnotationWidget .SetContext (_fgfa );_fgfa .PdfAnnotationWidget ._bcce =_fgfa .PdfField ._cfaef ;_fgfa .T =_aec .MakeString ("");_fgfa .F =_aec .MakeInteger (132);_fgfa .V =signature ;return _fgfa ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _aec .PdfObject ;FontFamily _aec .PdfObject ;FontStretch _aec .PdfObject ;FontWeight _aec .PdfObject ;Flags _aec .PdfObject ;FontBBox _aec .PdfObject ;ItalicAngle _aec .PdfObject ;Ascent _aec .PdfObject ;Descent _aec .PdfObject ;Leading _aec .PdfObject ;CapHeight _aec .PdfObject ;XHeight _aec .PdfObject ;StemV _aec .PdfObject ;StemH _aec .PdfObject ;AvgWidth _aec .PdfObject ;MaxWidth _aec .PdfObject ;MissingWidth _aec .PdfObject ;FontFile _aec .PdfObject ;FontFile2 _aec .PdfObject ;FontFile3 _aec .PdfObject ;CharSet _aec .PdfObject ;_abef int ;_fbgbb float64 ;*fontFile ;_cagd *_ge .TtfType ;

// Additional entries for CIDFonts
Style _aec .PdfObject ;Lang _aec .PdfObject ;FD _aec .PdfObject ;CIDSet _aec .PdfObject ;_bdac *_aec .PdfIndirectObject ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_aec .PdfObject ;GetContainingPdfObject ()_aec .PdfObject ;};

// GetContentStream returns the pattern cell's content stream
func (_dafa *PdfTilingPattern )GetContentStream ()([]byte ,error ){_aeccd ,_ ,_bcegb :=_dafa .GetContentStreamWithEncoder ();return _aeccd ,_bcegb ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_bacaa *_aec .PdfIndirectObject ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_fgbfg *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_dafgg :=func (_eeab float64 )float64 {if _eeab >=6.0/29{return _eeab *_eeab *_eeab ;};return 108.0/841*(_eeab -4/29);};_aaab :=img ._dbdfe ;if len (_aaab )!=6{_de .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");_aaab =_fgbfg .DecodeArray ();};_edfc :=_bdd .NewReader (img .getBase ());_bbge :=_be .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._aaaa ,img ._dbdfe );_dffc :=_bdd .NewWriter (_bbge );_gegdg :=_dc .Pow (2,float64 (img .BitsPerComponent ))-1;_dcga :=make ([]uint32 ,3);var (_efdd error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_aaabe ,_aeaac ,_bcbab float64 ;);for {_efdd =_edfc .ReadSamples (_dcga );if _efdd ==_fb .EOF {break ;}else if _efdd !=nil {return img ,_efdd ;};Ls =float64 (_dcga [0])/_gegdg ;As =float64 (_dcga [1])/_gegdg ;Bs =float64 (_dcga [2])/_gegdg ;Ls =_be .LinearInterpolate (Ls ,0.0,1.0,_aaab [0],_aaab [1]);As =_be .LinearInterpolate (As ,0.0,1.0,_aaab [2],_aaab [3]);Bs =_be .LinearInterpolate (Bs ,0.0,1.0,_aaab [4],_aaab [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_fgbfg .WhitePoint [0]*_dafgg (L );Y =_fgbfg .WhitePoint [1]*_dafgg (M );Z =_fgbfg .WhitePoint [2]*_dafgg (N );_aaabe =3.240479*X +-1.537150*Y +-0.498535*Z ;_aeaac =-0.969256*X +1.875992*Y +0.041556*Z ;_bcbab =0.055648*X +-0.204043*Y +1.057311*Z ;_aaabe =_dc .Min (_dc .Max (_aaabe ,0),1.0);_aeaac =_dc .Min (_dc .Max (_aeaac ,0),1.0);_bcbab =_dc .Min (_dc .Max (_bcbab ,0),1.0);_dcga [0]=uint32 (_aaabe *_gegdg );_dcga [1]=uint32 (_aeaac *_gegdg );_dcga [2]=uint32 (_bcbab *_gegdg );if _efdd =_dffc .WriteSamples (_dcga );_efdd !=nil {return img ,_efdd ;};};return _ffefc (&_bbge ),nil ;};func (_eda *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_gcdd :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");};_gcdd .N =N ;return _gcdd ,nil ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;func _ageaf (_beefa _aec .PdfObject )(*PdfShading ,error ){_gbecc :=&PdfShading {};var _fcfbe *_aec .PdfObjectDictionary ;if _ebfa ,_deaga :=_aec .GetIndirect (_beefa );_deaga {_gbecc ._cecd =_ebfa ;_gbgb ,_fgfdb :=_ebfa .PdfObject .(*_aec .PdfObjectDictionary );if !_fgfdb {_de .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_aec .ErrTypeError ;};_fcfbe =_gbgb ;}else if _bdggd ,_egeg :=_aec .GetStream (_beefa );_egeg {_gbecc ._cecd =_bdggd ;_fcfbe =_bdggd .PdfObjectDictionary ;}else if _afgac ,_fcca :=_aec .GetDict (_beefa );_fcca {_gbecc ._cecd =_afgac ;_fcfbe =_afgac ;}else {_de .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_beefa );return nil ,_aec .ErrTypeError ;};if _fcfbe ==nil {_de .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_ed .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_beefa =_fcfbe .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _beefa ==nil {_de .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_beefa =_aec .TraceToDirectObject (_beefa );_fadf ,_agdcb :=_beefa .(*_aec .PdfObjectInteger );if !_agdcb {_de .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_beefa );return nil ,_aec .ErrTypeError ;};if *_fadf < 1||*_fadf > 7{_de .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_fadf );return nil ,_aec .ErrTypeError ;};_gbecc .ShadingType =_fadf ;_beefa =_fcfbe .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _beefa ==nil {_de .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gdgcg ,_egcfe :=NewPdfColorspaceFromPdfObject (_beefa );if _egcfe !=nil {_de .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_egcfe );return nil ,_egcfe ;};_gbecc .ColorSpace =_gdgcg ;_beefa =_fcfbe .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _beefa !=nil {_beefa =_aec .TraceToDirectObject (_beefa );_beffc ,_cabbf :=_beefa .(*_aec .PdfObjectArray );if !_cabbf {_de .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_beefa );return nil ,_aec .ErrTypeError ;};_gbecc .Background =_beffc ;};_beefa =_fcfbe .Get ("\u0042\u0042\u006f\u0078");if _beefa !=nil {_beefa =_aec .TraceToDirectObject (_beefa );_ebgbdd ,_cfedd :=_beefa .(*_aec .PdfObjectArray );if !_cfedd {_de .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_beefa );return nil ,_aec .ErrTypeError ;};_ggaba ,_cceca :=NewPdfRectangle (*_ebgbdd );if _cceca !=nil {_de .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_cceca );return nil ,_cceca ;};_gbecc .BBox =_ggaba ;};_beefa =_fcfbe .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");if _beefa !=nil {_beefa =_aec .TraceToDirectObject (_beefa );_ebgg ,_efbeg :=_beefa .(*_aec .PdfObjectBool );if !_efbeg {_de .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_beefa );return nil ,_aec .ErrTypeError ;};_gbecc .AntiAlias =_ebgg ;};switch *_fadf {case 1:_aaecd ,_aacba :=_cegcb (_fcfbe );if _aacba !=nil {return nil ,_aacba ;};_aaecd .PdfShading =_gbecc ;_gbecc ._bfdgf =_aaecd ;return _gbecc ,nil ;case 2:_egbge ,_eaeae :=_fdecg (_fcfbe );if _eaeae !=nil {return nil ,_eaeae ;};_egbge .PdfShading =_gbecc ;_gbecc ._bfdgf =_egbge ;return _gbecc ,nil ;case 3:_bbcdd ,_ebedb :=_dbffe (_fcfbe );if _ebedb !=nil {return nil ,_ebedb ;};_bbcdd .PdfShading =_gbecc ;_gbecc ._bfdgf =_bbcdd ;return _gbecc ,nil ;case 4:_cdba ,_gfcea :=_gede (_fcfbe );if _gfcea !=nil {return nil ,_gfcea ;};_cdba .PdfShading =_gbecc ;_gbecc ._bfdgf =_cdba ;return _gbecc ,nil ;case 5:_bccd ,_efbeb :=_cdddg (_fcfbe );if _efbeb !=nil {return nil ,_efbeb ;};_bccd .PdfShading =_gbecc ;_gbecc ._bfdgf =_bccd ;return _gbecc ,nil ;case 6:_bagege ,_bfgcg :=_faffc (_fcfbe );if _bfgcg !=nil {return nil ,_bfgcg ;};_bagege .PdfShading =_gbecc ;_gbecc ._bfdgf =_bagege ;return _gbecc ,nil ;case 7:_fbcce ,_bfce :=_aeaad (_fcfbe );if _bfce !=nil {return nil ,_bfce ;};_fbcce .PdfShading =_gbecc ;_gbecc ._bfdgf =_fbcce ;return _gbecc ,nil ;};return nil ,_ed .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// ToPdfObject implements interface PdfModel.
func (_fgbf *PdfBorderStyle )ToPdfObject ()_aec .PdfObject {_dafg :=_aec .MakeDict ();if _fgbf ._aefg !=nil {if _gefc ,_cbge :=_fgbf ._aefg .(*_aec .PdfIndirectObject );_cbge {_gefc .PdfObject =_dafg ;};};_dafg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));if _fgbf .W !=nil {_dafg .Set ("\u0057",_aec .MakeFloat (*_fgbf .W ));};if _fgbf .S !=nil {_dafg .Set ("\u0053",_aec .MakeName (_fgbf .S .GetPdfName ()));};if _fgbf .D !=nil {_dafg .Set ("\u0044",_aec .MakeArrayFromIntegers (*_fgbf .D ));};if _fgbf ._aefg !=nil {return _fgbf ._aefg ;};return _dafg ;};

// ToPdfObject implements interface PdfModel.
func (_dfa *PdfActionJavaScript )ToPdfObject ()_aec .PdfObject {_dfa .PdfAction .ToPdfObject ();_ccf :=_dfa ._gf ;_eed :=_ccf .PdfObject .(*_aec .PdfObjectDictionary );_eed .SetIfNotNil ("\u0053",_aec .MakeName (string (ActionTypeJavaScript )));_eed .SetIfNotNil ("\u004a\u0053",_dfa .JS );return _ccf ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_aec .PdfObjectDictionary )(*PdfPageResources ,error ){_fbfeg :=NewPdfPageResources ();if _gaeda :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_gaeda !=nil {_fbfeg .ExtGState =_gaeda ;};if _badcg :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");_badcg !=nil &&!_aec .IsNullObject (_badcg ){_fbfeg .ColorSpace =_badcg ;};if _dfacg :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_dfacg !=nil {_fbfeg .Pattern =_dfacg ;};if _dbcfee :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_dbcfee !=nil {_fbfeg .Shading =_dbcfee ;};if _gfda :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_gfda !=nil {_fbfeg .XObject =_gfda ;};if _bgbbae :=_aec .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_bgbbae !=nil {_fbfeg .Font =_bgbbae ;};if _gegbfb :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");_gegbfb !=nil {_fbfeg .ProcSet =_gegbfb ;};if _bbdcd :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_bbdcd !=nil {_fbfeg .Properties =_bbdcd ;};return _fbfeg ,nil ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _aec .PdfObject )(*PdfFilespec ,error ){_gcga :=&PdfFilespec {};var _gdgaa *_aec .PdfObjectDictionary ;if _adce ,_cgef :=_aec .GetIndirect (obj );_cgef {_gcga ._bfecg =_adce ;_dceb ,_gedbf :=_aec .GetDict (_adce .PdfObject );if !_gedbf {_de .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_aec .ErrTypeError ;};_gdgaa =_dceb ;}else if _geebg ,_aecbf :=_aec .GetDict (obj );_aecbf {_gcga ._bfecg =_geebg ;_gdgaa =_geebg ;}else {_de .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_aec .ErrTypeError ;};if _gdgaa ==nil {_de .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_ed .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _abfgc :=_gdgaa .Get ("\u0054\u0079\u0070\u0065");_abfgc !=nil {_abag ,_cagaf :=_abfgc .(*_aec .PdfObjectName );if !_cagaf {_de .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_abfgc );}else {if *_abag !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_de .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_abag );};};};if _ebda :=_gdgaa .Get ("\u0046\u0053");_ebda !=nil {_gcga .FS =_ebda ;};if _bfbde :=_gdgaa .Get ("\u0046");_bfbde !=nil {_gcga .F =_bfbde ;};if _ceed :=_gdgaa .Get ("\u0055\u0046");_ceed !=nil {_gcga .UF =_ceed ;};if _gcbbe :=_gdgaa .Get ("\u0044\u004f\u0053");_gcbbe !=nil {_gcga .DOS =_gcbbe ;};if _gbggg :=_gdgaa .Get ("\u004d\u0061\u0063");_gbggg !=nil {_gcga .Mac =_gbggg ;};if _ffdc :=_gdgaa .Get ("\u0055\u006e\u0069\u0078");_ffdc !=nil {_gcga .Unix =_ffdc ;};if _bcdf :=_gdgaa .Get ("\u0049\u0044");_bcdf !=nil {_gcga .ID =_bcdf ;};if _ggag :=_gdgaa .Get ("\u0056");_ggag !=nil {_gcga .V =_ggag ;};if _ebgd :=_gdgaa .Get ("\u0045\u0046");_ebgd !=nil {_gcga .EF =_ebgd ;};if _fffb :=_gdgaa .Get ("\u0052\u0046");_fffb !=nil {_gcga .RF =_fffb ;};if _eefec :=_gdgaa .Get ("\u0044\u0065\u0073\u0063");_eefec !=nil {_gcga .Desc =_eefec ;};if _aega :=_gdgaa .Get ("\u0043\u0049");_aega !=nil {_gcga .CI =_aega ;};return _gcga ,nil ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};func (_ffe *PdfReader )newPdfActionSetOCGStateFromDict (_gag *_aec .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_gag .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_gag .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_ccfb *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_gecd :=_bdd .NewReader (img .getBase ());_eefb :=_be .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_ccfb .AlternateSpace .GetNumComponents (),nil ,img ._aaaa ,nil );_cgfb :=_bdd .NewWriter (_eefb );_bfgbg :=_dc .Pow (2,float64 (img .BitsPerComponent ))-1;_de .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");_de .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_ccfb .TintTransform );_gdefc :=_ccfb .AlternateSpace .DecodeArray ();var (_bgff uint32 ;_bage error ;);for {_bgff ,_bage =_gecd .ReadSample ();if _bage ==_fb .EOF {break ;};if _bage !=nil {return img ,_bage ;};_daaa :=float64 (_bgff )/_bfgbg ;_efbd ,_fced :=_ccfb .TintTransform .Evaluate ([]float64 {_daaa });if _fced !=nil {return img ,_fced ;};for _ddad ,_feeeb :=range _efbd {_dbaa :=_be .LinearInterpolate (_feeeb ,_gdefc [_ddad *2],_gdefc [_ddad *2+1],0,1);if _fced =_cgfb .WriteSample (uint32 (_dbaa *_bfgbg ));_fced !=nil {return img ,_fced ;};};};return _ccfb .AlternateSpace .ImageToRGB (_ffefc (&_eefb ));};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_dgac *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _dgac .UnderlyingCS .GetNumComponents ();};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_ccb :=NewPdfAnnotation ();_faab :=&PdfAnnotationCaret {};_faab .PdfAnnotation =_ccb ;_faab .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ccb .SetContext (_faab );return _faab ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _aec .PdfObject ;Dest _aec .PdfObject ;H _aec .PdfObject ;PA _aec .PdfObject ;QuadPoints _aec .PdfObject ;BS _aec .PdfObject ;_bccc *PdfAction ;_bda *PdfReader ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_cgfeb *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _cgfeb .fill (provider ,appGen );};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_acgf *PdfAppender )UpdatePage (page *PdfPage ){_acgf .updateObjectsDeep (page .ToPdfObject (),nil )};func _beccf (_gfcec *_aec .PdfObjectDictionary )(*PdfShadingPattern ,error ){_cbdgbc :=&PdfShadingPattern {};_gfgef :=_gfcec .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _gfgef ==nil {_de .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_acgfc ,_abacd :=_ageaf (_gfgef );if _abacd !=nil {_de .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_abacd );return nil ,_abacd ;};_cbdgbc .Shading =_acgfc ;if _aegf :=_gfcec .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_aegf !=nil {_egbe ,_ccbf :=_aegf .(*_aec .PdfObjectArray );if !_ccbf {_de .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aegf );return nil ,_aec .ErrTypeError ;};_cbdgbc .Matrix =_egbe ;};if _aadg :=_gfcec .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_aadg !=nil {_cbdgbc .ExtGState =_aadg ;};return _cbdgbc ,nil ;};

// Encoder returns the font's text encoder.
func (_bgca *PdfFont )Encoder ()_cad .TextEncoder {_fbffe :=_bgca .actualFont ();if _fbffe ==nil {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_bgca ._gaga );return nil ;};return _fbffe .Encoder ();};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_bgac :=PdfColorDeviceRGB {r ,g ,b };return &_bgac ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _aec .PdfObject ;NewWindow _aec .PdfObject ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_gfbada pdfFontSimple )GetCharMetrics (code _cad .CharCode )(_ge .CharMetrics ,bool ){if _gaaa ,_faba :=_gfbada ._gcda [code ];_faba {return _ge .CharMetrics {Wx :_gaaa },true ;};if _ge .IsStdFont (_ge .StdFontName (_gfbada ._ecbb )){return _ge .CharMetrics {Wx :250},true ;};return _ge .CharMetrics {},false ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_ecaba *PdfFont )GetCharMetrics (code _cad .CharCode )(CharMetrics ,bool ){var _gbbeb _ge .CharMetrics ;switch _gdbdbg :=_ecaba ._gaga .(type ){case *pdfFontSimple :if _eecg ,_gffc :=_gdbdbg .GetCharMetrics (code );_gffc {return _eecg ,_gffc ;};case *pdfFontType0 :if _bfaa ,_fcgg :=_gdbdbg .GetCharMetrics (code );_fcgg {return _bfaa ,_fcgg ;};case *pdfCIDFontType0 :if _bdgeg ,_egded :=_gdbdbg .GetCharMetrics (code );_egded {return _bdgeg ,_egded ;};case *pdfCIDFontType2 :if _ccae ,_eacfa :=_gdbdbg .GetCharMetrics (code );_eacfa {return _ccae ,_eacfa ;};default:_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_ecaba ._gaga );return _gbbeb ,false ;};if _eccgag ,_gfagc :=_ecaba .GetFontDescriptor ();_gfagc ==nil &&_eccgag !=nil {return _ge .CharMetrics {Wx :_eccgag ._fbgbb },true ;};_de .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_ecaba );return _gbbeb ,false ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_aec .PdfObjectString ;Author *_aec .PdfObjectString ;Subject *_aec .PdfObjectString ;Keywords *_aec .PdfObjectString ;Creator *_aec .PdfObjectString ;Producer *_aec .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_aec .PdfObjectName ;};func (_ebagf *PdfReader )loadDSS ()(*DSS ,error ){if _ebagf ._adecd .GetCrypter ()!=nil &&!_ebagf ._adecd .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_dace :=_ebagf ._cded .Get ("\u0044\u0053\u0053");if _dace ==nil {return nil ,nil ;};_dafccd ,_ :=_aec .GetIndirect (_dace );_dace =_aec .TraceToDirectObject (_dace );switch _bffg :=_dace .(type ){case *_aec .PdfObjectNull :return nil ,nil ;case *_aec .PdfObjectDictionary :return _bgfe (_dafccd ,_bffg );};return nil ,_g .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_dace );};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_adad :=NewPdfAction ();_beg :=&PdfActionMovie {};_beg .PdfAction =_adad ;_adad .SetContext (_beg );return _beg ;};

// ToPdfObject implements interface PdfModel.
func (_aeeb *PdfAnnotationMovie )ToPdfObject ()_aec .PdfObject {_aeeb .PdfAnnotation .ToPdfObject ();_aaag :=_aeeb ._bcce ;_afdbd :=_aaag .PdfObject .(*_aec .PdfObjectDictionary );_afdbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u004d\u006f\u0076i\u0065"));_afdbd .SetIfNotNil ("\u0054",_aeeb .T );_afdbd .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_aeeb .Movie );_afdbd .SetIfNotNil ("\u0041",_aeeb .A );return _aaag ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_acff byte )byte ;

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_ffgbag *PdfOutlineTreeNode )GetContext ()PdfModel {if _dfgg ,_fdbb :=_ffgbag ._gdagc .(*PdfOutline );_fdbb {return _dfgg ;};if _aaea ,_geedb :=_ffgbag ._gdagc .(*PdfOutlineItem );_geedb {return _aaea ;};_de .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");return nil ;};func _eabfg (_gfgcf _aec .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_egcee :=NewPdfColorspaceSpecialIndexed ();if _gbcd ,_cbce :=_gfgcf .(*_aec .PdfIndirectObject );_cbce {_egcee ._cfcc =_gbcd ;};_gfgcf =_aec .TraceToDirectObject (_gfgcf );_acaf ,_bcgbc :=_gfgcf .(*_aec .PdfObjectArray );if !_bcgbc {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _acaf .Len ()!=4{return nil ,_g .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_gfgcf =_acaf .Get (0);_bafgc ,_bcgbc :=_gfgcf .(*_aec .PdfObjectName );if !_bcgbc {return nil ,_g .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_bafgc !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_g .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");};_gfgcf =_acaf .Get (1);_fcgcg ,_acgdc :=DetermineColorspaceNameFromPdfObject (_gfgcf );if _acgdc !=nil {return nil ,_acgdc ;};if _fcgcg =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_fcgcg =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_de .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_fcgcg );return nil ,_becba ;};_gceb ,_acgdc :=NewPdfColorspaceFromPdfObject (_gfgcf );if _acgdc !=nil {return nil ,_acgdc ;};_egcee .Base =_gceb ;_gfgcf =_acaf .Get (2);_dgcd ,_acgdc :=_aec .GetNumberAsInt64 (_gfgcf );if _acgdc !=nil {return nil ,_acgdc ;};if _dgcd > 255{return nil ,_g .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");};_egcee .HiVal =int (_dgcd );_gfgcf =_acaf .Get (3);_egcee .Lookup =_gfgcf ;_gfgcf =_aec .TraceToDirectObject (_gfgcf );var _fdfc []byte ;if _bbae ,_gfae :=_gfgcf .(*_aec .PdfObjectString );_gfae {_fdfc =_bbae .Bytes ();_de .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_fdfc );}else if _dbcce ,_aaga :=_gfgcf .(*_aec .PdfObjectStream );_aaga {_de .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_gfgcf .String ());_de .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_dbcce .Stream ),_dbcce .Stream );_agbc ,_bega :=_aec .DecodeStream (_dbcce );if _bega !=nil {return nil ,_bega ;};_de .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_agbc ),_agbc );_fdfc =_agbc ;}else {_de .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_gfgcf );return nil ,_g .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_fdfc )< _egcee .Base .GetNumComponents ()*(_egcee .HiVal +1){_de .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");_de .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_fdfc ),_egcee .Base .GetNumComponents (),_egcee .HiVal );}else {_fdfc =_fdfc [:_egcee .Base .GetNumComponents ()*(_egcee .HiVal +1)];};_egcee ._cebf =_fdfc ;return _egcee ,nil ;};func (_ceac *PdfReader )newPdfAnnotationUnderlineFromDict (_bcgf *_aec .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_aebc :=PdfAnnotationUnderline {};_fgbc ,_eccb :=_ceac .newPdfAnnotationMarkupFromDict (_bcgf );if _eccb !=nil {return nil ,_eccb ;};_aebc .PdfAnnotationMarkup =_fgbc ;_aebc .QuadPoints =_bcgf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_aebc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ebce *PdfFilespec )ToPdfObject ()_aec .PdfObject {_fcceg :=_ebce .getDict ();_fcceg .Clear ();_fcceg .Set ("\u0054\u0079\u0070\u0065",_aec .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_fcceg .SetIfNotNil ("\u0046\u0053",_ebce .FS );_fcceg .SetIfNotNil ("\u0046",_ebce .F );_fcceg .SetIfNotNil ("\u0055\u0046",_ebce .UF );_fcceg .SetIfNotNil ("\u0044\u004f\u0053",_ebce .DOS );_fcceg .SetIfNotNil ("\u004d\u0061\u0063",_ebce .Mac );_fcceg .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ebce .Unix );_fcceg .SetIfNotNil ("\u0049\u0044",_ebce .ID );_fcceg .SetIfNotNil ("\u0056",_ebce .V );_fcceg .SetIfNotNil ("\u0045\u0046",_ebce .EF );_fcceg .SetIfNotNil ("\u0052\u0046",_ebce .RF );_fcceg .SetIfNotNil ("\u0044\u0065\u0073\u0063",_ebce .Desc );_fcceg .SetIfNotNil ("\u0043\u0049",_ebce .CI );return _ebce ._bfecg ;};

// R returns the value of the red component of the color.
func (_aaagf *PdfColorDeviceRGB )R ()float64 {return _aaagf [0]};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_dfdd :=NewPdfAction ();_bbe :=&PdfActionSetOCGState {};_bbe .PdfAction =_dfdd ;_dfdd .SetContext (_bbe );return _bbe ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_bbgc PdfModel ;Type _aec .PdfObject ;S _aec .PdfObject ;Next _aec .PdfObject ;_gf *_aec .PdfIndirectObject ;};func (_gdac *PdfReader )newPdfActionThreadFromDict (_gfbc *_aec .PdfObjectDictionary )(*PdfActionThread ,error ){_dceg ,_bbf :=_ccfd (_gfbc .Get ("\u0046"));if _bbf !=nil {return nil ,_bbf ;};return &PdfActionThread {D :_gfbc .Get ("\u0044"),B :_gfbc .Get ("\u0042"),F :_dceg },nil ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_cdae *PdfPageResources )AddExtGState (gsName _aec .PdfObjectName ,gsDict _aec .PdfObject )error {if _cdae .ExtGState ==nil {_cdae .ExtGState =_aec .MakeDict ();};_accc :=_cdae .ExtGState ;_deddf ,_fdab :=_aec .TraceToDirectObject (_accc ).(*_aec .PdfObjectDictionary );if !_fdab {_de .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_accc ,_aec .TraceToDirectObject (_accc ));return _aec .ErrTypeError ;};_deddf .Set (gsName ,gsDict );return nil ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_fddfb *XObjectForm )GetContainingPdfObject ()_aec .PdfObject {return _fddfb ._fgddc };func (_gdae *fontFile )parseASCIIPart (_fbfg []byte )error {if len (_fbfg )< 2||string (_fbfg [:2])!="\u0025\u0021"{return _ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");};_cdeg ,_cfffd ,_bdfbb :=_dbabf (_fbfg );if _bdfbb !=nil {return _bdfbb ;};_cgeg :=_adfdd (_cdeg );_gdae ._fbefg =_cgeg ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _gdae ._fbefg ==""{_de .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");};if _cfffd !=""{_ecccc ,_ccbg :=_bcbg (_cfffd );if _ccbg !=nil {return _ccbg ;};_adfgg ,_ccbg :=_cad .NewCustomSimpleTextEncoder (_ecccc ,nil );if _ccbg !=nil {_de .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_ccbg );return nil ;};_gdae ._dcgb =_adfgg ;};return nil ;};func (_dedbd *PdfReader )newPdfAcroFormFromDict (_eddfe *_aec .PdfIndirectObject ,_cadfd *_aec .PdfObjectDictionary )(*PdfAcroForm ,error ){_efcef :=NewPdfAcroForm ();if _eddfe !=nil {_efcef ._dgdba =_eddfe ;_eddfe .PdfObject =_aec .MakeDict ();};if _gbgce :=_cadfd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_gbgce !=nil {_ggddf ,_adacd :=_aec .GetArray (_gbgce );if !_adacd {return nil ,_g .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_gbgce );};var _egabc []*PdfField ;for _ ,_abce :=range _ggddf .Elements (){_bade ,_dgcgc :=_aec .GetIndirect (_abce );if !_dgcgc {if _ ,_adbfb :=_abce .(*_aec .PdfObjectNull );_adbfb {_de .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");continue ;};_de .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_abce );return nil ,_g .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_caee ,_efceb :=_dedbd .newPdfFieldFromIndirectObject (_bade ,nil );if _efceb !=nil {return nil ,_efceb ;};_de .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_caee );_egabc =append (_egabc ,_caee );};_efcef .Fields =&_egabc ;};if _bdffb :=_cadfd .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_bdffb !=nil {_dgba ,_gfddg :=_aec .GetBool (_bdffb );if _gfddg {_efcef .NeedAppearances =_dgba ;}else {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_bdffb );};};if _faabc :=_cadfd .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_faabc !=nil {_dfdce ,_cbfbf :=_aec .GetInt (_faabc );if _cbfbf {_efcef .SigFlags =_dfdce ;}else {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_faabc );};};if _cffc :=_cadfd .Get ("\u0043\u004f");_cffc !=nil {_beccb ,_cbde :=_aec .GetArray (_cffc );if _cbde {_efcef .CO =_beccb ;}else {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_cffc );};};if _dfdgg :=_cadfd .Get ("\u0044\u0052");_dfdgg !=nil {if _cgeeed ,_edbc :=_aec .GetDict (_dfdgg );_edbc {_gdcgb ,_bfda :=NewPdfPageResourcesFromDict (_cgeeed );if _bfda !=nil {_de .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_bfda );return nil ,_bfda ;};_efcef .DR =_gdcgb ;}else {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_dfdgg );};};if _fbfge :=_cadfd .Get ("\u0044\u0041");_fbfge !=nil {_fcdb ,_dgege :=_aec .GetString (_fbfge );if _dgege {_efcef .DA =_fcdb ;}else {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fbfge );};};if _cfacb :=_cadfd .Get ("\u0051");_cfacb !=nil {_cbdgb ,_cgffc :=_aec .GetInt (_cfacb );if _cgffc {_efcef .Q =_cbdgb ;}else {_de .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_cfacb );};};if _ggdce :=_cadfd .Get ("\u0058\u0046\u0041");_ggdce !=nil {_efcef .XFA =_ggdce ;};return _efcef ,nil ;};

// PdfVersion returns version of the PDF file.
func (_dfdac *PdfReader )PdfVersion ()_aec .Version {return _dfdac ._adecd .PdfVersion ()};

// ImageToRGB convert an indexed image to RGB.
func (_fceaa *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_fceaa .Base .GetNumComponents ();if N < 1{return Image {},_g .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );};_dgbdg :=_be .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._aaaa ,img ._dbdfe );_gdga :=_bdd .NewReader (img .getBase ());_eacgf :=_bdd .NewWriter (_dgbdg );var (_gfcd uint32 ;_bedg int ;_aeed error ;);for {_gfcd ,_aeed =_gdga .ReadSample ();if _aeed ==_fb .EOF {break ;}else if _aeed !=nil {return img ,_aeed ;};_bedg =int (_gfcd );_de .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_bedg ,N ,len (_fceaa ._cebf ));if (_bedg +1)*N > len (_fceaa ._cebf ){_bedg =len (_fceaa ._cebf )/N -1;_de .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_bedg );if _bedg < 0{_de .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");break ;};};for _bbdga :=_bedg *N ;_bbdga < (_bedg +1)*N ;_bbdga ++{if _aeed =_eacgf .WriteSample (uint32 (_fceaa ._cebf [_bbdga ]));_aeed !=nil {return img ,_aeed ;};};};return _fceaa .Base .ImageToRGB (_ffefc (&_dgbdg ));};type pdfFontType0 struct{fontCommon ;_aead *_aec .PdfIndirectObject ;_cdab _cad .TextEncoder ;Encoding _aec .PdfObject ;DescendantFont *PdfFont ;_fdcf *_fa .CMap ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_bafbcb *PdfFieldButton )GetType ()ButtonType {_gagfc :=ButtonTypeCheckbox ;if _bafbcb .Ff !=nil {if (uint32 (*_bafbcb .Ff )&FieldFlagPushbutton .Mask ())> 0{_gagfc =ButtonTypePush ;}else if (uint32 (*_bafbcb .Ff )&FieldFlagRadio .Mask ())> 0{_gagfc =ButtonTypeRadio ;};};return _gagfc ;};func (_edeff *PdfFilespec )getDict ()*_aec .PdfObjectDictionary {if _gdfg ,_dfgb :=_edeff ._bfecg .(*_aec .PdfIndirectObject );_dfgb {_gbcc ,_degbb :=_gdfg .PdfObject .(*_aec .PdfObjectDictionary );if !_degbb {return nil ;};return _gbcc ;}else if _bagc ,_aeae :=_edeff ._bfecg .(*_aec .PdfObjectDictionary );_aeae {return _bagc ;}else {_de .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_edeff ._bfecg );return nil ;};};

// ToPdfObject implements interface PdfModel.
func (_cge *PdfAnnotationProjection )ToPdfObject ()_aec .PdfObject {_cge .PdfAnnotation .ToPdfObject ();_dgbdc :=_cge ._bcce ;_agg :=_dgbdc .PdfObject .(*_aec .PdfObjectDictionary );_cge .PdfAnnotationMarkup .appendToPdfDictionary (_agg );return _dgbdc ;};

// ToPdfObject implements interface PdfModel.
func (_fbg *PdfAnnotation3D )ToPdfObject ()_aec .PdfObject {_fbg .PdfAnnotation .ToPdfObject ();_ggbc :=_fbg ._bcce ;_fece :=_ggbc .PdfObject .(*_aec .PdfObjectDictionary );_fece .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0033\u0044"));_fece .SetIfNotNil ("\u0033\u0044\u0044",_fbg .T3DD );_fece .SetIfNotNil ("\u0033\u0044\u0056",_fbg .T3DV );_fece .SetIfNotNil ("\u0033\u0044\u0041",_fbg .T3DA );_fece .SetIfNotNil ("\u0033\u0044\u0049",_fbg .T3DI );_fece .SetIfNotNil ("\u0033\u0044\u0042",_fbg .T3DB );return _ggbc ;};func (_dcg *PdfReader )newPdfAnnotationHighlightFromDict (_dcb *_aec .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_bbd :=PdfAnnotationHighlight {};_fgcd ,_dcca :=_dcg .newPdfAnnotationMarkupFromDict (_dcb );if _dcca !=nil {return nil ,_dcca ;};_bbd .PdfAnnotationMarkup =_fgcd ;_bbd .QuadPoints =_dcb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bbd ,nil ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_efbf *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _efbf .Alternate ==nil {_de .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _efbf .N ==1{_de .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_ageff :=NewPdfColorspaceDeviceGray ();return _ageff .ColorToRGB (color );}else if _efbf .N ==3{_de .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return color ,nil ;}else if _efbf .N ==4{_de .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_fcde :=NewPdfColorspaceDeviceCMYK ();return _fcde .ColorToRGB (color );}else {return nil ,_ed .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_de .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_efbf );return _efbf .Alternate .ColorToRGB (color );};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_gcdf *_aec .PdfIndirectObject ;Certs []*_aec .PdfObjectStream ;OCSPs []*_aec .PdfObjectStream ;CRLs []*_aec .PdfObjectStream ;VRI map[string ]*VRI ;_ggaed map[string ]*_aec .PdfObjectStream ;_eecb map[string ]*_aec .PdfObjectStream ;_ccfba map[string ]*_aec .PdfObjectStream ;};func _dbcc (_gcbb _aec .PdfObject )(*PdfColorspaceCalGray ,error ){_bae :=NewPdfColorspaceCalGray ();if _gaae ,_aceg :=_gcbb .(*_aec .PdfIndirectObject );_aceg {_bae ._cdcb =_gaae ;};_gcbb =_aec .TraceToDirectObject (_gcbb );_eaad ,_gbdf :=_gcbb .(*_aec .PdfObjectArray );if !_gbdf {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _eaad .Len ()!=2{return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_gcbb =_aec .TraceToDirectObject (_eaad .Get (0));_fgba ,_gbdf :=_gcbb .(*_aec .PdfObjectName );if !_gbdf {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_fgba !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_g .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_gcbb =_aec .TraceToDirectObject (_eaad .Get (1));_eefed ,_gbdf :=_gcbb .(*_aec .PdfObjectDictionary );if !_gbdf {return nil ,_g .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};_gcbb =_eefed .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_gcbb =_aec .TraceToDirectObject (_gcbb );_faeg ,_gbdf :=_gcbb .(*_aec .PdfObjectArray );if !_gbdf {return nil ,_g .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");};if _faeg .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_beag ,_efga :=_faeg .GetAsFloat64Slice ();if _efga !=nil {return nil ,_efga ;};_bae .WhitePoint =_beag ;_gcbb =_eefed .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gcbb !=nil {_gcbb =_aec .TraceToDirectObject (_gcbb );_abbe ,_befa :=_gcbb .(*_aec .PdfObjectArray );if !_befa {return nil ,_g .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _abbe .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_cddf ,_beeb :=_abbe .GetAsFloat64Slice ();if _beeb !=nil {return nil ,_beeb ;};_bae .BlackPoint =_cddf ;};_gcbb =_eefed .Get ("\u0047\u0061\u006dm\u0061");if _gcbb !=nil {_gcbb =_aec .TraceToDirectObject (_gcbb );_ccda ,_fcgcf :=_aec .GetNumberAsFloat (_gcbb );if _fcgcf !=nil {return nil ,_g .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_bae .Gamma =_ccda ;};return _bae ,nil ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};func (_beea *PdfAppender )replaceObject (_fabc ,_dgd _aec .PdfObject ){switch _fgca :=_fabc .(type ){case *_aec .PdfIndirectObject :_beea ._gga [_dgd ]=_fgca .ObjectNumber ;case *_aec .PdfObjectStream :_beea ._gga [_dgd ]=_fgca .ObjectNumber ;};};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_bebaa *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_fgfg ,_ddegf :=color .(*PdfColorCalRGB );if !_ddegf {_de .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bbfa :=_fgfg .A ();_gegbf :=_fgfg .B ();_ebgb :=_fgfg .C ();X :=_bebaa .Matrix [0]*_dc .Pow (_bbfa ,_bebaa .Gamma [0])+_bebaa .Matrix [3]*_dc .Pow (_gegbf ,_bebaa .Gamma [1])+_bebaa .Matrix [6]*_dc .Pow (_ebgb ,_bebaa .Gamma [2]);Y :=_bebaa .Matrix [1]*_dc .Pow (_bbfa ,_bebaa .Gamma [0])+_bebaa .Matrix [4]*_dc .Pow (_gegbf ,_bebaa .Gamma [1])+_bebaa .Matrix [7]*_dc .Pow (_ebgb ,_bebaa .Gamma [2]);Z :=_bebaa .Matrix [2]*_dc .Pow (_bbfa ,_bebaa .Gamma [0])+_bebaa .Matrix [5]*_dc .Pow (_gegbf ,_bebaa .Gamma [1])+_bebaa .Matrix [8]*_dc .Pow (_ebgb ,_bebaa .Gamma [2]);_aeec :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dgge :=-0.969256*X +1.875992*Y +0.041556*Z ;_eabb :=0.055648*X +-0.204043*Y +1.057311*Z ;_aeec =_dc .Min (_dc .Max (_aeec ,0),1.0);_dgge =_dc .Min (_dc .Max (_dgge ,0),1.0);_eabb =_dc .Min (_dc .Max (_eabb ,0),1.0);return NewPdfColorDeviceRGB (_aeec ,_dgge ,_eabb ),nil ;};

// L returns the value of the L component of the color.
func (_abfd *PdfColorLab )L ()float64 {return _abfd [0]};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// Encoder returns the font's text encoder.
func (_dgdc pdfCIDFontType0 )Encoder ()_cad .TextEncoder {return _dgdc ._afbb };const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_aecbg :=&PdfColorspaceCalRGB {};_aecbg .BlackPoint =[]float64 {0.0,0.0,0.0};_aecbg .Gamma =[]float64 {1.0,1.0,1.0};_aecbg .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _aecbg ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_gecbb *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _gecbb ._ebfbfb ==nil {_gecbb ._ebfbfb =_ae .NewPSExecutor (_gecbb .Program );};var _fcfde []_ae .PSObject ;for _ ,_ceccb :=range xVec {_fcfde =append (_fcfde ,_ae .MakeReal (_ceccb ));};_beafb ,_efbdg :=_gecbb ._ebfbfb .Execute (_fcfde );if _efbdg !=nil {return nil ,_efbdg ;};_fbfa ,_efbdg :=_ae .PSObjectArrayToFloat64Array (_beafb );if _efbdg !=nil {return nil ,_efbdg ;};return _fbfa ,nil ;};func (_ebfbf *PdfAcroForm )fill (_gfdbg FieldValueProvider ,_fgfae FieldAppearanceGenerator )error {if _ebfbf ==nil {return nil ;};_dacc ,_aaef :=_gfdbg .FieldValues ();if _aaef !=nil {return _aaef ;};for _ ,_fbcf :=range _ebfbf .AllFields (){_daff :=_fbcf .PartialName ();_dfced ,_ffbeg :=_dacc [_daff ];if !_ffbeg {if _aeadg ,_ggcge :=_fbcf .FullName ();_ggcge ==nil {_dfced ,_ffbeg =_dacc [_aeadg ];};};if !_ffbeg {_de .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_daff );continue ;};if _edgba :=_gafba (_fbcf ,_dfced );_edgba !=nil {return _edgba ;};if _fgfae ==nil {continue ;};for _ ,_bffc :=range _fbcf .Annotations {_dffd ,_ebfed :=_fgfae .GenerateAppearanceDict (_ebfbf ,_fbcf ,_bffc );if _ebfed !=nil {return _ebfed ;};_bffc .AP =_dffd ;_bffc .ToPdfObject ();};};return nil ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_aec .PdfObjectBool ;SigFlags *_aec .PdfObjectInteger ;CO *_aec .PdfObjectArray ;DR *PdfPageResources ;DA *_aec .PdfObjectString ;Q *_aec .PdfObjectInteger ;XFA _aec .PdfObject ;_dgdba *_aec .PdfIndirectObject ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_cdf *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_deeb :=PdfColorCalRGB {a ,b ,c };return &_deeb ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _aec .StreamEncoder ;FormType _aec .PdfObject ;BBox _aec .PdfObject ;Matrix _aec .PdfObject ;Resources *PdfPageResources ;Group _aec .PdfObject ;Ref _aec .PdfObject ;MetaData _aec .PdfObject ;PieceInfo _aec .PdfObject ;LastModified _aec .PdfObject ;StructParent _aec .PdfObject ;StructParents _aec .PdfObject ;OPI _aec .PdfObject ;OC _aec .PdfObject ;Name _aec .PdfObject ;

// Stream data.
Stream []byte ;_fgddc *_aec .PdfObjectStream ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_abde *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _abde .RunesToCharcodeBytes ([]rune (str ));};

// ToPdfObject returns the PDF representation of the pattern.
func (_abfbb *PdfPattern )ToPdfObject ()_aec .PdfObject {_gdddc :=_abfbb .getDict ();_gdddc .Set ("\u0054\u0079\u0070\u0065",_aec .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_gdddc .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_aec .MakeInteger (_abfbb .PatternType ));return _abfbb ._aabdf ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_gbce *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _gbce .Alternate ==nil {if _gbce .N ==1{_dbfg :=NewPdfColorspaceDeviceGray ();return _dbfg .ColorFromFloats (vals );}else if _gbce .N ==3{_cdce :=NewPdfColorspaceDeviceRGB ();return _cdce .ColorFromFloats (vals );}else if _gbce .N ==4{_bfec :=NewPdfColorspaceDeviceCMYK ();return _bfec .ColorFromFloats (vals );}else {return nil ,_ed .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _gbce .Alternate .ColorFromFloats (vals );};

// ToPdfObject implements interface PdfModel.
func (_eag *PdfActionGoToR )ToPdfObject ()_aec .PdfObject {_eag .PdfAction .ToPdfObject ();_dg :=_eag ._gf ;_aebg :=_dg .PdfObject .(*_aec .PdfObjectDictionary );_aebg .SetIfNotNil ("\u0053",_aec .MakeName (string (ActionTypeGoToR )));if _eag .F !=nil {_aebg .Set ("\u0046",_eag .F .ToPdfObject ());};_aebg .SetIfNotNil ("\u0044",_eag .D );_aebg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_eag .NewWindow );return _dg ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_adfc *PdfAnnotation )GetContext ()PdfModel {if _adfc ==nil {return nil ;};return _adfc ._debf ;};func (_bbagg *LTV )validateSig (_bcag *PdfSignature )error {if _bcag ==nil ||_bcag .Contents ==nil ||len (_bcag .Contents .Bytes ())==0{return _g .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_bcag );};return nil ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_age :=NewPdfAnnotation ();_gbc :=&PdfAnnotationText {};_gbc .PdfAnnotation =_age ;_gbc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_age .SetContext (_gbc );return _gbc ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_bbfc []byte ;_adcd []uint32 ;_cbdee *_aec .PdfObjectStream ;};func _adfdd (_cgde string )map[string ]string {_fcdecd :=_bgfff .Split (_cgde ,-1);_gcbba :=map[string ]string {};for _ ,_ggdfc :=range _fcdecd {_acac :=_aegd .FindStringSubmatch (_ggdfc );if _acac ==nil {continue ;};_dbbf ,_agefg :=_acac [1],_acac [2];_gcbba [_dbbf ]=_agefg ;};return _gcbba ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _aec .PdfObject ;};

// GetSubFilter returns SubFilter value or empty string.
func (_dgeb *pdfSignDictionary )GetSubFilter ()string {_gfaa :=_dgeb .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _gfaa ==nil {return "";};if _fcffd ,_dfeca :=_aec .GetNameVal (_gfaa );_dfeca {return _fcffd ;};return "";};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_bbgcb *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_aec .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfefc ,_dabf :=_aec .GetNumbersAsFloat (objects );if _dabf !=nil {return nil ,_dabf ;};return _bbgcb .ColorFromFloats (_bfefc );};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_aec .PdfObjectString ;Q *_aec .PdfObjectInteger ;DS *_aec .PdfObjectString ;RV _aec .PdfObject ;MaxLen *_aec .PdfObjectInteger ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_ebcb *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_gegbd :=_bdd .NewReader (img .getBase ());_aabe :=_be .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_cgede :=_bdd .NewWriter (_aabe );_cfcfe :=_dc .Pow (2,float64 (img .BitsPerComponent ))-1;_fcdda :=make ([]uint32 ,3);var (_fbbd error ;_ddggc ,_decf ,_dagcb ,_gcbfa ,_bggf ,_gcfb float64 ;);for {_fbbd =_gegbd .ReadSamples (_fcdda );if _fbbd ==_fb .EOF {break ;}else if _fbbd !=nil {return img ,_fbbd ;};_ddggc =float64 (_fcdda [0])/_cfcfe ;_decf =float64 (_fcdda [1])/_cfcfe ;_dagcb =float64 (_fcdda [2])/_cfcfe ;_gcbfa =_ebcb .Matrix [0]*_dc .Pow (_ddggc ,_ebcb .Gamma [0])+_ebcb .Matrix [3]*_dc .Pow (_decf ,_ebcb .Gamma [1])+_ebcb .Matrix [6]*_dc .Pow (_dagcb ,_ebcb .Gamma [2]);_bggf =_ebcb .Matrix [1]*_dc .Pow (_ddggc ,_ebcb .Gamma [0])+_ebcb .Matrix [4]*_dc .Pow (_decf ,_ebcb .Gamma [1])+_ebcb .Matrix [7]*_dc .Pow (_dagcb ,_ebcb .Gamma [2]);_gcfb =_ebcb .Matrix [2]*_dc .Pow (_ddggc ,_ebcb .Gamma [0])+_ebcb .Matrix [5]*_dc .Pow (_decf ,_ebcb .Gamma [1])+_ebcb .Matrix [8]*_dc .Pow (_dagcb ,_ebcb .Gamma [2]);_ddggc =3.240479*_gcbfa +-1.537150*_bggf +-0.498535*_gcfb ;_decf =-0.969256*_gcbfa +1.875992*_bggf +0.041556*_gcfb ;_dagcb =0.055648*_gcbfa +-0.204043*_bggf +1.057311*_gcfb ;_ddggc =_dc .Min (_dc .Max (_ddggc ,0),1.0);_decf =_dc .Min (_dc .Max (_decf ,0),1.0);_dagcb =_dc .Min (_dc .Max (_dagcb ,0),1.0);_fcdda [0]=uint32 (_ddggc *_cfcfe );_fcdda [1]=uint32 (_decf *_cfcfe );_fcdda [2]=uint32 (_dagcb *_cfcfe );if _fbbd =_cgede .WriteSamples (_fcdda );_fbbd !=nil {return img ,_fbbd ;};};return _ffefc (&_aabe ),nil ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_aec .PdfObjectInteger ;BitsPerComponent *_aec .PdfObjectInteger ;BitsPerFlag *_aec .PdfObjectInteger ;Decode *_aec .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _d .Time )(PdfDate ,error ){_dgdf :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_acfffg ,_ :=_da .ParseInt (_dgdf [1:3],10,32);_fggdb ,_ :=_da .ParseInt (_dgdf [4:6],10,32);return PdfDate {_aegdg :int64 (timeObj .Year ()),_fddeg :int64 (timeObj .Month ()),_gcfga :int64 (timeObj .Day ()),_fcedg :int64 (timeObj .Hour ()),_dgbfe :int64 (timeObj .Minute ()),_ccaf :int64 (timeObj .Second ()),_gbfeg :_dgdf [0],_cdagg :_acfffg ,_bebd :_fggdb },nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dead pdfCIDFontType2 )GetRuneMetrics (r rune )(_ge .CharMetrics ,bool ){_bbfac ,_ccaga :=_dead ._ffgec [r ];if !_ccaga {_bbbf ,_fgbeb :=_aec .GetInt (_dead .DW );if !_fgbeb {return _ge .CharMetrics {},false ;};_bbfac =int (*_bbbf );};return _ge .CharMetrics {Wx :float64 (_bbfac )},true ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_dfece *PdfFont )CharcodesToUnicodeWithStats (charcodes []_cad .CharCode )(_beec []rune ,_dcfc ,_abeaff int ){_adegd ,_dcfc ,_abeaff :=_dfece .CharcodesToStrings (charcodes );return []rune (_ee .Join (_adegd ,"")),_dcfc ,_abeaff ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_bcgga *PdfColorspaceLab )GetNumComponents ()int {return 3};func _dfcfcf ()*modelManager {_cfbad :=modelManager {};_cfbad ._adefe =map[PdfModel ]_aec .PdfObject {};_cfbad ._gdda =map[_aec .PdfObject ]PdfModel {};return &_cfbad ;};

// PartialName returns the partial name of the field.
func (_gdgf *PdfField )PartialName ()string {_beab :="";if _gdgf .T !=nil {_beab =_gdgf .T .Decoded ();}else {_de .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");};return _beab ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_bgbb :=PdfColorCalGray (grayVal );return &_bgbb ;};func _gaef (_cdcd _aec .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_de .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_cdcd .String (),_cdcd );_bdag :=NewPdfColorspaceSpecialPattern ();if _cdfb ,_bceeb :=_cdcd .(*_aec .PdfIndirectObject );_bceeb {_bdag ._eeagb =_cdfb ;};_cdcd =_aec .TraceToDirectObject (_cdcd );if _dbfa ,_ffgg :=_cdcd .(*_aec .PdfObjectName );_ffgg {if *_dbfa !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_g .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};return _bdag ,nil ;};_afea ,_eagae :=_cdcd .(*_aec .PdfObjectArray );if !_eagae {_de .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_cdcd );return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _afea .Len ()!=1&&_afea .Len ()!=2{_de .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_afea );return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_cdcd =_afea .Get (0);if _dgcgg ,_geac :=_cdcd .(*_aec .PdfObjectName );_geac {if *_dgcgg !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_de .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_dgcgg );return nil ,_g .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _afea .Len ()> 1{_cdcd =_afea .Get (1);_cdcd =_aec .TraceToDirectObject (_cdcd );_dagf ,_ffagd :=NewPdfColorspaceFromPdfObject (_cdcd );if _ffagd !=nil {return nil ,_ffagd ;};_bdag .UnderlyingCS =_dagf ;};_de .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_bdag .UnderlyingCS );return _bdag ,nil ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_agba *PdfPattern )GetContainingPdfObject ()_aec .PdfObject {return _agba ._aabdf };

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_eaff *PdfReader )GetObjectNums ()[]int {return _eaff ._adecd .GetObjectNums ()};

// ToPdfObject implements interface PdfModel.
func (_gfgb *PdfActionRendition )ToPdfObject ()_aec .PdfObject {_gfgb .PdfAction .ToPdfObject ();_cac :=_gfgb ._gf ;_aa :=_cac .PdfObject .(*_aec .PdfObjectDictionary );_aa .SetIfNotNil ("\u0053",_aec .MakeName (string (ActionTypeRendition )));_aa .SetIfNotNil ("\u0052",_gfgb .R );_aa .SetIfNotNil ("\u0041\u004e",_gfgb .AN );_aa .SetIfNotNil ("\u004f\u0050",_gfgb .OP );_aa .SetIfNotNil ("\u004a\u0053",_gfgb .JS );return _cac ;};

// Fill populates `form` with values provided by `provider`.
func (_gaadb *PdfAcroForm )Fill (provider FieldValueProvider )error {return _gaadb .fill (provider ,nil )};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_aec .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_aec .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_aec .PdfObjectBool ;_bfdgf PdfModel ;_cecd _aec .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_fgcf *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgfa :=vals [0];if _cgfa < 0.0||_cgfa > 1.0{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgaa :=vals [1];if _dgaa < 0.0||_dgaa > 1.0{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afga :=vals [2];if _afga < 0.0||_afga > 1.0{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffee :=NewPdfColorCalRGB (_cgfa ,_dgaa ,_afga );return _ffee ,nil ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_dcffc :=PdfColorLab {l ,a ,b };return &_dcffc };

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_bafbc *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _aaec []float64 ;for _dafeb :=0;_dafeb < _bafbc .GetNumComponents ();_dafeb ++{_aaec =append (_aaec ,0.0,1.0);};return _aaec ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _aec .PdfObject ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_egecf *PdfPage )GetPageAsIndirectObject ()*_aec .PdfIndirectObject {return _egecf ._aggfc };

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_aec .PdfObjectStream ;Data []byte ;_bfaec *_aec .PdfIndirectObject ;_cggg *_aec .PdfObjectStream ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_gfbce *PdfPage )AddExtGState (name _aec .PdfObjectName ,egs *_aec .PdfObjectDictionary )error {if _gfbce .Resources ==nil {_gfbce .Resources =NewPdfPageResources ();};if _gfbce .Resources .ExtGState ==nil {_gfbce .Resources .ExtGState =_aec .MakeDict ();};_fcab ,_bfeggc :=_aec .TraceToDirectObject (_gfbce .Resources .ExtGState ).(*_aec .PdfObjectDictionary );if !_bfeggc {_de .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_aec .TraceToDirectObject (_gfbce .Resources .ExtGState ));return _ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fcab .Set (name ,egs );return nil ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_afdbg *LTV )Enable (sig *PdfSignature ,extraCerts []*_ad .Certificate )error {if _ffaga :=_afdbg .validateSig (sig );_ffaga !=nil {return _ffaga ;};_agabb ,_fecg :=_afdbg .generateVRIKey (sig );if _fecg !=nil {return _fecg ;};if _ ,_gacce :=_afdbg ._gbda .VRI [_agabb ];_gacce &&_afdbg .SkipExisting {return nil ;};_fgea ,_fecg :=sig .GetCerts ();if _fecg !=nil {return _fecg ;};return _afdbg .enable (_fgea ,extraCerts ,_agabb );};

// String returns a string representation of the field.
func (_gbbe *PdfField )String ()string {if _bcccg ,_gfe :=_gbbe .ToPdfObject ().(*_aec .PdfIndirectObject );_gfe {return _g .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_gbbe ._ccegg ,_bcccg .PdfObject .String ());};return "";};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_gdbdf *pdfFontSimple )SetEncoder (encoder _cad .TextEncoder ){_gdbdf ._bfdb =encoder };

// IsColored specifies if the pattern is colored.
func (_ggeee *PdfTilingPattern )IsColored ()bool {if _ggeee .PaintType !=nil &&*_ggeee .PaintType ==1{return true ;};return false ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };func (_bbba *PdfReader )newPdfAnnotationScreenFromDict (_fbaf *_aec .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_bafcd :=PdfAnnotationScreen {};_bafcd .T =_fbaf .Get ("\u0054");_bafcd .MK =_fbaf .Get ("\u004d\u004b");_bafcd .A =_fbaf .Get ("\u0041");_bafcd .AA =_fbaf .Get ("\u0041\u0041");return &_bafcd ,nil ;};type fontCommon struct{_ecbb string ;_daed string ;_cbda string ;_bcfaa _aec .PdfObject ;_bgae *_fa .CMap ;_dabc *PdfFontDescriptor ;_ddee int64 ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _aec .PdfObject ;};func (_adgga *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _adgga ._adecd .GetCrypter ()!=nil &&!_adgga ._adecd .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_dgbad :=_adgga ._cded ;_ffcb :=_dgbad .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _ffcb ==nil {return nil ,nil ;};_fgecd ,_ :=_aec .GetIndirect (_ffcb );_ffcb =_aec .TraceToDirectObject (_ffcb );if _aec .IsNullObject (_ffcb ){_de .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");return nil ,nil ;};_dddgg ,_cedfe :=_aec .GetDict (_ffcb );if !_cedfe {_de .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_ffcb );_de .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_ffcb );};_de .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");_de .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_adgga ._dfga {_cefa :=_adgga .traverseObjectData (_dddgg );if _cefa !=nil {_de .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_cefa );return nil ,_cefa ;};};_gdbdd ,_eged :=_adgga .newPdfAcroFormFromDict (_fgecd ,_dddgg );if _eged !=nil {return nil ,_eged ;};return _gdbdd ,nil ;};func (_ebag *PdfReader )newPdfActionRenditionFromDict (_cae *_aec .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_cae .Get ("\u0052"),AN :_cae .Get ("\u0041\u004e"),OP :_cae .Get ("\u004f\u0050"),JS :_cae .Get ("\u004a\u0053")},nil ;};

// Val returns the value of the color.
func (_gadb *PdfColorCalGray )Val ()float64 {return float64 (*_gadb )};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_aec .PdfObjectArray ;Matrix *_aec .PdfObjectArray ;Function []PdfFunction ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_aace *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _aec .PdfObject ;Name _aec .PdfObject ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_aaagb :=map[rune ]int {};for _ ,_afbfgc :=range text {_aaagb [_afbfgc ]++;};return _aaagb ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_gbd :=NewPdfAction ();_ab :=&PdfActionGoToE {};_ab .PdfAction =_gbd ;_gbd .SetContext (_ab );return _ab ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_eeec *PdfReader )Inspect ()(map[string ]int ,error ){return _eeec ._adecd .Inspect ()};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_gfg :=&PdfAction {};_gfg ._gf =_aec .MakeIndirectObject (_aec .MakeDict ());return _gfg ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_bdfe *PdfAppender )UpdateObject (obj _aec .PdfObject ){_bdfe .replaceObject (obj ,obj );if _ ,_abgb :=_bdfe ._bdcg [obj ];!_abgb {_bdfe ._ddf =append (_bdfe ._ddf ,obj );_bdfe ._bdcg [obj ]=struct{}{};};};func _cdddf ()_d .Time {_aecee .Lock ();defer _aecee .Unlock ();return _bbbc };func (_cfcf *PdfReader )loadAction (_gegb _aec .PdfObject )(*PdfAction ,error ){if _bed ,_bag :=_aec .GetIndirect (_gegb );_bag {_egd ,_bdbb :=_cfcf .newPdfActionFromIndirectObject (_bed );if _bdbb !=nil {return nil ,_bdbb ;};return _egd ,nil ;}else if !_aec .IsNullObject (_gegb ){return nil ,_ed .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};return nil ,nil ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_dfgd :=PdfWriter {};_dfgd ._gbfef =map[_aec .PdfObject ]struct{}{};_dfgd ._begcc =[]_aec .PdfObject {};_dfgd ._cddcc =map[_aec .PdfObject ][]*_aec .PdfObjectDictionary {};_dfgd ._aegg =map[_aec .PdfObject ]struct{}{};_dfgd ._cfbcgf =1;_dfgd ._gcfdc =3;_ddbdf :=_aec .MakeDict ();_egaa :=[]struct{_fgdac _aec .PdfObjectName ;_bbdgac string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_fggcd ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_debfd ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_agcab ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_bgagc ()},{"\u0054\u0069\u0074l\u0065",_abfbc ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_cdeeg ()}};for _ ,_edbfa :=range _egaa {if _edbfa ._bbdgac !=""{_ddbdf .Set (_edbfa ._fgdac ,_aec .MakeString (_edbfa ._bbdgac ));};};if _caged :=_cdddf ();!_caged .IsZero (){if _bacf ,_eafae :=NewPdfDateFromTime (_caged );_eafae ==nil {_ddbdf .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bacf .ToPdfObject ());};};if _dafca :=_agcea ();!_dafca .IsZero (){if _cccaf ,_aadbea :=NewPdfDateFromTime (_dafca );_aadbea ==nil {_ddbdf .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_cccaf .ToPdfObject ());};};_ecfeg :=_aec .PdfIndirectObject {};_ecfeg .PdfObject =_ddbdf ;_dfgd ._gcffc =&_ecfeg ;_dfgd .addObject (&_ecfeg );_cabaf :=_aec .PdfIndirectObject {};_fdba :=_aec .MakeDict ();_fdba .Set ("\u0054\u0079\u0070\u0065",_aec .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_cabaf .PdfObject =_fdba ;_dfgd ._adgb =&_cabaf ;_dfgd .addObject (_dfgd ._adgb );_babbae :=_aec .PdfIndirectObject {};_gfgeg :=_aec .MakeDict ();_gfgeg .Set ("\u0054\u0079\u0070\u0065",_aec .MakeName ("\u0050\u0061\u0067e\u0073"));_dacff :=_aec .PdfObjectArray {};_gfgeg .Set ("\u004b\u0069\u0064\u0073",&_dacff );_gfgeg .Set ("\u0043\u006f\u0075n\u0074",_aec .MakeInteger (0));_babbae .PdfObject =_gfgeg ;_dfgd ._beca =&_babbae ;_dfgd ._dgee =map[_aec .PdfObject ]struct{}{};_dfgd .addObject (_dfgd ._beca );_fdba .Set ("\u0050\u0061\u0067e\u0073",&_babbae );_dfgd ._beffcb =_fdba ;_de .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_cabaf );return _dfgd ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_aggfe *PdfShadingType5 )ToPdfObject ()_aec .PdfObject {_aggfe .PdfShading .ToPdfObject ();_aafbe ,_bgefc :=_aggfe .getShadingDict ();if _bgefc !=nil {_de .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _aggfe .BitsPerCoordinate !=nil {_aafbe .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_aggfe .BitsPerCoordinate );};if _aggfe .BitsPerComponent !=nil {_aafbe .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aggfe .BitsPerComponent );};if _aggfe .VerticesPerRow !=nil {_aafbe .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_aggfe .VerticesPerRow );};if _aggfe .Decode !=nil {_aafbe .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_aggfe .Decode );};if _aggfe .Function !=nil {if len (_aggfe .Function )==1{_aafbe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aggfe .Function [0].ToPdfObject ());}else {_dceded :=_aec .MakeArray ();for _ ,_baacc :=range _aggfe .Function {_dceded .Append (_baacc .ToPdfObject ());};_aafbe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dceded );};};return _aggfe ._cecd ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_dfcce *PdfColorspaceSpecialIndexed )ToPdfObject ()_aec .PdfObject {_fedac :=_aec .MakeArray (_aec .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_fedac .Append (_dfcce .Base .ToPdfObject ());_fedac .Append (_aec .MakeInteger (int64 (_dfcce .HiVal )));_fedac .Append (_dfcce .Lookup );if _dfcce ._cfcc !=nil {_dfcce ._cfcc .PdfObject =_fedac ;return _dfcce ._cfcc ;};return _fedac ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_bfdg *PdfPageResources )ToPdfObject ()_aec .PdfObject {_aebd :=_bfdg ._cecb ;_aebd .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bfdg .ExtGState );if _bfdg ._cfbaf !=nil {_bfdg .ColorSpace =_bfdg ._cfbaf .ToPdfObject ();};_aebd .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_bfdg .ColorSpace );_aebd .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_bfdg .Pattern );_aebd .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bfdg .Shading );_aebd .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_bfdg .XObject );_aebd .SetIfNotNil ("\u0046\u006f\u006e\u0074",_bfdg .Font );_aebd .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_bfdg .ProcSet );_aebd .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_bfdg .Properties );return _aebd ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_aaaa []byte ;_dbdfe []float64 ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_aecee .Lock ();defer _aecee .Unlock ();_eeaag =creator };

// ToInteger convert to an integer format.
func (_aff *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_agce :=_dc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_agce *_aff .R ()),uint32 (_agce *_aff .G ()),uint32 (_agce *_aff .B ())};};func (_ddeed *LTV )buildCertChain (_egcce ,_afdg []*_ad .Certificate )([]*_ad .Certificate ,map[string ]*_ad .Certificate ,error ){_bfac :=map[string ]*_ad .Certificate {};for _ ,_feaac :=range _egcce {_bfac [_feaac .Subject .CommonName ]=_feaac ;};_aabg :=_egcce ;for _ ,_aedaa :=range _afdg {_fffcf :=_aedaa .Subject .CommonName ;if _ ,_gcabf :=_bfac [_fffcf ];_gcabf {continue ;};_bfac [_fffcf ]=_aedaa ;_aabg =append (_aabg ,_aedaa );};if len (_aabg )==0{return nil ,nil ,ErrSignNoCertificates ;};var _aecga error ;for _dbccb :=_aabg [0];_dbccb !=nil &&!_ddeed .CertClient .IsCA (_dbccb );{_ffgbf ,_agfdfc :=_bfac [_dbccb .Issuer .CommonName ];if !_agfdfc {if _ffgbf ,_aecga =_ddeed .CertClient .GetIssuer (_dbccb );_aecga !=nil {_de .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_aecga );break ;};_bfac [_dbccb .Issuer .CommonName ]=_ffgbf ;_aabg =append (_aabg ,_ffgbf );};_dbccb =_ffgbf ;};return _aabg ,_bfac ,nil ;};func (_fded *PdfReader )newPdfAnnotationCaretFromDict (_gef *_aec .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_bbfe :=PdfAnnotationCaret {};_fbaa ,_afeb :=_fded .newPdfAnnotationMarkupFromDict (_gef );if _afeb !=nil {return nil ,_afeb ;};_bbfe .PdfAnnotationMarkup =_fbaa ;_bbfe .RD =_gef .Get ("\u0052\u0044");_bbfe .Sy =_gef .Get ("\u0053\u0079");return &_bbfe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ddgg *PdfAnnotationPrinterMark )ToPdfObject ()_aec .PdfObject {_ddgg .PdfAnnotation .ToPdfObject ();_fdge :=_ddgg ._bcce ;_gefd :=_fdge .PdfObject .(*_aec .PdfObjectDictionary );_gefd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));_gefd .SetIfNotNil ("\u004d\u004e",_ddgg .MN );return _fdge ;};

// ToPdfObject implements interface PdfModel.
func (_bdab *PdfAnnotationFreeText )ToPdfObject ()_aec .PdfObject {_bdab .PdfAnnotation .ToPdfObject ();_ccee :=_bdab ._bcce ;_eccf :=_ccee .PdfObject .(*_aec .PdfObjectDictionary );_bdab .PdfAnnotationMarkup .appendToPdfDictionary (_eccf );_eccf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));_eccf .SetIfNotNil ("\u0044\u0041",_bdab .DA );_eccf .SetIfNotNil ("\u0051",_bdab .Q );_eccf .SetIfNotNil ("\u0052\u0043",_bdab .RC );_eccf .SetIfNotNil ("\u0044\u0053",_bdab .DS );_eccf .SetIfNotNil ("\u0043\u004c",_bdab .CL );_eccf .SetIfNotNil ("\u0049\u0054",_bdab .IT );_eccf .SetIfNotNil ("\u0042\u0045",_bdab .BE );_eccf .SetIfNotNil ("\u0052\u0044",_bdab .RD );_eccf .SetIfNotNil ("\u0042\u0053",_bdab .BS );_eccf .SetIfNotNil ("\u004c\u0045",_bdab .LE );return _ccee ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _aec .PdfObject ;Name _aec .PdfObject ;State _aec .PdfObject ;StateModel _aec .PdfObject ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_fbcfg *PdfReader )GetOCProperties ()(_aec .PdfObject ,error ){_egda :=_fbcfg ._cded ;_efbe :=_egda .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_efbe =_aec .ResolveReference (_efbe );if !_fbcfg ._dfga {_cfdecc :=_fbcfg .traverseObjectData (_efbe );if _cfdecc !=nil {return nil ,_cfdecc ;};};return _efbe ,nil ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_ce :=NewPdfAction ();_ccd :=&PdfActionURI {};_ccd .PdfAction =_ce ;_ce .SetContext (_ccd );return _ccd ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_effe :=&PdfColorspaceCalGray {};_effe .BlackPoint =[]float64 {0.0,0.0,0.0};_effe .Gamma =1;return _effe ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_ggee *PdfAction )GetContext ()PdfModel {if _ggee ==nil {return nil ;};return _ggee ._bbgc ;};

// ToPdfObject implements interface PdfModel.
func (_agdc *PdfAnnotationCircle )ToPdfObject ()_aec .PdfObject {_agdc .PdfAnnotation .ToPdfObject ();_bafg :=_agdc ._bcce ;_ccdf :=_bafg .PdfObject .(*_aec .PdfObjectDictionary );_agdc .PdfAnnotationMarkup .appendToPdfDictionary (_ccdf );_ccdf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));_ccdf .SetIfNotNil ("\u0042\u0053",_agdc .BS );_ccdf .SetIfNotNil ("\u0049\u0043",_agdc .IC );_ccdf .SetIfNotNil ("\u0042\u0045",_agdc .BE );_ccdf .SetIfNotNil ("\u0052\u0044",_agdc .RD );return _bafg ;};func _fdecg (_fbaad *_aec .PdfObjectDictionary )(*PdfShadingType2 ,error ){_dadbd :=PdfShadingType2 {};_cdabd :=_fbaad .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _cdabd ==nil {_de .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;};_bcacb ,_cfafc :=_cdabd .(*_aec .PdfObjectArray );if !_cfafc {_de .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cdabd );return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _bcacb .Len ()!=4{_de .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bcacb .Len ());return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_dadbd .Coords =_bcacb ;if _cgcf :=_fbaad .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_cgcf !=nil {_cgcf =_aec .TraceToDirectObject (_cgcf );_bbabd ,_gcae :=_cgcf .(*_aec .PdfObjectArray );if !_gcae {_de .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cgcf );return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dadbd .Domain =_bbabd ;};_cdabd =_fbaad .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cdabd ==nil {_de .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_dadbd .Function =[]PdfFunction {};if _feebd ,_fdged :=_cdabd .(*_aec .PdfObjectArray );_fdged {for _ ,_eegcd :=range _feebd .Elements (){_agfgb ,_fccg :=_cgefb (_eegcd );if _fccg !=nil {_de .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fccg );return nil ,_fccg ;};_dadbd .Function =append (_dadbd .Function ,_agfgb );};}else {_befe ,_daagc :=_cgefb (_cdabd );if _daagc !=nil {_de .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_daagc );return nil ,_daagc ;};_dadbd .Function =append (_dadbd .Function ,_befe );};if _adfbf :=_fbaad .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_adfbf !=nil {_adfbf =_aec .TraceToDirectObject (_adfbf );_fefbe ,_adaad :=_adfbf .(*_aec .PdfObjectArray );if !_adaad {_de .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_adfbf );return nil ,_aec .ErrTypeError ;};if _fefbe .Len ()!=2{_de .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_fefbe .Len ());return nil ,ErrInvalidAttribute ;};_dadbd .Extend =_fefbe ;};return &_dadbd ,nil ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_dcggb *Image )ToJBIG2Image ()(*_aec .JBIG2Image ,error ){_fcbb ,_fdgd :=_dcggb .ToGoImage ();if _fdgd !=nil {return nil ,_fdgd ;};return _aec .GoImageToJBIG2 (_fcbb ,_aec .JB2ImageAutoThreshold );};

// AllFields returns a flattened list of all fields in the form.
func (_cgbf *PdfAcroForm )AllFields ()[]*PdfField {if _cgbf ==nil {return nil ;};var _gbfc []*PdfField ;if _cgbf .Fields !=nil {for _ ,_fbfed :=range *_cgbf .Fields {_gbfc =append (_gbfc ,_aeba (_fbfed )...);};};return _gbfc ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// ToPdfObject returns the PDF representation of the function.
func (_cagbd *PdfFunctionType0 )ToPdfObject ()_aec .PdfObject {if _cagbd ._cbdee ==nil {_cagbd ._cbdee =&_aec .PdfObjectStream {};};_fbcg :=_aec .MakeDict ();_fbcg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_aec .MakeInteger (0));_debfc :=&_aec .PdfObjectArray {};for _ ,_ddffg :=range _cagbd .Domain {_debfc .Append (_aec .MakeFloat (_ddffg ));};_fbcg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_debfc );_dabae :=&_aec .PdfObjectArray {};for _ ,_bfee :=range _cagbd .Range {_dabae .Append (_aec .MakeFloat (_bfee ));};_fbcg .Set ("\u0052\u0061\u006eg\u0065",_dabae );_fgddd :=&_aec .PdfObjectArray {};for _ ,_dgdcc :=range _cagbd .Size {_fgddd .Append (_aec .MakeInteger (int64 (_dgdcc )));};_fbcg .Set ("\u0053\u0069\u007a\u0065",_fgddd );_fbcg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_aec .MakeInteger (int64 (_cagbd .BitsPerSample )));if _cagbd .Order !=1{_fbcg .Set ("\u004f\u0072\u0064e\u0072",_aec .MakeInteger (int64 (_cagbd .Order )));};_fbcg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aec .MakeInteger (int64 (len (_cagbd ._bbfc ))));_cagbd ._cbdee .Stream =_cagbd ._bbfc ;_cagbd ._cbdee .PdfObjectDictionary =_fbcg ;return _cagbd ._cbdee ;};

// ToPdfObject returns the PDF representation of the function.
func (_bgccd *PdfFunctionType3 )ToPdfObject ()_aec .PdfObject {_feca :=_aec .MakeDict ();_feca .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_aec .MakeInteger (3));_fcfba :=&_aec .PdfObjectArray {};for _ ,_fbdf :=range _bgccd .Domain {_fcfba .Append (_aec .MakeFloat (_fbdf ));};_feca .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fcfba );if _bgccd .Range !=nil {_cgad :=&_aec .PdfObjectArray {};for _ ,_eegb :=range _bgccd .Range {_cgad .Append (_aec .MakeFloat (_eegb ));};_feca .Set ("\u0052\u0061\u006eg\u0065",_cgad );};if _bgccd .Functions !=nil {_aegaba :=&_aec .PdfObjectArray {};for _ ,_gdegc :=range _bgccd .Functions {_aegaba .Append (_gdegc .ToPdfObject ());};_feca .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_aegaba );};if _bgccd .Bounds !=nil {_fdddd :=&_aec .PdfObjectArray {};for _ ,_fdffg :=range _bgccd .Bounds {_fdddd .Append (_aec .MakeFloat (_fdffg ));};_feca .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_fdddd );};if _bgccd .Encode !=nil {_ddeb :=&_aec .PdfObjectArray {};for _ ,_ccba :=range _bgccd .Encode {_ddeb .Append (_aec .MakeFloat (_ccba ));};_feca .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_ddeb );};if _bgccd ._cbfg !=nil {_bgccd ._cbfg .PdfObject =_feca ;return _bgccd ._cbfg ;};return _feca ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_bgcd :=appender .Reader .DSS ;if _bgcd ==nil {_bgcd =NewDSS ();};if _eabgd :=_bgcd .generateHashMaps ();_eabgd !=nil {return nil ,_eabgd ;};return &LTV {CertClient :_dfc .NewCertClient (),OCSPClient :_dfc .NewOCSPClient (),CRLClient :_dfc .NewCRLClient (),SkipExisting :true ,_bgeba :appender ,_gbda :_bgcd },nil ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_gecc *DSS )GetContainingPdfObject ()_aec .PdfObject {return _gecc ._gcdf };

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_degcf *pdfFontSimple )ToPdfObject ()_aec .PdfObject {if _degcf ._dgbeb ==nil {_degcf ._dgbeb =&_aec .PdfIndirectObject {};};_dgfc :=_degcf .baseFields ().asPdfObjectDictionary ("");_degcf ._dgbeb .PdfObject =_dgfc ;if _degcf .FirstChar !=nil {_dgfc .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_degcf .FirstChar );};if _degcf .LastChar !=nil {_dgfc .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_degcf .LastChar );};if _degcf .Widths !=nil {_dgfc .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_degcf .Widths );};if _degcf .Encoding !=nil {_dgfc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_degcf .Encoding );}else if _degcf ._bfdb !=nil {_fdcee :=_degcf ._bfdb .ToPdfObject ();if _fdcee !=nil {_dgfc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fdcee );};};return _degcf ._dgbeb ;};

// String returns a human readable description of `fontfile`.
func (_fceda *fontFile )String ()string {_abcf :="\u005b\u004e\u006f\u006e\u0065\u005d";if _fceda ._dcgb !=nil {_abcf =_fceda ._dcgb .String ();};return _g .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_fceda ._fbefg ,_abcf );};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_bggge *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_gfcfad :=_bdd .NewReader (img .getBase ());_dabab :=_be .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_gegd :=_bdd .NewWriter (_dabab );_bgag :=_dc .Pow (2,float64 (img .BitsPerComponent ))-1;_aece :=make ([]uint32 ,3);var (_eefa uint32 ;ANorm ,X ,Y ,Z ,_dagbb ,_edcd ,_fegfe float64 ;_addc error ;);for {_eefa ,_addc =_gfcfad .ReadSample ();if _addc ==_fb .EOF {break ;}else if _addc !=nil {return img ,_addc ;};ANorm =float64 (_eefa )/_bgag ;X =_bggge .WhitePoint [0]*_dc .Pow (ANorm ,_bggge .Gamma );Y =_bggge .WhitePoint [1]*_dc .Pow (ANorm ,_bggge .Gamma );Z =_bggge .WhitePoint [2]*_dc .Pow (ANorm ,_bggge .Gamma );_dagbb =3.240479*X +-1.537150*Y +-0.498535*Z ;_edcd =-0.969256*X +1.875992*Y +0.041556*Z ;_fegfe =0.055648*X +-0.204043*Y +1.057311*Z ;_dagbb =_dc .Min (_dc .Max (_dagbb ,0),1.0);_edcd =_dc .Min (_dc .Max (_edcd ,0),1.0);_fegfe =_dc .Min (_dc .Max (_fegfe ,0),1.0);_aece [0]=uint32 (_dagbb *_bgag );_aece [1]=uint32 (_edcd *_bgag );_aece [2]=uint32 (_fegfe *_bgag );if _addc =_gegd .WriteSamples (_aece );_addc !=nil {return img ,_addc ;};};return _ffefc (&_dabab ),nil ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_acdb FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_acdb .Mask ()&^fl .Mask ())};

// HasXObjectByName checks if has XObject resource by name.
func (_cfbe *PdfPage )HasXObjectByName (name _aec .PdfObjectName )bool {_fceaf ,_caedeb :=_cfbe .Resources .XObject .(*_aec .PdfObjectDictionary );if !_caedeb {return false ;};if _cfcaa :=_fceaf .Get (name );_cfcaa !=nil {return true ;};return false ;};

// ToPdfObject implements interface PdfModel.
func (_cacg *PdfAnnotationStrikeOut )ToPdfObject ()_aec .PdfObject {_cacg .PdfAnnotation .ToPdfObject ();_aeeac :=_cacg ._bcce ;_cfba :=_aeeac .PdfObject .(*_aec .PdfObjectDictionary );_cacg .PdfAnnotationMarkup .appendToPdfDictionary (_cfba );_cfba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));_cfba .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cacg .QuadPoints );return _aeeac ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_dgag *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _dgag ._cfdbe .(*PdfTilingPattern );};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_gaag *DSS )ToPdfObject ()_aec .PdfObject {_ebcf :=_gaag ._gcdf .PdfObject .(*_aec .PdfObjectDictionary );_ebcf .Clear ();_gefg :=_aec .MakeDict ();for _gfadf ,_gbfa :=range _gaag .VRI {_gefg .Set (*_aec .MakeName (_gfadf ),_gbfa .ToPdfObject ());};_ebcf .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_bccce (_gaag .Certs ));_ebcf .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_bccce (_gaag .OCSPs ));_ebcf .SetIfNotNil ("\u0043\u0052\u004c\u0073",_bccce (_gaag .CRLs ));_ebcf .Set ("\u0056\u0052\u0049",_gefg );return _gaag ._gcdf ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_ebg :=NewPdfAction ();_ada :=&PdfActionThread {};_ada .PdfAction =_ebg ;_ebg .SetContext (_ada );return _ada ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_bdggc *PdfAppender )Write (w _fb .Writer )error {if _bdggc ._gfad {return _ed .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");};_efed :=NewPdfWriter ();_eacfg ,_ecbg :=_aec .GetDict (_efed ._beca );if !_ecbg {return _ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_afda ,_ecbg :=_eacfg .Get ("\u004b\u0069\u0064\u0073").(*_aec .PdfObjectArray );if !_ecbg {return _ed .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_eccc ,_ecbg :=_eacfg .Get ("\u0043\u006f\u0075n\u0074").(*_aec .PdfObjectInteger );if !_ecbg {return _ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};_bagb :=_bdggc ._aea ._adecd ;_gagg :=_bagb .GetTrailer ();if _gagg ==nil {return _ed .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_dada ,_ecbg :=_aec .GetIndirect (_gagg .Get ("\u0052\u006f\u006f\u0074"));if !_ecbg {return _ed .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_cgaf ,_ecbg :=_aec .GetDict (_dada );if !_ecbg {_de .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_dada ,*_gagg );return _ed .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_faed :=range _cgaf .Keys (){if _efed ._beffcb .Get (_faed )==nil {_effd :=_cgaf .Get (_faed );_efed ._beffcb .Set (_faed ,_effd );};};if _bdggc ._bedb !=nil {_efed ._beffcb .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_bdggc ._bedb .ToPdfObject ());_bdggc .updateObjectsDeep (_bdggc ._bedb .ToPdfObject (),nil );};if _bdggc ._eggg !=nil {_bdggc .updateObjectsDeep (_bdggc ._eggg .ToPdfObject (),nil );_efed ._beffcb .Set ("\u0044\u0053\u0053",_bdggc ._eggg .GetContainingPdfObject ());};if _efed ._cfbcgf < 2{_efed .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);_efed .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};_bdggc .addNewObject (_efed ._gcffc );_bdggc .addNewObject (_efed ._adgb );_cdd :=false ;if len (_bdggc ._aea .PageList )!=len (_bdggc ._fbbe ){_cdd =true ;}else {for _fcef :=range _bdggc ._aea .PageList {switch {case _bdggc ._fbbe [_fcef ]==_bdggc ._aea .PageList [_fcef ]:case _bdggc ._fbbe [_fcef ]==_bdggc .Reader .PageList [_fcef ]:default:_cdd =true ;};if _cdd {break ;};};};if _cdd {_bdggc .updateObjectsDeep (_efed ._beca ,nil );}else {_bdggc ._afca [_efed ._beca ]=struct{}{};};_efed ._beca .ObjectNumber =_bdggc .Reader ._afgda .ObjectNumber ;_bdggc ._gga [_efed ._beca ]=_bdggc .Reader ._afgda .ObjectNumber ;_acgc :=[]_aec .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_dbcf :=range _bdggc ._fbbe {_badc :=_dbcf .ToPdfObject ();*_eccc =*_eccc +1;if _gbgg ,_gdggc :=_badc .(*_aec .PdfIndirectObject );_gdggc &&_gbgg .GetParser ()==_bdggc ._aea ._adecd {_afda .Append (&_gbgg .PdfObjectReference );continue ;};if _acdc ,_cefe :=_aec .GetDict (_badc );_cefe {_aba ,_bbeb :=_acdc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_aec .PdfIndirectObject );for _bbeb {_de .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_aba );_ebb ,_fbde :=_aba .PdfObject .(*_aec .PdfObjectDictionary );if !_fbde {return _ed .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_bdeb :=range _acgc {_de .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bdeb );if _acdc .Get (_bdeb )!=nil {_de .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _dbdf :=_ebb .Get (_bdeb );_dbdf !=nil {_de .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bdeb );_acdc .Set (_bdeb ,_dbdf );};};_aba ,_bbeb =_ebb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_aec .PdfIndirectObject );_de .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ebb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_acdc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_efed ._beca );};_bdggc .updateObjectsDeep (_badc ,nil );_afda .Append (_badc );};if _ ,_bcee :=_bdggc ._ecee .Seek (0,_fb .SeekStart );_bcee !=nil {return _bcee ;};_eaab :=make (map[SignatureHandler ]_fb .Writer );_edee :=_aec .MakeArray ();for _ ,_ggc :=range _bdggc ._ddf {if _dfabe ,_facg :=_aec .GetIndirect (_ggc );_facg {if _eddg ,_aefca :=_dfabe .PdfObject .(*pdfSignDictionary );_aefca {_bfcdc :=*_eddg ._dgcbb ;var _gafb error ;_eaab [_bfcdc ],_gafb =_bfcdc .NewDigest (_eddg ._ffgd );if _gafb !=nil {return _gafb ;};_edee .Append (_aec .MakeInteger (0xfffff),_aec .MakeInteger (0xfffff));};};};if _edee .Len ()> 0{_edee .Append (_aec .MakeInteger (0xfffff),_aec .MakeInteger (0xfffff));};for _ ,_egcb :=range _bdggc ._ddf {if _fbgd ,_gecb :=_aec .GetIndirect (_egcb );_gecb {if _geeg ,_gegc :=_fbgd .PdfObject .(*pdfSignDictionary );_gegc {_geeg .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_edee );};};};_babd :=len (_eaab )> 0;var _gcbd _fb .Reader =_bdggc ._ecee ;if _babd {_gaff :=make ([]_fb .Writer ,0,len (_eaab ));for _ ,_ageb :=range _eaab {_gaff =append (_gaff ,_ageb );};_gcbd =_fb .TeeReader (_bdggc ._ecee ,_fb .MultiWriter (_gaff ...));};_fcfgd ,_adbc :=_fb .Copy (w ,_gcbd );if _adbc !=nil {return _adbc ;};if len (_bdggc ._ddf )==0{return nil ;};_efed ._dgfbe =_fcfgd ;_efed .ObjNumOffset =_bdggc ._bbea ;_efed ._cgcga =true ;_efed ._abaac =_bdggc ._bcaf ;_efed ._cdeee =_bdggc ._adae ;_efed ._bbecb =_bdggc ._egfc ;_efed ._gcfdc =_bdggc ._aea .PdfVersion ().Minor ;_efed ._gbcbf =_bdggc ._gga ;_feag :=_bdggc ._bca .GetXrefType ();if _feag !=nil {_bfa :=*_feag ==_aec .XrefTypeObjectStream ;_efed ._cbgea =&_bfa ;};_efed ._gbfef =map[_aec .PdfObject ]struct{}{};_efed ._begcc =[]_aec .PdfObject {};for _ ,_deda :=range _bdggc ._ddf {if _ ,_fgdg :=_bdggc ._afca [_deda ];_fgdg {continue ;};_efed .addObject (_deda );};_dfaf :=w ;if _babd {_dfaf =_add .NewBuffer (nil );};if _bdee :=_efed .Write (_dfaf );_bdee !=nil {return _bdee ;};if _babd {_faff :=_dfaf .(*_add .Buffer ).Bytes ();_ecgbd :=_aec .MakeArray ();var _eabd []*pdfSignDictionary ;var _baabd int64 ;for _ ,_fbbg :=range _efed ._begcc {if _eedf ,_adbb :=_aec .GetIndirect (_fbbg );_adbb {if _bgab ,_fggf :=_eedf .PdfObject .(*pdfSignDictionary );_fggf {_eabd =append (_eabd ,_bgab );_fecc :=_bgab ._egcaeg +int64 (_bgab ._ecfag );_ecgbd .Append (_aec .MakeInteger (_baabd ),_aec .MakeInteger (_fecc -_baabd ));_baabd =_bgab ._egcaeg +int64 (_bgab ._adbd );};};};_ecgbd .Append (_aec .MakeInteger (_baabd ),_aec .MakeInteger (_fcfgd +int64 (len (_faff ))-_baabd ));_ggf :=[]byte (_ecgbd .WriteString ());for _ ,_eefe :=range _eabd {_cbff :=int (_eefe ._egcaeg -_fcfgd );for _ecbga :=_eefe ._gcdfc ;_ecbga < _eefe ._gebd ;_ecbga ++{_faff [_cbff +_ecbga ]=' ';};_bgb :=_faff [_cbff +_eefe ._gcdfc :_cbff +_eefe ._gebd ];copy (_bgb ,_ggf );};var _gcee int ;for _ ,_bccec :=range _eabd {_ebac :=int (_bccec ._egcaeg -_fcfgd );_gfdb :=_faff [_gcee :_ebac +_bccec ._ecfag ];_adgf :=*_bccec ._dgcbb ;_eaab [_adgf ].Write (_gfdb );_gcee =_ebac +_bccec ._adbd ;};for _ ,_afcf :=range _eabd {_eefg :=_faff [_gcee :];_cbab :=*_afcf ._dgcbb ;_eaab [_cbab ].Write (_eefg );};for _ ,_fgf :=range _eabd {_gfcfa :=int (_fgf ._egcaeg -_fcfgd );_bcae :=*_fgf ._dgcbb ;_feceg :=_eaab [_bcae ];if _fdgg :=_bcae .Sign (_fgf ._ffgd ,_feceg );_fdgg !=nil {return _fdgg ;};_fgf ._ffgd .ByteRange =_ecgbd ;_ddegc :=[]byte (_fgf ._ffgd .Contents .WriteString ());for _dade :=_fgf ._gcdfc ;_dade < _fgf ._gebd ;_dade ++{_faff [_gfcfa +_dade ]=' ';};for _bgdb :=_fgf ._ecfag ;_bgdb < _fgf ._adbd ;_bgdb ++{_faff [_gfcfa +_bgdb ]=' ';};_faec :=_faff [_gfcfa +_fgf ._gcdfc :_gfcfa +_fgf ._gebd ];copy (_faec ,_ggf );_faec =_faff [_gfcfa +_fgf ._ecfag :_gfcfa +_fgf ._adbd ];copy (_faec ,_ddegc );};_cgaa :=_add .NewBuffer (_faff );_ ,_adbc =_fb .Copy (w ,_cgaa );if _adbc !=nil {return _adbc ;};};_bdggc ._gfad =true ;return nil ;};func (_gececc *PdfReader )newPdfOutlineItemFromIndirectObject (_fecd *_aec .PdfIndirectObject )(*PdfOutlineItem ,error ){_cdbd ,_gcegd :=_fecd .PdfObject .(*_aec .PdfObjectDictionary );if !_gcegd {return nil ,_g .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_gfbdd :=NewPdfOutlineItem ();_beff :=_cdbd .Get ("\u0054\u0069\u0074l\u0065");if _beff ==nil {return nil ,_g .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};_bgaf ,_aacb :=_aec .GetString (_beff );if !_aacb {return nil ,_g .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_beff );};_gfbdd .Title =_bgaf ;if _defce :=_cdbd .Get ("\u0043\u006f\u0075n\u0074");_defce !=nil {_ggff ,_caccb :=_defce .(*_aec .PdfObjectInteger );if !_caccb {return nil ,_g .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_defce );};_aefcf :=int64 (*_ggff );_gfbdd .Count =&_aefcf ;};if _affe :=_cdbd .Get ("\u0044\u0065\u0073\u0074");_affe !=nil {_gfbdd .Dest =_aec .ResolveReference (_affe );if !_gececc ._dfga {_aedbd :=_gececc .traverseObjectData (_gfbdd .Dest );if _aedbd !=nil {return nil ,_aedbd ;};};};if _dcaf :=_cdbd .Get ("\u0041");_dcaf !=nil {_gfbdd .A =_aec .ResolveReference (_dcaf );if !_gececc ._dfga {_fcgbd :=_gececc .traverseObjectData (_gfbdd .A );if _fcgbd !=nil {return nil ,_fcgbd ;};};};if _adfdg :=_cdbd .Get ("\u0053\u0045");_adfdg !=nil {_gfbdd .SE =nil ;};if _ggddb :=_cdbd .Get ("\u0043");_ggddb !=nil {_gfbdd .C =_aec .ResolveReference (_ggddb );};if _ddaa :=_cdbd .Get ("\u0046");_ddaa !=nil {_gfbdd .F =_aec .ResolveReference (_ddaa );};return _gfbdd ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dcbd pdfCIDFontType0 )GetRuneMetrics (r rune )(_ge .CharMetrics ,bool ){return _ge .CharMetrics {Wx :_dcbd ._aefa },true ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _aec .PdfObject ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_ead *PdfColorspaceCalGray )ToPdfObject ()_aec .PdfObject {_ggbg :=&_aec .PdfObjectArray {};_ggbg .Append (_aec .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_cadb :=_aec .MakeDict ();if _ead .WhitePoint !=nil {_cadb .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_aec .MakeArray (_aec .MakeFloat (_ead .WhitePoint [0]),_aec .MakeFloat (_ead .WhitePoint [1]),_aec .MakeFloat (_ead .WhitePoint [2])));}else {_de .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _ead .BlackPoint !=nil {_cadb .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_aec .MakeArray (_aec .MakeFloat (_ead .BlackPoint [0]),_aec .MakeFloat (_ead .BlackPoint [1]),_aec .MakeFloat (_ead .BlackPoint [2])));};_cadb .Set ("\u0047\u0061\u006dm\u0061",_aec .MakeFloat (_ead .Gamma ));_ggbg .Append (_cadb );if _ead ._cdcb !=nil {_ead ._cdcb .PdfObject =_ggbg ;return _ead ._cdcb ;};return _ggbg ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_gafe *pdfCIDFontType2 )ToPdfObject ()_aec .PdfObject {if _gafe ._cecc ==nil {_gafe ._cecc =&_aec .PdfIndirectObject {};};_eaafe :=_gafe .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");_gafe ._cecc .PdfObject =_eaafe ;if _gafe .CIDSystemInfo !=nil {_eaafe .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_gafe .CIDSystemInfo );};if _gafe .DW !=nil {_eaafe .Set ("\u0044\u0057",_gafe .DW );};if _gafe .DW2 !=nil {_eaafe .Set ("\u0044\u0057\u0032",_gafe .DW2 );};if _gafe .W !=nil {_eaafe .Set ("\u0057",_gafe .W );};if _gafe .W2 !=nil {_eaafe .Set ("\u0057\u0032",_gafe .W2 );};if _gafe .CIDToGIDMap !=nil {_eaafe .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_gafe .CIDToGIDMap );};return _gafe ._cecc ;};func (_cdde *PdfWriter )writeBytes (_ecfcg []byte ){if _cdde ._egcadc !=nil {return ;};_cgcgf ,_fbfab :=_cdde ._gdfdf .Write (_ecfcg );_cdde ._fbbcb +=int64 (_cgcgf );_cdde ._egcadc =_fbfab ;};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _aec .PdfObject ;NewWindow _aec .PdfObject ;T _aec .PdfObject ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_eccca *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_efdg :=_eccca .actualFont ();if _efdg ==nil {_de .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_eccca ._gaga );return _ge .CharMetrics {},false ;};if _fgbg ,_bcge :=_efdg .GetRuneMetrics (r );_bcge {return _fgbg ,true ;};if _eefeg ,_gfbcg :=_eccca .GetFontDescriptor ();_gfbcg ==nil &&_eefeg !=nil {return _ge .CharMetrics {Wx :_eefeg ._fbgbb },true ;};_de .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_eccca );return _ge .CharMetrics {},false ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_baa :=NewPdfAnnotation ();_ggbb :=&PdfAnnotationTrapNet {};_ggbb .PdfAnnotation =_baa ;_baa .SetContext (_ggbb );return _ggbb ;};func (_caafe *PdfPattern )getDict ()*_aec .PdfObjectDictionary {if _aecdc ,_dbfge :=_caafe ._aabdf .(*_aec .PdfIndirectObject );_dbfge {_gdgdba ,_dafb :=_aecdc .PdfObject .(*_aec .PdfObjectDictionary );if !_dafb {return nil ;};return _gdgdba ;}else if _gebg ,_dbfaa :=_caafe ._aabdf .(*_aec .PdfObjectStream );_dbfaa {return _gebg .PdfObjectDictionary ;}else {_de .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_caafe ._aabdf );return nil ;};};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_aec .PdfObjectInteger ;TilingType *_aec .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_aec .PdfObjectFloat ;YStep *_aec .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_aec .PdfObjectArray ;};func (_daf *PdfReader )newPdfActionGotoRFromDict (_eab *_aec .PdfObjectDictionary )(*PdfActionGoToR ,error ){_fcf ,_dfe :=_ccfd (_eab .Get ("\u0046"));if _dfe !=nil {return nil ,_dfe ;};return &PdfActionGoToR {D :_eab .Get ("\u0044"),NewWindow :_eab .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_fcf },nil ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_adcf *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_aec .PdfObject )(PdfColor ,error ){if len (objects )!=_adcf .GetNumComponents (){return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbag ,_aaaff :=_aec .GetNumbersAsFloat (objects );if _aaaff !=nil {return nil ,_aaaff ;};return _adcf .ColorFromFloats (_fbag );};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_ecee _fb .ReadSeeker ;_bca *_aec .PdfParser ;_aea *PdfReader ;Reader *PdfReader ;_fbbe []*PdfPage ;_bedb *PdfAcroForm ;_eggg *DSS ;_bcaf _aec .XrefTable ;_adae int64 ;_bbea int ;_ddf []_aec .PdfObject ;_bdcg map[_aec .PdfObject ]struct{};_gga map[_aec .PdfObject ]int64 ;_afca map[_aec .PdfObject ]struct{};_ceec map[_aec .PdfObject ]struct{};_egfc int64 ;_gfad bool ;};func _eddfg (_egfdgf *_aec .PdfObjectDictionary )(*PdfTilingPattern ,error ){_fegff :=&PdfTilingPattern {};_ggfcg :=_egfdgf .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _ggfcg ==nil {_de .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ffedd ,_eddag :=_ggfcg .(*_aec .PdfObjectInteger );if !_eddag {_de .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_ggfcg );return nil ,_aec .ErrTypeError ;};_fegff .PaintType =_ffedd ;_ggfcg =_egfdgf .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _ggfcg ==nil {_de .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_aefeg ,_eddag :=_ggfcg .(*_aec .PdfObjectInteger );if !_eddag {_de .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ggfcg );return nil ,_aec .ErrTypeError ;};_fegff .TilingType =_aefeg ;_ggfcg =_egfdgf .Get ("\u0042\u0042\u006f\u0078");if _ggfcg ==nil {_de .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ggfcg =_aec .TraceToDirectObject (_ggfcg );_ccbbg ,_eddag :=_ggfcg .(*_aec .PdfObjectArray );if !_eddag {_de .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ggfcg );return nil ,_aec .ErrTypeError ;};_bgbba ,_bccecb :=NewPdfRectangle (*_ccbbg );if _bccecb !=nil {_de .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_bccecb );return nil ,_bccecb ;};_fegff .BBox =_bgbba ;_ggfcg =_egfdgf .Get ("\u0058\u0053\u0074e\u0070");if _ggfcg ==nil {_de .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_caeca ,_bccecb :=_aec .GetNumberAsFloat (_ggfcg );if _bccecb !=nil {_de .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_caeca );return nil ,_bccecb ;};_fegff .XStep =_aec .MakeFloat (_caeca );_ggfcg =_egfdgf .Get ("\u0059\u0053\u0074e\u0070");if _ggfcg ==nil {_de .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fbbf ,_bccecb :=_aec .GetNumberAsFloat (_ggfcg );if _bccecb !=nil {_de .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_fbbf );return nil ,_bccecb ;};_fegff .YStep =_aec .MakeFloat (_fbbf );_ggfcg =_egfdgf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _ggfcg ==nil {_de .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_egfdgf ,_eddag =_aec .TraceToDirectObject (_ggfcg ).(*_aec .PdfObjectDictionary );if !_eddag {return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ggfcg );};_cbfgb ,_bccecb :=NewPdfPageResourcesFromDict (_egfdgf );if _bccecb !=nil {return nil ,_bccecb ;};_fegff .Resources =_cbfgb ;if _faedc :=_egfdgf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_faedc !=nil {_abcbd ,_fdggf :=_faedc .(*_aec .PdfObjectArray );if !_fdggf {_de .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_faedc );return nil ,_aec .ErrTypeError ;};_fegff .Matrix =_abcbd ;};return _fegff ,nil ;};func (_adcfg *pdfCIDFontType2 )baseFields ()*fontCommon {return &_adcfg .fontCommon };

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_cga :=&PdfBorderStyle {};return _cga };

// ToPdfObject implements interface PdfModel.
func (_acb *PdfActionResetForm )ToPdfObject ()_aec .PdfObject {_acb .PdfAction .ToPdfObject ();_cfb :=_acb ._gf ;_dabb :=_cfb .PdfObject .(*_aec .PdfObjectDictionary );_dabb .SetIfNotNil ("\u0053",_aec .MakeName (string (ActionTypeResetForm )));_dabb .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_acb .Fields );_dabb .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_acb .Flags );return _cfb ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_ggcff :=PdfPage {};_ggcff ._defa =_aec .MakeDict ();_ggcff .Resources =NewPdfPageResources ();_eeebb :=_aec .PdfIndirectObject {};_eeebb .PdfObject =_ggcff ._defa ;_ggcff ._aggfc =&_eeebb ;return &_ggcff ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_bbdb *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_bgg *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_efb :=vals [0];if _efb < 0.0||_efb > 1.0{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggdfb :=vals [1];if _ggdfb < 0.0||_ggdfb > 1.0{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfca :=vals [2];if _cfca < 0.0||_cfca > 1.0{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acgd :=vals [3];if _acgd < 0.0||_acgd > 1.0{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bafb :=NewPdfColorDeviceCMYK (_efb ,_ggdfb ,_cfca ,_acgd );return _bafb ,nil ;};

// A returns the value of the A component of the color.
func (_bdcbf *PdfColorCalRGB )A ()float64 {return _bdcbf [0]};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_acbd *PdfFieldButton )IsRadio ()bool {return _acbd .GetType ()==ButtonTypeRadio };func (_acgfg *pdfCIDFontType0 )baseFields ()*fontCommon {return &_acgfg .fontCommon };

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_cgafg *XObjectImage )ToImage ()(*Image ,error ){_gbfb :=&Image {};if _cgafg .Height ==nil {return nil ,_ed .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_gbfb .Height =*_cgafg .Height ;if _cgafg .Width ==nil {return nil ,_ed .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_gbfb .Width =*_cgafg .Width ;if _cgafg .BitsPerComponent ==nil {return nil ,_ed .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");};_gbfb .BitsPerComponent =*_cgafg .BitsPerComponent ;_gbfb .ColorComponents =_cgafg .ColorSpace .GetNumComponents ();_cgafg ._deccfc .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_aec .MakeInteger (int64 (_gbfb .ColorComponents )));_bfdc ,_bbabf :=_aec .DecodeStream (_cgafg ._deccfc );if _bbabf !=nil {return nil ,_bbabf ;};_gbfb .Data =_bfdc ;if _cgafg .Decode !=nil {_gaba ,_cdbbc :=_cgafg .Decode .(*_aec .PdfObjectArray );if !_cdbbc {_de .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");return nil ,_ed .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_efab ,_gbfac :=_gaba .ToFloat64Array ();if _gbfac !=nil {return nil ,_gbfac ;};_gbfb ._dbdfe =_efab ;};return _gbfb ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_eadga *PdfShadingType7 )ToPdfObject ()_aec .PdfObject {_eadga .PdfShading .ToPdfObject ();_bfbfa ,_bcbac :=_eadga .getShadingDict ();if _bcbac !=nil {_de .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _eadga .BitsPerCoordinate !=nil {_bfbfa .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_eadga .BitsPerCoordinate );};if _eadga .BitsPerComponent !=nil {_bfbfa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_eadga .BitsPerComponent );};if _eadga .BitsPerFlag !=nil {_bfbfa .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_eadga .BitsPerFlag );};if _eadga .Decode !=nil {_bfbfa .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_eadga .Decode );};if _eadga .Function !=nil {if len (_eadga .Function )==1{_bfbfa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eadga .Function [0].ToPdfObject ());}else {_bdbd :=_aec .MakeArray ();for _ ,_cbcea :=range _eadga .Function {_bdbd .Append (_cbcea .ToPdfObject ());};_bfbfa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bdbd );};};return _eadga ._cecd ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_fbgdg *PdfOutline )ToPdfObject ()_aec .PdfObject {_dffegg :=_fbgdg ._gfggef ;_ccac :=_dffegg .PdfObject .(*_aec .PdfObjectDictionary );_ccac .Set ("\u0054\u0079\u0070\u0065",_aec .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _fbgdg .First !=nil {_ccac .Set ("\u0046\u0069\u0072s\u0074",_fbgdg .First .ToPdfObject ());};if _fbgdg .Last !=nil {_ccac .Set ("\u004c\u0061\u0073\u0074",_fbgdg .Last .GetContext ().GetContainingPdfObject ());};if _fbgdg .Parent !=nil {_ccac .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fbgdg .Parent .GetContext ().GetContainingPdfObject ());};if _fbgdg .Count !=nil {_ccac .Set ("\u0043\u006f\u0075n\u0074",_aec .MakeInteger (*_fbgdg .Count ));};return _dffegg ;};

// GetNamedDestinations returns the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_egaf *PdfReader )GetNamedDestinations ()(_aec .PdfObject ,error ){_fbagb :=_aec .ResolveReference (_egaf ._cded .Get ("\u004e\u0061\u006de\u0073"));if _fbagb ==nil {return nil ,nil ;};if !_egaf ._dfga {_faabb :=_egaf .traverseObjectData (_fbagb );if _faabb !=nil {return nil ,_faabb ;};};return _fbagb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bge *PdfAnnotationLine )ToPdfObject ()_aec .PdfObject {_bge .PdfAnnotation .ToPdfObject ();_daba :=_bge ._bcce ;_bdaf :=_daba .PdfObject .(*_aec .PdfObjectDictionary );_bge .PdfAnnotationMarkup .appendToPdfDictionary (_bdaf );_bdaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u004c\u0069\u006e\u0065"));_bdaf .SetIfNotNil ("\u004c",_bge .L );_bdaf .SetIfNotNil ("\u0042\u0053",_bge .BS );_bdaf .SetIfNotNil ("\u004c\u0045",_bge .LE );_bdaf .SetIfNotNil ("\u0049\u0043",_bge .IC );_bdaf .SetIfNotNil ("\u004c\u004c",_bge .LL );_bdaf .SetIfNotNil ("\u004c\u004c\u0045",_bge .LLE );_bdaf .SetIfNotNil ("\u0043\u0061\u0070",_bge .Cap );_bdaf .SetIfNotNil ("\u0049\u0054",_bge .IT );_bdaf .SetIfNotNil ("\u004c\u004c\u004f",_bge .LLO );_bdaf .SetIfNotNil ("\u0043\u0050",_bge .CP );_bdaf .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bge .Measure );_bdaf .SetIfNotNil ("\u0043\u004f",_bge .CO );return _daba ;};

// ToPdfObject implements interface PdfModel.
func (_adaf *PdfAnnotationFileAttachment )ToPdfObject ()_aec .PdfObject {_adaf .PdfAnnotation .ToPdfObject ();_gfd :=_adaf ._bcce ;_gbef :=_gfd .PdfObject .(*_aec .PdfObjectDictionary );_adaf .PdfAnnotationMarkup .appendToPdfDictionary (_gbef );_gbef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));_gbef .SetIfNotNil ("\u0046\u0053",_adaf .FS );_gbef .SetIfNotNil ("\u004e\u0061\u006d\u0065",_adaf .Name );return _gfd ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_gbcdf *PdfFont )ToUnicode ()string {if _gbcdf .baseFields ()._bgae ==nil {return "";};return _gbcdf .baseFields ()._bgae .Name ();};func (_eaccg *PdfReader )lookupPageByObject (_fddba _aec .PdfObject )(*PdfPage ,error ){return nil ,_ed .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func _cdeeg ()string {_aecee .Lock ();defer _aecee .Unlock ();return _cbcae };

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_debf PdfModel ;Rect _aec .PdfObject ;Contents _aec .PdfObject ;P _aec .PdfObject ;NM _aec .PdfObject ;M _aec .PdfObject ;F _aec .PdfObject ;AP _aec .PdfObject ;AS _aec .PdfObject ;Border _aec .PdfObject ;C _aec .PdfObject ;StructParent _aec .PdfObject ;OC _aec .PdfObject ;_bcce *_aec .PdfIndirectObject ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _aec .PdfObject ;_cebf []byte ;_cfcc *_aec .PdfIndirectObject ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_efbacd :=&PdfSignature {Type :_aec .MakeName ("\u0053\u0069\u0067"),Handler :handler };_egfa :=&pdfSignDictionary {PdfObjectDictionary :_aec .MakeDict (),_dgcbb :&handler ,_ffgd :_efbacd };_efbacd ._ccggd =_aec .MakeIndirectObject (_egfa );return _efbacd ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_ceef *PdfPage )GetContentStreamObjs ()[]_aec .PdfObject {if _ceef .Contents ==nil {return nil ;};_ceab :=_aec .TraceToDirectObject (_ceef .Contents );if _acfe ,_gagaf :=_ceab .(*_aec .PdfObjectArray );_gagaf {return _acfe .Elements ();};return []_aec .PdfObject {_ceab };};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};func (_ddbf *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};func (_fga *PdfReader )newPdfAnnotationPolyLineFromDict (_gdgg *_aec .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_ecfc :=PdfAnnotationPolyLine {};_cda ,_fgb :=_fga .newPdfAnnotationMarkupFromDict (_gdgg );if _fgb !=nil {return nil ,_fgb ;};_ecfc .PdfAnnotationMarkup =_cda ;_ecfc .Vertices =_gdgg .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_ecfc .LE =_gdgg .Get ("\u004c\u0045");_ecfc .BS =_gdgg .Get ("\u0042\u0053");_ecfc .IC =_gdgg .Get ("\u0049\u0043");_ecfc .BE =_gdgg .Get ("\u0042\u0045");_ecfc .IT =_gdgg .Get ("\u0049\u0054");_ecfc .Measure =_gdgg .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_ecfc ,nil ;};func (_cgd *PdfAppender )addNewObject (_ccfdc _aec .PdfObject ){if _ ,_aagg :=_cgd ._bdcg [_ccfdc ];!_aagg {_cgd ._ddf =append (_cgd ._ddf ,_ccfdc );_cgd ._bdcg [_ccfdc ]=struct{}{};};};

// SetVersion sets the PDF version of the output file.
func (_eccgc *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_eccgc ._cfbcgf =majorVersion ;_eccgc ._gcfdc =minorVersion ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_bded *Outline )ToPdfObject ()_aec .PdfObject {return _bded .ToPdfOutline ().ToPdfObject ()};

// GetContainingPdfObject implements interface PdfModel.
func (_dfff *PdfFilespec )GetContainingPdfObject ()_aec .PdfObject {return _dfff ._bfecg };

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_gcdf :_aec .MakeIndirectObject (_aec .MakeDict ()),VRI :map[string ]*VRI {}};};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_bfbf *PdfAcroForm )ToPdfObject ()_aec .PdfObject {_abeb :=_bfbf ._dgdba ;_egbga :=_abeb .PdfObject .(*_aec .PdfObjectDictionary );if _bfbf .Fields !=nil {_dfbdc :=_aec .PdfObjectArray {};for _ ,_dcaa :=range *_bfbf .Fields {_ccdeb :=_dcaa .GetContext ();if _ccdeb !=nil {_dfbdc .Append (_ccdeb .ToPdfObject ());}else {_dfbdc .Append (_dcaa .ToPdfObject ());};};_egbga .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_dfbdc );};if _bfbf .NeedAppearances !=nil {_egbga .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_bfbf .NeedAppearances );};if _bfbf .SigFlags !=nil {_egbga .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_bfbf .SigFlags );};if _bfbf .CO !=nil {_egbga .Set ("\u0043\u004f",_bfbf .CO );};if _bfbf .DR !=nil {_egbga .Set ("\u0044\u0052",_bfbf .DR .ToPdfObject ());};if _bfbf .DA !=nil {_egbga .Set ("\u0044\u0041",_bfbf .DA );};if _bfbf .Q !=nil {_egbga .Set ("\u0051",_bfbf .Q );};if _bfbf .XFA !=nil {_egbga .Set ("\u0058\u0046\u0041",_bfbf .XFA );};return _abeb ;};

// ToPdfObject implements interface PdfModel.
func (_bea *PdfActionGoTo3DView )ToPdfObject ()_aec .PdfObject {_bea .PdfAction .ToPdfObject ();_abd :=_bea ._gf ;_ga :=_abd .PdfObject .(*_aec .PdfObjectDictionary );_ga .SetIfNotNil ("\u0053",_aec .MakeName (string (ActionTypeGoTo3DView )));_ga .SetIfNotNil ("\u0054\u0041",_bea .TA );_ga .SetIfNotNil ("\u0056",_bea .V );return _abd ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_ecgba pdfCIDFontType0 )GetCharMetrics (code _cad .CharCode )(_ge .CharMetrics ,bool ){_fagdd :=_ecgba ._aefa ;if _bcdff ,_egbdf :=_ecgba ._gbddf [code ];_egbdf {_fagdd =_bcdff ;};return _ge .CharMetrics {Wx :_fagdd },true ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_edece *PdfPattern )IsTiling ()bool {return _edece .PatternType ==1};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_debc *PdfPage )Duplicate ()*PdfPage {_ggdeb :=*_debc ;_ggdeb ._defa =_aec .MakeDict ();_ggdeb ._aggfc =_aec .MakeIndirectObject (_ggdeb ._defa );return &_ggdeb ;};

// WriteToFile writes the Appender output to file specified by path.
func (_gbae *PdfAppender )WriteToFile (outputPath string )error {_bceg ,_eeae :=_gg .Create (outputPath );if _eeae !=nil {return _eeae ;};defer _bceg .Close ();return _gbae .Write (_bceg );};func _gafba (_cedc *PdfField ,_ddga _aec .PdfObject )error {switch _cedc .GetContext ().(type ){case *PdfFieldText :switch _abgcb :=_ddga .(type ){case *_aec .PdfObjectName :_acbcb :=_abgcb ;_de .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_acbcb .String ());_cedc .V =_aec .MakeEncodedString (_abgcb .String (),true );case *_aec .PdfObjectString :_cedc .V =_aec .MakeEncodedString (_abgcb .String (),true );default:_de .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_abgcb ,_abgcb );};case *PdfFieldButton :switch _ddga .(type ){case *_aec .PdfObjectName :if len (_ddga .String ())> 0{_cedc .V =_ddga ;_fffab (_cedc ,_ddga );};case *_aec .PdfObjectString :if len (_ddga .String ())> 0{_cedc .V =_aec .MakeName (_ddga .String ());_fffab (_cedc ,_cedc .V );};default:_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_cedc .PartialName (),_ddga );_cedc .V =_ddga ;};case *PdfFieldChoice :switch _ddga .(type ){case *_aec .PdfObjectName :if len (_ddga .String ())> 0{_cedc .V =_aec .MakeString (_ddga .String ());_fffab (_cedc ,_ddga );};case *_aec .PdfObjectString :if len (_ddga .String ())> 0{_cedc .V =_ddga ;_fffab (_cedc ,_aec .MakeName (_ddga .String ()));};default:_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_cedc .PartialName (),_ddga );_cedc .V =_ddga ;};case *PdfFieldSignature :_de .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_cedc .PartialName (),_ddga );};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_feed *PdfAnnotationRedact )ToPdfObject ()_aec .PdfObject {_feed .PdfAnnotation .ToPdfObject ();_dccf :=_feed ._bcce ;_bfgg :=_dccf .PdfObject .(*_aec .PdfObjectDictionary );_feed .PdfAnnotationMarkup .appendToPdfDictionary (_bfgg );_bfgg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));_bfgg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_feed .QuadPoints );_bfgg .SetIfNotNil ("\u0049\u0043",_feed .IC );_bfgg .SetIfNotNil ("\u0052\u004f",_feed .RO );_bfgg .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_feed .OverlayText );_bfgg .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_feed .Repeat );_bfgg .SetIfNotNil ("\u0044\u0041",_feed .DA );_bfgg .SetIfNotNil ("\u0051",_feed .Q );return _dccf ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_ffbcd *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_cgeb ,_ ,_dcgad :=_ffbcd .CharcodesToUnicodeWithStats (_ffbcd .BytesToCharcodes (data ));_faac :=_cad .ExpandLigatures (_cgeb );return _faac ,_bd .RuneCountInString (_faac ),_dcgad ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_cddfd _fb .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_aedeb _dfd .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_dgdbad _dfd .Image )(*Image ,error );

// Compress an image.
Compress (_bgdc *Image ,_cfggg int64 )(*Image ,error );};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_aec .PdfObjectStream )(*XObjectImage ,error ){_ffbfa :=&XObjectImage {};_ffbfa ._deccfc =stream ;_cdggf :=*(stream .PdfObjectDictionary );_bcdbd ,_afgab :=_aec .NewEncoderFromStream (stream );if _afgab !=nil {return nil ,_afgab ;};_ffbfa .Filter =_bcdbd ;if _fcdfe :=_aec .TraceToDirectObject (_cdggf .Get ("\u0057\u0069\u0064t\u0068"));_fcdfe !=nil {_bgbee ,_geggb :=_fcdfe .(*_aec .PdfObjectInteger );if !_geggb {return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");};_aeeaf :=int64 (*_bgbee );_ffbfa .Width =&_aeeaf ;}else {return nil ,_ed .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _bbga :=_aec .TraceToDirectObject (_cdggf .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_bbga !=nil {_edca ,_cbfga :=_bbga .(*_aec .PdfObjectInteger );if !_cbfga {return nil ,_ed .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_edad :=int64 (*_edca );_ffbfa .Height =&_edad ;}else {return nil ,_ed .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _fcedf :=_aec .TraceToDirectObject (_cdggf .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));_fcedf !=nil {_bcafd ,_eeebba :=NewPdfColorspaceFromPdfObject (_fcedf );if _eeebba !=nil {return nil ,_eeebba ;};_ffbfa .ColorSpace =_bcafd ;}else {_de .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");_ffbfa .ColorSpace =NewPdfColorspaceDeviceGray ();};if _cedee :=_aec .TraceToDirectObject (_cdggf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_cedee !=nil {_ffcad ,_ebcfg :=_cedee .(*_aec .PdfObjectInteger );if !_ebcfg {return nil ,_ed .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_gabgg :=int64 (*_ffcad );_ffbfa .BitsPerComponent =&_gabgg ;};_ffbfa .Intent =_cdggf .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");_ffbfa .ImageMask =_cdggf .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_ffbfa .Mask =_cdggf .Get ("\u004d\u0061\u0073\u006b");_ffbfa .Decode =_cdggf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_ffbfa .Interpolate =_cdggf .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");_ffbfa .Alternatives =_cdggf .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_ffbfa .SMask =_cdggf .Get ("\u0053\u004d\u0061s\u006b");_ffbfa .SMaskInData =_cdggf .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");_ffbfa .Matte =_cdggf .Get ("\u004d\u0061\u0074t\u0065");_ffbfa .Name =_cdggf .Get ("\u004e\u0061\u006d\u0065");_ffbfa .StructParent =_cdggf .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_ffbfa .ID =_cdggf .Get ("\u0049\u0044");_ffbfa .OPI =_cdggf .Get ("\u004f\u0050\u0049");_ffbfa .Metadata =_cdggf .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ffbfa .OC =_cdggf .Get ("\u004f\u0043");_ffbfa .Stream =stream .Stream ;return _ffbfa ,nil ;};var _ pdfFont =(*pdfFontType0 )(nil );

// G returns the value of the green component of the color.
func (_aacg *PdfColorDeviceRGB )G ()float64 {return _aacg [1]};

// GetAscent returns the Ascent of the font `descriptor`.
func (_bdgb *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _aec .GetNumberAsFloat (_bdgb .Ascent );};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_dfffg *Image )GetSamples ()[]uint32 {_ecafa :=_bdd .ResampleBytes (_dfffg .Data ,int (_dfffg .BitsPerComponent ));if _dfffg .BitsPerComponent < 8{_ecafa =_dfffg .samplesTrimPadding (_ecafa );};_dbad :=int (_dfffg .Width )*int (_dfffg .Height )*_dfffg .ColorComponents ;if len (_ecafa )< _dbad {_de .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_ecafa ),_dbad );return _ecafa ;}else if len (_ecafa )> _dbad {_de .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_ecafa ),_dbad );_ecafa =_ecafa [:_dbad ];};return _ecafa ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _aec .PdfObject ;RichMediaContent _aec .PdfObject ;};func (_ccdfce *LTV )getOCSPs (_caafc []*_ad .Certificate ,_fafg map[string ]*_ad .Certificate )([][]byte ,error ){_befb :=make ([][]byte ,0,len (_caafc ));for _ ,_effdb :=range _caafc {for _ ,_ecae :=range _effdb .OCSPServer {if _ccdfce .CertClient .IsCA (_effdb ){continue ;};_efbgf ,_bgdad :=_fafg [_effdb .Issuer .CommonName ];if !_bgdad {_de .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");continue ;};_ ,_fefa ,_ggfbc :=_ccdfce .OCSPClient .MakeRequest (_ecae ,_effdb ,_efbgf );if _ggfbc !=nil {_de .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_ggfbc );continue ;};_befb =append (_befb ,_fefa );};};return _befb ,nil ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_ae .PSProgram ;_ebfbfb *_ae .PSExecutor ;_dcgbg []byte ;_aecgd *_aec .PdfObjectStream ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _aec .PdfObject ;IC _aec .PdfObject ;BE _aec .PdfObject ;RD _aec .PdfObject ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_gdd *PdfColorCalGray )GetNumComponents ()int {return 1};func (_abbca *PdfReader )buildOutlineTree (_ccfe _aec .PdfObject ,_ggagc *PdfOutlineTreeNode ,_facfe *PdfOutlineTreeNode ,_ebfd map[_aec .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _ebfd ==nil {_ebfd =map[_aec .PdfObject ]struct{}{};};_ebfd [_ccfe ]=struct{}{};_fdgc ,_bdeed :=_ccfe .(*_aec .PdfIndirectObject );if !_bdeed {return nil ,nil ,_g .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_ccfe );};_aaeb ,_ffebbc :=_fdgc .PdfObject .(*_aec .PdfObjectDictionary );if !_ffebbc {return nil ,nil ,_ed .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_de .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_aaeb ,_fdgc ,_fdgc );if _cgecd :=_aaeb .Get ("\u0054\u0069\u0074l\u0065");_cgecd !=nil {_adaca ,_defga :=_abbca .newPdfOutlineItemFromIndirectObject (_fdgc );if _defga !=nil {return nil ,nil ,_defga ;};_adaca .Parent =_ggagc ;_adaca .Prev =_facfe ;_bacb :=_aec .ResolveReference (_aaeb .Get ("\u0046\u0069\u0072s\u0074"));if _ ,_fcgcgb :=_ebfd [_bacb ];_bacb !=nil &&_bacb !=_fdgc &&!_fcgcgb {if !_aec .IsNullObject (_bacb ){_ggbd ,_gdabg ,_bdadf :=_abbca .buildOutlineTree (_bacb ,&_adaca .PdfOutlineTreeNode ,nil ,_ebfd );if _bdadf !=nil {_de .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_bdadf );}else {_adaca .First =_ggbd ;_adaca .Last =_gdabg ;};};};_fdefe :=_aec .ResolveReference (_aaeb .Get ("\u004e\u0065\u0078\u0074"));if _ ,_badga :=_ebfd [_fdefe ];_fdefe !=nil &&_fdefe !=_fdgc &&!_badga {if !_aec .IsNullObject (_fdefe ){_dccb ,_aggfd ,_adbbg :=_abbca .buildOutlineTree (_fdefe ,_ggagc ,&_adaca .PdfOutlineTreeNode ,_ebfd );if _adbbg !=nil {_de .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_adbbg );}else {_adaca .Next =_dccb ;return &_adaca .PdfOutlineTreeNode ,_aggfd ,nil ;};};};return &_adaca .PdfOutlineTreeNode ,&_adaca .PdfOutlineTreeNode ,nil ;};_efbgaf ,_babba :=_gcagc (_fdgc );if _babba !=nil {return nil ,nil ,_babba ;};_efbgaf .Parent =_ggagc ;if _efebe :=_aaeb .Get ("\u0046\u0069\u0072s\u0074");_efebe !=nil {_efebe =_aec .ResolveReference (_efebe );if _ ,_gdeba :=_ebfd [_efebe ];_efebe !=nil &&_efebe !=_fdgc &&!_gdeba {_eceb :=_aec .TraceToDirectObject (_efebe );if _ ,_agfdfd :=_eceb .(*_aec .PdfObjectNull );!_agfdfd &&_eceb !=nil {_efefeg ,_gaadg ,_bcffd :=_abbca .buildOutlineTree (_efebe ,&_efbgaf .PdfOutlineTreeNode ,nil ,_ebfd );if _bcffd !=nil {_de .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_bcffd );}else {_efbgaf .First =_efefeg ;_efbgaf .Last =_gaadg ;};};};};return &_efbgaf .PdfOutlineTreeNode ,&_efbgaf .PdfOutlineTreeNode ,nil ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_gecec *PdfColorLab )GetNumComponents ()int {return 3};

// ToPdfObject implements interface PdfModel.
func (_dge *PdfAnnotationPopup )ToPdfObject ()_aec .PdfObject {_dge .PdfAnnotation .ToPdfObject ();_bedc :=_dge ._bcce ;_degb :=_bedc .PdfObject .(*_aec .PdfObjectDictionary );_degb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0050\u006f\u0070u\u0070"));_degb .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dge .Parent );_degb .SetIfNotNil ("\u004f\u0070\u0065\u006e",_dge .Open );return _bedc ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_ebffea *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_daacg ,_afaca :=_aec .GetDict (_ebffea ._beffcb .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_afaca {_daacg =_aec .MakeDict ();_ebffea ._beffcb .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_daacg );};_fggg ,_afaca :=_aec .GetDict (_daacg .Get (_aec .PdfObjectName (extName )));if !_afaca {_fggg =_aec .MakeDict ();_daacg .Set (_aec .PdfObjectName (extName ),_fggg );};if _acde ,_ :=_aec .GetNameVal (_fggg .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));_acde !=baseVersion {_fggg .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_aec .MakeName (baseVersion ));};if _cbbeb ,_ :=_aec .GetIntVal (_fggg .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));_cbbeb !=extLevel {_fggg .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_aec .MakeInteger (int64 (extLevel )));};};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_gbdde *Image )GetParamsDict ()*_aec .PdfObjectDictionary {_cffb :=_aec .MakeDict ();_cffb .Set ("\u0057\u0069\u0064t\u0068",_aec .MakeInteger (_gbdde .Width ));_cffb .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_aec .MakeInteger (_gbdde .Height ));_cffb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_aec .MakeInteger (int64 (_gbdde .ColorComponents )));_cffb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aec .MakeInteger (_gbdde .BitsPerComponent ));return _cffb ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_cebd *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cebd .AlternateSpace ==nil {return nil ,_ed .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _cebd .AlternateSpace .ColorToRGB (color );};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_cgbfg *XObjectImage )SetFilter (encoder _aec .StreamEncoder )error {_dgfa :=_cgbfg .Stream ;_dccgf ,_gfggdc :=_cgbfg .Filter .DecodeBytes (_dgfa );if _gfggdc !=nil {return _gfggdc ;};_cgbfg .Filter =encoder ;encoder .UpdateParams (_cgbfg .getParamsDict ());_dgfa ,_gfggdc =encoder .EncodeBytes (_dccgf );if _gfggdc !=nil {return _gfggdc ;};_cgbfg .Stream =_dgfa ;return nil ;};func (_eeggb *PdfWriter )seekByName (_bfab _aec .PdfObject ,_gdgeeg []string ,_dcfbd string )([]_aec .PdfObject ,error ){_de .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_bfab );var _ddfdd []_aec .PdfObject ;if _ggcc ,_cafdd :=_bfab .(*_aec .PdfIndirectObject );_cafdd {return _eeggb .seekByName (_ggcc .PdfObject ,_gdgeeg ,_dcfbd );};if _adca ,_gdace :=_bfab .(*_aec .PdfObjectStream );_gdace {return _eeggb .seekByName (_adca .PdfObjectDictionary ,_gdgeeg ,_dcfbd );};if _bbggb ,_adea :=_bfab .(*_aec .PdfObjectDictionary );_adea {_de .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_bffbb :=range _bbggb .Keys (){_ddfgc :=_bbggb .Get (_bffbb );if string (_bffbb )==_dcfbd {_ddfdd =append (_ddfdd ,_ddfgc );};for _ ,_bcadg :=range _gdgeeg {if string (_bffbb )==_bcadg {_de .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_bcadg );_dcfba ,_aadggb :=_eeggb .seekByName (_ddfgc ,_gdgeeg ,_dcfbd );if _aadggb !=nil {return _ddfdd ,_aadggb ;};_ddfdd =append (_ddfdd ,_dcfba ...);break ;};};};return _ddfdd ,nil ;};return _ddfdd ,nil ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_daa :=NewPdfAnnotation ();_ffd :=&PdfAnnotation3D {};_ffd .PdfAnnotation =_daa ;_daa .SetContext (_ffd );return _ffd ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _aec .PdfObject ;BS _aec .PdfObject ;LE _aec .PdfObject ;IC _aec .PdfObject ;LL _aec .PdfObject ;LLE _aec .PdfObject ;Cap _aec .PdfObject ;IT _aec .PdfObject ;LLO _aec .PdfObject ;CP _aec .PdfObject ;Measure _aec .PdfObject ;CO _aec .PdfObject ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_eggf *PdfFontDescriptor )ToPdfObject ()_aec .PdfObject {_dgbb :=_aec .MakeDict ();if _eggf ._bdac ==nil {_eggf ._bdac =&_aec .PdfIndirectObject {};};_eggf ._bdac .PdfObject =_dgbb ;_dgbb .Set ("\u0054\u0079\u0070\u0065",_aec .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));if _eggf .FontName !=nil {_dgbb .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_eggf .FontName );};if _eggf .FontFamily !=nil {_dgbb .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_eggf .FontFamily );};if _eggf .FontStretch !=nil {_dgbb .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_eggf .FontStretch );};if _eggf .FontWeight !=nil {_dgbb .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_eggf .FontWeight );};if _eggf .Flags !=nil {_dgbb .Set ("\u0046\u006c\u0061g\u0073",_eggf .Flags );};if _eggf .FontBBox !=nil {_dgbb .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_eggf .FontBBox );};if _eggf .ItalicAngle !=nil {_dgbb .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_eggf .ItalicAngle );};if _eggf .Ascent !=nil {_dgbb .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_eggf .Ascent );};if _eggf .Descent !=nil {_dgbb .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_eggf .Descent );};if _eggf .Leading !=nil {_dgbb .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_eggf .Leading );};if _eggf .CapHeight !=nil {_dgbb .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_eggf .CapHeight );};if _eggf .XHeight !=nil {_dgbb .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_eggf .XHeight );};if _eggf .StemV !=nil {_dgbb .Set ("\u0053\u0074\u0065m\u0056",_eggf .StemV );};if _eggf .StemH !=nil {_dgbb .Set ("\u0053\u0074\u0065m\u0048",_eggf .StemH );};if _eggf .AvgWidth !=nil {_dgbb .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_eggf .AvgWidth );};if _eggf .MaxWidth !=nil {_dgbb .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_eggf .MaxWidth );};if _eggf .MissingWidth !=nil {_dgbb .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_eggf .MissingWidth );};if _eggf .FontFile !=nil {_dgbb .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_eggf .FontFile );};if _eggf .FontFile2 !=nil {_dgbb .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_eggf .FontFile2 );};if _eggf .FontFile3 !=nil {_dgbb .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_eggf .FontFile3 );};if _eggf .CharSet !=nil {_dgbb .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_eggf .CharSet );};if _eggf .Style !=nil {_dgbb .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_eggf .FontName );};if _eggf .Lang !=nil {_dgbb .Set ("\u004c\u0061\u006e\u0067",_eggf .Lang );};if _eggf .FD !=nil {_dgbb .Set ("\u0046\u0044",_eggf .FD );};if _eggf .CIDSet !=nil {_dgbb .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_eggf .CIDSet );};return _eggf ._bdac ;};func (_ffb *PdfReader )newPdfActionHideFromDict (_gecf *_aec .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_gecf .Get ("\u0054"),H :_gecf .Get ("\u0048")},nil ;};

// IsShading specifies if the pattern is a shading pattern.
func (_ccbb *PdfPattern )IsShading ()bool {return _ccbb .PatternType ==2};func (_beba *PdfReader )newPdfActionFromIndirectObject (_eaa *_aec .PdfIndirectObject )(*PdfAction ,error ){_eedd ,_bcc :=_eaa .PdfObject .(*_aec .PdfObjectDictionary );if !_bcc {return nil ,_g .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_beba ._bgeab .GetModelFromPrimitive (_eedd );model !=nil {_gbe ,_gae :=model .(*PdfAction );if !_gae {return nil ,_g .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");};return _gbe ,nil ;};_efg :=&PdfAction {};_efg ._gf =_eaa ;_beba ._bgeab .Register (_eedd ,_efg );if _bdb :=_eedd .Get ("\u0054\u0079\u0070\u0065");_bdb !=nil {_gdad ,_gbb :=_bdb .(*_aec .PdfObjectName );if !_gbb {_de .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_bdb );}else {if *_gdad !="\u0041\u0063\u0074\u0069\u006f\u006e"{_de .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_gdad );};_efg .Type =_gdad ;};};if _gcf :=_eedd .Get ("\u004e\u0065\u0078\u0074");_gcf !=nil {_efg .Next =_gcf ;};if _faa :=_eedd .Get ("\u0053");_faa !=nil {_efg .S =_faa ;};_fec ,_fdg :=_efg .S .(*_aec .PdfObjectName );if !_fdg {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_efg .S );return nil ,_g .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_efg .S );};_eee :=PdfActionType (_fec .String ());switch _eee {case ActionTypeGoTo :_efe ,_eac :=_beba .newPdfActionGotoFromDict (_eedd );if _eac !=nil {return nil ,_eac ;};_efe .PdfAction =_efg ;_efg ._bbgc =_efe ;return _efg ,nil ;case ActionTypeGoToR :_bdc ,_ebdc :=_beba .newPdfActionGotoRFromDict (_eedd );if _ebdc !=nil {return nil ,_ebdc ;};_bdc .PdfAction =_efg ;_efg ._bbgc =_bdc ;return _efg ,nil ;case ActionTypeGoToE :_dbc ,_gcad :=_beba .newPdfActionGotoEFromDict (_eedd );if _gcad !=nil {return nil ,_gcad ;};_dbc .PdfAction =_efg ;_efg ._bbgc =_dbc ;return _efg ,nil ;case ActionTypeLaunch :_fc ,_ccc :=_beba .newPdfActionLaunchFromDict (_eedd );if _ccc !=nil {return nil ,_ccc ;};_fc .PdfAction =_efg ;_efg ._bbgc =_fc ;return _efg ,nil ;case ActionTypeThread :_deb ,_aae :=_beba .newPdfActionThreadFromDict (_eedd );if _aae !=nil {return nil ,_aae ;};_deb .PdfAction =_efg ;_efg ._bbgc =_deb ;return _efg ,nil ;case ActionTypeURI :_agf ,_dcc :=_beba .newPdfActionURIFromDict (_eedd );if _dcc !=nil {return nil ,_dcc ;};_agf .PdfAction =_efg ;_efg ._bbgc =_agf ;return _efg ,nil ;case ActionTypeSound :_caa ,_gfc :=_beba .newPdfActionSoundFromDict (_eedd );if _gfc !=nil {return nil ,_gfc ;};_caa .PdfAction =_efg ;_efg ._bbgc =_caa ;return _efg ,nil ;case ActionTypeMovie :_cacc ,_eacf :=_beba .newPdfActionMovieFromDict (_eedd );if _eacf !=nil {return nil ,_eacf ;};_cacc .PdfAction =_efg ;_efg ._bbgc =_cacc ;return _efg ,nil ;case ActionTypeHide :_ede ,_edef :=_beba .newPdfActionHideFromDict (_eedd );if _edef !=nil {return nil ,_edef ;};_ede .PdfAction =_efg ;_efg ._bbgc =_ede ;return _efg ,nil ;case ActionTypeNamed :_caf ,_babe :=_beba .newPdfActionNamedFromDict (_eedd );if _babe !=nil {return nil ,_babe ;};_caf .PdfAction =_efg ;_efg ._bbgc =_caf ;return _efg ,nil ;case ActionTypeSubmitForm :_fgc ,_bfe :=_beba .newPdfActionSubmitFormFromDict (_eedd );if _bfe !=nil {return nil ,_bfe ;};_fgc .PdfAction =_efg ;_efg ._bbgc =_fgc ;return _efg ,nil ;case ActionTypeResetForm :_bde ,_efgd :=_beba .newPdfActionResetFormFromDict (_eedd );if _efgd !=nil {return nil ,_efgd ;};_bde .PdfAction =_efg ;_efg ._bbgc =_bde ;return _efg ,nil ;case ActionTypeImportData :_aeeg ,_abda :=_beba .newPdfActionImportDataFromDict (_eedd );if _abda !=nil {return nil ,_abda ;};_aeeg .PdfAction =_efg ;_efg ._bbgc =_aeeg ;return _efg ,nil ;case ActionTypeSetOCGState :_aedb ,_gfcf :=_beba .newPdfActionSetOCGStateFromDict (_eedd );if _gfcf !=nil {return nil ,_gfcf ;};_aedb .PdfAction =_efg ;_efg ._bbgc =_aedb ;return _efg ,nil ;case ActionTypeRendition :_eea ,_ggdc :=_beba .newPdfActionRenditionFromDict (_eedd );if _ggdc !=nil {return nil ,_ggdc ;};_eea .PdfAction =_efg ;_efg ._bbgc =_eea ;return _efg ,nil ;case ActionTypeTrans :_ggeg ,_efd :=_beba .newPdfActionTransFromDict (_eedd );if _efd !=nil {return nil ,_efd ;};_ggeg .PdfAction =_efg ;_efg ._bbgc =_ggeg ;return _efg ,nil ;case ActionTypeGoTo3DView :_bebe ,_cbf :=_beba .newPdfActionGoTo3DViewFromDict (_eedd );if _cbf !=nil {return nil ,_cbf ;};_bebe .PdfAction =_efg ;_efg ._bbgc =_bebe ;return _efg ,nil ;case ActionTypeJavaScript :_abc ,_dae :=_beba .newPdfActionJavaScriptFromDict (_eedd );if _dae !=nil {return nil ,_dae ;};_abc .PdfAction =_efg ;_efg ._bbgc =_abc ;return _efg ,nil ;};_de .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_eee );return nil ,nil ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_eebcd *XObjectImage )GetContainingPdfObject ()_aec .PdfObject {return _eebcd ._deccfc };func (_gfagb *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_aec .PdfObjectArray ;Domain *_aec .PdfObjectArray ;Function []PdfFunction ;Extend *_aec .PdfObjectArray ;};func _gcagc (_cfbcg *_aec .PdfIndirectObject )(*PdfOutline ,error ){_beefb ,_fcgbff :=_cfbcg .PdfObject .(*_aec .PdfObjectDictionary );if !_fcgbff {return nil ,_g .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_dabdgf :=NewPdfOutline ();if _dafcg :=_beefb .Get ("\u0054\u0079\u0070\u0065");_dafcg !=nil {_cabc ,_dbff :=_dafcg .(*_aec .PdfObjectName );if _dbff {if *_cabc !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_de .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_cabc );};};};if _egcd :=_beefb .Get ("\u0043\u006f\u0075n\u0074");_egcd !=nil {_daded ,_ddceg :=_aec .GetNumberAsInt64 (_egcd );if _ddceg !=nil {return nil ,_ddceg ;};_dabdgf .Count =&_daded ;};return _dabdgf ,nil ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_fcagg DefaultImageHandler )Read (reader _fb .Reader )(*Image ,error ){_bbgcba ,_ ,_bfba :=_dfd .Decode (reader );if _bfba !=nil {_de .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_bfba );return nil ,_bfba ;};return _fcagg .NewImageFromGoImage (_bbgcba );};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_fcbcc *PdfPageResources )SetXObjectImageByName (keyName _aec .PdfObjectName ,ximg *XObjectImage )error {_beced :=ximg .ToPdfObject ().(*_aec .PdfObjectStream );_babdb :=_fcbcc .SetXObjectByName (keyName ,_beced );return _babdb ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _d .Time ){_aecee .Lock ();defer _aecee .Unlock ();_bbbc =creationDate ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_ddef :=NewPdfAnnotation ();_fee :=&PdfAnnotationPolygon {};_fee .PdfAnnotation =_ddef ;_fee .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ddef .SetContext (_fee );return _fee ;};

// Encoder returns the font's text encoder.
func (_adabd pdfFontType0 )Encoder ()_cad .TextEncoder {return _adabd ._cdab };

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_def :=NewPdfAction ();_db :=&PdfActionImportData {};_db .PdfAction =_def ;_def .SetContext (_db );return _db ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_bdeg :=NewPdfAnnotation ();_ced :=&PdfAnnotationFreeText {};_ced .PdfAnnotation =_bdeg ;_ced .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bdeg .SetContext (_ced );return _ced ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_dedeb *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_baeff :=NewPdfOutlineItem ();_baeff .Title =_aec .MakeEncodedString (_dedeb .Title ,true );_baeff .Dest =_dedeb .Dest .ToPdfObject ();var _beee []*PdfOutlineItem ;var _fcdc int64 ;var _bagde *PdfOutlineItem ;for _ ,_gggb :=range _dedeb .Entries {_bdba ,_fgcgf :=_gggb .ToPdfOutlineItem ();_bdba .Parent =&_baeff .PdfOutlineTreeNode ;if _bagde !=nil {_bagde .Next =&_bdba .PdfOutlineTreeNode ;_bdba .Prev =&_bagde .PdfOutlineTreeNode ;};_beee =append (_beee ,_bdba );_fcdc +=_fgcgf ;_bagde =_bdba ;};_bbddg :=len (_beee );_fcdc +=int64 (_bbddg );if _bbddg > 0{_baeff .First =&_beee [0].PdfOutlineTreeNode ;_baeff .Last =&_beee [_bbddg -1].PdfOutlineTreeNode ;_baeff .Count =&_fcdc ;};return _baeff ,_fcdc ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_dgagd *PdfPageResources )GetFontByName (keyName _aec .PdfObjectName )(_aec .PdfObject ,bool ){if _dgagd .Font ==nil {return nil ,false ;};_bagea ,_geea :=_aec .TraceToDirectObject (_dgagd .Font ).(*_aec .PdfObjectDictionary );if !_geea {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_aec .TraceToDirectObject (_dgagd .Font ));return nil ,false ;};if _eaefg :=_bagea .Get (keyName );_eaefg !=nil {return _eaefg ,true ;};return nil ,false ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _aec .PdfObject ;Flags _aec .PdfObject ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_ge .CharMetrics ;func (_cbac *Image )samplesTrimPadding (_baed []uint32 )[]uint32 {_efdfa :=_cbac .ColorComponents *int (_cbac .Width )*int (_cbac .Height );if len (_baed )==_efdfa {return _baed ;};_acfc :=make ([]uint32 ,_efdfa );_abbfb :=int (_cbac .Width )*_cbac .ColorComponents ;var _gbfdc ,_gbaec ,_gaadbe ,_gaddc int ;_eecfe :=_be .BytesPerLine (int (_cbac .Width ),int (_cbac .BitsPerComponent ),_cbac .ColorComponents );for _gbfdc =0;_gbfdc < int (_cbac .Height );_gbfdc ++{_gbaec =_gbfdc *int (_cbac .Width );_gaadbe =_gbfdc *_eecfe ;for _gaddc =0;_gaddc < _abbfb ;_gaddc ++{_acfc [_gbaec +_gaddc ]=_baed [_gaadbe +_gaddc ];};};return _acfc ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_aggg *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_ed .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");};_ebc ,_degc :=_be .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._aaaa ,img ._dbdfe );if _degc !=nil {return img ,_degc ;};_bcfbb ,_degc :=_be .NRGBAConverter .Convert (_ebc );if _degc !=nil {return img ,_degc ;};_cfad :=_ffefc (_bcfbb .Base ());_de .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_de .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_de .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_cfad .Data );_de .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_cfad );return _cfad ,nil ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_ddcae *PdfSignature )bool ;Validate (_egga *PdfSignature ,_acgg Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_eecgg *PdfSignature )(Hasher ,error );Sign (_aafbc *PdfSignature ,_aaca Hasher )error ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_cedg *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_de .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");return img ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// String returns a string describing the font descriptor.
func (_bbgbc *PdfFontDescriptor )String ()string {var _gfbead []string ;if _bbgbc .FontName !=nil {_gfbead =append (_gfbead ,_bbgbc .FontName .String ());};if _bbgbc .FontFamily !=nil {_gfbead =append (_gfbead ,_bbgbc .FontFamily .String ());};if _bbgbc .fontFile !=nil {_gfbead =append (_gfbead ,_bbgbc .fontFile .String ());};if _bbgbc ._cagd !=nil {_gfbead =append (_gfbead ,_bbgbc ._cagd .String ());};_gfbead =append (_gfbead ,_g .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_bbgbc .FontFile3 !=nil ));return _g .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_ee .Join (_gfbead ,"\u002c\u0020"));};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_dbdg *PdfFieldButton )ToPdfObject ()_aec .PdfObject {_dbdg .PdfField .ToPdfObject ();_fbadf :=_dbdg ._cfaef ;_dfee :=_fbadf .PdfObject .(*_aec .PdfObjectDictionary );_dfee .Set ("\u0046\u0054",_aec .MakeName ("\u0042\u0074\u006e"));if _dbdg .Opt !=nil {_dfee .Set ("\u004f\u0070\u0074",_dbdg .Opt );};return _fbadf ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_fbeca *PdfReader )GetEncryptionMethod ()string {_cbcdb :=_fbeca ._adecd .GetCrypter ();return _cbcdb .String ();};func (_afag *PdfFunctionType0 )processSamples ()error {_abdf :=_bdd .ResampleBytes (_afag ._bbfc ,_afag .BitsPerSample );_afag ._adcd =_abdf ;return nil ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_cbfg *_aec .PdfIndirectObject ;};

// StdFontName represents name of a standard font.
type StdFontName =_ge .StdFontName ;

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_adgb *_aec .PdfIndirectObject ;_beca *_aec .PdfIndirectObject ;_dgee map[_aec .PdfObject ]struct{};_begcc []_aec .PdfObject ;_gbfef map[_aec .PdfObject ]struct{};_becee []*_aec .PdfIndirectObject ;_accb *PdfOutlineTreeNode ;_beffcb *_aec .PdfObjectDictionary ;_debdd []_aec .PdfObject ;_gcffc *_aec .PdfIndirectObject ;_gdfdf *_bb .Writer ;_fbbcb int64 ;_egcadc error ;_dfcfa *_aec .PdfCrypt ;_abcfe *_aec .PdfObjectDictionary ;_befce *_aec .PdfIndirectObject ;_cbgee *_aec .PdfObjectArray ;_cfbcgf int ;_gcfdc int ;_cbgea *bool ;_cddcc map[_aec .PdfObject ][]*_aec .PdfObjectDictionary ;_eacab *PdfAcroForm ;_ggaae Optimizer ;_dabeb map[int ]crossReference ;_dgfbe int64 ;ObjNumOffset int ;_cgcga bool ;_abaac _aec .XrefTable ;_cdeee int64 ;_bbecb int64 ;_gbcbf map[_aec .PdfObject ]int64 ;_aegg map[_aec .PdfObject ]struct{};};func (_cdb *PdfReader )newPdfActionResetFormFromDict (_abe *_aec .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_abe .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_abe .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_ccdfc *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_bcdg :=0.3*_ccdfc .R ()+0.59*_ccdfc .G ()+0.11*_ccdfc .B ();_bcdg =_dc .Min (_dc .Max (_bcdg ,0.0),1.0);return NewPdfColorDeviceGray (_bcdg );};

// ToPdfObject implements interface PdfModel.
func (_gdc *PdfAnnotationScreen )ToPdfObject ()_aec .PdfObject {_gdc .PdfAnnotation .ToPdfObject ();_gdaf :=_gdc ._bcce ;_dffeg :=_gdaf .PdfObject .(*_aec .PdfObjectDictionary );_dffeg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));_dffeg .SetIfNotNil ("\u0054",_gdc .T );_dffeg .SetIfNotNil ("\u004d\u004b",_gdc .MK );_dffeg .SetIfNotNil ("\u0041",_gdc .A );_dffeg .SetIfNotNil ("\u0041\u0041",_gdc .AA );return _gdaf ;};

// GetPage returns the PdfPage model for the specified page number.
func (_bbcgc *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _bbcgc ._adecd .GetCrypter ()!=nil &&!_bbcgc ._adecd .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};if len (_bbcgc ._daffa )< pageNumber {return nil ,_ed .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");};_aaedf :=pageNumber -1;if _aaedf < 0{return nil ,_g .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_ccgdd :=_bbcgc .PageList [_aaedf ];return _ccgdd ,nil ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_gbgc :=NewPdfAction ();_ded :=&PdfActionHide {};_ded .PdfAction =_gbgc ;_gbgc .SetContext (_ded );return _ded ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_ccbfb *PdfReader )IsEncrypted ()(bool ,error ){return _ccbfb ._adecd .IsEncrypted ()};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_fcabg *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_aec .StreamEncoder ,error ){_badbc ,_bgaa :=_fcabg ._aabdf .(*_aec .PdfObjectStream );if !_bgaa {_de .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fcabg ._aabdf );return nil ,nil ,_aec .ErrTypeError ;};_abba ,_bfddc :=_aec .DecodeStream (_badbc );if _bfddc !=nil {_de .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_bfddc );return nil ,nil ,_bfddc ;};_cbafa ,_bfddc :=_aec .NewEncoderFromStream (_badbc );if _bfddc !=nil {_de .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_bfddc );return nil ,nil ,_bfddc ;};return _abba ,_cbafa ,nil ;};func _ddedc (_afed *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_afed }};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_bcac *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _aggc []_cad .TextEncoder ;if _cgca :=_bcac .baseFields ()._bgae ;_cgca !=nil {_aggc =append (_aggc ,_cad .NewCMapEncoder ("",nil ,_cgca ));};if _bcfa :=_bcac .Encoder ();_bcfa !=nil {_aggc =append (_aggc ,_bcfa );};var _agcbe _add .Buffer ;var _aebe int ;for _ ,_fedeb :=range data {var _ddag bool ;for _ ,_cgebe :=range _aggc {if _gfbad :=_cgebe .Encode (string (_fedeb ));len (_gfbad )> 0{_agcbe .Write (_gfbad );_ddag =true ;break ;};};if !_ddag {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_fedeb );_aebe ++;};};if _aebe !=0{_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_aebe ,_bcac ,_aggc );};return _agcbe .Bytes (),_aebe ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// Subtype returns the font's "Subtype" field.
func (_ccfc *PdfFont )Subtype ()string {_cgddb :=_ccfc .baseFields ()._daed ;if _bcdgg ,_cca :=_ccfc ._gaga .(*pdfFontType0 );_cca {_cgddb =_cgddb +"\u003a"+_bcdgg .DescendantFont .Subtype ();};return _cgddb ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_dgdba :_aec .MakeIndirectObject (_aec .MakeDict ())};};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_gdfdc *PdfAcroForm ,_egca *PdfField ,_dfcfc *PdfAnnotationWidget )(*_aec .PdfObjectDictionary ,error );};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// ColorToRGB converts a CalGray color to an RGB color.
func (_afcfa *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_dfec ,_dbea :=color .(*PdfColorCalGray );if !_dbea {_de .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_dfec .Val ();X :=_afcfa .WhitePoint [0]*_dc .Pow (ANorm ,_afcfa .Gamma );Y :=_afcfa .WhitePoint [1]*_dc .Pow (ANorm ,_afcfa .Gamma );Z :=_afcfa .WhitePoint [2]*_dc .Pow (ANorm ,_afcfa .Gamma );_bcgb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_eecc :=-0.969256*X +1.875992*Y +0.041556*Z ;_eeag :=0.055648*X +-0.204043*Y +1.057311*Z ;_bcgb =_dc .Min (_dc .Max (_bcgb ,0),1.0);_eecc =_dc .Min (_dc .Max (_eecc ,0),1.0);_eeag =_dc .Min (_dc .Max (_eeag ,0),1.0);return NewPdfColorDeviceRGB (_bcgb ,_eecc ,_eeag ),nil ;};func (_efbg *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_aefg _aec .PdfObject ;};

// Add appends an outline item as a child of the current outline item.
func (_bgcaa *OutlineItem )Add (item *OutlineItem ){_bgcaa .Entries =append (_bgcaa .Entries ,item )};func _abfbc ()string {_aecee .Lock ();defer _aecee .Unlock ();return _fbadff };

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_aec .PdfObjectInteger ;BitsPerComponent *_aec .PdfObjectInteger ;BitsPerFlag *_aec .PdfObjectInteger ;Decode *_aec .PdfObjectArray ;Function []PdfFunction ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _aec .PdfObject ;LE _aec .PdfObject ;BS _aec .PdfObject ;IC _aec .PdfObject ;BE _aec .PdfObject ;IT _aec .PdfObject ;Measure _aec .PdfObject ;};

// GetContentStreams returns the content stream as an array of strings.
func (_gfaga *PdfPage )GetContentStreams ()([]string ,error ){_efaceb :=_gfaga .GetContentStreamObjs ();var _bdcc []string ;for _ ,_edac :=range _efaceb {_gcge ,_ffebb :=_ddfdc (_edac );if _ffebb !=nil {return nil ,_ffebb ;};_bdcc =append (_bdcc ,_gcge );};return _bdcc ,nil ;};func (_ebe *PdfReader )newPdfAnnotationWidgetFromDict (_fffd *_aec .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_aceec :=PdfAnnotationWidget {};_aceec .H =_fffd .Get ("\u0048");_aceec .MK =_fffd .Get ("\u004d\u004b");_aceec .A =_fffd .Get ("\u0041");_aceec .AA =_fffd .Get ("\u0041\u0041");_aceec .BS =_fffd .Get ("\u0042\u0053");_aceec .Parent =_fffd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_aceec ,nil ;};

// String returns the name of the colorspace (DeviceN).
func (_adbfe *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// GetContainingPdfObject implements interface PdfModel.
func (_gb *PdfAction )GetContainingPdfObject ()_aec .PdfObject {return _gb ._gf };func (_cceg *PdfReader )newPdfAnnotationFileAttachmentFromDict (_dfab *_aec .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_cde :=PdfAnnotationFileAttachment {};_cfgb ,_abb :=_cceg .newPdfAnnotationMarkupFromDict (_dfab );if _abb !=nil {return nil ,_abb ;};_cde .PdfAnnotationMarkup =_cfgb ;_cde .FS =_dfab .Get ("\u0046\u0053");_cde .Name =_dfab .Get ("\u004e\u0061\u006d\u0065");return &_cde ,nil ;};func (_babcd *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _cfaa :=_babcd ._dabc ;_cfaa !=nil {return _cfaa ;};return _babcd ._eacae ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_cafg *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fef :=vals [0];if _fef < 0.0||_fef > 100.0{_de .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_fef );return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcdde :=vals [1];_cfcfb :=float64 (-100);_gefdce :=float64 (100);if len (_cafg .Range )> 1{_cfcfb =_cafg .Range [0];_gefdce =_cafg .Range [1];};if _fcdde < _cfcfb ||_fcdde > _gefdce {_de .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_fcdde ,_cfcfb ,_gefdce );return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfce :=vals [2];_fddb :=float64 (-100);_gdfcc :=float64 (100);if len (_cafg .Range )> 3{_fddb =_cafg .Range [2];_gdfcc =_cafg .Range [3];};if _gfce < _fddb ||_gfce > _gdfcc {_de .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_gfce ,_fddb ,_gdfcc );return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdg :=NewPdfColorLab (_fef ,_fcdde ,_gfce );return _cdg ,nil ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_gbab *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _gbab .baseFields ()._dabc !=nil {return _gbab .baseFields ()._dabc ;};if _gdcg :=_gbab ._gaga .getFontDescriptor ();_gdcg !=nil {return _gdcg ;};_de .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_gbab );return nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_bbdae *PdfShadingPattern )ToPdfObject ()_aec .PdfObject {_bbdae .PdfPattern .ToPdfObject ();_ecga :=_bbdae .getDict ();if _bbdae .Shading !=nil {_ecga .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bbdae .Shading .ToPdfObject ());};if _bbdae .Matrix !=nil {_ecga .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bbdae .Matrix );};if _bbdae .ExtGState !=nil {_ecga .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bbdae .ExtGState );};return _bbdae ._aabdf ;};func (_dfabd *PdfReader )buildPageList (_eedcc *_aec .PdfIndirectObject ,_edfg *_aec .PdfIndirectObject ,_cccd map[_aec .PdfObject ]struct{})error {if _eedcc ==nil {return nil ;};if _ ,_beaa :=_cccd [_eedcc ];_beaa {_de .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_eedcc .ObjectNumber );return nil ;};_cccd [_eedcc ]=struct{}{};_adda ,_baad :=_eedcc .PdfObject .(*_aec .PdfObjectDictionary );if !_baad {return _ed .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_bdgdc ,_baad :=(*_adda ).Get ("\u0054\u0079\u0070\u0065").(*_aec .PdfObjectName );if !_baad {if _adda .Get ("\u004b\u0069\u0064\u0073")==nil {return _ed .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_de .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");_bdgdc =_aec .MakeName ("\u0050\u0061\u0067e\u0073");_adda .Set ("\u0054\u0079\u0070\u0065",_bdgdc );};_de .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_bdgdc ,_eedcc );if *_bdgdc =="\u0050\u0061\u0067\u0065"{_fedge ,_beccfa :=_dfabd .newPdfPageFromDict (_adda );if _beccfa !=nil {return _beccfa ;};_fedge .setContainer (_eedcc );if _edfg !=nil {_adda .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_edfg );};_dfabd ._daffa =append (_dfabd ._daffa ,_eedcc );_dfabd .PageList =append (_dfabd .PageList ,_fedge );return nil ;};if *_bdgdc !="\u0050\u0061\u0067e\u0073"{_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_bdgdc );return _ed .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");};if _edfg !=nil {_adda .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_edfg );};if !_dfabd ._dfga {_ceeee :=_dfabd .traverseObjectData (_eedcc );if _ceeee !=nil {return _ceeee ;};};_dbfag ,_beaeb :=_dfabd ._adecd .Resolve (_adda .Get ("\u004b\u0069\u0064\u0073"));if _beaeb !=nil {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _beaeb ;};var _dfdbc *_aec .PdfObjectArray ;_dfdbc ,_baad =_dbfag .(*_aec .PdfObjectArray );if !_baad {_fcda ,_edcg :=_dbfag .(*_aec .PdfIndirectObject );if !_edcg {return _ed .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dfdbc ,_baad =_fcda .PdfObject .(*_aec .PdfObjectArray );if !_baad {return _ed .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_de .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_dfdbc );for _aecbc ,_cfddc :=range _dfdbc .Elements (){_feadb ,_bdde :=_aec .GetIndirect (_cfddc );if !_bdde {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_feadb );return _ed .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dfdbc .Set (_aecbc ,_feadb );_beaeb =_dfabd .buildPageList (_feadb ,_eedcc ,_cccd );if _beaeb !=nil {return _beaeb ;};};return nil ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};func _daeag (_dfdge *[]*PdfField ,_gdbbf FieldFilterFunc ,_gged bool )[]*PdfField {if _dfdge ==nil {return nil ;};_eefga :=*_dfdge ;if len (*_dfdge )==0{return nil ;};_bfcab :=_eefga [:0];if _gdbbf ==nil {_gdbbf =func (*PdfField )bool {return true };};var _gbgggg []*PdfField ;for _ ,_abaa :=range _eefga {_egcg :=_gdbbf (_abaa );if _egcg {_gbgggg =append (_gbgggg ,_abaa );if len (_abaa .Kids )> 0{_gbgggg =append (_gbgggg ,_daeag (&_abaa .Kids ,_gdbbf ,_gged )...);};};if !_gged ||!_egcg ||len (_abaa .Kids )> 0{_bfcab =append (_bfcab ,_abaa );};};*_dfdge =_bfcab ;return _gbgggg ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_deabf :=PdfDate {};_acbgg :=_gfcb .FindAllStringSubmatch (dateStr ,1);if len (_acbgg )< 1{return _deabf ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );};if len (_acbgg [0])!=10{return _deabf ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");};_deabf ._aegdg ,_ =_da .ParseInt (_acbgg [0][1],10,32);_deabf ._fddeg ,_ =_da .ParseInt (_acbgg [0][2],10,32);_deabf ._gcfga ,_ =_da .ParseInt (_acbgg [0][3],10,32);_deabf ._fcedg ,_ =_da .ParseInt (_acbgg [0][4],10,32);_deabf ._dgbfe ,_ =_da .ParseInt (_acbgg [0][5],10,32);_deabf ._ccaf ,_ =_da .ParseInt (_acbgg [0][6],10,32);if len (_acbgg [0][7])> 0{_deabf ._gbfeg =_acbgg [0][7][0];}else {_deabf ._gbfeg ='+';};if len (_acbgg [0][8])> 0{_deabf ._cdagg ,_ =_da .ParseInt (_acbgg [0][8],10,32);}else {_deabf ._cdagg =0;};if len (_acbgg [0][9])> 0{_deabf ._bebd ,_ =_da .ParseInt (_acbgg [0][9],10,32);}else {_deabf ._bebd =0;};return _deabf ,nil ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_cgbaa *Image )ToGoImage ()(_dfd .Image ,error ){_de .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_cfbab ,_fgeb :=_be .NewImage (int (_cgbaa .Width ),int (_cgbaa .Height ),int (_cgbaa .BitsPerComponent ),_cgbaa .ColorComponents ,_cgbaa .Data ,_cgbaa ._aaaa ,_cgbaa ._dbdfe );if _fgeb !=nil {return nil ,_fgeb ;};return _cfbab ,nil ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_aec .PdfIndirectObject ;SV *_aec .PdfIndirectObject ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_gdagc interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_cbaf *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_cbaf .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_cbaf ._bedb =acroForm ;};const (_gddd =0x00001;_ebfc =0x00002;_fdce =0x00004;_dadgag =0x00008;_fefbd =0x00020;_fccf =0x00040;_daeg =0x10000;_bdbfe =0x20000;_gaec =0x40000;);

// SetBorderWidth sets the style's border width.
func (_agca *PdfBorderStyle )SetBorderWidth (width float64 ){_agca .W =&width };

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_afb PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_aec .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_agfb []_aec .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_bbdg []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};func (_adfd *PdfReader )newPdfActionSoundFromDict (_becf *_aec .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_becf .Get ("\u0053\u006f\u0075n\u0064"),Volume :_becf .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_becf .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_becf .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_becf .Get ("\u004d\u0069\u0078")},nil ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_daag *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_eccdf :=_daag .GetContentStreamObjs ();wrapContents =wrapContents &&len (_eccdf )> 0;_egfg :=_aec .NewFlateEncoder ();_edcf :=_aec .MakeArray ();if wrapContents {_gcdg ,_edaff :=_aec .MakeStream ([]byte ("\u0071\u000a"),_egfg );if _edaff !=nil {return _edaff ;};_edcf .Append (_gcdg );};_edcf .Append (_eccdf ...);if wrapContents {_dgea ,_dgace :=_aec .MakeStream ([]byte ("\u000a\u0051\u000a"),_egfg );if _dgace !=nil {return _dgace ;};_edcf .Append (_dgea );};_fafa ,_dbfeb :=_aec .MakeStream (cs ,_egfg );if _dbfeb !=nil {return _dbfeb ;};_edcf .Append (_fafa );_daag .Contents =_edcf ;return nil ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_bdg :=NewPdfAction ();_bf :=&PdfActionLaunch {};_bf .PdfAction =_bdg ;_bdg .SetContext (_bf );return _bf ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _aec .PdfObject ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_cdfcc *PdfPageResources )SetFontByName (keyName _aec .PdfObjectName ,obj _aec .PdfObject )error {if _cdfcc .Font ==nil {_cdfcc .Font =_aec .MakeDict ();};_cafce ,_accga :=_aec .TraceToDirectObject (_cdfcc .Font ).(*_aec .PdfObjectDictionary );if !_accga {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_aec .TraceToDirectObject (_cdfcc .Font ));return _aec .ErrTypeError ;};_cafce .Set (keyName ,obj );return nil ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_feagb *_aec .PdfObjectDictionary ;_cgfe *_aec .PdfIndirectObject ;};func _bcbd (_badg _aec .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_affb :=NewPdfColorspaceSpecialSeparation ();if _ebdgb ,_cab :=_badg .(*_aec .PdfIndirectObject );_cab {_affb ._agea =_ebdgb ;};_badg =_aec .TraceToDirectObject (_badg );_caga ,_cgee :=_badg .(*_aec .PdfObjectArray );if !_cgee {return nil ,_g .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _caga .Len ()!=4{return nil ,_g .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_badg =_caga .Get (0);_ffbg ,_cgee :=_badg .(*_aec .PdfObjectName );if !_cgee {return nil ,_g .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_ffbg !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_g .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};_badg =_caga .Get (1);_ffbg ,_cgee =_badg .(*_aec .PdfObjectName );if !_cgee {return nil ,_g .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");};_affb .ColorantName =_ffbg ;_badg =_caga .Get (2);_ffaf ,_dccag :=NewPdfColorspaceFromPdfObject (_badg );if _dccag !=nil {return nil ,_dccag ;};_affb .AlternateSpace =_ffaf ;_bbfb ,_dccag :=_cgefb (_caga .Get (3));if _dccag !=nil {return nil ,_dccag ;};_affb .TintTransform =_bbfb ;return _affb ,nil ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_aec .PdfObjectArray ;ExtGState _aec .PdfObject ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_aeb :=NewPdfAction ();_beb :=&PdfActionJavaScript {};_beb .PdfAction =_aeb ;_aeb .SetContext (_beb );return _beb ;};func _cagcgd (_cecca []byte )([]byte ,error ){_cgddd :=_df .New ();if _ ,_becgg :=_fb .Copy (_cgddd ,_add .NewReader (_cecca ));_becgg !=nil {return nil ,_becgg ;};return _cgddd .Sum (nil ),nil ;};

// Y returns the value of the yellow component of the color.
func (_aad *PdfColorDeviceCMYK )Y ()float64 {return _aad [2]};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_caea *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_aec .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcfa ,_cbga :=_aec .GetNumbersAsFloat (objects );if _cbga !=nil {return nil ,_cbga ;};return _caea .ColorFromFloats (_gcfa );};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};func (_bfegg fontCommon )coreString ()string {_ddffc :="";if _bfegg ._dabc !=nil {_ddffc =_bfegg ._dabc .String ();};return _g .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_bfegg ._daed ,_bfegg ._ecbb ,_bfegg ._cbda ,_bfegg ._ddee ,_bfegg ._bcfaa !=nil ,_bfegg .fontFlags (),_ddffc );};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_badad *PdfReader )GetPageLabels ()(_aec .PdfObject ,error ){_cabeb :=_aec .ResolveReference (_badad ._cded .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _cabeb ==nil {return nil ,nil ;};if !_badad ._dfga {_gfec :=_badad .traverseObjectData (_cabeb );if _gfec !=nil {return nil ,_gfec ;};};return _cabeb ,nil ;};

// RemovePage removes a page by number.
func (_abca *PdfAppender )RemovePage (pageNum int ){_ccfa :=pageNum -1;_abca ._fbbe =append (_abca ._fbbe [0:_ccfa ],_abca ._fbbe [pageNum :]...);};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_aded *PdfWriter )SetDocInfo (info *PdfInfo ){if _aded .hasObject (_aded ._gcffc ){delete (_aded ._gbfef ,_aded ._gcffc );delete (_aded ._aegg ,_aded ._gcffc );for _dabdce ,_dggdbe :=range _aded ._begcc {if _dggdbe ==_aded ._gcffc {copy (_aded ._begcc [_dabdce :],_aded ._begcc [_dabdce +1:]);_aded ._begcc [len (_aded ._begcc )-1]=nil ;_aded ._begcc =_aded ._begcc [:len (_aded ._begcc )-1];break ;};};};_feeef :=_aec .PdfIndirectObject {};_feeef .PdfObject =info .ToPdfObject ();_aded ._gcffc =&_feeef ;_aded .addObject (&_feeef );};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _d .Time ){_aecee .Lock ();defer _aecee .Unlock ();_gbgad =modifiedDate ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_afbfg *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_fgag ,_ccde :=color .(*PdfColorPattern );if !_ccde {_de .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );return nil ,ErrTypeCheck ;};if _fgag .Color ==nil {return color ,nil ;};if _afbfg .UnderlyingCS ==nil {return nil ,_ed .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _afbfg .UnderlyingCS .ColorToRGB (_fgag .Color );};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_fg :=NewPdfAction ();_adff :=&PdfActionNamed {};_adff .PdfAction =_fg ;_fg .SetContext (_adff );return _adff ;};

// GetContainingPdfObject implements interface PdfModel.
func (_gaa *PdfAnnotation )GetContainingPdfObject ()_aec .PdfObject {return _gaa ._bcce };

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_aecee .Lock ();defer _aecee .Unlock ();_cbcae =keywords };func (_fddc *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_ccegg PdfModel ;_cfaef *_aec .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_aec .PdfObjectName ;T *_aec .PdfObjectString ;TU *_aec .PdfObjectString ;TM *_aec .PdfObjectString ;Ff *_aec .PdfObjectInteger ;V _aec .PdfObject ;DV _aec .PdfObject ;AA _aec .PdfObject ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_aef :=NewPdfAnnotation ();_aeg :=&PdfAnnotationPrinterMark {};_aeg .PdfAnnotation =_aef ;_aef .SetContext (_aeg );return _aeg ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_gedb FieldFlag )Has (fl FieldFlag )bool {return (_gedb .Mask ()&fl .Mask ())> 0};

// Evaluate runs the function on the passed in slice and returns the results.
func (_dagea *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_dagea .NumInputs {_de .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");return nil ,_ed .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _dagea ._adcd ==nil {_efcfd :=_dagea .processSamples ();if _efcfd !=nil {return nil ,_efcfd ;};};_gggc :=_dagea .Encode ;if _gggc ==nil {_gggc =[]float64 {};for _fdeeb :=0;_fdeeb < len (_dagea .Size );_fdeeb ++{_gggc =append (_gggc ,0);_gggc =append (_gggc ,float64 (_dagea .Size [_fdeeb ]-1));};};_effc :=_dagea .Decode ;if _effc ==nil {_effc =_dagea .Range ;};_ceccd :=make ([]int ,len (x ));for _dgbgg :=0;_dgbgg < len (x );_dgbgg ++{_bbdgc :=x [_dgbgg ];_aedfd :=_dc .Min (_dc .Max (_bbdgc ,_dagea .Domain [2*_dgbgg ]),_dagea .Domain [2*_dgbgg +1]);_ebcbf :=_be .LinearInterpolate (_aedfd ,_dagea .Domain [2*_dgbgg ],_dagea .Domain [2*_dgbgg +1],_gggc [2*_dgbgg ],_gggc [2*_dgbgg +1]);_fbdd :=_dc .Min (_dc .Max (_ebcbf ,0),float64 (_dagea .Size [_dgbgg ]-1));_ddafe :=int (_dc .Floor (_fbdd +0.5));if _ddafe < 0{_ddafe =0;}else if _ddafe > _dagea .Size [_dgbgg ]{_ddafe =_dagea .Size [_dgbgg ]-1;};_ceccd [_dgbgg ]=_ddafe ;};_eefbd :=_ceccd [0];for _beegd :=1;_beegd < _dagea .NumInputs ;_beegd ++{_bbca :=_ceccd [_beegd ];for _gcadg :=0;_gcadg < _beegd ;_gcadg ++{_bbca *=_dagea .Size [_gcadg ];};_eefbd +=_bbca ;};_eefbd *=_dagea .NumOutputs ;var _ffbd []float64 ;for _bbab :=0;_bbab < _dagea .NumOutputs ;_bbab ++{_cggfe :=_eefbd +_bbab ;if _cggfe >=len (_dagea ._adcd ){_de .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");continue ;};_efeda :=_dagea ._adcd [_cggfe ];_bcgff :=_be .LinearInterpolate (float64 (_efeda ),0,_dc .Pow (2,float64 (_dagea .BitsPerSample )),_effc [2*_bbab ],_effc [2*_bbab +1]);_fadbd :=_dc .Min (_dc .Max (_bcgff ,_dagea .Range [2*_bbab ]),_dagea .Range [2*_bbab +1]);_ffbd =append (_ffbd ,_fadbd );};return _ffbd ,nil ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_eeda *PdfField )FullName ()(string ,error ){var _ccbc _add .Buffer ;_cgda :=[]string {};if _eeda .T !=nil {_cgda =append (_cgda ,_eeda .T .Decoded ());};_dddcg :=map[*PdfField ]bool {};_dddcg [_eeda ]=true ;_ffff :=_eeda .Parent ;for _ffff !=nil {if _ ,_dfgf :=_dddcg [_ffff ];_dfgf {return _ccbc .String (),_ed .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _ffff .T ==nil {return _ccbc .String (),_ed .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");};_cgda =append (_cgda ,_ffff .T .Decoded ());_dddcg [_ffff ]=true ;_ffff =_ffff .Parent ;};for _geegg :=len (_cgda )-1;_geegg >=0;_geegg --{_ccbc .WriteString (_cgda [_geegg ]);if _geegg > 0{_ccbc .WriteString ("\u002e");};};return _ccbc .String (),nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_eegc *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecbgd :=vals [0];if _ecbgd < 0.0||_ecbgd > 1.0{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dfeba :=NewPdfColorCalGray (_ecbgd );return _dfeba ,nil ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _aec .PdfObject ;B _aec .PdfObject ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);func (_dfaba *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};func _daea (_cfcfc _aec .PdfObject )(*PdfColorspaceCalRGB ,error ){_bfdd :=NewPdfColorspaceCalRGB ();if _gbga ,_fgbcgb :=_cfcfc .(*_aec .PdfIndirectObject );_fgbcgb {_bfdd ._cgfe =_gbga ;};_cfcfc =_aec .TraceToDirectObject (_cfcfc );_beaef ,_agabe :=_cfcfc .(*_aec .PdfObjectArray );if !_agabe {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _beaef .Len ()!=2{return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_cfcfc =_aec .TraceToDirectObject (_beaef .Get (0));_fbadg ,_agabe :=_cfcfc .(*_aec .PdfObjectName );if !_agabe {return nil ,_g .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_fbadg !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_g .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_cfcfc =_aec .TraceToDirectObject (_beaef .Get (1));_efce ,_agabe :=_cfcfc .(*_aec .PdfObjectDictionary );if !_agabe {return nil ,_g .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_cfcfc =_efce .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cfcfc =_aec .TraceToDirectObject (_cfcfc );_afeee ,_agabe :=_cfcfc .(*_aec .PdfObjectArray );if !_agabe {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");};if _afeee .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_dgbe ,_gegg :=_afeee .GetAsFloat64Slice ();if _gegg !=nil {return nil ,_gegg ;};_bfdd .WhitePoint =_dgbe ;_cfcfc =_efce .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cfcfc !=nil {_cfcfc =_aec .TraceToDirectObject (_cfcfc );_dbg ,_dded :=_cfcfc .(*_aec .PdfObjectArray );if !_dded {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _dbg .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_adfe ,_fgbb :=_dbg .GetAsFloat64Slice ();if _fgbb !=nil {return nil ,_fgbb ;};_bfdd .BlackPoint =_adfe ;};_cfcfc =_efce .Get ("\u0047\u0061\u006dm\u0061");if _cfcfc !=nil {_cfcfc =_aec .TraceToDirectObject (_cfcfc );_caeaf ,_cbaa :=_cfcfc .(*_aec .PdfObjectArray );if !_cbaa {return nil ,_g .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _caeaf .Len ()!=3{return nil ,_g .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_efff ,_bcbf :=_caeaf .GetAsFloat64Slice ();if _bcbf !=nil {return nil ,_bcbf ;};_bfdd .Gamma =_efff ;};_cfcfc =_efce .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _cfcfc !=nil {_cfcfc =_aec .TraceToDirectObject (_cfcfc );_cfbf ,_dfcf :=_cfcfc .(*_aec .PdfObjectArray );if !_dfcf {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _cfbf .Len ()!=9{_de .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_cfbf .String ());return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_fdeg ,_agaa :=_cfbf .GetAsFloat64Slice ();if _agaa !=nil {return nil ,_agaa ;};_bfdd .Matrix =_fdeg ;};return _bfdd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ceeeaf *PdfSignature )ToPdfObject ()_aec .PdfObject {_cgaga :=_ceeeaf ._ccggd ;var _ggcgf *_aec .PdfObjectDictionary ;if _agcbc ,_gcfge :=_cgaga .PdfObject .(*pdfSignDictionary );_gcfge {_ggcgf =_agcbc .PdfObjectDictionary ;}else {_ggcgf =_cgaga .PdfObject .(*_aec .PdfObjectDictionary );};_ggcgf .SetIfNotNil ("\u0054\u0079\u0070\u0065",_ceeeaf .Type );_ggcgf .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_ceeeaf .Filter );_ggcgf .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_ceeeaf .SubFilter );_ggcgf .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_ceeeaf .ByteRange );_ggcgf .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_ceeeaf .Contents );_ggcgf .SetIfNotNil ("\u0043\u0065\u0072\u0074",_ceeeaf .Cert );_ggcgf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ceeeaf .Name );_ggcgf .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_ceeeaf .Reason );_ggcgf .SetIfNotNil ("\u004d",_ceeeaf .M );_ggcgf .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_ceeeaf .Reference );_ggcgf .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_ceeeaf .Changes );_ggcgf .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_ceeeaf .ContactInfo );return _cgaga ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_gfggef *_aec .PdfIndirectObject ;};func _agcab ()string {_aecee .Lock ();defer _aecee .Unlock ();return _bfdec };

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_dfecg *PdfWriter )SetPageLabels (pageLabels _aec .PdfObject )error {if pageLabels ==nil {return nil ;};_de .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");_dfecg ._beffcb .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _dfecg .addObjects (pageLabels );};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_fd :=NewPdfAction ();_aed :=&PdfActionSound {};_aed .PdfAction =_fd ;_fd .SetContext (_aed );return _aed ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_cdcb *_aec .PdfIndirectObject ;};

// SetImage updates XObject Image with new image data.
func (_feebb *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_feebb .Filter .UpdateParams (img .GetParamsDict ());_dgbee ,_faaeb :=_feebb .Filter .EncodeBytes (img .Data );if _faaeb !=nil {return _faaeb ;};_feebb .Stream =_dgbee ;_gdegb :=img .Width ;_feebb .Width =&_gdegb ;_gfebe :=img .Height ;_feebb .Height =&_gfebe ;_dfcbb :=img .BitsPerComponent ;_feebb .BitsPerComponent =&_dfcbb ;if cs ==nil {if img .ColorComponents ==1{_feebb .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_feebb .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_feebb .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _ed .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_feebb .ColorSpace =cs ;};return nil ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_cfaef :_aec .MakeIndirectObject (_aec .MakeDict ())}};func (_aaeab *PdfPage )setContainer (_dddf *_aec .PdfIndirectObject ){_dddf .PdfObject =_aaeab ._defa ;_aaeab ._aggfc =_dddf ;};

// SetContentStream sets the pattern cell's content stream.
func (_cace *PdfTilingPattern )SetContentStream (content []byte ,encoder _aec .StreamEncoder )error {_efbfd ,_aeeeb :=_cace ._aabdf .(*_aec .PdfObjectStream );if !_aeeeb {_de .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cace ._aabdf );return _aec .ErrTypeError ;};if encoder ==nil {encoder =_aec .NewRawEncoder ();};_cbcg :=_efbfd .PdfObjectDictionary ;_gbdfe :=encoder .MakeStreamDict ();_cbcg .Merge (_gbdfe );_abggfb ,_ecbbg :=encoder .EncodeBytes (content );if _ecbbg !=nil {return _ecbbg ;};_cbcg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aec .MakeInteger (int64 (len (_abggfb ))));_efbfd .Stream =_abggfb ;return nil ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;var _gfcb =_dff .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_afffa *PdfReader )Decrypt (password []byte )(bool ,error ){_cdeba ,_afbfd :=_afffa ._adecd .Decrypt (password );if _afbfd !=nil {return false ,_afbfd ;};if !_cdeba {return false ,nil ;};_afbfd =_afffa .loadStructure ();if _afbfd !=nil {_de .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_afbfd );return false ,_afbfd ;};return true ,nil ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// Initialize initializes the PdfSignature.
func (_aeeec *PdfSignature )Initialize ()error {if _aeeec .Handler ==nil {return _ed .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};return _aeeec .Handler .InitSignature (_aeeec );};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _aec .PdfObject ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_fbff *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _fbff .flattenFieldsWithOpts (false ,appgen ,opts );};func (_agfg *PdfAppender )mergeResources (_gab ,_bcba _aec .PdfObject ,_acab map[_aec .PdfObjectName ]_aec .PdfObjectName )_aec .PdfObject {if _bcba ==nil &&_gab ==nil {return nil ;};if _bcba ==nil {return _gab ;};_geab ,_fagff :=_aec .GetDict (_bcba );if !_fagff {return _gab ;};if _gab ==nil {_dadc :=_aec .MakeDict ();_dadc .Merge (_geab );return _bcba ;};_bfcgb ,_fagff :=_aec .GetDict (_gab );if !_fagff {_de .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");_bfcgb =_aec .MakeDict ();};for _ ,_addb :=range _geab .Keys (){if _bgcb ,_aafb :=_acab [_addb ];_aafb {_bfcgb .Set (_bgcb ,_geab .Get (_addb ));}else {_bfcgb .Set (_addb ,_geab .Get (_addb ));};};return _bfcgb ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _fb .ReadSeeker )(*PdfFont ,error ){const _gfbgg =_cad .CharCode (32);const _ccdga =_cad .CharCode (255);_dgda ,_bcef :=_ecg .ReadAll (r );if _bcef !=nil {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_bcef );return nil ,_bcef ;};_dbab ,_bcef :=_ge .TtfParse (_add .NewReader (_dgda ));if _bcef !=nil {_de .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_bcef );return nil ,_bcef ;};_dabga :=&pdfFontSimple {_gcda :make (map[_cad .CharCode ]float64 ),fontCommon :fontCommon {_daed :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_dabga ._bfdb =_cad .NewWinAnsiEncoder ();_dabga ._ecbb =_dbab .PostScriptName ;_dabga .FirstChar =_aec .MakeInteger (int64 (_gfbgg ));_dabga .LastChar =_aec .MakeInteger (int64 (_ccdga ));_eced :=1000.0/float64 (_dbab .UnitsPerEm );if len (_dbab .Widths )<=0{return nil ,_ed .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_fagg :=_eced *float64 (_dbab .Widths [0]);_dbbed :=make ([]float64 ,0,_ccdga -_gfbgg +1);for _bcged :=_gfbgg ;_bcged <=_ccdga ;_bcged ++{_gddf ,_dafd :=_dabga .Encoder ().CharcodeToRune (_bcged );if !_dafd {_de .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_bcged );_dbbed =append (_dbbed ,_fagg );continue ;};_gfgg ,_bbeg :=_dbab .Chars [_gddf ];if !_bbeg {_de .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_dbbed =append (_dbbed ,_fagg );continue ;};_agfdc :=_eced *float64 (_dbab .Widths [_gfgg ]);_dbbed =append (_dbbed ,_agfdc );};_dabga .Widths =_aec .MakeIndirectObject (_aec .MakeArrayFromFloats (_dbbed ));if len (_dbbed )< int (_ccdga -_gfbgg +1){_de .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_dbbed ),255-32+1);return nil ,_aec .ErrRangeError ;};for _agfa :=_gfbgg ;_agfa <=_ccdga ;_agfa ++{_dabga ._gcda [_agfa ]=_dbbed [_agfa -_gfbgg ];};_dabga .Encoding =_aec .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_dceea :=&PdfFontDescriptor {};_dceea .FontName =_aec .MakeName (_dbab .PostScriptName );_dceea .Ascent =_aec .MakeFloat (_eced *float64 (_dbab .TypoAscender ));_dceea .Descent =_aec .MakeFloat (_eced *float64 (_dbab .TypoDescender ));_dceea .CapHeight =_aec .MakeFloat (_eced *float64 (_dbab .CapHeight ));_dceea .FontBBox =_aec .MakeArrayFromFloats ([]float64 {_eced *float64 (_dbab .Xmin ),_eced *float64 (_dbab .Ymin ),_eced *float64 (_dbab .Xmax ),_eced *float64 (_dbab .Ymax )});_dceea .ItalicAngle =_aec .MakeFloat (_dbab .ItalicAngle );_dceea .MissingWidth =_aec .MakeFloat (_eced *float64 (_dbab .Widths [0]));_afdfa ,_bcef :=_aec .MakeStream (_dgda ,_aec .NewFlateEncoder ());if _bcef !=nil {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_bcef );return nil ,_bcef ;};_afdfa .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_aec .MakeInteger (int64 (len (_dgda ))));_dceea .FontFile2 =_afdfa ;if _dbab .Bold {_dceea .StemV =_aec .MakeInteger (120);}else {_dceea .StemV =_aec .MakeInteger (70);};_gggg :=_fefbd ;if _dbab .IsFixedPitch {_gggg |=_gddd ;};if _dbab .ItalicAngle !=0{_gggg |=_fccf ;};_dceea .Flags =_aec .MakeInteger (int64 (_gggg ));_dabga ._dabc =_dceea ;_egbg :=&PdfFont {_gaga :_dabga };return _egbg ,nil ;};

// String returns a string that describes `font`.
func (_acaad *PdfFont )String ()string {_cfag :="";if _acaad ._gaga .Encoder ()!=nil {_cfag =_acaad ._gaga .Encoder ().String ();};return _g .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_acaad ._gaga ,_acaad .baseFields ().coreString (),_cfag );};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_cfdbe PdfModel ;_aabdf _aec .PdfObject ;};

// ToPdfObject converts date to a PDF string object.
func (_fgecff *PdfDate )ToPdfObject ()_aec .PdfObject {_deff :=_g .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_fgecff ._aegdg ,_fgecff ._fddeg ,_fgecff ._gcfga ,_fgecff ._fcedg ,_fgecff ._dgbfe ,_fgecff ._ccaf ,_fgecff ._gbfeg ,_fgecff ._cdagg ,_fgecff ._bebd );return _aec .MakeString (_deff );};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_acfa *PdfField )IsTerminal ()bool {return len (_acfa .Kids )==0};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_cagc ,_dccd :=NewStandard14Font (basefont );if _dccd !=nil {panic (_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));};return _cagc ;};

// GetOutlineTree returns the outline tree.
func (_fcgbe *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _fcgbe ._afaea };

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gdfab *PdfShadingType1 )ToPdfObject ()_aec .PdfObject {_gdfab .PdfShading .ToPdfObject ();_ddege ,_cccab :=_gdfab .getShadingDict ();if _cccab !=nil {_de .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _gdfab .Domain !=nil {_ddege .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gdfab .Domain );};if _gdfab .Matrix !=nil {_ddege .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gdfab .Matrix );};if _gdfab .Function !=nil {if len (_gdfab .Function )==1{_ddege .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gdfab .Function [0].ToPdfObject ());}else {_gfagcd :=_aec .MakeArray ();for _ ,_bfaeca :=range _gdfab .Function {_gfagcd .Append (_bfaeca .ToPdfObject ());};_ddege .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfagcd );};};return _gdfab ._cecd ;};func _gbbdg ()string {_deca :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _ggde _add .Buffer ;for _gbede :=0;_gbede < 6;_gbede ++{_ggde .WriteRune (rune (_deca [_ec .Intn (len (_deca ))]));};return _ggde .String ();};func _ceeac (_adfad *_aec .PdfObjectDictionary )(*PdfFieldChoice ,error ){_dbbc :=&PdfFieldChoice {};_dbbc .Opt ,_ =_aec .GetArray (_adfad .Get ("\u004f\u0070\u0074"));_dbbc .TI ,_ =_aec .GetInt (_adfad .Get ("\u0054\u0049"));_dbbc .I ,_ =_aec .GetArray (_adfad .Get ("\u0049"));return _dbbc ,nil ;};

// K returns the value of the key component of the color.
func (_cggb *PdfColorDeviceCMYK )K ()float64 {return _cggb [3]};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _aec .PdfObject ;Open _aec .PdfObject ;};func _agcea ()_d .Time {_aecee .Lock ();defer _aecee .Unlock ();return _gbgad };

// GetCerts returns the signature certificate chain.
func (_dbgca *PdfSignature )GetCerts ()([]*_ad .Certificate ,error ){var _gaeec []func ()([]*_ad .Certificate ,error );switch _ecdgb ,_ :=_aec .GetNameVal (_dbgca .SubFilter );_ecdgb {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_gaeec =append (_gaeec ,_dbgca .extractChainFromPKCS7 ,_dbgca .extractChainFromCert );case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_gaeec =append (_gaeec ,_dbgca .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_gaeec =append (_gaeec ,_dbgca .extractChainFromPKCS7 );default:return nil ,_g .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_ecdgb );};for _ ,_gffb :=range _gaeec {_eefde ,_gaffc :=_gffb ();if _gaffc !=nil {return nil ,_gaffc ;};if len (_eefde )> 0{return _eefde ,nil ;};};return nil ,ErrSignNoCertificates ;};

// MergePageWith appends page content to source Pdf file page content.
func (_facb *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_cbdf :=pageNum -1;var _afaa *PdfPage ;for _cdc ,_caccg :=range _facb ._fbbe {if _cdc ==_cbdf {_afaa =_caccg ;};};if _afaa ==nil {return _g .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );};if _afaa ._aggfc !=nil &&_afaa ._aggfc .GetParser ()==_facb ._aea ._adecd {_afaa =_afaa .Duplicate ();_facb ._fbbe [_cbdf ]=_afaa ;};page =page .Duplicate ();_gdcgc (page );_bfbd :=_gfge (_afaa );_cgdd :=_gfge (page );_ecag :=make (map[_aec .PdfObjectName ]_aec .PdfObjectName );for _becb :=range _cgdd {if _ ,_ggdfe :=_bfbd [_becb ];_ggdfe {for _cgdf :=1;true ;_cgdf ++{_dfg :=_aec .PdfObjectName (string (_becb )+_da .Itoa (_cgdf ));if _ ,_gcedb :=_bfbd [_dfg ];!_gcedb {_ecag [_becb ]=_dfg ;break ;};};};};_gbbf ,_eddd :=page .GetContentStreams ();if _eddd !=nil {return _eddd ;};_gade ,_eddd :=_afaa .GetContentStreams ();if _eddd !=nil {return _eddd ;};for _dfdcf ,_gfaf :=range _gbbf {for _dacbe ,_fffg :=range _ecag {_gfaf =_ee .Replace (_gfaf ,"\u002f"+string (_dacbe ),"\u002f"+string (_fffg ),-1);};_gbbf [_dfdcf ]=_gfaf ;};_gade =append (_gade ,_gbbf ...);if _gcfe :=_afaa .SetContentStreams (_gade ,_aec .NewFlateEncoder ());_gcfe !=nil {return _gcfe ;};_afaa ._cbbgf =append (_afaa ._cbbgf ,page ._cbbgf ...);if _afaa .Resources ==nil {_afaa .Resources =NewPdfPageResources ();};if page .Resources !=nil {_afaa .Resources .Font =_facb .mergeResources (_afaa .Resources .Font ,page .Resources .Font ,_ecag );_afaa .Resources .XObject =_facb .mergeResources (_afaa .Resources .XObject ,page .Resources .XObject ,_ecag );_afaa .Resources .Properties =_facb .mergeResources (_afaa .Resources .Properties ,page .Resources .Properties ,_ecag );if _afaa .Resources .ProcSet ==nil {_afaa .Resources .ProcSet =page .Resources .ProcSet ;};_afaa .Resources .Shading =_facb .mergeResources (_afaa .Resources .Shading ,page .Resources .Shading ,_ecag );_afaa .Resources .ExtGState =_facb .mergeResources (_afaa .Resources .ExtGState ,page .Resources .ExtGState ,_ecag );};_bbcg ,_eddd :=_afaa .GetMediaBox ();if _eddd !=nil {return _eddd ;};_deag ,_eddd :=page .GetMediaBox ();if _eddd !=nil {return _eddd ;};var _dbce bool ;if _bbcg .Llx > _deag .Llx {_bbcg .Llx =_deag .Llx ;_dbce =true ;};if _bbcg .Lly > _deag .Lly {_bbcg .Lly =_deag .Lly ;_dbce =true ;};if _bbcg .Urx < _deag .Urx {_bbcg .Urx =_deag .Urx ;_dbce =true ;};if _bbcg .Ury < _deag .Ury {_bbcg .Ury =_deag .Ury ;_dbce =true ;};if _dbce {_afaa .MediaBox =_bbcg ;};return nil ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_fe :=NewPdfAction ();_gbg :=&PdfActionGoTo {};_gbg .PdfAction =_fe ;_fe .SetContext (_gbg );return _gbg ;};

// ToPdfObject implements interface PdfModel.
func (_aee *PdfActionURI )ToPdfObject ()_aec .PdfObject {_aee .PdfAction .ToPdfObject ();_ebf :=_aee ._gf ;_fdf :=_ebf .PdfObject .(*_aec .PdfObjectDictionary );_fdf .SetIfNotNil ("\u0053",_aec .MakeName (string (ActionTypeURI )));_fdf .SetIfNotNil ("\u0055\u0052\u0049",_aee .URI );_fdf .SetIfNotNil ("\u0049\u0073\u004da\u0070",_aee .IsMap );return _ebf ;};

// ToPdfObject implements interface PdfModel.
func (_bba *PdfActionNamed )ToPdfObject ()_aec .PdfObject {_bba .PdfAction .ToPdfObject ();_fbb :=_bba ._gf ;_cf :=_fbb .PdfObject .(*_aec .PdfObjectDictionary );_cf .SetIfNotNil ("\u0053",_aec .MakeName (string (ActionTypeNamed )));_cf .SetIfNotNil ("\u004e",_bba .N );return _fbb ;};func _bgagc ()string {_aecee .Lock ();defer _aecee .Unlock ();return _cbddc };

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_gca :=NewPdfAction ();_gfb :=&PdfActionTrans {};_gfb .PdfAction =_gca ;_gca .SetContext (_gfb );return _gfb ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_fbcc *modelManager )GetPrimitiveFromModel (model PdfModel )_aec .PdfObject {_eeff ,_fdfgc :=_fbcc ._adefe [model ];if !_fdfgc {return nil ;};return _eeff ;};func _egbgf (_fcabd *_aec .PdfObjectArray )(float64 ,error ){_gfaee ,_abgad :=_fcabd .ToFloat64Array ();if _abgad !=nil {_de .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fcabd ,_abgad );};switch len (_gfaee ){case 1:return _gfaee [0],nil ;case 3:_bffbf :=PdfColorspaceDeviceRGB {};_eecbe ,_cdega :=_bffbf .ColorFromFloats (_gfaee );if _cdega !=nil {return 0.0,_cdega ;};return _eecbe .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_fcgfg :=PdfColorspaceDeviceCMYK {};_aabdfa ,_fbaef :=_fcgfg .ColorFromFloats (_gfaee );if _fbaef !=nil {return 0.0,_fbaef ;};_caagd ,_fbaef :=_fcgfg .ColorToRGB (_aabdfa .(*PdfColorDeviceCMYK ));if _fbaef !=nil {return 0.0,_fbaef ;};return _caagd .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_abgad =_ed .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_de .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fcabd ,_abgad );return 0.0,_abgad ;};func (_efdf *DSS )generateHashMaps ()error {_cdbb ,_aebf :=_efdf .generateHashMap (_efdf .Certs );if _aebf !=nil {return _aebf ;};_fbce ,_aebf :=_efdf .generateHashMap (_efdf .OCSPs );if _aebf !=nil {return _aebf ;};_bdge ,_aebf :=_efdf .generateHashMap (_efdf .CRLs );if _aebf !=nil {return _aebf ;};_efdf ._ggaed =_cdbb ;_efdf ._eecb =_fbce ;_efdf ._ccfba =_bdge ;return nil ;};func _bebc (_ffdec *_aec .PdfObjectStream )(*PdfFunctionType4 ,error ){_cbcee :=&PdfFunctionType4 {};_cbcee ._aecgd =_ffdec ;_cacf :=_ffdec .PdfObjectDictionary ;_ecfcd ,_bgcfg :=_aec .TraceToDirectObject (_cacf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_aec .PdfObjectArray );if !_bgcfg {_de .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _ecfcd .Len ()%2!=0{_de .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ed .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gfggd ,_gdfef :=_ecfcd .ToFloat64Array ();if _gdfef !=nil {return nil ,_gdfef ;};_cbcee .Domain =_gfggd ;_ecfcd ,_bgcfg =_aec .TraceToDirectObject (_cacf .Get ("\u0052\u0061\u006eg\u0065")).(*_aec .PdfObjectArray );if _bgcfg {if _ecfcd .Len ()< 0||_ecfcd .Len ()%2!=0{return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_faag ,_fbec :=_ecfcd .ToFloat64Array ();if _fbec !=nil {return nil ,_fbec ;};_cbcee .Range =_faag ;};_dfac ,_gdfef :=_aec .DecodeStream (_ffdec );if _gdfef !=nil {return nil ,_gdfef ;};_cbcee ._dcgbg =_dfac ;_bedd :=_ae .NewPSParser (_dfac );_gccd ,_gdfef :=_bedd .Parse ();if _gdfef !=nil {return nil ,_gdfef ;};_cbcee .Program =_gccd ;return _cbcee ,nil ;};

// Encoder returns the font's text encoder.
func (_fabe *pdfFontSimple )Encoder ()_cad .TextEncoder {if _fabe ._bfdb !=nil {return _fabe ._bfdb ;};if _fabe ._gfeg !=nil {return _fabe ._gfeg ;};_afcag ,_ :=_cad .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );return _afcag ;};

// AddWatermarkImage adds a watermark to the page.
func (_fgecf *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_eabfc ,_dgbag :=_fgecf .GetMediaBox ();if _dgbag !=nil {return _dgbag ;};_baeec :=_eabfc .Urx -_eabfc .Llx ;_defb :=_eabfc .Ury -_eabfc .Lly ;_bfafa :=float64 (*ximg .Width );_defac :=(_baeec -_bfafa )/2;if opt .FitToWidth {_bfafa =_baeec ;_defac =0;};_gdfag :=_defb ;_edgbd :=float64 (0);if opt .PreserveAspectRatio {_gdfag =_bfafa *float64 (*ximg .Height )/float64 (*ximg .Width );_edgbd =(_defb -_gdfag )/2;};if _fgecf .Resources ==nil {_fgecf .Resources =NewPdfPageResources ();};_ggdff :=0;_edce :=_aec .PdfObjectName (_g .Sprintf ("\u0049\u006d\u0077%\u0064",_ggdff ));for _fgecf .Resources .HasXObjectByName (_edce ){_ggdff ++;_edce =_aec .PdfObjectName (_g .Sprintf ("\u0049\u006d\u0077%\u0064",_ggdff ));};_dgbag =_fgecf .AddImageResource (_edce ,ximg );if _dgbag !=nil {return _dgbag ;};_ggdff =0;_edba :=_aec .PdfObjectName (_g .Sprintf ("\u0047\u0053\u0025\u0064",_ggdff ));for _fgecf .HasExtGState (_edba ){_ggdff ++;_edba =_aec .PdfObjectName (_g .Sprintf ("\u0047\u0053\u0025\u0064",_ggdff ));};_faaa :=_aec .MakeDict ();_faaa .Set ("\u0042\u004d",_aec .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_faaa .Set ("\u0043\u0041",_aec .MakeFloat (opt .Alpha ));_faaa .Set ("\u0063\u0061",_aec .MakeFloat (opt .Alpha ));_dgbag =_fgecf .AddExtGState (_edba ,_faaa );if _dgbag !=nil {return _dgbag ;};_cdbcg :=_g .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_edba ,_bfafa ,_gdfag ,_defac ,_edgbd ,_edce );_fgecf .AddContentStreamByString (_cdbcg );return nil ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_dcadf *PdfPattern )GetContext ()PdfModel {return _dcadf ._cfdbe };

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _aec .PdfObject ;H _aec .PdfObject ;};

// AddImageResource adds an image to the XObject resources.
func (_efbbc *PdfPage )AddImageResource (name _aec .PdfObjectName ,ximg *XObjectImage )error {var _dabef *_aec .PdfObjectDictionary ;if _efbbc .Resources .XObject ==nil {_dabef =_aec .MakeDict ();_efbbc .Resources .XObject =_dabef ;}else {var _ccfce bool ;_dabef ,_ccfce =(_efbbc .Resources .XObject ).(*_aec .PdfObjectDictionary );if !_ccfce {return _ed .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_dabef .Set (name ,ximg .ToPdfObject ());return nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_dfgc *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// GetContentStream returns the XObject Form's content stream.
func (_geacdf *XObjectForm )GetContentStream ()([]byte ,error ){_bdea ,_afgcdf :=_aec .DecodeStream (_geacdf ._fgddc );if _afgcdf !=nil {return nil ,_afgcdf ;};return _bdea ,nil ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_cgg :=NewPdfAction ();_ecgd :=&PdfActionSubmitForm {};_ecgd .PdfAction =_cgg ;_cgg .SetContext (_ecgd );return _ecgd ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_dgg :=NewPdfAnnotation ();_dgf :=&PdfAnnotationRichMedia {};_dgf .PdfAnnotation =_dgg ;_dgg .SetContext (_dgf );return _dgf ;};func (_dcdg fontCommon )fontFlags ()int {if _dcdg ._dabc ==nil {return 0;};return _dcdg ._dabc ._abef ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_dgec *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_bcgae *PdfField )GetContainingPdfObject ()_aec .PdfObject {return _bcgae ._cfaef };

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_facf *PdfTilingPattern )ToPdfObject ()_aec .PdfObject {_facf .PdfPattern .ToPdfObject ();_aefegd :=_facf .getDict ();if _facf .PaintType !=nil {_aefegd .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_facf .PaintType );};if _facf .TilingType !=nil {_aefegd .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_facf .TilingType );};if _facf .BBox !=nil {_aefegd .Set ("\u0042\u0042\u006f\u0078",_facf .BBox .ToPdfObject ());};if _facf .XStep !=nil {_aefegd .Set ("\u0058\u0053\u0074e\u0070",_facf .XStep );};if _facf .YStep !=nil {_aefegd .Set ("\u0059\u0053\u0074e\u0070",_facf .YStep );};if _facf .Resources !=nil {_aefegd .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_facf .Resources .ToPdfObject ());};if _facf .Matrix !=nil {_aefegd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_facf .Matrix );};return _facf ._aabdf ;};func (_fgbef *Image )resampleLowBits (_cfab []uint32 ){_fedfcd :=_be .BytesPerLine (int (_fgbef .Width ),int (_fgbef .BitsPerComponent ),_fgbef .ColorComponents );_aecccf :=make ([]byte ,_fgbef .ColorComponents *_fedfcd *int (_fgbef .Height ));_fcae :=int (_fgbef .BitsPerComponent )*_fgbef .ColorComponents *int (_fgbef .Width );_bebgf :=uint8 (8);var (_cbfe ,_gfgge int ;_cbbdd uint32 ;);for _efdc :=0;_efdc < int (_fgbef .Height );_efdc ++{_gfgge =_efdc *_fedfcd ;for _ccdc :=0;_ccdc < _fcae ;_ccdc ++{_cbbdd =_cfab [_cbfe ];_bebgf -=uint8 (_fgbef .BitsPerComponent );_aecccf [_gfgge ]|=byte (_cbbdd )<<_bebgf ;if _bebgf ==0{_bebgf =8;_gfgge ++;};_cbfe ++;};};_fgbef .Data =_aecccf ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_ebdg :=NewPdfAnnotation ();_bcg :=&PdfAnnotationUnderline {};_bcg .PdfAnnotation =_ebdg ;_bcg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebdg .SetContext (_bcg );return _bcg ;};func (_dacfc *PdfReader )newPdfAnnotationLineFromDict (_gcb *_aec .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_baga :=PdfAnnotationLine {};_gccb ,_gdf :=_dacfc .newPdfAnnotationMarkupFromDict (_gcb );if _gdf !=nil {return nil ,_gdf ;};_baga .PdfAnnotationMarkup =_gccb ;_baga .L =_gcb .Get ("\u004c");_baga .BS =_gcb .Get ("\u0042\u0053");_baga .LE =_gcb .Get ("\u004c\u0045");_baga .IC =_gcb .Get ("\u0049\u0043");_baga .LL =_gcb .Get ("\u004c\u004c");_baga .LLE =_gcb .Get ("\u004c\u004c\u0045");_baga .Cap =_gcb .Get ("\u0043\u0061\u0070");_baga .IT =_gcb .Get ("\u0049\u0054");_baga .LLO =_gcb .Get ("\u004c\u004c\u004f");_baga .CP =_gcb .Get ("\u0043\u0050");_baga .Measure =_gcb .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_baga .CO =_gcb .Get ("\u0043\u004f");return &_baga ,nil ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// ToPdfObject implements interface PdfModel.
func (_cbdc *PdfAnnotationRichMedia )ToPdfObject ()_aec .PdfObject {_cbdc .PdfAnnotation .ToPdfObject ();_gedg :=_cbdc ._bcce ;_bbaff :=_gedg .PdfObject .(*_aec .PdfObjectDictionary );_bbaff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));_bbaff .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_cbdc .RichMediaSettings );_bbaff .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_cbdc .RichMediaContent );return _gedg ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_ceeef *PdfReader )GetOutlines ()(*Outline ,error ){if _ceeef ==nil {return nil ,_ed .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");};_aaccd :=_ceeef .GetOutlineTree ();if _aaccd ==nil {return nil ,_ed .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");};var _bcacd func (_gedaab *PdfOutlineTreeNode ,_bfcff *[]*OutlineItem );_bcacd =func (_ccecfg *PdfOutlineTreeNode ,_feegg *[]*OutlineItem ){if _ccecfg ==nil {return ;};if _ccecfg ._gdagc ==nil {_de .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");return ;};var _cegge *OutlineItem ;if _ebedf ,_gadgb :=_ccecfg ._gdagc .(*PdfOutlineItem );_gadgb {_bbcbb :=_ebedf .Dest ;if (_bbcbb ==nil ||_aec .IsNullObject (_bbcbb ))&&_ebedf .A !=nil {if _ffebc ,_cadad :=_aec .GetDict (_ebedf .A );_cadad {_bbcbb ,_ =_aec .GetArray (_ffebc .Get ("\u0044"));};};var _dgaed OutlineDest ;if _bbcbb !=nil &&!_aec .IsNullObject (_bbcbb ){if _cfadc ,_bggd :=_cggbd (_bbcbb ,_ceeef );_bggd ==nil {_dgaed =*_cfadc ;}else {_de .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_bbcbb ,_bggd );};};_cegge =NewOutlineItem (_ebedf .Title .Decoded (),_dgaed );*_feegg =append (*_feegg ,_cegge );if _ebedf .Next !=nil {_bcacd (_ebedf .Next ,_feegg );};};if _ccecfg .First !=nil {if _cegge !=nil {_feegg =&_cegge .Entries ;};_bcacd (_ccecfg .First ,_feegg );};};_aegae :=NewOutline ();_bcacd (_aaccd ,&_aegae .Entries );return _aegae ,nil ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_eaeaf *PdfOutlineItem )GetContainingPdfObject ()_aec .PdfObject {return _eaeaf ._bdgd };

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_ddea :=NewPdfAnnotation ();_egg :=&PdfAnnotationProjection {};_egg .PdfAnnotation =_ddea ;_egg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ddea .SetContext (_egg );return _egg ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_decaa pdfFontSimple )GetRuneMetrics (r rune )(_ge .CharMetrics ,bool ){if _decaa ._bgcg !=nil {_acbc ,_gbdbe :=_decaa ._bgcg [r ];if _gbdbe {return _acbc ,true ;};};_edefg :=_decaa .Encoder ();if _edefg ==nil {_de .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_decaa );return _ge .CharMetrics {},false ;};_egfd ,_ecdca :=_edefg .RuneToCharcode (r );if !_ecdca {if r !=' '{_de .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_decaa );};return _ge .CharMetrics {},false ;};_eeeaa ,_bedbf :=_decaa .GetCharMetrics (_egfd );return _eeeaa ,_bedbf ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_afbf *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _afbf .Alternate ==nil {_de .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _afbf .N ==1{_de .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_cgbb :=NewPdfColorspaceDeviceGray ();return _cgbb .ImageToRGB (img );}else if _afbf .N ==3{_de .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return img ,nil ;}else if _afbf .N ==4{_de .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_dddg :=NewPdfColorspaceDeviceCMYK ();return _dddg .ImageToRGB (img );}else {return img ,_ed .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_de .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_afbf );_ffbcf ,_abfg :=_afbf .Alternate .ImageToRGB (img );_de .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_de .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_ffbcf );return _ffbcf ,_abfg ;};

// IsCID returns true if the underlying font is CID.
func (_gcdc *PdfFont )IsCID ()bool {return _gcdc .baseFields ().isCIDFont ()};

// Items returns all children outline items.
func (_cgccd *OutlineItem )Items ()[]*OutlineItem {return _cgccd .Entries };

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_gbaf *PdfShading )GetContext ()PdfModel {return _gbaf ._bfdgf };

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_dbafb *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_ggcf *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_gfcfb *PdfPattern )SetContext (ctx PdfModel ){_gfcfb ._cfdbe =ctx };

// Flags returns the field flags for the field accounting for any inherited flags.
func (_defc *PdfField )Flags ()FieldFlag {var _afgde FieldFlag ;_ccdg ,_gfgec :=_defc .inherit (func (_babed *PdfField )bool {if _babed .Ff !=nil {_afgde =FieldFlag (*_defc .Ff );return true ;};return false ;});if _gfgec !=nil {_de .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_gfgec );};if !_ccdg {_de .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _afgde ;};func (_cfbg *PdfReader )newPdfActionGoTo3DViewFromDict (_eef *_aec .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_eef .Get ("\u0054\u0041"),V :_eef .Get ("\u0056")},nil ;};func (_bcga *PdfReader )newPdfAnnotationPopupFromDict (_dffe *_aec .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_eabf :=PdfAnnotationPopup {};_eabf .Parent =_dffe .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_eabf .Open =_dffe .Get ("\u004f\u0070\u0065\u006e");return &_eabf ,nil ;};func (_bgbe *PdfFont )baseFields ()*fontCommon {if _bgbe ._gaga ==nil {_de .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");return nil ;};return _bgbe ._gaga .baseFields ();};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// C returns the value of the C component of the color.
func (_eabc *PdfColorCalRGB )C ()float64 {return _eabc [2]};

// Height returns the height of `rect`.
func (_cefbg *PdfRectangle )Height ()float64 {return _dc .Abs (_cefbg .Ury -_cefbg .Lly )};

// ToPdfObject returns the PDF representation of the function.
func (_gbbb *PdfFunctionType4 )ToPdfObject ()_aec .PdfObject {_febf :=_gbbb ._aecgd ;if _febf ==nil {_gbbb ._aecgd =&_aec .PdfObjectStream {};_febf =_gbbb ._aecgd ;};_ffddc :=_aec .MakeDict ();_ffddc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_aec .MakeInteger (4));_edeee :=&_aec .PdfObjectArray {};for _ ,_ebaee :=range _gbbb .Domain {_edeee .Append (_aec .MakeFloat (_ebaee ));};_ffddc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_edeee );_eaggb :=&_aec .PdfObjectArray {};for _ ,_gdfgb :=range _gbbb .Range {_eaggb .Append (_aec .MakeFloat (_gdfgb ));};_ffddc .Set ("\u0052\u0061\u006eg\u0065",_eaggb );if _gbbb ._dcgbg ==nil &&_gbbb .Program !=nil {_gbbb ._dcgbg =[]byte (_gbbb .Program .String ());};_ffddc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aec .MakeInteger (int64 (len (_gbbb ._dcgbg ))));_febf .Stream =_gbbb ._dcgbg ;_febf .PdfObjectDictionary =_ffddc ;return _febf ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);func (_bgfa fontCommon )asPdfObjectDictionary (_fbcd string )*_aec .PdfObjectDictionary {if _fbcd !=""&&_bgfa ._daed !=""&&_fbcd !=_bgfa ._daed {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_fbcd ,_bgfa );}else if _fbcd ==""&&_bgfa ._daed ==""{_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_bgfa );}else if _bgfa ._daed ==""{_bgfa ._daed =_fbcd ;};_fcgf :=_aec .MakeDict ();_fcgf .Set ("\u0054\u0079\u0070\u0065",_aec .MakeName ("\u0046\u006f\u006e\u0074"));_fcgf .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_aec .MakeName (_bgfa ._ecbb ));_fcgf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName (_bgfa ._daed ));if _bgfa ._dabc !=nil {_fcgf .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_bgfa ._dabc .ToPdfObject ());};if _bgfa ._bcfaa !=nil {_fcgf .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_bgfa ._bcfaa );}else if _bgfa ._bgae !=nil {_ffde ,_ggebg :=_bgfa ._bgae .Stream ();if _ggebg !=nil {_de .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_ggebg );}else {_fcgf .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_ffde );};};return _fcgf ;};var (_aecee _b .Mutex ;_bfdec ="";_bbbc _d .Time ;_eeaag ="";_cbcae ="";_gbgad _d .Time ;_fagad ="";_cbddc ="";_fbadff ="";);

// GetFontDescriptor returns the font descriptor for `font`.
func (_fbcbg PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _fbcbg ._gaga .getFontDescriptor (),nil ;};type fontFile struct{_fbefg string ;_facae string ;_dcgb _cad .SimpleEncoder ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_cfa *PdfAnnotationWidget )Field ()*PdfField {return _cfa ._ebff };

// GetPdfInfo returns the PDF info dictionary.
func (_ccdcc *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_adabf :=PdfInfo {};_abgfd ,_eefgc :=_ccdcc .GetTrailer ();if _eefgc !=nil {return nil ,_eefgc ;};var _egdaa *_aec .PdfObjectDictionary ;_ceead :=_abgfd .Get ("\u0049\u006e\u0066\u006f");switch _badf :=_ceead .(type ){case *_aec .PdfObjectReference :_bgcaac :=_badf ;_ceead ,_eefgc =_ccdcc .GetIndirectObjectByNumber (int (_bgcaac .ObjectNumber ));_ceead =_aec .TraceToDirectObject (_ceead );if _eefgc !=nil {return nil ,_eefgc ;};_egdaa ,_ =_ceead .(*_aec .PdfObjectDictionary );case *_aec .PdfObjectDictionary :_egdaa =_badf ;};if _egdaa ==nil {return nil ,_ed .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_adabf .Title ,_ =_aec .GetString (_egdaa .Get ("\u0054\u0069\u0074l\u0065"));_adabf .Author ,_ =_aec .GetString (_egdaa .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));_adabf .Subject ,_ =_aec .GetString (_egdaa .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));_adabf .Keywords ,_ =_aec .GetString (_egdaa .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));_adabf .Creator ,_ =_aec .GetString (_egdaa .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));_adabf .Producer ,_ =_aec .GetString (_egdaa .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));_adabf .Trapped ,_ =_aec .GetName (_egdaa .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));if _cebdd ,_afba :=_egdaa .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065").(*_aec .PdfObjectString );_afba {_gdgc ,_dfddd :=NewPdfDate (_cebdd .String ());if _dfddd !=nil {return nil ,_dfddd ;};_adabf .CreationDate =&_gdgc ;};if _gddbg ,_bcega :=_egdaa .Get ("\u004do\u0064\u0044\u0061\u0074\u0065").(*_aec .PdfObjectString );_bcega {_badag ,_bdgfe :=NewPdfDate (_gddbg .String ());if _bdgfe !=nil {return nil ,_bdgfe ;};_adabf .ModifiedDate =&_badag ;};return &_adabf ,nil ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_gadgf :=&PdfFilespec {};_gadgf ._bfecg =_aec .MakeIndirectObject (_aec .MakeDict ());return _gadgf ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_cgggb *PdfPage )ToPdfObject ()_aec .PdfObject {_bfeea :=_cgggb ._aggfc ;_cgggb .GetPageDict ();return _bfeea ;};

// AddFont adds a font dictionary to the Font resources.
func (_bcggg *PdfPage )AddFont (name _aec .PdfObjectName ,font _aec .PdfObject )error {if _bcggg .Resources ==nil {_bcggg .Resources =NewPdfPageResources ();};if _bcggg .Resources .Font ==nil {_bcggg .Resources .Font =_aec .MakeDict ();};_fegba ,_dcfeb :=_aec .TraceToDirectObject (_bcggg .Resources .Font ).(*_aec .PdfObjectDictionary );if !_dcfeb {_de .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_aec .TraceToDirectObject (_bcggg .Resources .Font ));return _ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fegba .Set (name ,font );return nil ;};

// Items returns all children outline items.
func (_dadbc *Outline )Items ()[]*OutlineItem {return _dadbc .Entries };

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_cadgd :=&PdfPageResources {};_cadgd ._cecb =_aec .MakeDict ();return _cadgd ;};func _edbg (_gefdda *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_gefdda }};func (_dcgc *PdfReader )newPdfAnnotationPrinterMarkFromDict (_dbe *_aec .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_dddc :=PdfAnnotationPrinterMark {};_dddc .MN =_dbe .Get ("\u004d\u004e");return &_dddc ,nil ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_egbd *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_egbd .updateObjectsDeep (dss .ToPdfObject (),nil );};_egbd ._eggg =dss ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_effcg *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_de .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eggb :=[]float64 {0.0};if _effcg .C0 !=nil {_eggb =_effcg .C0 ;};_fegea :=[]float64 {1.0};if _effcg .C1 !=nil {_fegea =_effcg .C1 ;};var _gbcbc []float64 ;for _ffddf :=0;_ffddf < len (_eggb );_ffddf ++{_adgd :=_eggb [_ffddf ]+_dc .Pow (x [0],_effcg .N )*(_fegea [_ffddf ]-_eggb [_ffddf ]);_gbcbc =append (_gbcbc ,_adgd );};return _gbcbc ,nil ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_ecaff *PdfFont )CharcodesToStrings (charcodes []_cad .CharCode )([]string ,int ,int ){_fdca :=_ecaff .baseFields ();_dbaaf :=make ([]string ,0,len (charcodes ));_fada :=0;for _ ,_fdebc :=range charcodes {if _fdca ._bgae !=nil {if _eafa ,_dbed :=_fdca ._bgae .CharcodeToUnicode (_fa .CharCode (_fdebc ));_dbed {_dbaaf =append (_dbaaf ,_eafa );continue ;};};_fcad :=_ecaff .Encoder ();if _fcad !=nil {if _ddbd ,_agcd :=_fcad .CharcodeToRune (_fdebc );_agcd {_dbaaf =append (_dbaaf ,string (_ddbd ));continue ;};};_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_fdebc ,charcodes ,_fdca .isCIDFont (),_ecaff ,_fcad );_fada ++;_dbaaf =append (_dbaaf ,_fa .MissingCodeString );};if _fada !=0{_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_fada ,_ecaff );};return _dbaaf ,len (_dbaaf ),_fada ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_bfgb *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// SetOCProperties sets the optional content properties.
func (_egdfa *PdfWriter )SetOCProperties (ocProperties _aec .PdfObject )error {_faadb :=_egdfa ._beffcb ;if ocProperties !=nil {_de .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");_faadb .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _egdfa .addObjects (ocProperties );};return nil ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_gadf ,_cdcec :=_gg .Open (filePath );if _cdcec !=nil {_de .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_cdcec );return nil ,_cdcec ;};defer _gadf .Close ();return NewCompositePdfFontFromTTF (_gadf );};func (_beaba *pdfFontSimple )addEncoding ()error {var (_ccgf string ;_ffcc map[_cad .CharCode ]_cad .GlyphName ;_ggaa _cad .SimpleEncoder ;);if _beaba .Encoder ()!=nil {_efdgd ,_beacg :=_beaba .Encoder ().(_cad .SimpleEncoder );if _beacg &&_efdgd !=nil {_ccgf =_efdgd .BaseName ();};};if _beaba .Encoding !=nil {_edbbe ,_adgee ,_eaea :=_beaba .getFontEncoding ();if _eaea !=nil {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_beaba ._ecbb ,_beaba ._daed ,_beaba .Encoding ,_beaba .Encoding ,_eaea );return _eaea ;};if _edbbe !=""{_ccgf =_edbbe ;};_ffcc =_adgee ;_ggaa ,_eaea =_cad .NewSimpleTextEncoder (_ccgf ,_ffcc );if _eaea !=nil {return _eaea ;};};if _ggaa ==nil {_gaeede :=_beaba ._dabc ;if _gaeede !=nil {switch _beaba ._daed {case "\u0054\u0079\u0070e\u0031":if _gaeede .fontFile !=nil &&_gaeede .fontFile ._dcgb !=nil {_de .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");_ggaa =_gaeede .fontFile ._dcgb ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _gaeede ._cagd !=nil {_de .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_aacgf ,_aagcg :=_gaeede ._cagd .MakeEncoder ();if _aagcg ==nil {_ggaa =_aacgf ;};};};};};if _ggaa !=nil {if _ffcc !=nil {_de .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ffcc ,_beaba .baseFields ());_ggaa =_cad .ApplyDifferences (_ggaa ,_ffcc );};_beaba .SetEncoder (_ggaa );};return nil ;};func (_baag *pdfFontSimple )baseFields ()*fontCommon {return &_baag .fontCommon };func (_dgbg *PdfReader )newPdfActionLaunchFromDict (_eba *_aec .PdfObjectDictionary )(*PdfActionLaunch ,error ){_aecg ,_ecf :=_ccfd (_eba .Get ("\u0046"));if _ecf !=nil {return nil ,_ecf ;};return &PdfActionLaunch {Win :_eba .Get ("\u0057\u0069\u006e"),Mac :_eba .Get ("\u004d\u0061\u0063"),Unix :_eba .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_eba .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_aecg },nil ;};func _agedf (_aeead *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_aeead }};func _cecga (_fbgg *XObjectImage )error {if _fbgg .SMask ==nil {return nil ;};_gaged ,_becfa :=_fbgg .SMask .(*_aec .PdfObjectStream );if !_becfa {_de .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _aec .ErrTypeError ;};_dgfg :=_gaged .PdfObjectDictionary ;_fbfdd :=_dgfg .Get ("\u004d\u0061\u0074t\u0065");if _fbfdd ==nil {return nil ;};_cdcad ,_aacd :=_egbgf (_fbfdd .(*_aec .PdfObjectArray ));if _aacd !=nil {return _aacd ;};_ebdfe :=_aec .MakeArrayFromFloats ([]float64 {_cdcad });_dgfg .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_ebdfe );return nil ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _fb .ReadSeeker )(*PdfReader ,error ){_acbda :=&PdfReader {_fcdf :rs ,_ddcbfa :map[_aec .PdfObject ]struct{}{},_bgeab :_dfcfcf (),_dfga :false };_aage ,_gcddb :=_aec .NewParser (rs );if _gcddb !=nil {return nil ,_gcddb ;};_acbda ._adecd =_aage ;_gabbe ,_gcddb :=_acbda .IsEncrypted ();if _gcddb !=nil {return nil ,_gcddb ;};if !_gabbe {_gcddb =_acbda .loadStructure ();if _gcddb !=nil {return nil ,_gcddb ;};};return _acbda ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_gefb *PdfColorspaceLab )ToPdfObject ()_aec .PdfObject {_bgage :=_aec .MakeArray ();_bgage .Append (_aec .MakeName ("\u004c\u0061\u0062"));_efge :=_aec .MakeDict ();if _gefb .WhitePoint !=nil {_feeb :=_aec .MakeArray (_aec .MakeFloat (_gefb .WhitePoint [0]),_aec .MakeFloat (_gefb .WhitePoint [1]),_aec .MakeFloat (_gefb .WhitePoint [2]));_efge .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_feeb );}else {_de .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};if _gefb .BlackPoint !=nil {_dfbe :=_aec .MakeArray (_aec .MakeFloat (_gefb .BlackPoint [0]),_aec .MakeFloat (_gefb .BlackPoint [1]),_aec .MakeFloat (_gefb .BlackPoint [2]));_efge .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_dfbe );};if _gefb .Range !=nil {_faega :=_aec .MakeArray (_aec .MakeFloat (_gefb .Range [0]),_aec .MakeFloat (_gefb .Range [1]),_aec .MakeFloat (_gefb .Range [2]),_aec .MakeFloat (_gefb .Range [3]));_efge .Set ("\u0052\u0061\u006eg\u0065",_faega );};_bgage .Append (_efge );if _gefb ._ebffe !=nil {_gefb ._ebffe .PdfObject =_bgage ;return _gefb ._ebffe ;};return _bgage ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_dfbd :=PdfColorDeviceGray (grayVal );return &_dfbd ;};func (_fbfb *PdfReader )newPdfAnnotationFreeTextFromDict (_caag *_aec .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_afee :=PdfAnnotationFreeText {};_dacg ,_aeff :=_fbfb .newPdfAnnotationMarkupFromDict (_caag );if _aeff !=nil {return nil ,_aeff ;};_afee .PdfAnnotationMarkup =_dacg ;_afee .DA =_caag .Get ("\u0044\u0041");_afee .Q =_caag .Get ("\u0051");_afee .RC =_caag .Get ("\u0052\u0043");_afee .DS =_caag .Get ("\u0044\u0053");_afee .CL =_caag .Get ("\u0043\u004c");_afee .IT =_caag .Get ("\u0049\u0054");_afee .BE =_caag .Get ("\u0042\u0045");_afee .RD =_caag .Get ("\u0052\u0044");_afee .BS =_caag .Get ("\u0042\u0053");_afee .LE =_caag .Get ("\u004c\u0045");return &_afee ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fab *PdfActionMovie )ToPdfObject ()_aec .PdfObject {_fab .PdfAction .ToPdfObject ();_eec :=_fab ._gf ;_dab :=_eec .PdfObject .(*_aec .PdfObjectDictionary );_dab .SetIfNotNil ("\u0053",_aec .MakeName (string (ActionTypeMovie )));_dab .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_fab .Annotation );_dab .SetIfNotNil ("\u0054",_fab .T );_dab .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_fab .Operation );return _eec ;};

// HasFontByName checks if has font resource by name.
func (_fbaga *PdfPage )HasFontByName (name _aec .PdfObjectName )bool {_dfcbc ,_bafef :=_fbaga .Resources .Font .(*_aec .PdfObjectDictionary );if !_bafef {return false ;};if _bbgda :=_dfcbc .Get (name );_bbgda !=nil {return true ;};return false ;};var _aeccf =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};type pdfFontSimple struct{fontCommon ;_dgbeb *_aec .PdfIndirectObject ;_gcda map[_cad .CharCode ]float64 ;_bfdb _cad .TextEncoder ;_gfeg _cad .TextEncoder ;_eacae *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _aec .PdfObject ;LastChar _aec .PdfObject ;Widths _aec .PdfObject ;Encoding _aec .PdfObject ;_bgcg map[rune ]_ge .CharMetrics ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_bbfdg *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _bbfdg ._cbbgf ==nil {_bbfdg .GetAnnotations ();};_bbfdg ._cbbgf =append (_bbfdg ._cbbgf ,annot );};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_agcb :=NewPdfAnnotation ();_cfae :=&PdfAnnotationStrikeOut {};_cfae .PdfAnnotation =_agcb ;_cfae .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_agcb .SetContext (_cfae );return _cfae ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_gdbbc *PdfPageResources )HasFontByName (keyName _aec .PdfObjectName )bool {_ ,_eccfe :=_gdbbc .GetFontByName (keyName );return _eccfe ;};func (_eaag *DSS )addCerts (_faegd [][]byte )([]*_aec .PdfObjectStream ,error ){return _eaag .add (&_eaag .Certs ,_eaag ._ggaed ,_faegd );};

// GetOptimizer returns current PDF optimizer.
func (_acae *PdfWriter )GetOptimizer ()Optimizer {return _acae ._ggaae };func _geacf (_abgeg *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_bcdb ,_cfead :=_aec .GetDict (_abgeg .AP );if !_cfead {return nil ,nil ,_ed .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _bcdb ==nil {return nil ,nil ,nil ;};_ffga ,_cfead :=_aec .GetArray (_abgeg .Rect );if !_cfead ||_ffga .Len ()!=4{return nil ,nil ,_ed .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_aacc ,_fdggg :=NewPdfRectangle (*_ffga );if _fdggg !=nil {return nil ,nil ,_fdggg ;};_fdgb :=_aec .TraceToDirectObject (_bcdb .Get ("\u004e"));switch _acba :=_fdgb .(type ){case *_aec .PdfObjectStream :_afcff :=_acba ;_gfdbe ,_eeeab :=NewXObjectFormFromStream (_afcff );return _gfdbe ,_aacc ,_eeeab ;case *_aec .PdfObjectDictionary :_afcd :=_acba ;_ecge ,_cadbf :=_aec .GetName (_abgeg .AS );if !_cadbf {return nil ,nil ,nil ;};if _afcd .Get (*_ecge )==nil {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");return nil ,nil ,nil ;};_egde ,_cadbf :=_aec .GetStream (_afcd .Get (*_ecge ));if !_cadbf {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_ecge );return nil ,nil ,_ed .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_dabg ,_dbge :=NewXObjectFormFromStream (_egde );return _dabg ,_aacc ,_dbge ;};_de .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_fdgb );return nil ,nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};func _gfge (_dgbga *PdfPage )map[_aec .PdfObjectName ]_aec .PdfObject {_aaf :=make (map[_aec .PdfObjectName ]_aec .PdfObject );if _dgbga .Resources ==nil {return _aaf ;};if _dgbga .Resources .Font !=nil {if _bccg ,_fbbc :=_aec .GetDict (_dgbga .Resources .Font );_fbbc {for _ ,_bfcg :=range _bccg .Keys (){_aaf [_bfcg ]=_bccg .Get (_bfcg );};};};if _dgbga .Resources .ExtGState !=nil {if _gcd ,_fcgc :=_aec .GetDict (_dgbga .Resources .ExtGState );_fcgc {for _ ,_dccab :=range _gcd .Keys (){_aaf [_dccab ]=_gcd .Get (_dccab );};};};if _dgbga .Resources .XObject !=nil {if _adc ,_ccg :=_aec .GetDict (_dgbga .Resources .XObject );_ccg {for _ ,_dacb :=range _adc .Keys (){_aaf [_dacb ]=_adc .Get (_dacb );};};};if _dgbga .Resources .Pattern !=nil {if _acbb ,_ebfe :=_aec .GetDict (_dgbga .Resources .Pattern );_ebfe {for _ ,_dagb :=range _acbb .Keys (){_aaf [_dagb ]=_acbb .Get (_dagb );};};};if _dgbga .Resources .Shading !=nil {if _fbgf ,_dcff :=_aec .GetDict (_dgbga .Resources .Shading );_dcff {for _ ,_dfdb :=range _fbgf .Keys (){_aaf [_dfdb ]=_fbgf .Get (_dfdb );};};};if _dgbga .Resources .ProcSet !=nil {if _bbgb ,_ebagd :=_aec .GetDict (_dgbga .Resources .ProcSet );_ebagd {for _ ,_degba :=range _bbgb .Keys (){_aaf [_degba ]=_bbgb .Get (_degba );};};};if _dgbga .Resources .Properties !=nil {if _dede ,_daeb :=_aec .GetDict (_dgbga .Resources .Properties );_daeb {for _ ,_dbcg :=range _dede .Keys (){_aaf [_dbcg ]=_dede .Get (_dbcg );};};};return _aaf ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_egce *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_ffdg :=range pages {_ffdg =_ffdg .Duplicate ();_gdcgc (_ffdg );_egce ._fbbe =append (_egce ._fbbe ,_ffdg );};};func (_cea *PdfReader )newPdfActionURIFromDict (_ddc *_aec .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_ddc .Get ("\u0055\u0052\u0049"),IsMap :_ddc .Get ("\u0049\u0073\u004da\u0070")},nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_fecb :=&PdfAppender {_ecee :reader ._fcdf ,Reader :reader ,_bca :reader ._adecd ,_ceec :reader ._ddcbfa };_abccb ,_dcee :=_fecb ._ecee .Seek (0,_fb .SeekEnd );if _dcee !=nil {return nil ,_dcee ;};_fecb ._egfc =_abccb ;if _ ,_dcee =_fecb ._ecee .Seek (0,_fb .SeekStart );_dcee !=nil {return nil ,_dcee ;};_fecb ._aea ,_dcee =NewPdfReader (_fecb ._ecee );if _dcee !=nil {return nil ,_dcee ;};for _ ,_cagg :=range _fecb .Reader .GetObjectNums (){if _fecb ._bbea < _cagg {_fecb ._bbea =_cagg ;};};_fecb ._bcaf =_fecb ._bca .GetXrefTable ();_fecb ._adae =_fecb ._bca .GetXrefOffset ();_fecb ._fbbe =append (_fecb ._fbbe ,_fecb ._aea .PageList ...);_fecb ._bdcg =make (map[_aec .PdfObject ]struct{});_fecb ._gga =make (map[_aec .PdfObject ]int64 );_fecb ._afca =make (map[_aec .PdfObject ]struct{});_fecb ._bedb =_fecb ._aea .AcroForm ;_fecb ._eggg =_fecb ._aea .DSS ;return _fecb ,nil ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _aec .PdfObject ;Volume _aec .PdfObject ;Synchronous _aec .PdfObject ;Repeat _aec .PdfObject ;Mix _aec .PdfObject ;};func (_bbfcg *LTV )getCerts (_gdcgg []*_ad .Certificate )([][]byte ,error ){_dgfbc :=make ([][]byte ,0,len (_gdcgg ));for _ ,_ddde :=range _gdcgg {_dgfbc =append (_dgfbc ,_ddde .Raw );};return _dgfbc ,nil ;};func (_aab *PdfReader )newPdfAnnotationStampFromDict (_dcf *_aec .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_bfcd :=PdfAnnotationStamp {};_afdb ,_bede :=_aab .newPdfAnnotationMarkupFromDict (_dcf );if _bede !=nil {return nil ,_bede ;};_bfcd .PdfAnnotationMarkup =_afdb ;_bfcd .Name =_dcf .Get ("\u004e\u0061\u006d\u0065");return &_bfcd ,nil ;};var _ pdfFont =(*pdfFontSimple )(nil );

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_ebcd *PdfFieldSignature )ToPdfObject ()_aec .PdfObject {if _ebcd .PdfAnnotationWidget !=nil {_ebcd .PdfAnnotationWidget .ToPdfObject ();};_ebcd .PdfField .ToPdfObject ();_aeeef :=_ebcd ._cfaef ;_acbbb :=_aeeef .PdfObject .(*_aec .PdfObjectDictionary );_acbbb .SetIfNotNil ("\u0046\u0054",_aec .MakeName ("\u0053\u0069\u0067"));_acbbb .SetIfNotNil ("\u004c\u006f\u0063\u006b",_ebcd .Lock );_acbbb .SetIfNotNil ("\u0053\u0056",_ebcd .SV );if _ebcd .V !=nil {_acbbb .SetIfNotNil ("\u0056",_ebcd .V .ToPdfObject ());};return _aeeef ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;func (_eaca *PdfReader )newPdfAnnotationSoundFromDict (_ecaf *_aec .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_bbda :=PdfAnnotationSound {};_fbad ,_fbba :=_eaca .newPdfAnnotationMarkupFromDict (_ecaf );if _fbba !=nil {return nil ,_fbba ;};_bbda .PdfAnnotationMarkup =_fbad ;_bbda .Name =_ecaf .Get ("\u004e\u0061\u006d\u0065");_bbda .Sound =_ecaf .Get ("\u0053\u006f\u0075n\u0064");return &_bbda ,nil ;};func (_aaebd *PdfWriter )copyObject (_fbecc _aec .PdfObject ,_fddbac map[_aec .PdfObject ]_aec .PdfObject ,_dega map[_aec .PdfObject ]struct{},_gcbfg bool )_aec .PdfObject {_aebce :=!_aaebd ._cgcga &&_dega !=nil ;if _fgcc ,_degdb :=_fddbac [_fbecc ];_degdb {if _aebce &&!_gcbfg {delete (_dega ,_fbecc );};return _fgcc ;};_ffeba :=_fbecc ;switch _ccbgf :=_fbecc .(type ){case *_aec .PdfObjectArray :_gedfa :=_aec .MakeArray ();_ffeba =_gedfa ;_fddbac [_fbecc ]=_ffeba ;for _ ,_dgaf :=range _ccbgf .Elements (){_gedfa .Append (_aaebd .copyObject (_dgaf ,_fddbac ,_dega ,_gcbfg ));};case *_aec .PdfObjectStreams :_gcace :=&_aec .PdfObjectStreams {PdfObjectReference :_ccbgf .PdfObjectReference };_ffeba =_gcace ;_fddbac [_fbecc ]=_ffeba ;for _ ,_fagfga :=range _ccbgf .Elements (){_gcace .Append (_aaebd .copyObject (_fagfga ,_fddbac ,_dega ,_gcbfg ));};case *_aec .PdfObjectStream :_gdfec :=&_aec .PdfObjectStream {Stream :_ccbgf .Stream ,PdfObjectReference :_ccbgf .PdfObjectReference };_ffeba =_gdfec ;_fddbac [_fbecc ]=_ffeba ;_gdfec .PdfObjectDictionary =_aaebd .copyObject (_ccbgf .PdfObjectDictionary ,_fddbac ,_dega ,_gcbfg ).(*_aec .PdfObjectDictionary );case *_aec .PdfObjectDictionary :var _cfcde bool ;if _aebce &&!_gcbfg {if _aacbb ,_ :=_aec .GetNameVal (_ccbgf .Get ("\u0054\u0079\u0070\u0065"));_aacbb =="\u0050\u0061\u0067\u0065"{_ ,_efggf :=_aaebd ._dgee [_ccbgf ];_gcbfg =!_efggf ;_cfcde =_gcbfg ;};};_babdf :=_aec .MakeDict ();_ffeba =_babdf ;_fddbac [_fbecc ]=_ffeba ;for _ ,_edgd :=range _ccbgf .Keys (){_babdf .Set (_edgd ,_aaebd .copyObject (_ccbgf .Get (_edgd ),_fddbac ,_dega ,_gcbfg ));};if _cfcde {_ffeba =_aec .MakeNull ();_gcbfg =false ;};case *_aec .PdfIndirectObject :_bcbdf :=&_aec .PdfIndirectObject {PdfObjectReference :_ccbgf .PdfObjectReference };_ffeba =_bcbdf ;_fddbac [_fbecc ]=_ffeba ;_bcbdf .PdfObject =_aaebd .copyObject (_ccbgf .PdfObject ,_fddbac ,_dega ,_gcbfg );case *_aec .PdfObjectString :_badcf :=*_ccbgf ;_ffeba =&_badcf ;_fddbac [_fbecc ]=_ffeba ;case *_aec .PdfObjectName :_ddebf :=*_ccbgf ;_ffeba =&_ddebf ;_fddbac [_fbecc ]=_ffeba ;case *_aec .PdfObjectNull :_ffeba =_aec .MakeNull ();_fddbac [_fbecc ]=_ffeba ;case *_aec .PdfObjectInteger :_afeec :=*_ccbgf ;_ffeba =&_afeec ;_fddbac [_fbecc ]=_ffeba ;case *_aec .PdfObjectReference :_gccgb :=*_ccbgf ;_ffeba =&_gccgb ;_fddbac [_fbecc ]=_ffeba ;case *_aec .PdfObjectFloat :_bgcdc :=*_ccbgf ;_ffeba =&_bgcdc ;_fddbac [_fbecc ]=_ffeba ;case *_aec .PdfObjectBool :_gddg :=*_ccbgf ;_ffeba =&_gddg ;_fddbac [_fbecc ]=_ffeba ;case *pdfSignDictionary :_ecgbe :=&pdfSignDictionary {PdfObjectDictionary :_aec .MakeDict (),_dgcbb :_ccbgf ._dgcbb ,_ffgd :_ccbgf ._ffgd };_ffeba =_ecgbe ;_fddbac [_fbecc ]=_ffeba ;for _ ,_afcca :=range _ccbgf .Keys (){_ecgbe .Set (_afcca ,_aaebd .copyObject (_ccbgf .Get (_afcca ),_fddbac ,_dega ,_gcbfg ));};default:_de .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_fbecc );};if _aebce &&_gcbfg {_dega [_fbecc ]=struct{}{};};return _ffeba ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _aec .StreamEncoder )(*XObjectImage ,error ){_ggebfd :=NewXObjectImage ();return UpdateXObjectImageFromImage (_ggebfd ,img ,cs ,encoder );};func _dbabf (_cdfa []byte )(_gace ,_cbdge string ,_daaf error ){_de .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_cdfa ));_gafeg :=_edfcc .FindIndex (_cdfa );if _gafeg ==nil {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");return "","",_aec .ErrTypeError ;};_cfeca :=_gafeg [1];_ffded :=_ee .Index (string (_cdfa [_cfeca :]),_fgdb );if _ffded < 0{_gace =string (_cdfa [_cfeca :]);return _gace ,"",nil ;};_deae :=_cfeca +_ffded ;_gace =string (_cdfa [_cfeca :_deae ]);_abgc :=_deae ;_ffded =_ee .Index (string (_cdfa [_abgc :]),_egcca );if _ffded < 0{_de .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_daaf );return "","",_aec .ErrTypeError ;};_gfabg :=_abgc +_ffded ;_cbdge =string (_cdfa [_abgc :_gfabg ]);return _gace ,_cbdge ,nil ;};func (_fcggc *PdfWriter )writeObject (_bgdbg int ,_bbaa _aec .PdfObject ){_de .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_bgdbg );if _ccaca ,_gdada :=_bbaa .(*_aec .PdfIndirectObject );_gdada {_fcggc ._dabeb [_bgdbg ]=crossReference {Type :1,Offset :_fcggc ._fbbcb ,Generation :_ccaca .GenerationNumber };_fdfb :=_g .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bgdbg );if _fadc ,_dggeg :=_ccaca .PdfObject .(*pdfSignDictionary );_dggeg {_fadc ._egcaeg =_fcggc ._fbbcb +int64 (len (_fdfb ));};if _ccaca .PdfObject ==nil {_de .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");_ccaca .PdfObject =_aec .MakeNull ();};_fdfb +=_ccaca .PdfObject .WriteString ();_fdfb +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_fcggc .writeString (_fdfb );return ;};if _dbafbd ,_dcbea :=_bbaa .(*_aec .PdfObjectStream );_dcbea {_fcggc ._dabeb [_bgdbg ]=crossReference {Type :1,Offset :_fcggc ._fbbcb ,Generation :_dbafbd .GenerationNumber };_ggedc :=_g .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bgdbg );_ggedc +=_dbafbd .PdfObjectDictionary .WriteString ();_ggedc +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_fcggc .writeString (_ggedc );_fcggc .writeBytes (_dbafbd .Stream );_fcggc .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _daddc ,_ffbad :=_bbaa .(*_aec .PdfObjectStreams );_ffbad {_fcggc ._dabeb [_bgdbg ]=crossReference {Type :1,Offset :_fcggc ._fbbcb ,Generation :_daddc .GenerationNumber };_bgbde :=_g .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bgdbg );var _cgdfb []string ;var _fcecb string ;var _gfdeg int64 ;for _fgbeeg ,_affcf :=range _daddc .Elements (){_ecbd ,_bbcda :=_affcf .(*_aec .PdfIndirectObject );if !_bbcda {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_bgdbg ,_affcf );continue ;};_acdcec :=_ecbd .PdfObject .WriteString ()+"\u0020";_fcecb =_fcecb +_acdcec ;_cgdfb =append (_cgdfb ,_g .Sprintf ("\u0025\u0064\u0020%\u0064",_ecbd .ObjectNumber ,_gfdeg ));_fcggc ._dabeb [int (_ecbd .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_bgdbg ,Index :_fgbeeg };_gfdeg =_gfdeg +int64 (len ([]byte (_acdcec )));};_ecgce :=_ee .Join (_cgdfb ,"\u0020")+"\u0020";_caegf :=_aec .NewFlateEncoder ();_bcfbc :=_caegf .MakeStreamDict ();_bcfbc .Set (_aec .PdfObjectName ("\u0054\u0079\u0070\u0065"),_aec .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));_fgbeba :=int64 (_daddc .Len ());_bcfbc .Set (_aec .PdfObjectName ("\u004e"),_aec .MakeInteger (_fgbeba ));_cgge :=int64 (len (_ecgce ));_bcfbc .Set (_aec .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_aec .MakeInteger (_cgge ));_ecfeb ,_ :=_caegf .EncodeBytes ([]byte (_ecgce +_fcecb ));_affca :=int64 (len (_ecfeb ));_bcfbc .Set (_aec .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_aec .MakeInteger (_affca ));_bgbde +=_bcfbc .WriteString ();_bgbde +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_fcggc .writeString (_bgbde );_fcggc .writeBytes (_ecfeb );_fcggc .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_fcggc .writeString (_bbaa .WriteString ());};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _aec .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fabg *PdfAnnotationInk )ToPdfObject ()_aec .PdfObject {_fabg .PdfAnnotation .ToPdfObject ();_eeed :=_fabg ._bcce ;_bcdc :=_eeed .PdfObject .(*_aec .PdfObjectDictionary );_fabg .PdfAnnotationMarkup .appendToPdfDictionary (_bcdc );_bcdc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0049\u006e\u006b"));_bcdc .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_fabg .InkList );_bcdc .SetIfNotNil ("\u0042\u0053",_fabg .BS );return _eeed ;};func _cgcg (_ddacf []rune ,_aaaec map[rune ]int ,_gfaec map[rune ]_ge .GID )*_aec .PdfObjectArray {_agfdf :=&_aec .PdfObjectArray {};for _efgc :=0;_efgc < len (_ddacf );{_fdde :=_aaaec [_ddacf [_efgc ]];_ccgac :=_efgc ;for _cfafg :=_efgc +1;_cfafg < len (_ddacf );_cfafg ++{_cbcf :=_aaaec [_ddacf [_cfafg ]];if _fdde ==_cbcf {_ccgac =_cfafg ;}else {break ;};};_gfgf :=_gfaec [_ddacf [_efgc ]];_bfcda :=_gfaec [_ddacf [_ccgac ]];_agfdf .Append (_aec .MakeInteger (int64 (_gfgf )));_agfdf .Append (_aec .MakeInteger (int64 (_bfcda )));_agfdf .Append (_aec .MakeInteger (int64 (_fdde )));_efgc =_ccgac +1;};return _agfdf ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_ceafe *PdfOutlineTreeNode )ToPdfObject ()_aec .PdfObject {return _ceafe .GetContext ().ToPdfObject ();};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_eaeac *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _eaeac ._cbbgf !=nil {return _eaeac ._cbbgf ,nil ;};if _eaeac .Annots ==nil {_eaeac ._cbbgf =[]*PdfAnnotation {};return nil ,nil ;};if _eaeac ._eegeg ==nil {_eaeac ._cbbgf =[]*PdfAnnotation {};return nil ,nil ;};_bfbe ,_dbfee :=_eaeac ._eegeg .loadAnnotations (_eaeac .Annots );if _dbfee !=nil {return nil ,_dbfee ;};if _bfbe ==nil {_eaeac ._cbbgf =[]*PdfAnnotation {};};_eaeac ._cbbgf =_bfbe ;return _eaeac ._cbbgf ,nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_gccg *pdfFontType0 )ToPdfObject ()_aec .PdfObject {if _gccg ._aead ==nil {_gccg ._aead =&_aec .PdfIndirectObject {};};_bgeb :=_gccg .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_gccg ._aead .PdfObject =_bgeb ;if _gccg .Encoding !=nil {_bgeb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gccg .Encoding );}else if _gccg ._cdab !=nil {_bgeb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gccg ._cdab .ToPdfObject ());};if _gccg .DescendantFont !=nil {_bgeb .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_aec .MakeArray (_gccg .DescendantFont .ToPdfObject ()));};return _gccg ._aead ;};func (_bgfb *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_dfaa *PdfColorspaceDeviceN )ToPdfObject ()_aec .PdfObject {_adac :=_aec .MakeArray (_aec .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_adac .Append (_dfaa .ColorantNames );_adac .Append (_dfaa .AlternateSpace .ToPdfObject ());_adac .Append (_dfaa .TintTransform .ToPdfObject ());if _dfaa .Attributes !=nil {_adac .Append (_dfaa .Attributes .ToPdfObject ());};if _dfaa ._afbe !=nil {_dfaa ._afbe .PdfObject =_adac ;return _dfaa ._afbe ;};return _adac ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _aec .PdfObject ;Name _aec .PdfObject ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_acegc :=&PdfColorspaceDeviceN {};return _acegc ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_fgcgc :=&XObjectImage {};_cdadd :=&_aec .PdfObjectStream {};_cdadd .PdfObjectDictionary =_aec .MakeDict ();_fgcgc ._deccfc =_cdadd ;return _fgcgc ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// ToPdfObject implements interface PdfModel.
func (_dadg *PdfActionSetOCGState )ToPdfObject ()_aec .PdfObject {_dadg .PdfAction .ToPdfObject ();_bab :=_dadg ._gf ;_fbf :=_bab .PdfObject .(*_aec .PdfObjectDictionary );_fbf .SetIfNotNil ("\u0053",_aec .MakeName (string (ActionTypeSetOCGState )));_fbf .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_dadg .State );_fbf .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_dadg .PreserveRB );return _bab ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};var (ErrRequiredAttributeMissing =_ed .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_ed .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_becba =_ed .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_ed .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_ed .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_bbg .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_aec .ErrNotSupported );ErrType1CFontNotSupported =_bbg .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_aec .ErrNotSupported );ErrType3FontNotSupported =_bbg .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_aec .ErrNotSupported );ErrTTCmapNotSupported =_bbg .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_aec .ErrNotSupported );ErrSignNotEnoughSpace =_bbg .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");ErrSignNoCertificates =_bbg .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_gcgf :=&PdfOutlineItem {_bdgd :_aec .MakeIndirectObject (_aec .MakeDict ())};_gcgf ._gdagc =_gcgf ;return _gcgf ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_ade :=NewPdfAction ();_cgf :=&PdfActionGoToR {};_cgf .PdfAction =_ade ;_ade .SetContext (_cgf );return _cgf ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_ccgeg *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _ccgeg ._cfbaf !=nil {return _ccgeg ._cfbaf ,nil ;};if _ccgeg .ColorSpace ==nil {return nil ,nil ;};_acegf ,_edfgb :=_geaa (_ccgeg .ColorSpace );if _edfgb !=nil {return nil ,_edfgb ;};_ccgeg ._cfbaf =_acegf ;return _ccgeg ._cfbaf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cgc *PdfActionImportData )ToPdfObject ()_aec .PdfObject {_cgc .PdfAction .ToPdfObject ();_efa :=_cgc ._gf ;_aebgg :=_efa .PdfObject .(*_aec .PdfObjectDictionary );_aebgg .SetIfNotNil ("\u0053",_aec .MakeName (string (ActionTypeImportData )));if _cgc .F !=nil {_aebgg .Set ("\u0046",_cgc .F .ToPdfObject ());};return _efa ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_cfe *PdfFieldText )ToPdfObject ()_aec .PdfObject {_cfe .PdfField .ToPdfObject ();_ddbge :=_cfe ._cfaef ;_cgff :=_ddbge .PdfObject .(*_aec .PdfObjectDictionary );_cgff .Set ("\u0046\u0054",_aec .MakeName ("\u0054\u0078"));if _cfe .DA !=nil {_cgff .Set ("\u0044\u0041",_cfe .DA );};if _cfe .Q !=nil {_cgff .Set ("\u0051",_cfe .Q );};if _cfe .DS !=nil {_cgff .Set ("\u0044\u0053",_cfe .DS );};if _cfe .RV !=nil {_cgff .Set ("\u0052\u0056",_cfe .RV );};if _cfe .MaxLen !=nil {_cgff .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_cfe .MaxLen );};return _ddbge ;};func (_gcca *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};var _bgfff =_dff .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// ValidateSignatures validates digital signatures in the document.
func (_fdbg *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _fdbg .AcroForm ==nil {return nil ,nil ;};if _fdbg .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_cgfgg *PdfSignature ;_fabdg *PdfField ;_beddf SignatureHandler ;};var _dbadg []*sigFieldPair ;for _ ,_gedbe :=range _fdbg .AcroForm .AllFields (){if _gedbe .V ==nil {continue ;};if _ffcba ,_abeff :=_aec .GetDict (_gedbe .V );_abeff {if _ebfbe ,_cegf :=_aec .GetNameVal (_ffcba .Get ("\u0054\u0079\u0070\u0065"));_cegf &&_ebfbe =="\u0053\u0069\u0067"{_afgcd ,_fccga :=_aec .GetIndirect (_gedbe .V );if !_fccga {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");return nil ,ErrTypeCheck ;};_dcec ,_cecf :=_fdbg .newPdfSignatureFromIndirect (_afgcd );if _cecf !=nil {return nil ,_cecf ;};var _efeeb SignatureHandler ;for _ ,_baadd :=range handlers {if _baadd .IsApplicable (_dcec ){_efeeb =_baadd ;break ;};};_dbadg =append (_dbadg ,&sigFieldPair {_cgfgg :_dcec ,_fabdg :_gedbe ,_beddf :_efeeb });};};};var _gbcgd []SignatureValidationResult ;for _ ,_dfgcb :=range _dbadg {_cgcff :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_dfgcb ._fabdg }};if _dfgcb ._beddf ==nil {_cgcff .Errors =append (_cgcff .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_gbcgd =append (_gbcgd ,_cgcff );continue ;};_febd ,_fddbc :=_dfgcb ._beddf .NewDigest (_dfgcb ._cgfgg );if _fddbc !=nil {_cgcff .Errors =append (_cgcff .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_fddbc .Error ());_gbcgd =append (_gbcgd ,_cgcff );continue ;};_eagga :=_dfgcb ._cgfgg .ByteRange ;if _eagga ==nil {_cgcff .Errors =append (_cgcff .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_gbcgd =append (_gbcgd ,_cgcff );continue ;};for _dbbbe :=0;_dbbbe < _eagga .Len ();_dbbbe =_dbbbe +2{_cbace ,_ :=_aec .GetNumberAsInt64 (_eagga .Get (_dbbbe ));_debe ,_ :=_aec .GetIntVal (_eagga .Get (_dbbbe +1));if _ ,_gagdbe :=_fdbg ._fcdf .Seek (_cbace ,_fb .SeekStart );_gagdbe !=nil {return nil ,_gagdbe ;};_ebca :=make ([]byte ,_debe );if _ ,_efafg :=_fdbg ._fcdf .Read (_ebca );_efafg !=nil {return nil ,_efafg ;};_febd .Write (_ebca );};_dabdc ,_fddbc :=_dfgcb ._beddf .Validate (_dfgcb ._cgfgg ,_febd );if _fddbc !=nil {return nil ,_fddbc ;};_dabdc .Name =_dfgcb ._cgfgg .Name .Decoded ();_dabdc .Reason =_dfgcb ._cgfgg .Reason .Decoded ();if _dfgcb ._cgfgg .M !=nil {_cdcf ,_gedd :=NewPdfDate (_dfgcb ._cgfgg .M .String ());if _gedd !=nil {_dabdc .Errors =append (_dabdc .Errors ,_gedd .Error ());continue ;};_dabdc .Date =_cdcf ;};_dabdc .ContactInfo =_dfgcb ._cgfgg .ContactInfo .Decoded ();_dabdc .Location =_dfgcb ._cgfgg .Location .Decoded ();_dabdc .Fields =_cgcff .Fields ;_gbcgd =append (_gbcgd ,_dabdc );};return _gbcgd ,nil ;};

// ToPdfObject converts rectangle to a PDF object.
func (_egcad *PdfRectangle )ToPdfObject ()_aec .PdfObject {return _aec .MakeArray (_aec .MakeFloat (_egcad .Llx ),_aec .MakeFloat (_egcad .Lly ),_aec .MakeFloat (_egcad .Urx ),_aec .MakeFloat (_egcad .Ury ));};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_cfagb :=&PdfOutline {_gfggef :_aec .MakeIndirectObject (_aec .MakeDict ())};_cfagb ._gdagc =_cfagb ;return _cfagb ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_eeea :=NewPdfAnnotation ();_dde :=&PdfAnnotationLink {};_dde .PdfAnnotation =_eeea ;_eeea .SetContext (_dde );return _dde ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_ebbe *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_ed .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");};_aafa ,_fad :=_be .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._aaaa ,img ._dbdfe );if _fad !=nil {return img ,_fad ;};_eddf ,_fad :=_be .GrayConverter .Convert (_aafa );if _fad !=nil {return img ,_fad ;};return _ffefc (_eddf .Base ()),nil ;};var (_edfcc =_dff .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_aegd =_dff .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_fdgf =_dff .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");_fgdb ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_egcca ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_ffed ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";);

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_aec .PdfObjectInteger ;BitsPerComponent *_aec .PdfObjectInteger ;VerticesPerRow *_aec .PdfObjectInteger ;Decode *_aec .PdfObjectArray ;Function []PdfFunction ;};func (_gdbg *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _cagfe []*PdfFieldSignature ;for _ ,_fggcc :=range _gdbg .AllFields (){switch _eace :=_fggcc .GetContext ().(type ){case *PdfFieldSignature :_gbgdg :=_eace ;_cagfe =append (_cagfe ,_gbgdg );};};return _cagfe ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_gadfa *PdfPageResources )HasExtGState (keyName _aec .PdfObjectName )bool {_ ,_ffaed :=_gadfa .GetFontByName (keyName );return _ffaed ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_adaa *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_aged ,_effa :=color .(*PdfColorDeviceRGB );if !_effa {_de .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _aged ,nil ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_afada *Outline )Insert (index uint ,item *OutlineItem ){_cbgec :=uint (len (_afada .Entries ));if index > _cbgec {index =_cbgec ;};_afada .Entries =append (_afada .Entries [:index ],append ([]*OutlineItem {item },_afada .Entries [index :]...)...);};func (_ccag *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _ccag ._dabc };

// ReplacePage replaces the original page to a new page.
func (_acge *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_dcabb :=pageNum -1;for _edefa :=range _acge ._fbbe {if _edefa ==_dcabb {_dfba :=page .Duplicate ();_gdcgc (_dfba );_acge ._fbbe [_edefa ]=_dfba ;};};};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_acec *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_aec .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgbd ,_cdfc :=_aec .GetNumbersAsFloat (objects );if _cdfc !=nil {return nil ,_cdfc ;};return _acec .ColorFromFloats (_fgbd );};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_gffde *PdfPageResources )SetXObjectFormByName (keyName _aec .PdfObjectName ,xform *XObjectForm )error {_ecdg :=xform .ToPdfObject ().(*_aec .PdfObjectStream );_bedfga :=_gffde .SetXObjectByName (keyName ,_ecdg );return _bedfga ;};func (_bfgf *PdfAcroForm )filteredFields (_gdged FieldFilterFunc ,_cbbe bool )[]*PdfField {if _bfgf ==nil {return nil ;};return _daeag (_bfgf .Fields ,_gdged ,_cbbe );};func (_fdcg *PdfReader )traverseObjectData (_fdddb _aec .PdfObject )error {return _aec .ResolveReferencesDeep (_fdddb ,_fdcg ._ddcbfa );};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_aec .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_afbe *_aec .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_efda *PdfShading )ToPdfObject ()_aec .PdfObject {_abdca :=_efda ._cecd ;_gdbf ,_fbgbcd :=_efda .getShadingDict ();if _fbgbcd !=nil {_de .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _efda .ShadingType !=nil {_gdbf .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_efda .ShadingType );};if _efda .ColorSpace !=nil {_gdbf .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_efda .ColorSpace .ToPdfObject ());};if _efda .Background !=nil {_gdbf .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_efda .Background );};if _efda .BBox !=nil {_gdbf .Set ("\u0042\u0042\u006f\u0078",_efda .BBox .ToPdfObject ());};if _efda .AntiAlias !=nil {_gdbf .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_efda .AntiAlias );};return _abdca ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// ToPdfObject convert PdfInfo to pdf object.
func (_dagd *PdfInfo )ToPdfObject ()_aec .PdfObject {_dbfef :=_aec .MakeDict ();_dbfef .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_dagd .Title );_dbfef .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_dagd .Author );_dbfef .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_dagd .Subject );_dbfef .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_dagd .Keywords );_dbfef .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_dagd .Creator );_dbfef .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_dagd .Producer );_dbfef .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_dagd .Trapped );if _dagd .CreationDate !=nil {_dbfef .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_dagd .CreationDate .ToPdfObject ());};if _dagd .ModifiedDate !=nil {_dbfef .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_dagd .ModifiedDate .ToPdfObject ());};return _dbfef ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_faef *modelManager )GetModelFromPrimitive (primitive _aec .PdfObject )PdfModel {model ,_fgfac :=_faef ._gdda [primitive ];if !_fgfac {return nil ;};return model ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gbdebe *PdfShadingType3 )ToPdfObject ()_aec .PdfObject {_gbdebe .PdfShading .ToPdfObject ();_ggaeg ,_ccbdg :=_gbdebe .getShadingDict ();if _ccbdg !=nil {_de .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _gbdebe .Coords !=nil {_ggaeg .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_gbdebe .Coords );};if _gbdebe .Domain !=nil {_ggaeg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gbdebe .Domain );};if _gbdebe .Function !=nil {if len (_gbdebe .Function )==1{_ggaeg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gbdebe .Function [0].ToPdfObject ());}else {_bgcbd :=_aec .MakeArray ();for _ ,_aedaaa :=range _gbdebe .Function {_bgcbd .Append (_aedaaa .ToPdfObject ());};_ggaeg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bgcbd );};};if _gbdebe .Extend !=nil {_ggaeg .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_gbdebe .Extend );};return _gbdebe ._cecd ;};

// GetXObjectByName gets XObject by name.
func (_bgef *PdfPage )GetXObjectByName (name _aec .PdfObjectName )(_aec .PdfObject ,bool ){_efeeg ,_caba :=_bgef .Resources .XObject .(*_aec .PdfObjectDictionary );if !_caba {return nil ,false ;};if _adbbb :=_efeeg .Get (name );_adbbb !=nil {return _adbbb ,true ;};return nil ,false ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_dfc .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_dfc .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_dfc .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_bgeba *PdfAppender ;_gbda *DSS ;};func _bcbg (_ddgcc string )(map[_cad .CharCode ]_cad .GlyphName ,error ){_bagg :=_ee .Split (_ddgcc ,"\u000a");_bgfba :=make (map[_cad .CharCode ]_cad .GlyphName );for _ ,_ecfd :=range _bagg {_eega :=_fdgf .FindStringSubmatch (_ecfd );if _eega ==nil {continue ;};_fgdd ,_dfbb :=_eega [1],_eega [2];_fafef ,_deec :=_da .Atoi (_fgdd );if _deec !=nil {_de .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_ecfd );return nil ,_aec .ErrTypeError ;};_bgfba [_cad .CharCode (_fafef )]=_cad .GlyphName (_dfbb );};_de .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_bgfba );return _bgfba ,nil ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_aec .PdfObjectArray ;Domain *_aec .PdfObjectArray ;Function []PdfFunction ;Extend *_aec .PdfObjectArray ;};func _cgefb (_egcab _aec .PdfObject )(PdfFunction ,error ){_egcab =_aec .ResolveReference (_egcab );if _cbgbc ,_adfce :=_egcab .(*_aec .PdfObjectStream );_adfce {_eggc :=_cbgbc .PdfObjectDictionary ;_cbcab ,_bfcfg :=_eggc .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_aec .PdfObjectInteger );if !_bfcfg {_de .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ed .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_cbcab ==0{return _eaba (_cbgbc );}else if *_cbcab ==4{return _bebc (_cbgbc );}else {return nil ,_ed .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _efgef ,_ffef :=_egcab .(*_aec .PdfIndirectObject );_ffef {_bdeggb ,_cfbba :=_efgef .PdfObject .(*_aec .PdfObjectDictionary );if !_cfbba {_de .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_ed .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_ccecf ,_cfbba :=_bdeggb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_aec .PdfObjectInteger );if !_cfbba {_de .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ed .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_ccecf ==2{return _befdd (_efgef );}else if *_ccecf ==3{return _geeba (_efgef );}else {return nil ,_ed .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _ceba ,_eege :=_egcab .(*_aec .PdfObjectDictionary );_eege {_caede ,_afcb :=_ceba .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_aec .PdfObjectInteger );if !_afcb {_de .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ed .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_caede ==2{return _befdd (_ceba );}else if *_caede ==3{return _geeba (_ceba );}else {return nil ,_ed .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_de .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_egcab );return nil ,_ed .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_fdcd *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _fdcd .Range };

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_cfaaf *Image )ConvertToBinary ()error {if _cfaaf .ColorComponents ==1&&_cfaaf .BitsPerComponent ==1{return nil ;};_fbafc ,_baaabb :=_cfaaf .ToGoImage ();if _baaabb !=nil {return _baaabb ;};_fcag ,_baaabb :=_be .MonochromeConverter .Convert (_fbafc );if _baaabb !=nil {return _baaabb ;};_cfaaf .BitsPerComponent =1;_cfaaf .ColorComponents =1;_cfaaf .Data =_fcag .Base ().Data ;return nil ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_dcge :=&XObjectForm {};_dfge :=&_aec .PdfObjectStream {};_dfge .PdfObjectDictionary =_aec .MakeDict ();_dcge ._fgddc =_dfge ;return _dcge ;};func _aecea (_efag *_aec .PdfObjectDictionary )*VRI {_effbd ,_ :=_aec .GetString (_efag .Get ("\u0054\u0055"));_dggeb ,_ :=_aec .GetString (_efag .Get ("\u0054\u0053"));return &VRI {Cert :_ddbag (_efag .Get ("\u0043\u0065\u0072\u0074")),OCSP :_ddbag (_efag .Get ("\u004f\u0043\u0053\u0050")),CRL :_ddbag (_efag .Get ("\u0043\u0052\u004c")),TU :_effbd ,TS :_dggeb };};func _gede (_degec *_aec .PdfObjectDictionary )(*PdfShadingType4 ,error ){_gcgab :=PdfShadingType4 {};_eedfc :=_degec .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _eedfc ==nil {_de .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_cfaaa ,_edecg :=_eedfc .(*_aec .PdfObjectInteger );if !_edecg {_de .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eedfc );return nil ,_aec .ErrTypeError ;};_gcgab .BitsPerCoordinate =_cfaaa ;_eedfc =_degec .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _eedfc ==nil {_de .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_cfaaa ,_edecg =_eedfc .(*_aec .PdfObjectInteger );if !_edecg {_de .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_eedfc );return nil ,_aec .ErrTypeError ;};_gcgab .BitsPerComponent =_cfaaa ;_eedfc =_degec .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _eedfc ==nil {_de .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_cfaaa ,_edecg =_eedfc .(*_aec .PdfObjectInteger );if !_edecg {_de .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_eedfc );return nil ,_aec .ErrTypeError ;};_gcgab .BitsPerComponent =_cfaaa ;_eedfc =_degec .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _eedfc ==nil {_de .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_agcbfb ,_edecg :=_eedfc .(*_aec .PdfObjectArray );if !_edecg {_de .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eedfc );return nil ,_aec .ErrTypeError ;};_gcgab .Decode =_agcbfb ;_eedfc =_degec .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _eedfc ==nil {_de .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_gcgab .Function =[]PdfFunction {};if _afffb ,_baaaf :=_eedfc .(*_aec .PdfObjectArray );_baaaf {for _ ,_ffbag :=range _afffb .Elements (){_caac ,_bacbc :=_cgefb (_ffbag );if _bacbc !=nil {_de .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bacbc );return nil ,_bacbc ;};_gcgab .Function =append (_gcgab .Function ,_caac );};}else {_agbb ,_gaadf :=_cgefb (_eedfc );if _gaadf !=nil {_de .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gaadf );return nil ,_gaadf ;};_gcgab .Function =append (_gcgab .Function ,_agbb );};return &_gcgab ,nil ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_aec .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_agea *_aec .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_ef *PdfActionGoToE )ToPdfObject ()_aec .PdfObject {_ef .PdfAction .ToPdfObject ();_adb :=_ef ._gf ;_ggd :=_adb .PdfObject .(*_aec .PdfObjectDictionary );_ggd .SetIfNotNil ("\u0053",_aec .MakeName (string (ActionTypeGoToE )));if _ef .F !=nil {_ggd .Set ("\u0046",_ef .F .ToPdfObject ());};_ggd .SetIfNotNil ("\u0044",_ef .D );_ggd .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ef .NewWindow );_ggd .SetIfNotNil ("\u0054",_ef .T );return _adb ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_aec .PdfIndirectObject )*PdfOutlineItem {_bfgga :=PdfOutlineItem {};_bfgga ._gdagc =&_bfgga ;_bfgga .Title =_aec .MakeString (title );_cccad :=_aec .MakeArray ();_cccad .Append (page );_cccad .Append (_aec .MakeName ("\u0046\u0069\u0074"));_bfgga .Dest =_cccad ;return &_bfgga ;};func _bdeec (_bbdgg *_aec .PdfObjectDictionary ,_egcbe *fontCommon ,_cdfbf _cad .TextEncoder )(*pdfFontSimple ,error ){_fgeg :=_ddedc (_egcbe );_fgeg ._gfeg =_cdfbf ;if _cdfbf ==nil {_aabd :=_bbdgg .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _aabd ==nil {_aabd =_aec .MakeInteger (0);};_fgeg .FirstChar =_aabd ;_afad ,_cadc :=_aec .GetIntVal (_aabd );if !_cadc {_de .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_aabd );return nil ,_aec .ErrTypeError ;};_dbdgg :=_cad .CharCode (_afad );_aabd =_bbdgg .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _aabd ==nil {_aabd =_aec .MakeInteger (255);};_fgeg .LastChar =_aabd ;_afad ,_cadc =_aec .GetIntVal (_aabd );if !_cadc {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_aabd );return nil ,_aec .ErrTypeError ;};_defcf :=_cad .CharCode (_afad );_fgeg ._gcda =make (map[_cad .CharCode ]float64 );_aabd =_bbdgg .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _aabd !=nil {_fgeg .Widths =_aabd ;_eedfa ,_bcdggf :=_aec .GetArray (_aabd );if !_bcdggf {_de .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_aabd );return nil ,_aec .ErrTypeError ;};_gdec ,_fege :=_eedfa .ToFloat64Array ();if _fege !=nil {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");return nil ,_fege ;};if len (_gdec )!=int (_defcf -_dbdgg +1){_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_defcf -_dbdgg +1,len (_gdec ));return nil ,_aec .ErrRangeError ;};for _bagcf ,_cccg :=range _gdec {_fgeg ._gcda [_dbdgg +_cad .CharCode (_bagcf )]=_cccg ;};};};_fgeg .Encoding =_aec .TraceToDirectObject (_bbdgg .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _fgeg ,nil ;};func _eaba (_eedda *_aec .PdfObjectStream )(*PdfFunctionType0 ,error ){_beacfg :=&PdfFunctionType0 {};_beacfg ._cbdee =_eedda ;_addbb :=_eedda .PdfObjectDictionary ;_cfbfd ,_bcced :=_aec .TraceToDirectObject (_addbb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_aec .PdfObjectArray );if !_bcced {_de .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _cfbfd .Len ()< 0||_cfbfd .Len ()%2!=0{_de .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ed .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_beacfg .NumInputs =_cfbfd .Len ()/2;_eadba ,_ddgf :=_cfbfd .ToFloat64Array ();if _ddgf !=nil {return nil ,_ddgf ;};_beacfg .Domain =_eadba ;_cfbfd ,_bcced =_aec .TraceToDirectObject (_addbb .Get ("\u0052\u0061\u006eg\u0065")).(*_aec .PdfObjectArray );if !_bcced {_de .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _cfbfd .Len ()< 0||_cfbfd .Len ()%2!=0{return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_beacfg .NumOutputs =_cfbfd .Len ()/2;_bafe ,_ddgf :=_cfbfd .ToFloat64Array ();if _ddgf !=nil {return nil ,_ddgf ;};_beacfg .Range =_bafe ;_cfbfd ,_bcced =_aec .TraceToDirectObject (_addbb .Get ("\u0053\u0069\u007a\u0065")).(*_aec .PdfObjectArray );if !_bcced {_de .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_cbbgb ,_ddgf :=_cfbfd .ToIntegerArray ();if _ddgf !=nil {return nil ,_ddgf ;};if len (_cbbgb )!=_beacfg .NumInputs {_de .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_beacfg .Size =_cbbgb ;_dbcfe ,_bcced :=_aec .TraceToDirectObject (_addbb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_aec .PdfObjectInteger );if !_bcced {_de .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if *_dbcfe !=1&&*_dbcfe !=2&&*_dbcfe !=4&&*_dbcfe !=8&&*_dbcfe !=12&&*_dbcfe !=16&&*_dbcfe !=24&&*_dbcfe !=32{_de .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_dbcfe );return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_beacfg .BitsPerSample =int (*_dbcfe );_beacfg .Order =1;_bafca ,_bcced :=_aec .TraceToDirectObject (_addbb .Get ("\u004f\u0072\u0064e\u0072")).(*_aec .PdfObjectInteger );if _bcced {if *_bafca !=1&&*_bafca !=3{_de .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_bafca );return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_beacfg .Order =int (*_bafca );};_cfbfd ,_bcced =_aec .TraceToDirectObject (_addbb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_aec .PdfObjectArray );if _bcced {_cdegc ,_fcefc :=_cfbfd .ToFloat64Array ();if _fcefc !=nil {return nil ,_fcefc ;};_beacfg .Encode =_cdegc ;};_cfbfd ,_bcced =_aec .TraceToDirectObject (_addbb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_aec .PdfObjectArray );if _bcced {_cgeba ,_ebbeg :=_cfbfd .ToFloat64Array ();if _ebbeg !=nil {return nil ,_ebbeg ;};_beacfg .Decode =_cgeba ;};_efefb ,_ddgf :=_aec .DecodeStream (_eedda );if _ddgf !=nil {return nil ,_ddgf ;};_beacfg ._bbfc =_efefb ;return _beacfg ,nil ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _aec .PdfObject ;IC _aec .PdfObject ;RO _aec .PdfObject ;OverlayText _aec .PdfObject ;Repeat _aec .PdfObject ;DA _aec .PdfObject ;Q _aec .PdfObject ;};func (_cbbde *PdfReader )newPdfSignatureFromIndirect (_gdfgbg *_aec .PdfIndirectObject )(*PdfSignature ,error ){_faedb ,_gfgbg :=_gdfgbg .PdfObject .(*_aec .PdfObjectDictionary );if !_gfgbg {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,ErrTypeCheck ;};if _cdgccb ,_cbade :=_cbbde ._bgeab .GetModelFromPrimitive (_gdfgbg ).(*PdfSignature );_cbade {return _cdgccb ,nil ;};_bcbdc :=&PdfSignature {};_bcbdc ._ccggd =_gdfgbg ;_bcbdc .Type ,_ =_aec .GetName (_faedb .Get ("\u0054\u0079\u0070\u0065"));_bcbdc .Filter ,_gfgbg =_aec .GetName (_faedb .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_gfgbg {_de .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_bcbdc .SubFilter ,_ =_aec .GetName (_faedb .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_bcbdc .Contents ,_gfgbg =_aec .GetString (_faedb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_gfgbg {_de .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_bcbdc .Cert =_faedb .Get ("\u0043\u0065\u0072\u0074");_bcbdc .ByteRange ,_ =_aec .GetArray (_faedb .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_bcbdc .Reference ,_ =_aec .GetArray (_faedb .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_bcbdc .Changes ,_ =_aec .GetArray (_faedb .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_bcbdc .Name ,_ =_aec .GetString (_faedb .Get ("\u004e\u0061\u006d\u0065"));_bcbdc .M ,_ =_aec .GetString (_faedb .Get ("\u004d"));_bcbdc .Location ,_ =_aec .GetString (_faedb .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));_bcbdc .Reason ,_ =_aec .GetString (_faedb .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_bcbdc .ContactInfo ,_ =_aec .GetString (_faedb .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_bcbdc .R ,_ =_aec .GetInt (_faedb .Get ("\u0052"));_bcbdc .V ,_ =_aec .GetInt (_faedb .Get ("\u0056"));_bcbdc .PropBuild ,_ =_aec .GetDict (_faedb .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_bcbdc .PropAuthTime ,_ =_aec .GetInt (_faedb .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));_bcbdc .PropAuthType ,_ =_aec .GetName (_faedb .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _bcbdc ,nil ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_afe :=NewPdfAnnotation ();_bcf :=&PdfAnnotationScreen {};_bcf .PdfAnnotation =_afe ;_afe .SetContext (_bcf );return _bcf ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_eceea *PdfShading )GetContainingPdfObject ()_aec .PdfObject {return _eceea ._cecd };

// SetForms sets the Acroform for a PDF file.
func (_badbcd *PdfWriter )SetForms (form *PdfAcroForm )error {_badbcd ._eacab =form ;return nil };

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_fadb :=&PdfColorspaceSpecialSeparation {};return _fadb ;};func (_cec *PdfReader )newPdfAnnotationMarkupFromDict (_afa *_aec .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_eaac :=&PdfAnnotationMarkup {};if _ffg :=_afa .Get ("\u0054");_ffg !=nil {_eaac .T =_ffg ;};if _ffc :=_afa .Get ("\u0050\u006f\u0070u\u0070");_ffc !=nil {_bcceg ,_bgc :=_ffc .(*_aec .PdfIndirectObject );if !_bgc {if _ ,_cbbd :=_ffc .(*_aec .PdfObjectNull );!_cbbd {return nil ,_ed .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");};}else {_abcc ,_eca :=_cec .newPdfAnnotationFromIndirectObject (_bcceg );if _eca !=nil {return nil ,_eca ;};if _abcc !=nil {_beae ,_bgd :=_abcc ._debf .(*PdfAnnotationPopup );if !_bgd {return nil ,_ed .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");};_eaac .Popup =_beae ;};};};if _gbbd :=_afa .Get ("\u0043\u0041");_gbbd !=nil {_eaac .CA =_gbbd ;};if _ffa :=_afa .Get ("\u0052\u0043");_ffa !=nil {_eaac .RC =_ffa ;};if _feee :=_afa .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");_feee !=nil {_eaac .CreationDate =_feee ;};if _befc :=_afa .Get ("\u0049\u0052\u0054");_befc !=nil {_eaac .IRT =_befc ;};if _fcfd :=_afa .Get ("\u0053\u0075\u0062\u006a");_fcfd !=nil {_eaac .Subj =_fcfd ;};if _gad :=_afa .Get ("\u0052\u0054");_gad !=nil {_eaac .RT =_gad ;};if _bfc :=_afa .Get ("\u0049\u0054");_bfc !=nil {_eaac .IT =_bfc ;};if _gba :=_afa .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_gba !=nil {_eaac .ExData =_gba ;};return _eaac ,nil ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_fabaag *XObjectForm )SetContentStream (content []byte ,encoder _aec .StreamEncoder )error {_aadac :=content ;if encoder ==nil {if _fabaag .Filter !=nil {encoder =_fabaag .Filter ;}else {encoder =_aec .NewRawEncoder ();};};_ddefe ,_cfaee :=encoder .EncodeBytes (_aadac );if _cfaee !=nil {return _cfaee ;};_aadac =_ddefe ;_fabaag .Stream =_aadac ;_fabaag .Filter =encoder ;return nil ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_dffb *PdfPage )SetContentStreams (cStreams []string ,encoder _aec .StreamEncoder )error {if len (cStreams )==0{_dffb .Contents =nil ;return nil ;};if encoder ==nil {encoder =_aec .NewRawEncoder ();};var _fafga []*_aec .PdfObjectStream ;for _ ,_ffedb :=range cStreams {_daecb :=&_aec .PdfObjectStream {};_fabgd :=encoder .MakeStreamDict ();_bbgef ,_afbeg :=encoder .EncodeBytes ([]byte (_ffedb ));if _afbeg !=nil {return _afbeg ;};_fabgd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aec .MakeInteger (int64 (len (_bbgef ))));_daecb .PdfObjectDictionary =_fabgd ;_daecb .Stream =_bbgef ;_fafga =append (_fafga ,_daecb );};if len (_fafga )==1{_dffb .Contents =_fafga [0];}else {_deabc :=_aec .MakeArray ();for _ ,_beaff :=range _fafga {_deabc .Append (_beaff );};_dffb .Contents =_deabc ;};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_bac *PdfAnnotationPolygon )ToPdfObject ()_aec .PdfObject {_bac .PdfAnnotation .ToPdfObject ();_bbag :=_bac ._bcce ;_gccf :=_bbag .PdfObject .(*_aec .PdfObjectDictionary );_bac .PdfAnnotationMarkup .appendToPdfDictionary (_gccf );_gccf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));_gccf .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_bac .Vertices );_gccf .SetIfNotNil ("\u004c\u0045",_bac .LE );_gccf .SetIfNotNil ("\u0042\u0053",_bac .BS );_gccf .SetIfNotNil ("\u0049\u0043",_bac .IC );_gccf .SetIfNotNil ("\u0042\u0045",_bac .BE );_gccf .SetIfNotNil ("\u0049\u0054",_bac .IT );_gccf .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bac .Measure );return _bbag ;};func _bfaf (_deccb *_aec .PdfObjectDictionary )(*PdfFieldButton ,error ){_cfcfa :=&PdfFieldButton {};_cfcfa .Opt ,_ =_aec .GetArray (_deccb .Get ("\u004f\u0070\u0074"));return _cfcfa ,nil ;};func (_fed *PdfReader )newPdfActionNamedFromDict (_abg *_aec .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_abg .Get ("\u004e")},nil ;};func _agbf (_fgda *_aec .PdfObjectDictionary )(*PdfFieldText ,error ){_acgcg :=&PdfFieldText {};_acgcg .DA ,_ =_aec .GetString (_fgda .Get ("\u0044\u0041"));_acgcg .Q ,_ =_aec .GetInt (_fgda .Get ("\u0051"));_acgcg .DS ,_ =_aec .GetString (_fgda .Get ("\u0044\u0053"));_acgcg .RV =_fgda .Get ("\u0052\u0056");_acgcg .MaxLen ,_ =_aec .GetInt (_fgda .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _acgcg ,nil ;};func (_gedf *PdfReader )newPdfAnnotationSquigglyFromDict (_fff *_aec .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_acd :=PdfAnnotationSquiggly {};_begf ,_bff :=_gedf .newPdfAnnotationMarkupFromDict (_fff );if _bff !=nil {return nil ,_bff ;};_acd .PdfAnnotationMarkup =_begf ;_acd .QuadPoints =_fff .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_acd ,nil ;};func (_fdfd *PdfWriter )hasObject (_eeac _aec .PdfObject )bool {_ ,_dgcea :=_fdfd ._gbfef [_eeac ];return _dgcea ;};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _aec .PdfObject )(*PdfFont ,error ){return _fgdga (fontObj ,true )};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_cdaaa *PdfAcroForm )GetContainingPdfObject ()_aec .PdfObject {return _cdaaa ._dgdba };

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_fea :=NewPdfAnnotation ();_bee :=&PdfAnnotationHighlight {};_bee .PdfAnnotation =_fea ;_bee .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fea .SetContext (_bee );return _bee ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_ccggd *_aec .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_aec .PdfObjectName ;Filter *_aec .PdfObjectName ;SubFilter *_aec .PdfObjectName ;Contents *_aec .PdfObjectString ;Cert _aec .PdfObject ;ByteRange *_aec .PdfObjectArray ;Reference *_aec .PdfObjectArray ;Changes *_aec .PdfObjectArray ;Name *_aec .PdfObjectString ;M *_aec .PdfObjectString ;Location *_aec .PdfObjectString ;Reason *_aec .PdfObjectString ;ContactInfo *_aec .PdfObjectString ;R *_aec .PdfObjectInteger ;V *_aec .PdfObjectInteger ;PropBuild *_aec .PdfObjectDictionary ;PropAuthTime *_aec .PdfObjectInteger ;PropAuthType *_aec .PdfObjectName ;};func _ffefc (_eadg *_be .ImageBase )(_bbfgc Image ){_bbfgc .Width =int64 (_eadg .Width );_bbfgc .Height =int64 (_eadg .Height );_bbfgc .BitsPerComponent =int64 (_eadg .BitsPerComponent );_bbfgc .ColorComponents =_eadg .ColorComponents ;_bbfgc .Data =_eadg .Data ;_bbfgc ._dbdfe =_eadg .Decode ;_bbfgc ._aaaa =_eadg .Alpha ;return _bbfgc ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_dfdda *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_bdaa *Image )ColorAt (x ,y int )(_f .Color ,error ){_cbcdg :=_be .BytesPerLine (int (_bdaa .Width ),int (_bdaa .BitsPerComponent ),_bdaa .ColorComponents );switch _bdaa .ColorComponents {case 1:return _be .ColorAtGrayscale (x ,y ,int (_bdaa .BitsPerComponent ),_cbcdg ,_bdaa .Data ,_bdaa ._dbdfe );case 3:return _be .ColorAtNRGBA (x ,y ,int (_bdaa .Width ),_cbcdg ,int (_bdaa .BitsPerComponent ),_bdaa .Data ,_bdaa ._aaaa ,_bdaa ._dbdfe );case 4:return _be .ColorAtCMYK (x ,y ,int (_bdaa .Width ),_bdaa .Data ,_bdaa ._dbdfe );};_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bdaa .ColorComponents ,_bdaa .BitsPerComponent );return nil ,_ed .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};func (_caec *DSS )addOCSPs (_ebcc [][]byte )([]*_aec .PdfObjectStream ,error ){return _caec .add (&_caec .OCSPs ,_caec ._eecb ,_ebcc );};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_ddcbfa :map[_aec .PdfObject ]struct{}{},_bgeab :_dfcfcf (),_adecd :_aec .NewParserFromString (txt )};};func (_cgcc *PdfReader )newPdfAnnotationTrapNetFromDict (_fffa *_aec .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_dfda :=PdfAnnotationTrapNet {};return &_dfda ,nil ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_ecgcc *PdfField )ToPdfObject ()_aec .PdfObject {_dagfd :=_ecgcc ._cfaef ;_ffge :=_dagfd .PdfObject .(*_aec .PdfObjectDictionary );_gffd :=_aec .MakeArray ();for _ ,_gcea :=range _ecgcc .Kids {_gffd .Append (_gcea .ToPdfObject ());};for _ ,_effba :=range _ecgcc .Annotations {if _effba ._bcce !=_ecgcc ._cfaef {_gffd .Append (_effba .GetContext ().ToPdfObject ());};};if _ecgcc .Parent !=nil {_ffge .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_ecgcc .Parent .GetContainingPdfObject ());};if _gffd .Len ()> 0{_ffge .Set ("\u004b\u0069\u0064\u0073",_gffd );};_ffge .SetIfNotNil ("\u0046\u0054",_ecgcc .FT );_ffge .SetIfNotNil ("\u0054",_ecgcc .T );_ffge .SetIfNotNil ("\u0054\u0055",_ecgcc .TU );_ffge .SetIfNotNil ("\u0054\u004d",_ecgcc .TM );_ffge .SetIfNotNil ("\u0046\u0066",_ecgcc .Ff );_ffge .SetIfNotNil ("\u0056",_ecgcc .V );_ffge .SetIfNotNil ("\u0044\u0056",_ecgcc .DV );_ffge .SetIfNotNil ("\u0041\u0041",_ecgcc .AA );return _dagfd ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_dac :=NewPdfAction ();_bbb :=&PdfActionGoTo3DView {};_bbb .PdfAction =_dac ;_dac .SetContext (_bbb );return _bbb ;};func (_geff *PdfReader )newPdfAnnotationInkFromDict (_bfcc *_aec .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_gde :=PdfAnnotationInk {};_bbcd ,_fcbf :=_geff .newPdfAnnotationMarkupFromDict (_bfcc );if _fcbf !=nil {return nil ,_fcbf ;};_gde .PdfAnnotationMarkup =_bbcd ;_gde .InkList =_bfcc .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_gde .BS =_bfcc .Get ("\u0042\u0053");return &_gde ,nil ;};func _bebbb (_agdd _aec .PdfObject )(*PdfFontDescriptor ,error ){_gdgee :=&PdfFontDescriptor {};_agdd =_aec .ResolveReference (_agdd );if _efbb ,_dacgag :=_agdd .(*_aec .PdfIndirectObject );_dacgag {_gdgee ._bdac =_efbb ;_agdd =_efbb .PdfObject ;};_fgbee ,_cadga :=_aec .GetDict (_agdd );if !_cadga {_de .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_agdd );return nil ,_aec .ErrTypeError ;};if _aeef :=_fgbee .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_aeef !=nil {_gdgee .FontName =_aeef ;}else {_de .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");};_cagb ,_ :=_aec .GetName (_gdgee .FontName );if _bcffb :=_fgbee .Get ("\u0054\u0079\u0070\u0065");_bcffb !=nil {_bacc ,_bcgef :=_bcffb .(*_aec .PdfObjectName );if !_bcgef ||string (*_bacc )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_de .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_bcffb ,_cagb ,_gdgee .FontName );};}else {_de .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_cagb ,_gdgee .FontName );};_gdgee .FontFamily =_fgbee .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_gdgee .FontStretch =_fgbee .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_gdgee .FontWeight =_fgbee .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");_gdgee .Flags =_fgbee .Get ("\u0046\u006c\u0061g\u0073");_gdgee .FontBBox =_fgbee .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_gdgee .ItalicAngle =_fgbee .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_gdgee .Ascent =_fgbee .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");_gdgee .Descent =_fgbee .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_gdgee .Leading =_fgbee .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_gdgee .CapHeight =_fgbee .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_gdgee .XHeight =_fgbee .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");_gdgee .StemV =_fgbee .Get ("\u0053\u0074\u0065m\u0056");_gdgee .StemH =_fgbee .Get ("\u0053\u0074\u0065m\u0048");_gdgee .AvgWidth =_fgbee .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_gdgee .MaxWidth =_fgbee .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");_gdgee .MissingWidth =_fgbee .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_gdgee .FontFile =_fgbee .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_gdgee .FontFile2 =_fgbee .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");_gdgee .FontFile3 =_fgbee .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_gdgee .CharSet =_fgbee .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_gdgee .Style =_fgbee .Get ("\u0053\u0074\u0079l\u0065");_gdgee .Lang =_fgbee .Get ("\u004c\u0061\u006e\u0067");_gdgee .FD =_fgbee .Get ("\u0046\u0044");_gdgee .CIDSet =_fgbee .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _gdgee .Flags !=nil {if _gfab ,_afgf :=_aec .GetIntVal (_gdgee .Flags );_afgf {_gdgee ._abef =_gfab ;};};if _gdgee .MissingWidth !=nil {if _ggddc ,_cccbc :=_aec .GetNumberAsFloat (_gdgee .MissingWidth );_cccbc ==nil {_gdgee ._fbgbb =_ggddc ;};};if _gdgee .FontFile !=nil {_eddc ,_gbebf :=_ddcbf (_gdgee .FontFile );if _gbebf !=nil {return _gdgee ,_gbebf ;};_de .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_eddc );_gdgee .fontFile =_eddc ;};if _gdgee .FontFile2 !=nil {_cbccg ,_abac :=_ge .NewFontFile2FromPdfObject (_gdgee .FontFile2 );if _abac !=nil {return _gdgee ,_abac ;};_de .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_cbccg .String ());_gdgee ._cagd =&_cbccg ;};return _gdgee ,nil ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_eegbgd *PdfPage )AppendContentStream (contentStr string )error {_fffcfa ,_afac :=_eegbgd .GetContentStreams ();if _afac !=nil {return _afac ;};if len (_fffcfa )==0{_fffcfa =[]string {contentStr };return _eegbgd .SetContentStreams (_fffcfa ,_aec .NewFlateEncoder ());};var _cbaag _add .Buffer ;_cbaag .WriteString (_fffcfa [len (_fffcfa )-1]);_cbaag .WriteString ("\u000a");_cbaag .WriteString (contentStr );_fffcfa [len (_fffcfa )-1]=_cbaag .String ();return _eegbgd .SetContentStreams (_fffcfa ,_aec .NewFlateEncoder ());};func (_ccec *PdfReader )newPdfAnnotationRichMediaFromDict (_aecb *_aec .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_fead :=&PdfAnnotationRichMedia {};_fead .RichMediaSettings =_aecb .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_fead .RichMediaContent =_aecb .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _fead ,nil ;};func (_eeg *PdfReader )newPdfAnnotationMovieFromDict (_dafcc *_aec .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_ffac :=PdfAnnotationMovie {};_ffac .T =_dafcc .Get ("\u0054");_ffac .Movie =_dafcc .Get ("\u004d\u006f\u0076i\u0065");_ffac .A =_dafcc .Get ("\u0041");return &_ffac ,nil ;};var _fegfd =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};

// Add appends a top level outline item to the outline.
func (_eddge *Outline )Add (item *OutlineItem ){_eddge .Entries =append (_eddge .Entries ,item )};func (_facbeg *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_ccgaa OutlineDest )ToPdfObject ()_aec .PdfObject {if (_ccgaa .PageObj ==nil &&_ccgaa .Page < 0)||_ccgaa .Mode ==""{return _aec .MakeNull ();};_gbcdb :=_aec .MakeArray ();if _ccgaa .PageObj !=nil {_gbcdb .Append (_ccgaa .PageObj );}else {_gbcdb .Append (_aec .MakeInteger (_ccgaa .Page ));};_gbcdb .Append (_aec .MakeName (_ccgaa .Mode ));switch _ccgaa .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_gbcdb .Append (_aec .MakeFloat (_ccgaa .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_gbcdb .Append (_aec .MakeFloat (_ccgaa .X ));case "\u0058\u0059\u005a":_gbcdb .Append (_aec .MakeFloat (_ccgaa .X ));_gbcdb .Append (_aec .MakeFloat (_ccgaa .Y ));_gbcdb .Append (_aec .MakeFloat (_ccgaa .Zoom ));default:_gbcdb .Set (1,_aec .MakeName ("\u0046\u0069\u0074"));};return _gbcdb ;};func _aeba (_abfb *PdfField )[]*PdfField {_acgb :=[]*PdfField {_abfb };for _ ,_dadb :=range _abfb .Kids {_acgb =append (_acgb ,_aeba (_dadb )...);};return _acgb ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_gefdc *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_de .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_de .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );_de .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_de .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );_abgba ,_adbcf :=_be .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._aaaa ,img ._dbdfe );if _adbcf !=nil {return Image {},_adbcf ;};_bggg ,_adbcf :=_be .NRGBAConverter .Convert (_abgba );if _adbcf !=nil {return Image {},_adbcf ;};return _ffefc (_bggg .Base ()),nil ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_aecfg *PdfPageResources )GetXObjectFormByName (keyName _aec .PdfObjectName )(*XObjectForm ,error ){_agccd ,_aegbd :=_aecfg .GetXObjectByName (keyName );if _agccd ==nil {return nil ,nil ;};if _aegbd !=XObjectTypeForm {return nil ,_ed .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");};_eddagc ,_ddba :=NewXObjectFormFromStream (_agccd );if _ddba !=nil {return nil ,_ddba ;};return _eddagc ,nil ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};func _cegcb (_cagag *_aec .PdfObjectDictionary )(*PdfShadingType1 ,error ){_bfgfe :=PdfShadingType1 {};if _abfga :=_cagag .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_abfga !=nil {_abfga =_aec .TraceToDirectObject (_abfga );_dffcbb ,_ceagb :=_abfga .(*_aec .PdfObjectArray );if !_ceagb {_de .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_abfga );return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bfgfe .Domain =_dffcbb ;};if _ccabg :=_cagag .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_ccabg !=nil {_ccabg =_aec .TraceToDirectObject (_ccabg );_ebad ,_gbacb :=_ccabg .(*_aec .PdfObjectArray );if !_gbacb {_de .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ccabg );return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bfgfe .Matrix =_ebad ;};_cccaa :=_cagag .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cccaa ==nil {_de .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_bfgfe .Function =[]PdfFunction {};if _bdadc ,_bddeb :=_cccaa .(*_aec .PdfObjectArray );_bddeb {for _ ,_ccff :=range _bdadc .Elements (){_adcb ,_fgbdc :=_cgefb (_ccff );if _fgbdc !=nil {_de .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fgbdc );return nil ,_fgbdc ;};_bfgfe .Function =append (_bfgfe .Function ,_adcb );};}else {_aedca ,_caceg :=_cgefb (_cccaa );if _caceg !=nil {_de .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_caceg );return nil ,_caceg ;};_bfgfe .Function =append (_bfgfe .Function ,_aedca );};return &_bfgfe ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_aegfa *PdfShadingType4 )ToPdfObject ()_aec .PdfObject {_aegfa .PdfShading .ToPdfObject ();_adgad ,_efbgc :=_aegfa .getShadingDict ();if _efbgc !=nil {_de .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _aegfa .BitsPerCoordinate !=nil {_adgad .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_aegfa .BitsPerCoordinate );};if _aegfa .BitsPerComponent !=nil {_adgad .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aegfa .BitsPerComponent );};if _aegfa .BitsPerFlag !=nil {_adgad .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_aegfa .BitsPerFlag );};if _aegfa .Decode !=nil {_adgad .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_aegfa .Decode );};if _aegfa .Function !=nil {if len (_aegfa .Function )==1{_adgad .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aegfa .Function [0].ToPdfObject ());}else {_afdfb :=_aec .MakeArray ();for _ ,_dgcdb :=range _aegfa .Function {_afdfb .Append (_dgcdb .ToPdfObject ());};_adgad .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_afdfb );};};return _aegfa ._cecd ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bbbd *PdfColorspaceDeviceGray )ToPdfObject ()_aec .PdfObject {return _aec .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};func _degd (_cgddg _aec .PdfObject )(*PdfColorspaceLab ,error ){_cbfc :=NewPdfColorspaceLab ();if _bfeg ,_bgfc :=_cgddg .(*_aec .PdfIndirectObject );_bgfc {_cbfc ._ebffe =_bfeg ;};_cgddg =_aec .TraceToDirectObject (_cgddg );_gcaf ,_ecab :=_cgddg .(*_aec .PdfObjectArray );if !_ecab {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gcaf .Len ()!=2{return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_cgddg =_aec .TraceToDirectObject (_gcaf .Get (0));_ecgdc ,_ecab :=_cgddg .(*_aec .PdfObjectName );if !_ecab {return nil ,_g .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_ecgdc !="\u004c\u0061\u0062"{return nil ,_g .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_cgddg =_aec .TraceToDirectObject (_gcaf .Get (1));_bdcaa ,_ecab :=_cgddg .(*_aec .PdfObjectDictionary );if !_ecab {return nil ,_g .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_cgddg =_bdcaa .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cgddg =_aec .TraceToDirectObject (_cgddg );_aggb ,_ecab :=_cgddg .(*_aec .PdfObjectArray );if !_ecab {return nil ,_g .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _aggb .Len ()!=3{return nil ,_g .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_bdfeb ,_gbea :=_aggb .GetAsFloat64Slice ();if _gbea !=nil {return nil ,_gbea ;};_cbfc .WhitePoint =_bdfeb ;_cgddg =_bdcaa .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cgddg !=nil {_cgddg =_aec .TraceToDirectObject (_cgddg );_gacaa ,_dcgd :=_cgddg .(*_aec .PdfObjectArray );if !_dcgd {return nil ,_g .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _gacaa .Len ()!=3{return nil ,_g .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_fgdf ,_baef :=_gacaa .GetAsFloat64Slice ();if _baef !=nil {return nil ,_baef ;};_cbfc .BlackPoint =_fgdf ;};_cgddg =_bdcaa .Get ("\u0052\u0061\u006eg\u0065");if _cgddg !=nil {_cgddg =_aec .TraceToDirectObject (_cgddg );_ddbfb ,_fbef :=_cgddg .(*_aec .PdfObjectArray );if !_fbef {_de .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_g .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ddbfb .Len ()!=4{_de .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");return nil ,_g .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_cgec ,_bafd :=_ddbfb .GetAsFloat64Slice ();if _bafd !=nil {return nil ,_bafd ;};_cbfc .Range =_cgec ;};return _cbfc ,nil ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_afaf *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_aec .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_ed .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");};_gfgca :=&PdfColorPattern {};_dfbc ,_baefe :=objects [len (objects )-1].(*_aec .PdfObjectName );if !_baefe {_de .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);return nil ,ErrTypeCheck ;};_gfgca .PatternName =*_dfbc ;if len (objects )> 1{_cdgc :=objects [0:len (objects )-1];if _afaf .UnderlyingCS ==nil {_de .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");return nil ,_ed .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_fcbc ,_eecf :=_afaf .UnderlyingCS .ColorFromPdfObjects (_cdgc );if _eecf !=nil {_de .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_eecf );return nil ,_eecf ;};_gfgca .Color =_fcbc ;};return _gfgca ,nil ;};func _fggcd ()string {_aecee .Lock ();defer _aecee .Unlock ();_gbbdc :=_dce .GetLicenseKey ();if len (_fagad )> 0&&(_gbbdc .IsLicensed ()||_dggdb ){return _fagad ;};return _g .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_dddad (),_gbbdc .TypeToString ());};func (_dfdca *PdfReader )newPdfAnnotationTextFromDict (_afcc *_aec .PdfObjectDictionary )(*PdfAnnotationText ,error ){_fce :=PdfAnnotationText {};_gea ,_daec :=_dfdca .newPdfAnnotationMarkupFromDict (_afcc );if _daec !=nil {return nil ,_daec ;};_fce .PdfAnnotationMarkup =_gea ;_fce .Open =_afcc .Get ("\u004f\u0070\u0065\u006e");_fce .Name =_afcc .Get ("\u004e\u0061\u006d\u0065");_fce .State =_afcc .Get ("\u0053\u0074\u0061t\u0065");_fce .StateModel =_afcc .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_fce ,nil ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_beagd *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_beagd ._cfbaf =colorspace ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_debge *PdfOutlineItem )ToPdfObject ()_aec .PdfObject {_cebff :=_debge ._bdgd ;_gafd :=_cebff .PdfObject .(*_aec .PdfObjectDictionary );_gafd .Set ("\u0054\u0069\u0074l\u0065",_debge .Title );if _debge .A !=nil {_gafd .Set ("\u0041",_debge .A );};if _gggca :=_gafd .Get ("\u0053\u0045");_gggca !=nil {_gafd .Remove ("\u0053\u0045");};if _debge .C !=nil {_gafd .Set ("\u0043",_debge .C );};if _debge .Dest !=nil {_gafd .Set ("\u0044\u0065\u0073\u0074",_debge .Dest );};if _debge .F !=nil {_gafd .Set ("\u0046",_debge .F );};if _debge .Count !=nil {_gafd .Set ("\u0043\u006f\u0075n\u0074",_aec .MakeInteger (*_debge .Count ));};if _debge .Next !=nil {_gafd .Set ("\u004e\u0065\u0078\u0074",_debge .Next .ToPdfObject ());};if _debge .First !=nil {_gafd .Set ("\u0046\u0069\u0072s\u0074",_debge .First .ToPdfObject ());};if _debge .Prev !=nil {_gafd .Set ("\u0050\u0072\u0065\u0076",_debge .Prev .GetContext ().GetContainingPdfObject ());};if _debge .Last !=nil {_gafd .Set ("\u004c\u0061\u0073\u0074",_debge .Last .GetContext ().GetContainingPdfObject ());};if _debge .Parent !=nil {_gafd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_debge .Parent .GetContext ().GetContainingPdfObject ());};return _cebff ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_gaga pdfFont };

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_fae :=NewPdfAnnotation ();_aaa :=&PdfAnnotationWidget {};_aaa .PdfAnnotation =_fae ;_fae .SetContext (_aaa );return _aaa ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_aceb *LTV )EnableChain (chain []*_ad .Certificate )error {return _aceb .enable (nil ,chain ,"")};func (_bebg *pdfFontSimple )getFontEncoding ()(_fcgdb string ,_gccbg map[_cad .CharCode ]_cad .GlyphName ,_fdcfa error ){_fcgdb ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _effbc ,_efdge :=_aeccf [_bebg ._ecbb ];_efdge {_fcgdb =_effbc ;}else if _bebg .fontFlags ()&_fdce !=0{for _ggbcd ,_cgbg :=range _aeccf {if _ee .Contains (_bebg ._ecbb ,_ggbcd ){_fcgdb =_cgbg ;break ;};};};if _bebg .Encoding ==nil {return _fcgdb ,nil ,nil ;};switch _cabe :=_bebg .Encoding .(type ){case *_aec .PdfObjectName :return string (*_cabe ),nil ,nil ;case *_aec .PdfObjectDictionary :_aebb ,_beacf :=_aec .GetName (_cabe .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _beacf {_fcgdb =_aebb .String ();};if _abgd :=_cabe .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_abgd !=nil {_efcb ,_cbca :=_aec .GetArray (_abgd );if !_cbca {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_cabe ,_cabe .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));return "",nil ,_aec .ErrTypeError ;};_gccbg ,_fdcfa =_cad .FromFontDifferences (_efcb );};return _fcgdb ,_gccbg ,_fdcfa ;default:_de .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_bebg .Encoding ,_bebg .Encoding );return "",nil ,_aec .ErrTypeError ;};};func (_ccdb *PdfReader )loadStructure ()error {if _ccdb ._adecd .GetCrypter ()!=nil &&!_ccdb ._adecd .IsAuthenticated (){return _g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_bbdba :=_ccdb ._adecd .GetTrailer ();if _bbdba ==nil {return _g .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_fbagf ,_ecgab :=_bbdba .Get ("\u0052\u006f\u006f\u0074").(*_aec .PdfObjectReference );if !_ecgab {return _g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_bbdba );};_cgdc ,_aeaae :=_ccdb ._adecd .LookupByReference (*_fbagf );if _aeaae !=nil {_de .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_aeaae );return _aeaae ;};_bbgbb ,_ecgab :=_cgdc .(*_aec .PdfIndirectObject );if !_ecgab {_de .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_cgdc ,*_bbdba );return _ed .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_cadgf ,_ecgab :=(*_bbgbb ).PdfObject .(*_aec .PdfObjectDictionary );if !_ecgab {_de .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_bbgbb .PdfObject );return _ed .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_de .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_cadgf );_efcg ,_ecgab :=_cadgf .Get ("\u0050\u0061\u0067e\u0073").(*_aec .PdfObjectReference );if !_ecgab {return _ed .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_fbcca ,_aeaae :=_ccdb ._adecd .LookupByReference (*_efcg );if _aeaae !=nil {_de .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _aeaae ;};_addf ,_ecgab :=_fbcca .(*_aec .PdfIndirectObject );if !_ecgab {_de .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");_de .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_addf );return _ed .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_fgcef ,_ecgab :=_addf .PdfObject .(*_aec .PdfObjectDictionary );if !_ecgab {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_addf );return _ed .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_cadde ,_ecgab :=_aec .GetInt (_fgcef .Get ("\u0043\u006f\u0075n\u0074"));if !_ecgab {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return _ed .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_ecgab =_aec .GetName (_fgcef .Get ("\u0054\u0079\u0070\u0065"));!_ecgab {_de .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");_fgcef .Set ("\u0054\u0079\u0070\u0065",_aec .MakeName ("\u0050\u0061\u0067e\u0073"));};_ccdb ._acga =_fbagf ;_ccdb ._cded =_cadgf ;_ccdb ._ggdgda =_fgcef ;_ccdb ._afgda =_addf ;_ccdb ._ceeea =int (*_cadde );_ccdb ._daffa =[]*_aec .PdfIndirectObject {};_agfdb :=map[_aec .PdfObject ]struct{}{};_aeaae =_ccdb .buildPageList (_addf ,nil ,_agfdb );if _aeaae !=nil {return _aeaae ;};_de .Log .Trace ("\u002d\u002d\u002d");_de .Log .Trace ("\u0054\u004f\u0043");_de .Log .Trace ("\u0050\u0061\u0067e\u0073");_de .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_ccdb ._daffa ),_ccdb ._daffa );_ccdb ._afaea ,_aeaae =_ccdb .loadOutlines ();if _aeaae !=nil {_de .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_aeaae );return _aeaae ;};_ccdb .AcroForm ,_aeaae =_ccdb .loadForms ();if _aeaae !=nil {return _aeaae ;};_ccdb .DSS ,_aeaae =_ccdb .loadDSS ();if _aeaae !=nil {return _aeaae ;};return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_afff *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_afff .Base .GetNumComponents ();_dbba :=int (vals [0])*N ;if _dbba < 0||(_dbba +N -1)>=len (_afff ._cebf ){return nil ,_ed .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_cgdb :=_afff ._cebf [_dbba :_dbba +N ];var _cfaf []float64 ;for _ ,_babf :=range _cgdb {_cfaf =append (_cfaf ,float64 (_babf )/255.0);};_cbgf ,_dadea :=_afff .Base .ColorFromFloats (_cfaf );if _dadea !=nil {return nil ,_dadea ;};return _cbgf ,nil ;};

// SetFlag sets the flag for the field.
func (_dgdg *PdfField )SetFlag (flag FieldFlag ){_dgdg .Ff =_aec .MakeInteger (int64 (flag ))};func (_gcg *PdfReader )newPdfActionSubmitFormFromDict (_ddg *_aec .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_eaae ,_cgb :=_ccfd (_ddg .Get ("\u0046"));if _cgb !=nil {return nil ,_cgb ;};return &PdfActionSubmitForm {F :_eaae ,Fields :_ddg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_ddg .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// ToPdfObject implements interface PdfModel.
func (_fgd *PdfAnnotationSquiggly )ToPdfObject ()_aec .PdfObject {_fgd .PdfAnnotation .ToPdfObject ();_babc :=_fgd ._bcce ;_fda :=_babc .PdfObject .(*_aec .PdfObjectDictionary );_fgd .PdfAnnotationMarkup .appendToPdfDictionary (_fda );_fda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));_fda .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fgd .QuadPoints );return _babc ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _aec .PdfObject ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_eeagb *_aec .PdfIndirectObject ;};func _dbffe (_badeb *_aec .PdfObjectDictionary )(*PdfShadingType3 ,error ){_daga :=PdfShadingType3 {};_fbgfd :=_badeb .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _fbgfd ==nil {_de .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;};_aebab ,_bbcc :=_fbgfd .(*_aec .PdfObjectArray );if !_bbcc {_de .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fbgfd );return nil ,_aec .ErrTypeError ;};if _aebab .Len ()!=6{_de .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_aebab .Len ());return nil ,ErrInvalidAttribute ;};_daga .Coords =_aebab ;if _eccda :=_badeb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_eccda !=nil {_eccda =_aec .TraceToDirectObject (_eccda );_gecdc ,_bbfca :=_eccda .(*_aec .PdfObjectArray );if !_bbfca {_de .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eccda );return nil ,_aec .ErrTypeError ;};_daga .Domain =_gecdc ;};_fbgfd =_badeb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fbgfd ==nil {_de .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_daga .Function =[]PdfFunction {};if _ffafd ,_afab :=_fbgfd .(*_aec .PdfObjectArray );_afab {for _ ,_cfbcd :=range _ffafd .Elements (){_gfega ,_eeeaf :=_cgefb (_cfbcd );if _eeeaf !=nil {_de .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eeeaf );return nil ,_eeeaf ;};_daga .Function =append (_daga .Function ,_gfega );};}else {_dfeg ,_cbccd :=_cgefb (_fbgfd );if _cbccd !=nil {_de .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cbccd );return nil ,_cbccd ;};_daga .Function =append (_daga .Function ,_dfeg );};if _bffec :=_badeb .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_bffec !=nil {_bffec =_aec .TraceToDirectObject (_bffec );_dggf ,_dffff :=_bffec .(*_aec .PdfObjectArray );if !_dffff {_de .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bffec );return nil ,_aec .ErrTypeError ;};if _dggf .Len ()!=2{_de .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dggf .Len ());return nil ,ErrInvalidAttribute ;};_daga .Extend =_dggf ;};return &_daga ,nil ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _aec .PdfObject )(PdfColorspace ,error ){var _agcbd *_aec .PdfIndirectObject ;var _ebge *_aec .PdfObjectName ;var _fbcb *_aec .PdfObjectArray ;if _gceda ,_fcdd :=obj .(*_aec .PdfIndirectObject );_fcdd {_agcbd =_gceda ;};obj =_aec .TraceToDirectObject (obj );switch _ega :=obj .(type ){case *_aec .PdfObjectArray :_fbcb =_ega ;case *_aec .PdfObjectName :_ebge =_ega ;};if _ebge !=nil {switch *_ebge {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;default:_de .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_ebge );return nil ,_becba ;};};if _fbcb !=nil &&_fbcb .Len ()> 0{var _aaba _aec .PdfObject =_agcbd ;if _agcbd ==nil {_aaba =_fbcb ;};if _efc ,_ffag :=_aec .GetName (_fbcb .Get (0));_ffag {switch _efc .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _fbcb .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _fbcb .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _fbcb .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _dbcc (_aaba );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _daea (_aaba );case "\u004c\u0061\u0062":return _degd (_aaba );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _aaaf (_aaba );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _gaef (_aaba );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _eabfg (_aaba );case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _bcbd (_aaba );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _aagcd (_aaba );default:_de .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_efc );};};};_de .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());return nil ,ErrTypeCheck ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_adecd *_aec .PdfParser ;_acga _aec .PdfObject ;_afgda *_aec .PdfIndirectObject ;_ggdgda *_aec .PdfObjectDictionary ;_daffa []*_aec .PdfIndirectObject ;PageList []*PdfPage ;_ceeea int ;_cded *_aec .PdfObjectDictionary ;_afaea *PdfOutlineTreeNode ;AcroForm *PdfAcroForm ;DSS *DSS ;_bgeab *modelManager ;_dfga bool ;_ddcbfa map[_aec .PdfObject ]struct{};_fcdf _fb .ReadSeeker ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_bdfc *PdfPage )GetContainingPdfObject ()_aec .PdfObject {return _bdfc ._aggfc };

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_abgfc *PdfWriter )AddPage (page *PdfPage )error {_gdcgc (page );_abdd :=page .ToPdfObject ();_de .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");_de .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_abdd );_fecga ,_aabac :=_aec .GetIndirect (_abdd );if !_aabac {return _ed .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");};_de .Log .Trace ("\u0025\u0073",_fecga );_de .Log .Trace ("\u0025\u0073",_fecga .PdfObject );_bcgab ,_aabac :=_aec .GetDict (_fecga .PdfObject );if !_aabac {return _ed .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_ddbgd ,_aabac :=_aec .GetName (_bcgab .Get ("\u0054\u0079\u0070\u0065"));if !_aabac {return _g .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_bcgab .Get ("\u0054\u0079\u0070\u0065"));};if _ddbgd .String ()!="\u0050\u0061\u0067\u0065"{return _ed .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_gbegf :=[]_aec .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};_gbcde ,_cggbdb :=_aec .GetIndirect (_bcgab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_de .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_bcgab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_cggbdb );for _cggbdb {_de .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gbcde );_aeca ,_fabbg :=_aec .GetDict (_gbcde .PdfObject );if !_fabbg {return _ed .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_agbd :=range _gbegf {_de .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_agbd );if _bcgab .Get (_agbd )!=nil {_de .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _egfde :=_aeca .Get (_agbd );_egfde !=nil {_de .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_agbd );_bcgab .Set (_agbd ,_egfde );};};_gbcde ,_cggbdb =_aec .GetIndirect (_aeca .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_de .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_aeca .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_de .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");_bcgab .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_abgfc ._beca );_fecga .PdfObject =_bcgab ;_bfed ,_aabac :=_aec .GetDict (_abgfc ._beca .PdfObject );if !_aabac {return _ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_cbfad ,_aabac :=_aec .GetArray (_bfed .Get ("\u004b\u0069\u0064\u0073"));if !_aabac {return _ed .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_cbfad .Append (_fecga );_abgfc ._dgee [_bcgab ]=struct{}{};_bffd ,_aabac :=_aec .GetInt (_bfed .Get ("\u0043\u006f\u0075n\u0074"));if !_aabac {return _ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};*_bffd =*_bffd +1;_abgfc .addObject (_fecga );_bccbc :=_abgfc .addObjects (_bcgab );if _bccbc !=nil {return _bccbc ;};return nil ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _aec .PdfObject ;IC _aec .PdfObject ;BE _aec .PdfObject ;RD _aec .PdfObject ;};func (_bbddf *PdfReader )loadAnnotations (_begfd _aec .PdfObject )([]*PdfAnnotation ,error ){_ddfc ,_befbg :=_aec .GetArray (_begfd );if !_befbg {return nil ,_g .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _abfge []*PdfAnnotation ;for _ ,_aagad :=range _ddfc .Elements (){_aagad =_aec .ResolveReference (_aagad );if _ ,_aeeegg :=_aagad .(*_aec .PdfObjectNull );_aeeegg {continue ;};_bbdec ,_dgfbd :=_aagad .(*_aec .PdfObjectDictionary );_ccbe ,_fbbacd :=_aagad .(*_aec .PdfIndirectObject );if _dgfbd {_ccbe =&_aec .PdfIndirectObject {};_ccbe .PdfObject =_bbdec ;}else {if !_fbbacd {return nil ,_g .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");};};_agdb ,_abggf :=_bbddf .newPdfAnnotationFromIndirectObject (_ccbe );if _abggf !=nil {return nil ,_abggf ;};switch _adbfd :=_agdb .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_dfdbg :=range _bbddf .AcroForm .AllFields (){if _dfdbg ._cfaef ==_adbfd .Parent {_adbfd ._ebff =_dfdbg ;break ;};};};if _agdb !=nil {_abfge =append (_abfge ,_agdb );};};return _abfge ,nil ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _aec .PdfObject ;BS _aec .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_aecd *PdfColorspaceDeviceCMYK )ToPdfObject ()_aec .PdfObject {return _aec .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _aec .PdfObject )(_aec .PdfObjectName ,error ){var _gbf *_aec .PdfObjectName ;var _fcfb *_aec .PdfObjectArray ;if _afef ,_fdff :=obj .(*_aec .PdfIndirectObject );_fdff {if _adfcb ,_deed :=_afef .PdfObject .(*_aec .PdfObjectArray );_deed {_fcfb =_adfcb ;}else if _bdfbc ,_cece :=_afef .PdfObject .(*_aec .PdfObjectName );_cece {_gbf =_bdfbc ;};}else if _bfae ,_fgcdg :=obj .(*_aec .PdfObjectArray );_fgcdg {_fcfb =_bfae ;}else if _fbdb ,_fdaad :=obj .(*_aec .PdfObjectName );_fdaad {_gbf =_fbdb ;};if _gbf !=nil {switch *_gbf {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_gbf ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_gbf ,nil ;};};if _fcfb !=nil &&_fcfb .Len ()> 0{if _aedd ,_cbbb :=_fcfb .Get (0).(*_aec .PdfObjectName );_cbbb {switch *_aedd {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _fcfb .Len ()==1{return *_aedd ,nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_aedd ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_aedd ,nil ;case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_aedd ,nil ;};};};return "",nil ;};

// A returns the value of the A component of the color.
func (_cgcdd *PdfColorLab )A ()float64 {return _cgcdd [1]};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _aec .PdfObject ;MK _aec .PdfObject ;A _aec .PdfObject ;AA _aec .PdfObject ;BS _aec .PdfObject ;Parent _aec .PdfObject ;_ebff *PdfField ;_baf bool ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_acda *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func (_fgg *PdfReader )newPdfActionGotoEFromDict (_fcfg *_aec .PdfObjectDictionary )(*PdfActionGoToE ,error ){_gdg ,_ggb :=_ccfd (_fcfg .Get ("\u0046"));if _ggb !=nil {return nil ,_ggb ;};return &PdfActionGoToE {D :_fcfg .Get ("\u0044"),NewWindow :_fcfg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_fcfg .Get ("\u0054"),F :_gdg },nil ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_ggcfe *PdfReader )GetIndirectObjectByNumber (number int )(_aec .PdfObject ,error ){_agdgf ,_bddga :=_ggcfe ._adecd .LookupByNumber (number );return _agdgf ,_bddga ;};func (_cccda *PdfShading )getShadingDict ()(*_aec .PdfObjectDictionary ,error ){_ffbeb :=_cccda ._cecd ;if _eaege ,_bdffcb :=_ffbeb .(*_aec .PdfIndirectObject );_bdffcb {_fbefa ,_efcbg :=_eaege .PdfObject .(*_aec .PdfObjectDictionary );if !_efcbg {return nil ,_aec .ErrTypeError ;};return _fbefa ,nil ;}else if _gabe ,_cfeb :=_ffbeb .(*_aec .PdfObjectStream );_cfeb {return _gabe .PdfObjectDictionary ,nil ;}else if _fgdfb ,_gbad :=_ffbeb .(*_aec .PdfObjectDictionary );_gbad {return _fgdfb ,nil ;}else {_de .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_aec .ErrTypeError ;};};func _cfgf (_bcgc *_aec .PdfObjectDictionary )bool {for _ ,_dgffg :=range _bcgc .Keys (){if _ ,_baca :=_fegfd [_dgffg .String ()];_baca {return true ;};};return false ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_adab *PdfFont )ToPdfObject ()_aec .PdfObject {if _adab ._gaga ==nil {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _aec .MakeNull ();};return _adab ._gaga .ToPdfObject ();};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_ebffe *_aec .PdfIndirectObject ;};func (_ebae *PdfAnnotation )String ()string {_deg :="";_ggeb ,_fcb :=_ebae .ToPdfObject ().(*_aec .PdfIndirectObject );if _fcb {_deg =_g .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ebae ._debf ,_ggeb .PdfObject .String ());};return _deg ;};func _bccce (_agccbb []*_aec .PdfObjectStream )*_aec .PdfObjectArray {if len (_agccbb )==0{return nil ;};_bddaa :=make ([]_aec .PdfObject ,0,len (_agccbb ));for _ ,_edga :=range _agccbb {_bddaa =append (_bddaa ,_edga );};return _aec .MakeArray (_bddaa ...);};func _geeba (_edbeg _aec .PdfObject )(*PdfFunctionType3 ,error ){_aeaf :=&PdfFunctionType3 {};var _bagegb *_aec .PdfObjectDictionary ;if _caff ,_fdef :=_edbeg .(*_aec .PdfIndirectObject );_fdef {_febb ,_ebee :=_caff .PdfObject .(*_aec .PdfObjectDictionary );if !_ebee {return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aeaf ._cbfg =_caff ;_bagegb =_febb ;}else if _eaage ,_egdg :=_edbeg .(*_aec .PdfObjectDictionary );_egdg {_bagegb =_eaage ;}else {return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ecff ,_eaadf :=_aec .TraceToDirectObject (_bagegb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_aec .PdfObjectArray );if !_eaadf {_de .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _ecff .Len ()!=2{_de .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ed .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_febbg ,_bfdac :=_ecff .ToFloat64Array ();if _bfdac !=nil {return nil ,_bfdac ;};_aeaf .Domain =_febbg ;_ecff ,_eaadf =_aec .TraceToDirectObject (_bagegb .Get ("\u0052\u0061\u006eg\u0065")).(*_aec .PdfObjectArray );if _eaadf {if _ecff .Len ()< 0||_ecff .Len ()%2!=0{return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_adaff ,_gdgdb :=_ecff .ToFloat64Array ();if _gdgdb !=nil {return nil ,_gdgdb ;};_aeaf .Range =_adaff ;};_ecff ,_eaadf =_aec .TraceToDirectObject (_bagegb .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_aec .PdfObjectArray );if !_eaadf {_de .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_aeaf .Functions =[]PdfFunction {};for _ ,_dfeff :=range _ecff .Elements (){_edfa ,_dbbfd :=_cgefb (_dfeff );if _dbbfd !=nil {return nil ,_dbbfd ;};_aeaf .Functions =append (_aeaf .Functions ,_edfa );};_ecff ,_eaadf =_aec .TraceToDirectObject (_bagegb .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_aec .PdfObjectArray );if !_eaadf {_de .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_dgga ,_bfdac :=_ecff .ToFloat64Array ();if _bfdac !=nil {return nil ,_bfdac ;};_aeaf .Bounds =_dgga ;if len (_aeaf .Bounds )!=len (_aeaf .Functions )-1{_de .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_aeaf .Bounds ),len (_aeaf .Functions ));return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecff ,_eaadf =_aec .TraceToDirectObject (_bagegb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_aec .PdfObjectArray );if !_eaadf {_de .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_aafae ,_bfdac :=_ecff .ToFloat64Array ();if _bfdac !=nil {return nil ,_bfdac ;};_aeaf .Encode =_aafae ;if len (_aeaf .Encode )!=2*len (_aeaf .Functions ){_de .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_aeaf .Encode ),len (_aeaf .Functions ));return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _aeaf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gee *PdfAnnotationSquare )ToPdfObject ()_aec .PdfObject {_gee .PdfAnnotation .ToPdfObject ();_aca :=_gee ._bcce ;_bcda :=_aca .PdfObject .(*_aec .PdfObjectDictionary );if _gee .PdfAnnotationMarkup !=nil {_gee .PdfAnnotationMarkup .appendToPdfDictionary (_bcda );};_bcda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_bcda .SetIfNotNil ("\u0042\u0053",_gee .BS );_bcda .SetIfNotNil ("\u0049\u0043",_gee .IC );_bcda .SetIfNotNil ("\u0042\u0045",_gee .BE );_bcda .SetIfNotNil ("\u0052\u0044",_gee .RD );return _aca ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_dffa *PdfPageResources )GetXObjectImageByName (keyName _aec .PdfObjectName )(*XObjectImage ,error ){_eebgc ,_ffbaa :=_dffa .GetXObjectByName (keyName );if _eebgc ==nil {return nil ,nil ;};if _ffbaa !=XObjectTypeImage {return nil ,_ed .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");};_ddca ,_fcaa :=NewXObjectImageFromStream (_eebgc );if _fcaa !=nil {return nil ,_fcaa ;};return _ddca ,nil ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_ggac *PdfField )SetContext (ctx PdfModel ){_ggac ._ccegg =ctx };

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_dcbf FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_dcbf .Mask ()|fl .Mask ())};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_geg :=NewPdfAnnotation ();_aebge :=&PdfAnnotationLine {};_aebge .PdfAnnotation =_geg ;_aebge .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_geg .SetContext (_aebge );return _aebge ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _aec .PdfObject ;PreserveRB _aec .PdfObject ;};

// SetContext set the sub annotation (context).
func (_dcdf *PdfShading )SetContext (ctx PdfModel ){_dcdf ._bfdgf =ctx };

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_cfg :=NewPdfAnnotation ();_cfde :=&PdfAnnotationSquare {};_cfde .PdfAnnotation =_cfg ;_cfde .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cfg .SetContext (_cfde );return _cfde ;};type pdfCIDFontType2 struct{fontCommon ;_cecc *_aec .PdfIndirectObject ;_dcea _cad .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_aec .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _aec .PdfObject ;W _aec .PdfObject ;DW2 _aec .PdfObject ;W2 _aec .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _aec .PdfObject ;_effeg map[_cad .CharCode ]float64 ;_dacfb float64 ;_ffgec map[rune ]int ;};func _fgdga (_adgac _aec .PdfObject ,_eccga bool )(*PdfFont ,error ){_ceeeg ,_bcbb ,_fcfff :=_effgd (_adgac );if _fcfff !=nil {if _fcfff ==ErrType3FontNotSupported ||_fcfff ==ErrType1CFontNotSupported {_ceag ,_eabbb :=_bdeec (_ceeeg ,_bcbb ,nil );if _eabbb !=nil {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_bcbb ,_eabbb );return nil ,_fcfff ;};return &PdfFont {_gaga :_ceag },_fcfff ;};return nil ,_fcfff ;};_cgeee :=&PdfFont {};switch _bcbb ._daed {case "\u0054\u0079\u0070e\u0030":if !_eccga {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bcbb );return nil ,_ed .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_fdgbg ,_ccgae :=_eada (_ceeeg ,_bcbb );if _ccgae !=nil {_de .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bcbb ,_ccgae );return nil ,_ccgae ;};_cgeee ._gaga =_fdgbg ;case "\u0054\u0079\u0070e\u0031","\u0054\u0079\u0070e\u0033","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _ebage *pdfFontSimple ;_fabd ,_aeccb :=_ge .NewStdFontByName (_ge .StdFontName (_bcbb ._ecbb ));if _aeccb {_cbadf :=_bedbc (_fabd );_cgeee ._gaga =&_cbadf ;_dfad :=_aec .TraceToDirectObject (_cbadf .ToPdfObject ());_bgce ,_gabc ,_bcccb :=_effgd (_dfad );if _bcccb !=nil {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_bcbb ,_cbadf );return nil ,_bcccb ;};for _ ,_abeac :=range _ceeeg .Keys (){_bgce .Set (_abeac ,_ceeeg .Get (_abeac ));};_ebage ,_bcccb =_bdeec (_bgce ,_gabc ,_cbadf ._gfeg );if _bcccb !=nil {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_bcbb ,_cbadf );return nil ,_bcccb ;};_ebage ._gcda =_cbadf ._gcda ;_ebage ._bgcg =_cbadf ._bgcg ;}else {_ebage ,_fcfff =_bdeec (_ceeeg ,_bcbb ,nil );if _fcfff !=nil {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_bcbb ,_fcfff );return nil ,_fcfff ;};};_fcfff =_ebage .addEncoding ();if _fcfff !=nil {return nil ,_fcfff ;};if _aeccb {_ebage .updateStandard14Font ();};if _aeccb &&_ebage ._bfdb ==nil &&_ebage ._gfeg ==nil {_de .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ebage );_de .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_fabd );};if len (_ebage ._gcda )==0{_de .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_ebage );};_cgeee ._gaga =_ebage ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_ddac ,_gefdd :=_becc (_ceeeg ,_bcbb );if _gefdd !=nil {_de .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_gefdd );return nil ,_gefdd ;};_cgeee ._gaga =_ddac ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_cbbc ,_baacg :=_ebdfb (_ceeeg ,_bcbb );if _baacg !=nil {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bcbb ,_baacg );return nil ,_baacg ;};_cgeee ._gaga =_cbbc ;default:_de .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_bcbb );return nil ,_g .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bcbb );};return _cgeee ,nil ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_ddgc :=NewPdfAnnotation ();_cegc :=&PdfAnnotationSquiggly {};_cegc .PdfAnnotation =_ddgc ;_cegc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ddgc .SetContext (_cegc );return _cegc ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_ccgag *_aec .PdfIndirectObject ;};func (_begge *PdfPage )getParentResources ()(*PdfPageResources ,error ){_ebed :=_begge .Parent ;for _ebed !=nil {_gbfe ,_cdgg :=_aec .GetDict (_ebed );if !_cdgg {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_ed .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _agga :=_gbfe .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_agga !=nil {_dcag ,_gdcb :=_aec .GetDict (_agga );if !_gdcb {return nil ,_ed .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_bdffc ,_gdea :=NewPdfPageResourcesFromDict (_dcag );if _gdea !=nil {return nil ,_gdea ;};return _bdffc ,nil ;};_ebed =_gbfe .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cb *PdfActionSubmitForm )ToPdfObject ()_aec .PdfObject {_cb .PdfAction .ToPdfObject ();_feb :=_cb ._gf ;_bebb :=_feb .PdfObject .(*_aec .PdfObjectDictionary );_bebb .SetIfNotNil ("\u0053",_aec .MakeName (string (ActionTypeSubmitForm )));if _cb .F !=nil {_bebb .Set ("\u0046",_cb .F .ToPdfObject ());};_bebb .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_cb .Fields );_bebb .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_cb .Flags );return _feb ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_egdf *PdfPageResources )GetPatternByName (keyName _aec .PdfObjectName )(*PdfPattern ,bool ){if _egdf .Pattern ==nil {return nil ,false ;};_egcfa ,_dgcag :=_aec .TraceToDirectObject (_egdf .Pattern ).(*_aec .PdfObjectDictionary );if !_dgcag {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_egdf .Pattern );return nil ,false ;};if _bfeed :=_egcfa .Get (keyName );_bfeed !=nil {_fbbcd ,_decb :=_baggb (_bfeed );if _decb !=nil {_de .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_decb );return nil ,false ;};return _fbbcd ,true ;};return nil ,false ;};func (_cdaa fontCommon )isCIDFont ()bool {if _cdaa ._daed ==""{_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cdaa );};_bfcf :=false ;switch _cdaa ._daed {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_bfcf =true ;};_de .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_bfcf ,_cdaa );return _bfcf ;};func (_ccgg *LTV )enable (_eeagc ,_bbdce []*_ad .Certificate ,_fgbad string )error {_cefb ,_cabb ,_fgefe :=_ccgg .buildCertChain (_eeagc ,_bbdce );if _fgefe !=nil {return _fgefe ;};_cfbc ,_fgefe :=_ccgg .getCerts (_cefb );if _fgefe !=nil {return _fgefe ;};_eegd ,_fgefe :=_ccgg .getOCSPs (_cefb ,_cabb );if _fgefe !=nil {return _fgefe ;};_eaafc ,_fgefe :=_ccgg .getCRLs (_cefb );if _fgefe !=nil {return _fgefe ;};_gabf :=_ccgg ._gbda ;_bcdcb ,_fgefe :=_gabf .addCerts (_cfbc );if _fgefe !=nil {return _fgefe ;};_fbeg ,_fgefe :=_gabf .addOCSPs (_eegd );if _fgefe !=nil {return _fgefe ;};_eggeg ,_fgefe :=_gabf .addCRLs (_eaafc );if _fgefe !=nil {return _fgefe ;};if _fgbad !=""{_gabf .VRI [_fgbad ]=&VRI {Cert :_bcdcb ,OCSP :_fbeg ,CRL :_eggeg };};_ccgg ._bgeba .SetDSS (_gabf );return nil ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_aacf *OutlineItem )Insert (index uint ,item *OutlineItem ){_cbccgg :=uint (len (_aacf .Entries ));if index > _cbccgg {index =_cbccgg ;};_aacf .Entries =append (_aacf .Entries [:index ],append ([]*OutlineItem {item },_aacf .Entries [index :]...)...);};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););func (_aaada *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _aaada ._dabc ==nil &&_aaada .DescendantFont !=nil {return _aaada .DescendantFont .FontDescriptor ();};return _aaada ._dabc ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_beeff pdfFontType0 )GetCharMetrics (code _cad .CharCode )(_ge .CharMetrics ,bool ){if _beeff .DescendantFont ==nil {_de .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_beeff );return _ge .CharMetrics {},false ;};return _beeff .DescendantFont .GetCharMetrics (code );};func (_gbfd *Image )samplesAddPadding (_begg []uint32 )[]uint32 {_efba :=_be .BytesPerLine (int (_gbfd .Width ),int (_gbfd .BitsPerComponent ),_gbfd .ColorComponents )*(8/int (_gbfd .BitsPerComponent ));_aaed :=_efba *int (_gbfd .Height );if len (_begg )==_aaed {return _begg ;};_egee :=make ([]uint32 ,_aaed );_affc :=int (_gbfd .Width )*_gbfd .ColorComponents ;for _eabfd :=0;_eabfd < int (_gbfd .Height );_eabfd ++{_cfge :=_eabfd *int (_gbfd .Width );_afgfg :=_eabfd *_efba ;for _begcf :=0;_begcf < _affc ;_begcf ++{_egee [_afgfg +_begcf ]=_begg [_cfge +_begcf ];};};return _egee ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _aec .PdfObject ;Mac _aec .PdfObject ;Unix _aec .PdfObject ;NewWindow _aec .PdfObject ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_ecec *PdfPage )GetAllContentStreams ()(string ,error ){_aedc ,_dffcb :=_ecec .GetContentStreams ();if _dffcb !=nil {return "",_dffcb ;};return _ee .Join (_aedc ,"\u0020"),nil ;};

// Write writes out the PDF.
func (_ccgeb *PdfWriter )Write (writer _fb .Writer )error {_de .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_ffgef :=_dce .GetLicenseKey ();if (_ffgef ==nil ||!_ffgef .IsLicensed ())&&!_dggdb {_g .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");_g .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");return _ed .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _ccgeb ._accb !=nil {_de .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_ccgeb ._accb );_dddfd :=_ccgeb ._accb .ToPdfObject ();_de .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_dddfd ,_dddfd ,_dddfd );_ccgeb ._beffcb .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_dddfd );_cfebd :=_ccgeb .addObjects (_dddfd );if _cfebd !=nil {return _cfebd ;};};if _ccgeb ._eacab !=nil {_de .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_abfab :=_ccgeb ._eacab .ToPdfObject ();_de .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_abfab );_ccgeb ._beffcb .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_abfab );_ceecg :=_ccgeb .addObjects (_abfab );if _ceecg !=nil {return _ceecg ;};};for _abdg ,_gbfcg :=range _ccgeb ._cddcc {if !_ccgeb .hasObject (_abdg ){_de .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_abdg ,_abdg ,_abdg );for _ ,_eceab :=range _gbfcg {for _ ,_cgcae :=range _eceab .Keys (){_aeegf :=_eceab .Get (_cgcae );if _aeegf ==_abdg {_de .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");_eceab .Set (_cgcae ,_aec .MakeNull ());break ;};};};};};_ccgeb ._beffcb .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_aec .MakeName (_g .Sprintf ("\u0025\u0064\u002e%\u0064",_ccgeb ._cfbcgf ,_ccgeb ._gcfdc )));_ccgeb .copyObjects ();if _ccgeb ._ggaae !=nil {var _dcdee error ;_ccgeb ._begcc ,_dcdee =_ccgeb ._ggaae .Optimize (_ccgeb ._begcc );if _dcdee !=nil {return _dcdee ;};_ddacd :=make (map[_aec .PdfObject ]struct{},len (_ccgeb ._begcc ));for _ ,_dbbcc :=range _ccgeb ._begcc {_ddacd [_dbbcc ]=struct{}{};};_ccgeb ._gbfef =_ddacd ;};_ccgeb ._fbbcb =_ccgeb ._dgfbe ;_ccgeb ._gdfdf =_bb .NewWriter (writer );_fcaeb :=_ccgeb ._cfbcgf > 1||(_ccgeb ._cfbcgf ==1&&_ccgeb ._gcfdc > 4);if _ccgeb ._cbgea !=nil {_fcaeb =*_ccgeb ._cbgea ;};_eeacb :=make (map[_aec .PdfObject ]bool );for _ ,_eaaa :=range _ccgeb ._begcc {if _beaac ,_fcbee :=_eaaa .(*_aec .PdfObjectStreams );_fcbee {_fcaeb =true ;for _ ,_aeaeb :=range _beaac .Elements (){_eeacb [_aeaeb ]=true ;if _egbdc ,_cacgf :=_aeaeb .(*_aec .PdfIndirectObject );_cacgf {_eeacb [_egbdc .PdfObject ]=true ;};};};};if _fcaeb &&_ccgeb ._cfbcgf ==1&&_ccgeb ._gcfdc < 5{_ccgeb ._gcfdc =5;};if _ccgeb ._cgcga {_ccgeb .writeString ("\u000a");}else {_ccgeb .writeString (_g .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_ccgeb ._cfbcgf ,_ccgeb ._gcfdc ));_ccgeb .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};_ccgeb .updateObjectNumbers ();_de .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_ccgeb ._begcc ));_ccgeb ._dabeb =make (map[int ]crossReference );_ccgeb ._dabeb [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _ccgeb ._abaac .ObjectMap !=nil {for _dbfb ,_fcfa :=range _ccgeb ._abaac .ObjectMap {if _dbfb ==0{continue ;};if _fcfa .XType ==_aec .XrefTypeObjectStream {_babge :=crossReference {Type :2,ObjectNumber :_fcfa .OsObjNumber ,Index :_fcfa .OsObjIndex };_ccgeb ._dabeb [_dbfb ]=_babge ;};if _fcfa .XType ==_aec .XrefTypeTableEntry {_deecc :=crossReference {Type :1,ObjectNumber :_fcfa .ObjectNumber ,Offset :_fcfa .Offset };_ccgeb ._dabeb [_dbfb ]=_deecc ;};};};for _ ,_fbbge :=range _ccgeb ._begcc {if _cgggd :=_eeacb [_fbbge ];_cgggd {continue ;};_gbbg :=int64 (0);switch _cadeb :=_fbbge .(type ){case *_aec .PdfIndirectObject :_gbbg =_cadeb .ObjectNumber ;case *_aec .PdfObjectStream :_gbbg =_cadeb .ObjectNumber ;case *_aec .PdfObjectStreams :_gbbg =_cadeb .ObjectNumber ;default:_de .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_fbbge );return ErrTypeCheck ;};if _ccgeb ._dfcfa !=nil &&_fbbge !=_ccgeb ._befce {_bbeeb :=_ccgeb ._dfcfa .Encrypt (_fbbge ,_gbbg ,0);if _bbeeb !=nil {_de .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_bbeeb );return _bbeeb ;};};_ccgeb .writeObject (int (_gbbg ),_fbbge );};_egdcga :=_ccgeb ._fbbcb ;var _bedaa int ;for _dfbbbb :=range _ccgeb ._dabeb {if _dfbbbb > _bedaa {_bedaa =_dfbbbb ;};};if _fcaeb {_edfba :=_bedaa +1;_ccgeb ._dabeb [_edfba ]=crossReference {Type :1,ObjectNumber :_edfba ,Offset :_egdcga };_eeeec :=_add .NewBuffer (nil );_aacaa :=_aec .MakeArray ();for _dbffeb :=0;_dbffeb <=_bedaa ;{for ;_dbffeb <=_bedaa ;_dbffeb ++{_ffabd ,_agdfa :=_ccgeb ._dabeb [_dbffeb ];if _agdfa &&(!_ccgeb ._cgcga ||_ccgeb ._cgcga &&(_ffabd .Type ==1&&_ffabd .Offset >=_ccgeb ._bbecb ||_ffabd .Type ==0)){break ;};};var _ccbbc int ;for _ccbbc =_dbffeb +1;_ccbbc <=_bedaa ;_ccbbc ++{_cbabf ,_abbg :=_ccgeb ._dabeb [_ccbbc ];if _abbg &&(!_ccgeb ._cgcga ||_ccgeb ._cgcga &&(_cbabf .Type ==1&&_cbabf .Offset > _ccgeb ._bbecb )){continue ;};break ;};_aacaa .Append (_aec .MakeInteger (int64 (_dbffeb )),_aec .MakeInteger (int64 (_ccbbc -_dbffeb )));for _dbaba :=_dbffeb ;_dbaba < _ccbbc ;_dbaba ++{_bffda :=_ccgeb ._dabeb [_dbaba ];switch _bffda .Type {case 0:_eb .Write (_eeeec ,_eb .BigEndian ,byte (0));_eb .Write (_eeeec ,_eb .BigEndian ,uint32 (0));_eb .Write (_eeeec ,_eb .BigEndian ,uint16 (0xFFFF));case 1:_eb .Write (_eeeec ,_eb .BigEndian ,byte (1));_eb .Write (_eeeec ,_eb .BigEndian ,uint32 (_bffda .Offset ));_eb .Write (_eeeec ,_eb .BigEndian ,uint16 (_bffda .Generation ));case 2:_eb .Write (_eeeec ,_eb .BigEndian ,byte (2));_eb .Write (_eeeec ,_eb .BigEndian ,uint32 (_bffda .ObjectNumber ));_eb .Write (_eeeec ,_eb .BigEndian ,uint16 (_bffda .Index ));};};_dbffeb =_ccbbc +1;};_dfegf ,_gcbgd :=_aec .MakeStream (_eeeec .Bytes (),_aec .NewFlateEncoder ());if _gcbgd !=nil {return _gcbgd ;};_dfegf .ObjectNumber =int64 (_edfba );_dfegf .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_aec .MakeName ("\u0058\u0052\u0065\u0066"));_dfegf .PdfObjectDictionary .Set ("\u0057",_aec .MakeArray (_aec .MakeInteger (1),_aec .MakeInteger (4),_aec .MakeInteger (2)));_dfegf .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_aacaa );_dfegf .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_aec .MakeInteger (int64 (_edfba +1)));_dfegf .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_ccgeb ._gcffc );_dfegf .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_ccgeb ._adgb );if _ccgeb ._cgcga &&_ccgeb ._cdeee > 0{_dfegf .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_aec .MakeInteger (_ccgeb ._cdeee ));};if _ccgeb ._dfcfa !=nil {_dfegf .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_ccgeb ._befce );_dfegf .Set ("\u0049\u0044",_ccgeb ._cbgee );_de .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_ccgeb ._cbgee );};_ccgeb .writeObject (int (_dfegf .ObjectNumber ),_dfegf );}else {_ccgeb .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _dggee :=0;_dggee <=_bedaa ;{for ;_dggee <=_bedaa ;_dggee ++{_cffge ,_aedcaa :=_ccgeb ._dabeb [_dggee ];if _aedcaa &&(!_ccgeb ._cgcga ||_ccgeb ._cgcga &&(_cffge .Type ==1&&_cffge .Offset >=_ccgeb ._bbecb ||_cffge .Type ==0)){break ;};};var _ebbfd int ;for _ebbfd =_dggee +1;_ebbfd <=_bedaa ;_ebbfd ++{_ffdda ,_aaafe :=_ccgeb ._dabeb [_ebbfd ];if _aaafe &&(!_ccgeb ._cgcga ||_ccgeb ._cgcga &&(_ffdda .Type ==1&&_ffdda .Offset > _ccgeb ._bbecb )){continue ;};break ;};_fbfd :=_g .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_dggee ,_ebbfd -_dggee );_ccgeb .writeString (_fbfd );for _gcfgab :=_dggee ;_gcfgab < _ebbfd ;_gcfgab ++{_bbed :=_ccgeb ._dabeb [_gcfgab ];switch _bbed .Type {case 0:_fbfd =_g .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_ccgeb .writeString (_fbfd );case 1:_fbfd =_g .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_bbed .Offset ,0);_ccgeb .writeString (_fbfd );};};_dggee =_ebbfd +1;};_gfecf :=_aec .MakeDict ();_gfecf .Set ("\u0049\u006e\u0066\u006f",_ccgeb ._gcffc );_gfecf .Set ("\u0052\u006f\u006f\u0074",_ccgeb ._adgb );_gfecf .Set ("\u0053\u0069\u007a\u0065",_aec .MakeInteger (int64 (_bedaa +1)));if _ccgeb ._cgcga &&_ccgeb ._cdeee > 0{_gfecf .Set ("\u0050\u0072\u0065\u0076",_aec .MakeInteger (_ccgeb ._cdeee ));};if _ccgeb ._dfcfa !=nil {_gfecf .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_ccgeb ._befce );_gfecf .Set ("\u0049\u0044",_ccgeb ._cbgee );_de .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_ccgeb ._cbgee );};_ccgeb .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_ccgeb .writeString (_gfecf .WriteString ());_ccgeb .writeString ("\u000a");};_egfe :=_g .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_egdcga );_ccgeb .writeString (_egfe );_ccgeb .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");if _ccgeb ._egcadc ==nil {_ccgeb ._egcadc =_ccgeb ._gdfdf .Flush ();};return _ccgeb ._egcadc ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_bga :=NewPdfAnnotation ();_fcba :=&PdfAnnotationMovie {};_fcba .PdfAnnotation =_bga ;_bga .SetContext (_fcba );return _fcba ;};

// String implements interface PdfObject.
func (_dad *PdfAction )String ()string {_ac ,_ea :=_dad .ToPdfObject ().(*_aec .PdfIndirectObject );if _ea {return _g .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_dad ._bbgc ,_ac .PdfObject .String ());};return "";};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_cad .SimpleEncoder ,error ){_afgc ,_dcd :=_cgaae (basefont );if _dcd !=nil {return nil ,nil ,_dcd ;};_eabcf ,_cabd :=_afgc .Encoder ().(_cad .SimpleEncoder );if !_cabd {return nil ,nil ,_g .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_afgc .Encoder ());};_afde :=make (map[rune ]_cad .GlyphName );for _fbceg :=range alphabet {if _ ,_agae :=_eabcf .RuneToCharcode (_fbceg );!_agae {_ ,_fbed :=_afgc ._bgcg [_fbceg ];if !_fbed {_de .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_fbceg ,_fbceg );continue ;};_beeg ,_fbed :=_cad .RuneToGlyph (_fbceg );if !_fbed {_de .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_fbceg ,_fbceg );continue ;};if len (_afde )>=255{return nil ,nil ,_ed .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");};_afde [_fbceg ]=_beeg ;};};var (_cbdg []_cad .CharCode ;_ddda []_cad .CharCode ;);for _bdcf :=_cad .CharCode (1);_bdcf <=0xff;_bdcf ++{_bced ,_fbgbe :=_eabcf .CharcodeToRune (_bdcf );if !_fbgbe {_cbdg =append (_cbdg ,_bdcf );continue ;};if _ ,_fbgbe =alphabet [_bced ];!_fbgbe {_ddda =append (_ddda ,_bdcf );};};_gagga :=append (_cbdg ,_ddda ...);if len (_gagga )< len (_afde ){return nil ,nil ,_g .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_afde ),len (_gagga ));};_eedfg :=make ([]rune ,0,len (_afde ));for _cfgg :=range _afde {_eedfg =append (_eedfg ,_cfgg );};_dd .Slice (_eedfg ,func (_ebaff ,_bfca int )bool {return _eedfg [_ebaff ]< _eedfg [_bfca ]});_adeg :=make (map[_cad .CharCode ]_cad .GlyphName ,len (_eedfg ));for _ ,_egggd :=range _eedfg {_cdbc :=_gagga [0];_gagga =_gagga [1:];_adeg [_cdbc ]=_afde [_egggd ];};_eabcf =_cad .ApplyDifferences (_eabcf ,_adeg );_afgc .SetEncoder (_eabcf );return &PdfFont {_gaga :&_afgc },_eabcf ,nil ;};func (_bfef *PdfReader )newPdfAnnotationStrikeOut (_ceea *_aec .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_fcd :=PdfAnnotationStrikeOut {};_acfb ,_ecac :=_bfef .newPdfAnnotationMarkupFromDict (_ceea );if _ecac !=nil {return nil ,_ecac ;};_fcd .PdfAnnotationMarkup =_acfb ;_fcd .QuadPoints =_ceea .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fcd ,nil ;};func (_aeddg *PdfWriter )copyObjects (){_gabcd :=make (map[_aec .PdfObject ]_aec .PdfObject );_dfgcbf :=make ([]_aec .PdfObject ,0,len (_aeddg ._begcc ));_fdcfc :=make (map[_aec .PdfObject ]struct{},len (_aeddg ._begcc ));_abgfg :=make (map[_aec .PdfObject ]struct{});for _ ,_eefba :=range _aeddg ._begcc {_dagcg :=_aeddg .copyObject (_eefba ,_gabcd ,_abgfg ,false );if _ ,_cbbgfa :=_abgfg [_eefba ];_cbbgfa {continue ;};_dfgcbf =append (_dfgcbf ,_dagcg );_fdcfc [_dagcg ]=struct{}{};};_aeddg ._begcc =_dfgcbf ;_aeddg ._gbfef =_fdcfc ;_aeddg ._gcffc =_aeddg .copyObject (_aeddg ._gcffc ,_gabcd ,nil ,false ).(*_aec .PdfIndirectObject );_aeddg ._adgb =_aeddg .copyObject (_aeddg ._adgb ,_gabcd ,nil ,false ).(*_aec .PdfIndirectObject );if _aeddg ._befce !=nil {_aeddg ._befce =_aeddg .copyObject (_aeddg ._befce ,_gabcd ,nil ,false ).(*_aec .PdfIndirectObject );};if _aeddg ._cgcga {_fdggd :=make (map[_aec .PdfObject ]int64 );for _cfdcc ,_aedfg :=range _aeddg ._gbcbf {if _fdead ,_cagbb :=_gabcd [_cfdcc ];_cagbb {_fdggd [_fdead ]=_aedfg ;}else {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");};};_aeddg ._gbcbf =_fdggd ;};};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_bddc *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_aec .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecfa ,_feda :=_aec .GetNumbersAsFloat (objects );if _feda !=nil {return nil ,_feda ;};return _bddc .ColorFromFloats (_ecfa );};

// ToPdfObject returns the PDF representation of the colorspace.
func (_beaf *PdfColorspaceDeviceRGB )ToPdfObject ()_aec .PdfObject {return _aec .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// ToPdfObject returns a PDF object representation of the outline item.
func (_afccc *OutlineItem )ToPdfObject ()_aec .PdfObject {_aadc ,_ :=_afccc .ToPdfOutlineItem ();return _aadc .ToPdfObject ();};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _aec .PdfObjectName ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_cffe *LTV )EnableAll (extraCerts []*_ad .Certificate )error {_gdaea :=_cffe ._bgeba ._aea .AcroForm ;for _ ,_cgada :=range _gdaea .AllFields (){_efefe ,_ :=_cgada .GetContext ().(*PdfFieldSignature );if _efefe ==nil {continue ;};_agbea :=_efefe .V ;if _cega :=_cffe .validateSig (_agbea );_cega !=nil {_de .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_cega );};if _egeee :=_cffe .Enable (_agbea ,extraCerts );_egeee !=nil {return _egeee ;};};return nil ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// GetContainingPdfObject implements interface PdfModel.
func (_caeg *PdfSignature )GetContainingPdfObject ()_aec .PdfObject {return _caeg ._ccggd };

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_gcfc *PdfRectangle )Normalize (){if _gcfc .Llx > _gcfc .Urx {_gcfc .Llx ,_gcfc .Urx =_gcfc .Urx ,_gcfc .Llx ;};if _gcfc .Lly > _gcfc .Ury {_gcfc .Lly ,_gcfc .Ury =_gcfc .Ury ,_gcfc .Lly ;};};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _aec .PdfObject ;ColorSpace _aec .PdfObject ;Pattern _aec .PdfObject ;Shading _aec .PdfObject ;XObject _aec .PdfObject ;Font _aec .PdfObject ;ProcSet _aec .PdfObject ;Properties _aec .PdfObject ;_cecb *_aec .PdfObjectDictionary ;_cfbaf *PdfPageResourcesColorspaces ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_cgab *Image )Resample (targetBitsPerComponent int64 ){if _cgab .BitsPerComponent ==targetBitsPerComponent {return ;};_efgdde :=_cgab .GetSamples ();if targetBitsPerComponent < _cgab .BitsPerComponent {_bfccb :=_cgab .BitsPerComponent -targetBitsPerComponent ;for _dgfbb :=range _efgdde {_efgdde [_dgfbb ]>>=uint (_bfccb );};}else if targetBitsPerComponent > _cgab .BitsPerComponent {_fbbda :=targetBitsPerComponent -_cgab .BitsPerComponent ;for _afgg :=range _efgdde {_efgdde [_afgg ]<<=uint (_fbbda );};};_cgab .BitsPerComponent =targetBitsPerComponent ;if _cgab .BitsPerComponent < 8{_cgab .resampleLowBits (_efgdde );return ;};_dedf :=_be .BytesPerLine (int (_cgab .Width ),int (_cgab .BitsPerComponent ),_cgab .ColorComponents );_fgafb :=make ([]byte ,_dedf *int (_cgab .Height ));var (_ggab ,_ddge ,_ddeef ,_babb int ;_gddff uint32 ;);for _ddeef =0;_ddeef < int (_cgab .Height );_ddeef ++{_ggab =_ddeef *_dedf ;_ddge =(_ddeef +1)*_dedf -1;_cdda :=_bdd .ResampleUint32 (_efgdde [_ggab :_ddge ],int (targetBitsPerComponent ),8);for _babb ,_gddff =range _cdda {_fgafb [_babb +_ggab ]=byte (_gddff );};};_cgab .Data =_fgafb ;};func (_cggbc *LTV )generateVRIKey (_ddgae *PdfSignature )(string ,error ){_fdga ,_edfad :=_cagcgd (_ddgae .Contents .Bytes ());if _edfad !=nil {return "",_edfad ;};return _ee .ToUpper (_a .EncodeToString (_fdga )),nil ;};func (_ceg *PdfReader )newPdfActionTransFromDict (_acbg *_aec .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_acbg .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _aec .PdfObject ;AN _aec .PdfObject ;OP _aec .PdfObject ;JS _aec .PdfObject ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_cdad *PdfColorspaceLab )DecodeArray ()[]float64 {_cbgdd :=[]float64 {0,100};if _cdad .Range !=nil &&len (_cdad .Range )==4{_cbgdd =append (_cbgdd ,_cdad .Range ...);}else {_cbgdd =append (_cbgdd ,-100,100,-100,100);};return _cbgdd ;};

// ToPdfObject implements interface PdfModel.
func (_bcfb *PdfAnnotationTrapNet )ToPdfObject ()_aec .PdfObject {_bcfb .PdfAnnotation .ToPdfObject ();_dcab :=_bcfb ._bcce ;_ebaa :=_dcab .PdfObject .(*_aec .PdfObjectDictionary );_ebaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));return _dcab ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_gggeg *PdfPageResources )GetContainingPdfObject ()_aec .PdfObject {return _gggeg ._cecb };

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_fggb *PdfFont )CharcodesToUnicode (charcodes []_cad .CharCode )[]rune {_cggf ,_ ,_ :=_fggb .CharcodesToUnicodeWithStats (charcodes );return _cggf ;};

// ToPdfObject implements interface PdfModel.
func (_dda *PdfActionThread )ToPdfObject ()_aec .PdfObject {_dda .PdfAction .ToPdfObject ();_bfg :=_dda ._gf ;_eg :=_bfg .PdfObject .(*_aec .PdfObjectDictionary );_eg .SetIfNotNil ("\u0053",_aec .MakeName (string (ActionTypeThread )));if _dda .F !=nil {_eg .Set ("\u0046",_dda .F .ToPdfObject ());};_eg .SetIfNotNil ("\u0044",_dda .D );_eg .SetIfNotNil ("\u0042",_dda .B );return _bfg ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _aec .PdfObject ;FS _aec .PdfObject ;F _aec .PdfObject ;UF _aec .PdfObject ;DOS _aec .PdfObject ;Mac _aec .PdfObject ;Unix _aec .PdfObject ;ID _aec .PdfObject ;V _aec .PdfObject ;EF _aec .PdfObject ;RF _aec .PdfObject ;Desc _aec .PdfObject ;CI _aec .PdfObject ;_bfecg _aec .PdfObject ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_aec .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};func _ddbag (_adadfg _aec .PdfObject )[]*_aec .PdfObjectStream {if _adadfg ==nil {return nil ;};_cebcc ,_cccdb :=_aec .GetArray (_adadfg );if !_cccdb ||_cebcc .Len ()==0{return nil ;};_ddgccc :=make ([]*_aec .PdfObjectStream ,0,_cebcc .Len ());for _ ,_ffdea :=range _cebcc .Elements (){if _fgebf ,_bedga :=_aec .GetStream (_ffdea );_bedga {_ddgccc =append (_ddgccc ,_fgebf );};};return _ddgccc ;};

// ToInteger convert to an integer format.
func (_dgc *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_aeaa :=_dc .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_aeaa *_dgc .C ()),uint32 (_aeaa *_dgc .M ()),uint32 (_aeaa *_dgc .Y ()),uint32 (_aeaa *_dgc .K ())};};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_eaaf *PdfPage )error ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_geag *PdfPageResourcesColorspaces )ToPdfObject ()_aec .PdfObject {_gddb :=_aec .MakeDict ();for _ ,_cccf :=range _geag .Names {_gddb .Set (_aec .PdfObjectName (_cccf ),_geag .Colorspaces [_cccf ].ToPdfObject ());};if _geag ._ccgag !=nil {_geag ._ccgag .PdfObject =_gddb ;return _geag ._ccgag ;};return _gddb ;};func (_effg *PdfReader )newPdfAnnotationCircleFromDict (_agdg *_aec .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_bbbg :=PdfAnnotationCircle {};_ebab ,_cage :=_effg .newPdfAnnotationMarkupFromDict (_agdg );if _cage !=nil {return nil ,_cage ;};_bbbg .PdfAnnotationMarkup =_ebab ;_bbbg .BS =_agdg .Get ("\u0042\u0053");_bbbg .IC =_agdg .Get ("\u0049\u0043");_bbbg .BE =_agdg .Get ("\u0042\u0045");_bbbg .RD =_agdg .Get ("\u0052\u0044");return &_bbbg ,nil ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_agd :=NewPdfAnnotation ();_fde :=&PdfAnnotationFileAttachment {};_fde .PdfAnnotation =_agd ;_fde .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_agd .SetContext (_fde );return _fde ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_dedee *PdfReader )CheckAccessRights (password []byte )(bool ,_ecb .Permissions ,error ){return _dedee ._adecd .CheckAccessRights (password );};func _cbcd (_bbdf ,_ffdcb string )string {if _ee .Contains (_bbdf ,"\u002b"){_acegg :=_ee .Split (_bbdf ,"\u002b");if len (_acegg )==2{_bbdf =_acegg [1];};};return _ffdcb +"\u002b"+_bbdf ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_aecee .Lock ();defer _aecee .Unlock ();_bfdec =author };

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_bdcb :=NewPdfAnnotation ();_ddeg :=&PdfAnnotationSound {};_ddeg .PdfAnnotation =_bdcb ;_ddeg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bdcb .SetContext (_ddeg );return _ddeg ;};

// String returns a string that describes `base`.
func (_cfec fontCommon )String ()string {return _g .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_cfec .coreString ());};func (_adgeb *PdfSignature )extractChainFromPKCS7 ()([]*_ad .Certificate ,error ){_bbcbg ,_ffbca :=_ecgb .Parse (_adgeb .Contents .Bytes ());if _ffbca !=nil {return nil ,_ffbca ;};return _bbcbg .Certificates ,nil ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );func _dddad ()string {return _de .Version };

// ToPdfObject implements interface PdfModel.
func (_ebd *PdfActionLaunch )ToPdfObject ()_aec .PdfObject {_ebd .PdfAction .ToPdfObject ();_fbd :=_ebd ._gf ;_ecc :=_fbd .PdfObject .(*_aec .PdfObjectDictionary );_ecc .SetIfNotNil ("\u0053",_aec .MakeName (string (ActionTypeLaunch )));if _ebd .F !=nil {_ecc .Set ("\u0046",_ebd .F .ToPdfObject ());};_ecc .SetIfNotNil ("\u0057\u0069\u006e",_ebd .Win );_ecc .SetIfNotNil ("\u004d\u0061\u0063",_ebd .Mac );_ecc .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ebd .Unix );_ecc .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ebd .NewWindow );return _fbd ;};func (_adadf *pdfFontType0 )subsetRegistered ()error {_badb ,_efbgb :=_adadf .DescendantFont ._gaga .(*pdfCIDFontType2 );if !_efbgb {_de .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_adadf .DescendantFont );return nil ;};if _badb ==nil {return nil ;};if _badb ._dabc ==nil {_de .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _adadf ._cdab ==nil {_de .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");return nil ;};_eddcf ,_efbgb :=_aec .GetStream (_badb ._dabc .FontFile2 );if !_efbgb {_de .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");return _ed .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_bggc ,_dfef :=_aec .DecodeStream (_eddcf );if _dfef !=nil {_de .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_dfef );return _dfef ;};_dbbg ,_dfef :=_gge .Parse (_add .NewReader (_bggc ));if _dfef !=nil {_de .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_eddcf .Stream ));return _dfef ;};var _afgbe []rune ;var _bbfg *_gge .Font ;switch _cagcd :=_adadf ._cdab .(type ){case *_cad .TrueTypeFontEncoder :_afgbe =_cagcd .RegisteredRunes ();_bbfg ,_dfef =_dbbg .SubsetKeepRunes (_afgbe );if _dfef !=nil {_de .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dfef );return _dfef ;};_cagcd .SubsetRegistered ();case *_cad .IdentityEncoder :_afgbe =_cagcd .RegisteredRunes ();_caggc :=make ([]_gge .GlyphIndex ,len (_afgbe ));for _acbf ,_gefgb :=range _afgbe {_caggc [_acbf ]=_gge .GlyphIndex (_gefgb );};_bbfg ,_dfef =_dbbg .SubsetKeepIndices (_caggc );if _dfef !=nil {_de .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dfef );return _dfef ;};case _cad .SimpleEncoder :_gcddd :=_cagcd .Charcodes ();for _ ,_feea :=range _gcddd {_cgbc ,_afbgf :=_cagcd .CharcodeToRune (_feea );if !_afbgf {_de .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_feea );continue ;};_afgbe =append (_afgbe ,_cgbc );};default:return _g .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_adadf ._cdab );};var _gabbb _add .Buffer ;_dfef =_bbfg .Write (&_gabbb );if _dfef !=nil {_de .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dfef );return _dfef ;};if _adadf ._bgae !=nil {_bcbe :=make (map[_fa .CharCode ]rune ,len (_afgbe ));for _ ,_bageg :=range _afgbe {_cgfba ,_cdea :=_adadf ._cdab .RuneToCharcode (_bageg );if !_cdea {continue ;};_bcbe [_fa .CharCode (_cgfba )]=_bageg ;};_adadf ._bgae =_fa .NewToUnicodeCMap (_bcbe );};_eddcf ,_dfef =_aec .MakeStream (_gabbb .Bytes (),_aec .NewFlateEncoder ());if _dfef !=nil {_de .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dfef );return _dfef ;};_eddcf .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_aec .MakeInteger (int64 (_gabbb .Len ())));if _efdgc ,_ddgcf :=_aec .GetStream (_badb ._dabc .FontFile2 );_ddgcf {*_efdgc =*_eddcf ;}else {_badb ._dabc .FontFile2 =_eddcf ;};_fagd :=_gbbdg ();if len (_adadf ._ecbb )> 0{_adadf ._ecbb =_cbcd (_adadf ._ecbb ,_fagd );};if len (_badb ._ecbb )> 0{_badb ._ecbb =_cbcd (_badb ._ecbb ,_fagd );};if len (_adadf ._cbda )> 0{_adadf ._cbda =_cbcd (_adadf ._cbda ,_fagd );};if _badb ._dabc !=nil {_ccaa ,_fefc :=_aec .GetName (_badb ._dabc .FontName );if _fefc &&len (_ccaa .String ())> 0{_debd :=_cbcd (_ccaa .String (),_fagd );_badb ._dabc .FontName =_aec .MakeName (_debd );};};return nil ;};func _effgd (_edbb _aec .PdfObject )(*_aec .PdfObjectDictionary ,*fontCommon ,error ){_ceca :=&fontCommon {};if _daad ,_cgeag :=_edbb .(*_aec .PdfIndirectObject );_cgeag {_ceca ._ddee =_daad .ObjectNumber ;};_agbfc ,_bgcc :=_aec .GetDict (_edbb );if !_bgcc {_de .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_edbb );return nil ,nil ,ErrFontNotSupported ;};_cede ,_bgcc :=_aec .GetNameVal (_agbfc .Get ("\u0054\u0079\u0070\u0065"));if !_bgcc {_de .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};if _cede !="\u0046\u006f\u006e\u0074"{_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_cede ,"\u0046\u006f\u006e\u0074");return nil ,nil ,_aec .ErrTypeError ;};_gfbd ,_bgcc :=_aec .GetNameVal (_agbfc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_bgcc {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};_ceca ._daed =_gfbd ;_dgca ,_bgcc :=_aec .GetNameVal (_agbfc .Get ("\u004e\u0061\u006d\u0065"));if _bgcc {_ceca ._cbda =_dgca ;};if _gfbd =="\u0054\u0079\u0070e\u0033"{_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0033\u0020\u0066\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0073u\u0070\u0070\u006f\u0072\u0074e\u0064\u002e \u0064\u003d\u0025\u0073",_agbfc );return _agbfc ,_ceca ,ErrType3FontNotSupported ;};_cagf ,_bgcc :=_aec .GetNameVal (_agbfc .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_bgcc {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return _agbfc ,_ceca ,ErrRequiredAttributeMissing ;};_ceca ._ecbb =_cagf ;_egbf :=_agbfc .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _egbf !=nil {_ecdc ,_bbgd :=_bebbb (_egbf );if _bbgd !=nil {_de .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bbgd );return _agbfc ,_ceca ,_bbgd ;};_ceca ._dabc =_ecdc ;};_ddcb :=_agbfc .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _ddcb !=nil {_ceca ._bcfaa =_aec .TraceToDirectObject (_ddcb );_bdfd ,_fgef :=_afbef (_ceca ._bcfaa ,_ceca );if _fgef !=nil {return _agbfc ,_ceca ,_fgef ;};_ceca ._bgae =_bdfd ;}else if _gfbd =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_gfbd =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_afdee ,_gdag :=_fa .NewCIDSystemInfo (_agbfc .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if _gdag !=nil {return _agbfc ,_ceca ,_gdag ;};_dcgg :=_g .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_afdee .Registry ,_afdee .Ordering );if _fa .IsPredefinedCMap (_dcgg ){_ceca ._bgae ,_gdag =_fa .LoadPredefinedCMap (_dcgg );if _gdag !=nil {_de .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_dcgg ,_gdag );};};};return _agbfc ,_ceca ,nil ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_eacg *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// B returns the value of the B component of the color.
func (_fedg *PdfColorCalRGB )B ()float64 {return _fedg [1]};

// SetNamedDestinations sets the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_aadgg *PdfWriter )SetNamedDestinations (names _aec .PdfObject )error {if names ==nil {return nil ;};_de .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");_aadgg ._beffcb .Set ("\u004e\u0061\u006de\u0073",names );return _aadgg .addObjects (names );};

// ToInteger convert to an integer format.
func (_ebdf *PdfColorCalGray )ToInteger (bits int )uint32 {_ffaa :=_dc .Pow (2,float64 (bits ))-1;return uint32 (_ffaa *_ebdf .Val ());};func (_bbc *PdfReader )newPdfActionImportDataFromDict (_ggdf *_aec .PdfObjectDictionary )(*PdfActionImportData ,error ){_dafe ,_aeee :=_ccfd (_ggdf .Get ("\u0046"));if _aeee !=nil {return nil ,_aeee ;};return &PdfActionImportData {F :_dafe },nil ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _aec .PdfObject ;IsMap _aec .PdfObject ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};var _dggdb =false ;

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _aec .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_aec .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_ccbgag ,_agda :=encoder .EncodeBytes (img .Data );if _agda !=nil {_de .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_agda );return nil ,_agda ;};_dacd :=NewXObjectImage ();_bfgfec :=img .Width ;_faaad :=img .Height ;_dacd .Width =&_bfgfec ;_dacd .Height =&_faaad ;_cbgdc :=img .BitsPerComponent ;_dacd .BitsPerComponent =&_cbgdc ;_dacd .Filter =encoder ;_dacd .Stream =_ccbgag ;if cs ==nil {if img .ColorComponents ==1{_dacd .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_dacd .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_dacd .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_ed .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_dacd .ColorSpace =cs ;};if len (img ._aaaa )!=0{_acdbc :=NewXObjectImage ();_acdbc .Filter =encoder ;_befge ,_dbecg :=encoder .EncodeBytes (img ._aaaa );if _dbecg !=nil {_de .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_dbecg );return nil ,_dbecg ;};_acdbc .Stream =_befge ;_acdbc .BitsPerComponent =_dacd .BitsPerComponent ;_acdbc .Width =&img .Width ;_acdbc .Height =&img .Height ;_acdbc .ColorSpace =NewPdfColorspaceDeviceGray ();_dacd .SMask =_acdbc .ToPdfObject ();}else {_dacd .SMask =xobjIn .SMask ;_dacd .ImageMask =xobjIn .ImageMask ;if _dacd .ColorSpace .GetNumComponents ()==1{_cecga (_dacd );};};return _dacd ,nil ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _fb .ReadSeeker )(*PdfReader ,error ){_dcbb :=&PdfReader {_fcdf :rs ,_ddcbfa :map[_aec .PdfObject ]struct{}{},_bgeab :_dfcfcf (),_dfga :true };_ebeee ,_dagbd :=_aec .NewParser (rs );if _dagbd !=nil {return nil ,_dagbd ;};_dcbb ._adecd =_ebeee ;_cfeec ,_dagbd :=_dcbb .IsEncrypted ();if _dagbd !=nil {return nil ,_dagbd ;};if !_cfeec {_dagbd =_dcbb .loadStructure ();if _dagbd !=nil {return nil ,_dagbd ;};};return _dcbb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_faad *PdfAnnotationWidget )ToPdfObject ()_aec .PdfObject {_faad .PdfAnnotation .ToPdfObject ();_cfdd :=_faad ._bcce ;_cfff :=_cfdd .PdfObject .(*_aec .PdfObjectDictionary );if _faad ._baf {return _cfdd ;};_faad ._baf =true ;_cfff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));_cfff .SetIfNotNil ("\u0048",_faad .H );_cfff .SetIfNotNil ("\u004d\u004b",_faad .MK );_cfff .SetIfNotNil ("\u0041",_faad .A );_cfff .SetIfNotNil ("\u0041\u0041",_faad .AA );_cfff .SetIfNotNil ("\u0042\u0053",_faad .BS );_gdcd :=_faad .Parent ;if _faad ._ebff !=nil {if _faad ._ebff ._cfaef ==_faad ._bcce {_faad ._ebff .ToPdfObject ();};_gdcd =_faad ._ebff .GetContainingPdfObject ();};if _gdcd !=_cfdd {_cfff .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_gdcd );};_faad ._baf =false ;return _cfdd ;};

// SetReason sets the `Reason` field of the signature.
func (_bbada *PdfSignature )SetReason (reason string ){_bbada .Reason =_aec .MakeString (reason )};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_aec .PdfObject ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_cebc FieldFlag )Mask ()uint32 {return uint32 (_cebc )};func (_gadg *DSS )add (_fged *[]*_aec .PdfObjectStream ,_ggaec map[string ]*_aec .PdfObjectStream ,_fbae [][]byte )([]*_aec .PdfObjectStream ,error ){_dcgaa :=make ([]*_aec .PdfObjectStream ,0,len (_fbae ));for _ ,_cfcd :=range _fbae {_adga ,_eeeb :=_cagcgd (_cfcd );if _eeeb !=nil {return nil ,_eeeb ;};_dcfe ,_cafd :=_ggaec [string (_adga )];if !_cafd {_dcfe ,_eeeb =_aec .MakeStream (_cfcd ,_aec .NewRawEncoder ());if _eeeb !=nil {return nil ,_eeeb ;};_ggaec [string (_adga )]=_dcfe ;*_fged =append (*_fged ,_dcfe );};_dcgaa =append (_dcgaa ,_dcfe );};return _dcgaa ,nil ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_affbb *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _aec .GetNumberAsFloat (_affbb .Descent );};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_bceb *PdfPageResources )GetShadingByName (keyName _aec .PdfObjectName )(*PdfShading ,bool ){if _bceb .Shading ==nil {return nil ,false ;};_egcae ,_aacbc :=_aec .TraceToDirectObject (_bceb .Shading ).(*_aec .PdfObjectDictionary );if !_aacbc {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bceb .Shading );return nil ,false ;};if _dbfed :=_egcae .Get (keyName );_dbfed !=nil {_bdcab ,_bbcae :=_ageaf (_dbfed );if _bbcae !=nil {_de .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_bbcae );return nil ,false ;};return _bdcab ,true ;};return nil ,false ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cdgga *PdfShadingType2 )ToPdfObject ()_aec .PdfObject {_cdgga .PdfShading .ToPdfObject ();_ececa ,_afdc :=_cdgga .getShadingDict ();if _afdc !=nil {_de .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _ececa ==nil {_de .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _cdgga .Coords !=nil {_ececa .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_cdgga .Coords );};if _cdgga .Domain !=nil {_ececa .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cdgga .Domain );};if _cdgga .Function !=nil {if len (_cdgga .Function )==1{_ececa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cdgga .Function [0].ToPdfObject ());}else {_gcbe :=_aec .MakeArray ();for _ ,_fage :=range _cdgga .Function {_gcbe .Append (_fage .ToPdfObject ());};_ececa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gcbe );};};if _cdgga .Extend !=nil {_ececa .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_cdgga .Extend );};return _cdgga ._cecd ;};func (_ddfg *PdfReader )resolveReference (_edfb *_aec .PdfObjectReference )(_aec .PdfObject ,bool ,error ){_fcbe ,_ggabe :=_ddfg ._adecd .ObjCache [int (_edfb .ObjectNumber )];if !_ggabe {_de .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_edfb );_eeee ,_bdaca :=_ddfg ._adecd .LookupByReference (*_edfb );if _bdaca !=nil {return nil ,false ,_bdaca ;};_ddfg ._adecd .ObjCache [int (_edfb .ObjectNumber )]=_eeee ;return _eeee ,false ,nil ;};return _fcbe ,true ,nil ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;func _eada (_adcc *_aec .PdfObjectDictionary ,_adgg *fontCommon )(*pdfFontType0 ,error ){_efbga ,_afeag :=_aec .GetArray (_adcc .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_afeag {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_adgg );return nil ,_aec .ErrRangeError ;};if _efbga .Len ()!=1{_de .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_efbga .Len ());return nil ,_aec .ErrRangeError ;};_bdec ,_acbfe :=_fgdga (_efbga .Get (0),false );if _acbfe !=nil {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_acbfe ,_adgg );return nil ,_acbfe ;};_baccg :=_edbg (_adgg );_baccg .DescendantFont =_bdec ;_dabda ,_afeag :=_aec .GetNameVal (_adcc .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _afeag {if _dabda =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_dabda =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_baccg ._cdab =_cad .NewIdentityTextEncoder (_dabda );}else if _fa .IsPredefinedCMap (_dabda ){_baccg ._fdcf ,_acbfe =_fa .LoadPredefinedCMap (_dabda );if _acbfe !=nil {_de .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_dabda ,_acbfe );};}else {_de .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_dabda );};};if _ffec :=_bdec .baseFields ()._bgae ;_ffec !=nil {if _facd :=_ffec .Name ();_facd =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_facd =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_facd =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_facd =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_baccg ._cdab =_cad .NewCMapEncoder (_dabda ,_baccg ._fdcf ,_ffec );};};return _baccg ,nil ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_fddbe *PdfPageResources )SetXObjectByName (keyName _aec .PdfObjectName ,stream *_aec .PdfObjectStream )error {if _fddbe .XObject ==nil {_fddbe .XObject =_aec .MakeDict ();};_agdf :=_aec .TraceToDirectObject (_fddbe .XObject );_acafb ,_cgbd :=_agdf .(*_aec .PdfObjectDictionary );if !_cgbd {_de .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_fddbe .XObject ,_agdf );return _ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_acafb .Set (keyName ,stream );return nil ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_cdaad *PdfPageResources )SetShadingByName (keyName _aec .PdfObjectName ,shadingObj _aec .PdfObject )error {if _cdaad .Shading ==nil {_cdaad .Shading =_aec .MakeDict ();};_dcffg ,_gbfg :=_cdaad .Shading .(*_aec .PdfObjectDictionary );if !_gbfg {return _aec .ErrTypeError ;};_dcffg .Set (keyName ,shadingObj );return nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_ccdgaa *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _ccdgaa .MediaBox !=nil {return _ccdgaa .MediaBox ,nil ;};_bbcfd :=_ccdgaa .Parent ;for _bbcfd !=nil {_debgeb ,_ggbfd :=_aec .GetDict (_bbcfd );if !_ggbfd {return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");};if _dabfb :=_debgeb .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_dabfb !=nil {_aegb ,_cdcef :=_aec .GetArray (_dabfb );if !_cdcef {return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");};_cbec ,_cccee :=NewPdfRectangle (*_aegb );if _cccee !=nil {return nil ,_cccee ;};return _cbec ,nil ;};_bbcfd =_debgeb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_ed .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");};

// ToPdfObject implements interface PdfModel.
func (_gd *PdfAction )ToPdfObject ()_aec .PdfObject {_adf :=_gd ._gf ;_cd :=_adf .PdfObject .(*_aec .PdfObjectDictionary );_cd .Clear ();_cd .Set ("\u0054\u0079\u0070\u0065",_aec .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_cd .SetIfNotNil ("\u0053",_gd .S );_cd .SetIfNotNil ("\u004e\u0065\u0078\u0074",_gd .Next );return _adf ;};var (CourierName =_ge .CourierName ;CourierBoldName =_ge .CourierBoldName ;CourierObliqueName =_ge .CourierObliqueName ;CourierBoldObliqueName =_ge .CourierBoldObliqueName ;HelveticaName =_ge .HelveticaName ;HelveticaBoldName =_ge .HelveticaBoldName ;HelveticaObliqueName =_ge .HelveticaObliqueName ;HelveticaBoldObliqueName =_ge .HelveticaBoldObliqueName ;SymbolName =_ge .SymbolName ;ZapfDingbatsName =_ge .ZapfDingbatsName ;TimesRomanName =_ge .TimesRomanName ;TimesBoldName =_ge .TimesBoldName ;TimesItalicName =_ge .TimesItalicName ;TimesBoldItalicName =_ge .TimesBoldItalicName ;);func (_dced *PdfReader )newPdfActionGotoFromDict (_bg *_aec .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_bg .Get ("\u0044")},nil ;};

// ToInteger convert to an integer format.
func (_gacc *PdfColorLab )ToInteger (bits int )[3]uint32 {_ffbf :=_dc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ffbf *_gacc .L ()),uint32 (_ffbf *_gacc .A ()),uint32 (_ffbf *_gacc .B ())};};

// ToInteger convert to an integer format.
func (_gead *PdfColorDeviceGray )ToInteger (bits int )uint32 {_gdeg :=_dc .Pow (2,float64 (bits ))-1;return uint32 (_gdeg *_gead .Val ());};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_aec .PdfObjectArray ;TI *_aec .PdfObjectInteger ;I *_aec .PdfObjectArray ;};func _cggbd (_abgg _aec .PdfObject ,_ebfgg *PdfReader )(*OutlineDest ,error ){_cedf ,_acdaa :=_aec .GetArray (_abgg );if !_acdaa {return nil ,_ed .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};_dacba :=_cedf .Len ();if _dacba < 2{return nil ,_g .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_dacba );};_bdfbf :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_aedac :=_cedf .Get (0);if _eaccf ,_ecgbg :=_aec .GetIndirect (_aedac );_ecgbg {if _ ,_dbaeg ,_gcddcf :=_ebfgg .PageFromIndirectObject (_eaccf );_gcddcf ==nil {_bdfbf .Page =int64 (_dbaeg -1);}else {_de .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_eaccf );};_bdfbf .PageObj =_eaccf ;}else if _cafe ,_ccfbf :=_aec .GetIntVal (_aedac );_ccfbf {if _cafe >=0&&_cafe < len (_ebfgg .PageList ){_bdfbf .PageObj =_ebfgg .PageList [_cafe ].GetPageAsIndirectObject ();}else {_de .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_cafe );};_bdfbf .Page =int64 (_cafe );}else {return nil ,_g .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_aedac );};_egbb ,_acdaa :=_aec .GetNameVal (_cedf .Get (1));if !_acdaa {_de .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_cedf .Get (1));return _bdfbf ,nil ;};switch _egbb {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _dacba > 2{_bdfbf .Y ,_ =_aec .GetNumberAsFloat (_aec .TraceToDirectObject (_cedf .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _dacba > 2{_bdfbf .X ,_ =_aec .GetNumberAsFloat (_aec .TraceToDirectObject (_cedf .Get (2)));};case "\u0058\u0059\u005a":if _dacba > 4{_bdfbf .X ,_ =_aec .GetNumberAsFloat (_aec .TraceToDirectObject (_cedf .Get (2)));_bdfbf .Y ,_ =_aec .GetNumberAsFloat (_aec .TraceToDirectObject (_cedf .Get (3)));_bdfbf .Zoom ,_ =_aec .GetNumberAsFloat (_aec .TraceToDirectObject (_cedf .Get (4)));};default:_egbb ="\u0046\u0069\u0074";};_bdfbf .Mode =_egbb ;return _bdfbf ,nil ;};func _aagcd (_ccgb _aec .PdfObject )(*PdfColorspaceDeviceN ,error ){_geegc :=NewPdfColorspaceDeviceN ();if _acafd ,_eeba :=_ccgb .(*_aec .PdfIndirectObject );_eeba {_geegc ._afbe =_acafd ;};_ccgb =_aec .TraceToDirectObject (_ccgb );_bbad ,_eebc :=_ccgb .(*_aec .PdfObjectArray );if !_eebc {return nil ,_g .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _bbad .Len ()!=4&&_bbad .Len ()!=5{return nil ,_g .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_ccgb =_bbad .Get (0);_gega ,_eebc :=_ccgb .(*_aec .PdfObjectName );if !_eebc {return nil ,_g .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_gega !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_g .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_ccgb =_bbad .Get (1);_ccgb =_aec .TraceToDirectObject (_ccgb );_fcdef ,_eebc :=_ccgb .(*_aec .PdfObjectArray );if !_eebc {return nil ,_g .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");};_geegc .ColorantNames =_fcdef ;_ccgb =_bbad .Get (2);_ddaf ,_eabg :=NewPdfColorspaceFromPdfObject (_ccgb );if _eabg !=nil {return nil ,_eabg ;};_geegc .AlternateSpace =_ddaf ;_fddd ,_eabg :=_cgefb (_bbad .Get (3));if _eabg !=nil {return nil ,_eabg ;};_geegc .TintTransform =_fddd ;if _bbad .Len ()==5{_fgae ,_gdbda :=_cdac (_bbad .Get (4));if _gdbda !=nil {return nil ,_gdbda ;};_geegc .Attributes =_fgae ;};return _geegc ,nil ;};func (_ddgb *PdfReader )newPdfAnnotationFromIndirectObject (_cbb *_aec .PdfIndirectObject )(*PdfAnnotation ,error ){_bfb ,_baab :=_cbb .PdfObject .(*_aec .PdfObjectDictionary );if !_baab {return nil ,_g .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_ddgb ._bgeab .GetModelFromPrimitive (_bfb );model !=nil {_cdbf ,_fbc :=model .(*PdfAnnotation );if !_fbc {return nil ,_g .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");};return _cdbf ,nil ;};_gcgc :=&PdfAnnotation {};_gcgc ._bcce =_cbb ;_ddgb ._bgeab .Register (_bfb ,_gcgc );if _agcc :=_bfb .Get ("\u0054\u0079\u0070\u0065");_agcc !=nil {_efdb ,_dga :=_agcc .(*_aec .PdfObjectName );if !_dga {_de .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_agcc );}else {if *_efdb !="\u0041\u006e\u006eo\u0074"{_de .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_efdb );};};};if _daab :=_bfb .Get ("\u0052\u0065\u0063\u0074");_daab !=nil {_gcgc .Rect =_daab ;};if _edg :=_bfb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_edg !=nil {_gcgc .Contents =_edg ;};if _ggdd :=_bfb .Get ("\u0050");_ggdd !=nil {_gcgc .P =_ggdd ;};if _cce :=_bfb .Get ("\u004e\u004d");_cce !=nil {_gcgc .NM =_cce ;};if _gaee :=_bfb .Get ("\u004d");_gaee !=nil {_gcgc .M =_gaee ;};if _aeea :=_bfb .Get ("\u0046");_aeea !=nil {_gcgc .F =_aeea ;};if _gcgg :=_bfb .Get ("\u0041\u0050");_gcgg !=nil {_gcgc .AP =_gcgg ;};if _gbdb :=_bfb .Get ("\u0041\u0053");_gbdb !=nil {_gcgc .AS =_gbdb ;};if _deea :=_bfb .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_deea !=nil {_gcgc .Border =_deea ;};if _ceaf :=_bfb .Get ("\u0043");_ceaf !=nil {_gcgc .C =_ceaf ;};if _gbde :=_bfb .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_gbde !=nil {_gcgc .StructParent =_gbde ;};if _acf :=_bfb .Get ("\u004f\u0043");_acf !=nil {_gcgc .OC =_acf ;};_bdef :=_bfb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _bdef ==nil {_de .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");_gcgc ._debf =nil ;return _gcgc ,nil ;};_fag ,_ddcc :=_bdef .(*_aec .PdfObjectName );if !_ddcc {_de .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_bdef );return nil ,_g .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_bdef );};switch *_fag {case "\u0054\u0065\u0078\u0074":_geb ,_cgfg :=_ddgb .newPdfAnnotationTextFromDict (_bfb );if _cgfg !=nil {return nil ,_cgfg ;};_geb .PdfAnnotation =_gcgc ;_gcgc ._debf =_geb ;return _gcgc ,nil ;case "\u004c\u0069\u006e\u006b":_gfa ,_fdea :=_ddgb .newPdfAnnotationLinkFromDict (_bfb );if _fdea !=nil {return nil ,_fdea ;};_gfa .PdfAnnotation =_gcgc ;_gcgc ._debf =_gfa ;return _gcgc ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_cfgd ,_aaac :=_ddgb .newPdfAnnotationFreeTextFromDict (_bfb );if _aaac !=nil {return nil ,_aaac ;};_cfgd .PdfAnnotation =_gcgc ;_gcgc ._debf =_cfgd ;return _gcgc ,nil ;case "\u004c\u0069\u006e\u0065":_dba ,_ggbf :=_ddgb .newPdfAnnotationLineFromDict (_bfb );if _ggbf !=nil {return nil ,_ggbf ;};_dba .PdfAnnotation =_gcgc ;_gcgc ._debf =_dba ;_de .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_gcgc ,_gcgc );_de .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_dba ,_dba );_de .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_dba .PdfAnnotationMarkup ,_dba .PdfAnnotationMarkup );return _gcgc ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_ece ,_feg :=_ddgb .newPdfAnnotationSquareFromDict (_bfb );if _feg !=nil {return nil ,_feg ;};_ece .PdfAnnotation =_gcgc ;_gcgc ._debf =_ece ;return _gcgc ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_gagf ,_faf :=_ddgb .newPdfAnnotationCircleFromDict (_bfb );if _faf !=nil {return nil ,_faf ;};_gagf .PdfAnnotation =_gcgc ;_gcgc ._debf =_gagf ;return _gcgc ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_ged ,_bebbg :=_ddgb .newPdfAnnotationPolygonFromDict (_bfb );if _bebbg !=nil {return nil ,_bebbg ;};_ged .PdfAnnotation =_gcgc ;_gcgc ._debf =_ged ;return _gcgc ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_bbbb ,_adg :=_ddgb .newPdfAnnotationPolyLineFromDict (_bfb );if _adg !=nil {return nil ,_adg ;};_bbbb .PdfAnnotation =_gcgc ;_gcgc ._debf =_bbbb ;return _gcgc ,nil ;case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_ggega ,_dca :=_ddgb .newPdfAnnotationHighlightFromDict (_bfb );if _dca !=nil {return nil ,_dca ;};_ggega .PdfAnnotation =_gcgc ;_gcgc ._debf =_ggega ;return _gcgc ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_edd ,_fgcb :=_ddgb .newPdfAnnotationUnderlineFromDict (_bfb );if _fgcb !=nil {return nil ,_fgcb ;};_edd .PdfAnnotation =_gcgc ;_gcgc ._debf =_edd ;return _gcgc ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_bafc ,_eedc :=_ddgb .newPdfAnnotationSquigglyFromDict (_bfb );if _eedc !=nil {return nil ,_eedc ;};_bafc .PdfAnnotation =_gcgc ;_gcgc ._debf =_bafc ;return _gcgc ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_afec ,_dafc :=_ddgb .newPdfAnnotationStrikeOut (_bfb );if _dafc !=nil {return nil ,_dafc ;};_afec .PdfAnnotation =_gcgc ;_gcgc ._debf =_afec ;return _gcgc ,nil ;case "\u0043\u0061\u0072e\u0074":_edf ,_adbf :=_ddgb .newPdfAnnotationCaretFromDict (_bfb );if _adbf !=nil {return nil ,_adbf ;};_edf .PdfAnnotation =_gcgc ;_gcgc ._debf =_edf ;return _gcgc ,nil ;case "\u0053\u0074\u0061m\u0070":_dgbd ,_ecfe :=_ddgb .newPdfAnnotationStampFromDict (_bfb );if _ecfe !=nil {return nil ,_ecfe ;};_dgbd .PdfAnnotation =_gcgc ;_gcgc ._debf =_dgbd ;return _gcgc ,nil ;case "\u0049\u006e\u006b":_feaa ,_beef :=_ddgb .newPdfAnnotationInkFromDict (_bfb );if _beef !=nil {return nil ,_beef ;};_feaa .PdfAnnotation =_gcgc ;_gcgc ._debf =_feaa ;return _gcgc ,nil ;case "\u0050\u006f\u0070u\u0070":_deba ,_bbaf :=_ddgb .newPdfAnnotationPopupFromDict (_bfb );if _bbaf !=nil {return nil ,_bbaf ;};_deba .PdfAnnotation =_gcgc ;_gcgc ._debf =_deba ;return _gcgc ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_gggf ,_aede :=_ddgb .newPdfAnnotationFileAttachmentFromDict (_bfb );if _aede !=nil {return nil ,_aede ;};_gggf .PdfAnnotation =_gcgc ;_gcgc ._debf =_gggf ;return _gcgc ,nil ;case "\u0053\u006f\u0075n\u0064":_gcc ,_egf :=_ddgb .newPdfAnnotationSoundFromDict (_bfb );if _egf !=nil {return nil ,_egf ;};_gcc .PdfAnnotation =_gcgc ;_gcgc ._debf =_gcc ;return _gcgc ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_ceee ,_fac :=_ddgb .newPdfAnnotationRichMediaFromDict (_bfb );if _fac !=nil {return nil ,_fac ;};_ceee .PdfAnnotation =_gcgc ;_gcgc ._debf =_ceee ;return _gcgc ,nil ;case "\u004d\u006f\u0076i\u0065":_dfeb ,_cba :=_ddgb .newPdfAnnotationMovieFromDict (_bfb );if _cba !=nil {return nil ,_cba ;};_dfeb .PdfAnnotation =_gcgc ;_gcgc ._debf =_dfeb ;return _gcgc ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_egcf ,_cadd :=_ddgb .newPdfAnnotationScreenFromDict (_bfb );if _cadd !=nil {return nil ,_cadd ;};_egcf .PdfAnnotation =_gcgc ;_gcgc ._debf =_egcf ;return _gcgc ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_cfc ,_afc :=_ddgb .newPdfAnnotationWidgetFromDict (_bfb );if _afc !=nil {return nil ,_afc ;};_cfc .PdfAnnotation =_gcgc ;_gcgc ._debf =_cfc ;return _gcgc ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_bdgg ,_agcg :=_ddgb .newPdfAnnotationPrinterMarkFromDict (_bfb );if _agcg !=nil {return nil ,_agcg ;};_bdgg .PdfAnnotation =_gcgc ;_gcgc ._debf =_bdgg ;return _gcgc ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_decc ,_dacf :=_ddgb .newPdfAnnotationTrapNetFromDict (_bfb );if _dacf !=nil {return nil ,_dacf ;};_decc .PdfAnnotation =_gcgc ;_gcgc ._debf =_decc ;return _gcgc ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_facc ,_gebe :=_ddgb .newPdfAnnotationWatermarkFromDict (_bfb );if _gebe !=nil {return nil ,_gebe ;};_facc .PdfAnnotation =_gcgc ;_gcgc ._debf =_facc ;return _gcgc ,nil ;case "\u0033\u0044":_cff ,_gaf :=_ddgb .newPdfAnnotation3DFromDict (_bfb );if _gaf !=nil {return nil ,_gaf ;};_cff .PdfAnnotation =_gcgc ;_gcgc ._debf =_cff ;return _gcgc ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_gebeg ,_afd :=_ddgb .newPdfAnnotationProjectionFromDict (_bfb );if _afd !=nil {return nil ,_afd ;};_gebeg .PdfAnnotation =_gcgc ;_gcgc ._debf =_gebeg ;return _gcgc ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_eff ,_dbaf :=_ddgb .newPdfAnnotationRedactFromDict (_bfb );if _dbaf !=nil {return nil ,_dbaf ;};_eff .PdfAnnotation =_gcgc ;_gcgc ._debf =_eff ;return _gcgc ,nil ;};_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_fag );return nil ,nil ;};

// ToPdfObject returns a stream object.
func (_cdcce *XObjectImage )ToPdfObject ()_aec .PdfObject {_cccca :=_cdcce ._deccfc ;_bcdab :=_cccca .PdfObjectDictionary ;if _cdcce .Filter !=nil {_bcdab =_cdcce .Filter .MakeStreamDict ();_cccca .PdfObjectDictionary =_bcdab ;};_bcdab .Set ("\u0054\u0079\u0070\u0065",_aec .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_bcdab .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0049\u006d\u0061g\u0065"));_bcdab .Set ("\u0057\u0069\u0064t\u0068",_aec .MakeInteger (*(_cdcce .Width )));_bcdab .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_aec .MakeInteger (*(_cdcce .Height )));if _cdcce .BitsPerComponent !=nil {_bcdab .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aec .MakeInteger (*(_cdcce .BitsPerComponent )));};if _cdcce .ColorSpace !=nil {_bcdab .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_cdcce .ColorSpace .ToPdfObject ());};_bcdab .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_cdcce .Intent );_bcdab .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_cdcce .ImageMask );_bcdab .SetIfNotNil ("\u004d\u0061\u0073\u006b",_cdcce .Mask );_bcdab .SetIfNotNil ("\u0044\u0065\u0063\u006f\u0064\u0065",_cdcce .Decode );_bcdab .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_cdcce .Interpolate );_bcdab .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_cdcce .Alternatives );_bcdab .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_cdcce .SMask );_bcdab .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_cdcce .SMaskInData );_bcdab .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_cdcce .Matte );_bcdab .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cdcce .Name );_bcdab .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_cdcce .StructParent );_bcdab .SetIfNotNil ("\u0049\u0044",_cdcce .ID );_bcdab .SetIfNotNil ("\u004f\u0050\u0049",_cdcce .OPI );_bcdab .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_cdcce .Metadata );_bcdab .SetIfNotNil ("\u004f\u0043",_cdcce .OC );_bcdab .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aec .MakeInteger (int64 (len (_cdcce .Stream ))));_cccca .Stream =_cdcce .Stream ;return _cccca ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_agab *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_bgf ,_ebef :=color .(*PdfColorDeviceGray );if !_ebef {_de .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_bgf ),float64 (*_bgf ),float64 (*_bgf )),nil ;};

// Width returns the width of `rect`.
func (_deaag *PdfRectangle )Width ()float64 {return _dc .Abs (_deaag .Urx -_deaag .Llx )};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_cbba *PdfPageResources )GetXObjectByName (keyName _aec .PdfObjectName )(*_aec .PdfObjectStream ,XObjectType ){if _cbba .XObject ==nil {return nil ,XObjectTypeUndefined ;};_ebea ,_cfbfb :=_aec .TraceToDirectObject (_cbba .XObject ).(*_aec .PdfObjectDictionary );if !_cfbfb {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aec .TraceToDirectObject (_cbba .XObject ));return nil ,XObjectTypeUndefined ;};if _edag :=_ebea .Get (keyName );_edag !=nil {_bacdb ,_bgdca :=_aec .GetStream (_edag );if !_bgdca {_de .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_edag );return nil ,XObjectTypeUndefined ;};_accd :=_bacdb .PdfObjectDictionary ;_cgbag ,_bgdca :=_aec .TraceToDirectObject (_accd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_aec .PdfObjectName );if !_bgdca {_de .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_accd .String ());return nil ,XObjectTypeUndefined ;};if *_cgbag =="\u0049\u006d\u0061g\u0065"{return _bacdb ,XObjectTypeImage ;}else if *_cgbag =="\u0046\u006f\u0072\u006d"{return _bacdb ,XObjectTypeForm ;}else if *_cgbag =="\u0050\u0053"{return _bacdb ,XObjectTypePS ;}else {_de .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_cgbag );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// SetDate sets the `M` field of the signature.
func (_fffdcc *PdfSignature )SetDate (date _d .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_fffdcc .M =_aec .MakeString (date .Format (format ));};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_fdee *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_effb :=vals [0];if _effb < 0.0||_effb > 1.0{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gefa :=vals [1];if _gefa < 0.0||_gefa > 1.0{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgdb :=vals [2];if _dgdb < 0.0||_dgdb > 1.0{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dege :=NewPdfColorDeviceRGB (_effb ,_gefa ,_dgdb );return _dege ,nil ;};func _eacb (_faffa []byte )[]byte {const _eddda =52845;const _aabb =22719;_aaace :=55665;for _ ,_cdddc :=range _faffa [:4]{_aaace =(int (_cdddc )+_aaace )*_eddda +_aabb ;};_cccge :=make ([]byte ,len (_faffa )-4);for _geed ,_cfcfee :=range _faffa [4:]{_cccge [_geed ]=byte (int (_cfcfee )^_aaace >>8);_aaace =(int (_cfcfee )+_aaace )*_eddda +_aabb ;};return _cccge ;};func _becc (_cgag *_aec .PdfObjectDictionary ,_bffe *fontCommon )(*pdfCIDFontType0 ,error ){if _bffe ._daed !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_de .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_bffe );return nil ,_aec .ErrRangeError ;};_cfadf :=_agedf (_bffe );_cdeb ,_ffeb :=_aec .GetDict (_cgag .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_ffeb {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_bffe );return nil ,ErrRequiredAttributeMissing ;};_cfadf .CIDSystemInfo =_cdeb ;_cfadf .DW =_cgag .Get ("\u0044\u0057");_cfadf .W =_cgag .Get ("\u0057");_cfadf .DW2 =_cgag .Get ("\u0044\u0057\u0032");_cfadf .W2 =_cgag .Get ("\u0057\u0032");_cfadf ._aefa =1000.0;if _cgga ,_dcdc :=_aec .GetNumberAsFloat (_cfadf .DW );_dcdc ==nil {_cfadf ._aefa =_cgga ;};_bead ,_ceacc :=_dbbb (_cfadf .W );if _ceacc !=nil {return nil ,_ceacc ;};if _bead ==nil {_bead =map[_cad .CharCode ]float64 {};};_cfadf ._gbddf =_bead ;return _cfadf ,nil ;};func (_edaa *pdfFontSimple )updateStandard14Font (){_abec ,_ccgcf :=_edaa .Encoder ().(_cad .SimpleEncoder );if !_ccgcf {_de .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_edaa .Encoder (),_edaa );return ;};_bgaee :=_abec .Charcodes ();_edaa ._gcda =make (map[_cad .CharCode ]float64 ,len (_bgaee ));for _ ,_beagg :=range _bgaee {_faga ,_ :=_abec .CharcodeToRune (_beagg );_edaa ._gcda [_beagg ]=_edaa ._bgcg [_faga ].Wx ;};};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};func (_geba *pdfFontType0 )bytesToCharcodes (_cageg []byte )([]_cad .CharCode ,bool ){if _geba ._fdcf ==nil {return nil ,false ;};_adba ,_fdedd :=_geba ._fdcf .BytesToCharcodes (_cageg );if !_fdedd {return nil ,false ;};_faeea :=make ([]_cad .CharCode ,len (_adba ));for _cfdc ,_bgcca :=range _adba {_faeea [_cfdc ]=_cad .CharCode (_bgcca );};return _faeea ,true ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _ecb .Permissions ;Algorithm EncryptionAlgorithm ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_bgggf *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_bgggf .ToPdfOutline ().PdfOutlineTreeNode ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_ggeaf *PdfWriter )SetOptimizer (optimizer Optimizer ){_ggeaf ._ggaae =optimizer };

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _aec .PdfObject ;T _aec .PdfObject ;Operation _aec .PdfObject ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_bcfd *Outline )ToPdfOutline ()*PdfOutline {_bgfd :=NewPdfOutline ();var _ccfg []*PdfOutlineItem ;var _gdecc int64 ;var _cdgbd *PdfOutlineItem ;for _ ,_dccg :=range _bcfd .Entries {_bffb ,_aceca :=_dccg .ToPdfOutlineItem ();_bffb .Parent =&_bgfd .PdfOutlineTreeNode ;if _cdgbd !=nil {_cdgbd .Next =&_bffb .PdfOutlineTreeNode ;_bffb .Prev =&_cdgbd .PdfOutlineTreeNode ;};_ccfg =append (_ccfg ,_bffb );_gdecc +=_aceca ;_cdgbd =_bffb ;};_efaa :=int64 (len (_ccfg ));_gdecc +=_efaa ;if _efaa > 0{_bgfd .First =&_ccfg [0].PdfOutlineTreeNode ;_bgfd .Last =&_ccfg [_efaa -1].PdfOutlineTreeNode ;_bgfd .Count =&_gdecc ;};return _bgfd ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_aecee .Lock ();defer _aecee .Unlock ();_cbddc =subject };

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _aec .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _aec .PdfObject ;Contents _aec .PdfObject ;Rotate *int64 ;Group _aec .PdfObject ;Thumb _aec .PdfObject ;B _aec .PdfObject ;Dur _aec .PdfObject ;Trans _aec .PdfObject ;AA _aec .PdfObject ;Metadata _aec .PdfObject ;PieceInfo _aec .PdfObject ;StructParents _aec .PdfObject ;ID _aec .PdfObject ;PZ _aec .PdfObject ;SeparationInfo _aec .PdfObject ;Tabs _aec .PdfObject ;TemplateInstantiated _aec .PdfObject ;PresSteps _aec .PdfObject ;UserUnit _aec .PdfObject ;VP _aec .PdfObject ;Annots _aec .PdfObject ;_cbbgf []*PdfAnnotation ;_defa *_aec .PdfObjectDictionary ;_aggfc *_aec .PdfIndirectObject ;_eegeg *PdfReader ;};

// SetContext sets the sub annotation (context).
func (_cfd *PdfAnnotation )SetContext (ctx PdfModel ){_cfd ._debf =ctx };

// AddOutlineTree adds outlines to a PDF file.
func (_fddbaa *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_fddbaa ._accb =outlineTree ;};func (_abdc Image )getBase ()_be .ImageBase {return _be .NewImageBase (int (_abdc .Width ),int (_abdc .Height ),int (_abdc .BitsPerComponent ),_abdc .ColorComponents ,_abdc .Data ,_abdc ._aaaa ,_abdc ._dbdfe );};type modelManager struct{_adefe map[PdfModel ]_aec .PdfObject ;_gdda map[_aec .PdfObject ]PdfModel ;};func (_fba *PdfReader )newPdfAnnotationSquareFromDict (_gdbd *_aec .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_bfgd :=PdfAnnotationSquare {};_ebfb ,_agb :=_fba .newPdfAnnotationMarkupFromDict (_gdbd );if _agb !=nil {return nil ,_agb ;};_bfgd .PdfAnnotationMarkup =_ebfb ;_bfgd .BS =_gdbd .Get ("\u0042\u0053");_bfgd .IC =_gdbd .Get ("\u0049\u0043");_bfgd .BE =_gdbd .Get ("\u0042\u0045");_bfgd .RD =_gdbd .Get ("\u0052\u0044");return &_bfgd ,nil ;};func _gfacg (_cgace []byte )bool {if len (_cgace )< 4{return true ;};for _ddbgc :=range _cgace [:4]{_cegcc :=rune (_ddbgc );if !_ca .Is (_ca .ASCII_Hex_Digit ,_cegcc )&&!_ca .IsSpace (_cegcc ){return true ;};};return false ;};func (_bdeef *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _bdeef ._adecd .GetCrypter ()!=nil &&!_bdeef ._adecd .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_gdggb :=_bdeef ._cded ;_dbgb :=_gdggb .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _dbgb ==nil {return nil ,nil ;};_de .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_cggfg :=_aec .ResolveReference (_dbgb );_de .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_cggfg );if _cdag :=_aec .IsNullObject (_cggfg );_cdag {_de .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");return nil ,nil ;};_ggffe ,_gdgdbe :=_cggfg .(*_aec .PdfIndirectObject );if !_gdgdbe {if _ ,_ceccdc :=_aec .GetDict (_cggfg );!_ceccdc {_de .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");return nil ,nil ;};_de .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");_ggffe =_aec .MakeIndirectObject (_cggfg );};_fabb ,_gdgdbe :=_ggffe .PdfObject .(*_aec .PdfObjectDictionary );if !_gdgdbe {return nil ,_ed .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");};_de .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_fabb );_deaa ,_ ,_cebbd :=_bdeef .buildOutlineTree (_ggffe ,nil ,nil ,nil );if _cebbd !=nil {return nil ,_cebbd ;};_de .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_deaa );return _deaa ,nil ;};func (_cgcdc *PdfWriter )writeString (_ffda string ){if _cgcdc ._egcadc !=nil {return ;};_egdad ,_ffbaf :=_cgcdc ._gdfdf .WriteString (_ffda );_cgcdc ._fbbcb +=int64 (_egdad );_cgcdc ._egcadc =_ffbaf ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_dadd :=NewPdfAnnotation ();_aefc :=&PdfAnnotationRedact {};_aefc .PdfAnnotation =_dadd ;_aefc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dadd .SetContext (_aefc );return _aefc ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_dged *PdfField )GetContext ()PdfModel {return _dged ._ccegg };type pdfSignDictionary struct{*_aec .PdfObjectDictionary ;_dgcbb *SignatureHandler ;_ffgd *PdfSignature ;_egcaeg int64 ;_ecfag int ;_adbd int ;_gcdfc int ;_gebd int ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_gbcbb DefaultImageHandler )NewGrayImageFromGoImage (goimg _dfd .Image )(*Image ,error ){_eefd :=goimg .Bounds ();_eeggc :=&Image {Width :int64 (_eefd .Dx ()),Height :int64 (_eefd .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _cdfac :=goimg .(type ){case *_dfd .Gray :if len (_cdfac .Pix )!=_eefd .Dx ()*_eefd .Dy (){_ebagc ,_dabgf :=_be .GrayConverter .Convert (goimg );if _dabgf !=nil {return nil ,_dabgf ;};_eeggc .Data =_ebagc .Pix ();}else {_eeggc .Data =_cdfac .Pix ;};case *_dfd .Gray16 :_eeggc .BitsPerComponent =16;if len (_cdfac .Pix )!=_eefd .Dx ()*_eefd .Dy ()*2{_egae ,_affaf :=_be .Gray16Converter .Convert (goimg );if _affaf !=nil {return nil ,_affaf ;};_eeggc .Data =_egae .Pix ();}else {_eeggc .Data =_cdfac .Pix ;};default:_efad ,_cbfgc :=_be .GrayConverter .Convert (goimg );if _cbfgc !=nil {return nil ,_cbfgc ;};_eeggc .Data =_efad .Pix ();};return _eeggc ,nil ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_dfcb *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _aec .GetNumberAsFloat (_dfcb .CapHeight );};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_fccc DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _aec .PdfObjectArray )(*PdfRectangle ,error ){_deggg :=PdfRectangle {};if arr .Len ()!=4{return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");};var _eadf error ;_deggg .Llx ,_eadf =_aec .GetNumberAsFloat (arr .Get (0));if _eadf !=nil {return nil ,_eadf ;};_deggg .Lly ,_eadf =_aec .GetNumberAsFloat (arr .Get (1));if _eadf !=nil {return nil ,_eadf ;};_deggg .Urx ,_eadf =_aec .GetNumberAsFloat (arr .Get (2));if _eadf !=nil {return nil ,_eadf ;};_deggg .Ury ,_eadf =_aec .GetNumberAsFloat (arr .Get (3));if _eadf !=nil {return nil ,_eadf ;};return &_deggg ,nil ;};type pdfFont interface{_ge .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_aec .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_bdage *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bdage .Base ==nil {return nil ,_ed .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _bdage .Base .ColorToRGB (color );};func _fffab (_ddgbb *PdfField ,_dggd _aec .PdfObject ){for _ ,_eabfgd :=range _ddgbb .Annotations {_eabfgd .AS =_dggd ;_eabfgd .ToPdfObject ();};};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _aec .PdfObject ;};func (_cbgb *PdfReader )flattenFieldsWithOpts (_cfea bool ,_caed FieldAppearanceGenerator ,_agdcd *FieldFlattenOpts )error {if _agdcd ==nil {_agdcd =&FieldFlattenOpts {};};var _feagf bool ;_dfage :=map[*PdfAnnotation ]bool {};{var _baac []*PdfField ;_ebaf :=_cbgb .AcroForm ;if _ebaf !=nil {if _agdcd .FilterFunc !=nil {_baac =_ebaf .filteredFields (_agdcd .FilterFunc ,true );_feagf =_ebaf .Fields !=nil &&len (*_ebaf .Fields )> 0;}else {_baac =_ebaf .AllFields ();};};for _ ,_ccge :=range _baac {for _ ,_efgg :=range _ccge .Annotations {_dfage [_efgg .PdfAnnotation ]=_ccge .V !=nil ;if _caed !=nil {_bfafc ,_fdfg :=_caed .GenerateAppearanceDict (_ebaf ,_ccge ,_efgg );if _fdfg !=nil {return _fdfg ;};_efgg .AP =_bfafc ;};};};};if _cfea {for _ ,_cfac :=range _cbgb .PageList {_aagcb ,_egdd :=_cfac .GetAnnotations ();if _egdd !=nil {return _egdd ;};for _ ,_ecde :=range _aagcb {_dfage [_ecde ]=true ;};};};for _ ,_bfccf :=range _cbgb .PageList {var _cbdd []*PdfAnnotation ;if _caed !=nil {if _efgge :=_caed .WrapContentStream (_bfccf );_efgge !=nil {return _efgge ;};};_gabg ,_afceg :=_bfccf .GetAnnotations ();if _afceg !=nil {return _afceg ;};for _ ,_dage :=range _gabg {_fbaff ,_fdb :=_dfage [_dage ];if !_fdb {_cbdd =append (_cbdd ,_dage );continue ;};switch _dage .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;};_edbe ,_dbae ,_gbdd :=_geacf (_dage );if _gbdd !=nil {if !_fbaff {_de .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");continue ;};_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_gbdd );continue ;};if _edbe ==nil {continue ;};_ebbf :=_bfccf .Resources .GenerateXObjectName ();_bfccf .Resources .SetXObjectFormByName (_ebbf ,_edbe );_abed :=_dc .Min (_dbae .Llx ,_dbae .Urx );_gdfa :=_dc .Min (_dbae .Lly ,_dbae .Ury );var _bcdd []string ;_bcdd =append (_bcdd ,"\u0071");_bcdd =append (_bcdd ,_g .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_abed ,_gdfa ));_bcdd =append (_bcdd ,_g .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_ebbf .String ()));_bcdd =append (_bcdd ,"\u0051");_afdf :=_ee .Join (_bcdd ,"\u000a");_gbdd =_bfccf .AppendContentStream (_afdf );if _gbdd !=nil {return _gbdd ;};if _edbe .Resources !=nil {_bgde ,_gfdd :=_aec .GetDict (_edbe .Resources .Font );if _gfdd {for _ ,_aadf :=range _bgde .Keys (){if !_bfccf .Resources .HasFontByName (_aadf ){_bfccf .Resources .SetFontByName (_aadf ,_bgde .Get (_aadf ));};};};};};if len (_cbdd )> 0{_bfccf ._cbbgf =_cbdd ;}else {_bfccf ._cbbgf =[]*PdfAnnotation {};};};if !_feagf {_cbgb .AcroForm =nil ;};return nil ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_cfgdb *PdfFieldChoice )ToPdfObject ()_aec .PdfObject {_cfgdb .PdfField .ToPdfObject ();_bfggg :=_cfgdb ._cfaef ;_geacd :=_bfggg .PdfObject .(*_aec .PdfObjectDictionary );_geacd .Set ("\u0046\u0054",_aec .MakeName ("\u0043\u0068"));if _cfgdb .Opt !=nil {_geacd .Set ("\u004f\u0070\u0074",_cfgdb .Opt );};if _cfgdb .TI !=nil {_geacd .Set ("\u0054\u0049",_cfgdb .TI );};if _cfgdb .I !=nil {_geacd .Set ("\u0049",_cfgdb .I );};return _bfggg ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_fffcc *PdfPageResources )SetPatternByName (keyName _aec .PdfObjectName ,pattern _aec .PdfObject )error {if _fffcc .Pattern ==nil {_fffcc .Pattern =_aec .MakeDict ();};_dcbbb ,_gacea :=_fffcc .Pattern .(*_aec .PdfObjectDictionary );if !_gacea {return _aec .ErrTypeError ;};_dcbbb .Set (keyName ,pattern );return nil ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_bfff :=&PdfColorspaceLab {};_bfff .BlackPoint =[]float64 {0.0,0.0,0.0};_bfff .Range =[]float64 {-100,100,-100,100};return _bfff ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_bgeaa *PdfColorspaceICCBased )ToPdfObject ()_aec .PdfObject {_dgcg :=&_aec .PdfObjectArray {};_dgcg .Append (_aec .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _baaab *_aec .PdfObjectStream ;if _bgeaa ._cggg !=nil {_baaab =_bgeaa ._cggg ;}else {_baaab =&_aec .PdfObjectStream {};};_bcec :=_aec .MakeDict ();_bcec .Set ("\u004e",_aec .MakeInteger (int64 (_bgeaa .N )));if _bgeaa .Alternate !=nil {_bcec .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_bgeaa .Alternate .ToPdfObject ());};if _bgeaa .Metadata !=nil {_bcec .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bgeaa .Metadata );};if _bgeaa .Range !=nil {var _cbffc []_aec .PdfObject ;for _ ,_abea :=range _bgeaa .Range {_cbffc =append (_cbffc ,_aec .MakeFloat (_abea ));};_bcec .Set ("\u0052\u0061\u006eg\u0065",_aec .MakeArray (_cbffc ...));};_bcec .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aec .MakeInteger (int64 (len (_bgeaa .Data ))));_baaab .Stream =_bgeaa .Data ;_baaab .PdfObjectDictionary =_bcec ;_dgcg .Append (_baaab );if _bgeaa ._bfaec !=nil {_bgeaa ._bfaec .PdfObject =_dgcg ;return _bgeaa ._bfaec ;};return _dgcg ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_adaee *PdfOutline )GetContainingPdfObject ()_aec .PdfObject {return _adaee ._gfggef };

// ColorFromFloats returns a new PdfColor based on input color components.
func (_gaed *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_gaed .GetNumComponents (){return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcgce ,_abge :=_gaed .TintTransform .Evaluate (vals );if _abge !=nil {return nil ,_abge ;};_deeg ,_abge :=_gaed .AlternateSpace .ColorFromFloats (_gcgce );if _abge !=nil {return nil ,_abge ;};return _deeg ,nil ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_faagb *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_dgab :=RC4_128bit ;if options !=nil {_dgab =options .Algorithm ;};_ddffe :=_ecb .PermOwner ;if options !=nil {_ddffe =options .Permissions ;};var _dccde _dag .Filter ;switch _dgab {case RC4_128bit :_dccde =_dag .NewFilterV2 (16);case AES_128bit :_dccde =_dag .NewFilterAESV2 ();case AES_256bit :_dccde =_dag .NewFilterAESV3 ();default:return _g .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );};_caabd ,_caafd ,_afadbc :=_aec .PdfCryptNewEncrypt (_dccde ,userPass ,ownerPass ,_ddffe );if _afadbc !=nil {return _afadbc ;};_faagb ._dfcfa =_caabd ;if _caafd .Major !=0{_faagb .SetVersion (_caafd .Major ,_caafd .Minor );};_faagb ._abcfe =_caafd .Encrypt ;_faagb ._cbgee =_aec .MakeArray (_aec .MakeHexString (_caafd .ID0 ),_aec .MakeHexString (_caafd .ID1 ));_ebgge :=_aec .MakeIndirectObject (_caafd .Encrypt );_faagb ._befce =_ebgge ;_faagb .addObject (_ebgge );return nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cadf *PdfColorspaceSpecialPattern )ToPdfObject ()_aec .PdfObject {if _cadf .UnderlyingCS ==nil {return _aec .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_efae :=_aec .MakeArray (_aec .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_efae .Append (_cadf .UnderlyingCS .ToPdfObject ());if _cadf ._eeagb !=nil {_cadf ._eeagb .PdfObject =_efae ;return _cadf ._eeagb ;};return _efae ;};func (_edgc *pdfFontType0 )baseFields ()*fontCommon {return &_edgc .fontCommon };func (_edcfa *PdfWriter )updateObjectNumbers (){_gddfd :=_edcfa .ObjNumOffset ;_aefbg :=0;for _ ,_dfebac :=range _edcfa ._begcc {_ddcf :=int64 (_aefbg +1+_gddfd );_dcfbdb :=true ;if _edcfa ._cgcga {if _bgdeb ,_ceedfa :=_edcfa ._gbcbf [_dfebac ];_ceedfa {_ddcf =_bgdeb ;_dcfbdb =false ;};};switch _gecdf :=_dfebac .(type ){case *_aec .PdfIndirectObject :_gecdf .ObjectNumber =_ddcf ;_gecdf .GenerationNumber =0;case *_aec .PdfObjectStream :_gecdf .ObjectNumber =_ddcf ;_gecdf .GenerationNumber =0;case *_aec .PdfObjectStreams :_gecdf .ObjectNumber =_ddcf ;_gecdf .GenerationNumber =0;default:_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_gecdf );continue ;};if _dcfbdb {_aefbg ++;};};_aegdc :=func (_dfbbb _aec .PdfObject )int64 {switch _feaba :=_dfbbb .(type ){case *_aec .PdfIndirectObject :return _feaba .ObjectNumber ;case *_aec .PdfObjectStream :return _feaba .ObjectNumber ;case *_aec .PdfObjectStreams :return _feaba .ObjectNumber ;};return 0;};_dd .SliceStable (_edcfa ._begcc ,func (_cgbbe ,_gfea int )bool {return _aegdc (_edcfa ._begcc [_cgbbe ])< _aegdc (_edcfa ._begcc [_gfea ])});};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_aedf *BorderStyle )GetPdfName ()string {switch *_aedf {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";};return "";};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_edbf *VRI )ToPdfObject ()*_aec .PdfObjectDictionary {_ffgga :=_aec .MakeDict ();_ffgga .SetIfNotNil (_aec .PdfObjectName ("\u0043\u0065\u0072\u0074"),_bccce (_edbf .Cert ));_ffgga .SetIfNotNil (_aec .PdfObjectName ("\u004f\u0043\u0053\u0050"),_bccce (_edbf .OCSP ));_ffgga .SetIfNotNil (_aec .PdfObjectName ("\u0043\u0052\u004c"),_bccce (_edbf .CRL ));_ffgga .SetIfNotNil ("\u0054\u0055",_edbf .TU );_ffgga .SetIfNotNil ("\u0054\u0053",_edbf .TS );return _ffgga ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_egcc *PdfColorspaceDeviceN )GetNumComponents ()int {return _egcc .ColorantNames .Len ()};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _aec .PdfObject ;Popup *PdfAnnotationPopup ;CA _aec .PdfObject ;RC _aec .PdfObject ;CreationDate _aec .PdfObject ;IRT _aec .PdfObject ;Subj _aec .PdfObject ;RT _aec .PdfObject ;IT _aec .PdfObject ;ExData _aec .PdfObject ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_fgbgd *pdfCIDFontType0 )ToPdfObject ()_aec .PdfObject {return _aec .MakeNull ()};

// ToPdfObject implements interface PdfModel.
func (_adge *PdfAnnotationPolyLine )ToPdfObject ()_aec .PdfObject {_adge .PdfAnnotation .ToPdfObject ();_fdc :=_adge ._bcce ;_fegf :=_fdc .PdfObject .(*_aec .PdfObjectDictionary );_adge .PdfAnnotationMarkup .appendToPdfDictionary (_fegf );_fegf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));_fegf .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_adge .Vertices );_fegf .SetIfNotNil ("\u004c\u0045",_adge .LE );_fegf .SetIfNotNil ("\u0042\u0053",_adge .BS );_fegf .SetIfNotNil ("\u0049\u0043",_adge .IC );_fegf .SetIfNotNil ("\u0042\u0045",_adge .BE );_fegf .SetIfNotNil ("\u0049\u0054",_adge .IT );_fegf .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_adge .Measure );return _fdc ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_ddead []byte )(_dabgg int ,_aebac error );};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _d .Time ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_ccga *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_aec .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abga ,_acaa :=_aec .GetNumbersAsFloat (objects );if _acaa !=nil {return nil ,_acaa ;};return _ccga .ColorFromFloats (_abga );};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_deaf *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_adfb *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_eaee *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// ToPdfObject implements interface PdfModel.
func (_ag *PdfActionHide )ToPdfObject ()_aec .PdfObject {_ag .PdfAction .ToPdfObject ();_gec :=_ag ._gf ;_bc :=_gec .PdfObject .(*_aec .PdfObjectDictionary );_bc .SetIfNotNil ("\u0053",_aec .MakeName (string (ActionTypeHide )));_bc .SetIfNotNil ("\u0054",_ag .T );_bc .SetIfNotNil ("\u0048",_ag .H );return _gec ;};func _bedbc (_ggfb _ge .StdFont )pdfFontSimple {_caeb :=_ggfb .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_daed :"\u0054\u0079\u0070e\u0031",_ecbb :_ggfb .Name ()},_bgcg :_ggfb .GetMetricsTable (),_eacae :&PdfFontDescriptor {FontName :_aec .MakeName (string (_caeb .Name )),FontFamily :_aec .MakeName (_caeb .Family ),FontWeight :_aec .MakeFloat (float64 (_caeb .Weight )),Flags :_aec .MakeInteger (int64 (_caeb .Flags )),FontBBox :_aec .MakeArrayFromFloats (_caeb .BBox [:]),ItalicAngle :_aec .MakeFloat (_caeb .ItalicAngle ),Ascent :_aec .MakeFloat (_caeb .Ascent ),Descent :_aec .MakeFloat (_caeb .Descent ),CapHeight :_aec .MakeFloat (_caeb .CapHeight ),XHeight :_aec .MakeFloat (_caeb .XHeight ),StemV :_aec .MakeFloat (_caeb .StemV ),StemH :_aec .MakeFloat (_caeb .StemH )},_gfeg :_ggfb .Encoder ()};};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_bebbd ,_bddf :=_ge .NewStdFontByName (HelveticaName );if !_bddf {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");};_bacab :=_bedbc (_bebbd );return &PdfFont {_gaga :&_bacab };};

// ToPdfObject implements interface PdfModel.
func (_gdbb *PdfAnnotationStamp )ToPdfObject ()_aec .PdfObject {_gdbb .PdfAnnotation .ToPdfObject ();_caccf :=_gdbb ._bcce ;_ffcd :=_caccf .PdfObject .(*_aec .PdfObjectDictionary );_gdbb .PdfAnnotationMarkup .appendToPdfDictionary (_ffcd );_ffcd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0053\u0074\u0061m\u0070"));_ffcd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gdbb .Name );return _caccf ;};func (_bacd *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};func _aeaad (_effde *_aec .PdfObjectDictionary )(*PdfShadingType7 ,error ){_aagfd :=PdfShadingType7 {};_ccacd :=_effde .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _ccacd ==nil {_de .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_efffb ,_ddegdb :=_ccacd .(*_aec .PdfObjectInteger );if !_ddegdb {_de .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ccacd );return nil ,_aec .ErrTypeError ;};_aagfd .BitsPerCoordinate =_efffb ;_ccacd =_effde .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ccacd ==nil {_de .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_efffb ,_ddegdb =_ccacd .(*_aec .PdfObjectInteger );if !_ddegdb {_de .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ccacd );return nil ,_aec .ErrTypeError ;};_aagfd .BitsPerComponent =_efffb ;_ccacd =_effde .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _ccacd ==nil {_de .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_efffb ,_ddegdb =_ccacd .(*_aec .PdfObjectInteger );if !_ddegdb {_de .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ccacd );return nil ,_aec .ErrTypeError ;};_aagfd .BitsPerComponent =_efffb ;_ccacd =_effde .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ccacd ==nil {_de .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_dfae ,_ddegdb :=_ccacd .(*_aec .PdfObjectArray );if !_ddegdb {_de .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ccacd );return nil ,_aec .ErrTypeError ;};_aagfd .Decode =_dfae ;if _gccag :=_effde .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_gccag !=nil {_aagfd .Function =[]PdfFunction {};if _fffdd ,_eedbg :=_gccag .(*_aec .PdfObjectArray );_eedbg {for _ ,_dcbe :=range _fffdd .Elements (){_cfcb ,_fffdc :=_cgefb (_dcbe );if _fffdc !=nil {_de .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fffdc );return nil ,_fffdc ;};_aagfd .Function =append (_aagfd .Function ,_cfcb );};}else {_ggfcb ,_cfdbc :=_cgefb (_gccag );if _cfdbc !=nil {_de .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cfdbc );return nil ,_cfdbc ;};_aagfd .Function =append (_aagfd .Function ,_ggfcb );};};return &_aagfd ,nil ;};func (_cbae *DSS )generateHashMap (_gbff []*_aec .PdfObjectStream )(map[string ]*_aec .PdfObjectStream ,error ){_fffc :=map[string ]*_aec .PdfObjectStream {};for _ ,_adfcf :=range _gbff {_dbeb ,_ecgc :=_aec .DecodeStream (_adfcf );if _ecgc !=nil {return nil ,_ecgc ;};_ebcff ,_ecgc :=_cagcgd (_dbeb );if _ecgc !=nil {return nil ,_ecgc ;};_fffc [string (_ebcff )]=_adfcf ;};return _fffc ,nil ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_cbef *LTV )EnableByName (name string ,extraCerts []*_ad .Certificate )error {_gbba :=_cbef ._bgeba ._aea .AcroForm ;for _ ,_gdbcd :=range _gbba .AllFields (){_cdgcf ,_ :=_gdbcd .GetContext ().(*PdfFieldSignature );if _cdgcf ==nil {continue ;};if _aeddc :=_cdgcf .PartialName ();_aeddc !=name {continue ;};return _cbef .Enable (_cdgcf .V ,extraCerts );};return nil ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_cdgcc *PdfPageResources )GetExtGState (keyName _aec .PdfObjectName )(_aec .PdfObject ,bool ){if _cdgcc .ExtGState ==nil {return nil ,false ;};_ddeab ,_ggbe :=_aec .TraceToDirectObject (_cdgcc .ExtGState ).(*_aec .PdfObjectDictionary );if !_ggbe {_de .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cdgcc .ExtGState );return nil ,false ;};if _acgac :=_ddeab .Get (keyName );_acgac !=nil {return _acgac ,true ;};return nil ,false ;};

// GetNumComponents returns the number of color components.
func (_bgdf *PdfColorspaceICCBased )GetNumComponents ()int {return _bgdf .N };func _fedfc (_ffae *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_ffae }};

// Evaluate runs the function on the passed in slice and returns the results.
func (_bgcf *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_de .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ed .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return nil ,_ed .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// ToPdfObject implements interface PdfModel.
func (_bcb *PdfAnnotationSound )ToPdfObject ()_aec .PdfObject {_bcb .PdfAnnotation .ToPdfObject ();_edff :=_bcb ._bcce ;_ecaa :=_edff .PdfObject .(*_aec .PdfObjectDictionary );_bcb .PdfAnnotationMarkup .appendToPdfDictionary (_ecaa );_ecaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0053\u006f\u0075n\u0064"));_ecaa .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_bcb .Sound );_ecaa .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bcb .Name );return _edff ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_aabab *PdfPageResources )HasXObjectByName (keyName _aec .PdfObjectName )bool {_cecee ,_ :=_aabab .GetXObjectByName (keyName );return _cecee !=nil ;};func _afbef (_eafe _aec .PdfObject ,_daaae *fontCommon )(*_fa .CMap ,error ){_bagd ,_acbbbf :=_aec .GetStream (_eafe );if !_acbbbf {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_eafe );return nil ,_aec .ErrTypeError ;};_dgcb ,_baff :=_aec .DecodeStream (_bagd );if _baff !=nil {return nil ,_baff ;};_cbgbd ,_baff :=_fa .LoadCmapFromData (_dgcb ,!_daaae .isCIDFont ());if _baff !=nil {_de .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_bagd .ObjectNumber ,_baff );};return _cbgbd ,_baff ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// ToInteger convert to an integer format.
func (_ggad *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_gabb :=_dc .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gabb *_ggad .A ()),uint32 (_gabb *_ggad .B ()),uint32 (_gabb *_ggad .C ())};};func _ddcbf (_dgeg _aec .PdfObject )(*fontFile ,error ){_de .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_dgeg );_gagd :=&fontFile {};_dgeg =_aec .TraceToDirectObject (_dgeg );_bbbad ,_dfbcc :=_dgeg .(*_aec .PdfObjectStream );if !_dfbcc {_de .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_dgeg );return nil ,_aec .ErrTypeError ;};_feeeg :=_bbbad .PdfObjectDictionary ;_efcc ,_aefad :=_aec .DecodeStream (_bbbad );if _aefad !=nil {return nil ,_aefad ;};_dcdge ,_dfbcc :=_aec .GetNameVal (_feeeg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_dfbcc {_gagd ._facae =_dcdge ;if _dcdge =="\u0054\u0079\u0070\u0065\u0031\u0043"{_de .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");return nil ,ErrType1CFontNotSupported ;};};_ffce ,_ :=_aec .GetIntVal (_feeeg .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_bacge ,_ :=_aec .GetIntVal (_feeeg .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _ffce > len (_efcc ){_ffce =len (_efcc );};if _ffce +_bacge > len (_efcc ){_bacge =len (_efcc )-_ffce ;};_bdff :=_efcc [:_ffce ];var _eceaf []byte ;if _bacge > 0{_eceaf =_efcc [_ffce :_ffce +_bacge ];};if _ffce > 0&&_bacge > 0{_fagge :=_gagd .loadFromSegments (_bdff ,_eceaf );if _fagge !=nil {return nil ,_fagge ;};};return _gagd ,nil ;};func (_aaefa *PdfReader )newPdfPageFromDict (_cfdec *_aec .PdfObjectDictionary )(*PdfPage ,error ){_ccfgb :=NewPdfPage ();_ccfgb ._defa =_cfdec ;_afdac :=*_cfdec ;_fbab ,_acbce :=_afdac .Get ("\u0054\u0079\u0070\u0065").(*_aec .PdfObjectName );if !_acbce {return nil ,_ed .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_fbab !="\u0050\u0061\u0067\u0065"{return nil ,_ed .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _ggfba :=_afdac .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_ggfba !=nil {_ccfgb .Parent =_ggfba ;};if _eegbg :=_afdac .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_eegbg !=nil {_gbgag ,_bcdca :=_aec .GetString (_eegbg );if !_bcdca {return nil ,_ed .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};_agccb ,_afgdf :=NewPdfDate (_gbgag .Str ());if _afgdf !=nil {return nil ,_afgdf ;};_ccfgb .LastModified =&_agccb ;};if _gdab :=_afdac .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gdab !=nil &&!_aec .IsNullObject (_gdab ){_cfgde ,_cccba :=_aec .GetDict (_gdab );if !_cccba {return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gdab );};var _gfeb error ;_ccfgb .Resources ,_gfeb =NewPdfPageResourcesFromDict (_cfgde );if _gfeb !=nil {return nil ,_gfeb ;};}else {_afbde ,_bcad :=_ccfgb .getParentResources ();if _bcad !=nil {return nil ,_bcad ;};if _afbde ==nil {_afbde =NewPdfPageResources ();};_ccfgb .Resources =_afbde ;};if _bcfe :=_afdac .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_bcfe !=nil {_dddfa ,_fbbeg :=_aec .GetArray (_bcfe );if !_fbbeg {return nil ,_ed .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _gcdce error ;_ccfgb .MediaBox ,_gcdce =NewPdfRectangle (*_dddfa );if _gcdce !=nil {return nil ,_gcdce ;};};if _bcdda :=_afdac .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_bcdda !=nil {_eaeea ,_bfcac :=_aec .GetArray (_bcdda );if !_bfcac {return nil ,_ed .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _ccaea error ;_ccfgb .CropBox ,_ccaea =NewPdfRectangle (*_eaeea );if _ccaea !=nil {return nil ,_ccaea ;};};if _cgebf :=_afdac .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_cgebf !=nil {_caab ,_efebf :=_aec .GetArray (_cgebf );if !_efebf {return nil ,_ed .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _fbbga error ;_ccfgb .BleedBox ,_fbbga =NewPdfRectangle (*_caab );if _fbbga !=nil {return nil ,_fbbga ;};};if _ccab :=_afdac .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_ccab !=nil {_cbee ,_fedb :=_aec .GetArray (_ccab );if !_fedb {return nil ,_ed .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _gffa error ;_ccfgb .TrimBox ,_gffa =NewPdfRectangle (*_cbee );if _gffa !=nil {return nil ,_gffa ;};};if _bccf :=_afdac .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_bccf !=nil {_cabea ,_fgab :=_aec .GetArray (_bccf );if !_fgab {return nil ,_ed .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _cgbbg error ;_ccfgb .ArtBox ,_cgbbg =NewPdfRectangle (*_cabea );if _cgbbg !=nil {return nil ,_cgbbg ;};};if _adbaa :=_afdac .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_adbaa !=nil {_ccfgb .BoxColorInfo =_adbaa ;};if _acag :=_afdac .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_acag !=nil {_ccfgb .Contents =_acag ;};if _bccab :=_afdac .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_bccab !=nil {_fagfg ,_gffag :=_aec .GetInt (_bccab );if !_gffag {return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};_ffaag :=int64 (*_fagfg );_ccfgb .Rotate =&_ffaag ;};if _eaeag :=_afdac .Get ("\u0047\u0072\u006fu\u0070");_eaeag !=nil {_ccfgb .Group =_eaeag ;};if _gfbec :=_afdac .Get ("\u0054\u0068\u0075m\u0062");_gfbec !=nil {_ccfgb .Thumb =_gfbec ;};if _ggeec :=_afdac .Get ("\u0042");_ggeec !=nil {_ccfgb .B =_ggeec ;};if _eaef :=_afdac .Get ("\u0044\u0075\u0072");_eaef !=nil {_ccfgb .Dur =_eaef ;};if _eacfgd :=_afdac .Get ("\u0054\u0072\u0061n\u0073");_eacfgd !=nil {_ccfgb .Trans =_eacfgd ;};if _agcba :=_afdac .Get ("\u0041\u0041");_agcba !=nil {_ccfgb .AA =_agcba ;};if _ffcee :=_afdac .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ffcee !=nil {_ccfgb .Metadata =_ffcee ;};if _afbdd :=_afdac .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_afbdd !=nil {_ccfgb .PieceInfo =_afbdd ;};if _gfff :=_afdac .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_gfff !=nil {_ccfgb .StructParents =_gfff ;};if _gaecf :=_afdac .Get ("\u0049\u0044");_gaecf !=nil {_ccfgb .ID =_gaecf ;};if _fbeb :=_afdac .Get ("\u0050\u005a");_fbeb !=nil {_ccfgb .PZ =_fbeb ;};if _eefeb :=_afdac .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");_eefeb !=nil {_ccfgb .SeparationInfo =_eefeb ;};if _adbg :=_afdac .Get ("\u0054\u0061\u0062\u0073");_adbg !=nil {_ccfgb .Tabs =_adbg ;};if _bfdae :=_afdac .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");_bfdae !=nil {_ccfgb .TemplateInstantiated =_bfdae ;};if _gdeb :=_afdac .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_gdeb !=nil {_ccfgb .PresSteps =_gdeb ;};if _degbf :=_afdac .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_degbf !=nil {_ccfgb .UserUnit =_degbf ;};if _aagbc :=_afdac .Get ("\u0056\u0050");_aagbc !=nil {_ccfgb .VP =_aagbc ;};if _eebf :=_afdac .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_eebf !=nil {_ccfgb .Annots =_eebf ;};_ccfgb ._eegeg =_aaefa ;return _ccfgb ,nil ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_gfcg *PdfFont )SubsetRegistered ()error {switch _babfe :=_gfcg ._gaga .(type ){case *pdfFontType0 :_abccbd :=_babfe .subsetRegistered ();if _abccbd !=nil {_de .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_abccbd );return _abccbd ;};if _babfe ._aead !=nil {if _babfe ._cdab !=nil {_babfe ._cdab .ToPdfObject ();};_babfe .ToPdfObject ();};default:_de .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_babfe );};return nil ;};func _debfd ()string {_aecee .Lock ();defer _aecee .Unlock ();if len (_eeaag )> 0{return _eeaag ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_ccbd *PdfColorspaceCalRGB )ToPdfObject ()_aec .PdfObject {_faffg :=&_aec .PdfObjectArray {};_faffg .Append (_aec .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_eadd :=_aec .MakeDict ();if _ccbd .WhitePoint !=nil {_cfbb :=_aec .MakeArray (_aec .MakeFloat (_ccbd .WhitePoint [0]),_aec .MakeFloat (_ccbd .WhitePoint [1]),_aec .MakeFloat (_ccbd .WhitePoint [2]));_eadd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_cfbb );}else {_de .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");};if _ccbd .BlackPoint !=nil {_eeb :=_aec .MakeArray (_aec .MakeFloat (_ccbd .BlackPoint [0]),_aec .MakeFloat (_ccbd .BlackPoint [1]),_aec .MakeFloat (_ccbd .BlackPoint [2]));_eadd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_eeb );};if _ccbd .Gamma !=nil {_baaa :=_aec .MakeArray (_aec .MakeFloat (_ccbd .Gamma [0]),_aec .MakeFloat (_ccbd .Gamma [1]),_aec .MakeFloat (_ccbd .Gamma [2]));_eadd .Set ("\u0047\u0061\u006dm\u0061",_baaa );};if _ccbd .Matrix !=nil {_gdfc :=_aec .MakeArray (_aec .MakeFloat (_ccbd .Matrix [0]),_aec .MakeFloat (_ccbd .Matrix [1]),_aec .MakeFloat (_ccbd .Matrix [2]),_aec .MakeFloat (_ccbd .Matrix [3]),_aec .MakeFloat (_ccbd .Matrix [4]),_aec .MakeFloat (_ccbd .Matrix [5]),_aec .MakeFloat (_ccbd .Matrix [6]),_aec .MakeFloat (_ccbd .Matrix [7]),_aec .MakeFloat (_ccbd .Matrix [8]));_eadd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gdfc );};_faffg .Append (_eadd );if _ccbd ._cgfe !=nil {_ccbd ._cgfe .PdfObject =_faffg ;return _ccbd ._cgfe ;};return _faffg ;};func (_dcbbg *PdfWriter )addObject (_ggbee _aec .PdfObject )bool {_abadf :=_dcbbg .hasObject (_ggbee );if !_abadf {_afdd :=_aec .ResolveReferencesDeep (_ggbee ,_dcbbg ._aegg );if _afdd !=nil {_de .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_afdd );};_dcbbg ._begcc =append (_dcbbg ._begcc ,_ggbee );_dcbbg ._gbfef [_ggbee ]=struct{}{};return true ;};return false ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _aec .PdfObject ;Movie _aec .PdfObject ;A _aec .PdfObject ;};

// String returns a string representation of what flags are set.
func (_ddce FieldFlag )String ()string {_abeaf :="";if _ddce ==FieldFlagClear {_abeaf ="\u0043\u006c\u0065a\u0072";return _abeaf ;};if _ddce &FieldFlagReadOnly > 0{_abeaf +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _ddce &FieldFlagRequired > 0{_abeaf +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _ddce &FieldFlagNoExport > 0{_abeaf +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _ddce &FieldFlagNoToggleToOff > 0{_abeaf +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _ddce &FieldFlagRadio > 0{_abeaf +="\u007c\u0052\u0061\u0064\u0069\u006f";};if _ddce &FieldFlagPushbutton > 0{_abeaf +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _ddce &FieldFlagRadiosInUnision > 0{_abeaf +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _ddce &FieldFlagMultiline > 0{_abeaf +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";};if _ddce &FieldFlagPassword > 0{_abeaf +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _ddce &FieldFlagFileSelect > 0{_abeaf +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _ddce &FieldFlagDoNotScroll > 0{_abeaf +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";};if _ddce &FieldFlagComb > 0{_abeaf +="\u007c\u0043\u006fm\u0062";};if _ddce &FieldFlagRichText > 0{_abeaf +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _ddce &FieldFlagDoNotSpellCheck > 0{_abeaf +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";};if _ddce &FieldFlagCombo > 0{_abeaf +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _ddce &FieldFlagEdit > 0{_abeaf +="\u007c\u0045\u0064i\u0074";};if _ddce &FieldFlagSort > 0{_abeaf +="\u007c\u0053\u006fr\u0074";};if _ddce &FieldFlagMultiSelect > 0{_abeaf +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";};if _ddce &FieldFlagCommitOnSelChange > 0{_abeaf +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _ee .Trim (_abeaf ,"\u007c");};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_aecee .Lock ();defer _aecee .Unlock ();_fagad =producer };func (_cbfa *PdfSignature )extractChainFromCert ()([]*_ad .Certificate ,error ){var _afaed *_aec .PdfObjectArray ;switch _bcccf :=_cbfa .Cert .(type ){case *_aec .PdfObjectString :_afaed =_aec .MakeArray (_bcccf );case *_aec .PdfObjectArray :_afaed =_bcccf ;default:return nil ,_g .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_bcccf );};var _dccdf _add .Buffer ;for _ ,_cdfdb :=range _afaed .Elements (){_fecbc ,_afffg :=_aec .GetString (_cdfdb );if !_afffg {return nil ,_g .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_cdfdb );};if _ ,_fdfac :=_dccdf .Write (_fecbc .Bytes ());_fdfac !=nil {return nil ,_fdfac ;};};return _ad .ParseCertificates (_dccdf .Bytes ());};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_fgfd *Image )AlphaMap (mapFunc AlphaMapFunc ){for _gfcfe ,_egdc :=range _fgfd ._aaaa {_fgfd ._aaaa [_gfcfe ]=mapFunc (_egdc );};};func _geaa (_gdfcg _aec .PdfObject )(*PdfPageResourcesColorspaces ,error ){_gbgcb :=&PdfPageResourcesColorspaces {};if _cfbd ,_ggcb :=_gdfcg .(*_aec .PdfIndirectObject );_ggcb {_gbgcb ._ccgag =_cfbd ;_gdfcg =_cfbd .PdfObject ;};_dggg ,_dbga :=_aec .GetDict (_gdfcg );if !_dbga {return nil ,_ed .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_gbgcb .Names =[]string {};_gbgcb .Colorspaces =map[string ]PdfColorspace {};for _ ,_eece :=range _dggg .Keys (){_edeb :=_dggg .Get (_eece );_gbgcb .Names =append (_gbgcb .Names ,string (_eece ));_dagce ,_ceeg :=NewPdfColorspaceFromPdfObject (_edeb );if _ceeg !=nil {return nil ,_ceeg ;};_gbgcb .Colorspaces [string (_eece )]=_dagce ;};return _gbgcb ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dgfb pdfFontType0 )GetRuneMetrics (r rune )(_ge .CharMetrics ,bool ){if _dgfb .DescendantFont ==nil {_de .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_dgfb );return _ge .CharMetrics {},false ;};return _dgfb .DescendantFont .GetRuneMetrics (r );};

// GetBorderWidth returns the border style's width.
func (_dfb *PdfBorderStyle )GetBorderWidth ()float64 {if _dfb .W ==nil {return 1;};return *_dfb .W ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_eegec *PdfPageResources )SetColorspaceByName (keyName _aec .PdfObjectName ,cs PdfColorspace )error {_gbgga ,_facbed :=_eegec .GetColorspaces ();if _facbed !=nil {_de .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_facbed );return _facbed ;};if _gbgga ==nil {_gbgga =NewPdfPageResourcesColorspaces ();_eegec .SetColorSpace (_gbgga );};_gbgga .Set (keyName ,cs );return nil ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_cbeg *PdfFieldButton )IsCheckbox ()bool {return _cbeg .GetType ()==ButtonTypeCheckbox };

// B returns the value of the B component of the color.
func (_gdfe *PdfColorLab )B ()float64 {return _gdfe [2]};

// ToPdfObject implements interface PdfModel.
func (_cbg *PdfAnnotationCaret )ToPdfObject ()_aec .PdfObject {_cbg .PdfAnnotation .ToPdfObject ();_deccc :=_cbg ._bcce ;_bfd :=_deccc .PdfObject .(*_aec .PdfObjectDictionary );_cbg .PdfAnnotationMarkup .appendToPdfDictionary (_bfd );_bfd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0043\u0061\u0072e\u0074"));_bfd .SetIfNotNil ("\u0052\u0044",_cbg .RD );_bfd .SetIfNotNil ("\u0053\u0079",_cbg .Sy );return _deccc ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_gdfff *PdfFieldButton )SetType (btype ButtonType ){_fcgb :=uint32 (0);if _gdfff .Ff !=nil {_fcgb =uint32 (*_gdfff .Ff );};switch btype {case ButtonTypePush :_fcgb |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_fcgb |=FieldFlagRadio .Mask ();};_gdfff .Ff =_aec .MakeInteger (int64 (_fcgb ));};func (_fgeca *PdfWriter )addObjects (_bfcace _aec .PdfObject )error {_de .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _efccg ,_fdeadg :=_bfcace .(*_aec .PdfIndirectObject );_fdeadg {_de .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_de .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_bfcace ,_efccg );_de .Log .Trace ("\u002d\u0020\u0025\u0073",_efccg .PdfObject );if _fgeca .addObject (_efccg ){_cbccdd :=_fgeca .addObjects (_efccg .PdfObject );if _cbccdd !=nil {return _cbccdd ;};};return nil ;};if _bfbeb ,_ebagcb :=_bfcace .(*_aec .PdfObjectStream );_ebagcb {_de .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_de .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_bfcace ,_bfcace );if _fgeca .addObject (_bfbeb ){_eaaff :=_fgeca .addObjects (_bfbeb .PdfObjectDictionary );if _eaaff !=nil {return _eaaff ;};};return nil ;};if _agfga ,_bgace :=_bfcace .(*_aec .PdfObjectDictionary );_bgace {_de .Log .Trace ("\u0044\u0069\u0063\u0074");_de .Log .Trace ("\u002d\u0020\u0025\u0073",_bfcace );for _ ,_acddd :=range _agfga .Keys (){_eefc :=_agfga .Get (_acddd );if _ddebe ,_ffgc :=_eefc .(*_aec .PdfObjectReference );_ffgc {_eefc =_ddebe .Resolve ();_agfga .Set (_acddd ,_eefc );};if _acddd !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _egdcg :=_fgeca .addObjects (_eefc );_egdcg !=nil {return _egdcg ;};}else {if _ ,_decd :=_eefc .(*_aec .PdfObjectNull );_decd {continue ;};if _beda :=_fgeca .hasObject (_eefc );!_beda {_de .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_eefc ,_eefc ,_eefc );_fgeca ._cddcc [_eefc ]=append (_fgeca ._cddcc [_eefc ],_agfga );};};};return nil ;};if _bbee ,_ebdgd :=_bfcace .(*_aec .PdfObjectArray );_ebdgd {_de .Log .Trace ("\u0041\u0072\u0072a\u0079");_de .Log .Trace ("\u002d\u0020\u0025\u0073",_bfcace );if _bbee ==nil {return _ed .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};for _bffcd ,_ccbad :=range _bbee .Elements (){if _bbfbb ,_eeddg :=_ccbad .(*_aec .PdfObjectReference );_eeddg {_ccbad =_bbfbb .Resolve ();_bbee .Set (_bffcd ,_ccbad );};if _daace :=_fgeca .addObjects (_ccbad );_daace !=nil {return _daace ;};};return nil ;};if _ ,_fddf :=_bfcace .(*_aec .PdfObjectReference );_fddf {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_bfcace );return _ed .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};func (_fcg *PdfReader )newPdfActionJavaScriptFromDict (_bdf *_aec .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_bdf .Get ("\u004a\u0053")},nil ;};var ImageHandling ImageHandler =DefaultImageHandler {};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_ggg :=NewPdfAnnotation ();_cbe :=&PdfAnnotationInk {};_cbe .PdfAnnotation =_ggg ;_cbe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ggg .SetContext (_cbe );return _cbe ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_ggede *PdfPageResources )GenerateXObjectName ()_aec .PdfObjectName {_adfba :=1;for {_agabd :=_aec .MakeName (_g .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_adfba ));if !_ggede .HasXObjectByName (*_agabd ){return *_agabd ;};_adfba ++;};};func _cdddg (_afadb *_aec .PdfObjectDictionary )(*PdfShadingType5 ,error ){_fcfbb :=PdfShadingType5 {};_cgccb :=_afadb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _cgccb ==nil {_de .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_bdcbfd ,_dfcef :=_cgccb .(*_aec .PdfObjectInteger );if !_dfcef {_de .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cgccb );return nil ,_aec .ErrTypeError ;};_fcfbb .BitsPerCoordinate =_bdcbfd ;_cgccb =_afadb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cgccb ==nil {_de .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_bdcbfd ,_dfcef =_cgccb .(*_aec .PdfObjectInteger );if !_dfcef {_de .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cgccb );return nil ,_aec .ErrTypeError ;};_fcfbb .BitsPerComponent =_bdcbfd ;_cgccb =_afadb .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _cgccb ==nil {_de .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");return nil ,ErrRequiredAttributeMissing ;};_bdcbfd ,_dfcef =_cgccb .(*_aec .PdfObjectInteger );if !_dfcef {_de .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cgccb );return nil ,_aec .ErrTypeError ;};_fcfbb .VerticesPerRow =_bdcbfd ;_cgccb =_afadb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cgccb ==nil {_de .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_ggda ,_dfcef :=_cgccb .(*_aec .PdfObjectArray );if !_dfcef {_de .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cgccb );return nil ,_aec .ErrTypeError ;};_fcfbb .Decode =_ggda ;if _gddac :=_afadb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_gddac !=nil {_fcfbb .Function =[]PdfFunction {};if _dgbea ,_dbac :=_gddac .(*_aec .PdfObjectArray );_dbac {for _ ,_dfde :=range _dgbea .Elements (){_ggcba ,_eceae :=_cgefb (_dfde );if _eceae !=nil {_de .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eceae );return nil ,_eceae ;};_fcfbb .Function =append (_fcfbb .Function ,_ggcba );};}else {_bgdff ,_gbee :=_cgefb (_gddac );if _gbee !=nil {_de .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbee );return nil ,_gbee ;};_fcfbb .Function =append (_fcfbb .Function ,_bgdff );};};return &_fcfbb ,nil ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_dee :=NewPdfAction ();_gc :=&PdfActionRendition {};_gc .PdfAction =_dee ;_dee .SetContext (_gc );return _gc ;};

// ToPdfObject implements interface PdfModel.
func (_ege *PdfAnnotationHighlight )ToPdfObject ()_aec .PdfObject {_ege .PdfAnnotation .ToPdfObject ();_afg :=_ege ._bcce ;_eae :=_afg .PdfObject .(*_aec .PdfObjectDictionary );_ege .PdfAnnotationMarkup .appendToPdfDictionary (_eae );_eae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));_eae .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ege .QuadPoints );return _afg ;};

// ToPdfObject returns a stream object.
func (_afcac *XObjectForm )ToPdfObject ()_aec .PdfObject {_eedac :=_afcac ._fgddc ;_dbfba :=_eedac .PdfObjectDictionary ;if _afcac .Filter !=nil {_dbfba =_afcac .Filter .MakeStreamDict ();_eedac .PdfObjectDictionary =_dbfba ;};_dbfba .Set ("\u0054\u0079\u0070\u0065",_aec .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_dbfba .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u0046\u006f\u0072\u006d"));_dbfba .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_afcac .FormType );_dbfba .SetIfNotNil ("\u0042\u0042\u006f\u0078",_afcac .BBox );_dbfba .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_afcac .Matrix );if _afcac .Resources !=nil {_dbfba .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_afcac .Resources .ToPdfObject ());};_dbfba .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_afcac .Group );_dbfba .SetIfNotNil ("\u0052\u0065\u0066",_afcac .Ref );_dbfba .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_afcac .MetaData );_dbfba .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_afcac .PieceInfo );_dbfba .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_afcac .LastModified );_dbfba .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_afcac .StructParent );_dbfba .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_afcac .StructParents );_dbfba .SetIfNotNil ("\u004f\u0050\u0049",_afcac .OPI );_dbfba .SetIfNotNil ("\u004f\u0043",_afcac .OC );_dbfba .SetIfNotNil ("\u004e\u0061\u006d\u0065",_afcac .Name );_dbfba .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_aec .MakeInteger (int64 (len (_afcac .Stream ))));_eedac .Stream =_afcac .Stream ;return _eedac ;};

// SetName sets the `Name` field of the signature.
func (_abead *PdfSignature )SetName (name string ){_abead .Name =_aec .MakeString (name )};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_agc :=NewPdfAnnotation ();_ddd :=&PdfAnnotationCircle {};_ddd .PdfAnnotation =_agc ;_ddd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_agc .SetContext (_ddd );return _ddd ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_aadb *PdfFieldButton )IsPush ()bool {return _aadb .GetType ()==ButtonTypePush };func (_bddd *PdfAppender )updateObjectsDeep (_abf _aec .PdfObject ,_eedb map[_aec .PdfObject ]struct{}){if _eedb ==nil {_eedb =map[_aec .PdfObject ]struct{}{};};if _ ,_cgcd :=_eedb [_abf ];_cgcd ||_abf ==nil {return ;};_eedb [_abf ]=struct{}{};_bbec :=_aec .ResolveReferencesDeep (_abf ,_bddd ._ceec );if _bbec !=nil {_de .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbec );};switch _agac :=_abf .(type ){case *_aec .PdfIndirectObject :switch {case _agac .GetParser ()==_bddd ._aea ._adecd :return ;case _agac .GetParser ()==_bddd .Reader ._adecd :_fegd ,_ :=_bddd ._aea .GetIndirectObjectByNumber (int (_agac .ObjectNumber ));_cffg ,_dfcc :=_fegd .(*_aec .PdfIndirectObject );if _dfcc &&_cffg !=nil {if _cffg .PdfObject !=_agac .PdfObject &&_cffg .PdfObject .WriteString ()!=_agac .PdfObject .WriteString (){_bddd .addNewObject (_abf );_bddd ._gga [_abf ]=_agac .ObjectNumber ;};};default:_bddd .addNewObject (_abf );};_bddd .updateObjectsDeep (_agac .PdfObject ,_eedb );case *_aec .PdfObjectArray :for _ ,_gced :=range _agac .Elements (){_bddd .updateObjectsDeep (_gced ,_eedb );};case *_aec .PdfObjectDictionary :for _ ,_ecd :=range _agac .Keys (){_bddd .updateObjectsDeep (_agac .Get (_ecd ),_eedb );};case *_aec .PdfObjectStreams :if _agac .GetParser ()!=_bddd ._aea ._adecd {for _ ,_gbcb :=range _agac .Elements (){_bddd .updateObjectsDeep (_gbcb ,_eedb );};};case *_aec .PdfObjectStream :switch {case _agac .GetParser ()==_bddd ._aea ._adecd :return ;case _agac .GetParser ()==_bddd .Reader ._adecd :if _bece ,_cbcb :=_bddd ._aea ._adecd .LookupByReference (_agac .PdfObjectReference );_cbcb ==nil {var _gfag bool ;if _cbgd ,_geda :=_aec .GetStream (_bece );_geda &&_add .Equal (_cbgd .Stream ,_agac .Stream ){_gfag =true ;};if _ggdcb ,_cafc :=_aec .GetDict (_bece );_gfag &&_cafc {_gfag =_ggdcb .WriteString ()==_agac .PdfObjectDictionary .WriteString ();};if _gfag {return ;};};if _agac .ObjectNumber !=0{_bddd ._gga [_abf ]=_agac .ObjectNumber ;};default:if _ ,_efeb :=_bddd ._bdcg [_abf ];!_efeb {_bddd .addNewObject (_abf );};};_bddd .updateObjectsDeep (_agac .PdfObjectDictionary ,_eedb );};};func (_gecfd *PdfReader )newPdfAnnotationRedactFromDict (_edc *_aec .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_cbfb :=PdfAnnotationRedact {};_debg ,_bcd :=_gecfd .newPdfAnnotationMarkupFromDict (_edc );if _bcd !=nil {return nil ,_bcd ;};_cbfb .PdfAnnotationMarkup =_debg ;_cbfb .QuadPoints =_edc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_cbfb .IC =_edc .Get ("\u0049\u0043");_cbfb .RO =_edc .Get ("\u0052\u004f");_cbfb .OverlayText =_edc .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_cbfb .Repeat =_edc .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_cbfb .DA =_edc .Get ("\u0044\u0041");_cbfb .Q =_edc .Get ("\u0051");return &_cbfb ,nil ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _aec .PdfObject ;Sy _aec .PdfObject ;};func (_dbd *PdfReader )newPdfAnnotationWatermarkFromDict (_ffdd *_aec .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_ffgb :=PdfAnnotationWatermark {};_ffgb .FixedPrint =_ffdd .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_ffgb ,nil ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _aec .PdfObject ;Q _aec .PdfObject ;RC _aec .PdfObject ;DS _aec .PdfObject ;CL _aec .PdfObject ;IT _aec .PdfObject ;BE _aec .PdfObject ;RD _aec .PdfObject ;BS _aec .PdfObject ;LE _aec .PdfObject ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_aga *PdfAnnotation )ToPdfObject ()_aec .PdfObject {_caaf :=_aga ._bcce ;_aac :=_caaf .PdfObject .(*_aec .PdfObjectDictionary );_aac .Clear ();_aac .Set ("\u0054\u0079\u0070\u0065",_aec .MakeName ("\u0041\u006e\u006eo\u0074"));_aac .SetIfNotNil ("\u0052\u0065\u0063\u0074",_aga .Rect );_aac .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_aga .Contents );_aac .SetIfNotNil ("\u0050",_aga .P );_aac .SetIfNotNil ("\u004e\u004d",_aga .NM );_aac .SetIfNotNil ("\u004d",_aga .M );_aac .SetIfNotNil ("\u0046",_aga .F );_aac .SetIfNotNil ("\u0041\u0050",_aga .AP );_aac .SetIfNotNil ("\u0041\u0053",_aga .AS );_aac .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_aga .Border );_aac .SetIfNotNil ("\u0043",_aga .C );_aac .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_aga .StructParent );_aac .SetIfNotNil ("\u004f\u0043",_aga .OC );return _caaf ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_bcgg :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_bcgg ;};func _befdd (_fbac _aec .PdfObject )(*PdfFunctionType2 ,error ){_facgd :=&PdfFunctionType2 {};var _adef *_aec .PdfObjectDictionary ;if _ffgba ,_gagag :=_fbac .(*_aec .PdfIndirectObject );_gagag {_dddgc ,_eebb :=_ffgba .PdfObject .(*_aec .PdfObjectDictionary );if !_eebb {return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_facgd ._bacaa =_ffgba ;_adef =_dddgc ;}else if _dafcce ,_dfadg :=_fbac .(*_aec .PdfObjectDictionary );_dfadg {_adef =_dafcce ;}else {return nil ,_ed .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_de .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_adef .String ());_aecf ,_dcead :=_aec .TraceToDirectObject (_adef .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_aec .PdfObjectArray );if !_dcead {_de .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ed .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _aecf .Len ()< 0||_aecf .Len ()%2!=0{_de .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_ed .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gbcg ,_cfffe :=_aecf .ToFloat64Array ();if _cfffe !=nil {return nil ,_cfffe ;};_facgd .Domain =_gbcg ;_aecf ,_dcead =_aec .TraceToDirectObject (_adef .Get ("\u0052\u0061\u006eg\u0065")).(*_aec .PdfObjectArray );if _dcead {if _aecf .Len ()< 0||_aecf .Len ()%2!=0{return nil ,_ed .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_dbcec ,_gbec :=_aecf .ToFloat64Array ();if _gbec !=nil {return nil ,_gbec ;};_facgd .Range =_dbcec ;};_aecf ,_dcead =_aec .TraceToDirectObject (_adef .Get ("\u0043\u0030")).(*_aec .PdfObjectArray );if _dcead {_aeda ,_efaf :=_aecf .ToFloat64Array ();if _efaf !=nil {return nil ,_efaf ;};_facgd .C0 =_aeda ;};_aecf ,_dcead =_aec .TraceToDirectObject (_adef .Get ("\u0043\u0031")).(*_aec .PdfObjectArray );if _dcead {_afaff ,_dgcac :=_aecf .ToFloat64Array ();if _dgcac !=nil {return nil ,_dgcac ;};_facgd .C1 =_afaff ;};if len (_facgd .C0 )!=len (_facgd .C1 ){_de .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_aec .ErrRangeError ;};N ,_cfffe :=_aec .GetNumberAsFloat (_aec .TraceToDirectObject (_adef .Get ("\u004e")));if _cfffe !=nil {_de .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_adef .String ());return nil ,_cfffe ;};_facgd .N =N ;return _facgd ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dcgga pdfCIDFontType2 )GetCharMetrics (code _cad .CharCode )(_ge .CharMetrics ,bool ){if _fefcb ,_bdcbg :=_dcgga ._effeg [code ];_bdcbg {return _ge .CharMetrics {Wx :_fefcb },true ;};_aaaed :=rune (code );_efef ,_eface :=_dcgga ._ffgec [_aaaed ];if !_eface {_efef =int (_dcgga ._dacfb );};return _ge .CharMetrics {Wx :float64 (_efef )},true ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_efaca *PdfPageResources )GetColorspaceByName (keyName _aec .PdfObjectName )(PdfColorspace ,bool ){_dffdb ,_effdbg :=_efaca .GetColorspaces ();if _effdbg !=nil {_de .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_effdbg );return nil ,false ;};if _dffdb ==nil {return nil ,false ;};_dgef ,_gebef :=_dffdb .Colorspaces [string (keyName )];if !_gebef {return nil ,false ;};return _dgef ,true ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _aec .PdfObject ;V _aec .PdfObject ;};

// SetDecode sets the decode image float slice.
func (_dccad *Image )SetDecode (decode []float64 ){_dccad ._dbdfe =decode };

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_bdbf *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bdbf .AlternateSpace ==nil {return nil ,_ed .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};return _bdbf .AlternateSpace .ColorToRGB (color );};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _aec .StreamEncoder ;Intent _aec .PdfObject ;ImageMask _aec .PdfObject ;Mask _aec .PdfObject ;Matte _aec .PdfObject ;Decode _aec .PdfObject ;Interpolate _aec .PdfObject ;Alternatives _aec .PdfObject ;SMask _aec .PdfObject ;SMaskInData _aec .PdfObject ;Name _aec .PdfObject ;StructParent _aec .PdfObject ;ID _aec .PdfObject ;OPI _aec .PdfObject ;Metadata _aec .PdfObject ;OC _aec .PdfObject ;Stream []byte ;_deccfc *_aec .PdfObjectStream ;};

// Val returns the color value.
func (_ffbe *PdfColorDeviceGray )Val ()float64 {return float64 (*_ffbe )};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_afbg *PdfColorCalRGB )GetNumComponents ()int {return 3};type pdfCIDFontType0 struct{fontCommon ;_ffab *_aec .PdfIndirectObject ;_afbb _cad .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_aec .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _aec .PdfObject ;W _aec .PdfObject ;DW2 _aec .PdfObject ;W2 _aec .PdfObject ;_gbddf map[_cad .CharCode ]float64 ;_aefa float64 ;};func (_cfce *PdfReader )newPdfAnnotationPolygonFromDict (_aecc *_aec .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_gdff :=PdfAnnotationPolygon {};_ebaec ,_dfdg :=_cfce .newPdfAnnotationMarkupFromDict (_aecc );if _dfdg !=nil {return nil ,_dfdg ;};_gdff .PdfAnnotationMarkup =_ebaec ;_gdff .Vertices =_aecc .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_gdff .LE =_aecc .Get ("\u004c\u0045");_gdff .BS =_aecc .Get ("\u0042\u0053");_gdff .IC =_aecc .Get ("\u0049\u0043");_gdff .BE =_aecc .Get ("\u0042\u0045");_gdff .IT =_aecc .Get ("\u0049\u0054");_gdff .Measure =_aecc .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_gdff ,nil ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// GetAction returns the PDF action for the annotation link.
func (_dfdc *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _dfdc ._bccc !=nil {return _dfdc ._bccc ,nil ;};if _dfdc .A ==nil {return nil ,nil ;};if _dfdc ._bda ==nil {return nil ,nil ;};_gdb ,_ace :=_dfdc ._bda .loadAction (_dfdc .A );if _ace !=nil {return nil ,_ace ;};_dfdc ._bccc =_gdb ;return _dfdc ._bccc ,nil ;};func (_agfd *PdfField )inherit (_feba func (*PdfField )bool )(bool ,error ){_abad :=map[*PdfField ]bool {};_agcbf :=false ;_fedf :=_agfd ;for _fedf !=nil {if _ ,_agag :=_abad [_fedf ];_agag {return false ,_ed .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_eebg :=_feba (_fedf );if _eebg {_agcbf =true ;break ;};_abad [_fedf ]=true ;_fedf =_fedf .Parent ;};return _agcbf ,nil ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_fbega *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _ebgbb []*PdfField ;_cdgbe :=map[*_aec .PdfIndirectObject ]struct{}{};for _ ,_fbbgaf :=range _fbega .PageList {_efbac ,_afagg :=_fbbgaf .GetAnnotations ();if _afagg !=nil {return _afagg ;};for _ ,_efaac :=range _efbac {var _dgffe *PdfField ;switch _eddga :=_efaac .GetContext ().(type ){case *PdfAnnotationWidget :if _eddga ._ebff !=nil {_dgffe =_eddga ._ebff ;break ;};if _bebgg ,_egdcf :=_aec .GetIndirect (_eddga .Parent );_egdcf {_dgffe ,_afagg =_fbega .newPdfFieldFromIndirectObject (_bebgg ,nil );if _afagg ==nil {break ;};_de .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_bebgg ,_afagg );};if _eddga ._bcce !=nil {_dgffe ,_afagg =_fbega .newPdfFieldFromIndirectObject (_eddga ._bcce ,nil );if _afagg ==nil {break ;};_de .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_eddga ._bcce ,_afagg );};};if _dgffe ==nil {continue ;};if _ ,_gbdeg :=_cdgbe [_dgffe ._cfaef ];_gbdeg {continue ;};_cdgbe [_dgffe ._cfaef ]=struct{}{};_ebgbb =append (_ebgbb ,_dgffe );};};if len (_ebgbb )==0{return nil ;};if _fbega .AcroForm ==nil {_fbega .AcroForm =NewPdfAcroForm ();};_fbega .AcroForm .Fields =&_ebgbb ;return nil ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_aec .PdfObjectName ;Colorants _aec .PdfObject ;Process _aec .PdfObject ;MixingHints _aec .PdfObject ;_ceafa *_aec .PdfIndirectObject ;};func (_eacc *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _eacc ._dabc };

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_bfea *PdfColorspaceDeviceNAttributes )ToPdfObject ()_aec .PdfObject {_caccff :=_aec .MakeDict ();if _bfea .Subtype !=nil {_caccff .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bfea .Subtype );};_caccff .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_bfea .Colorants );_caccff .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_bfea .Process );_caccff .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_bfea .MixingHints );if _bfea ._ceafa !=nil {_bfea ._ceafa .PdfObject =_caccff ;return _bfea ._ceafa ;};return _caccff ;};

// M returns the value of the magenta component of the color.
func (_egec *PdfColorDeviceCMYK )M ()float64 {return _egec [1]};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_aecee .Lock ();defer _aecee .Unlock ();_fbadff =title };

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _aec .PdfObject ;T3DV _aec .PdfObject ;T3DA _aec .PdfObject ;T3DI _aec .PdfObject ;T3DB _aec .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dadeb *PdfShadingType6 )ToPdfObject ()_aec .PdfObject {_dadeb .PdfShading .ToPdfObject ();_bfcfd ,_cggfga :=_dadeb .getShadingDict ();if _cggfga !=nil {_de .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _dadeb .BitsPerCoordinate !=nil {_bfcfd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dadeb .BitsPerCoordinate );};if _dadeb .BitsPerComponent !=nil {_bfcfd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dadeb .BitsPerComponent );};if _dadeb .BitsPerFlag !=nil {_bfcfd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_dadeb .BitsPerFlag );};if _dadeb .Decode !=nil {_bfcfd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dadeb .Decode );};if _dadeb .Function !=nil {if len (_dadeb .Function )==1{_bfcfd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dadeb .Function [0].ToPdfObject ());}else {_adggb :=_aec .MakeArray ();for _ ,_ggdgg :=range _dadeb .Function {_adggb .Append (_ggdgg .ToPdfObject ());};_bfcfd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_adggb );};};return _dadeb ._cecd ;};

// SetAnnotations sets the annotations list.
func (_eeedb *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_eeedb ._cbbgf =annotations };

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _aec .PdfObject ;MK _aec .PdfObject ;A _aec .PdfObject ;AA _aec .PdfObject ;};func _aaaf (_dedb _aec .PdfObject )(*PdfColorspaceICCBased ,error ){_ggegf :=&PdfColorspaceICCBased {};if _cbag ,_ceb :=_dedb .(*_aec .PdfIndirectObject );_ceb {_ggegf ._bfaec =_cbag ;};_dedb =_aec .TraceToDirectObject (_dedb );_fgbe ,_gcddc :=_dedb .(*_aec .PdfObjectArray );if !_gcddc {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fgbe .Len ()!=2{return nil ,_g .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_dedb =_aec .TraceToDirectObject (_fgbe .Get (0));_bbcf ,_gcddc :=_dedb .(*_aec .PdfObjectName );if !_gcddc {return nil ,_g .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_bbcf !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_g .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_dedb =_fgbe .Get (1);_bagad ,_gcddc :=_aec .GetStream (_dedb );if !_gcddc {_de .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_dedb );return nil ,_g .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_dgfd :=_bagad .PdfObjectDictionary ;_ebgcf ,_gcddc :=_dgfd .Get ("\u004e").(*_aec .PdfObjectInteger );if !_gcddc {return nil ,_g .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_ebgcf !=1&&*_ebgcf !=3&&*_ebgcf !=4{return nil ,_g .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");};_ggegf .N =int (*_ebgcf );if _bfcb :=_dgfd .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_bfcb !=nil {_bfbc ,_bada :=NewPdfColorspaceFromPdfObject (_bfcb );if _bada !=nil {return nil ,_bada ;};_ggegf .Alternate =_bfbc ;};if _bfde :=_dgfd .Get ("\u0052\u0061\u006eg\u0065");_bfde !=nil {_bfde =_aec .TraceToDirectObject (_bfde );_deccf ,_ggeea :=_bfde .(*_aec .PdfObjectArray );if !_ggeea {return nil ,_g .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");};if _deccf .Len ()!=2*_ggegf .N {return nil ,_g .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");};_aggge ,_fcea :=_deccf .GetAsFloat64Slice ();if _fcea !=nil {return nil ,_fcea ;};_ggegf .Range =_aggge ;}else {_ggegf .Range =make ([]float64 ,2*_ggegf .N );for _effeb :=0;_effeb < _ggegf .N ;_effeb ++{_ggegf .Range [2*_effeb ]=0.0;_ggegf .Range [2*_effeb +1]=1.0;};};if _defg :=_dgfd .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_defg !=nil {_adaeg ,_gfbcb :=_defg .(*_aec .PdfObjectStream );if !_gfbcb {return nil ,_g .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");};_ggegf .Metadata =_adaeg ;};_afce ,_efgdd :=_aec .DecodeStream (_bagad );if _efgdd !=nil {return nil ,_efgdd ;};_ggegf .Data =_afce ;_ggegf ._cggg =_bagad ;return _ggegf ,nil ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_aec .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _aec .PdfObject ;A _aec .PdfObject ;SE _aec .PdfObject ;C _aec .PdfObject ;F _aec .PdfObject ;_bdgd *_aec .PdfIndirectObject ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_fbgdb DefaultImageHandler )NewImageFromGoImage (goimg _dfd .Image )(*Image ,error ){_ddgd ,_bbdd :=_be .FromGoImage (goimg );if _bbdd !=nil {return nil ,_bbdd ;};_dcgbc :=_ffefc (_ddgd .Base ());return &_dcgbc ,nil ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_gaege *PdfFont )BytesToCharcodes (data []byte )[]_cad .CharCode {_de .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );if _acfg ,_eedbe :=_gaege ._gaga .(*pdfFontType0 );_eedbe &&_acfg ._fdcf !=nil {if _cdgf ,_cfed :=_acfg .bytesToCharcodes (data );_cfed {return _cdgf ;};};_aegab :=make ([]_cad .CharCode ,0,len (data )+len (data )%2);if _gaege .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};};if len (data )%2!=0{_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );data =append (data ,0);};for _fgafd :=0;_fgafd < len (data );_fgafd +=2{_gfba :=uint16 (data [_fgafd ])<<8|uint16 (data [_fgafd +1]);_aegab =append (_aegab ,_cad .CharCode (_gfba ));};}else {for _ ,_gcff :=range data {_aegab =append (_aegab ,_cad .CharCode (_gcff ));};};return _aegab ;};

// WriteString outputs the object as it is to be written to file.
func (_gagdb *pdfSignDictionary )WriteString ()string {_gagdb ._ecfag =0;_gagdb ._adbd =0;_gagdb ._gcdfc =0;_gagdb ._gebd =0;_cdaf :=_add .NewBuffer (nil );_cdaf .WriteString ("\u003c\u003c");for _ ,_ggebf :=range _gagdb .Keys (){_gaefc :=_gagdb .Get (_ggebf );switch _ggebf {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_cdaf .WriteString (_ggebf .WriteString ());_cdaf .WriteString ("\u0020");_gagdb ._gcdfc =_cdaf .Len ();_cdaf .WriteString (_gaefc .WriteString ());_cdaf .WriteString ("\u0020");_gagdb ._gebd =_cdaf .Len ()-1;case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_cdaf .WriteString (_ggebf .WriteString ());_cdaf .WriteString ("\u0020");_gagdb ._ecfag =_cdaf .Len ();_cdaf .WriteString (_gaefc .WriteString ());_cdaf .WriteString ("\u0020");_gagdb ._adbd =_cdaf .Len ()-1;default:_cdaf .WriteString (_ggebf .WriteString ());_cdaf .WriteString ("\u0020");_cdaf .WriteString (_gaefc .WriteString ());};};_cdaf .WriteString ("\u003e\u003e");return _cdaf .String ();};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_fedacc *PdfReader )PageFromIndirectObject (ind *_aec .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_fedacc .PageList )!=len (_fedacc ._daffa ){return nil ,0,_ed .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};for _bcdfg ,_gagc :=range _fedacc ._daffa {if _gagc ==ind {return _fedacc .PageList [_bcdfg ],_bcdfg +1,nil ;};};return nil ,0,_ed .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// ToPdfObject implements interface PdfModel.
func (_fcee *PdfAnnotationLink )ToPdfObject ()_aec .PdfObject {_fcee .PdfAnnotation .ToPdfObject ();_bddg :=_fcee ._bcce ;_gce :=_bddg .PdfObject .(*_aec .PdfObjectDictionary );_gce .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_aec .MakeName ("\u004c\u0069\u006e\u006b"));if _fcee ._bccc !=nil &&_fcee ._bccc ._bbgc !=nil {_gce .Set ("\u0041",_fcee ._bccc ._bbgc .ToPdfObject ());}else if _fcee .A !=nil {_gce .Set ("\u0041",_fcee .A );};_gce .SetIfNotNil ("\u0044\u0065\u0073\u0074",_fcee .Dest );_gce .SetIfNotNil ("\u0048",_fcee .H );_gce .SetIfNotNil ("\u0050\u0041",_fcee .PA );_gce .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fcee .QuadPoints );_gce .SetIfNotNil ("\u0042\u0053",_fcee .BS );return _bddg ;};func (_gff *PdfReader )newPdfAnnotationProjectionFromDict (_eeca *_aec .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_faee :=&PdfAnnotationProjection {};_gefe ,_fge :=_gff .newPdfAnnotationMarkupFromDict (_eeca );if _fge !=nil {return nil ,_fge ;};_faee .PdfAnnotationMarkup =_gefe ;return _faee ,nil ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_aec .PdfObject ,error );};

// Register registers (caches) a model to primitive object relationship.
func (_fabaa *modelManager )Register (primitive _aec .PdfObject ,model PdfModel ){_fabaa ._adefe [model ]=primitive ;_fabaa ._gdda [primitive ]=model ;};