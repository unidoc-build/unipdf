//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_ce "bufio";_ddg "bytes";_cb "crypto/md5";_gba "crypto/rand";_bb "crypto/sha1";_cg "crypto/x509";_ca "encoding/binary";_gb "encoding/hex";_gg "errors";_e "fmt";_ec "github.com/unidoc/pkcs7";_fd "github.com/unidoc/unipdf/v3/common";
_gea "github.com/unidoc/unipdf/v3/core";_gcf "github.com/unidoc/unipdf/v3/core/security";_ddgg "github.com/unidoc/unipdf/v3/core/security/crypt";_ebd "github.com/unidoc/unipdf/v3/internal/cmap";_deg "github.com/unidoc/unipdf/v3/internal/imageutil";_ge "github.com/unidoc/unipdf/v3/internal/license";
_ed "github.com/unidoc/unipdf/v3/internal/sampling";_ceb "github.com/unidoc/unipdf/v3/internal/textencoding";_cff "github.com/unidoc/unipdf/v3/internal/timeutils";_fe "github.com/unidoc/unipdf/v3/internal/transform";_eg "github.com/unidoc/unipdf/v3/model/internal/docutil";
_ad "github.com/unidoc/unipdf/v3/model/internal/fonts";_gbf "github.com/unidoc/unipdf/v3/model/mdp";_cad "github.com/unidoc/unipdf/v3/model/sigutil";_ac "github.com/unidoc/unipdf/v3/ps";_cf "github.com/unidoc/unitype";_bga "golang.org/x/xerrors";_ef "hash";
_d "image";_a "image/color";_ "image/gif";_ "image/png";_cef "io";_gc "io/ioutil";_fa "math";_dd "math/rand";_de "os";_cag "regexp";_da "sort";_eb "strconv";_aa "strings";_c "sync";_g "time";_gbab "unicode";_caf "unicode/utf8";);

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_efdd *PdfShading )ToPdfObject ()_gea .PdfObject {_gfad :=_efdd ._adae ;_ccfgg ,_abedd :=_efdd .getShadingDict ();if _abedd !=nil {_fd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _efdd .ShadingType !=nil {_ccfgg .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_efdd .ShadingType );};if _efdd .ColorSpace !=nil {_ccfgg .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_efdd .ColorSpace .ToPdfObject ());
};if _efdd .Background !=nil {_ccfgg .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_efdd .Background );};if _efdd .BBox !=nil {_ccfgg .Set ("\u0042\u0042\u006f\u0078",_efdd .BBox .ToPdfObject ());};if _efdd .AntiAlias !=nil {_ccfgg .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_efdd .AntiAlias );
};return _gfad ;};

// ToPdfObject converts the font to a PDF representation.
func (_eefa *pdfFontType0 )ToPdfObject ()_gea .PdfObject {if _eefa ._fbbc ==nil {_eefa ._fbbc =&_gea .PdfIndirectObject {};};_aggff :=_eefa .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_eefa ._fbbc .PdfObject =_aggff ;if _eefa .Encoding !=nil {_aggff .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_eefa .Encoding );
}else if _eefa ._dgaaf !=nil {_aggff .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_eefa ._dgaaf .ToPdfObject ());};if _eefa .DescendantFont !=nil {_aggff .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_gea .MakeArray (_eefa .DescendantFont .ToPdfObject ()));
};return _eefa ._fbbc ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_gdcgf *XObjectImage )SetFilter (encoder _gea .StreamEncoder )error {_cfabeg :=_gdcgf .Stream ;_fcedc ,_aaeed :=_gdcgf .Filter .DecodeBytes (_cfabeg );if _aaeed !=nil {return _aaeed ;};_gdcgf .Filter =encoder ;encoder .UpdateParams (_gdcgf .getParamsDict ());
_cfabeg ,_aaeed =encoder .EncodeBytes (_fcedc );if _aaeed !=nil {return _aaeed ;};_gdcgf .Stream =_cfabeg ;return nil ;};func (_aebd *PdfReader )newPdfActionMovieFromDict (_cfc *_gea .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_cfc .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_cfc .Get ("\u0054"),Operation :_cfc .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_gea .PdfObjectString ;Q *_gea .PdfObjectInteger ;DS *_gea .PdfObjectString ;RV _gea .PdfObject ;};

// ToInteger convert to an integer format.
func (_adfe *PdfColorLab )ToInteger (bits int )[3]uint32 {_edag :=_fa .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_edag *_adfe .L ()),uint32 (_edag *_adfe .A ()),uint32 (_edag *_adfe .B ())};};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_gbf .DiffResults ;IsCrlFound bool ;IsOcspFound bool ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _g .Time ;};

// AddCerts adds certificates to DSS.
func (_baec *DSS )AddCerts (certs [][]byte )([]*_gea .PdfObjectStream ,error ){return _baec .add (&_baec .Certs ,_baec ._abfg ,certs );};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_cfaa :=PdfColorCalGray (grayVal );return &_cfaa ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
//
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
// message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
//
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_eaace *PdfFont )SubsetRegistered ()error {switch _dbgda :=_eaace ._bgfbc .(type ){case *pdfFontType0 :_ffgf :=_dbgda .subsetRegistered ();if _ffgf !=nil {_fd .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_ffgf );
return _ffgf ;};if _dbgda ._fbbc !=nil {if _dbgda ._dgaaf !=nil {_dbgda ._dgaaf .ToPdfObject ();};_dbgda .ToPdfObject ();};default:_fd .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_dbgda );
};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_ebea *PdfAnnotationWidget )ToPdfObject ()_gea .PdfObject {_ebea .PdfAnnotation .ToPdfObject ();_gdda :=_ebea ._bbf ;_fgg :=_gdda .PdfObject .(*_gea .PdfObjectDictionary );if _ebea ._gbaba {return _gdda ;};_ebea ._gbaba =true ;_fgg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_fgg .SetIfNotNil ("\u0048",_ebea .H );_fgg .SetIfNotNil ("\u004d\u004b",_ebea .MK );_fgg .SetIfNotNil ("\u0041",_ebea .A );_fgg .SetIfNotNil ("\u0041\u0041",_ebea .AA );_fgg .SetIfNotNil ("\u0042\u0053",_ebea .BS );_gagf :=_ebea .Parent ;if _ebea ._bbba !=nil {if _ebea ._bbba ._bcga ==_ebea ._bbf {_ebea ._bbba .ToPdfObject ();
};_gagf =_ebea ._bbba .GetContainingPdfObject ();};if _gagf !=_gdda {_fgg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_gagf );};_ebea ._gbaba =false ;return _gdda ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_eedcc *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_fd .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_gg .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};var ErrColorOutOfRange =_gg .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");


// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_ebe :=NewPdfAnnotation ();_eea :=&PdfAnnotationCaret {};_eea .PdfAnnotation =_ebe ;_eea .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebe .SetContext (_eea );return _eea ;};func (_bbceg fontCommon )isCIDFont ()bool {if _bbceg ._abed ==""{_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bbceg );
};_eacfd :=false ;switch _bbceg ._abed {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_eacfd =true ;};_fd .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_eacfd ,_bbceg );
return _eacfd ;};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_abedg *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _abedg ._edcdb .GetRevisionNumber ()==0{return nil ,_gg .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _ecgfeb ,_gegacg :=_abedg ._cgcdfd [_abedg ];_gegacg {return _ecgfeb ,nil ;};_gadeg ,_cadfd :=_abedg ._edcdb .GetPreviousRevisionReadSeeker ();if _cadfd !=nil {return nil ,_cadfd ;};_fbgd ,_cadfd :=_dcgdf (_gadeg ,_abedg ._gffgc ,_abedg ._cgaf ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _cadfd !=nil {return nil ,_cadfd ;};_abedg ._ceagg [_abedg ._edcdb .GetRevisionNumber ()-1]=_fbgd ;_abedg ._cgcdfd [_abedg ]=_fbgd ;_fbgd ._cgcdfd =_abedg ._cgcdfd ;return _fbgd ,nil ;};func _dbcc (_beea _gea .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_aefe :=&PdfColorspaceDeviceNAttributes {};
var _fgbcb *_gea .PdfObjectDictionary ;switch _gddg :=_beea .(type ){case *_gea .PdfIndirectObject :_aefe ._aabd =_gddg ;var _gecc bool ;_fgbcb ,_gecc =_gddg .PdfObject .(*_gea .PdfObjectDictionary );if !_gecc {_fd .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_gg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_gea .PdfObjectDictionary :_fgbcb =_gddg ;case *_gea .PdfObjectReference :_dace :=_gddg .Resolve ();return _dbcc (_dace );default:_fd .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_gg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gbeg :=_fgbcb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_gbeg !=nil {_bbdae ,_bgaf :=_gea .TraceToDirectObject (_gbeg ).(*_gea .PdfObjectName );if !_bgaf {_fd .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_gg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_aefe .Subtype =_bbdae ;};if _fbfg :=_fgbcb .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_fbfg !=nil {_aefe .Colorants =_fbfg ;};if _fddd :=_fgbcb .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_fddd !=nil {_aefe .Process =_fddd ;};if _fcag :=_fgbcb .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_fcag !=nil {_aefe .MixingHints =_fcag ;};return _aefe ,nil ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_aeca DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};func (_bdeae Image )getBase ()_deg .ImageBase {return _deg .NewImageBase (int (_bdeae .Width ),int (_bdeae .Height ),int (_bdeae .BitsPerComponent ),_bdeae .ColorComponents ,_bdeae .Data ,_bdeae ._bdbf ,_bdeae ._edadg );
};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_bedf ,_dfeb :=_ad .NewStdFontByName (HelveticaName );if !_dfeb {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_egcb :=_adga (_bedf );return &PdfFont {_bgfbc :&_egcb };};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_dcf _gea .PdfObject ;};func (_bbcfaf *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _bbcfaf ._baffg };

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_fbcd *OutlineItem )Insert (index uint ,item *OutlineItem ){_cegd :=uint (len (_fbcd .Entries ));if index > _cegd {index =_cegd ;};_fbcd .Entries =append (_fbcd .Entries [:index ],append ([]*OutlineItem {item },_fbcd .Entries [index :]...)...);};


// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _gea .PdfObject ;Sy _gea .PdfObject ;};func (_agf *PdfReader )newPdfAnnotationPolyLineFromDict (_beca *_gea .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_gbcfb :=PdfAnnotationPolyLine {};
_bbd ,_acdd :=_agf .newPdfAnnotationMarkupFromDict (_beca );if _acdd !=nil {return nil ,_acdd ;};_gbcfb .PdfAnnotationMarkup =_bbd ;_gbcfb .Vertices =_beca .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_gbcfb .LE =_beca .Get ("\u004c\u0045");
_gbcfb .BS =_beca .Get ("\u0042\u0053");_gbcfb .IC =_beca .Get ("\u0049\u0043");_gbcfb .BE =_beca .Get ("\u0042\u0045");_gbcfb .IT =_beca .Get ("\u0049\u0054");_gbcfb .Measure =_beca .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_gbcfb ,nil ;};
func _gbge ()string {return _fd .Version };

// NewPdfShadingPatternType3 creates an empty shading pattern type 3 object.
func NewPdfShadingPatternType3 ()*PdfShadingPatternType3 {_ggffg :=&PdfShadingPatternType3 {};_ggffg .Matrix =_gea .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_ggffg .PdfPattern =&PdfPattern {};_ggffg .PdfPattern .PatternType =int64 (*_gea .MakeInteger (2));
_ggffg .PdfPattern ._efgbe =_ggffg ;_ggffg .PdfPattern ._bgcec =_gea .MakeIndirectObject (_gea .MakeDict ());return _ggffg ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ebec *PdfColorspaceDeviceGray )ToPdfObject ()_gea .PdfObject {return _gea .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};func _ebbd (_dddeg *XObjectImage )error {if _dddeg .SMask ==nil {return nil ;};_fedcb ,_dcabf :=_dddeg .SMask .(*_gea .PdfObjectStream );
if !_dcabf {_fd .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _gea .ErrTypeError ;};_abfga :=_fedcb .PdfObjectDictionary ;
_gdeea :=_abfga .Get ("\u004d\u0061\u0074t\u0065");if _gdeea ==nil {return nil ;};_deffe ,_ggda :=_bgccdf (_gdeea .(*_gea .PdfObjectArray ));if _ggda !=nil {return _ggda ;};_fdec :=_gea .MakeArrayFromFloats ([]float64 {_deffe });_abfga .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_fdec );
return nil ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_cbgcc *XObjectImage )GetContainingPdfObject ()_gea .PdfObject {return _cbgcc ._bbffa };func (_dcac *pdfFontType0 )subsetRegistered ()error {_gdca ,_bcdb :=_dcac .DescendantFont ._bgfbc .(*pdfCIDFontType2 );if !_bcdb {_fd .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_dcac .DescendantFont );
return nil ;};if _gdca ==nil {return nil ;};if _gdca ._baffg ==nil {_fd .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _dcac ._dgaaf ==nil {_fd .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_gdgdc ,_bcdb :=_gea .GetStream (_gdca ._baffg .FontFile2 );if !_bcdb {_fd .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _gg .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_ccfgf ,_cgeb :=_gea .DecodeStream (_gdgdc );if _cgeb !=nil {_fd .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_cgeb );
return _cgeb ;};_bgcef ,_cgeb :=_cf .Parse (_ddg .NewReader (_ccfgf ));if _cgeb !=nil {_fd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_gdgdc .Stream ));
return _cgeb ;};var _gbbda []rune ;var _eagg *_cf .Font ;switch _ebfg :=_dcac ._dgaaf .(type ){case *_ceb .TrueTypeFontEncoder :_gbbda =_ebfg .RegisteredRunes ();_eagg ,_cgeb =_bgcef .SubsetKeepRunes (_gbbda );if _cgeb !=nil {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgeb );
return _cgeb ;};_ebfg .SubsetRegistered ();case *_ceb .IdentityEncoder :_gbbda =_ebfg .RegisteredRunes ();_fcad :=make ([]_cf .GlyphIndex ,len (_gbbda ));for _geeed ,_dbecd :=range _gbbda {_fcad [_geeed ]=_cf .GlyphIndex (_dbecd );};_eagg ,_cgeb =_bgcef .SubsetKeepIndices (_fcad );
if _cgeb !=nil {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgeb );return _cgeb ;};case _ceb .SimpleEncoder :_bgafe :=_ebfg .Charcodes ();for _ ,_gbed :=range _bgafe {_gbfea ,_fegfa :=_ebfg .CharcodeToRune (_gbed );if !_fegfa {_fd .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_gbed );
continue ;};_gbbda =append (_gbbda ,_gbfea );};default:return _e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_dcac ._dgaaf );
};var _abge _ddg .Buffer ;_cgeb =_eagg .Write (&_abge );if _cgeb !=nil {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgeb );return _cgeb ;};if _dcac ._cbfe !=nil {_beegf :=make (map[_ebd .CharCode ]rune ,len (_gbbda ));for _ ,_dgfc :=range _gbbda {_fcacd ,_acdee :=_dcac ._dgaaf .RuneToCharcode (_dgfc );
if !_acdee {continue ;};_beegf [_ebd .CharCode (_fcacd )]=_dgfc ;};_dcac ._cbfe =_ebd .NewToUnicodeCMap (_beegf );};_gdgdc ,_cgeb =_gea .MakeStream (_abge .Bytes (),_gea .NewFlateEncoder ());if _cgeb !=nil {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgeb );
return _cgeb ;};_gdgdc .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_gea .MakeInteger (int64 (_abge .Len ())));if _ffgb ,_egcc :=_gea .GetStream (_gdca ._baffg .FontFile2 );_egcc {*_ffgb =*_gdgdc ;}else {_gdca ._baffg .FontFile2 =_gdgdc ;};_eecge :=_gbdd ();
if len (_dcac ._cacc )> 0{_dcac ._cacc =_bgfge (_dcac ._cacc ,_eecge );};if len (_gdca ._cacc )> 0{_gdca ._cacc =_bgfge (_gdca ._cacc ,_eecge );};if len (_dcac ._aeaf )> 0{_dcac ._aeaf =_bgfge (_dcac ._aeaf ,_eecge );};if _gdca ._baffg !=nil {_cgefg ,_fedc :=_gea .GetName (_gdca ._baffg .FontName );
if _fedc &&len (_cgefg .String ())> 0{_caegg :=_bgfge (_cgefg .String (),_eecge );_gdca ._baffg .FontName =_gea .MakeName (_caegg );};};return nil ;};func (_gcdcd *PdfSignature )extractChainFromCert ()([]*_cg .Certificate ,error ){var _bffgf *_gea .PdfObjectArray ;
switch _adceb :=_gcdcd .Cert .(type ){case *_gea .PdfObjectString :_bffgf =_gea .MakeArray (_adceb );case *_gea .PdfObjectArray :_bffgf =_adceb ;default:return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_adceb );
};var _gbbdf _ddg .Buffer ;for _ ,_dcade :=range _bffgf .Elements (){_eedgg ,_cgaad :=_gea .GetString (_dcade );if !_cgaad {return nil ,_e .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_dcade );
};if _ ,_dgbfb :=_gbbdf .Write (_eedgg .Bytes ());_dgbfb !=nil {return nil ,_dgbfb ;};};return _cg .ParseCertificates (_gbbdf .Bytes ());};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;var (_aefdbd _c .Mutex ;_gdafd ="";_aebfca _g .Time ;_abaea ="";_ceec ="";_adcaa _g .Time ;_dacgb ="";_caacf ="";_begdd ="";);func _fgcd (_fecee _gea .PdfObject )(*PdfColorspaceLab ,error ){_bdcg :=NewPdfColorspaceLab ();if _aaaa ,_dabc :=_fecee .(*_gea .PdfIndirectObject );
_dabc {_bdcg ._dfddf =_aaaa ;};_fecee =_gea .TraceToDirectObject (_fecee );_cfaf ,_decfc :=_fecee .(*_gea .PdfObjectArray );if !_decfc {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cfaf .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_fecee =_gea .TraceToDirectObject (_cfaf .Get (0));_dbgb ,_decfc :=_fecee .(*_gea .PdfObjectName );if !_decfc {return nil ,_e .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_dbgb !="\u004c\u0061\u0062"{return nil ,_e .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_fecee =_gea .TraceToDirectObject (_cfaf .Get (1));_gaabd ,_decfc :=_fecee .(*_gea .PdfObjectDictionary );
if !_decfc {return nil ,_e .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};
_fecee =_gaabd .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_fecee =_gea .TraceToDirectObject (_fecee );_bdfg ,_decfc :=_fecee .(*_gea .PdfObjectArray );if !_decfc {return nil ,_e .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");
};if _bdfg .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_fggb ,_gagb :=_bdfg .GetAsFloat64Slice ();
if _gagb !=nil {return nil ,_gagb ;};_bdcg .WhitePoint =_fggb ;_fecee =_gaabd .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fecee !=nil {_fecee =_gea .TraceToDirectObject (_fecee );_gagec ,_cdeea :=_fecee .(*_gea .PdfObjectArray );
if !_cdeea {return nil ,_e .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _gagec .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_fdde ,_dbb :=_gagec .GetAsFloat64Slice ();if _dbb !=nil {return nil ,_dbb ;};_bdcg .BlackPoint =_fdde ;};_fecee =_gaabd .Get ("\u0052\u0061\u006eg\u0065");if _fecee !=nil {_fecee =_gea .TraceToDirectObject (_fecee );_dbec ,_eedgd :=_fecee .(*_gea .PdfObjectArray );
if !_eedgd {_fd .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_e .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dbec .Len ()!=4{_fd .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_fbbdg ,_baefce :=_dbec .GetAsFloat64Slice ();if _baefce !=nil {return nil ,_baefce ;};_bdcg .Range =_fbbdg ;};return _bdcg ,nil ;};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _gea .PdfObject ;NewWindow _gea .PdfObject ;T _gea .PdfObject ;};

// A returns the value of the A component of the color.
func (_ceff *PdfColorCalRGB )A ()float64 {return _ceff [0]};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_feegg *_gea .PdfIndirectObject ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_cgdg :=NewPdfAnnotation ();_bgfb :=&PdfAnnotationSquare {};_bgfb .PdfAnnotation =_cgdg ;_bgfb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgdg .SetContext (_bgfb );return _bgfb ;};func (_bbab *PdfWriter )writeAcroFormFields ()error {if _bbab ._fdfda ==nil {return nil ;
};_fd .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_fbgdf :=_bbab ._fdfda .ToPdfObject ();_fd .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_fbgdf );
_bbab ._ggbgf .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_fbgdf );_ccgfd :=_bbab .addObjects (_fbgdf );if _ccgfd !=nil {return _ccgfd ;};return nil ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_fbdcb *PdfAcroForm )GetContainingPdfObject ()_gea .PdfObject {return _fbdcb ._eage };

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_bdagf interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_gfefab ,_ebcda :=_de .Open (filePath );if _ebcda !=nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_ebcda );
return nil ,_ebcda ;};defer _gfefab .Close ();return NewPdfFontFromTTF (_gfefab );};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_bbfc *PdfAcroForm )ToPdfObject ()_gea .PdfObject {_gcca :=_bbfc ._eage ;_gffa :=_gcca .PdfObject .(*_gea .PdfObjectDictionary );if _bbfc .Fields !=nil {_afec :=_gea .PdfObjectArray {};for _ ,_fbbfe :=range *_bbfc .Fields {_adcf :=_fbbfe .GetContext ();
if _adcf !=nil {_afec .Append (_adcf .ToPdfObject ());}else {_afec .Append (_fbbfe .ToPdfObject ());};};_gffa .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_afec );};if _bbfc .NeedAppearances !=nil {_gffa .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_bbfc .NeedAppearances );
}else {if _ebfaa :=_gffa .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_ebfaa !=nil {_gffa .Remove ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");};};if _bbfc .SigFlags !=nil {_gffa .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_bbfc .SigFlags );
};if _bbfc .CO !=nil {_gffa .Set ("\u0043\u004f",_bbfc .CO );};if _bbfc .DR !=nil {_gffa .Set ("\u0044\u0052",_bbfc .DR .ToPdfObject ());};if _bbfc .DA !=nil {_gffa .Set ("\u0044\u0041",_bbfc .DA );};if _bbfc .Q !=nil {_gffa .Set ("\u0051",_bbfc .Q );};
if _bbfc .XFA !=nil {_gffa .Set ("\u0058\u0046\u0041",_bbfc .XFA );};if _bbfc .ADBEEchoSign !=nil {_gffa .Set ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e",_bbfc .ADBEEchoSign );};return _gcca ;};

// ToPdfObject implements interface PdfModel.
func (_fbc *PdfAnnotationRedact )ToPdfObject ()_gea .PdfObject {_fbc .PdfAnnotation .ToPdfObject ();_acg :=_fbc ._bbf ;_faaf :=_acg .PdfObject .(*_gea .PdfObjectDictionary );_fbc .PdfAnnotationMarkup .appendToPdfDictionary (_faaf );_faaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_faaf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fbc .QuadPoints );_faaf .SetIfNotNil ("\u0049\u0043",_fbc .IC );_faaf .SetIfNotNil ("\u0052\u004f",_fbc .RO );_faaf .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_fbc .OverlayText );
_faaf .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_fbc .Repeat );_faaf .SetIfNotNil ("\u0044\u0041",_fbc .DA );_faaf .SetIfNotNil ("\u0051",_fbc .Q );return _acg ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_bgag *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_gg .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_aaad ,_cedc :=_deg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._bdbf ,img ._edadg );if _cedc !=nil {return img ,_cedc ;};_ceeg ,_cedc :=_deg .NRGBAConverter .Convert (_aaad );if _cedc !=nil {return img ,_cedc ;
};_fggg :=_ebgdf (_ceeg .Base ());_fd .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_fd .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_fd .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_fggg .Data );
_fd .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_fggg );return _fggg ,nil ;};func (_fcg *PdfReader )newPdfAnnotationLineFromDict (_cfa *_gea .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_adc :=PdfAnnotationLine {};_bfbf ,_dgag :=_fcg .newPdfAnnotationMarkupFromDict (_cfa );
if _dgag !=nil {return nil ,_dgag ;};_adc .PdfAnnotationMarkup =_bfbf ;_adc .L =_cfa .Get ("\u004c");_adc .BS =_cfa .Get ("\u0042\u0053");_adc .LE =_cfa .Get ("\u004c\u0045");_adc .IC =_cfa .Get ("\u0049\u0043");_adc .LL =_cfa .Get ("\u004c\u004c");_adc .LLE =_cfa .Get ("\u004c\u004c\u0045");
_adc .Cap =_cfa .Get ("\u0043\u0061\u0070");_adc .IT =_cfa .Get ("\u0049\u0054");_adc .LLO =_cfa .Get ("\u004c\u004c\u004f");_adc .CP =_cfa .Get ("\u0043\u0050");_adc .Measure =_cfa .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_adc .CO =_cfa .Get ("\u0043\u004f");
return &_adc ,nil ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gea .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_becb *PdfAnnotationFileAttachment )ToPdfObject ()_gea .PdfObject {_becb .PdfAnnotation .ToPdfObject ();_cfbc :=_becb ._bbf ;_acbd :=_cfbc .PdfObject .(*_gea .PdfObjectDictionary );_becb .PdfAnnotationMarkup .appendToPdfDictionary (_acbd );_acbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_acbd .SetIfNotNil ("\u0046\u0053",_becb .FS );_acbd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_becb .Name );return _cfbc ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_cgcggf *PdfWriter )SetNameDictionary (names _gea .PdfObject )error {if names ==nil {return nil ;};_fd .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_cgcggf ._ggbgf .Set ("\u004e\u0061\u006de\u0073",names );return _cgcggf .addObjects (names );};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_gea .PdfObjectInteger ;BitsPerComponent *_gea .PdfObjectInteger ;BitsPerFlag *_gea .PdfObjectInteger ;Decode *_gea .PdfObjectArray ;Function []PdfFunction ;};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_ecdga PdfOutputIntentType )String ()string {switch _ecdga {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_gdceeb *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgbc :=vals [0];_dcg :=[]float64 {_dgbc };_bfbe ,_eeaef :=_gdceeb .TintTransform .Evaluate (_dcg );
if _eeaef !=nil {_fd .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_eeaef );_fd .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_gdceeb .TintTransform );
return nil ,_eeaef ;};_fd .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_bfbe ,_gdceeb .AlternateSpace );
_dfae ,_eeaef :=_gdceeb .AlternateSpace .ColorFromFloats (_bfbe );if _eeaef !=nil {_fd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_eeaef );
return nil ,_eeaef ;};return _dfae ,nil ;};func (_gaca *Image )resampleLowBits (_dbfa []uint32 ){_aegd :=_deg .BytesPerLine (int (_gaca .Width ),int (_gaca .BitsPerComponent ),_gaca .ColorComponents );_afde :=make ([]byte ,_gaca .ColorComponents *_aegd *int (_gaca .Height ));
_dgagf :=int (_gaca .BitsPerComponent )*_gaca .ColorComponents *int (_gaca .Width );_dfbea :=uint8 (8);var (_edgf ,_ggfa int ;_efaa uint32 ;);for _dbfg :=0;_dbfg < int (_gaca .Height );_dbfg ++{_ggfa =_dbfg *_aegd ;for _bfdbgf :=0;_bfdbgf < _dgagf ;_bfdbgf ++{_efaa =_dbfa [_edgf ];
_dfbea -=uint8 (_gaca .BitsPerComponent );_afde [_ggfa ]|=byte (_efaa )<<_dfbea ;if _dfbea ==0{_dfbea =8;_ggfa ++;};_edgf ++;};};_gaca .Data =_afde ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_baefg *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _baefg .UnderlyingCS .GetNumComponents ();};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_eage :_gea .MakeIndirectObject (_gea .MakeDict ())};};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_gcdf :=NewPdfAnnotation ();_feed :=&PdfAnnotationLink {};_feed .PdfAnnotation =_gcdf ;_gcdf .SetContext (_feed );return _feed ;};

// HasFontByName checks if has font resource by name.
func (_gdacf *PdfPage )HasFontByName (name _gea .PdfObjectName )bool {_cacbd ,_ebggc :=_gdacf .Resources .Font .(*_gea .PdfObjectDictionary );if !_ebggc {return false ;};if _dfgg :=_cacbd .Get (name );_dfgg !=nil {return true ;};return false ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_cafcd *PdfPageResourcesColorspaces )Set (key _gea .PdfObjectName ,val PdfColorspace ){if _ ,_bbdfa :=_cafcd .Colorspaces [string (key )];!_bbdfa {_cafcd .Names =append (_cafcd .Names ,string (key ));};_cafcd .Colorspaces [string (key )]=val ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_gbef :map[_gea .PdfObject ]struct{}{},_gace :_ceaeg (),_edcdb :_gea .NewParserFromString (txt )};};

// ToPdfObject converts the font to a PDF representation.
func (_bacg *pdfFontType3 )ToPdfObject ()_gea .PdfObject {if _bacg ._abgca ==nil {_bacg ._abgca =&_gea .PdfIndirectObject {};};_babe :=_bacg .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_bacg ._abgca .PdfObject =_babe ;if _bacg .FirstChar !=nil {_babe .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_bacg .FirstChar );
};if _bacg .LastChar !=nil {_babe .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_bacg .LastChar );};if _bacg .Widths !=nil {_babe .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_bacg .Widths );};if _bacg .Encoding !=nil {_babe .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bacg .Encoding );
}else if _bacg ._cbcba !=nil {_cecff :=_bacg ._cbcba .ToPdfObject ();if _cecff !=nil {_babe .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cecff );};};if _bacg .FontBBox !=nil {_babe .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_bacg .FontBBox );
};if _bacg .FontMatrix !=nil {_babe .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_bacg .FontMatrix );};if _bacg .CharProcs !=nil {_babe .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_bacg .CharProcs );};if _bacg .Resources !=nil {_babe .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_bacg .Resources );
};return _bacg ._abgca ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_bgbg *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_bgbg .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_bgbg ._ddeb =acroForm ;};func _aegace (_aaecb *_gea .PdfIndirectObject )(*PdfOutline ,error ){_dbbg ,_dgbefg :=_aaecb .PdfObject .(*_gea .PdfObjectDictionary );
if !_dgbefg {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_abdc :=NewPdfOutline ();if _bgafg :=_dbbg .Get ("\u0054\u0079\u0070\u0065");
_bgafg !=nil {_aggef ,_cbgf :=_bgafg .(*_gea .PdfObjectName );if _cbgf {if *_aggef !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_fd .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_aggef );
};};};if _ecdff :=_dbbg .Get ("\u0043\u006f\u0075n\u0074");_ecdff !=nil {_defed ,_gbda :=_gea .GetNumberAsInt64 (_ecdff );if _gbda !=nil {return nil ,_gbda ;};_abdc .Count =&_defed ;};return _abdc ,nil ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _gea .PdfObject ;Name _gea .PdfObject ;State _gea .PdfObject ;StateModel _gea .PdfObject ;};func _cbdad ()string {_aefdbd .Lock ();defer _aefdbd .Unlock ();return _begdd };

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _gea .PdfObject ;Name _gea .PdfObject ;};func _bgfge (_cgddb ,_addf string )string {if _aa .Contains (_cgddb ,"\u002b"){_fdfdd :=_aa .Split (_cgddb ,"\u002b");if len (_fdfdd )==2{_cgddb =_fdfdd [1];
};};return _addf +"\u002b"+_cgddb ;};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _gea .PdfObject )(*PdfInfo ,error ){var _gcag PdfInfo ;_bedc ,_fecb :=obj .(*_gea .PdfObjectDictionary );if !_fecb {return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_eaee :=range _bedc .Keys (){switch _eaee {case "\u0054\u0069\u0074l\u0065":_gcag .Title ,_ =_gea .GetString (_bedc .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_gcag .Author ,_ =_gea .GetString (_bedc .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_gcag .Subject ,_ =_gea .GetString (_bedc .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_gcag .Keywords ,_ =_gea .GetString (_bedc .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_gcag .Creator ,_ =_gea .GetString (_bedc .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_gcag .Producer ,_ =_gea .GetString (_bedc .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_gcag .Trapped ,_ =_gea .GetName (_bedc .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _fgge ,_gbebg :=_gea .GetString (_bedc .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_gbebg &&_fgge .String ()!=""{_bbdc ,_eddd :=NewPdfDate (_fgge .String ());if _eddd !=nil {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_eddd );
};_gcag .CreationDate =&_bbdc ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _defeb ,_dcbd :=_gea .GetString (_bedc .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_dcbd &&_defeb .String ()!=""{_gegd ,_eccg :=NewPdfDate (_defeb .String ());if _eccg !=nil {return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_eccg );
};_gcag .ModifiedDate =&_gegd ;};default:_dfffd ,_ :=_gea .GetString (_bedc .Get (_eaee ));if _gcag ._geda ==nil {_gcag ._geda =_gea .MakeDict ();};_gcag ._geda .Set (_eaee ,_dfffd );};};return &_gcag ,nil ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_bcdcga _cef .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_egfac _d .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_eddc _d .Image )(*Image ,error );

// Compress an image.
Compress (_eggc *Image ,_abga int64 )(*Image ,error );};

// ToPdfObject implements interface PdfModel.
func (_gef *PdfAnnotationStamp )ToPdfObject ()_gea .PdfObject {_gef .PdfAnnotation .ToPdfObject ();_aecf :=_gef ._bbf ;_face :=_aecf .PdfObject .(*_gea .PdfObjectDictionary );_gef .PdfAnnotationMarkup .appendToPdfDictionary (_face );_face .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0053\u0074\u0061m\u0070"));
_face .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gef .Name );return _aecf ;};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _gbf .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_gea .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_gea .MakeInteger (int64 (permission )),V :_gea .MakeName ("\u0031\u002e\u0032")};
};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_bfcd *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_fddcc :=func (_bgec float64 )float64 {if _bgec >=6.0/29{return _bgec *_bgec *_bgec ;};return 108.0/841*(_bgec -4.0/29.0);};_defe :=img ._edadg ;if len (_defe )!=6{_fd .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_defe =_bfcd .DecodeArray ();};_abddf :=_ed .NewReader (img .getBase ());_gefe :=_deg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._bdbf ,img ._edadg );_eceb :=_ed .NewWriter (_gefe );_ebcd :=_fa .Pow (2,float64 (img .BitsPerComponent ))-1;
_dgab :=make ([]uint32 ,3);var (_fbgf error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_bggg ,_dbee ,_dfff float64 ;);for {_fbgf =_abddf .ReadSamples (_dgab );if _fbgf ==_cef .EOF {break ;}else if _fbgf !=nil {return img ,_fbgf ;};Ls =float64 (_dgab [0])/_ebcd ;As =float64 (_dgab [1])/_ebcd ;
Bs =float64 (_dgab [2])/_ebcd ;Ls =_deg .LinearInterpolate (Ls ,0.0,1.0,_defe [0],_defe [1]);As =_deg .LinearInterpolate (As ,0.0,1.0,_defe [2],_defe [3]);Bs =_deg .LinearInterpolate (Bs ,0.0,1.0,_defe [4],_defe [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;
N =(Ls +16)/116-Bs /200;X =_bfcd .WhitePoint [0]*_fddcc (L );Y =_bfcd .WhitePoint [1]*_fddcc (M );Z =_bfcd .WhitePoint [2]*_fddcc (N );_bggg =3.240479*X +-1.537150*Y +-0.498535*Z ;_dbee =-0.969256*X +1.875992*Y +0.041556*Z ;_dfff =0.055648*X +-0.204043*Y +1.057311*Z ;
_bggg =_fa .Min (_fa .Max (_bggg ,0),1.0);_dbee =_fa .Min (_fa .Max (_dbee ,0),1.0);_dfff =_fa .Min (_fa .Max (_dfff ,0),1.0);_dgab [0]=uint32 (_bggg *_ebcd );_dgab [1]=uint32 (_dbee *_ebcd );_dgab [2]=uint32 (_dfff *_ebcd );if _fbgf =_eceb .WriteSamples (_dgab );
_fbgf !=nil {return img ,_fbgf ;};};return _ebgdf (&_gefe ),nil ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_gea .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_ccgf *_gea .PdfIndirectObject ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;
XObjectTypeUnknown ;);

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_acagda *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_gea .StreamEncoder ,error ){_dgeed ,_edff :=_acagda ._bgcec .(*_gea .PdfObjectStream );if !_edff {_fd .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_acagda ._bgcec );
return nil ,nil ,_gea .ErrTypeError ;};_bfeee ,_gaaae :=_gea .DecodeStream (_dgeed );if _gaaae !=nil {_fd .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_gaaae );
return nil ,nil ,_gaaae ;};_afdbcd ,_gaaae :=_gea .NewEncoderFromStream (_dgeed );if _gaaae !=nil {_fd .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_gaaae );
return nil ,nil ,_gaaae ;};return _bfeee ,_afdbcd ,nil ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_eggb *PdfFieldButton )IsPush ()bool {return _eggb .GetType ()==ButtonTypePush };func _eaeb (_accg _gea .PdfObject )(*PdfFunctionType3 ,error ){_ffceb :=&PdfFunctionType3 {};var _aeeaf *_gea .PdfObjectDictionary ;if _cedge ,_bgdd :=_accg .(*_gea .PdfIndirectObject );
_bgdd {_aggaa ,_ffgbd :=_cedge .PdfObject .(*_gea .PdfObjectDictionary );if !_ffgbd {return nil ,_gg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ffceb ._agaac =_cedge ;_aeeaf =_aggaa ;}else if _dcbe ,_bgdeg :=_accg .(*_gea .PdfObjectDictionary );
_bgdeg {_aeeaf =_dcbe ;}else {return nil ,_gg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_caae ,_geace :=_gea .TraceToDirectObject (_aeeaf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gea .PdfObjectArray );
if !_geace {_fd .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_gg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _caae .Len ()!=2{_fd .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_gg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_bcad ,_cgbdc :=_caae .ToFloat64Array ();
if _cgbdc !=nil {return nil ,_cgbdc ;};_ffceb .Domain =_bcad ;_caae ,_geace =_gea .TraceToDirectObject (_aeeaf .Get ("\u0052\u0061\u006eg\u0065")).(*_gea .PdfObjectArray );if _geace {if _caae .Len ()< 0||_caae .Len ()%2!=0{return nil ,_gg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_cacac ,_bgga :=_caae .ToFloat64Array ();if _bgga !=nil {return nil ,_bgga ;};_ffceb .Range =_cacac ;};_caae ,_geace =_gea .TraceToDirectObject (_aeeaf .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_gea .PdfObjectArray );if !_geace {_fd .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_gg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ffceb .Functions =[]PdfFunction {};
for _ ,_dgaaa :=range _caae .Elements (){_ggefa ,_gddfa :=_adggc (_dgaaa );if _gddfa !=nil {return nil ,_gddfa ;};_ffceb .Functions =append (_ffceb .Functions ,_ggefa );};_caae ,_geace =_gea .TraceToDirectObject (_aeeaf .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_gea .PdfObjectArray );
if !_geace {_fd .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_gg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_dedaf ,_cgbdc :=_caae .ToFloat64Array ();if _cgbdc !=nil {return nil ,_cgbdc ;};_ffceb .Bounds =_dedaf ;if len (_ffceb .Bounds )!=len (_ffceb .Functions )-1{_fd .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_ffceb .Bounds ),len (_ffceb .Functions ));
return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_caae ,_geace =_gea .TraceToDirectObject (_aeeaf .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_gea .PdfObjectArray );if !_geace {_fd .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_gg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ccbab ,_cgbdc :=_caae .ToFloat64Array ();
if _cgbdc !=nil {return nil ,_cgbdc ;};_ffceb .Encode =_ccbab ;if len (_ffceb .Encode )!=2*len (_ffceb .Functions ){_fd .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_ffceb .Encode ),len (_ffceb .Functions ));
return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _ffceb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cbb *PdfAnnotationProjection )ToPdfObject ()_gea .PdfObject {_cbb .PdfAnnotation .ToPdfObject ();_dgagg :=_cbb ._bbf ;_bce :=_dgagg .PdfObject .(*_gea .PdfObjectDictionary );_cbb .PdfAnnotationMarkup .appendToPdfDictionary (_bce );return _dgagg ;
};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_bgfgc :=&PdfSignature {Type :_gea .MakeName ("\u0053\u0069\u0067"),Handler :handler };_bcgbg :=&pdfSignDictionary {PdfObjectDictionary :_gea .MakeDict (),_gdafe :&handler ,_caaad :_bgfgc };
_bgfgc ._dagb =_gea .MakeIndirectObject (_bcgbg );return _bgfgc ;};var _ pdfFont =(*pdfFontType3 )(nil );func (_defc *PdfReader )newPdfAnnotationRichMediaFromDict (_cgbe *_gea .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_fbg :=&PdfAnnotationRichMedia {};
_fbg .RichMediaSettings =_cgbe .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_fbg .RichMediaContent =_cgbe .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _fbg ,nil ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _gea .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_bggcc *PdfSignatureReference )ToPdfObject ()_gea .PdfObject {_cceaa :=_gea .MakeDict ();_cceaa .SetIfNotNil ("\u0054\u0079\u0070\u0065",_bggcc .Type );_cceaa .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_bggcc .TransformMethod );
_cceaa .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_bggcc .TransformParams );_cceaa .SetIfNotNil ("\u0044\u0061\u0074\u0061",_bggcc .Data );_cceaa .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_bggcc .DigestMethod );
return _cceaa ;};func (_dfac *PdfReader )newPdfAnnotation3DFromDict (_ddfd *_gea .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_fgbc :=PdfAnnotation3D {};_fgbc .T3DD =_ddfd .Get ("\u0033\u0044\u0044");_fgbc .T3DV =_ddfd .Get ("\u0033\u0044\u0056");_fgbc .T3DA =_ddfd .Get ("\u0033\u0044\u0041");
_fgbc .T3DI =_ddfd .Get ("\u0033\u0044\u0049");_fgbc .T3DB =_ddfd .Get ("\u0033\u0044\u0042");return &_fgbc ,nil ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;type pdfSignDictionary struct{*_gea .PdfObjectDictionary ;_gdafe *SignatureHandler ;_caaad *PdfSignature ;_afdg int64 ;_dcacb int ;_fbdbc int ;_fcgda int ;_aadbbc int ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _gea .PdfObject ;FontFamily _gea .PdfObject ;FontStretch _gea .PdfObject ;FontWeight _gea .PdfObject ;Flags _gea .PdfObject ;FontBBox _gea .PdfObject ;ItalicAngle _gea .PdfObject ;Ascent _gea .PdfObject ;Descent _gea .PdfObject ;
Leading _gea .PdfObject ;CapHeight _gea .PdfObject ;XHeight _gea .PdfObject ;StemV _gea .PdfObject ;StemH _gea .PdfObject ;AvgWidth _gea .PdfObject ;MaxWidth _gea .PdfObject ;MissingWidth _gea .PdfObject ;FontFile _gea .PdfObject ;FontFile2 _gea .PdfObject ;
FontFile3 _gea .PdfObject ;CharSet _gea .PdfObject ;_efbcd int ;_eaaf float64 ;*fontFile ;_cdd *_ad .TtfType ;

// Additional entries for CIDFonts
Style _gea .PdfObject ;Lang _gea .PdfObject ;FD _gea .PdfObject ;CIDSet _gea .PdfObject ;_fdef *_gea .PdfIndirectObject ;};func _adcag ()string {_aefdbd .Lock ();defer _aefdbd .Unlock ();return _caacf };

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_gcbee *PdfFieldSignature )ToPdfObject ()_gea .PdfObject {if _gcbee .PdfAnnotationWidget !=nil {_gcbee .PdfAnnotationWidget .ToPdfObject ();};_gcbee .PdfField .ToPdfObject ();_bdag :=_gcbee ._bcga ;_eaeae :=_bdag .PdfObject .(*_gea .PdfObjectDictionary );
_eaeae .SetIfNotNil ("\u0046\u0054",_gea .MakeName ("\u0053\u0069\u0067"));_eaeae .SetIfNotNil ("\u004c\u006f\u0063\u006b",_gcbee .Lock );_eaeae .SetIfNotNil ("\u0053\u0056",_gcbee .SV );if _gcbee .V !=nil {_eaeae .SetIfNotNil ("\u0056",_gcbee .V .ToPdfObject ());
};return _bdag ;};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_cfcgf *PdfWriter )SetCatalogMetadata (meta _gea .PdfObject )error {if meta ==nil {_cfcgf ._ggbgf .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_ddbea ,_bccce :=_gea .GetStream (meta );if !_bccce {return _gg .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_cfcgf .addObject (_ddbea );_cfcgf ._ggbgf .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ddbea );return nil ;};

// ToPdfObject converts rectangle to a PDF object.
func (_aedcdc *PdfRectangle )ToPdfObject ()_gea .PdfObject {return _gea .MakeArray (_gea .MakeFloat (_aedcdc .Llx ),_gea .MakeFloat (_aedcdc .Lly ),_gea .MakeFloat (_aedcdc .Urx ),_gea .MakeFloat (_aedcdc .Ury ));};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_cda :=NewPdfAction ();_cafb :=&PdfActionGoTo3DView {};_cafb .PdfAction =_cda ;_cda .SetContext (_cafb );return _cafb ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_aefbg *Outline )ToPdfOutline ()*PdfOutline {_bccca :=NewPdfOutline ();var _fgedb []*PdfOutlineItem ;var _cbaa int64 ;var _cagba *PdfOutlineItem ;for _ ,_dbaae :=range _aefbg .Entries {_bcef ,_ebacf :=_dbaae .ToPdfOutlineItem ();_bcef .Parent =&_bccca .PdfOutlineTreeNode ;
if _cagba !=nil {_cagba .Next =&_bcef .PdfOutlineTreeNode ;_bcef .Prev =&_cagba .PdfOutlineTreeNode ;};_fgedb =append (_fgedb ,_bcef );_cbaa +=_ebacf ;_cagba =_bcef ;};_bdccfc :=int64 (len (_fgedb ));_cbaa +=_bdccfc ;if _bdccfc > 0{_bccca .First =&_fgedb [0].PdfOutlineTreeNode ;
_bccca .Last =&_fgedb [_bdccfc -1].PdfOutlineTreeNode ;_bccca .Count =&_cbaa ;};return _bccca ;};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_aedba *_gea .PdfObjectDictionary ;Type *_gea .PdfObjectName ;TransformMethod *_gea .PdfObjectName ;TransformParams _gea .PdfObject ;Data _gea .PdfObject ;DigestMethod *_gea .PdfObjectName ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _gea .PdfObject ;Mac _gea .PdfObject ;Unix _gea .PdfObject ;NewWindow _gea .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_cgfg *PdfAnnotationUnderline )ToPdfObject ()_gea .PdfObject {_cgfg .PdfAnnotation .ToPdfObject ();_efac :=_cgfg ._bbf ;_faag :=_efac .PdfObject .(*_gea .PdfObjectDictionary );_cgfg .PdfAnnotationMarkup .appendToPdfDictionary (_faag );_faag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_faag .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cgfg .QuadPoints );return _efac ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_eebd *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afebe :=vals [0];if _afebe < 0.0||_afebe > 1.0{_fd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_afebe );
return nil ,ErrColorOutOfRange ;};_edg :=vals [1];if _edg < 0.0||_edg > 1.0{_fd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_afebe );return nil ,ErrColorOutOfRange ;
};_ebgg :=vals [2];if _ebgg < 0.0||_ebgg > 1.0{_fd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_afebe );return nil ,ErrColorOutOfRange ;};_fcga :=NewPdfColorDeviceRGB (_afebe ,_edg ,_ebgg );
return _fcga ,nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_cdadc :=&PdfAppender {_cge :reader ._efged ,Reader :reader ,_bgaad :reader ._edcdb ,_bdd :reader ._gbef };_cecg ,_cdgg :=_cdadc ._cge .Seek (0,_cef .SeekEnd );if _cdgg !=nil {return nil ,_cdgg ;
};_cdadc ._gaaa =_cecg ;if _ ,_cdgg =_cdadc ._cge .Seek (0,_cef .SeekStart );_cdgg !=nil {return nil ,_cdgg ;};_cdadc ._ggea ,_cdgg =NewPdfReader (_cdadc ._cge );if _cdgg !=nil {return nil ,_cdgg ;};for _ ,_aaba :=range _cdadc .Reader .GetObjectNums (){if _cdadc ._bgbb < _aaba {_cdadc ._bgbb =_aaba ;
};};_cdadc ._fddc =_cdadc ._bgaad .GetXrefTable ();_cdadc ._ecfe =_cdadc ._bgaad .GetXrefOffset ();_cdadc ._adaf =append (_cdadc ._adaf ,_cdadc ._ggea .PageList ...);_cdadc ._edbc =make (map[_gea .PdfObject ]struct{});_cdadc ._dfaa =make (map[_gea .PdfObject ]int64 );
_cdadc ._dgc =make (map[_gea .PdfObject ]struct{});_cdadc ._ddeb =_cdadc ._ggea .AcroForm ;_cdadc ._edeb =_cdadc ._ggea .DSS ;return _cdadc ,nil ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
func (_cfeeb *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_eada :=_cfeeb .actualFont ();if _eada ==nil {_fd .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_cfeeb ._bgfbc );
return _ad .CharMetrics {},false ;};if _agda ,_fbdb :=_eada .GetRuneMetrics (r );_fbdb {return _agda ,true ;};if _bcdf ,_dgfba :=_cfeeb .GetFontDescriptor ();_dgfba ==nil &&_bcdf !=nil {return _ad .CharMetrics {Wx :_bcdf ._eaaf },true ;};_fd .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cfeeb );
return _ad .CharMetrics {},false ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_degdd :=NewPdfAnnotation ();_dfa :=&PdfAnnotationStrikeOut {};_dfa .PdfAnnotation =_degdd ;_dfa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_degdd .SetContext (_dfa );return _dfa ;};

// ImageToRGB convert an indexed image to RGB.
func (_dedab *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_dedab .Base .GetNumComponents ();if N < 1{return Image {},_e .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_ceag :=_deg .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._bdbf ,img ._edadg );_fbgb :=_ed .NewReader (img .getBase ());_efdcd :=_ed .NewWriter (_ceag );var (_daaf uint32 ;_fefe int ;_bbdb error ;);for {_daaf ,_bbdb =_fbgb .ReadSample ();
if _bbdb ==_cef .EOF {break ;}else if _bbdb !=nil {return img ,_bbdb ;};_fefe =int (_daaf );_fd .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_fefe ,N ,len (_dedab ._dbdg ));
if (_fefe +1)*N > len (_dedab ._dbdg ){_fefe =len (_dedab ._dbdg )/N -1;_fd .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_fefe );if _fefe < 0{_fd .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _bgea :=_fefe *N ;_bgea < (_fefe +1)*N ;_bgea ++{if _bbdb =_efdcd .WriteSample (uint32 (_dedab ._dbdg [_bgea ]));_bbdb !=nil {return img ,_bbdb ;};};};return _dedab .Base .ImageToRGB (_ebgdf (&_ceag ));};func (_ccgef *PdfWriter )makeOffSetReference (_ebacff int64 ){_fcbff :=_e .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_ebacff );
_ccgef .writeString (_fcbff );_ccgef .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};func (_caaa *PdfReader )newPdfFieldFromIndirectObject (_efacb *_gea .PdfIndirectObject ,_aabae *PdfField )(*PdfField ,error ){if _dcff ,_afba :=_caaa ._gace .GetModelFromPrimitive (_efacb ).(*PdfField );
_afba {return _dcff ,nil ;};_cgdf ,_cebd :=_gea .GetDict (_efacb );if !_cebd {return nil ,_e .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_cfeegb :=NewPdfField ();_cfeegb ._bcga =_efacb ;_cfeegb ._bcga .PdfObject =_cgdf ;if _abgc ,_degcc :=_gea .GetName (_cgdf .Get ("\u0046\u0054"));_degcc {_cfeegb .FT =_abgc ;};if _aabae !=nil {_cfeegb .Parent =_aabae ;};_cfeegb .T ,_ =_cgdf .Get ("\u0054").(*_gea .PdfObjectString );
_cfeegb .TU ,_ =_cgdf .Get ("\u0054\u0055").(*_gea .PdfObjectString );_cfeegb .TM ,_ =_cgdf .Get ("\u0054\u004d").(*_gea .PdfObjectString );_cfeegb .Ff ,_ =_cgdf .Get ("\u0046\u0066").(*_gea .PdfObjectInteger );_cfeegb .V =_cgdf .Get ("\u0056");_cfeegb .DV =_cgdf .Get ("\u0044\u0056");
_cfeegb .AA =_cgdf .Get ("\u0041\u0041");if DA :=_cgdf .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_gea .GetString (DA );_cfeegb .VariableText =&VariableText {DA :DA };Q ,_ :=_cgdf .Get ("\u0051").(*_gea .PdfObjectInteger );DS ,_ :=_cgdf .Get ("\u0044\u0053").(*_gea .PdfObjectString );
RV :=_cgdf .Get ("\u0052\u0056");_cfeegb .VariableText .Q =Q ;_cfeegb .VariableText .DS =DS ;_cfeegb .VariableText .RV =RV ;};_ddaf :=_cfeegb .FT ;if _ddaf ==nil &&_aabae !=nil {_ddaf =_aabae .FT ;};if _ddaf !=nil {switch *_ddaf {case "\u0054\u0078":_becbf ,_fgabg :=_bgfbe (_cgdf );
if _fgabg !=nil {return nil ,_fgabg ;};_becbf .PdfField =_cfeegb ;_cfeegb ._gafa =_becbf ;case "\u0043\u0068":_beeg ,_ceffe :=_debaf (_cgdf );if _ceffe !=nil {return nil ,_ceffe ;};_beeg .PdfField =_cfeegb ;_cfeegb ._gafa =_beeg ;case "\u0042\u0074\u006e":_abcd ,_eeffg :=_caeb (_cgdf );
if _eeffg !=nil {return nil ,_eeffg ;};_abcd .PdfField =_cfeegb ;_cfeegb ._gafa =_abcd ;case "\u0053\u0069\u0067":_cdba ,_ffef :=_caaa .newPdfFieldSignatureFromDict (_cgdf );if _ffef !=nil {return nil ,_ffef ;};_cdba .PdfField =_cfeegb ;_cfeegb ._gafa =_cdba ;
default:_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_cfeegb .FT );return nil ,_gg .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _gggc ,_bbfbg :=_gea .GetName (_cgdf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_bbfbg {if *_gggc =="\u0057\u0069\u0064\u0067\u0065\u0074"{_gfdc ,_edgg :=_caaa .newPdfAnnotationFromIndirectObject (_efacb );if _edgg !=nil {return nil ,_edgg ;
};_ecgb ,_fbafa :=_gfdc .GetContext ().(*PdfAnnotationWidget );if !_fbafa {return nil ,_gg .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_ecgb ._bbba =_cfeegb ;_ecgb .Parent =_cfeegb ._bcga ;
_cfeegb .Annotations =append (_cfeegb .Annotations ,_ecgb );return _cfeegb ,nil ;};};_beag :=true ;if _ffeaa ,_babc :=_gea .GetArray (_cgdf .Get ("\u004b\u0069\u0064\u0073"));_babc {_gcfb :=make ([]*_gea .PdfIndirectObject ,0,_ffeaa .Len ());for _ ,_abdf :=range _ffeaa .Elements (){_dacf ,_cfbce :=_gea .GetIndirect (_abdf );
if !_cfbce {_ccfb ,_abfa :=_gea .GetStream (_abdf );if _abfa &&_ccfb .PdfObjectDictionary !=nil {_cgac ,_bacee :=_gea .GetNameVal (_ccfb .Get ("\u0054\u0079\u0070\u0065"));if _bacee &&_cgac =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_fd .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_gg .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_faaaf ,_dcece :=_gea .GetDict (_dacf );
if !_dcece {return nil ,ErrTypeCheck ;};if _beag {_beag =!_gcaa (_faaaf );};_gcfb =append (_gcfb ,_dacf );};for _ ,_bcbgd :=range _gcfb {if _beag {_fbgea ,_gecgf :=_caaa .newPdfAnnotationFromIndirectObject (_bcbgd );if _gecgf !=nil {_fd .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_gecgf );
return nil ,_gecgf ;};_deca ,_afdf :=_fbgea ._fag .(*PdfAnnotationWidget );if !_afdf {return nil ,ErrTypeCheck ;};_deca ._bbba =_cfeegb ;_cfeegb .Annotations =append (_cfeegb .Annotations ,_deca );}else {_dgagga ,_dfbgf :=_caaa .newPdfFieldFromIndirectObject (_bcbgd ,_cfeegb );
if _dfbgf !=nil {_fd .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_dfbgf );return nil ,_dfbgf ;};_cfeegb .Kids =append (_cfeegb .Kids ,_dgagga );
};};};return _cfeegb ,nil ;};

// Subtype returns the font's "Subtype" field.
func (_bbbe *PdfFont )Subtype ()string {_bfge :=_bbbe .baseFields ()._abed ;if _ggecb ,_fcgbg :=_bbbe ._bgfbc .(*pdfFontType0 );_fcgbg {_bfge =_bfge +"\u003a"+_ggecb .DescendantFont .Subtype ();};return _bfge ;};

// ParserMetadata gets the parser  metadata.
func (_eggg *CompliancePdfReader )ParserMetadata ()_gea .ParserMetadata {if _eggg ._fcge ==(_gea .ParserMetadata {}){_eggg ._fcge ,_ =_eggg ._edcdb .ParserMetadata ();};return _eggg ._fcge ;};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_afff *PdfAppender )SetDocInfo (info *PdfInfo ){_afff ._dcdg =info };

// ToPdfObject implements interface PdfModel.
func (_bedb *PdfAnnotationInk )ToPdfObject ()_gea .PdfObject {_bedb .PdfAnnotation .ToPdfObject ();_dfec :=_bedb ._bbf ;_bebg :=_dfec .PdfObject .(*_gea .PdfObjectDictionary );_bedb .PdfAnnotationMarkup .appendToPdfDictionary (_bebg );_bebg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0049\u006e\u006b"));
_bebg .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_bedb .InkList );_bebg .SetIfNotNil ("\u0042\u0053",_bedb .BS );return _dfec ;};func _ggce (_bfdgf *PdfField )[]*PdfField {_ggacc :=[]*PdfField {_bfdgf };for _ ,_gccb :=range _bfdgf .Kids {_ggacc =append (_ggacc ,_ggce (_gccb )...);
};return _ggacc ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_bgdg *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bgdg .AlternateSpace ==nil {return nil ,_gg .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _bgdg .AlternateSpace .ColorToRGB (color );};

// ToPdfObject implements interface PdfModel.
func (_ecdd *PdfAnnotationTrapNet )ToPdfObject ()_gea .PdfObject {_ecdd .PdfAnnotation .ToPdfObject ();_agbd :=_ecdd ._bbf ;_ccae :=_agbd .PdfObject .(*_gea .PdfObjectDictionary );_ccae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _agbd ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _gea .PdfObject ;MK _gea .PdfObject ;A _gea .PdfObject ;AA _gea .PdfObject ;BS _gea .PdfObject ;Parent _gea .PdfObject ;_bbba *PdfField ;_gbaba bool ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dccfe *PdfShadingType5 )ToPdfObject ()_gea .PdfObject {_dccfe .PdfShading .ToPdfObject ();_eccdf ,_adcc :=_dccfe .getShadingDict ();if _adcc !=nil {_fd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dccfe .BitsPerCoordinate !=nil {_eccdf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dccfe .BitsPerCoordinate );};if _dccfe .BitsPerComponent !=nil {_eccdf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dccfe .BitsPerComponent );
};if _dccfe .VerticesPerRow !=nil {_eccdf .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_dccfe .VerticesPerRow );};if _dccfe .Decode !=nil {_eccdf .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dccfe .Decode );};
if _dccfe .Function !=nil {if len (_dccfe .Function )==1{_eccdf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dccfe .Function [0].ToPdfObject ());}else {_cceeg :=_gea .MakeArray ();for _ ,_dcdgb :=range _dccfe .Function {_cceeg .Append (_dcdgb .ToPdfObject ());
};_eccdf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cceeg );};};return _dccfe ._adae ;};

// ToPdfObject implements interface PdfModel.
func (_fga *PdfAnnotationWatermark )ToPdfObject ()_gea .PdfObject {_fga .PdfAnnotation .ToPdfObject ();_cedg :=_fga ._bbf ;_cgfd :=_cedg .PdfObject .(*_gea .PdfObjectDictionary );_cgfd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_cgfd .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_fga .FixedPrint );return _cedg ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
	    or: [/DeviceN names alternateSpace tintTransform attributes]
*/
func (_eaef *PdfColorspaceDeviceN )ToPdfObject ()_gea .PdfObject {_fbcb :=_gea .MakeArray (_gea .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_fbcb .Append (_eaef .ColorantNames );_fbcb .Append (_eaef .AlternateSpace .ToPdfObject ());_fbcb .Append (_eaef .TintTransform .ToPdfObject ());
if _eaef .Attributes !=nil {_fbcb .Append (_eaef .Attributes .ToPdfObject ());};if _eaef ._cbce !=nil {_eaef ._cbce .PdfObject =_fbcb ;return _eaef ._cbce ;};return _fbcb ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_fccad *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _fccad ._bbgeg !=nil {return _fccad ._bbgeg ,nil ;};if _fccad .ColorSpace ==nil {return nil ,nil ;};_ecbca ,_cdbeg :=_dcbgc (_fccad .ColorSpace );if _cdbeg !=nil {return nil ,_cdbeg ;
};_fccad ._bbgeg =_ecbca ;return _fccad ._bbgeg ,nil ;};func (_cadd *PdfReader )newPdfActionGotoRFromDict (_egaf *_gea .PdfObjectDictionary )(*PdfActionGoToR ,error ){_eff ,_debc :=_bdg (_egaf .Get ("\u0046"));if _debc !=nil {return nil ,_debc ;};return &PdfActionGoToR {D :_egaf .Get ("\u0044"),NewWindow :_egaf .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_eff },nil ;
};func (_gfeff *PdfFont )baseFields ()*fontCommon {if _gfeff ._bgfbc ==nil {_fd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _gfeff ._bgfbc .baseFields ();};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_dfece *PdfShadingPatternType2 )ToPdfObject ()_gea .PdfObject {_dfece .PdfPattern .ToPdfObject ();_babd :=_dfece .getDict ();if _dfece .Shading !=nil {_babd .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_dfece .Shading .ToPdfObject ());};if _dfece .Matrix !=nil {_babd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dfece .Matrix );
};if _dfece .ExtGState !=nil {_babd .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_dfece .ExtGState );};return _dfece ._bgcec ;};func _eedbg (_aaaaec *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_aaaaec }};func _gcaa (_gcab *_gea .PdfObjectDictionary )bool {for _ ,_gdfg :=range _gcab .Keys (){if _ ,_bfdg :=_ecbba [_gdfg .String ()];
_bfdg {return true ;};};return false ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_bfbce *PdfShadingPattern )ToPdfObject ()_gea .PdfObject {_bfbce .PdfPattern .ToPdfObject ();_acge :=_bfbce .getDict ();if _bfbce .Shading !=nil {_acge .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bfbce .Shading .ToPdfObject ());};if _bfbce .Matrix !=nil {_acge .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bfbce .Matrix );
};if _bfbce .ExtGState !=nil {_acge .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bfbce .ExtGState );};return _bfbce ._bgcec ;};type modelManager struct{_ecgee map[PdfModel ]_gea .PdfObject ;_efcba map[_gea .PdfObject ]PdfModel ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_efcg *PdfFieldText )ToPdfObject ()_gea .PdfObject {_efcg .PdfField .ToPdfObject ();_gdgd :=_efcg ._bcga ;_dffg :=_gdgd .PdfObject .(*_gea .PdfObjectDictionary );_dffg .Set ("\u0046\u0054",_gea .MakeName ("\u0054\u0078"));if _efcg .DA !=nil {_dffg .Set ("\u0044\u0041",_efcg .DA );
};if _efcg .Q !=nil {_dffg .Set ("\u0051",_efcg .Q );};if _efcg .DS !=nil {_dffg .Set ("\u0044\u0053",_efcg .DS );};if _efcg .RV !=nil {_dffg .Set ("\u0052\u0056",_efcg .RV );};if _efcg .MaxLen !=nil {_dffg .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_efcg .MaxLen );
};return _gdgd ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_eebdd *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _eebdd .Base ==nil {return nil ,_gg .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _eebdd .Base .ColorToRGB (color );};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_gea .PdfObjectStream ;Data []byte ;_adcg *_gea .PdfIndirectObject ;_eeca *_gea .PdfObjectStream ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _gea .PdfObject ;Name _gea .PdfObject ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _gea .PdfObject ;Flags _gea .PdfObject ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_ecee *_gea .PdfObjectDictionary ;_ddcgd *_gea .PdfIndirectObject ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_eggbb :=NewPdfOutline ();_eggbb ._bdagf =&_eggbb ;return _eggbb ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_bdbf []byte ;_edadg []float64 ;};func _aeac (_egga *XObjectForm )(*PdfRectangle ,bool ,error ){if _ecafa ,_eeffgf :=_egga .BBox .(*_gea .PdfObjectArray );
_eeffgf {_dage ,_fffad :=NewPdfRectangle (*_ecafa );if _fffad !=nil {return nil ,false ,_fffad ;};if _gdgba ,_adaae :=_egga .Matrix .(*_gea .PdfObjectArray );_adaae {_befd ,_gaff :=_gdgba .ToFloat64Array ();if _gaff !=nil {return nil ,false ,_gaff ;};_aced :=_fe .IdentityMatrix ();
if len (_befd )==6{_aced =_fe .NewMatrix (_befd [0],_befd [1],_befd [2],_befd [3],_befd [4],_befd [5]);};_dage .Transform (_aced );return _dage ,true ,nil ;};return _dage ,false ,nil ;};return nil ,false ,_gg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061n\u0063e\u0020\u0042\u0042\u006f\u0078\u0020\u0074y\u0070\u0065");
};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_fedad *PdfTilingPattern )ToPdfObject ()_gea .PdfObject {_fedad .PdfPattern .ToPdfObject ();_cbcga :=_fedad .getDict ();if _fedad .PaintType !=nil {_cbcga .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_fedad .PaintType );};if _fedad .TilingType !=nil {_cbcga .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_fedad .TilingType );
};if _fedad .BBox !=nil {_cbcga .Set ("\u0042\u0042\u006f\u0078",_fedad .BBox .ToPdfObject ());};if _fedad .XStep !=nil {_cbcga .Set ("\u0058\u0053\u0074e\u0070",_fedad .XStep );};if _fedad .YStep !=nil {_cbcga .Set ("\u0059\u0053\u0074e\u0070",_fedad .YStep );
};if _fedad .Resources !=nil {_cbcga .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_fedad .Resources .ToPdfObject ());};if _fedad .Matrix !=nil {_cbcga .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fedad .Matrix );};return _fedad ._bgcec ;};func (_cfba fontCommon )asPdfObjectDictionary (_dfbbbf string )*_gea .PdfObjectDictionary {if _dfbbbf !=""&&_cfba ._abed !=""&&_dfbbbf !=_cfba ._abed {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_dfbbbf ,_cfba );
}else if _dfbbbf ==""&&_cfba ._abed ==""{_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_cfba );
}else if _cfba ._abed ==""{_cfba ._abed =_dfbbbf ;};_gaea :=_gea .MakeDict ();_gaea .Set ("\u0054\u0079\u0070\u0065",_gea .MakeName ("\u0046\u006f\u006e\u0074"));_gaea .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_gea .MakeName (_cfba ._cacc ));
_gaea .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName (_cfba ._abed ));if _cfba ._baffg !=nil {_gaea .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_cfba ._baffg .ToPdfObject ());};if _cfba ._bbeaa !=nil {_gaea .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_cfba ._bbeaa );
}else if _cfba ._cbfe !=nil {_gcddb ,_cgacd :=_cfba ._cbfe .Stream ();if _cgacd !=nil {_fd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_cgacd );
}else {_gaea .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_gcddb );};};return _gaea ;};func _gfeca (_ebdgd *_gea .PdfObjectDictionary )(*PdfTilingPattern ,error ){_cdge :=&PdfTilingPattern {};_febb :=_ebdgd .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");
if _febb ==nil {_fd .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_adbdd ,_dgcb :=_febb .(*_gea .PdfObjectInteger );if !_dgcb {_fd .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_febb );
return nil ,_gea .ErrTypeError ;};_cdge .PaintType =_adbdd ;_febb =_ebdgd .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _febb ==nil {_fd .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bbfea ,_dgcb :=_febb .(*_gea .PdfObjectInteger );if !_dgcb {_fd .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_febb );
return nil ,_gea .ErrTypeError ;};_cdge .TilingType =_bbfea ;_febb =_ebdgd .Get ("\u0042\u0042\u006f\u0078");if _febb ==nil {_fd .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_febb =_gea .TraceToDirectObject (_febb );_gdefg ,_dgcb :=_febb .(*_gea .PdfObjectArray );if !_dgcb {_fd .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_febb );
return nil ,_gea .ErrTypeError ;};_eaeee ,_ecea :=NewPdfRectangle (*_gdefg );if _ecea !=nil {_fd .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_ecea );return nil ,_ecea ;};_cdge .BBox =_eaeee ;_febb =_ebdgd .Get ("\u0058\u0053\u0074e\u0070");
if _febb ==nil {_fd .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_begea ,_ecea :=_gea .GetNumberAsFloat (_febb );if _ecea !=nil {_fd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_begea );
return nil ,_ecea ;};_cdge .XStep =_gea .MakeFloat (_begea );_febb =_ebdgd .Get ("\u0059\u0053\u0074e\u0070");if _febb ==nil {_fd .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_gcbgb ,_ecea :=_gea .GetNumberAsFloat (_febb );if _ecea !=nil {_fd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_gcbgb );
return nil ,_ecea ;};_cdge .YStep =_gea .MakeFloat (_gcbgb );_febb =_ebdgd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _febb ==nil {_fd .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ebdgd ,_dgcb =_gea .TraceToDirectObject (_febb ).(*_gea .PdfObjectDictionary );if !_dgcb {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_febb );
};_deedcc ,_ecea :=NewPdfPageResourcesFromDict (_ebdgd );if _ecea !=nil {return nil ,_ecea ;};_cdge .Resources =_deedcc ;if _bdfe :=_ebdgd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_bdfe !=nil {_dafcd ,_eageg :=_bdfe .(*_gea .PdfObjectArray );if !_eageg {_fd .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bdfe );
return nil ,_gea .ErrTypeError ;};_cdge .Matrix =_dafcd ;};return _cdge ,nil ;};

// ReplacePage replaces the original page to a new page.
func (_ecdg *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_fcba :=pageNum -1;for _dgca :=range _ecdg ._adaf {if _dgca ==_fcba {_bfeff :=page .Duplicate ();_gcebe (_bfeff );_ecdg ._adaf [_dgca ]=_bfeff ;};};};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_gea .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _gea .PdfObject ;A _gea .PdfObject ;SE _gea .PdfObject ;C _gea .PdfObject ;F _gea .PdfObject ;
_cgcf *_gea .PdfIndirectObject ;};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};func _dcbdd (_fefd _gea .PdfObject ,_gbdbd bool )(*PdfFont ,error ){_fgfgc ,_bfgb ,_dbfb :=_dbgea (_fefd );if _fgfgc !=nil {_gddff (_fgfgc );};if _dbfb !=nil {if _dbfb ==ErrType1CFontNotSupported {_dbdgb ,_fdga :=_efbdg (_fgfgc ,_bfgb ,nil );
if _fdga !=nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_bfgb ,_fdga );
return nil ,_dbfb ;};return &PdfFont {_bgfbc :_dbdgb },_dbfb ;};return nil ,_dbfb ;};_fbcbd :=&PdfFont {};switch _bfgb ._abed {case "\u0054\u0079\u0070e\u0030":if !_gbdbd {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bfgb );
return nil ,_gg .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_bcafe ,_beged :=_ffdd (_fgfgc ,_bfgb );if _beged !=nil {_fd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bfgb ,_beged );
return nil ,_beged ;};_fbcbd ._bgfbc =_bcafe ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _fagaf *pdfFontSimple ;_deggg ,_bafeg :=_ad .NewStdFontByName (_ad .StdFontName (_bfgb ._cacc ));
if _bafeg {_gcec :=_adga (_deggg );_fbcbd ._bgfbc =&_gcec ;_ggfcd :=_gea .TraceToDirectObject (_gcec .ToPdfObject ());_bdccf ,_bgdb ,_adaff :=_dbgea (_ggfcd );if _adaff !=nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_bfgb ,_gcec );
return nil ,_adaff ;};for _ ,_dfag :=range _fgfgc .Keys (){_bdccf .Set (_dfag ,_fgfgc .Get (_dfag ));};_fagaf ,_adaff =_efbdg (_bdccf ,_bgdb ,_gcec ._cdggf );if _adaff !=nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_bfgb ,_gcec );
return nil ,_adaff ;};_fagaf ._bgdfg =_gcec ._bgdfg ;_fagaf ._eaeaef =_gcec ._eaeaef ;if _fagaf ._bgfcb ==nil {_fagaf ._bgfcb =_gcec ._bgfcb ;};}else {_fagaf ,_dbfb =_efbdg (_fgfgc ,_bfgb ,nil );if _dbfb !=nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_bfgb ,_dbfb );
return nil ,_dbfb ;};};_dbfb =_fagaf .addEncoding ();if _dbfb !=nil {return nil ,_dbfb ;};if _bafeg {_fagaf .updateStandard14Font ();};if _bafeg &&_fagaf ._egaa ==nil &&_fagaf ._cdggf ==nil {_fd .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fagaf );
_fd .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_deggg );};if len (_fagaf ._bgdfg )==0{_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_fagaf );};_fbcbd ._bgfbc =_fagaf ;
case "\u0054\u0079\u0070e\u0033":_bafd ,_bbcgg :=_ddfdg (_fgfgc ,_bfgb );if _bbcgg !=nil {_fd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_bbcgg );
return nil ,_bbcgg ;};_fbcbd ._bgfbc =_bafd ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_caeg ,_cdeg :=_dfbga (_fgfgc ,_bfgb );if _cdeg !=nil {_fd .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_cdeg );
return nil ,_cdeg ;};_fbcbd ._bgfbc =_caeg ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_bcfd ,_beed :=_gbbad (_fgfgc ,_bfgb );if _beed !=nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bfgb ,_beed );
return nil ,_beed ;};_fbcbd ._bgfbc =_bcfd ;default:_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_bfgb );
return nil ,_e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bfgb );};return _fbcbd ,nil ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_dgeeg *PdfFieldButton )GetType ()ButtonType {_afbgc :=ButtonTypeCheckbox ;if _dgeeg .Ff !=nil {if (uint32 (*_dgeeg .Ff )&FieldFlagPushbutton .Mask ())> 0{_afbgc =ButtonTypePush ;}else if (uint32 (*_dgeeg .Ff )&FieldFlagRadio .Mask ())> 0{_afbgc =ButtonTypeRadio ;
};};return _afbgc ;};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_dcec :=&PdfAppender {_cge :reader ._efged ,Reader :reader ,_bgaad :reader ._edcdb ,_bdd :reader ._gbef };_acef ,_cedd :=_dcec ._cge .Seek (0,_cef .SeekEnd );
if _cedd !=nil {return nil ,_cedd ;};_dcec ._gaaa =_acef ;if _ ,_cedd =_dcec ._cge .Seek (0,_cef .SeekStart );_cedd !=nil {return nil ,_cedd ;};_dcec ._ggea ,_cedd =NewPdfReaderWithOpts (_dcec ._cge ,opts );if _cedd !=nil {return nil ,_cedd ;};for _ ,_gbcc :=range _dcec .Reader .GetObjectNums (){if _dcec ._bgbb < _gbcc {_dcec ._bgbb =_gbcc ;
};};_dcec ._fddc =_dcec ._bgaad .GetXrefTable ();_dcec ._ecfe =_dcec ._bgaad .GetXrefOffset ();_dcec ._adaf =append (_dcec ._adaf ,_dcec ._ggea .PageList ...);_dcec ._edbc =make (map[_gea .PdfObject ]struct{});_dcec ._dfaa =make (map[_gea .PdfObject ]int64 );
_dcec ._dgc =make (map[_gea .PdfObject ]struct{});_dcec ._ddeb =_dcec ._ggea .AcroForm ;_dcec ._edeb =_dcec ._ggea .DSS ;if opts !=nil {_dcec ._cfgff =opts .Password ;};if encryptOptions !=nil {_dcec ._geg =encryptOptions ;};return _dcec ,nil ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_gabd *PdfField )SetContext (ctx PdfModel ){_gabd ._gafa =ctx };

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_deaf *PdfAnnotation )GetContext ()PdfModel {if _deaf ==nil {return nil ;};return _deaf ._fag ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_aeega :=PdfColorCalRGB {a ,b ,c };return &_aeega ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_bggce *PdfPageResources )SetXObjectFormByName (keyName _gea .PdfObjectName ,xform *XObjectForm )error {_ebgfc :=xform .ToPdfObject ().(*_gea .PdfObjectStream );_gafdg :=_bggce .SetXObjectByName (keyName ,_ebgfc );return _gafdg ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_gea .PdfObjectStream )(*XObjectForm ,error ){_bbca :=&XObjectForm {};_bbca ._ggdde =stream ;_caded :=*(stream .PdfObjectDictionary );_abddaa ,_gbebc :=_gea .NewEncoderFromStream (stream );if _gbebc !=nil {return nil ,_gbebc ;
};_bbca .Filter =_abddaa ;if _cdbbb :=_caded .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_cdbbb !=nil {_ccgcae ,_bcbf :=_cdbbb .(*_gea .PdfObjectName );if !_bcbf {return nil ,_gg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_ccgcae !="\u0046\u006f\u0072\u006d"{_fd .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_gg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _bdfbf :=_caded .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_bdfbf !=nil {_bbca .FormType =_bdfbf ;};if _cecba :=_caded .Get ("\u0042\u0042\u006f\u0078");_cecba !=nil {_bbca .BBox =_cecba ;};if _cbceb :=_caded .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_cbceb !=nil {_bbca .Matrix =_cbceb ;};if _bdaeg :=_caded .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_bdaeg !=nil {_bdaeg =_gea .TraceToDirectObject (_bdaeg );_aggc ,_dbdgd :=_bdaeg .(*_gea .PdfObjectDictionary );if !_dbdgd {_fd .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_gea .ErrTypeError ;};_fegef ,_bbbage :=NewPdfPageResourcesFromDict (_aggc );if _bbbage !=nil {_fd .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_bbbage ;};_bbca .Resources =_fegef ;_fd .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_bbca .Resources );};_bbca .Group =_caded .Get ("\u0047\u0072\u006fu\u0070");_bbca .Ref =_caded .Get ("\u0052\u0065\u0066");
_bbca .MetaData =_caded .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_bbca .PieceInfo =_caded .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_bbca .LastModified =_caded .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_bbca .StructParent =_caded .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_bbca .StructParents =_caded .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_bbca .OPI =_caded .Get ("\u004f\u0050\u0049");
_bbca .OC =_caded .Get ("\u004f\u0043");_bbca .Name =_caded .Get ("\u004e\u0061\u006d\u0065");_bbca .Stream =stream .Stream ;return _bbca ,nil ;};func _efbdg (_bcegfb *_gea .PdfObjectDictionary ,_cfbcg *fontCommon ,_eeeff _ceb .TextEncoder )(*pdfFontSimple ,error ){_dcgb :=_aebeb (_cfbcg );
_dcgb ._cdggf =_eeeff ;if _eeeff ==nil {_eegfc :=_bcegfb .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _eegfc ==nil {_eegfc =_gea .MakeInteger (0);};_dcgb .FirstChar =_eegfc ;_fefdf ,_edef :=_gea .GetIntVal (_eegfc );if !_edef {_fd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_eegfc );
return nil ,_gea .ErrTypeError ;};_eggf :=_ceb .CharCode (_fefdf );_eegfc =_bcegfb .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _eegfc ==nil {_eegfc =_gea .MakeInteger (255);};_dcgb .LastChar =_eegfc ;_fefdf ,_edef =_gea .GetIntVal (_eegfc );
if !_edef {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_eegfc );return nil ,_gea .ErrTypeError ;
};_abfag :=_ceb .CharCode (_fefdf );_dcgb ._bgdfg =make (map[_ceb .CharCode ]float64 );_eegfc =_bcegfb .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _eegfc !=nil {_dcgb .Widths =_eegfc ;_gcfca ,_fbdf :=_gea .GetArray (_eegfc );if !_fbdf {_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_eegfc );
return nil ,_gea .ErrTypeError ;};_abca ,_gafd :=_gcfca .ToFloat64Array ();if _gafd !=nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_gafd ;};if len (_abca )!=int (_abfag -_eggf +1){_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_abfag -_eggf +1,len (_abca ));
return nil ,_gea .ErrRangeError ;};for _bfee ,_dcca :=range _abca {_dcgb ._bgdfg [_eggf +_ceb .CharCode (_bfee )]=_dcca ;};};};_dcgb .Encoding =_gea .TraceToDirectObject (_bcegfb .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _dcgb ,nil ;
};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_adebg *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_fd .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_fd .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_fd .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_fd .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_dgdgc ,_fefa :=_deg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._bdbf ,img ._edadg );if _fefa !=nil {return Image {},_fefa ;};_eaedg ,_fefa :=_deg .NRGBAConverter .Convert (_dgdgc );
if _fefa !=nil {return Image {},_fefa ;};return _ebgdf (_eaedg .Base ()),nil ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_bgfbc pdfFont };

// Register registers (caches) a model to primitive object relationship.
func (_cffe *modelManager )Register (primitive _gea .PdfObject ,model PdfModel ){_cffe ._ecgee [model ]=primitive ;_cffe ._efcba [primitive ]=model ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_gea .PdfObjectArray ;Domain *_gea .PdfObjectArray ;Function []PdfFunction ;Extend *_gea .PdfObjectArray ;};func _bagd (_ecdbb _gea .PdfObject )(*PdfBorderStyle ,error ){_cgff :=&PdfBorderStyle {};_cgff ._dcf =_ecdbb ;
var _fdcf *_gea .PdfObjectDictionary ;_ecdbb =_gea .TraceToDirectObject (_ecdbb );_fdcf ,_bge :=_ecdbb .(*_gea .PdfObjectDictionary );if !_bge {return nil ,_gg .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _afdc :=_fdcf .Get ("\u0054\u0079\u0070\u0065");
_afdc !=nil {_fgdb ,_fggc :=_afdc .(*_gea .PdfObjectName );if !_fggc {_fd .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_afdc );
}else {if *_fgdb !="\u0042\u006f\u0072\u0064\u0065\u0072"{_fd .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_fgdb );};};};if _fadd :=_fdcf .Get ("\u0057");
_fadd !=nil {_dbcb ,_cageg :=_gea .GetNumberAsFloat (_fadd );if _cageg !=nil {_fd .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_cageg );return nil ,_cageg ;};_cgff .W =&_dbcb ;
};if _bafb :=_fdcf .Get ("\u0053");_bafb !=nil {_gecg ,_dfgc :=_bafb .(*_gea .PdfObjectName );if !_dfgc {return nil ,_gg .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _gged BorderStyle ;switch *_gecg {case "\u0053":_gged =BorderStyleSolid ;case "\u0044":_gged =BorderStyleDashed ;case "\u0042":_gged =BorderStyleBeveled ;case "\u0049":_gged =BorderStyleInset ;case "\u0055":_gged =BorderStyleUnderline ;default:_fd .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_gecg );
return nil ,_gg .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_cgff .S =&_gged ;};if _cffd :=_fdcf .Get ("\u0044");_cffd !=nil {_afbb ,_fcab :=_cffd .(*_gea .PdfObjectArray );
if !_fcab {_fd .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_cffd );return nil ,_gg .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_ccfcb ,_eced :=_afbb .ToIntegerArray ();if _eced !=nil {_fd .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_eced );
return nil ,_eced ;};_cgff .D =&_ccfcb ;};return _cgff ,nil ;};

// GetContentStream returns the pattern cell's content stream
func (_aadfc *PdfTilingPattern )GetContentStream ()([]byte ,error ){_abedb ,_ ,_addeb :=_aadfc .GetContentStreamWithEncoder ();return _abedb ,_addeb ;};func (_bddbbd *PdfWriter )setDocumentIDs (_faccb ,_faddg string ){_bddbbd ._bdgfbe =_gea .MakeArray (_gea .MakeHexString (_faccb ),_gea .MakeHexString (_faddg ));
};func (_eedb *PdfReader )newPdfAnnotationUnderlineFromDict (_dcdea *_gea .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_dbe :=PdfAnnotationUnderline {};_afbe ,_aaa :=_eedb .newPdfAnnotationMarkupFromDict (_dcdea );if _aaa !=nil {return nil ,_aaa ;
};_dbe .PdfAnnotationMarkup =_afbe ;_dbe .QuadPoints =_dcdea .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_dbe ,nil ;};func (_ebab *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";
};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_cdef *PdfReader )GetEncryptionMethod ()string {_cegde :=_cdef ._edcdb .GetCrypter ();return _cegde .String ();};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_abab :=&PdfColorspaceLab {};_abab .BlackPoint =[]float64 {0.0,0.0,0.0};_abab .Range =[]float64 {-100,100,-100,100};return _abab ;};

// ToPdfObject implements interface PdfModel.
func (_fcf *PdfActionMovie )ToPdfObject ()_gea .PdfObject {_fcf .PdfAction .ToPdfObject ();_ace :=_fcf ._af ;_fgd :=_ace .PdfObject .(*_gea .PdfObjectDictionary );_fgd .SetIfNotNil ("\u0053",_gea .MakeName (string (ActionTypeMovie )));_fgd .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_fcf .Annotation );
_fgd .SetIfNotNil ("\u0054",_fcf .T );_fgd .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_fcf .Operation );return _ace ;};

// NewPdfColorPattern returns an empty color pattern.
func NewPdfColorPattern ()*PdfColorPattern {_dbdbd :=&PdfColorPattern {};return _dbdbd };

// ToPdfObject returns the PDF representation of the outline tree node.
func (_fgbb *PdfOutlineTreeNode )ToPdfObject ()_gea .PdfObject {return _fgbb .GetContext ().ToPdfObject ();};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_eba *PdfAction )GetContext ()PdfModel {if _eba ==nil {return nil ;};return _eba ._fc ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_beaef *PdfFontDescriptor )ToPdfObject ()_gea .PdfObject {_gaaaf :=_gea .MakeDict ();if _beaef ._fdef ==nil {_beaef ._fdef =&_gea .PdfIndirectObject {};};_beaef ._fdef .PdfObject =_gaaaf ;_gaaaf .Set ("\u0054\u0079\u0070\u0065",_gea .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _beaef .FontName !=nil {_gaaaf .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_beaef .FontName );};if _beaef .FontFamily !=nil {_gaaaf .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_beaef .FontFamily );};if _beaef .FontStretch !=nil {_gaaaf .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_beaef .FontStretch );
};if _beaef .FontWeight !=nil {_gaaaf .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_beaef .FontWeight );};if _beaef .Flags !=nil {_gaaaf .Set ("\u0046\u006c\u0061g\u0073",_beaef .Flags );};if _beaef .FontBBox !=nil {_gaaaf .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_beaef .FontBBox );
};if _beaef .ItalicAngle !=nil {_gaaaf .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_beaef .ItalicAngle );};if _beaef .Ascent !=nil {_gaaaf .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_beaef .Ascent );};if _beaef .Descent !=nil {_gaaaf .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_beaef .Descent );
};if _beaef .Leading !=nil {_gaaaf .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_beaef .Leading );};if _beaef .CapHeight !=nil {_gaaaf .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_beaef .CapHeight );};if _beaef .XHeight !=nil {_gaaaf .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_beaef .XHeight );
};if _beaef .StemV !=nil {_gaaaf .Set ("\u0053\u0074\u0065m\u0056",_beaef .StemV );};if _beaef .StemH !=nil {_gaaaf .Set ("\u0053\u0074\u0065m\u0048",_beaef .StemH );};if _beaef .AvgWidth !=nil {_gaaaf .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_beaef .AvgWidth );
};if _beaef .MaxWidth !=nil {_gaaaf .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_beaef .MaxWidth );};if _beaef .MissingWidth !=nil {_gaaaf .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_beaef .MissingWidth );};
if _beaef .FontFile !=nil {_gaaaf .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_beaef .FontFile );};if _beaef .FontFile2 !=nil {_gaaaf .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_beaef .FontFile2 );};if _beaef .FontFile3 !=nil {_gaaaf .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_beaef .FontFile3 );
};if _beaef .CharSet !=nil {_gaaaf .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_beaef .CharSet );};if _beaef .Style !=nil {_gaaaf .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_beaef .FontName );};if _beaef .Lang !=nil {_gaaaf .Set ("\u004c\u0061\u006e\u0067",_beaef .Lang );
};if _beaef .FD !=nil {_gaaaf .Set ("\u0046\u0044",_beaef .FD );};if _beaef .CIDSet !=nil {_gaaaf .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_beaef .CIDSet );};return _beaef ._fdef ;};

// BaseFont returns the font's "BaseFont" field.
func (_edec *PdfFont )BaseFont ()string {return _edec .baseFields ()._cacc };

// SetVersion sets the PDF version of the output file.
func (_cacd *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_cacd ._fedce .Major =majorVersion ;_cacd ._fedce .Minor =minorVersion ;};func _gbdd ()string {_gdcc :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _cceb _ddg .Buffer ;for _feceeb :=0;_feceeb < 6;_feceeb ++{_cceb .WriteRune (rune (_gdcc [_dd .Intn (len (_gdcc ))]));};return _cceb .String ();};

// GetAction returns the PDF action for the annotation link.
func (_feee *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _feee ._gaaf !=nil {return _feee ._gaaf ,nil ;};if _feee .A ==nil {return nil ,nil ;};if _feee ._eece ==nil {return nil ,nil ;};_bgca ,_eaa :=_feee ._eece .loadAction (_feee .A );if _eaa !=nil {return nil ,_eaa ;
};_feee ._gaaf =_bgca ;return _feee ._gaaf ,nil ;};func (_faec *PdfReader )newPdfAnnotationMarkupFromDict (_fafd *_gea .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_cfcg :=&PdfAnnotationMarkup {};if _gbgb :=_fafd .Get ("\u0054");_gbgb !=nil {_cfcg .T =_gbgb ;
};if _abde :=_fafd .Get ("\u0050\u006f\u0070u\u0070");_abde !=nil {_agb ,_edbf :=_abde .(*_gea .PdfIndirectObject );if !_edbf {if _ ,_babb :=_abde .(*_gea .PdfObjectNull );!_babb {return nil ,_gg .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_fec ,_dbdb :=_faec .newPdfAnnotationFromIndirectObject (_agb );if _dbdb !=nil {return nil ,_dbdb ;};if _fec !=nil {_ggf ,_gdbg :=_fec ._fag .(*PdfAnnotationPopup );if !_gdbg {return nil ,_gg .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_cfcg .Popup =_ggf ;};};};if _effgg :=_fafd .Get ("\u0043\u0041");_effgg !=nil {_cfcg .CA =_effgg ;};if _gcbc :=_fafd .Get ("\u0052\u0043");_gcbc !=nil {_cfcg .RC =_gcbc ;};if _aadd :=_fafd .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_aadd !=nil {_cfcg .CreationDate =_aadd ;};if _ccdd :=_fafd .Get ("\u0049\u0052\u0054");_ccdd !=nil {_cfcg .IRT =_ccdd ;};if _ged :=_fafd .Get ("\u0053\u0075\u0062\u006a");_ged !=nil {_cfcg .Subj =_ged ;};if _bdcc :=_fafd .Get ("\u0052\u0054");_bdcc !=nil {_cfcg .RT =_bdcc ;
};if _aege :=_fafd .Get ("\u0049\u0054");_aege !=nil {_cfcg .IT =_aege ;};if _gcfe :=_fafd .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_gcfe !=nil {_cfcg .ExData =_gcfe ;};return _cfcg ,nil ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_dada *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};func (_aedga *PdfWriter )copyObjects (){_dfbge :=make (map[_gea .PdfObject ]_gea .PdfObject );_cecde :=make ([]_gea .PdfObject ,0,len (_aedga ._aeaa ));_cfdab :=make (map[_gea .PdfObject ]struct{},len (_aedga ._aeaa ));
_gccge :=make (map[_gea .PdfObject ]struct{});for _ ,_abbcb :=range _aedga ._aeaa {_bfagb :=_aedga .copyObject (_abbcb ,_dfbge ,_gccge ,false );if _ ,_afaaa :=_gccge [_abbcb ];_afaaa {continue ;};_cecde =append (_cecde ,_bfagb );_cfdab [_bfagb ]=struct{}{};
};_aedga ._aeaa =_cecde ;_aedga ._edfdb =_cfdab ;_aedga ._efabg =_aedga .copyObject (_aedga ._efabg ,_dfbge ,nil ,false ).(*_gea .PdfIndirectObject );_aedga ._bcbed =_aedga .copyObject (_aedga ._bcbed ,_dfbge ,nil ,false ).(*_gea .PdfIndirectObject );if _aedga ._caaaa !=nil {_aedga ._caaaa =_aedga .copyObject (_aedga ._caaaa ,_dfbge ,nil ,false ).(*_gea .PdfIndirectObject );
};if _aedga ._abaff {_fabgd :=make (map[_gea .PdfObject ]int64 );for _ebbcb ,_bcaac :=range _aedga ._egfbf {if _gdebc ,_addaag :=_dfbge [_ebbcb ];_addaag {_fabgd [_gdebc ]=_bcaac ;}else {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_aedga ._egfbf =_fabgd ;};};

// AddCustomInfo adds a custom info into document info dictionary.
func (_dega *PdfInfo )AddCustomInfo (name string ,value string )error {if _dega ._geda ==nil {_dega ._geda =_gea .MakeDict ();};if _ ,_bfcf :=_adfc [name ];_bfcf {return _e .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_dega ._geda .SetIfNotNil (*_gea .MakeName (name ),_gea .MakeString (value ));return nil ;};

// GetStructRoot gets the StructTreeRoot object
func (_fbgfg *PdfPage )GetStructTreeRoot ()(*_gea .PdfObject ,bool ){_fabe ,_agaef :=_fbgfg ._ddffg .GetCatalogStructTreeRoot ();return &_fabe ,_agaef ;};func (_egdc *PdfReader )newPdfAnnotationWatermarkFromDict (_abg *_gea .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_ccfe :=PdfAnnotationWatermark {};
_ccfe .FixedPrint =_abg .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_ccfe ,nil ;};func (_ebcb *PdfPage )setContainer (_fgbf *_gea .PdfIndirectObject ){_fgbf .PdfObject =_ebcb ._acebb ;_ebcb ._gfgfdc =_fgbf ;};func (_gdcef *LTV )getCRLs (_decce []*_cg .Certificate )([][]byte ,error ){_ccecc :=make ([][]byte ,0,len (_decce ));
for _ ,_ddbca :=range _decce {for _ ,_gfbcf :=range _ddbca .CRLDistributionPoints {if _gdcef .CertClient .IsCA (_ddbca ){continue ;};_fegc ,_geacf :=_gdcef .CRLClient .MakeRequest (_gfbcf ,_ddbca );if _geacf !=nil {_fd .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_geacf );
continue ;};_ccecc =append (_ccecc ,_fegc );};};return _ccecc ,nil ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_eaed *PdfAnnotationWidget )Field ()*PdfField {return _eaed ._bbba };

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _gea .PdfObject ;IC _gea .PdfObject ;BE _gea .PdfObject ;RD _gea .PdfObject ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_dfeaab *PdfReader )GetTrailer ()(*_gea .PdfObjectDictionary ,error ){_bcde :=_dfeaab ._edcdb .GetTrailer ();if _bcde ==nil {return nil ,_gg .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _bcde ,nil ;
};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _gea .PdfObject ;};func _adga (_fgcgd _ad .StdFont )pdfFontSimple {_dabfbb :=_fgcgd .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_abed :"\u0054\u0079\u0070e\u0031",_cacc :_fgcgd .Name ()},_eaeaef :_fgcgd .GetMetricsTable (),_bgfcb :&PdfFontDescriptor {FontName :_gea .MakeName (string (_dabfbb .Name )),FontFamily :_gea .MakeName (_dabfbb .Family ),FontWeight :_gea .MakeFloat (float64 (_dabfbb .Weight )),Flags :_gea .MakeInteger (int64 (_dabfbb .Flags )),FontBBox :_gea .MakeArrayFromFloats (_dabfbb .BBox [:]),ItalicAngle :_gea .MakeFloat (_dabfbb .ItalicAngle ),Ascent :_gea .MakeFloat (_dabfbb .Ascent ),Descent :_gea .MakeFloat (_dabfbb .Descent ),CapHeight :_gea .MakeFloat (_dabfbb .CapHeight ),XHeight :_gea .MakeFloat (_dabfbb .XHeight ),StemV :_gea .MakeFloat (_dabfbb .StemV ),StemH :_gea .MakeFloat (_dabfbb .StemH )},_cdggf :_fgcgd .Encoder ()};
};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_bbbeb *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _dgbae []_ceb .TextEncoder ;var _efcc _ceb .CMapEncoder ;if _dbeaa :=_bbbeb .baseFields ()._cbfe ;_dbeaa !=nil {_efcc =_ceb .NewCMapEncoder ("",nil ,_dbeaa );};_dgfb :=_bbbeb .Encoder ();
if _dgfb !=nil {switch _bbaf :=_dgfb .(type ){case _ceb .SimpleEncoder :_ggfcb :=_bbaf .BaseName ();if _ ,_beee :=_effge [_ggfcb ];_beee {_dgbae =append (_dgbae ,_dgfb );};};};if len (_dgbae )==0{if _bbbeb .baseFields ()._cbfe !=nil {_dgbae =append (_dgbae ,_efcc );
};if _dgfb !=nil {_dgbae =append (_dgbae ,_dgfb );};};var _afaa _ddg .Buffer ;var _aegac int ;for _ ,_cdff :=range data {var _daed bool ;for _ ,_gbbc :=range _dgbae {if _cfaac :=_gbbc .Encode (string (_cdff ));len (_cfaac )> 0{_afaa .Write (_cfaac );_daed =true ;
break ;};};if !_daed {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_cdff );
_aegac ++;};};if _aegac !=0{_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_aegac ,_bbbeb ,_dgbae );
};return _afaa .Bytes (),_aegac ;};

// Encoder returns the font's text encoder.
func (_agaa *PdfFont )Encoder ()_ceb .TextEncoder {_beedc :=_agaa .actualFont ();if _beedc ==nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_agaa ._bgfbc );
return nil ;};return _beedc .Encoder ();};func (_fgcc *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_beac :=PdfColorDeviceRGB {r ,g ,b };return &_beac ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_fcceg *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_fcceg .GetNumComponents (){return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fegfb ,_adfb :=_fcceg .TintTransform .Evaluate (vals );
if _adfb !=nil {return nil ,_adfb ;};_caef ,_adfb :=_fcceg .AlternateSpace .ColorFromFloats (_fegfb );if _adfb !=nil {return nil ,_adfb ;};return _caef ,nil ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_cceag *XObjectImage )ToImage ()(*Image ,error ){_bdgbed :=&Image {};if _cceag .Height ==nil {return nil ,_gg .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_bdgbed .Height =*_cceag .Height ;if _cceag .Width ==nil {return nil ,_gg .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_bdgbed .Width =*_cceag .Width ;if _cceag .BitsPerComponent ==nil {switch _cceag .Filter .(type ){case *_gea .CCITTFaxEncoder ,*_gea .JBIG2Encoder :_bdgbed .BitsPerComponent =1;
case *_gea .LZWEncoder ,*_gea .RunLengthEncoder :_bdgbed .BitsPerComponent =8;default:return nil ,_gg .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_bdgbed .BitsPerComponent =*_cceag .BitsPerComponent ;};_bdgbed .ColorComponents =_cceag .ColorSpace .GetNumComponents ();_cceag ._bbffa .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_gea .MakeInteger (int64 (_bdgbed .ColorComponents )));
_ffefba ,_dfbd :=_gea .DecodeStream (_cceag ._bbffa );if _dfbd !=nil {return nil ,_dfbd ;};_bdgbed .Data =_ffefba ;if _cceag .Decode !=nil {_ffbec ,_ebdff :=_cceag .Decode .(*_gea .PdfObjectArray );if !_ebdff {_fd .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_gg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_bcgcbb ,_bcded :=_ffbec .ToFloat64Array ();if _bcded !=nil {return nil ,_bcded ;};switch _cceag .ColorSpace .(type ){case *PdfColorspaceDeviceCMYK :_bbbad :=_cceag .ColorSpace .DecodeArray ();
if _bbbad [0]==_bcgcbb [0]&&_bbbad [1]==_bcgcbb [1]&&_bbbad [2]==_bcgcbb [2]&&_bbbad [3]==_bcgcbb [3]{_bdgbed ._edadg =_bcgcbb ;};default:_bdgbed ._edadg =_bcgcbb ;};};return _bdgbed ,nil ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_ccg :=NewPdfAction ();_ee :=&PdfActionImportData {};_ee .PdfAction =_ccg ;_ccg .SetContext (_ee );return _ee ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_fbfa *PdfAcroForm ,_eafag *PdfField ,_edga *PdfAnnotationWidget )(*_gea .PdfObjectDictionary ,error );};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_bcga :_gea .MakeIndirectObject (_gea .MakeDict ())}};

// ToPdfObject implements interface PdfModel.
func (_bdf *PdfAnnotationLink )ToPdfObject ()_gea .PdfObject {_bdf .PdfAnnotation .ToPdfObject ();_bcfe :=_bdf ._bbf ;_dfbg :=_bcfe .PdfObject .(*_gea .PdfObjectDictionary );_dfbg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u004c\u0069\u006e\u006b"));
if _bdf ._gaaf !=nil &&_bdf ._gaaf ._fc !=nil {_dfbg .Set ("\u0041",_bdf ._gaaf ._fc .ToPdfObject ());}else if _bdf .A !=nil {_dfbg .Set ("\u0041",_bdf .A );};_dfbg .SetIfNotNil ("\u0044\u0065\u0073\u0074",_bdf .Dest );_dfbg .SetIfNotNil ("\u0048",_bdf .H );
_dfbg .SetIfNotNil ("\u0050\u0041",_bdf .PA );_dfbg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bdf .QuadPoints );_dfbg .SetIfNotNil ("\u0042\u0053",_bdf .BS );return _bcfe ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_aabf :=&PdfColorspaceDeviceN {};return _aabf };

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_agcec :=Permissions {};_agcec .DocMDP =docMdp ;_ebaag :=_gea .MakeDict ();_ebaag .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_agcec ._fbccg =_ebaag ;return &_agcec ;};func (_dfcg *PdfWriter )setCatalogVersion (){_dfcg ._ggbgf .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_gea .MakeName (_e .Sprintf ("\u0025\u0064\u002e%\u0064",_dfcg ._fedce .Major ,_dfcg ._fedce .Minor )));
};func _aabgg (_agbg *_gea .PdfObjectDictionary )(*PdfShadingType5 ,error ){_adbdda :=PdfShadingType5 {};_edddfc :=_agbg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _edddfc ==nil {_fd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ggbfd ,_dbce :=_edddfc .(*_gea .PdfObjectInteger );if !_dbce {_fd .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_edddfc );
return nil ,_gea .ErrTypeError ;};_adbdda .BitsPerCoordinate =_ggbfd ;_edddfc =_agbg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _edddfc ==nil {_fd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ggbfd ,_dbce =_edddfc .(*_gea .PdfObjectInteger );if !_dbce {_fd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_edddfc );
return nil ,_gea .ErrTypeError ;};_adbdda .BitsPerComponent =_ggbfd ;_edddfc =_agbg .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _edddfc ==nil {_fd .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_ggbfd ,_dbce =_edddfc .(*_gea .PdfObjectInteger );if !_dbce {_fd .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_edddfc );
return nil ,_gea .ErrTypeError ;};_adbdda .VerticesPerRow =_ggbfd ;_edddfc =_agbg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _edddfc ==nil {_fd .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gbfag ,_dbce :=_edddfc .(*_gea .PdfObjectArray );if !_dbce {_fd .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_edddfc );
return nil ,_gea .ErrTypeError ;};_adbdda .Decode =_gbfag ;if _eeecd :=_agbg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_eeecd !=nil {_adbdda .Function =[]PdfFunction {};if _ffefe ,_dbcff :=_eeecd .(*_gea .PdfObjectArray );_dbcff {for _ ,_fdaa :=range _ffefe .Elements (){_eabea ,_dgegg :=_adggc (_fdaa );
if _dgegg !=nil {_fd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dgegg );return nil ,_dgegg ;};_adbdda .Function =append (_adbdda .Function ,_eabea );
};}else {_aafec ,_eggcf :=_adggc (_eeecd );if _eggcf !=nil {_fd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eggcf );return nil ,_eggcf ;
};_adbdda .Function =append (_adbdda .Function ,_aafec );};};return &_adbdda ,nil ;};func (_cfcff *PdfWriter )updateObjectNumbers (){_dbdcc :=_cfcff .ObjNumOffset ;_ccacd :=0;for _ ,_bcgcg :=range _cfcff ._aeaa {_febab :=int64 (_ccacd +1+_dbdcc );_adebb :=true ;
if _cfcff ._abaff {if _aaebg ,_cedb :=_cfcff ._egfbf [_bcgcg ];_cedb {_febab =_aaebg ;_adebb =false ;};};switch _cgbag :=_bcgcg .(type ){case *_gea .PdfIndirectObject :_cgbag .ObjectNumber =_febab ;_cgbag .GenerationNumber =0;case *_gea .PdfObjectStream :_cgbag .ObjectNumber =_febab ;
_cgbag .GenerationNumber =0;case *_gea .PdfObjectStreams :_cgbag .ObjectNumber =_febab ;_cgbag .GenerationNumber =0;default:_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_cgbag );
continue ;};if _adebb {_ccacd ++;};};_dbaea :=func (_bffb _gea .PdfObject )int64 {switch _dfaae :=_bffb .(type ){case *_gea .PdfIndirectObject :return _dfaae .ObjectNumber ;case *_gea .PdfObjectStream :return _dfaae .ObjectNumber ;case *_gea .PdfObjectStreams :return _dfaae .ObjectNumber ;
};return 0;};_da .SliceStable (_cfcff ._aeaa ,func (_ecdbg ,_cacaa int )bool {return _dbaea (_cfcff ._aeaa [_ecdbg ])< _dbaea (_cfcff ._aeaa [_cacaa ])});};func (_edab *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};


// SetFlag sets the flag for the field.
func (_fgdae *PdfField )SetFlag (flag FieldFlag ){_fgdae .Ff =_gea .MakeInteger (int64 (flag ))};func (_ced *PdfReader )newPdfAnnotationHighlightFromDict (_baea *_gea .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_aaffd :=PdfAnnotationHighlight {};
_bgg ,_cbcg :=_ced .newPdfAnnotationMarkupFromDict (_baea );if _cbcg !=nil {return nil ,_cbcg ;};_aaffd .PdfAnnotationMarkup =_bgg ;_aaffd .QuadPoints =_baea .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_aaffd ,nil ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _gea .PdfObject ;PreserveRB _gea .PdfObject ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_babaa *PdfPattern )GetContainingPdfObject ()_gea .PdfObject {return _babaa ._bgcec };func _debaf (_dfcb *_gea .PdfObjectDictionary )(*PdfFieldChoice ,error ){_defee :=&PdfFieldChoice {};_defee .Opt ,_ =_gea .GetArray (_dfcb .Get ("\u004f\u0070\u0074"));
_defee .TI ,_ =_gea .GetInt (_dfcb .Get ("\u0054\u0049"));_defee .I ,_ =_gea .GetArray (_dfcb .Get ("\u0049"));return _defee ,nil ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_cfd :=NewPdfAnnotation ();_cea :=&PdfAnnotationTrapNet {};_cea .PdfAnnotation =_cfd ;_cfd .SetContext (_cea );return _cea ;};func _aeced ()string {_aefdbd .Lock ();defer _aefdbd .Unlock ();return _gdafd };


// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_cge _cef .ReadSeeker ;_bgaad *_gea .PdfParser ;_ggea *PdfReader ;Reader *PdfReader ;_adaf []*PdfPage ;_ddeb *PdfAcroForm ;_edeb *DSS ;_bgada *Permissions ;_fddc _gea .XrefTable ;_ecfe int64 ;_bgbb int ;_eaae []_gea .PdfObject ;
_edbc map[_gea .PdfObject ]struct{};_dfaa map[_gea .PdfObject ]int64 ;_dgc map[_gea .PdfObject ]struct{};_bdd map[_gea .PdfObject ]struct{};_gaaa int64 ;_feec bool ;_cfgff string ;_geg *EncryptOptions ;_dcdg *PdfInfo ;};

// ToPdfObject implements interface PdfModel.
func (_bea *PdfActionGoToR )ToPdfObject ()_gea .PdfObject {_bea .PdfAction .ToPdfObject ();_gec :=_bea ._af ;_fg :=_gec .PdfObject .(*_gea .PdfObjectDictionary );_fg .SetIfNotNil ("\u0053",_gea .MakeName (string (ActionTypeGoToR )));if _bea .F !=nil {_fg .Set ("\u0046",_bea .F .ToPdfObject ());
};_fg .SetIfNotNil ("\u0044",_bea .D );_fg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bea .NewWindow );return _gec ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bedfd pdfFontType0 )GetRuneMetrics (r rune )(_ad .CharMetrics ,bool ){if _bedfd .DescendantFont ==nil {_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_bedfd );
return _ad .CharMetrics {},false ;};return _bedfd .DescendantFont .GetRuneMetrics (r );};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;
);

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_ffaa :=&PdfColorspaceCalGray {};_ffaa .BlackPoint =[]float64 {0.0,0.0,0.0};_ffaa .Gamma =1;return _ffaa ;};

// ToPdfObject implements interface PdfModel.
func (_df *PdfActionSetOCGState )ToPdfObject ()_gea .PdfObject {_df .PdfAction .ToPdfObject ();_gbcf :=_df ._af ;_cggg :=_gbcf .PdfObject .(*_gea .PdfObjectDictionary );_cggg .SetIfNotNil ("\u0053",_gea .MakeName (string (ActionTypeSetOCGState )));_cggg .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_df .State );
_cggg .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_df .PreserveRB );return _gbcf ;};type pdfFontType3 struct{fontCommon ;_abgca *_gea .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _gea .PdfObject ;Encoding _gea .PdfObject ;FontBBox _gea .PdfObject ;FontMatrix _gea .PdfObject ;FirstChar _gea .PdfObject ;LastChar _gea .PdfObject ;Widths _gea .PdfObject ;Resources _gea .PdfObject ;_cgcae map[_ceb .CharCode ]float64 ;_cbcba _ceb .TextEncoder ;
};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_dg :=NewPdfAction ();_bf :=&PdfActionGoToE {};_bf .PdfAction =_dg ;_dg .SetContext (_bf );return _bf ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_dccd *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _gea .GetNumberAsFloat (_dccd .Descent );};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_ggcef *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _gg .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_ggcef .S =subtype ;return nil ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_gea .PdfObjectInteger ;BitsPerComponent *_gea .PdfObjectInteger ;BitsPerFlag *_gea .PdfObjectInteger ;Decode *_gea .PdfObjectArray ;Function []PdfFunction ;};func (_dfg *PdfReader )newPdfActionNamedFromDict (_dcde *_gea .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_dcde .Get ("\u004e")},nil ;
};func _ccebg ()_g .Time {_aefdbd .Lock ();defer _aefdbd .Unlock ();return _adcaa };

// NewPdfShadingType3 creates an empty shading type 3 dictionary.
func NewPdfShadingType3 ()*PdfShadingType3 {_ecaa :=&PdfShadingType3 {};_ecaa .PdfShading =&PdfShading {};_ecaa .PdfShading ._adae =_gea .MakeIndirectObject (_gea .MakeDict ());_ecaa .PdfShading ._cffdg =_ecaa ;return _ecaa ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_aebca *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_aebca .NumInputs {_fd .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_gg .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _aebca ._fdfad ==nil {_bdfcf :=_aebca .processSamples ();if _bdfcf !=nil {return nil ,_bdfcf ;};};_fcabe :=_aebca .Encode ;if _fcabe ==nil {_fcabe =[]float64 {};
for _fcdg :=0;_fcdg < len (_aebca .Size );_fcdg ++{_fcabe =append (_fcabe ,0);_fcabe =append (_fcabe ,float64 (_aebca .Size [_fcdg ]-1));};};_dacef :=_aebca .Decode ;if _dacef ==nil {_dacef =_aebca .Range ;};_befe :=make ([]int ,len (x ));for _egef :=0;
_egef < len (x );_egef ++{_abfe :=x [_egef ];_efcec :=_fa .Min (_fa .Max (_abfe ,_aebca .Domain [2*_egef ]),_aebca .Domain [2*_egef +1]);_fccd :=_deg .LinearInterpolate (_efcec ,_aebca .Domain [2*_egef ],_aebca .Domain [2*_egef +1],_fcabe [2*_egef ],_fcabe [2*_egef +1]);
_acgg :=_fa .Min (_fa .Max (_fccd ,0),float64 (_aebca .Size [_egef ]-1));_gfbbd :=int (_fa .Floor (_acgg +0.5));if _gfbbd < 0{_gfbbd =0;}else if _gfbbd > _aebca .Size [_egef ]{_gfbbd =_aebca .Size [_egef ]-1;};_befe [_egef ]=_gfbbd ;};_gfeg :=_befe [0];
for _ecaea :=1;_ecaea < _aebca .NumInputs ;_ecaea ++{_adag :=_befe [_ecaea ];for _eddec :=0;_eddec < _ecaea ;_eddec ++{_adag *=_aebca .Size [_eddec ];};_gfeg +=_adag ;};_gfeg *=_aebca .NumOutputs ;var _gbagg []float64 ;for _efbbb :=0;_efbbb < _aebca .NumOutputs ;
_efbbb ++{_bedd :=_gfeg +_efbbb ;if _bedd >=len (_aebca ._fdfad ){_fd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_ccbgf :=_aebca ._fdfad [_bedd ];_dbda :=_deg .LinearInterpolate (float64 (_ccbgf ),0,_fa .Pow (2,float64 (_aebca .BitsPerSample )),_dacef [2*_efbbb ],_dacef [2*_efbbb +1]);_gdbf :=_fa .Min (_fa .Max (_dbda ,_aebca .Range [2*_efbbb ]),_aebca .Range [2*_efbbb +1]);
_gbagg =append (_gbagg ,_gdbf );};return _gbagg ,nil ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_gea .PdfObjectInteger ;BitsPerComponent *_gea .PdfObjectInteger ;BitsPerFlag *_gea .PdfObjectInteger ;Decode *_gea .PdfObjectArray ;Function []PdfFunction ;};func _aeab (_dgeg []byte )[]byte {const _dgdcd =52845;
const _gebfb =22719;_cedf :=55665;for _ ,_cgfdf :=range _dgeg [:4]{_cedf =(int (_cgfdf )+_cedf )*_dgdcd +_gebfb ;};_fdcfg :=make ([]byte ,len (_dgeg )-4);for _fedbc ,_acbba :=range _dgeg [4:]{_fdcfg [_fedbc ]=byte (int (_acbba )^_cedf >>8);_cedf =(int (_acbba )+_cedf )*_dgdcd +_gebfb ;
};return _fdcfg ;};

// PdfShadingPatternType3 is shading patterns that will use a Type 3 shading pattern (Radial).
type PdfShadingPatternType3 struct{*PdfPattern ;Shading *PdfShadingType3 ;Matrix *_gea .PdfObjectArray ;ExtGState _gea .PdfObject ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _gea .PdfObject ;Dest _gea .PdfObject ;H _gea .PdfObject ;PA _gea .PdfObject ;QuadPoints _gea .PdfObject ;BS _gea .PdfObject ;_gaaf *PdfAction ;_eece *PdfReader ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_cacfd DefaultImageHandler )NewGrayImageFromGoImage (goimg _d .Image )(*Image ,error ){_bcfb :=goimg .Bounds ();_adce :=&Image {Width :int64 (_bcfb .Dx ()),Height :int64 (_bcfb .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _eccdg :=goimg .(type ){case *_d .Gray :if len (_eccdg .Pix )!=_bcfb .Dx ()*_bcfb .Dy (){_daae ,_abgce :=_deg .GrayConverter .Convert (goimg );
if _abgce !=nil {return nil ,_abgce ;};_adce .Data =_daae .Pix ();}else {_adce .Data =_eccdg .Pix ;};case *_d .Gray16 :_adce .BitsPerComponent =16;if len (_eccdg .Pix )!=_bcfb .Dx ()*_bcfb .Dy ()*2{_faaaab ,_fdgfe :=_deg .Gray16Converter .Convert (goimg );
if _fdgfe !=nil {return nil ,_fdgfe ;};_adce .Data =_faaaab .Pix ();}else {_adce .Data =_eccdg .Pix ;};case _deg .Image :_agaf :=_eccdg .Base ();if _agaf .ColorComponents ==1{_adce .BitsPerComponent =int64 (_agaf .BitsPerComponent );_adce .Data =_agaf .Data ;
return _adce ,nil ;};_feebf ,_ccbga :=_deg .GrayConverter .Convert (goimg );if _ccbga !=nil {return nil ,_ccbga ;};_adce .Data =_feebf .Pix ();default:_aeaba ,_gbagda :=_deg .GrayConverter .Convert (goimg );if _gbagda !=nil {return nil ,_gbagda ;};_adce .Data =_aeaba .Pix ();
};return _adce ,nil ;};

// ToInteger convert to an integer format.
func (_debca *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_ggga :=_fa .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ggga *_debca .A ()),uint32 (_ggga *_debca .B ()),uint32 (_ggga *_debca .C ())};};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_bcag *PdfFont )CharcodesToStrings (charcodes []_ceb .CharCode )([]string ,int ,int ){_bacda :=_bcag .baseFields ();_cbgde :=make ([]string ,0,len (charcodes ));_cdege :=0;_abdfa :=_bcag .Encoder ();_gfdb :=_bacda ._cbfe !=nil &&_bcag .IsSimple ()&&_bcag .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_aa .Contains (_bacda ._cbfe .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_gfdb &&_abdfa !=nil {switch _dgadc :=_abdfa .(type ){case _ceb .SimpleEncoder :_feefa :=_dgadc .BaseName ();if _ ,_agdg :=_effge [_feefa ];_agdg {for _ ,_ebfae :=range charcodes {if _bacaf ,_fafdb :=_abdfa .CharcodeToRune (_ebfae );_fafdb {_cbgde =append (_cbgde ,string (_bacaf ));
}else {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_ebfae ,charcodes ,_bacda .isCIDFont (),_bcag ,_abdfa );
_cdege ++;_cbgde =append (_cbgde ,_ebd .MissingCodeString );};};return _cbgde ,len (_cbgde ),_cdege ;};};};for _ ,_becbg :=range charcodes {if _bacda ._cbfe !=nil {if _eebce ,_egde :=_bacda ._cbfe .CharcodeToUnicode (_ebd .CharCode (_becbg ));_egde {_cbgde =append (_cbgde ,_eebce );
continue ;};};if _abdfa !=nil {if _ecbbac ,_gagda :=_abdfa .CharcodeToRune (_becbg );_gagda {_cbgde =append (_cbgde ,string (_ecbbac ));continue ;};};_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_becbg ,charcodes ,_bacda .isCIDFont (),_bcag ,_abdfa );
_cdege ++;_cbgde =append (_cbgde ,_ebd .MissingCodeString );};if _cdege !=0{_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_cdege ,_bcag );
};return _cbgde ,len (_cbgde ),_cdege ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_dafa *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _dafa .baseFields ()._baffg !=nil {return _dafa .baseFields ()._baffg ;};if _aefgf :=_dafa ._bgfbc .getFontDescriptor ();_aefgf !=nil {return _aefgf ;};_fd .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_dafa );
return nil ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_bacd :=NewPdfAnnotation ();_ccfc :=&PdfAnnotationMovie {};_ccfc .PdfAnnotation =_bacd ;_bacd .SetContext (_ccfc );return _ccfc ;};

// GetCerts returns the signature certificate chain.
func (_gagc *PdfSignature )GetCerts ()([]*_cg .Certificate ,error ){var _daada []func ()([]*_cg .Certificate ,error );switch _dcfff ,_ :=_gea .GetNameVal (_gagc .SubFilter );_dcfff {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_daada =append (_daada ,_gagc .extractChainFromPKCS7 ,_gagc .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_daada =append (_daada ,_gagc .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_daada =append (_daada ,_gagc .extractChainFromPKCS7 );
default:return nil ,_e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_dcfff );};for _ ,_dbcce :=range _daada {_bcgef ,_cfedd :=_dbcce ();if _cfedd !=nil {return nil ,_cfedd ;
};if len (_bcgef )> 0{return _bcgef ,nil ;};};return nil ,ErrSignNoCertificates ;};

// PdfColorPatternType2 represents a color shading pattern type 2 (Axial).
type PdfColorPatternType2 struct{Color PdfColor ;PatternName _gea .PdfObjectName ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_gbbgb *PdfReader )GetIndirectObjectByNumber (number int )(_gea .PdfObject ,error ){_caddd ,_ddfcg :=_gbbgb ._edcdb .LookupByNumber (number );return _caddd ,_ddfcg ;};

// HasXObjectByName checks if has XObject resource by name.
func (_cecd *PdfPage )HasXObjectByName (name _gea .PdfObjectName )bool {_ebef ,_bbeaf :=_cecd .Resources .XObject .(*_gea .PdfObjectDictionary );if !_bbeaf {return false ;};if _gffcg :=_ebef .Get (name );_gffcg !=nil {return true ;};return false ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_gbbbc *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_egab *PdfAppender )Write (w _cef .Writer )error {if _egab ._feec {return _gg .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_dedg :=NewPdfWriter ();_eegb ,_accc :=_gea .GetDict (_dedg ._bccec );if !_accc {return _gg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_fcda ,_accc :=_eegb .Get ("\u004b\u0069\u0064\u0073").(*_gea .PdfObjectArray );if !_accc {return _gg .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_dbaf ,_accc :=_eegb .Get ("\u0043\u006f\u0075n\u0074").(*_gea .PdfObjectInteger );if !_accc {return _gg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_dcad :=_egab ._ggea ._edcdb ;_gfgg :=_dcad .GetTrailer ();if _gfgg ==nil {return _gg .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_cbec ,_accc :=_gea .GetIndirect (_gfgg .Get ("\u0052\u006f\u006f\u0074"));
if !_accc {return _gg .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_dafe ,_accc :=_gea .GetDict (_cbec );if !_accc {_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_cbec ,*_gfgg );
return _gg .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_cfdd :=range _dafe .Keys (){if _dedg ._ggbgf .Get (_cfdd )==nil {_gage :=_dafe .Get (_cfdd );_dedg ._ggbgf .Set (_cfdd ,_gage );};};if _egab ._ddeb !=nil {if _egab ._ddeb ._ecab {if _dfdb :=_gea .TraceToDirectObject (_egab ._ddeb .ToPdfObject ());
!_gea .IsNullObject (_dfdb ){_dedg ._ggbgf .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_dfdb );_egab .updateObjectsDeep (_dfdb ,nil );}else {_fd .Log .Debug ("\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020t\u0072\u0061\u0063e\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0020o\u0062\u006a\u0065\u0063\u0074, \u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0061\u0064\u0064\u0020\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u002e");
};}else {_dedg ._ggbgf .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_egab ._ddeb .ToPdfObject ());_egab .updateObjectsDeep (_egab ._ddeb .ToPdfObject (),nil );};};if _egab ._edeb !=nil {_egab .updateObjectsDeep (_egab ._edeb .ToPdfObject (),nil );
_dedg ._ggbgf .Set ("\u0044\u0053\u0053",_egab ._edeb .GetContainingPdfObject ());};if _egab ._bgada !=nil {_dedg ._ggbgf .Set ("\u0050\u0065\u0072m\u0073",_egab ._bgada .ToPdfObject ());_egab .updateObjectsDeep (_egab ._bgada .ToPdfObject (),nil );};if _dedg ._fedce .Major < 2{_dedg .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_dedg .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _dgaa ,_aceb :=_gea .GetDict (_gfgg .Get ("\u0049\u006e\u0066\u006f"));_aceb {if _ddge ,_adef :=_gea .GetDict (_dedg ._efabg );_adef {for _ ,_fgag :=range _dgaa .Keys (){if _ddge .Get (_fgag )==nil {_ddge .Set (_fgag ,_dgaa .Get (_fgag ));
};};};};if _egab ._dcdg !=nil {_dedg ._efabg =_gea .MakeIndirectObject (_egab ._dcdg .ToPdfObject ());};_egab .addNewObject (_dedg ._efabg );_egab .addNewObject (_dedg ._bcbed );_decf :=false ;if len (_egab ._ggea .PageList )!=len (_egab ._adaf ){_decf =true ;
}else {for _gbfg :=range _egab ._ggea .PageList {switch {case _egab ._adaf [_gbfg ]==_egab ._ggea .PageList [_gbfg ]:case _egab ._adaf [_gbfg ]==_egab .Reader .PageList [_gbfg ]:default:_decf =true ;};if _decf {break ;};};};if _decf {_egab .updateObjectsDeep (_dedg ._bccec ,nil );
}else {_egab ._dgc [_dedg ._bccec ]=struct{}{};};_dedg ._bccec .ObjectNumber =_egab .Reader ._ddefb .ObjectNumber ;_egab ._dfaa [_dedg ._bccec ]=_egab .Reader ._ddefb .ObjectNumber ;_fgbee :=[]_gea .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
for _ ,_dfgce :=range _egab ._adaf {_dffeb :=_dfgce .ToPdfObject ();*_dbaf =*_dbaf +1;if _bdfc ,_dccg :=_dffeb .(*_gea .PdfIndirectObject );_dccg &&_bdfc .GetParser ()==_egab ._ggea ._edcdb {_fcda .Append (&_bdfc .PdfObjectReference );continue ;};if _cbcce ,_dedd :=_gea .GetDict (_dffeb );
_dedd {_dcdd ,_fbaf :=_cbcce .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_gea .PdfIndirectObject );for _fbaf {_fd .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dcdd );_dddd ,_bcdd :=_dcdd .PdfObject .(*_gea .PdfObjectDictionary );
if !_bcdd {return _gg .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_egdfa :=range _fgbee {_fd .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_egdfa );if _dfca :=_cbcce .Get (_egdfa );
_dfca !=nil {_fd .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");if len (_dfgce ._bffef .Keys ())> 0&&!_decf {_ebbe :=_dfgce ._bffef ;if _fadb :=_ebbe .Get (_egdfa );_fadb !=nil {if _dfca !=_fadb {_fd .Log .Trace ("\u0049\u006e\u0068\u0065\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u006f\u0072\u0069\u0067i\u006ea\u006c\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073\u002c\u0020\u0025\u0054",_egdfa ,_fadb );
_cbcce .Set (_egdfa ,_fadb );};};};continue ;};if _bccd :=_dddd .Get (_egdfa );_bccd !=nil {_fd .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_egdfa );_cbcce .Set (_egdfa ,_bccd );
};};_dcdd ,_fbaf =_dddd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_gea .PdfIndirectObject );_fd .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dddd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};
if _decf {_cbcce .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dedg ._bccec );};};_egab .updateObjectsDeep (_dffeb ,nil );_fcda .Append (_dffeb );};if _ ,_ecddf :=_egab ._cge .Seek (0,_cef .SeekStart );_ecddf !=nil {return _ecddf ;};_fagd :=make (map[SignatureHandler ]_cef .Writer );
_fecc :=_gea .MakeArray ();for _ ,_eecd :=range _egab ._eaae {if _dedgc ,_gccg :=_gea .GetIndirect (_eecd );_gccg {if _ggag ,_efbg :=_dedgc .PdfObject .(*pdfSignDictionary );_efbg {_gadc :=*_ggag ._gdafe ;var _dbdd error ;_fagd [_gadc ],_dbdd =_gadc .NewDigest (_ggag ._caaad );
if _dbdd !=nil {return _dbdd ;};_fecc .Append (_gea .MakeInteger (0xfffff),_gea .MakeInteger (0xfffff));};};};if _fecc .Len ()> 0{_fecc .Append (_gea .MakeInteger (0xfffff),_gea .MakeInteger (0xfffff));};for _ ,_dabf :=range _egab ._eaae {if _aebe ,_feeb :=_gea .GetIndirect (_dabf );
_feeb {if _afeb ,_bbgd :=_aebe .PdfObject .(*pdfSignDictionary );_bbgd {_afeb .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_fecc );};};};_afa :=len (_fagd )> 0;var _ceee _cef .Reader =_egab ._cge ;if _afa {_cafd :=make ([]_cef .Writer ,0,len (_fagd ));
for _ ,_cdcc :=range _fagd {_cafd =append (_cafd ,_cdcc );};_ceee =_cef .TeeReader (_egab ._cge ,_cef .MultiWriter (_cafd ...));};_gegaa ,_eacf :=_cef .Copy (w ,_ceee );if _eacf !=nil {return _eacf ;};if len (_egab ._eaae )==0{return nil ;};_dedg ._geage =_gegaa ;
_dedg .ObjNumOffset =_egab ._bgbb ;_dedg ._abaff =true ;_dedg ._eddaf =_egab ._fddc ;_dedg ._dfdea =_egab ._ecfe ;_dedg ._gcba =_egab ._gaaa ;_dedg ._fedce =_egab ._ggea .PdfVersion ();_dedg ._egfbf =_egab ._dfaa ;_dedg ._fecea =_egab ._bgaad .GetCrypter ();
_dedg ._caaaa =_egab ._bgaad .GetEncryptObj ();_bgcd :=_egab ._bgaad .GetXrefType ();if _bgcd !=nil {_dccga :=*_bgcd ==_gea .XrefTypeObjectStream ;_dedg ._cgdca =&_dccga ;};_dedg ._edfdb =map[_gea .PdfObject ]struct{}{};_dedg ._aeaa =[]_gea .PdfObject {};
for _ ,_cabb :=range _egab ._eaae {if _ ,_ecef :=_egab ._dgc [_cabb ];_ecef {continue ;};_dedg .addObject (_cabb );};_gedd :=w ;if _afa {_gedd =_ddg .NewBuffer (nil );};if _egab ._cfgff !=""&&_dedg ._fecea ==nil {_dedg .Encrypt ([]byte (_egab ._cfgff ),[]byte (_egab ._cfgff ),_egab ._geg );
};if _bbda :=_gfgg .Get ("\u0049\u0044");_bbda !=nil {if _faaa ,_dbaa :=_gea .GetArray (_bbda );_dbaa {_dedg ._bdgfbe =_faaa ;};};if _dedcc :=_dedg .Write (_gedd );_dedcc !=nil {return _dedcc ;};if _afa {_gbbf :=_gedd .(*_ddg .Buffer ).Bytes ();_cbab :=_gea .MakeArray ();
var _fffc []*pdfSignDictionary ;var _gbaf int64 ;for _ ,_aefd :=range _dedg ._aeaa {if _dac ,_gccd :=_gea .GetIndirect (_aefd );_gccd {if _afea ,_gccc :=_dac .PdfObject .(*pdfSignDictionary );_gccc {_fffc =append (_fffc ,_afea );_caca :=_afea ._afdg +int64 (_afea ._dcacb );
_cbab .Append (_gea .MakeInteger (_gbaf ),_gea .MakeInteger (_caca -_gbaf ));_gbaf =_afea ._afdg +int64 (_afea ._fbdbc );};};};_cbab .Append (_gea .MakeInteger (_gbaf ),_gea .MakeInteger (_gegaa +int64 (len (_gbbf ))-_gbaf ));_fbbd :=[]byte (_cbab .WriteString ());
for _ ,_gccga :=range _fffc {_cbbf :=int (_gccga ._afdg -_gegaa );for _ggd :=_gccga ._fcgda ;_ggd < _gccga ._aadbbc ;_ggd ++{_gbbf [_cbbf +_ggd ]=' ';};_ccac :=_gbbf [_cbbf +_gccga ._fcgda :_cbbf +_gccga ._aadbbc ];copy (_ccac ,_fbbd );};var _cgccg int ;
for _ ,_fbda :=range _fffc {_baeeg :=int (_fbda ._afdg -_gegaa );_cfe :=_gbbf [_cgccg :_baeeg +_fbda ._dcacb ];_bbfa :=*_fbda ._gdafe ;_fagd [_bbfa ].Write (_cfe );_cgccg =_baeeg +_fbda ._fbdbc ;};for _ ,_dabfb :=range _fffc {_agfd :=_gbbf [_cgccg :];_ccba :=*_dabfb ._gdafe ;
_fagd [_ccba ].Write (_agfd );};for _ ,_dcbf :=range _fffc {_bbce :=int (_dcbf ._afdg -_gegaa );_eeec :=*_dcbf ._gdafe ;_bbecc :=_fagd [_eeec ];if _ddcb :=_eeec .Sign (_dcbf ._caaad ,_bbecc );_ddcb !=nil {return _ddcb ;};_dcbf ._caaad .ByteRange =_cbab ;
_dbgd :=[]byte (_dcbf ._caaad .Contents .WriteString ());for _fcbfc :=_dcbf ._fcgda ;_fcbfc < _dcbf ._aadbbc ;_fcbfc ++{_gbbf [_bbce +_fcbfc ]=' ';};for _cedgg :=_dcbf ._dcacb ;_cedgg < _dcbf ._fbdbc ;_cedgg ++{_gbbf [_bbce +_cedgg ]=' ';};_bbgde :=_gbbf [_bbce +_dcbf ._fcgda :_bbce +_dcbf ._aadbbc ];
copy (_bbgde ,_fbbd );_bbgde =_gbbf [_bbce +_dcbf ._dcacb :_bbce +_dcbf ._fbdbc ];copy (_bbgde ,_dbgd );};_cbgb :=_ddg .NewBuffer (_gbbf );_ ,_eacf =_cef .Copy (w ,_cbgb );if _eacf !=nil {return _eacf ;};};_egab ._feec =true ;return nil ;};func (_gdgdd *PdfWriter )writeTrailer (_gcbega int ){_gdgdd .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");
for _baecef :=0;_baecef <=_gcbega ;{for ;_baecef <=_gcbega ;_baecef ++{_bgdfc ,_fcgad :=_gdgdd ._aebaa [_baecef ];if _fcgad &&(!_gdgdd ._abaff ||_gdgdd ._abaff &&(_bgdfc .Type ==1&&_bgdfc .Offset >=_gdgdd ._gcba ||_bgdfc .Type ==0)){break ;};};var _bgbea int ;
for _bgbea =_baecef +1;_bgbea <=_gcbega ;_bgbea ++{_cfccd ,_eefda :=_gdgdd ._aebaa [_bgbea ];if _eefda &&(!_gdgdd ._abaff ||_gdgdd ._abaff &&(_cfccd .Type ==1&&_cfccd .Offset > _gdgdd ._gcba )){continue ;};break ;};_deegc :=_e .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_baecef ,_bgbea -_baecef );
_gdgdd .writeString (_deegc );for _ffgab :=_baecef ;_ffgab < _bgbea ;_ffgab ++{_gdegeg :=_gdgdd ._aebaa [_ffgab ];switch _gdegeg .Type {case 0:_deegc =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_gdgdd .writeString (_deegc );case 1:_deegc =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_gdegeg .Offset ,0);_gdgdd .writeString (_deegc );};};_baecef =_bgbea +1;};_gbdbdf :=_gea .MakeDict ();_gbdbdf .Set ("\u0049\u006e\u0066\u006f",_gdgdd ._efabg );
_gbdbdf .Set ("\u0052\u006f\u006f\u0074",_gdgdd ._bcbed );_gbdbdf .Set ("\u0053\u0069\u007a\u0065",_gea .MakeInteger (int64 (_gcbega +1)));if _gdgdd ._abaff &&_gdgdd ._dfdea > 0{_gbdbdf .Set ("\u0050\u0072\u0065\u0076",_gea .MakeInteger (_gdgdd ._dfdea ));
};if _gdgdd ._fecea !=nil {_gbdbdf .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_gdgdd ._caaaa );};if _gdgdd ._bdgfbe ==nil &&_gdgdd ._dgfabb !=""&&_gdgdd ._ebcad !=""{_gdgdd ._bdgfbe =_gea .MakeArray (_gea .MakeHexString (_gdgdd ._dgfabb ),_gea .MakeHexString (_gdgdd ._ebcad ));
};if _gdgdd ._bdgfbe !=nil {_gbdbdf .Set ("\u0049\u0044",_gdgdd ._bdgfbe );_fd .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_gdgdd ._bdgfbe );};_gdgdd .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_gdgdd .writeString (_gbdbdf .WriteString ());
_gdgdd .writeString ("\u000a");};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_fag PdfModel ;Rect _gea .PdfObject ;Contents _gea .PdfObject ;P _gea .PdfObject ;NM _gea .PdfObject ;M _gea .PdfObject ;F _gea .PdfObject ;AP _gea .PdfObject ;AS _gea .PdfObject ;Border _gea .PdfObject ;C _gea .PdfObject ;StructParent _gea .PdfObject ;
OC _gea .PdfObject ;_bbf *_gea .PdfIndirectObject ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_agegb *PdfOutlineTreeNode )GetContainingPdfObject ()_gea .PdfObject {return _agegb .GetContext ().GetContainingPdfObject ();};func (_eceeb *PdfReader )newPdfSignatureFromIndirect (_bbfceb *_gea .PdfIndirectObject )(*PdfSignature ,error ){_aecc ,_bddcf :=_bbfceb .PdfObject .(*_gea .PdfObjectDictionary );
if !_bddcf {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _fbcdg ,_gaeab :=_eceeb ._gace .GetModelFromPrimitive (_bbfceb ).(*PdfSignature );_gaeab {return _fbcdg ,nil ;};_bbcgc :=&PdfSignature {};_bbcgc ._dagb =_bbfceb ;_bbcgc .Type ,_ =_gea .GetName (_aecc .Get ("\u0054\u0079\u0070\u0065"));
_bbcgc .Filter ,_bddcf =_gea .GetName (_aecc .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_bddcf {_fd .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_bbcgc .SubFilter ,_ =_gea .GetName (_aecc .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_bbcgc .Contents ,_bddcf =_gea .GetString (_aecc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_bddcf {_fd .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _cefcc ,_bcba :=_gea .GetArray (_aecc .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_bcba {_bbcgc .Reference =_gea .MakeArray ();for _ ,_gdadc :=range _cefcc .Elements (){_abdcc ,_ceegb :=_gea .GetDict (_gdadc );
if !_ceegb {_fd .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_cfegf ,_ededa :=_eceeb .newPdfSignatureReferenceFromDict (_abdcc );if _ededa !=nil {return nil ,_ededa ;};_bbcgc .Reference .Append (_cfegf .ToPdfObject ());};};_bbcgc .Cert =_aecc .Get ("\u0043\u0065\u0072\u0074");_bbcgc .ByteRange ,_ =_gea .GetArray (_aecc .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_bbcgc .Changes ,_ =_gea .GetArray (_aecc .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_bbcgc .Name ,_ =_gea .GetString (_aecc .Get ("\u004e\u0061\u006d\u0065"));_bbcgc .M ,_ =_gea .GetString (_aecc .Get ("\u004d"));_bbcgc .Location ,_ =_gea .GetString (_aecc .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_bbcgc .Reason ,_ =_gea .GetString (_aecc .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_bbcgc .ContactInfo ,_ =_gea .GetString (_aecc .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_bbcgc .R ,_ =_gea .GetInt (_aecc .Get ("\u0052"));
_bbcgc .V ,_ =_gea .GetInt (_aecc .Get ("\u0056"));_bbcgc .PropBuild ,_ =_gea .GetDict (_aecc .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_bbcgc .PropAuthTime ,_ =_gea .GetInt (_aecc .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_bbcgc .PropAuthType ,_ =_gea .GetName (_aecc .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_eceeb ._gace .Register (_bbfceb ,_bbcgc );return _bbcgc ,nil ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_efbdc *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_feffe :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_fffaf ,_bfbae :=_efbdc .GetNumPages ();if _bfbae !=nil {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bfbae );
return nil ,_bfbae ;};for _ecdbaa :=1;_ecdbaa <=_fffaf ;_ecdbaa ++{_bdcbg ,_fbgef :=_efbdc .GetPage (_ecdbaa );if _fbgef !=nil {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbgef );return nil ,_fbgef ;};if opts .PageProcessCallback !=nil {_fbgef =opts .PageProcessCallback (_ecdbaa ,_bdcbg );
if _fbgef !=nil {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbgef );return nil ,_fbgef ;};}else if opts .PageCallback !=nil {opts .PageCallback (_ecdbaa ,_bdcbg );};_fbgef =_feffe .AddPage (_bdcbg );if _fbgef !=nil {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbgef );
return nil ,_fbgef ;};};_feffe ._fedce =_efbdc .PdfVersion ();if !opts .SkipInfo {_bfdgfc ,_cbfgc :=_efbdc .GetPdfInfo ();if _cbfgc !=nil {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cbfgc );}else {_feffe ._efabg .PdfObject =_bfdgfc .ToPdfObject ();
};};if !opts .SkipMetadata {if _gbcdg :=_efbdc ._cdda .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_gbcdg !=nil {if _gffeg :=_feffe .SetCatalogMetadata (_gbcdg );_gffeg !=nil {return nil ,_gffeg ;};};};if !opts .SkipAcroForm {_adcbd :=_feffe .SetForms (_efbdc .AcroForm );
if _adcbd !=nil {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adcbd );return nil ,_adcbd ;};};if !opts .SkipOutlines {_feffe .AddOutlineTree (_efbdc .GetOutlineTree ());};if !opts .SkipOCProperties {_gdgdg ,_ecgfe :=_efbdc .GetOCProperties ();
if _ecgfe !=nil {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ecgfe );}else {_ecgfe =_feffe .SetOCProperties (_gdgdg );if _ecgfe !=nil {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ecgfe );};};};if !opts .SkipPageLabels {_eefca ,_adfec :=_efbdc .GetPageLabels ();
if _adfec !=nil {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adfec );}else {_adfec =_feffe .SetPageLabels (_eefca );if _adfec !=nil {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adfec );};};};if !opts .SkipNamedDests {_dcggb ,_gdgbd :=_efbdc .GetNamedDestinations ();
if _gdgbd !=nil {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdgbd );}else {_gdgbd =_feffe .SetNamedDestinations (_dcggb );if _gdgbd !=nil {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gdgbd );};};};if !opts .SkipNameDictionary {_agceb ,_ggbga :=_efbdc .GetNameDictionary ();
if _ggbga !=nil {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ggbga );}else {_ggbga =_feffe .SetNameDictionary (_agceb );if _ggbga !=nil {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ggbga );};};};if !opts .SkipRotation &&_efbdc .Rotate !=nil {if _bggea :=_feffe .SetRotation (*_efbdc .Rotate );
_bggea !=nil {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bggea );};};return &_feffe ,nil ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_efcbd *XObjectForm )GetContainingPdfObject ()_gea .PdfObject {return _efcbd ._ggdde };func (_cafgc *PdfReader )newPdfOutlineItemFromIndirectObject (_fdfb *_gea .PdfIndirectObject )(*PdfOutlineItem ,error ){_bgdbg ,_agdgc :=_fdfb .PdfObject .(*_gea .PdfObjectDictionary );
if !_agdgc {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_addce :=NewPdfOutlineItem ();_dgcc :=_bgdbg .Get ("\u0054\u0069\u0074l\u0065");
if _dgcc ==nil {return nil ,_e .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_gdgf ,_cgegf :=_gea .GetString (_dgcc );if !_cgegf {return nil ,_e .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_dgcc );};_addce .Title =_gdgf ;if _cfef :=_bgdbg .Get ("\u0043\u006f\u0075n\u0074");
_cfef !=nil {_bbgga ,_aagge :=_cfef .(*_gea .PdfObjectInteger );if !_aagge {return nil ,_e .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_cfef );};_gdggb :=int64 (*_bbgga );
_addce .Count =&_gdggb ;};if _edcbb :=_bgdbg .Get ("\u0044\u0065\u0073\u0074");_edcbb !=nil {_addce .Dest =_gea .ResolveReference (_edcbb );if !_cafgc ._debgbb {_edcbg :=_cafgc .traverseObjectData (_addce .Dest );if _edcbg !=nil {return nil ,_edcbg ;};
};};if _bagdc :=_bgdbg .Get ("\u0041");_bagdc !=nil {_addce .A =_gea .ResolveReference (_bagdc );if !_cafgc ._debgbb {_feecf :=_cafgc .traverseObjectData (_addce .A );if _feecf !=nil {return nil ,_feecf ;};};};if _ccbeg :=_bgdbg .Get ("\u0053\u0045");_ccbeg !=nil {_addce .SE =nil ;
};if _ccdb :=_bgdbg .Get ("\u0043");_ccdb !=nil {_addce .C =_gea .ResolveReference (_ccdb );};if _gfabd :=_bgdbg .Get ("\u0046");_gfabd !=nil {_addce .F =_gea .ResolveReference (_gfabd );};return _addce ,nil ;};func (_dbbf fontCommon )fontFlags ()int {if _dbbf ._baffg ==nil {return 0;
};return _dbbf ._baffg ._efbcd ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _cef .ReadSeeker )(*PdfReader ,error ){const _edacb ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _dcgdf (rs ,&ReaderOpts {},false ,_edacb );};func (_dgaac *PdfWriter )addObject (_eedce _gea .PdfObject )bool {_ggbgb :=_dgaac .hasObject (_eedce );
if !_ggbgb {_fbadc :=_gea .ResolveReferencesDeep (_eedce ,_dgaac ._fabgc );if _fbadc !=nil {_fd .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_fbadc );};_dgaac ._aeaa =append (_dgaac ._aeaa ,_eedce );
_dgaac ._edfdb [_eedce ]=struct{}{};return true ;};return false ;};func (_aeb *PdfReader )newPdfActionThreadFromDict (_ecge *_gea .PdfObjectDictionary )(*PdfActionThread ,error ){_gfde ,_eeef :=_bdg (_ecge .Get ("\u0046"));if _eeef !=nil {return nil ,_eeef ;
};return &PdfActionThread {D :_ecge .Get ("\u0044"),B :_ecge .Get ("\u0042"),F :_gfde },nil ;};var _ pdfFont =(*pdfFontSimple )(nil );func (_dffga *PdfPattern )getDict ()*_gea .PdfObjectDictionary {if _fbef ,_fdad :=_dffga ._bgcec .(*_gea .PdfIndirectObject );
_fdad {_debd ,_ffgaa :=_fbef .PdfObject .(*_gea .PdfObjectDictionary );if !_ffgaa {return nil ;};return _debd ;}else if _eadag ,_fffag :=_dffga ._bgcec .(*_gea .PdfObjectStream );_fffag {return _eadag .PdfObjectDictionary ;}else {_fd .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_dffga ._bgcec );
return nil ;};};

// NewPdfColorPatternType2 returns an empty color shading pattern type 2 (Axial).
func NewPdfColorPatternType2 ()*PdfColorPatternType2 {_gbbb :=&PdfColorPatternType2 {};return _gbbb };func (_dagg *LTV )enable (_gbdbb ,_edbdd []*_cg .Certificate ,_aacb string )error {_fbeda ,_cbda ,_aeace :=_dagg .buildCertChain (_gbdbb ,_edbdd );if _aeace !=nil {return _aeace ;
};_afdfe ,_aeace :=_dagg .getCerts (_fbeda );if _aeace !=nil {return _aeace ;};var _eadgff ,_bgae [][]byte ;if _dagg .OCSPClient !=nil {_eadgff ,_aeace =_dagg .getOCSPs (_fbeda ,_cbda );if _aeace !=nil {return _aeace ;};};if _dagg .CRLClient !=nil {_bgae ,_aeace =_dagg .getCRLs (_fbeda );
if _aeace !=nil {return _aeace ;};};_gbdbg :=_dagg ._dggb ;_gdebb ,_aeace :=_gbdbg .AddCerts (_afdfe );if _aeace !=nil {return _aeace ;};_cdfb ,_aeace :=_gbdbg .AddOCSPs (_eadgff );if _aeace !=nil {return _aeace ;};_edaa ,_aeace :=_gbdbg .AddCRLs (_bgae );
if _aeace !=nil {return _aeace ;};if _aacb !=""{_gbdbg .VRI [_aacb ]=&VRI {Cert :_gdebb ,OCSP :_cdfb ,CRL :_edaa };};_dagg ._dgfff .SetDSS (_gbdbg );return nil ;};func (_fcae *PdfReader )newPdfActionHideFromDict (_cfgf *_gea .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_cfgf .Get ("\u0054"),H :_cfgf .Get ("\u0048")},nil ;
};

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_fbccg *_gea .PdfObjectDictionary ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the page using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened for the page.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
func (_fbcad *PdfPage )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {_eadc :=map[*PdfAnnotation ]bool {};_gebe ,_bada :=_fbcad .GetAnnotations ();if _bada !=nil {return _bada ;};_gaee :=false ;for _ ,_gdabb :=range _gebe {if opts .AnnotFilterFunc !=nil {_eadc [_gdabb ]=opts .AnnotFilterFunc (_gdabb );
}else {_eadc [_gdabb ]=true ;};if _eadc [_gdabb ]{_gaee =true ;};};if !_gaee {return nil ;};return _fbcad .flattenFieldsWithOpts (appgen ,opts ,_eadc );};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_bcbed *_gea .PdfIndirectObject ;_bccec *_gea .PdfIndirectObject ;_aefc map[_gea .PdfObject ]struct{};_aeaa []_gea .PdfObject ;_edfdb map[_gea .PdfObject ]struct{};_ggada []*_gea .PdfIndirectObject ;_ecbgg *PdfOutlineTreeNode ;_ggbgf *_gea .PdfObjectDictionary ;
_egdb []_gea .PdfObject ;_efabg *_gea .PdfIndirectObject ;_ccfd *_ce .Writer ;_acaace int64 ;_ebcdb error ;_fecea *_gea .PdfCrypt ;_adgga *_gea .PdfObjectDictionary ;_caaaa *_gea .PdfIndirectObject ;_bdgfbe *_gea .PdfObjectArray ;_fedce _gea .Version ;
_cgdca *bool ;_adbdb map[_gea .PdfObject ][]*_gea .PdfObjectDictionary ;_fdfda *PdfAcroForm ;_acbg Optimizer ;_abfbb StandardApplier ;_aebaa map[int ]crossReference ;_geage int64 ;ObjNumOffset int ;_abaff bool ;_eddaf _gea .XrefTable ;_dfdea int64 ;_gcba int64 ;
_egfbf map[_gea .PdfObject ]int64 ;_fabgc map[_gea .PdfObject ]struct{};_fgefc string ;_gffgcb []*PdfOutputIntent ;_edfge bool ;_dgfabb ,_ebcad string ;};func _dfbga (_faaaa *_gea .PdfObjectDictionary ,_dcdcc *fontCommon )(*pdfCIDFontType0 ,error ){if _dcdcc ._abed !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_fd .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_dcdcc );
return nil ,_gea .ErrRangeError ;};_cggdb :=_gfgbg (_dcdcc );_efg ,_dgff :=_gea .GetDict (_faaaa .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_dgff {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_dcdcc );
return nil ,ErrRequiredAttributeMissing ;};_cggdb .CIDSystemInfo =_efg ;_cggdb .DW =_faaaa .Get ("\u0044\u0057");_cggdb .W =_faaaa .Get ("\u0057");_cggdb .DW2 =_faaaa .Get ("\u0044\u0057\u0032");_cggdb .W2 =_faaaa .Get ("\u0057\u0032");_cggdb ._ecggc =1000.0;
if _aaafd ,_bggca :=_gea .GetNumberAsFloat (_cggdb .DW );_bggca ==nil {_cggdb ._ecggc =_aaafd ;};_bgbbca ,_edfcb :=_ggcc (_cggdb .W );if _edfcb !=nil {return nil ,_edfcb ;};if _bgbbca ==nil {_bgbbca =map[_ceb .CharCode ]float64 {};};_cggdb ._cbfda =_bgbbca ;
return _cggdb ,nil ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_daf :=NewPdfAction ();_bba :=&PdfActionRendition {};_bba .PdfAction =_daf ;_daf .SetContext (_bba );return _bba ;};

// Encoder returns the font's text encoder.
func (_bcbec pdfCIDFontType2 )Encoder ()_ceb .TextEncoder {return _bcbec ._abgfg };

// ToPdfObject returns the PDF representation of the colorspace.
func (_cfbcd *PdfColorspaceSpecialPattern )ToPdfObject ()_gea .PdfObject {if _cfbcd .UnderlyingCS ==nil {return _gea .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_feca :=_gea .MakeArray (_gea .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));
_feca .Append (_cfbcd .UnderlyingCS .ToPdfObject ());if _cfbcd ._dfbf !=nil {_cfbcd ._dfbf .PdfObject =_feca ;return _cfbcd ._dfbf ;};return _feca ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1. It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2. If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3. If there is no /MissingWidth then a failure is returned.
//
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
// well give them 0 width. There is no need for the bool return.
//
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_bdgf *PdfFont )GetCharMetrics (code _ceb .CharCode )(CharMetrics ,bool ){var _geaaa _ad .CharMetrics ;switch _begc :=_bdgf ._bgfbc .(type ){case *pdfFontSimple :if _dbeed ,_dfga :=_begc .GetCharMetrics (code );_dfga {return _dbeed ,_dfga ;};case *pdfFontType0 :if _fcdac ,_fbaa :=_begc .GetCharMetrics (code );
_fbaa {return _fcdac ,_fbaa ;};case *pdfCIDFontType0 :if _gfbfb ,_bbffe :=_begc .GetCharMetrics (code );_bbffe {return _gfbfb ,_bbffe ;};case *pdfCIDFontType2 :if _ebeac ,_ddafe :=_begc .GetCharMetrics (code );_ddafe {return _ebeac ,_ddafe ;};case *pdfFontType3 :if _cefd ,_dgage :=_begc .GetCharMetrics (code );
_dgage {return _cefd ,_dgage ;};default:_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_bdgf ._bgfbc );
return _geaaa ,false ;};if _ffgfd ,_geae :=_bdgf .GetFontDescriptor ();_geae ==nil &&_ffgfd !=nil {return _ad .CharMetrics {Wx :_ffgfd ._eaaf },true ;};_fd .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_bdgf );
return _geaaa ,false ;};

// ToPdfObject implements interface PdfModel.
func (_fbcg *PdfFilespec )ToPdfObject ()_gea .PdfObject {_aecd :=_fbcg .getDict ();_aecd .Clear ();_aecd .Set ("\u0054\u0079\u0070\u0065",_gea .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_aecd .SetIfNotNil ("\u0046\u0053",_fbcg .FS );
_aecd .SetIfNotNil ("\u0046",_fbcg .F );_aecd .SetIfNotNil ("\u0055\u0046",_fbcg .UF );_aecd .SetIfNotNil ("\u0044\u004f\u0053",_fbcg .DOS );_aecd .SetIfNotNil ("\u004d\u0061\u0063",_fbcg .Mac );_aecd .SetIfNotNil ("\u0055\u006e\u0069\u0078",_fbcg .Unix );
_aecd .SetIfNotNil ("\u0049\u0044",_fbcg .ID );_aecd .SetIfNotNil ("\u0056",_fbcg .V );_aecd .SetIfNotNil ("\u0045\u0046",_fbcg .EF );_aecd .SetIfNotNil ("\u0052\u0046",_fbcg .RF );_aecd .SetIfNotNil ("\u0044\u0065\u0073\u0063",_fbcg .Desc );_aecd .SetIfNotNil ("\u0043\u0049",_fbcg .CI );
return _fbcg ._feeef ;};

// CustomKeys returns all custom info keys as list.
func (_debcc *PdfInfo )CustomKeys ()[]string {if _debcc ._geda ==nil {return nil ;};_faga :=make ([]string ,len (_debcc ._geda .Keys ()));for _ ,_gabff :=range _debcc ._geda .Keys (){_faga =append (_faga ,_gabff .String ());};return _faga ;};

// NewPdfColorPatternType3 returns an empty color shading pattern type 3 (Radial).
func NewPdfColorPatternType3 ()*PdfColorPatternType3 {_bcbe :=&PdfColorPatternType3 {};return _bcbe };

// GetPage returns the PdfPage model for the specified page number.
func (_facec *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _facec ._edcdb .GetCrypter ()!=nil &&!_facec ._edcdb .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_facec ._daega )< pageNumber {return nil ,_gg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_acbce :=pageNumber -1;if _acbce < 0{return nil ,_e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_edgea :=_facec .PageList [_acbce ];
return _edgea ,nil ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_faa :=NewPdfAction ();_ecc :=&PdfActionGoToR {};_ecc .PdfAction =_faa ;_faa .SetContext (_ecc );return _ecc ;};var _ffcea =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _gea .PdfObject ;NewWindow _gea .PdfObject ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_dfbf *_gea .PdfIndirectObject ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_fedf *PdfField )ToPdfObject ()_gea .PdfObject {_gefd :=_fedf ._bcga ;_ddbc :=_gefd .PdfObject .(*_gea .PdfObjectDictionary );_ebdeb :=_gea .MakeArray ();for _ ,_fcac :=range _fedf .Kids {_ebdeb .Append (_fcac .ToPdfObject ());};for _ ,_aaadc :=range _fedf .Annotations {if _aaadc ._bbf !=_fedf ._bcga {_ebdeb .Append (_aaadc .GetContext ().ToPdfObject ());
};};if _fedf .Parent !=nil {_ddbc .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fedf .Parent .GetContainingPdfObject ());};if _ebdeb .Len ()> 0{_ddbc .Set ("\u004b\u0069\u0064\u0073",_ebdeb );};_ddbc .SetIfNotNil ("\u0046\u0054",_fedf .FT );_ddbc .SetIfNotNil ("\u0054",_fedf .T );
_ddbc .SetIfNotNil ("\u0054\u0055",_fedf .TU );_ddbc .SetIfNotNil ("\u0054\u004d",_fedf .TM );_ddbc .SetIfNotNil ("\u0046\u0066",_fedf .Ff );_ddbc .SetIfNotNil ("\u0056",_fedf .V );_ddbc .SetIfNotNil ("\u0044\u0056",_fedf .DV );_ddbc .SetIfNotNil ("\u0041\u0041",_fedf .AA );
if _fedf .VariableText !=nil {_ddbc .SetIfNotNil ("\u0044\u0041",_fedf .VariableText .DA );_ddbc .SetIfNotNil ("\u0051",_fedf .VariableText .Q );_ddbc .SetIfNotNil ("\u0044\u0053",_fedf .VariableText .DS );_ddbc .SetIfNotNil ("\u0052\u0056",_fedf .VariableText .RV );
};return _gefd ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_accfb *Image )SetSamples (samples []uint32 ){if _accfb .BitsPerComponent < 8{samples =_accfb .samplesAddPadding (samples );};_edebc :=_ed .ResampleUint32 (samples ,int (_accfb .BitsPerComponent ),8);_cfbaf :=make ([]byte ,len (_edebc ));for _fefaf ,_ddeedd :=range _edebc {_cfbaf [_fefaf ]=byte (_ddeedd );
};_accfb .Data =_cfbaf ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_aedfa *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_gea .PdfObject )(PdfColor ,error ){if _aedfa .Alternate ==nil {if _aedfa .N ==1{_aabc :=NewPdfColorspaceDeviceGray ();return _aabc .ColorFromPdfObjects (objects );}else if _aedfa .N ==3{_ebgf :=NewPdfColorspaceDeviceRGB ();
return _ebgf .ColorFromPdfObjects (objects );}else if _aedfa .N ==4{_eeaee :=NewPdfColorspaceDeviceCMYK ();return _eeaee .ColorFromPdfObjects (objects );}else {return nil ,_gg .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _aedfa .Alternate .ColorFromPdfObjects (objects );};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _cef .ReadSeeker )(*PdfReader ,error ){const _cbbfc ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _dcgdf (rs ,&ReaderOpts {LazyLoad :true },false ,_cbbfc );
};var _ pdfFont =(*pdfFontType0 )(nil );

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_gdge *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// ColorToRGB converts a CalGray color to an RGB color.
func (_bcfa *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_ddece ,_ggdd :=color .(*PdfColorCalGray );if !_ggdd {_fd .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_gg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_ddece .Val ();X :=_bcfa .WhitePoint [0]*_fa .Pow (ANorm ,_bcfa .Gamma );Y :=_bcfa .WhitePoint [1]*_fa .Pow (ANorm ,_bcfa .Gamma );
Z :=_bcfa .WhitePoint [2]*_fa .Pow (ANorm ,_bcfa .Gamma );_bdgb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_gfgga :=-0.969256*X +1.875992*Y +0.041556*Z ;_dfaf :=0.055648*X +-0.204043*Y +1.057311*Z ;_bdgb =_fa .Min (_fa .Max (_bdgb ,0),1.0);_gfgga =_fa .Min (_fa .Max (_gfgga ,0),1.0);
_dfaf =_fa .Min (_fa .Max (_dfaf ,0),1.0);return NewPdfColorDeviceRGB (_bdgb ,_gfgga ,_dfaf ),nil ;};

// IsShading specifies if the pattern is a shading pattern.
func (_fada *PdfPattern )IsShading ()bool {return _fada .PatternType ==2};func _bgfbe (_abggg *_gea .PdfObjectDictionary )(*PdfFieldText ,error ){_bebf :=&PdfFieldText {};_bebf .DA ,_ =_gea .GetString (_abggg .Get ("\u0044\u0041"));_bebf .Q ,_ =_gea .GetInt (_abggg .Get ("\u0051"));
_bebf .DS ,_ =_gea .GetString (_abggg .Get ("\u0044\u0053"));_bebf .RV =_abggg .Get ("\u0052\u0056");_bebf .MaxLen ,_ =_gea .GetInt (_abggg .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _bebf ,nil ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_cbeac *PdfShading )GetContext ()PdfModel {return _cbeac ._cffdg };

// GetNumComponents returns the number of color components (1 for CalGray).
func (_fgba *PdfColorCalGray )GetNumComponents ()int {return 1};func _fefbb (_geacff []byte )([]byte ,error ){_dfagc :=_bb .New ();if _ ,_geece :=_cef .Copy (_dfagc ,_ddg .NewReader (_geacff ));_geece !=nil {return nil ,_geece ;};return _dfagc .Sum (nil ),nil ;
};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _cef .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _dcfbg ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _dcgdf (rs ,opts ,true ,_dcfbg );
};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_acfag *PdfPageResources )GenerateXObjectName ()_gea .PdfObjectName {_dfaab :=1;for {_eede :=_gea .MakeName (_e .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_dfaab ));if !_acfag .HasXObjectByName (*_eede ){return *_eede ;};_dfaab ++;};};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_fgce *PdfFont )CharcodesToUnicodeWithStats (charcodes []_ceb .CharCode )(_afgf []rune ,_geeg ,_effd int ){_fagg ,_geeg ,_effd :=_fgce .CharcodesToStrings (charcodes );return []rune (_aa .Join (_fagg ,"")),_geeg ,_effd ;};func (_aadf *PdfReader )newPdfAnnotationTextFromDict (_cgae *_gea .PdfObjectDictionary )(*PdfAnnotationText ,error ){_cbf :=PdfAnnotationText {};
_geeb ,_bed :=_aadf .newPdfAnnotationMarkupFromDict (_cgae );if _bed !=nil {return nil ,_bed ;};_cbf .PdfAnnotationMarkup =_geeb ;_cbf .Open =_cgae .Get ("\u004f\u0070\u0065\u006e");_cbf .Name =_cgae .Get ("\u004e\u0061\u006d\u0065");_cbf .State =_cgae .Get ("\u0053\u0074\u0061t\u0065");
_cbf .StateModel =_cgae .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_cbf ,nil ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_cdg :=NewPdfAction ();_bac :=&PdfActionResetForm {};_bac .PdfAction =_cdg ;_cdg .SetContext (_bac );return _bac ;};

// PdfColorPatternType3 represents a color shading pattern type 3 (Radial).
type PdfColorPatternType3 struct{Color PdfColor ;PatternName _gea .PdfObjectName ;};

// Fill populates `form` with values provided by `provider`.
func (_baaeb *PdfAcroForm )Fill (provider FieldValueProvider )error {return _baaeb .fill (provider ,nil )};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_fedac *PdfColorspaceLab )ColorFromPdfObjects (objects []_gea .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gabf ,_agbf :=_gea .GetNumbersAsFloat (objects );
if _agbf !=nil {return nil ,_agbf ;};return _fedac .ColorFromFloats (_gabf );};

// SetDecode sets the decode image float slice.
func (_cfddd *Image )SetDecode (decode []float64 ){_cfddd ._edadg =decode };

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_gfff *pdfCIDFontType2 )ToPdfObject ()_gea .PdfObject {if _gfff ._eeaeg ==nil {_gfff ._eeaeg =&_gea .PdfIndirectObject {};};_aebbac :=_gfff .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_gfff ._eeaeg .PdfObject =_aebbac ;if _gfff .CIDSystemInfo !=nil {_aebbac .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_gfff .CIDSystemInfo );};if _gfff .DW !=nil {_aebbac .Set ("\u0044\u0057",_gfff .DW );};if _gfff .DW2 !=nil {_aebbac .Set ("\u0044\u0057\u0032",_gfff .DW2 );
};if _gfff .W !=nil {_aebbac .Set ("\u0057",_gfff .W );};if _gfff .W2 !=nil {_aebbac .Set ("\u0057\u0032",_gfff .W2 );};if _gfff .CIDToGIDMap !=nil {_aebbac .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_gfff .CIDToGIDMap );};return _gfff ._eeaeg ;
};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_cgd :=NewPdfAction ();_bfe :=&PdfActionSound {};_bfe .PdfAction =_cgd ;_cgd .SetContext (_bfe );return _bfe ;};func _ebgdf (_efcb *_deg .ImageBase )(_fabfe Image ){_fabfe .Width =int64 (_efcb .Width );_fabfe .Height =int64 (_efcb .Height );
_fabfe .BitsPerComponent =int64 (_efcb .BitsPerComponent );_fabfe .ColorComponents =_efcb .ColorComponents ;_fabfe .Data =_efcb .Data ;_fabfe ._edadg =_efcb .Decode ;_fabfe ._bdbf =_efcb .Alpha ;return _fabfe ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// G returns the value of the green component of the color.
func (_afdb *PdfColorDeviceRGB )G ()float64 {return _afdb [1]};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_ebgfb :_gea .MakeIndirectObject (_gea .MakeDict ()),VRI :map[string ]*VRI {}};};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_dcbc *PdfFont )ToUnicode ()string {if _dcbc .baseFields ()._cbfe ==nil {return "";};return _dcbc .baseFields ()._cbfe .Name ();};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_bgeac *PdfPattern )SetContext (ctx PdfModel ){_bgeac ._efgbe =ctx };

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _gea .PdfObject ;_dbdg []byte ;_ffbee *_gea .PdfIndirectObject ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_bdgg FieldFlag )Has (fl FieldFlag )bool {return (_bdgg .Mask ()&fl .Mask ())> 0};func _abafe (_ddbeb _gea .PdfObject )[]*_gea .PdfObjectStream {if _ddbeb ==nil {return nil ;};_aegdb ,_ceabea :=_gea .GetArray (_ddbeb );if !_ceabea ||_aegdb .Len ()==0{return nil ;
};_acdgc :=make ([]*_gea .PdfObjectStream ,0,_aegdb .Len ());for _ ,_ccbadd :=range _aegdb .Elements (){if _ccge ,_gdcffd :=_gea .GetStream (_ccbadd );_gdcffd {_acdgc =append (_acdgc ,_ccge );};};return _acdgc ;};type fontFile struct{_dgae string ;_ggaa string ;
_edba _ceb .SimpleEncoder ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_fdg *PdfField )Flags ()FieldFlag {var _egafd FieldFlag ;_dcded ,_adaa :=_fdg .inherit (func (_gfec *PdfField )bool {if _gfec .Ff !=nil {_egafd =FieldFlag (*_gfec .Ff );return true ;};return false ;});if _adaa !=nil {_fd .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_adaa );
};if !_dcded {_fd .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _egafd ;};func _dcbgc (_agee _gea .PdfObject )(*PdfPageResourcesColorspaces ,error ){_gcfde :=&PdfPageResourcesColorspaces {};
if _gdga ,_fbgag :=_agee .(*_gea .PdfIndirectObject );_fbgag {_gcfde ._dffba =_gdga ;_agee =_gdga .PdfObject ;};_eaddbd ,_ceaa :=_gea .GetDict (_agee );if !_ceaa {return nil ,_gg .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_gcfde .Names =[]string {};_gcfde .Colorspaces =map[string ]PdfColorspace {};for _ ,_ggfbc :=range _eaddbd .Keys (){_egefg :=_eaddbd .Get (_ggfbc );_gcfde .Names =append (_gcfde .Names ,string (_ggfbc ));_gdegd ,_cddb :=NewPdfColorspaceFromPdfObject (_egefg );
if _cddb !=nil {return nil ,_cddb ;};_gcfde .Colorspaces [string (_ggfbc )]=_gdegd ;};return _gcfde ,nil ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1. Use the ToUnicode CMap if there is one.
//  2. Use the underlying font's encoding.
func (_dgde *PdfFont )CharcodesToUnicode (charcodes []_ceb .CharCode )[]rune {_fcca ,_ ,_ :=_dgde .CharcodesToUnicodeWithStats (charcodes );return _fcca ;};

// HasPatternByName checks whether a pattern object is defined by the specified keyName.
func (_agcdg *PdfPageResources )HasPatternByName (keyName _gea .PdfObjectName )bool {_ ,_bgcde :=_agcdg .GetPatternByName (keyName );return _bgcde ;};

// GetContainingPdfObject implements interface PdfModel.
func (_cc *PdfAction )GetContainingPdfObject ()_gea .PdfObject {return _cc ._af };func (_ggecg *PdfReader )newPdfPageFromDict (_gbbgg *_gea .PdfObjectDictionary )(*PdfPage ,error ){_bebfb :=NewPdfPage ();_bebfb ._acebb =_gbbgg ;_bebfb ._bffef =*_gbbgg ;
_degeb :=*_gbbgg ;_babf ,_accd :=_degeb .Get ("\u0054\u0079\u0070\u0065").(*_gea .PdfObjectName );if !_accd {return nil ,_gg .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_babf !="\u0050\u0061\u0067\u0065"{return nil ,_gg .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _dcae :=_degeb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_dcae !=nil {_bebfb .Parent =_dcae ;};if _eebf :=_degeb .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_eebf !=nil {_bdcgb ,_bgabb :=_gea .GetString (_eebf );if !_bgabb {return nil ,_gg .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_dbegc ,_egcde :=NewPdfDate (_bdcgb .Str ());if _egcde !=nil {return nil ,_egcde ;};_bebfb .LastModified =&_dbegc ;};if _cgfgf :=_degeb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_cgfgf !=nil &&!_gea .IsNullObject (_cgfgf ){_acdba ,_adbb :=_gea .GetDict (_cgfgf );
if !_adbb {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cgfgf );};var _eegg error ;_bebfb .Resources ,_eegg =NewPdfPageResourcesFromDict (_acdba );
if _eegg !=nil {return nil ,_eegg ;};}else {_ebcge ,_cegae :=_bebfb .getParentResources ();if _cegae !=nil {return nil ,_cegae ;};if _ebcge ==nil {_ebcge =NewPdfPageResources ();};_bebfb .Resources =_ebcge ;};if _fgfb :=_degeb .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_fgfb !=nil {_cegag ,_ccfgc :=_gea .GetArray (_fgfb );if !_ccfgc {return nil ,_gg .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _ebcba error ;
_bebfb .MediaBox ,_ebcba =NewPdfRectangle (*_cegag );if _ebcba !=nil {return nil ,_ebcba ;};};if _cgfc :=_degeb .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_cgfc !=nil {_ebfab ,_fgfbd :=_gea .GetArray (_cgfc );if !_fgfbd {return nil ,_gg .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _fbdeg error ;_bebfb .CropBox ,_fbdeg =NewPdfRectangle (*_ebfab );if _fbdeg !=nil {return nil ,_fbdeg ;};};if _ddag :=_degeb .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_ddag !=nil {_dcfb ,_bded :=_gea .GetArray (_ddag );if !_bded {return nil ,_gg .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _fafg error ;_bebfb .BleedBox ,_fafg =NewPdfRectangle (*_dcfb );if _fafg !=nil {return nil ,_fafg ;};};if _fgafg :=_degeb .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_fgafg !=nil {_cfgaa ,_abfc :=_gea .GetArray (_fgafg );if !_abfc {return nil ,_gg .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _bfbeb error ;_bebfb .TrimBox ,_bfbeb =NewPdfRectangle (*_cfgaa );if _bfbeb !=nil {return nil ,_bfbeb ;};};if _cceg :=_degeb .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_cceg !=nil {_bfeb ,_ggccb :=_gea .GetArray (_cceg );if !_ggccb {return nil ,_gg .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _ddeee error ;_bebfb .ArtBox ,_ddeee =NewPdfRectangle (*_bfeb );if _ddeee !=nil {return nil ,_ddeee ;};};if _edefa :=_degeb .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_edefa !=nil {_bebfb .BoxColorInfo =_edefa ;};
if _addb :=_degeb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_addb !=nil {_bebfb .Contents =_addb ;};if _bgdc :=_degeb .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_bgdc !=nil {_eaaa ,_abfea :=_gea .GetNumberAsInt64 (_bgdc );if _abfea !=nil {return nil ,_gg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_bebfb .Rotate =&_eaaa ;};if _feefb :=_degeb .Get ("\u0047\u0072\u006fu\u0070");_feefb !=nil {_bebfb .Group =_feefb ;};if _gedb :=_degeb .Get ("\u0054\u0068\u0075m\u0062");_gedb !=nil {_bebfb .Thumb =_gedb ;};if _cbbc :=_degeb .Get ("\u0042");_cbbc !=nil {_bebfb .B =_cbbc ;
};if _ccgg :=_degeb .Get ("\u0044\u0075\u0072");_ccgg !=nil {_bebfb .Dur =_ccgg ;};if _bddbb :=_degeb .Get ("\u0054\u0072\u0061n\u0073");_bddbb !=nil {_bebfb .Trans =_bddbb ;};if _cgdfd :=_degeb .Get ("\u0041\u0041");_cgdfd !=nil {_bebfb .AA =_cgdfd ;};
if _abegg :=_degeb .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_abegg !=nil {_bebfb .Metadata =_abegg ;};if _accgc :=_degeb .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_accgc !=nil {_bebfb .PieceInfo =_accgc ;};if _bfaff :=_degeb .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_bfaff !=nil {_bebfb .StructParents =_bfaff ;};if _edfdc :=_degeb .Get ("\u0049\u0044");_edfdc !=nil {_bebfb .ID =_edfdc ;};if _dccdg :=_degeb .Get ("\u0050\u005a");_dccdg !=nil {_bebfb .PZ =_dccdg ;};if _bdbae :=_degeb .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_bdbae !=nil {_bebfb .SeparationInfo =_bdbae ;};if _ceef :=_degeb .Get ("\u0054\u0061\u0062\u0073");_ceef !=nil {_bebfb .Tabs =_ceef ;};if _gded :=_degeb .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_gded !=nil {_bebfb .TemplateInstantiated =_gded ;};if _feae :=_degeb .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_feae !=nil {_bebfb .PresSteps =_feae ;};if _fbafcf :=_degeb .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_fbafcf !=nil {_bebfb .UserUnit =_fbafcf ;
};if _dgffg :=_degeb .Get ("\u0056\u0050");_dgffg !=nil {_bebfb .VP =_dgffg ;};if _ccff :=_degeb .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_ccff !=nil {_bebfb .Annots =_ccff ;};_bebfb ._ddffg =_ggecg ;return _bebfb ,nil ;};

// GetOptimizer returns current PDF optimizer.
func (_abdee *PdfWriter )GetOptimizer ()Optimizer {return _abdee ._acbg };

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_gabg *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _gabg .flattenFieldsWithOpts (false ,appgen ,opts );};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_cfda *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_gea .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fgab ,_dgcff :=_gea .GetNumbersAsFloat (objects );
if _dgcff !=nil {return nil ,_dgcff ;};return _cfda .ColorFromFloats (_fgab );};func (_abef *PdfReader )newPdfAnnotationWidgetFromDict (_gfbb *_gea .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_agdf :=PdfAnnotationWidget {};_agdf .H =_gfbb .Get ("\u0048");
_agdf .MK =_gfbb .Get ("\u004d\u004b");_agdf .A =_gfbb .Get ("\u0041");_agdf .AA =_gfbb .Get ("\u0041\u0041");_agdf .BS =_gfbb .Get ("\u0042\u0053");_agdf .Parent =_gfbb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_agdf ,nil ;};func (_efed *PdfReader )newPdfAnnotationLinkFromDict (_aee *_gea .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_efa :=PdfAnnotationLink {};
_efa .A =_aee .Get ("\u0041");_efa .Dest =_aee .Get ("\u0044\u0065\u0073\u0074");_efa .H =_aee .Get ("\u0048");_efa .PA =_aee .Get ("\u0050\u0041");_efa .QuadPoints =_aee .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_efa .BS =_aee .Get ("\u0042\u0053");
return &_efa ,nil ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_aeaeg :=&PdfOutlineItem {_cgcf :_gea .MakeIndirectObject (_gea .MakeDict ())};_aeaeg ._bdagf =_aeaeg ;return _aeaeg ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_acfa PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _acfa ._bgfbc .getFontDescriptor (),nil ;};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_gfafe *PdfPage )Size ()(float64 ,float64 ,error ){_gefec ,_bdagb :=_gfafe .GetMediaBox ();if _bdagb !=nil {return 0,0,_bdagb ;};_dggbe ,_dedf :=_gefec .Width (),_gefec .Height ();_dcebb ,_bdagb :=_gfafe .GetRotate ();if _bdagb !=nil {_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_bdagb .Error ());
};if _efgag :=_dcebb ;_efgag %360!=0&&_efgag %90==0{if _bcaec :=(360+_efgag %360)%360;_bcaec ==90||_bcaec ==270{_dggbe ,_dedf =_dedf ,_dggbe ;};};return _dggbe ,_dedf ,nil ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_ffce *PdfColorspaceCalGray )ToPdfObject ()_gea .PdfObject {_bfefb :=&_gea .PdfObjectArray {};_bfefb .Append (_gea .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_aaddf :=_gea .MakeDict ();if _ffce .WhitePoint !=nil {_aaddf .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_gea .MakeArray (_gea .MakeFloat (_ffce .WhitePoint [0]),_gea .MakeFloat (_ffce .WhitePoint [1]),_gea .MakeFloat (_ffce .WhitePoint [2])));
}else {_fd .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _ffce .BlackPoint !=nil {_aaddf .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_gea .MakeArray (_gea .MakeFloat (_ffce .BlackPoint [0]),_gea .MakeFloat (_ffce .BlackPoint [1]),_gea .MakeFloat (_ffce .BlackPoint [2])));
};_aaddf .Set ("\u0047\u0061\u006dm\u0061",_gea .MakeFloat (_ffce .Gamma ));_bfefb .Append (_aaddf );if _ffce ._dbgg !=nil {_ffce ._dbgg .PdfObject =_bfefb ;return _ffce ._dbgg ;};return _bfefb ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_bfbea *pdfFontSimple )SetEncoder (encoder _ceb .TextEncoder ){_bfbea ._egaa =encoder };

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_edf :=NewPdfAnnotation ();_bcaa :=&PdfAnnotationStamp {};_bcaa .PdfAnnotation =_edf ;_bcaa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_edf .SetContext (_bcaa );return _bcaa ;};

// ToPdfObject implements interface PdfModel.
func (_aaf *PdfActionImportData )ToPdfObject ()_gea .PdfObject {_aaf .PdfAction .ToPdfObject ();_fdd :=_aaf ._af ;_dga :=_fdd .PdfObject .(*_gea .PdfObjectDictionary );_dga .SetIfNotNil ("\u0053",_gea .MakeName (string (ActionTypeImportData )));if _aaf .F !=nil {_dga .Set ("\u0046",_aaf .F .ToPdfObject ());
};return _fdd ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};func (_eec *PdfReader )newPdfActionRenditionFromDict (_dffe *_gea .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_dffe .Get ("\u0052"),AN :_dffe .Get ("\u0041\u004e"),OP :_dffe .Get ("\u004f\u0050"),JS :_dffe .Get ("\u004a\u0053")},nil ;
};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_dgbee *PdfColorCalRGB )GetNumComponents ()int {return 3};func (_gbegb *LTV )getOCSPs (_edddf []*_cg .Certificate ,_aeee map[string ]*_cg .Certificate )([][]byte ,error ){_cadf :=make ([][]byte ,0,len (_edddf ));for _ ,_ccded :=range _edddf {for _ ,_befc :=range _ccded .OCSPServer {if _gbegb .CertClient .IsCA (_ccded ){continue ;
};_dfcab ,_bcbb :=_aeee [_ccded .Issuer .CommonName ];if !_bcbb {_fd .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_cccgb ,_cabc :=_gbegb .OCSPClient .MakeRequest (_befc ,_ccded ,_dfcab );if _cabc !=nil {_fd .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_cabc );
continue ;};_cadf =append (_cadf ,_cccgb );};};return _cadf ,nil ;};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_gea .PdfObjectName ;P *_gea .PdfObjectInteger ;V *_gea .PdfObjectName ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_afgb *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_adabf :=_afgb .fill (provider ,appGen );if _adabf !=nil {return _adabf ;};if _ ,_fdggf :=provider .(FieldImageProvider );_fdggf {_adabf =_afgb .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _adabf ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_ceddc *XObjectForm )SetContentStream (content []byte ,encoder _gea .StreamEncoder )error {_aabff :=content ;if encoder ==nil {if _ceddc .Filter !=nil {encoder =_ceddc .Filter ;}else {encoder =_gea .NewRawEncoder ();};};_bdcaa ,_ccfge :=encoder .EncodeBytes (_aabff );
if _ccfge !=nil {return _ccfge ;};_aabff =_bdcaa ;_ceddc .Stream =_aabff ;_ceddc .Filter =encoder ;return nil ;};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_aeaeb *PdfWriter )ApplyStandard (optimizer StandardApplier ){_aeaeb ._abfbb =optimizer };

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_efgc *pdfFontSimple )ToPdfObject ()_gea .PdfObject {if _efgc ._gfbcc ==nil {_efgc ._gfbcc =&_gea .PdfIndirectObject {};};_adedc :=_efgc .baseFields ().asPdfObjectDictionary ("");_efgc ._gfbcc .PdfObject =_adedc ;if _efgc .FirstChar !=nil {_adedc .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_efgc .FirstChar );
};if _efgc .LastChar !=nil {_adedc .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_efgc .LastChar );};if _efgc .Widths !=nil {_adedc .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_efgc .Widths );};if _efgc .Encoding !=nil {_adedc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_efgc .Encoding );
}else if _efgc ._egaa !=nil {_agdcf :=_efgc ._egaa .ToPdfObject ();if _agdcf !=nil {_adedc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_agdcf );};};return _efgc ._gfbcc ;};func (_ggefg *XObjectImage )getParamsDict ()*_gea .PdfObjectDictionary {_ceecg :=_gea .MakeDict ();
_ceecg .Set ("\u0057\u0069\u0064t\u0068",_gea .MakeInteger (*_ggefg .Width ));_ceecg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_gea .MakeInteger (*_ggefg .Height ));_ceecg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_gea .MakeInteger (int64 (_ggefg .ColorSpace .GetNumComponents ())));
_ceecg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gea .MakeInteger (*_ggefg .BitsPerComponent ));return _ceecg ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_gea .PdfObjectBool ;SigFlags *_gea .PdfObjectInteger ;CO *_gea .PdfObjectArray ;DR *PdfPageResources ;DA *_gea .PdfObjectString ;Q *_gea .PdfObjectInteger ;XFA _gea .PdfObject ;

// ADBEEchoSign extra objects from Adobe Acrobat, causing signature invalid if not exists.
ADBEEchoSign _gea .PdfObject ;_eage *_gea .PdfIndirectObject ;_ecab bool ;};func (_afca *fontFile )parseASCIIPart (_fcede []byte )error {if len (_fcede )< 2||string (_fcede [:2])!="\u0025\u0021"{return _gg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_facf ,_bcgcb ,_bbge :=_edbd (_fcede );if _bbge !=nil {return _bbge ;};_baad :=_debe (_facf );_afca ._dgae =_baad ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _afca ._dgae ==""{_fd .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _bcgcb !=""{_acgbde ,_bffa :=_ddad (_bcgcb );if _bffa !=nil {return _bffa ;};_gfaf ,_bffa :=_ceb .NewCustomSimpleTextEncoder (_acgbde ,nil );if _bffa !=nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_bffa );
return nil ;};_afca ._edba =_gfaf ;};return nil ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_agfdc *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_agbbc *PdfPage )GetRotate ()(int64 ,error ){if _agbbc .Rotate !=nil {return *_agbbc .Rotate ,nil ;};_cdegc :=_agbbc .Parent ;for _cdegc !=nil {_bceaf ,_ccabe :=_gea .GetDict (_cdegc );if !_ccabe {return 0,_gg .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _gafcg :=_bceaf .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_gafcg !=nil {_bcfba ,_fccf :=_gea .GetInt (_gafcg );if !_fccf {return 0,_gg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};if _bcfba !=nil {return int64 (*_bcfba ),nil ;
};return 0,_gg .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_cdegc =_bceaf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_gg .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};var _effge =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// GetContainingPdfObject implements interface PdfModel.
func (_dfgaa *Permissions )GetContainingPdfObject ()_gea .PdfObject {return _dfgaa ._fbccg };

// GetPerms returns the Permissions dictionary
func (_bffad *PdfReader )GetPerms ()*Permissions {return _bffad ._dbega };type pdfCIDFontType2 struct{fontCommon ;_eeaeg *_gea .PdfIndirectObject ;_abgfg _ceb .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_gea .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _gea .PdfObject ;W _gea .PdfObject ;DW2 _gea .PdfObject ;W2 _gea .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _gea .PdfObject ;_gebgb map[_ceb .CharCode ]float64 ;_dcdab float64 ;_aagb map[rune ]int ;};

// WriteString outputs the object as it is to be written to file.
func (_eefgf *PdfTransformParamsDocMDP )WriteString ()string {return _eefgf .ToPdfObject ().WriteString ();};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_gea .PdfObjectArray ;TI *_gea .PdfObjectInteger ;I *_gea .PdfObjectArray ;};

// ToPdfObject implements interface PdfModel.
func (_bfdc *PdfActionHide )ToPdfObject ()_gea .PdfObject {_bfdc .PdfAction .ToPdfObject ();_aeg :=_bfdc ._af ;_adb :=_aeg .PdfObject .(*_gea .PdfObjectDictionary );_adb .SetIfNotNil ("\u0053",_gea .MakeName (string (ActionTypeHide )));_adb .SetIfNotNil ("\u0054",_bfdc .T );
_adb .SetIfNotNil ("\u0048",_bfdc .H );return _aeg ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_gebcbb *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_eggac :=_gebcbb .GetContentStreamObjs ();wrapContents =wrapContents &&len (_eggac )> 0;_gdded :=_gea .NewFlateEncoder ();_gcccd :=_gea .MakeArray ();if wrapContents {_fcff ,_adefa :=_gea .MakeStream ([]byte ("\u0071\u000a"),_gdded );
if _adefa !=nil {return _adefa ;};_gcccd .Append (_fcff );};_gcccd .Append (_eggac ...);if wrapContents {_dbga ,_baafb :=_gea .MakeStream ([]byte ("\u000a\u0051\u000a"),_gdded );if _baafb !=nil {return _baafb ;};_gcccd .Append (_dbga );};_gbbgc ,_ddfgd :=_gea .MakeStream (cs ,_gdded );
if _ddfgd !=nil {return _ddfgd ;};_gcccd .Append (_gbbgc );_gebcbb .Contents =_gcccd ;return nil ;};func _dgbf (_ggeb _gea .PdfObject )(*PdfColorspaceDeviceN ,error ){_gfga :=NewPdfColorspaceDeviceN ();if _aaed ,_dfffa :=_ggeb .(*_gea .PdfIndirectObject );
_dfffa {_gfga ._cbce =_aaed ;};_ggeb =_gea .TraceToDirectObject (_ggeb );_ccddg ,_dcdgcd :=_ggeb .(*_gea .PdfObjectArray );if !_dcdgcd {return nil ,_e .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _ccddg .Len ()!=4&&_ccddg .Len ()!=5{return nil ,_e .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_ggeb =_ccddg .Get (0);
_cceac ,_dcdgcd :=_ggeb .(*_gea .PdfObjectName );if !_dcdgcd {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_cceac !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_e .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_ggeb =_ccddg .Get (1);
_ggeb =_gea .TraceToDirectObject (_ggeb );_fdfe ,_dcdgcd :=_ggeb .(*_gea .PdfObjectArray );if !_dcdgcd {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_gfga .ColorantNames =_fdfe ;_ggeb =_ccddg .Get (2);_gfbf ,_gbfb :=NewPdfColorspaceFromPdfObject (_ggeb );if _gbfb !=nil {return nil ,_gbfb ;};_gfga .AlternateSpace =_gfbf ;_daag ,_gbfb :=_adggc (_ccddg .Get (3));if _gbfb !=nil {return nil ,_gbfb ;};
_gfga .TintTransform =_daag ;if _ccddg .Len ()==5{_eegbg ,_cafbc :=_dbcc (_ccddg .Get (4));if _cafbc !=nil {return nil ,_cafbc ;};_gfga .Attributes =_eegbg ;};return _gfga ,nil ;};func _gdffb (_bfbag *PdfField ,_bbfcd _gea .PdfObject )error {switch _bfbag .GetContext ().(type ){case *PdfFieldText :switch _dbegf :=_bbfcd .(type ){case *_gea .PdfObjectName :_ggcec :=_dbegf ;
_fd .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_ggcec .String ());
_bfbag .V =_gea .MakeEncodedString (_dbegf .String (),true );case *_gea .PdfObjectString :_bfbag .V =_gea .MakeEncodedString (_dbegf .String (),true );default:_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_dbegf ,_dbegf );
};case *PdfFieldButton :switch _bbfcd .(type ){case *_gea .PdfObjectName :if len (_bbfcd .String ())> 0{_bfbag .V =_bbfcd ;_cgggf (_bfbag ,_bbfcd );};case *_gea .PdfObjectString :if len (_bbfcd .String ())> 0{_bfbag .V =_gea .MakeName (_bbfcd .String ());
_cgggf (_bfbag ,_bfbag .V );};default:_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_bfbag .PartialName (),_bbfcd );_bfbag .V =_bbfcd ;
};case *PdfFieldChoice :switch _bbfcd .(type ){case *_gea .PdfObjectName :if len (_bbfcd .String ())> 0{_bfbag .V =_gea .MakeString (_bbfcd .String ());_cgggf (_bfbag ,_bbfcd );};case *_gea .PdfObjectString :if len (_bbfcd .String ())> 0{_bfbag .V =_bbfcd ;
_cgggf (_bfbag ,_gea .MakeName (_bbfcd .String ()));};default:_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_bfbag .PartialName (),_bbfcd );
_bfbag .V =_bbfcd ;};case *PdfFieldSignature :_fd .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_bfbag .PartialName (),_bbfcd );
};return nil ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_baega :=&PdfPageResourcesColorspaces {};_baega .Names =[]string {};_baega .Colorspaces =map[string ]PdfColorspace {};_baega ._dffba =&_gea .PdfIndirectObject {};return _baega ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// R returns the value of the red component of the color.
func (_egff *PdfColorDeviceRGB )R ()float64 {return _egff [0]};func _bdg (_bda _gea .PdfObject )(*PdfFilespec ,error ){if _bda ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_bda );};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_bcdbe OutlineDest )ToPdfObject ()_gea .PdfObject {if (_bcdbe .PageObj ==nil &&_bcdbe .Page < 0)||_bcdbe .Mode ==""{return _gea .MakeNull ();};_cabae :=_gea .MakeArray ();if _bcdbe .PageObj !=nil {_cabae .Append (_bcdbe .PageObj );}else {_cabae .Append (_gea .MakeInteger (_bcdbe .Page ));
};_cabae .Append (_gea .MakeName (_bcdbe .Mode ));switch _bcdbe .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_cabae .Append (_gea .MakeFloat (_bcdbe .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_cabae .Append (_gea .MakeFloat (_bcdbe .X ));
case "\u0058\u0059\u005a":_cabae .Append (_gea .MakeFloat (_bcdbe .X ));_cabae .Append (_gea .MakeFloat (_bcdbe .Y ));_cabae .Append (_gea .MakeFloat (_bcdbe .Zoom ));default:_cabae .Set (1,_gea .MakeName ("\u0046\u0069\u0074"));};return _cabae ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_aefdbd .Lock ();defer _aefdbd .Unlock ();_gdafd =author };

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _gea .PdfObjectName ;};

// ToInteger convert to an integer format.
func (_bceg *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_gggf :=_fa .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gggf *_bceg .R ()),uint32 (_gggf *_bceg .G ()),uint32 (_gggf *_bceg .B ())};};type pdfFont interface{_ad .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_gea .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// ToPdfObject implements interface PdfModel.
func (_egf *PdfActionThread )ToPdfObject ()_gea .PdfObject {_egf .PdfAction .ToPdfObject ();_bc :=_egf ._af ;_ebdf :=_bc .PdfObject .(*_gea .PdfObjectDictionary );_ebdf .SetIfNotNil ("\u0053",_gea .MakeName (string (ActionTypeThread )));if _egf .F !=nil {_ebdf .Set ("\u0046",_egf .F .ToPdfObject ());
};_ebdf .SetIfNotNil ("\u0044",_egf .D );_ebdf .SetIfNotNil ("\u0042",_egf .B );return _bc ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};func (_bfafa *pdfCIDFontType2 )baseFields ()*fontCommon {return &_bfafa .fontCommon };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_bfacc *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _bfacc .UnderlyingCS ==nil {return nil ,_gg .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _bfacc .UnderlyingCS .ColorFromFloats (vals );};func _gfcfc (_ddfca _gea .PdfObject )(*PdfShading ,error ){_agdaa :=&PdfShading {};var _cfed *_gea .PdfObjectDictionary ;if _facdb ,_egfff :=_gea .GetIndirect (_ddfca );_egfff {_agdaa ._adae =_facdb ;
_fadcc ,_abaab :=_facdb .PdfObject .(*_gea .PdfObjectDictionary );if !_abaab {_fd .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_gea .ErrTypeError ;
};_cfed =_fadcc ;}else if _bgbee ,_dbbbc :=_gea .GetStream (_ddfca );_dbbbc {_agdaa ._adae =_bgbee ;_cfed =_bgbee .PdfObjectDictionary ;}else if _aage ,_egfgg :=_gea .GetDict (_ddfca );_egfgg {_agdaa ._adae =_aage ;_cfed =_aage ;}else {_fd .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_ddfca );
return nil ,_gea .ErrTypeError ;};if _cfed ==nil {_fd .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_gg .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_ddfca =_cfed .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _ddfca ==nil {_fd .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ddfca =_gea .TraceToDirectObject (_ddfca );_eedab ,_aece :=_ddfca .(*_gea .PdfObjectInteger );if !_aece {_fd .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_ddfca );
return nil ,_gea .ErrTypeError ;};if *_eedab < 1||*_eedab > 7{_fd .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_eedab );
return nil ,_gea .ErrTypeError ;};_agdaa .ShadingType =_eedab ;_ddfca =_cfed .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _ddfca ==nil {_fd .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_eeged ,_cdaaba :=NewPdfColorspaceFromPdfObject (_ddfca );if _cdaaba !=nil {_fd .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_cdaaba );
return nil ,_cdaaba ;};_agdaa .ColorSpace =_eeged ;_ddfca =_cfed .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _ddfca !=nil {_ddfca =_gea .TraceToDirectObject (_ddfca );_eeaaa ,_bebda :=_ddfca .(*_gea .PdfObjectArray );if !_bebda {_fd .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_ddfca );
return nil ,_gea .ErrTypeError ;};_agdaa .Background =_eeaaa ;};_ddfca =_cfed .Get ("\u0042\u0042\u006f\u0078");if _ddfca !=nil {_ddfca =_gea .TraceToDirectObject (_ddfca );_bgaec ,_fdfed :=_ddfca .(*_gea .PdfObjectArray );if !_fdfed {_fd .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_ddfca );
return nil ,_gea .ErrTypeError ;};_aedcd ,_abadc :=NewPdfRectangle (*_bgaec );if _abadc !=nil {_fd .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_abadc );return nil ,_abadc ;};_agdaa .BBox =_aedcd ;};_ddfca =_cfed .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _ddfca !=nil {_ddfca =_gea .TraceToDirectObject (_ddfca );_gbgca ,_aaebc :=_ddfca .(*_gea .PdfObjectBool );if !_aaebc {_fd .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ddfca );
return nil ,_gea .ErrTypeError ;};_agdaa .AntiAlias =_gbgca ;};switch *_eedab {case 1:_gaafb ,_dceeb :=_ffaec (_cfed );if _dceeb !=nil {return nil ,_dceeb ;};_gaafb .PdfShading =_agdaa ;_agdaa ._cffdg =_gaafb ;return _agdaa ,nil ;case 2:_dacc ,_fafba :=_dgbd (_cfed );
if _fafba !=nil {return nil ,_fafba ;};_dacc .PdfShading =_agdaa ;_agdaa ._cffdg =_dacc ;return _agdaa ,nil ;case 3:_fccg ,_bcece :=_ffcgc (_cfed );if _bcece !=nil {return nil ,_bcece ;};_fccg .PdfShading =_agdaa ;_agdaa ._cffdg =_fccg ;return _agdaa ,nil ;
case 4:_aggad ,_eebca :=_dcfe (_cfed );if _eebca !=nil {return nil ,_eebca ;};_aggad .PdfShading =_agdaa ;_agdaa ._cffdg =_aggad ;return _agdaa ,nil ;case 5:_gedda ,_egeff :=_aabgg (_cfed );if _egeff !=nil {return nil ,_egeff ;};_gedda .PdfShading =_agdaa ;
_agdaa ._cffdg =_gedda ;return _agdaa ,nil ;case 6:_bdff ,_eceg :=_bbbda (_cfed );if _eceg !=nil {return nil ,_eceg ;};_bdff .PdfShading =_agdaa ;_agdaa ._cffdg =_bdff ;return _agdaa ,nil ;case 7:_eedacd ,_eeed :=_gaaaee (_cfed );if _eeed !=nil {return nil ,_eeed ;
};_eedacd .PdfShading =_agdaa ;_agdaa ._cffdg =_eedacd ;return _agdaa ,nil ;};return nil ,_gg .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_dffa :=NewPdfAnnotation ();_baba :=&PdfAnnotationPolyLine {};_baba .PdfAnnotation =_dffa ;_baba .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dffa .SetContext (_baba );return _baba ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gea .PdfObject ;IC _gea .PdfObject ;RO _gea .PdfObject ;OverlayText _gea .PdfObject ;Repeat _gea .PdfObject ;DA _gea .PdfObject ;Q _gea .PdfObject ;};

// Items returns all children outline items.
func (_gbbgf *OutlineItem )Items ()[]*OutlineItem {return _gbbgf .Entries };

// Encoder returns the font's text encoder.
func (_dfba pdfFontType3 )Encoder ()_ceb .TextEncoder {return _dfba ._cbcba };

// SetAlpha sets the alpha layer for the image.
func (_acada *Image )SetAlpha (alpha []byte ){_acada ._bdbf =alpha };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_gfefg *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_gea .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddeed ,_fbgbf :=_gea .GetNumbersAsFloat (objects );
if _fbgbf !=nil {return nil ,_fbgbf ;};return _gfefg .ColorFromFloats (_ddeed );};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_bfdb :=NewPdfAnnotation ();_aad :=&PdfAnnotationText {};_aad .PdfAnnotation =_bfdb ;_aad .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bfdb .SetContext (_aad );return _aad ;};

// HasExtGState checks if ExtGState name is available.
func (_agcc *PdfPage )HasExtGState (name _gea .PdfObjectName )bool {if _agcc .Resources ==nil {return false ;};if _agcc .Resources .ExtGState ==nil {return false ;};_cadcg ,_ddcd :=_gea .TraceToDirectObject (_agcc .Resources .ExtGState ).(*_gea .PdfObjectDictionary );
if !_ddcd {_fd .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_gea .TraceToDirectObject (_agcc .Resources .ExtGState ));
return false ;};_eeddb :=_cadcg .Get (name );_fabce :=_eeddb !=nil ;return _fabce ;};

// Write writes out the PDF.
func (_fegde *PdfWriter )Write (writer _cef .Writer )error {_fd .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_fggbf :=_fegde .checkLicense ();if _fggbf !=nil {return _fggbf ;};if _fggbf =_fegde .writeOutlines ();_fggbf !=nil {return _fggbf ;};
if _fggbf =_fegde .writeAcroFormFields ();_fggbf !=nil {return _fggbf ;};_fegde .checkPendingObjects ();if _fggbf =_fegde .writeOutputIntents ();_fggbf !=nil {return _fggbf ;};_fegde .setCatalogVersion ();_fegde .copyObjects ();if _fggbf =_fegde .optimize ();
_fggbf !=nil {return _fggbf ;};if _fggbf =_fegde .optimizeDocument ();_fggbf !=nil {return _fggbf ;};var _dgaag _ef .Hash ;if _fegde ._edfge {_dgaag =_cb .New ();writer =_cef .MultiWriter (_dgaag ,writer );};_fegde .setWriter (writer );_gcbcae :=_fegde .checkCrossReferenceStream ();
_ccbgfb ,_gcbcae :=_fegde .mapObjectStreams (_gcbcae );_fegde .adjustXRefAffectedVersion (_gcbcae );_fegde .writeDocumentVersion ();_fegde .updateObjectNumbers ();_fegde .writeObjects ();if _fggbf =_fegde .writeObjectsInStreams (_ccbgfb );_fggbf !=nil {return _fggbf ;
};_dbefeg :=_fegde ._acaace ;var _egeac int ;for _abgfgc :=range _fegde ._aebaa {if _abgfgc > _egeac {_egeac =_abgfgc ;};};if _fegde ._edfge {if _fggbf =_fegde .setHashIDs (_dgaag );_fggbf !=nil {return _fggbf ;};};if _gcbcae {if _fggbf =_fegde .writeXRefStreams (_egeac ,_dbefeg );
_fggbf !=nil {return _fggbf ;};}else {_fegde .writeTrailer (_egeac );};_fegde .makeOffSetReference (_dbefeg );if _fggbf =_fegde .flushWriter ();_fggbf !=nil {return _fggbf ;};return nil ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_ggead :=&PdfFilespec {};_ggead ._feeef =_gea .MakeIndirectObject (_gea .MakeDict ());return _ggead ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_ecbbd :=PdfColorLab {l ,a ,b };return &_ecbbd };

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_cegg *PdfReader )CheckAccessRights (password []byte )(bool ,_gcf .Permissions ,error ){return _cegg ._edcdb .CheckAccessRights (password );};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_ccb :=NewPdfAction ();_aff :=&PdfActionLaunch {};_aff .PdfAction =_ccb ;_ccb .SetContext (_aff );return _aff ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_febaf *Image )GetParamsDict ()*_gea .PdfObjectDictionary {_bbecf :=_gea .MakeDict ();_bbecf .Set ("\u0057\u0069\u0064t\u0068",_gea .MakeInteger (_febaf .Width ));_bbecf .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_gea .MakeInteger (_febaf .Height ));
_bbecf .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_gea .MakeInteger (int64 (_febaf .ColorComponents )));_bbecf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gea .MakeInteger (_febaf .BitsPerComponent ));
return _bbecf ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);
FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);
FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<27););

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_gfca *PdfPage )GetContainingPdfObject ()_gea .PdfObject {return _gfca ._gfgfdc };

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_fdaabe *PdfWriter )AddPage (page *PdfPage )error {const _adbcg ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_gcebe (page );_fgbd :=page .ToPdfObject ();_fd .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_fd .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_fgbd );_eadac ,_gacf :=_gea .GetIndirect (_fgbd );if !_gacf {return _gg .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_fd .Log .Trace ("\u0025\u0073",_eadac );_fd .Log .Trace ("\u0025\u0073",_eadac .PdfObject );_ebcgf ,_gacf :=_gea .GetDict (_eadac .PdfObject );if !_gacf {return _gg .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_gbddd ,_gacf :=_gea .GetName (_ebcgf .Get ("\u0054\u0079\u0070\u0065"));if !_gacf {return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_ebcgf .Get ("\u0054\u0079\u0070\u0065"));
};if _gbddd .String ()!="\u0050\u0061\u0067\u0065"{return _gg .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_fcded :=[]_gea .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_dbdegg ,_bfgfa :=_gea .GetIndirect (_ebcgf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_fd .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_ebcgf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_bfgfa );
for _bfgfa {_fd .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dbdegg );_gdffbc ,_eabc :=_gea .GetDict (_dbdegg .PdfObject );if !_eabc {return _gg .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_eecbf :=range _fcded {_fd .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_eecbf );if _ebcgf .Get (_eecbf )!=nil {_fd .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _deacb :=_gdffbc .Get (_eecbf );_deacb !=nil {_fd .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_eecbf );_ebcgf .Set (_eecbf ,_deacb );};};_dbdegg ,_bfgfa =_gea .GetIndirect (_gdffbc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_fd .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_gdffbc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_fd .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_ebcgf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fdaabe ._bccec );_eadac .PdfObject =_ebcgf ;_efae ,_gacf :=_gea .GetDict (_fdaabe ._bccec .PdfObject );if !_gacf {return _gg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_gbad ,_gacf :=_gea .GetArray (_efae .Get ("\u004b\u0069\u0064\u0073"));if !_gacf {return _gg .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_gbad .Append (_eadac );_fdaabe ._aefc [_ebcgf ]=struct{}{};_afefa ,_gacf :=_gea .GetInt (_efae .Get ("\u0043\u006f\u0075n\u0074"));if !_gacf {return _gg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_afefa =*_afefa +1;if page ._ddffg ==nil {_abeec :=_ge .Track (_fdaabe ._fgefc ,_adbcg );if _abeec !=nil {return _abeec ;};}else {_baegd :=_ge .Track (page ._ddffg ._bgceb ,_adbcg );if _baegd !=nil {return _baegd ;};};_fdaabe .addObject (_eadac );_aeeaa :=_fdaabe .addObjects (_ebcgf );
if _aeeaa !=nil {return _aeeaa ;};return nil ;};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_aafd *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_aafd .updateObjectsDeep (dss .ToPdfObject (),nil );};_aafd ._edeb =dss ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_gea .PdfObjectStream )(*XObjectImage ,error ){_dbdba :=&XObjectImage {};_dbdba ._bbffa =stream ;_beacb :=*(stream .PdfObjectDictionary );_aabaef ,_aacec :=_gea .NewEncoderFromStream (stream );if _aacec !=nil {return nil ,_aacec ;
};_dbdba .Filter =_aabaef ;if _fdafb :=_gea .TraceToDirectObject (_beacb .Get ("\u0057\u0069\u0064t\u0068"));_fdafb !=nil {_bgbae ,_daaab :=_fdafb .(*_gea .PdfObjectInteger );if !_daaab {return nil ,_gg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_decg :=int64 (*_bgbae );_dbdba .Width =&_decg ;}else {return nil ,_gg .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _acedd :=_gea .TraceToDirectObject (_beacb .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_acedd !=nil {_gbdfg ,_bgebf :=_acedd .(*_gea .PdfObjectInteger );if !_bgebf {return nil ,_gg .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_edaae :=int64 (*_gbdfg );
_dbdba .Height =&_edaae ;}else {return nil ,_gg .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _adfbf :=_gea .TraceToDirectObject (_beacb .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_adfbf !=nil {_bdgfbeg ,_edgab :=NewPdfColorspaceFromPdfObject (_adfbf );if _edgab !=nil {return nil ,_edgab ;};_dbdba .ColorSpace =_bdgfbeg ;}else {_fd .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_dbdba .ColorSpace =NewPdfColorspaceDeviceGray ();};if _fdcb :=_gea .TraceToDirectObject (_beacb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_fdcb !=nil {_afdfecd ,_aecdf :=_fdcb .(*_gea .PdfObjectInteger );
if !_aecdf {return nil ,_gg .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_gegf :=int64 (*_afdfecd );_dbdba .BitsPerComponent =&_gegf ;};_dbdba .Intent =_beacb .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_dbdba .ImageMask =_beacb .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_dbdba .Mask =_beacb .Get ("\u004d\u0061\u0073\u006b");_dbdba .Decode =_beacb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_dbdba .Interpolate =_beacb .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_dbdba .Alternatives =_beacb .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_dbdba .SMask =_beacb .Get ("\u0053\u004d\u0061s\u006b");_dbdba .SMaskInData =_beacb .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_dbdba .Matte =_beacb .Get ("\u004d\u0061\u0074t\u0065");_dbdba .Name =_beacb .Get ("\u004e\u0061\u006d\u0065");_dbdba .StructParent =_beacb .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_dbdba .ID =_beacb .Get ("\u0049\u0044");
_dbdba .OPI =_beacb .Get ("\u004f\u0050\u0049");_dbdba .Metadata =_beacb .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_dbdba .OC =_beacb .Get ("\u004f\u0043");_dbdba .Stream =stream .Stream ;return _dbdba ,nil ;};

// ToGoTime returns the date in time.Time format.
func (_ccegea PdfDate )ToGoTime ()_g .Time {_affbab :=int (_ccegea ._gacgf *60*60+_ccegea ._bade *60);switch _ccegea ._bdbbf {case '-':_affbab =-_affbab ;case 'Z':_affbab =0;};_ddae :=_e .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_ccegea ._bdbbf ,_ccegea ._gacgf ,_ccegea ._bade );
_aebfc :=_g .FixedZone (_ddae ,_affbab );return _g .Date (int (_ccegea ._bbdacc ),_g .Month (_ccegea ._eefcf ),int (_ccegea ._cggf ),int (_ccegea ._cebfc ),int (_ccegea ._agcacg ),int (_ccegea ._bfecg ),0,_aebfc );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_efcgb *PdfShadingType1 )ToPdfObject ()_gea .PdfObject {_efcgb .PdfShading .ToPdfObject ();_ddbga ,_dfbeb :=_efcgb .getShadingDict ();if _dfbeb !=nil {_fd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _efcgb .Domain !=nil {_ddbga .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_efcgb .Domain );};if _efcgb .Matrix !=nil {_ddbga .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_efcgb .Matrix );};if _efcgb .Function !=nil {if len (_efcgb .Function )==1{_ddbga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_efcgb .Function [0].ToPdfObject ());
}else {_dedef :=_gea .MakeArray ();for _ ,_ddcgg :=range _efcgb .Function {_dedef .Append (_ddcgg .ToPdfObject ());};_ddbga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dedef );};};return _efcgb ._adae ;};

// GenerateHashMaps generates DSS hashmaps for Certificates, OCSPs and CRLs to make sure they are unique.
func (_ffea *DSS )GenerateHashMaps ()error {_ffeag ,_bebedb :=_ffea .generateHashMap (_ffea .Certs );if _bebedb !=nil {return _bebedb ;};_afdcf ,_bebedb :=_ffea .generateHashMap (_ffea .OCSPs );if _bebedb !=nil {return _bebedb ;};_bbfbb ,_bebedb :=_ffea .generateHashMap (_ffea .CRLs );
if _bebedb !=nil {return _bebedb ;};_ffea ._abfg =_ffeag ;_ffea ._gfbc =_afdcf ;_ffea ._bbbfa =_bbfbb ;return nil ;};func _eacg (_gbbg *_gea .PdfIndirectObject ,_eefdf *_gea .PdfObjectDictionary )(*DSS ,error ){if _gbbg ==nil {_gbbg =_gea .MakeIndirectObject (nil );
};_gbbg .PdfObject =_gea .MakeDict ();_ccgb :=map[string ]*VRI {};if _fgcg ,_ecdbf :=_gea .GetDict (_eefdf .Get ("\u0056\u0052\u0049"));_ecdbf {for _ ,_eceeg :=range _fgcg .Keys (){if _gcbd ,_aaaae :=_gea .GetDict (_fgcg .Get (_eceeg ));_aaaae {_ccgb [_aa .ToUpper (_eceeg .String ())]=_gafc (_gcbd );
};};};return &DSS {Certs :_abafe (_eefdf .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_abafe (_eefdf .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_abafe (_eefdf .Get ("\u0043\u0052\u004c\u0073")),VRI :_ccgb ,_ebgfb :_gbbg },nil ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_dddeb *PdfReader )PageFromIndirectObject (ind *_gea .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_dddeb .PageList )!=len (_dddeb ._daega ){return nil ,0,_gg .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _eagcd ,_febbf :=range _dddeb ._daega {if _febbf ==ind {return _dddeb .PageList [_eagcd ],_eagcd +1,nil ;};};return nil ,0,_gg .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func _gaaad (_bcac *_gea .PdfObjectStream )(*PdfFunctionType0 ,error ){_ggaad :=&PdfFunctionType0 {};
_ggaad ._addge =_bcac ;_bcdg :=_bcac .PdfObjectDictionary ;_egbd ,_fbdcc :=_gea .TraceToDirectObject (_bcdg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gea .PdfObjectArray );if !_fbdcc {_fd .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_gg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _egbd .Len ()< 0||_egbd .Len ()%2!=0{_fd .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_gg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_ggaad .NumInputs =_egbd .Len ()/2;_dgea ,_gbgf :=_egbd .ToFloat64Array ();if _gbgf !=nil {return nil ,_gbgf ;};_ggaad .Domain =_dgea ;
_egbd ,_fbdcc =_gea .TraceToDirectObject (_bcdg .Get ("\u0052\u0061\u006eg\u0065")).(*_gea .PdfObjectArray );if !_fbdcc {_fd .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_gg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _egbd .Len ()< 0||_egbd .Len ()%2!=0{return nil ,_gg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_ggaad .NumOutputs =_egbd .Len ()/2;_bcegc ,_gbgf :=_egbd .ToFloat64Array ();if _gbgf !=nil {return nil ,_gbgf ;
};_ggaad .Range =_bcegc ;_egbd ,_fbdcc =_gea .TraceToDirectObject (_bcdg .Get ("\u0053\u0069\u007a\u0065")).(*_gea .PdfObjectArray );if !_fbdcc {_fd .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_gg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bgde ,_gbgf :=_egbd .ToIntegerArray ();
if _gbgf !=nil {return nil ,_gbgf ;};if len (_bgde )!=_ggaad .NumInputs {_fd .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggaad .Size =_bgde ;_gffef ,_fbdcc :=_gea .TraceToDirectObject (_bcdg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_gea .PdfObjectInteger );
if !_fbdcc {_fd .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_gg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_gffef !=1&&*_gffef !=2&&*_gffef !=4&&*_gffef !=8&&*_gffef !=12&&*_gffef !=16&&*_gffef !=24&&*_gffef !=32{_fd .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_gffef );
return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggaad .BitsPerSample =int (*_gffef );_ggaad .Order =1;_edcdf ,_fbdcc :=_gea .TraceToDirectObject (_bcdg .Get ("\u004f\u0072\u0064e\u0072")).(*_gea .PdfObjectInteger );
if _fbdcc {if *_edcdf !=1&&*_edcdf !=3{_fd .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_edcdf );return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggaad .Order =int (*_edcdf );
};_egbd ,_fbdcc =_gea .TraceToDirectObject (_bcdg .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_gea .PdfObjectArray );if _fbdcc {_fecgg ,_gfdd :=_egbd .ToFloat64Array ();if _gfdd !=nil {return nil ,_gfdd ;};_ggaad .Encode =_fecgg ;};_egbd ,_fbdcc =_gea .TraceToDirectObject (_bcdg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_gea .PdfObjectArray );
if _fbdcc {_cega ,_agaae :=_egbd .ToFloat64Array ();if _agaae !=nil {return nil ,_agaae ;};_ggaad .Decode =_cega ;};_gbeag ,_gbgf :=_gea .DecodeStream (_bcac );if _gbgf !=nil {return nil ,_gbgf ;};_ggaad ._feeda =_gbeag ;return _ggaad ,nil ;};func (_baaaf *PdfAcroForm )filteredFields (_gggfdb FieldFilterFunc ,_eedac bool )[]*PdfField {if _baaaf ==nil {return nil ;
};return _gdaeb (_baaaf .Fields ,_gggfdb ,_eedac );};func (_bbfd *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_gfffb *CompliancePdfReader )error ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_dcfbe *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_ggdcd *PdfSignature ,_abccb Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_eefaa *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_fdaab *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_gfadb *PdfSignature ,_efced Hasher )error ;};

// SetImage updates XObject Image with new image data.
func (_efbge *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_efbge .Filter .UpdateParams (img .GetParamsDict ());_gegb ,_eegfe :=_efbge .Filter .EncodeBytes (img .Data );if _eegfe !=nil {return _eegfe ;};_efbge .Stream =_gegb ;_gagaf :=img .Width ;
_efbge .Width =&_gagaf ;_gfedg :=img .Height ;_efbge .Height =&_gfedg ;_fagb :=img .BitsPerComponent ;_efbge .BitsPerComponent =&_fagb ;if cs ==nil {if img .ColorComponents ==1{_efbge .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_efbge .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_efbge .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _gg .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_efbge .ColorSpace =cs ;};return nil ;
};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_bfdfba *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _bfdfba ._cbadf ==nil {_bfdfba ._cbadf =_ac .NewPSExecutor (_bfdfba .Program );};var _bbada []_ac .PSObject ;for _ ,_egcbf :=range xVec {_bbada =append (_bbada ,_ac .MakeReal (_egcbf ));
};_ggedb ,_beeba :=_bfdfba ._cbadf .Execute (_bbada );if _beeba !=nil {return nil ,_beeba ;};_eefeb ,_beeba :=_ac .PSObjectArrayToFloat64Array (_ggedb );if _beeba !=nil {return nil ,_beeba ;};return _eefeb ,nil ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_bbdfd *PdfPageResources )GetXObjectImageByName (keyName _gea .PdfObjectName )(*XObjectImage ,error ){_fgcce ,_dbaff :=_bbdfd .GetXObjectByName (keyName );if _fgcce ==nil {return nil ,nil ;};if _dbaff !=XObjectTypeImage {return nil ,_gg .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_egecc ,_edae :=NewXObjectImageFromStream (_fgcce );if _edae !=nil {return nil ,_edae ;};return _egecc ,nil ;};func _ffaec (_beddb *_gea .PdfObjectDictionary )(*PdfShadingType1 ,error ){_abcbe :=PdfShadingType1 {};if _faffc :=_beddb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");
_faffc !=nil {_faffc =_gea .TraceToDirectObject (_faffc );_dbdgc ,_dgbbf :=_faffc .(*_gea .PdfObjectArray );if !_dgbbf {_fd .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_faffc );
return nil ,_gg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_abcbe .Domain =_dbdgc ;};if _gagff :=_beddb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_gagff !=nil {_gagff =_gea .TraceToDirectObject (_gagff );
_fedbd ,_dcace :=_gagff .(*_gea .PdfObjectArray );if !_dcace {_fd .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gagff );return nil ,_gg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_abcbe .Matrix =_fedbd ;};_cbgc :=_beddb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cbgc ==nil {_fd .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_abcbe .Function =[]PdfFunction {};if _aafaa ,_afgd :=_cbgc .(*_gea .PdfObjectArray );_afgd {for _ ,_ddedd :=range _aafaa .Elements (){_gdacc ,_agfge :=_adggc (_ddedd );if _agfge !=nil {_fd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_agfge );
return nil ,_agfge ;};_abcbe .Function =append (_abcbe .Function ,_gdacc );};}else {_caega ,_cegfd :=_adggc (_cbgc );if _cegfd !=nil {_fd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cegfd );
return nil ,_cegfd ;};_abcbe .Function =append (_abcbe .Function ,_caega );};return &_abcbe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bbgb *PdfAnnotationStrikeOut )ToPdfObject ()_gea .PdfObject {_bbgb .PdfAnnotation .ToPdfObject ();_feg :=_bbgb ._bbf ;_bagca :=_feg .PdfObject .(*_gea .PdfObjectDictionary );_bbgb .PdfAnnotationMarkup .appendToPdfDictionary (_bagca );_bagca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_bagca .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bbgb .QuadPoints );return _feg ;};func (_agbc *PdfWriter )writeOutputIntents ()error {if len (_agbc ._gffgcb )==0{return nil ;};_faggc :=make ([]_gea .PdfObject ,len (_agbc ._gffgcb ));
for _degbb ,_bacgf :=range _agbc ._gffgcb {_geege :=_bacgf .ToPdfObject ();_faggc [_degbb ]=_gea .MakeIndirectObject (_geege );};_ddeddc :=_gea .MakeIndirectObject (_gea .MakeArray (_faggc ...));_agbc ._ggbgf .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_ddeddc );
if _dbbgb :=_agbc .addObjects (_ddeddc );_dbbgb !=nil {return _dbbgb ;};return nil ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_bcff *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_ceb .SimpleEncoder ,error ){_aaaf ,_ddeea :=_beefe (basefont );if _ddeea !=nil {return nil ,nil ,_ddeea ;};_cgba ,_gdcba :=_aaaf .Encoder ().(_ceb .SimpleEncoder );
if !_gdcba {return nil ,nil ,_e .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_aaaf .Encoder ());
};_gbde :=make (map[rune ]_ceb .GlyphName );for _befbf :=range alphabet {if _ ,_ccaede :=_cgba .RuneToCharcode (_befbf );!_ccaede {_ ,_aede :=_aaaf ._eaeaef .Read (_befbf );if !_aede {_fd .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_befbf ,_befbf );
continue ;};_cebf ,_aede :=_ceb .RuneToGlyph (_befbf );if !_aede {_fd .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_befbf ,_befbf );continue ;};if len (_gbde )>=255{return nil ,nil ,_gg .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_gbde [_befbf ]=_cebf ;};};var (_fdgg []_ceb .CharCode ;_bbdf []_ceb .CharCode ;);for _cfea :=_ceb .CharCode (1);_cfea <=0xff;_cfea ++{_fedb ,_dfecf :=_cgba .CharcodeToRune (_cfea );if !_dfecf {_fdgg =append (_fdgg ,_cfea );continue ;};if _ ,_dfecf =alphabet [_fedb ];
!_dfecf {_bbdf =append (_bbdf ,_cfea );};};_cgfeg :=append (_fdgg ,_bbdf ...);if len (_cgfeg )< len (_gbde ){return nil ,nil ,_e .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_gbde ),len (_cgfeg ));
};_fcagg :=make ([]rune ,0,len (_gbde ));for _edgbd :=range _gbde {_fcagg =append (_fcagg ,_edgbd );};_da .Slice (_fcagg ,func (_gcdb ,_ggeadg int )bool {return _fcagg [_gcdb ]< _fcagg [_ggeadg ]});_dcga :=make (map[_ceb .CharCode ]_ceb .GlyphName ,len (_fcagg ));
for _ ,_cggd :=range _fcagg {_ggdb :=_cgfeg [0];_cgfeg =_cgfeg [1:];_dcga [_ggdb ]=_gbde [_cggd ];};_cgba =_ceb .ApplyDifferences (_cgba ,_dcga );_aaaf .SetEncoder (_cgba );return &PdfFont {_bgfbc :&_aaaf },_cgba ,nil ;};

// ValidateSignatures validates digital signatures in the document.
func (_ffceed *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _ffceed .AcroForm ==nil {return nil ,nil ;};if _ffceed .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_agcgf *PdfSignature ;
_ceaad *PdfField ;_gede SignatureHandler ;};var _aagcg []*sigFieldPair ;for _ ,_fggd :=range _ffceed .AcroForm .AllFields (){if _fggd .V ==nil {continue ;};if _efee ,_ebgdd :=_gea .GetDict (_fggd .V );_ebgdd {if _feecfg ,_begfea :=_gea .GetNameVal (_efee .Get ("\u0054\u0079\u0070\u0065"));
_begfea &&(_feecfg =="\u0053\u0069\u0067"||_feecfg =="\u0044\u006f\u0063T\u0069\u006d\u0065\u0053\u0074\u0061\u006d\u0070"){_eecbb ,_afccec :=_gea .GetIndirect (_fggd .V );if !_afccec {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_cbfgb ,_bggb :=_ffceed .newPdfSignatureFromIndirect (_eecbb );if _bggb !=nil {return nil ,_bggb ;};var _efbbe SignatureHandler ;for _ ,_eccdc :=range handlers {if _eccdc .IsApplicable (_cbfgb ){_efbbe =_eccdc ;break ;};};_aagcg =append (_aagcg ,&sigFieldPair {_agcgf :_cbfgb ,_ceaad :_fggd ,_gede :_efbbe });
};};};var _egcac []SignatureValidationResult ;for _ ,_ffac :=range _aagcg {_cdfad :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_ffac ._ceaad }};if _ffac ._gede ==nil {_cdfad .Errors =append (_cdfad .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_egcac =append (_egcac ,_cdfad );continue ;};_gggad ,_ebgbb :=_ffac ._gede .NewDigest (_ffac ._agcgf );if _ebgbb !=nil {_cdfad .Errors =append (_cdfad .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_ebgbb .Error ());_egcac =append (_egcac ,_cdfad );
continue ;};_abdfef :=_ffac ._agcgf .ByteRange ;if _abdfef ==nil {_cdfad .Errors =append (_cdfad .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_egcac =append (_egcac ,_cdfad );continue ;};
for _dfeadf :=0;_dfeadf < _abdfef .Len ();_dfeadf =_dfeadf +2{_cfaba ,_ :=_gea .GetNumberAsInt64 (_abdfef .Get (_dfeadf ));_dcfbc ,_ :=_gea .GetIntVal (_abdfef .Get (_dfeadf +1));if _ ,_cege :=_ffceed ._efged .Seek (_cfaba ,_cef .SeekStart );_cege !=nil {return nil ,_cege ;
};_ccgfe :=make ([]byte ,_dcfbc );if _ ,_eggdc :=_ffceed ._efged .Read (_ccgfe );_eggdc !=nil {return nil ,_eggdc ;};_gggad .Write (_ccgfe );};var _dgaab SignatureValidationResult ;if _fcgf ,_gadcf :=_ffac ._gede .(SignatureHandlerDocMDP );_gadcf {_dgaab ,_ebgbb =_fcgf .ValidateWithOpts (_ffac ._agcgf ,_gggad ,SignatureHandlerDocMDPParams {Parser :_ffceed ._edcdb });
}else {_dgaab ,_ebgbb =_ffac ._gede .Validate (_ffac ._agcgf ,_gggad );};if _ebgbb !=nil {_fd .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_ebgbb ,_ffac ._gede );_dgaab .Errors =append (_dgaab .Errors ,_ebgbb .Error ());
};_dgaab .Name =_ffac ._agcgf .Name .Decoded ();_dgaab .Reason =_ffac ._agcgf .Reason .Decoded ();if _ffac ._agcgf .M !=nil {_gecea ,_baedd :=NewPdfDate (_ffac ._agcgf .M .String ());if _baedd !=nil {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_baedd );
_dgaab .Errors =append (_dgaab .Errors ,_baedd .Error ());continue ;};_dgaab .Date =_gecea ;};_dgaab .ContactInfo =_ffac ._agcgf .ContactInfo .Decoded ();_dgaab .Location =_ffac ._agcgf .Location .Decoded ();_dgaab .Fields =_cdfad .Fields ;_egcac =append (_egcac ,_dgaab );
};return _egcac ,nil ;};func (_dece *PdfReader )newPdfAnnotationTrapNetFromDict (_dcce *_gea .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_gbbd :=PdfAnnotationTrapNet {};return &_gbbd ,nil ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_ddd :=NewPdfAnnotation ();_dbg :=&PdfAnnotationRichMedia {};_dbg .PdfAnnotation =_ddd ;_ddd .SetContext (_dbg );return _dbg ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_fcdf []_gea .PdfObject )([]_gea .PdfObject ,error );};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_bcbbd :=&PdfOutline {_dcbac :_gea .MakeIndirectObject (_gea .MakeDict ())};_bcbbd ._bdagf =_bcbbd ;return _bcbbd ;};func (_bdbd *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};

// GetVersion gets the document version.
func (_edacd *PdfWriter )GetVersion ()_gea .Version {return _edacd ._fedce };

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_fadfc *Outline )Insert (index uint ,item *OutlineItem ){_gefde :=uint (len (_fadfc .Entries ));if index > _gefde {index =_gefde ;};_fadfc .Entries =append (_fadfc .Entries [:index ],append ([]*OutlineItem {item },_fadfc .Entries [index :]...)...);
};

// ToPdfObject implements interface PdfModel.
func (_ffdc *PdfAnnotationFreeText )ToPdfObject ()_gea .PdfObject {_ffdc .PdfAnnotation .ToPdfObject ();_addaa :=_ffdc ._bbf ;_cfag :=_addaa .PdfObject .(*_gea .PdfObjectDictionary );_ffdc .PdfAnnotationMarkup .appendToPdfDictionary (_cfag );_cfag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_cfag .SetIfNotNil ("\u0044\u0041",_ffdc .DA );_cfag .SetIfNotNil ("\u0051",_ffdc .Q );_cfag .SetIfNotNil ("\u0052\u0043",_ffdc .RC );_cfag .SetIfNotNil ("\u0044\u0053",_ffdc .DS );_cfag .SetIfNotNil ("\u0043\u004c",_ffdc .CL );_cfag .SetIfNotNil ("\u0049\u0054",_ffdc .IT );
_cfag .SetIfNotNil ("\u0042\u0045",_ffdc .BE );_cfag .SetIfNotNil ("\u0052\u0044",_ffdc .RD );_cfag .SetIfNotNil ("\u0042\u0053",_ffdc .BS );_cfag .SetIfNotNil ("\u004c\u0045",_ffdc .LE );return _addaa ;};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;
PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1. Return a value the /Widths array (charWidths) if there is one.
//  2. If the font has the same name as a standard 14 font then return width=250.
//  3. Otherwise return no match and let the caller substitute a default.
func (_ggaf pdfFontSimple )GetCharMetrics (code _ceb .CharCode )(_ad .CharMetrics ,bool ){if _ccfbe ,_ebdg :=_ggaf ._bgdfg [code ];_ebdg {return _ad .CharMetrics {Wx :_ccfbe },true ;};if _ad .IsStdFont (_ad .StdFontName (_ggaf ._cacc )){return _ad .CharMetrics {Wx :250},true ;
};return _ad .CharMetrics {},false ;};func _gffcd (_bgdga _gea .PdfObject )(*PdfFunctionType2 ,error ){_ggfb :=&PdfFunctionType2 {};var _fcdbe *_gea .PdfObjectDictionary ;if _cfce ,_bfcef :=_bgdga .(*_gea .PdfIndirectObject );_bfcef {_gbfd ,_gdcff :=_cfce .PdfObject .(*_gea .PdfObjectDictionary );
if !_gdcff {return nil ,_gg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ggfb ._feegg =_cfce ;_fcdbe =_gbfd ;}else if _efebc ,_gbdg :=_bgdga .(*_gea .PdfObjectDictionary );_gbdg {_fcdbe =_efebc ;}else {return nil ,_gg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_fd .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_fcdbe .String ());_cgbb ,_agdd :=_gea .TraceToDirectObject (_fcdbe .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gea .PdfObjectArray );if !_agdd {_fd .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_gg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _cgbb .Len ()< 0||_cgbb .Len ()%2!=0{_fd .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");
return nil ,_gg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_aegbe ,_ebfe :=_cgbb .ToFloat64Array ();if _ebfe !=nil {return nil ,_ebfe ;};_ggfb .Domain =_aegbe ;_cgbb ,_agdd =_gea .TraceToDirectObject (_fcdbe .Get ("\u0052\u0061\u006eg\u0065")).(*_gea .PdfObjectArray );
if _agdd {if _cgbb .Len ()< 0||_cgbb .Len ()%2!=0{return nil ,_gg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_aaeb ,_gcagd :=_cgbb .ToFloat64Array ();if _gcagd !=nil {return nil ,_gcagd ;};_ggfb .Range =_aaeb ;
};_cgbb ,_agdd =_gea .TraceToDirectObject (_fcdbe .Get ("\u0043\u0030")).(*_gea .PdfObjectArray );if _agdd {_fggba ,_eaddb :=_cgbb .ToFloat64Array ();if _eaddb !=nil {return nil ,_eaddb ;};_ggfb .C0 =_fggba ;};_cgbb ,_agdd =_gea .TraceToDirectObject (_fcdbe .Get ("\u0043\u0031")).(*_gea .PdfObjectArray );
if _agdd {_gegag ,_aaceb :=_cgbb .ToFloat64Array ();if _aaceb !=nil {return nil ,_aaceb ;};_ggfb .C1 =_gegag ;};if len (_ggfb .C0 )!=len (_ggfb .C1 ){_fd .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");
return nil ,_gea .ErrRangeError ;};N ,_ebfe :=_gea .GetNumberAsFloat (_gea .TraceToDirectObject (_fcdbe .Get ("\u004e")));if _ebfe !=nil {_fd .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_fcdbe .String ());
return nil ,_ebfe ;};_ggfb .N =N ;return _ggfb ,nil ;};

// IsColored specifies if the pattern is colored.
func (_bgccd *PdfTilingPattern )IsColored ()bool {if _bgccd .PaintType !=nil &&*_bgccd .PaintType ==1{return true ;};return false ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_eefcd *PdfPage )GetAllContentStreams ()(string ,error ){_ffbef ,_gcde :=_eefcd .GetContentStreams ();if _gcde !=nil {return "",_gcde ;};return _aa .Join (_ffbef ,"\u0020"),nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_deffb *PdfFunctionType2 )ToPdfObject ()_gea .PdfObject {_adbee :=_gea .MakeDict ();_adbee .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gea .MakeInteger (2));_efde :=&_gea .PdfObjectArray {};for _ ,_fddcf :=range _deffb .Domain {_efde .Append (_gea .MakeFloat (_fddcf ));
};_adbee .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_efde );if _deffb .Range !=nil {_acba :=&_gea .PdfObjectArray {};for _ ,_eafcg :=range _deffb .Range {_acba .Append (_gea .MakeFloat (_eafcg ));};_adbee .Set ("\u0052\u0061\u006eg\u0065",_acba );};if _deffb .C0 !=nil {_degfg :=&_gea .PdfObjectArray {};
for _ ,_fgeda :=range _deffb .C0 {_degfg .Append (_gea .MakeFloat (_fgeda ));};_adbee .Set ("\u0043\u0030",_degfg );};if _deffb .C1 !=nil {_cegb :=&_gea .PdfObjectArray {};for _ ,_bdeb :=range _deffb .C1 {_cegb .Append (_gea .MakeFloat (_bdeb ));};_adbee .Set ("\u0043\u0031",_cegb );
};_adbee .Set ("\u004e",_gea .MakeFloat (_deffb .N ));if _deffb ._feegg !=nil {_deffb ._feegg .PdfObject =_adbee ;return _deffb ._feegg ;};return _adbee ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_acefb *PdfField )GetContainingPdfObject ()_gea .PdfObject {return _acefb ._bcga };

// ToPdfObject implements interface PdfModel.
func (_geec *PdfBorderStyle )ToPdfObject ()_gea .PdfObject {_adee :=_gea .MakeDict ();if _geec ._dcf !=nil {if _edfe ,_gcbcc :=_geec ._dcf .(*_gea .PdfIndirectObject );_gcbcc {_edfe .PdfObject =_adee ;};};_adee .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _geec .W !=nil {_adee .Set ("\u0057",_gea .MakeFloat (*_geec .W ));};if _geec .S !=nil {_adee .Set ("\u0053",_gea .MakeName (_geec .S .GetPdfName ()));};if _geec .D !=nil {_adee .Set ("\u0044",_gea .MakeArrayFromIntegers (*_geec .D ));};if _geec ._dcf !=nil {return _geec ._dcf ;
};return _adee ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_dgaad *Image )GetSamples ()[]uint32 {_ffeb :=_ed .ResampleBytes (_dgaad .Data ,int (_dgaad .BitsPerComponent ));if _dgaad .BitsPerComponent < 8{_ffeb =_dgaad .samplesTrimPadding (_ffeb );};_gdcgc :=int (_dgaad .Width )*int (_dgaad .Height )*_dgaad .ColorComponents ;
if len (_ffeb )< _gdcgc {_fd .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_ffeb ),_gdcgc );
return _ffeb ;}else if len (_ffeb )> _gdcgc {_fd .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_ffeb ),_gdcgc );
_ffeb =_ffeb [:_gdcgc ];};return _ffeb ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _gea .PdfObject ;BS _gea .PdfObject ;};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_ecfbg :_gea .MakeDict ()};
};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_ddbcc byte )byte ;

// ToPdfObject implements interface PdfModel.
func (_abf *PdfActionTrans )ToPdfObject ()_gea .PdfObject {_abf .PdfAction .ToPdfObject ();_gfd :=_abf ._af ;_bfef :=_gfd .PdfObject .(*_gea .PdfObjectDictionary );_bfef .SetIfNotNil ("\u0053",_gea .MakeName (string (ActionTypeTrans )));_bfef .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_abf .Trans );
return _gfd ;};func (_gabac *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _gabac ._baffg ==nil &&_gabac .DescendantFont !=nil {return _gabac .DescendantFont .FontDescriptor ();};return _gabac ._baffg ;};

// ToPdfObject implements interface PdfModel.
func (_gfg *PdfActionLaunch )ToPdfObject ()_gea .PdfObject {_gfg .PdfAction .ToPdfObject ();_cdc :=_gfg ._af ;_eee :=_cdc .PdfObject .(*_gea .PdfObjectDictionary );_eee .SetIfNotNil ("\u0053",_gea .MakeName (string (ActionTypeLaunch )));if _gfg .F !=nil {_eee .Set ("\u0046",_gfg .F .ToPdfObject ());
};_eee .SetIfNotNil ("\u0057\u0069\u006e",_gfg .Win );_eee .SetIfNotNil ("\u004d\u0061\u0063",_gfg .Mac );_eee .SetIfNotNil ("\u0055\u006e\u0069\u0078",_gfg .Unix );_eee .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_gfg .NewWindow );return _cdc ;
};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_gea .PdfParser ;DiffPolicy _gbf .DiffPolicy ;};func _ffcgc (_fcec *_gea .PdfObjectDictionary )(*PdfShadingType3 ,error ){_cagc :=PdfShadingType3 {};_debfc :=_fcec .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");
if _debfc ==nil {_fd .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;
};_efcgae ,_feebb :=_debfc .(*_gea .PdfObjectArray );if !_feebb {_fd .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_debfc );return nil ,_gea .ErrTypeError ;
};if _efcgae .Len ()!=6{_fd .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_efcgae .Len ());return nil ,ErrInvalidAttribute ;};_cagc .Coords =_efcgae ;
if _edabe :=_fcec .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_edabe !=nil {_edabe =_gea .TraceToDirectObject (_edabe );_ffagb ,_bbdaeg :=_edabe .(*_gea .PdfObjectArray );if !_bbdaeg {_fd .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_edabe );
return nil ,_gea .ErrTypeError ;};_cagc .Domain =_ffagb ;};_debfc =_fcec .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _debfc ==nil {_fd .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cagc .Function =[]PdfFunction {};if _bfgbb ,_ceabe :=_debfc .(*_gea .PdfObjectArray );_ceabe {for _ ,_ecefd :=range _bfgbb .Elements (){_ebccf ,_dddebe :=_adggc (_ecefd );if _dddebe !=nil {_fd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dddebe );
return nil ,_dddebe ;};_cagc .Function =append (_cagc .Function ,_ebccf );};}else {_dcfc ,_cbdgb :=_adggc (_debfc );if _cbdgb !=nil {_fd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cbdgb );
return nil ,_cbdgb ;};_cagc .Function =append (_cagc .Function ,_dcfc );};if _aagac :=_fcec .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_aagac !=nil {_aagac =_gea .TraceToDirectObject (_aagac );_bgdgd ,_aaaaa :=_aagac .(*_gea .PdfObjectArray );if !_aaaaa {_fd .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aagac );
return nil ,_gea .ErrTypeError ;};if _bgdgd .Len ()!=2{_fd .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bgdgd .Len ());return nil ,ErrInvalidAttribute ;
};_cagc .Extend =_bgdgd ;};return &_cagc ,nil ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};func (_bdbgf *PdfWriter )hasObject (_gefcc _gea .PdfObject )bool {_ ,_afeff :=_bdbgf ._edfdb [_gefcc ];return _afeff ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _gea .PdfObject ;IC _gea .PdfObject ;BE _gea .PdfObject ;RD _gea .PdfObject ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_aafc *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _aafc .RunesToCharcodeBytes ([]rune (str ));};func (_geb *PdfAnnotationMarkup )appendToPdfDictionary (_cced *_gea .PdfObjectDictionary ){_cced .SetIfNotNil ("\u0054",_geb .T );
if _geb .Popup !=nil {_cced .Set ("\u0050\u006f\u0070u\u0070",_geb .Popup .ToPdfObject ());};_cced .SetIfNotNil ("\u0043\u0041",_geb .CA );_cced .SetIfNotNil ("\u0052\u0043",_geb .RC );_cced .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_geb .CreationDate );
_cced .SetIfNotNil ("\u0049\u0052\u0054",_geb .IRT );_cced .SetIfNotNil ("\u0053\u0075\u0062\u006a",_geb .Subj );_cced .SetIfNotNil ("\u0052\u0054",_geb .RT );_cced .SetIfNotNil ("\u0049\u0054",_geb .IT );_cced .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_geb .ExData );
};func _ceaeg ()*modelManager {_adbc :=modelManager {};_adbc ._ecgee =map[PdfModel ]_gea .PdfObject {};_adbc ._efcba =map[_gea .PdfObject ]PdfModel {};return &_adbc ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_eddbc *PdfAppender )UpdateObject (obj _gea .PdfObject ){_eddbc .replaceObject (obj ,obj );if _ ,_gagg :=_eddbc ._edbc [obj ];!_gagg {_eddbc ._eaae =append (_eddbc ._eaae ,obj );_eddbc ._edbc [obj ]=struct{}{};};};var _adfc =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_aefdbd .Lock ();defer _aefdbd .Unlock ();_abaea =creator };func _cgggf (_effafb *PdfField ,_fdbga _gea .PdfObject ){for _ ,_bfbagb :=range _effafb .Annotations {_bfbagb .AS =_fdbga ;_bfbagb .ToPdfObject ();};};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_gea .PdfObjectString ;Q *_gea .PdfObjectInteger ;DS *_gea .PdfObjectString ;RV _gea .PdfObject ;MaxLen *_gea .PdfObjectInteger ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_gea .PdfObjectInteger ;TilingType *_gea .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_gea .PdfObjectFloat ;YStep *_gea .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_gea .PdfObjectArray ;};


// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_beba *PdfPageResources )HasColorspaceByName (keyName _gea .PdfObjectName )bool {_eggd ,_bfecb :=_beba .GetColorspaces ();if _bfecb !=nil {_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bfecb );
return false ;};if _eggd ==nil {return false ;};_ ,_cgfdae :=_eggd .Colorspaces [string (keyName )];return _cgfdae ;};

// String returns a string representation of the field.
func (_ecba *PdfField )String ()string {if _badf ,_cgca :=_ecba .ToPdfObject ().(*_gea .PdfIndirectObject );_cgca {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ecba ._gafa ,_badf .PdfObject .String ());};return "";};func (_aaec *PdfReader )newPdfAnnotationStampFromDict (_faeg *_gea .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_bbfb :=PdfAnnotationStamp {};
_gdc ,_degg :=_aaec .newPdfAnnotationMarkupFromDict (_faeg );if _degg !=nil {return nil ,_degg ;};_bbfb .PdfAnnotationMarkup =_gdc ;_bbfb .Name =_faeg .Get ("\u004e\u0061\u006d\u0065");return &_bbfb ,nil ;};func (_ecdb *PdfReader )newPdfAnnotationScreenFromDict (_dffae *_gea .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_cbe :=PdfAnnotationScreen {};
_cbe .T =_dffae .Get ("\u0054");_cbe .MK =_dffae .Get ("\u004d\u004b");_cbe .A =_dffae .Get ("\u0041");_cbe .AA =_dffae .Get ("\u0041\u0041");return &_cbe ,nil ;};

// AddCRLs adds CRLs to DSS.
func (_ecca *DSS )AddCRLs (crls [][]byte )([]*_gea .PdfObjectStream ,error ){return _ecca .add (&_ecca .CRLs ,_ecca ._bbbfa ,crls );};

// SetContentStream sets the pattern cell's content stream.
func (_bdgag *PdfTilingPattern )SetContentStream (content []byte ,encoder _gea .StreamEncoder )error {_eefee ,_fgcf :=_bdgag ._bgcec .(*_gea .PdfObjectStream );if !_fgcf {_fd .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdgag ._bgcec );
return _gea .ErrTypeError ;};if encoder ==nil {encoder =_gea .NewRawEncoder ();};_egbdfb :=_eefee .PdfObjectDictionary ;_fgdaa :=encoder .MakeStreamDict ();_egbdfb .Merge (_fgdaa );_bdcad ,_fefde :=encoder .EncodeBytes (content );if _fefde !=nil {return _fefde ;
};_egbdfb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gea .MakeInteger (int64 (len (_bdcad ))));_eefee .Stream =_bdcad ;return nil ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_fedgc *PdfOutlineItem )GetContainingPdfObject ()_gea .PdfObject {return _fedgc ._cgcf };func (_gbeca *PdfReader )loadAnnotations (_fabcc _gea .PdfObject )([]*PdfAnnotation ,error ){_gdecf ,_ggaaa :=_gea .GetArray (_fabcc );if !_ggaaa {return nil ,_e .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _caagf []*PdfAnnotation ;for _ ,_ecgdc :=range _gdecf .Elements (){_ecgdc =_gea .ResolveReference (_ecgdc );if _ ,_adebgg :=_ecgdc .(*_gea .PdfObjectNull );_adebgg {continue ;};_gadbd ,_eefc :=_ecgdc .(*_gea .PdfObjectDictionary );_bffg ,_cgceb :=_ecgdc .(*_gea .PdfIndirectObject );
if _eefc {_bffg =&_gea .PdfIndirectObject {};_bffg .PdfObject =_gadbd ;}else {if !_cgceb {return nil ,_e .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_dgedb ,_bggcg :=_gbeca .newPdfAnnotationFromIndirectObject (_bffg );if _bggcg !=nil {return nil ,_bggcg ;};switch _ebbb :=_dgedb .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_dcbab :=range _gbeca .AcroForm .AllFields (){if _dcbab ._bcga ==_ebbb .Parent {_ebbb ._bbba =_dcbab ;
break ;};};};if _dgedb !=nil {_caagf =append (_caagf ,_dgedb );};};return _caagf ,nil ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _gea .PdfObject ;ColorSpace _gea .PdfObject ;Pattern _gea .PdfObject ;Shading _gea .PdfObject ;XObject _gea .PdfObject ;Font _gea .PdfObject ;ProcSet _gea .PdfObject ;Properties _gea .PdfObject ;_daaff *_gea .PdfObjectDictionary ;
_bbgeg *PdfPageResourcesColorspaces ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_bgecd *LTV )Enable (sig *PdfSignature ,extraCerts []*_cg .Certificate )error {if _accbg :=_bgecd .validateSig (sig );_accbg !=nil {return _accbg ;};_bbfce ,_efgd :=_bgecd .generateVRIKey (sig );if _efgd !=nil {return _efgd ;};if _ ,_becbe :=_bgecd ._dggb .VRI [_bbfce ];
_becbe &&_bgecd .SkipExisting {return nil ;};_adgcc ,_efgd :=sig .GetCerts ();if _efgd !=nil {return _efgd ;};return _bgecd .enable (_adgcc ,extraCerts ,_bbfce );};func (_ada *PdfReader )newPdfActionResetFormFromDict (_dda *_gea .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_dda .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_dda .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_abda *PdfField )GetContext ()PdfModel {return _abda ._gafa };func (_ecfa *PdfWriter )writeBytes (_cfbef []byte ){if _ecfa ._ebcdb !=nil {return ;};_cfbgc ,_bcfbb :=_ecfa ._ccfd .Write (_cfbef );_ecfa ._acaace +=int64 (_cfbgc );_ecfa ._ebcdb =_bcfbb ;
};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_cffea :=&PdfPageResources {};_cffea ._daaff =_gea .MakeDict ();return _cffea ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_afgg *PdfColorspaceDeviceN )GetNumComponents ()int {return _afgg .ColorantNames .Len ()};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_bbfaa *PdfFieldButton )IsRadio ()bool {return _bbfaa .GetType ()==ButtonTypeRadio };

// ToPdfObject recursively builds the Outline tree PDF object.
func (_dcea *PdfOutline )ToPdfObject ()_gea .PdfObject {_adeec :=_dcea ._dcbac ;_dfcd :=_adeec .PdfObject .(*_gea .PdfObjectDictionary );_dfcd .Set ("\u0054\u0079\u0070\u0065",_gea .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _dcea .First !=nil {_dfcd .Set ("\u0046\u0069\u0072s\u0074",_dcea .First .ToPdfObject ());
};if _dcea .Last !=nil {_dfcd .Set ("\u004c\u0061\u0073\u0074",_dcea .Last .GetContext ().GetContainingPdfObject ());};if _dcea .Parent !=nil {_dfcd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dcea .Parent .GetContext ().GetContainingPdfObject ());};
if _dcea .Count !=nil {_dfcd .Set ("\u0043\u006f\u0075n\u0074",_gea .MakeInteger (*_dcea .Count ));};return _adeec ;};func (_dacg *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// IsCID returns true if the underlying font is CID.
func (_ddccc *PdfFont )IsCID ()bool {return _ddccc .baseFields ().isCIDFont ()};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_fbgad *Image )Resample (targetBitsPerComponent int64 ){if _fbgad .BitsPerComponent ==targetBitsPerComponent {return ;};_edee :=_fbgad .GetSamples ();if targetBitsPerComponent < _fbgad .BitsPerComponent {_gfda :=_fbgad .BitsPerComponent -targetBitsPerComponent ;
for _cdec :=range _edee {_edee [_cdec ]>>=uint (_gfda );};}else if targetBitsPerComponent > _fbgad .BitsPerComponent {_eceff :=targetBitsPerComponent -_fbgad .BitsPerComponent ;for _fcbde :=range _edee {_edee [_fcbde ]<<=uint (_eceff );};};_fbgad .BitsPerComponent =targetBitsPerComponent ;
if _fbgad .BitsPerComponent < 8{_fbgad .resampleLowBits (_edee );return ;};_bgfbca :=_deg .BytesPerLine (int (_fbgad .Width ),int (_fbgad .BitsPerComponent ),_fbgad .ColorComponents );_cdae :=make ([]byte ,_bgfbca *int (_fbgad .Height ));var (_gbggb ,_eefad ,_aabcc ,_ggddf int ;
_cebfe uint32 ;);for _aabcc =0;_aabcc < int (_fbgad .Height );_aabcc ++{_gbggb =_aabcc *_bgfbca ;_eefad =(_aabcc +1)*_bgfbca -1;_cffdd :=_ed .ResampleUint32 (_edee [_gbggb :_eefad ],int (targetBitsPerComponent ),8);for _ggddf ,_cebfe =range _cffdd {_cdae [_ggddf +_gbggb ]=byte (_cebfe );
};};_fbgad .Data =_cdae ;};

// WriteToFile writes the output PDF to file.
func (_agegcd *PdfWriter )WriteToFile (outputFilePath string )error {_ffgcg ,_gbedg :=_de .Create (outputFilePath );if _gbedg !=nil {return _gbedg ;};defer _ffgcg .Close ();return _agegcd .Write (_ffgcg );};

// Mask returns the uin32 bitmask for the specific flag.
func (_fgfaa FieldFlag )Mask ()uint32 {return uint32 (_fgfaa )};func _eadge (_eccgd *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_eccgd }};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _gea .PdfObject ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_affba *PdfReader )GetCatalogMarkInfo ()(_gea .PdfObject ,bool ){if _affba ._cdda ==nil {return nil ,false ;};_gbdc :=_affba ._cdda .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _gbdc ,_gbdc !=nil ;};func (_bdfbe *PdfPage )flattenFieldsWithOpts (_bedg FieldAppearanceGenerator ,_dagf *FieldFlattenOpts ,_dfbbb map[*PdfAnnotation ]bool )error {var _aaag []*PdfAnnotation ;
if _bedg !=nil {if _gcbdc :=_bedg .WrapContentStream (_bdfbe );_gcbdc !=nil {return _gcbdc ;};};_fedag ,_cfbd :=_bdfbe .GetAnnotations ();if _cfbd !=nil {return _cfbd ;};for _ ,_ceffee :=range _fedag {_dfbe ,_eadgf :=_dfbbb [_ceffee ];if !_eadgf &&_dagf .AnnotFilterFunc !=nil {if _ ,_bdaaf :=_ceffee .GetContext ().(*PdfAnnotationWidget );
!_bdaaf {_eadgf =_dagf .AnnotFilterFunc (_ceffee );};};if !_eadgf {_aaag =append (_aaag ,_ceffee );continue ;};switch _ceffee .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_ffec ,_aefb ,_egec :=_cbcda (_ceffee );if _egec !=nil {if !_dfbe {_fd .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_egec );
continue ;};if _ffec ==nil {continue ;};_eaacb :=_bdfbe .Resources .GenerateXObjectName ();_bdfbe .Resources .SetXObjectFormByName (_eaacb ,_ffec );_agge ,_bceb ,_egec :=_aeac (_ffec );if _egec !=nil {_fd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0061\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u004d\u0061\u0074\u0072\u0069\u0078\u002c\u0020s\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0078\u0066\u006f\u0072\u006d\u0020\u0062\u0062\u006f\u0078\u0020\u0061\u0064\u006a\u0075\u0073t\u006d\u0065\u006e\u0074\u003a \u0025\u0076",_egec );
}else {_ecfc :=_fe .IdentityMatrix ();_ecfc =_ecfc .Translate (-_agge .Llx ,-_agge .Lly );if _bceb {_acbdg :=0.0;if _agge .Width ()> 0{_acbdg =_aefb .Width ()/_agge .Width ();};_edeaa :=0.0;if _agge .Height ()> 0{_edeaa =_aefb .Height ()/_agge .Height ();
};_ecfc =_ecfc .Scale (_acbdg ,_edeaa );};_aefb .Transform (_ecfc );};_ebgb :=_fa .Min (_aefb .Llx ,_aefb .Urx );_gdde :=_fa .Min (_aefb .Lly ,_aefb .Ury );var _bcdc []string ;_bcdc =append (_bcdc ,"\u0071");_bcdc =append (_bcdc ,_e .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_ebgb ,_gdde ));
_bcdc =append (_bcdc ,_e .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_eaacb .String ()));_bcdc =append (_bcdc ,"\u0051");_efeb :=_aa .Join (_bcdc ,"\u000a");_egec =_bdfbe .AppendContentStream (_efeb );if _egec !=nil {return _egec ;};if _ffec .Resources !=nil {_ecbc ,_edgb :=_gea .GetDict (_ffec .Resources .Font );
if _edgb {for _ ,_ecde :=range _ecbc .Keys (){if !_bdfbe .Resources .HasFontByName (_ecde ){_bdfbe .Resources .SetFontByName (_ecde ,_ecbc .Get (_ecde ));};};};};};if len (_aaag )> 0{_bdfbe ._egffb =_aaag ;}else {_bdfbe ._egffb =[]*PdfAnnotation {};};return nil ;
};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_ccdg *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _ggdba []*PdfField ;_abgde :=map[*_gea .PdfIndirectObject ]struct{}{};for _ ,_eebcee :=range _ccdg .PageList {_bfgee ,_begdf :=_eebcee .GetAnnotations ();if _begdf !=nil {return _begdf ;
};for _ ,_efaadc :=range _bfgee {var _cebb *PdfField ;switch _dgagb :=_efaadc .GetContext ().(type ){case *PdfAnnotationWidget :if _dgagb ._bbba !=nil {_cebb =_dgagb ._bbba ;break ;};if _daafb ,_dffd :=_gea .GetIndirect (_dgagb .Parent );_dffd {_cebb ,_begdf =_ccdg .newPdfFieldFromIndirectObject (_daafb ,nil );
if _begdf ==nil {break ;};_fd .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_daafb ,_begdf );
};if _dgagb ._bbf !=nil {_cebb ,_begdf =_ccdg .newPdfFieldFromIndirectObject (_dgagb ._bbf ,nil );if _begdf ==nil {break ;};_fd .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_dgagb ._bbf ,_begdf );
};};if _cebb ==nil {continue ;};if _ ,_gdcgbf :=_abgde [_cebb ._bcga ];_gdcgbf {continue ;};_abgde [_cebb ._bcga ]=struct{}{};_ggdba =append (_ggdba ,_cebb );};};if len (_ggdba )==0{return nil ;};if _ccdg .AcroForm ==nil {_ccdg .AcroForm =NewPdfAcroForm ();
};_ccdg .AcroForm .Fields =&_ggdba ;return nil ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_cfbdg *LTV )EnableAll (extraCerts []*_cg .Certificate )error {_egcbc :=_cfbdg ._dgfff ._ggea .AcroForm ;for _ ,_cagb :=range _egcbc .AllFields (){_bbdaf ,_ :=_cagb .GetContext ().(*PdfFieldSignature );if _bbdaf ==nil {continue ;};_bgcb :=_bbdaf .V ;
if _dfdf :=_cfbdg .validateSig (_bgcb );_dfdf !=nil {_fd .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_dfdf );
};if _dceg :=_cfbdg .Enable (_bgcb ,extraCerts );_dceg !=nil {return _dceg ;};};return nil ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _gea .PdfObject )(*PdfFont ,error ){return _dcbdd (fontObj ,true )};

// Height returns the height of `rect`.
func (_bgfba *PdfRectangle )Height ()float64 {return _fa .Abs (_bgfba .Ury -_bgfba .Lly )};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_fc PdfModel ;Type _gea .PdfObject ;S _gea .PdfObject ;Next _gea .PdfObject ;_af *_gea .PdfIndirectObject ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_dgagc *PdfColorLab )GetNumComponents ()int {return 3};

// SetDate sets the `M` field of the signature.
func (_ceeadd *PdfSignature )SetDate (date _g .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_ceeadd .M =_gea .MakeString (date .Format (format ));
};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// GetFillImage get attached model.Image in push button.
func (_gdcb *PdfFieldButton )GetFillImage ()*Image {if _gdcb .IsPush (){return _gdcb ._gegdc ;};return nil ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _cef .ReadSeeker )(*PdfFont ,error ){_gdcg ,_ebfgb :=_gc .ReadAll (r );if _ebfgb !=nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_ebfgb );
return nil ,_ebfgb ;};_dbadg ,_ebfgb :=_ad .TtfParse (_ddg .NewReader (_gdcg ));if _ebfgb !=nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_ebfgb );
return nil ,_ebfgb ;};_gefdf :=&pdfCIDFontType2 {fontCommon :fontCommon {_abed :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_gea .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_dbadg .Widths )<=0{return nil ,_gg .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_cgbd :=1000.0/float64 (_dbadg .UnitsPerEm );_ebad :=_cgbd *float64 (_dbadg .Widths [0]);_gcdfb :=make (map[rune ]int );_dbedg :=make (map[_ad .GID ]int );_bdgbb :=_ad .GID (len (_dbadg .Widths ));for _eedc ,_affbc :=range _dbadg .Chars {if _affbc > _bdgbb -1{continue ;
};_deee :=int (_cgbd *float64 (_dbadg .Widths [_affbc ]));_gcdfb [_eedc ]=_deee ;_dbedg [_affbc ]=_deee ;};_gefdf ._aagb =_gcdfb ;_gefdf .DW =_gea .MakeInteger (int64 (_ebad ));_ecdgc :=_gfbba (_dbedg ,uint16 (_bdgbb ));_gefdf .W =_gea .MakeIndirectObject (_ecdgc );
_beecb :=_gea .MakeDict ();_beecb .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_gea .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_beecb .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_gea .MakeString ("\u0041\u0064\u006fb\u0065"));
_beecb .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_gea .MakeInteger (0));_gefdf .CIDSystemInfo =_beecb ;_egae :=&PdfFontDescriptor {FontName :_gea .MakeName (_dbadg .PostScriptName ),Ascent :_gea .MakeFloat (_cgbd *float64 (_dbadg .TypoAscender )),Descent :_gea .MakeFloat (_cgbd *float64 (_dbadg .TypoDescender )),CapHeight :_gea .MakeFloat (_cgbd *float64 (_dbadg .CapHeight )),FontBBox :_gea .MakeArrayFromFloats ([]float64 {_cgbd *float64 (_dbadg .Xmin ),_cgbd *float64 (_dbadg .Ymin ),_cgbd *float64 (_dbadg .Xmax ),_cgbd *float64 (_dbadg .Ymax )}),ItalicAngle :_gea .MakeFloat (_dbadg .ItalicAngle ),MissingWidth :_gea .MakeFloat (_ebad )};
_bcea ,_ebfgb :=_gea .MakeStream (_gdcg ,_gea .NewFlateEncoder ());if _ebfgb !=nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_ebfgb );
return nil ,_ebfgb ;};_bcea .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_gea .MakeInteger (int64 (len (_gdcg ))));_egae .FontFile2 =_bcea ;if _dbadg .Bold {_egae .StemV =_gea .MakeInteger (120);}else {_egae .StemV =_gea .MakeInteger (70);
};_bcbd :=_dceb ;if _dbadg .IsFixedPitch {_bcbd |=_eebb ;};if _dbadg .ItalicAngle !=0{_bcbd |=_beaae ;};_egae .Flags =_gea .MakeInteger (int64 (_bcbd ));_gefdf ._cacc =_dbadg .PostScriptName ;_gefdf ._baffg =_egae ;_ecgd :=pdfFontType0 {fontCommon :fontCommon {_abed :"\u0054\u0079\u0070e\u0030",_cacc :_dbadg .PostScriptName },DescendantFont :&PdfFont {_bgfbc :_gefdf },Encoding :_gea .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_dgaaf :_dbadg .NewEncoder ()};
if len (_dbadg .Chars )> 0{_adeg :=make (map[_ebd .CharCode ]rune ,len (_dbadg .Chars ));for _gdaa ,_aefdb :=range _dbadg .Chars {_cffg :=_ebd .CharCode (_aefdb );if _effe ,_gggae :=_adeg [_cffg ];!_gggae ||(_gggae &&_effe > _gdaa ){_adeg [_cffg ]=_gdaa ;
};};_ecgd ._cbfe =_ebd .NewToUnicodeCMap (_adeg );};_agcaa :=PdfFont {_bgfbc :&_ecgd };return &_agcaa ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_faad *PdfAnnotationLine )ToPdfObject ()_gea .PdfObject {_faad .PdfAnnotation .ToPdfObject ();_ebc :=_faad ._bbf ;_eedg :=_ebc .PdfObject .(*_gea .PdfObjectDictionary );_faad .PdfAnnotationMarkup .appendToPdfDictionary (_eedg );_eedg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u004c\u0069\u006e\u0065"));
_eedg .SetIfNotNil ("\u004c",_faad .L );_eedg .SetIfNotNil ("\u0042\u0053",_faad .BS );_eedg .SetIfNotNil ("\u004c\u0045",_faad .LE );_eedg .SetIfNotNil ("\u0049\u0043",_faad .IC );_eedg .SetIfNotNil ("\u004c\u004c",_faad .LL );_eedg .SetIfNotNil ("\u004c\u004c\u0045",_faad .LLE );
_eedg .SetIfNotNil ("\u0043\u0061\u0070",_faad .Cap );_eedg .SetIfNotNil ("\u0049\u0054",_faad .IT );_eedg .SetIfNotNil ("\u004c\u004c\u004f",_faad .LLO );_eedg .SetIfNotNil ("\u0043\u0050",_faad .CP );_eedg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_faad .Measure );
_eedg .SetIfNotNil ("\u0043\u004f",_faad .CO );return _ebc ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _gea .PdfObject ;AN _gea .PdfObject ;OP _gea .PdfObject ;JS _gea .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_ddeec *PdfAnnotationRichMedia )ToPdfObject ()_gea .PdfObject {_ddeec .PdfAnnotation .ToPdfObject ();_abfd :=_ddeec ._bbf ;_gde :=_abfd .PdfObject .(*_gea .PdfObjectDictionary );_gde .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_gde .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_ddeec .RichMediaSettings );_gde .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_ddeec .RichMediaContent );
return _abfd ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _gcf .Permissions ;Algorithm EncryptionAlgorithm ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _gea .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {var _cebaf error ;encoder ,_cebaf =img .getSuitableEncoder ();if _cebaf !=nil {_fd .Log .Debug ("F\u0061\u0069l\u0075\u0072\u0065\u0020\u006f\u006e\u0020\u0066\u0069\u006e\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0069\u0074\u0061b\u006c\u0065\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072,\u0020\u0066\u0061\u006c\u006c\u0062\u0061\u0063\u006b\u0020\u0074\u006f\u0020R\u0061\u0077\u0045\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_cebaf );
encoder =_gea .NewRawEncoder ();};};encoder .UpdateParams (img .GetParamsDict ());_cbff ,_acac :=encoder .EncodeBytes (img .Data );if _acac !=nil {_fd .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_acac );
return nil ,_acac ;};_ffaad :=NewXObjectImage ();_efgce :=img .Width ;_cadgc :=img .Height ;_ffaad .Width =&_efgce ;_ffaad .Height =&_cadgc ;_bebb :=img .BitsPerComponent ;_ffaad .BitsPerComponent =&_bebb ;_ffaad .Filter =encoder ;_ffaad .Stream =_cbff ;
if cs ==nil {if img .ColorComponents ==1{_ffaad .ColorSpace =NewPdfColorspaceDeviceGray ();if img .BitsPerComponent ==16{switch encoder .(type ){case *_gea .DCTEncoder :_ffaad .ColorSpace =NewPdfColorspaceDeviceRGB ();_bebb =8;_ffaad .BitsPerComponent =&_bebb ;
};};}else if img .ColorComponents ==3{_ffaad .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{switch encoder .(type ){case *_gea .DCTEncoder :_ffaad .ColorSpace =NewPdfColorspaceDeviceRGB ();default:_ffaad .ColorSpace =NewPdfColorspaceDeviceCMYK ();
};}else {return nil ,_gg .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_ffaad .ColorSpace =cs ;};if len (img ._bdbf )!=0{_babec :=NewXObjectImage ();_babec .Filter =encoder ;_cfgcea ,_ecfba :=encoder .EncodeBytes (img ._bdbf );
if _ecfba !=nil {_fd .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_ecfba );return nil ,_ecfba ;};_babec .Stream =_cfgcea ;_babec .BitsPerComponent =_ffaad .BitsPerComponent ;
_babec .Width =&img .Width ;_babec .Height =&img .Height ;_babec .ColorSpace =NewPdfColorspaceDeviceGray ();_ffaad .SMask =_babec .ToPdfObject ();}else {_ffaad .SMask =xobjIn .SMask ;_ffaad .ImageMask =xobjIn .ImageMask ;if _ffaad .ColorSpace .GetNumComponents ()==1{_ebbd (_ffaad );
};};return _ffaad ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_eaff *PdfFilespec )GetContainingPdfObject ()_gea .PdfObject {return _eaff ._feeef };

// NewPdfShadingType2 creates an empty shading type 2 dictionary.
func NewPdfShadingType2 ()*PdfShadingType2 {_gdbb :=&PdfShadingType2 {};_gdbb .PdfShading =&PdfShading {};_gdbb .PdfShading ._adae =_gea .MakeIndirectObject (_gea .MakeDict ());_gdbb .PdfShading ._cffdg =_gdbb ;return _gdbb ;};

// NewPdfShadingPatternType2 creates an empty shading pattern type 2 object.
func NewPdfShadingPatternType2 ()*PdfShadingPatternType2 {_gdcefd :=&PdfShadingPatternType2 {};_gdcefd .Matrix =_gea .MakeArrayFromIntegers ([]int {1,0,0,1,0,0});_gdcefd .PdfPattern =&PdfPattern {};_gdcefd .PdfPattern .PatternType =int64 (*_gea .MakeInteger (2));
_gdcefd .PdfPattern ._efgbe =_gdcefd ;_gdcefd .PdfPattern ._bgcec =_gea .MakeIndirectObject (_gea .MakeDict ());return _gdcefd ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_feeda []byte ;_fdfad []uint32 ;_addge *_gea .PdfObjectStream ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_ecaeb *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_ddada ,_cfbdca :=_gea .GetDict (_ecaeb ._ggbgf .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_cfbdca {_ddada =_gea .MakeDict ();_ecaeb ._ggbgf .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_ddada );
};_ggcecg ,_cfbdca :=_gea .GetDict (_ddada .Get (_gea .PdfObjectName (extName )));if !_cfbdca {_ggcecg =_gea .MakeDict ();_ddada .Set (_gea .PdfObjectName (extName ),_ggcecg );};if _aaafg ,_ :=_gea .GetNameVal (_ggcecg .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_aaafg !=baseVersion {_ggcecg .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_gea .MakeName (baseVersion ));};if _gacdc ,_ :=_gea .GetIntVal (_ggcecg .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_gacdc !=extLevel {_ggcecg .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_gea .MakeInteger (int64 (extLevel )));};};func _gddff (_ddff *_gea .PdfObjectDictionary ){_ecec ,_efaca :=_gea .GetArray (_ddff .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));
_ggac ,_gffd :=_gea .GetIntVal (_ddff .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));_bafg ,_aaac :=_gea .GetIntVal (_ddff .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _efaca &&_gffd &&_aaac {_efda :=_ecec .Len ();if _efda !=_bafg -_ggac +1{_fd .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_efda ,_bafg );
_gbea :=_gea .PdfObjectInteger (_ggac +_efda -1);_ddff .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_gbea );};};};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_gdef *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gdef .Alternate ==nil {_fd .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _gdef .N ==1{_fd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_feeg :=NewPdfColorspaceDeviceGray ();return _feeg .ColorToRGB (color );}else if _gdef .N ==3{_fd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _gdef .N ==4{_fd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_adeed :=NewPdfColorspaceDeviceCMYK ();return _adeed .ColorToRGB (color );}else {return nil ,_gg .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_fd .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_gdef );
return _gdef .Alternate .ColorToRGB (color );};

// GetContentStream returns the XObject Form's content stream.
func (_eafagg *XObjectForm )GetContentStream ()([]byte ,error ){_dacaa ,_cdgga :=_gea .DecodeStream (_eafagg ._ggdde );if _cdgga !=nil {return nil ,_cdgga ;};return _dacaa ,nil ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_eagbg *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _eagbg ._egffb ==nil {_eagbg .GetAnnotations ();};_eagbg ._egffb =append (_eagbg ._egffb ,annot );};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// IsValid checks if the given pdf output intent type is valid.
func (_dfdg PdfOutputIntentType )IsValid ()bool {return _dfdg >=PdfOutputIntentTypeA1 &&_dfdg <=PdfOutputIntentTypeX ;};var _ceaea =false ;

// ToPdfObject returns the PDF representation of the function.
func (_edgee *PdfFunctionType3 )ToPdfObject ()_gea .PdfObject {_dcfa :=_gea .MakeDict ();_dcfa .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gea .MakeInteger (3));_cdaca :=&_gea .PdfObjectArray {};for _ ,_fgfeb :=range _edgee .Domain {_cdaca .Append (_gea .MakeFloat (_fgfeb ));
};_dcfa .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cdaca );if _edgee .Range !=nil {_cggcd :=&_gea .PdfObjectArray {};for _ ,_dged :=range _edgee .Range {_cggcd .Append (_gea .MakeFloat (_dged ));};_dcfa .Set ("\u0052\u0061\u006eg\u0065",_cggcd );};if _edgee .Functions !=nil {_gcdcg :=&_gea .PdfObjectArray {};
for _ ,_abcdb :=range _edgee .Functions {_gcdcg .Append (_abcdb .ToPdfObject ());};_dcfa .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_gcdcg );};if _edgee .Bounds !=nil {_daeg :=&_gea .PdfObjectArray {};for _ ,_daef :=range _edgee .Bounds {_daeg .Append (_gea .MakeFloat (_daef ));
};_dcfa .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_daeg );};if _edgee .Encode !=nil {_dgacg :=&_gea .PdfObjectArray {};for _ ,_ecbg :=range _edgee .Encode {_dgacg .Append (_gea .MakeFloat (_ecbg ));};_dcfa .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_dgacg );
};if _edgee ._agaac !=nil {_edgee ._agaac .PdfObject =_dcfa ;return _edgee ._agaac ;};return _dcfa ;};func _bbgdea ()string {_aefdbd .Lock ();defer _aefdbd .Unlock ();_gcbca :=_ge .GetLicenseKey ();if len (_dacgb )> 0&&(_gcbca .IsLicensed ()||_ceaea ){return _dacgb ;
};return _e .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_gbge (),_gcbca .TypeToString ());};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_gceaa *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};func _dcgdf (_beefa _cef .ReadSeeker ,_fdafd *ReaderOpts ,_caccb bool ,_cdea string )(*PdfReader ,error ){if _fdafd ==nil {_fdafd =NewReaderOpts ();
};_baeb :=*_fdafd ;_gegacf :=&PdfReader {_efged :_beefa ,_gbef :map[_gea .PdfObject ]struct{}{},_gace :_ceaeg (),_debgbb :_fdafd .LazyLoad ,_agcac :_fdafd .ComplianceMode ,_cgaf :_caccb ,_gffgc :&_baeb };_addcf ,_gegc :=_dccda ("\u0072");if _gegc !=nil {return nil ,_gegc ;
};_gegc =_ge .Track (_addcf ,_cdea );if _gegc !=nil {return nil ,_gegc ;};_gegacf ._bgceb =_addcf ;var _agbbg *_gea .PdfParser ;if !_gegacf ._agcac {_agbbg ,_gegc =_gea .NewParser (_beefa );}else {_agbbg ,_gegc =_gea .NewCompliancePdfParser (_beefa );};
if _gegc !=nil {return nil ,_gegc ;};_gegacf ._edcdb =_agbbg ;_ceace ,_gegc :=_gegacf .IsEncrypted ();if _gegc !=nil {return nil ,_gegc ;};if !_ceace {_gegc =_gegacf .loadStructure ();if _gegc !=nil {return nil ,_gegc ;};}else if _caccb {_aegagc ,_adbbd :=_gegacf .Decrypt ([]byte (_fdafd .Password ));
if _adbbd !=nil {return nil ,_adbbd ;};if !_aegagc {return nil ,_gg .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_gegacf ._cgcdfd =make (map[*PdfReader ]*PdfReader );_gegacf ._ceagg =make ([]*PdfReader ,_agbbg .GetRevisionNumber ());return _gegacf ,nil ;};

// ToPdfObject returns a stream object.
func (_dgfe *XObjectImage )ToPdfObject ()_gea .PdfObject {_fdaaa :=_dgfe ._bbffa ;_dcdca :=_fdaaa .PdfObjectDictionary ;if _dgfe .Filter !=nil {_dcdca =_dgfe .Filter .MakeStreamDict ();_fdaaa .PdfObjectDictionary =_dcdca ;};_dcdca .Set ("\u0054\u0079\u0070\u0065",_gea .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_dcdca .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0049\u006d\u0061g\u0065"));_dcdca .Set ("\u0057\u0069\u0064t\u0068",_gea .MakeInteger (*(_dgfe .Width )));_dcdca .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_gea .MakeInteger (*(_dgfe .Height )));
if _dgfe .BitsPerComponent !=nil {_dcdca .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gea .MakeInteger (*(_dgfe .BitsPerComponent )));};if _dgfe .ColorSpace !=nil {_dcdca .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_dgfe .ColorSpace .ToPdfObject ());
};_dcdca .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_dgfe .Intent );_dcdca .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_dgfe .ImageMask );_dcdca .SetIfNotNil ("\u004d\u0061\u0073\u006b",_dgfe .Mask );_fccda :=_dcdca .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _dgfe .Decode ==nil &&_fccda {_dcdca .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _dgfe .Decode !=nil {_dcdca .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dgfe .Decode );};_dcdca .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_dgfe .Interpolate );
_dcdca .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_dgfe .Alternatives );_dcdca .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_dgfe .SMask );_dcdca .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_dgfe .SMaskInData );
_dcdca .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_dgfe .Matte );_dcdca .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dgfe .Name );_dcdca .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_dgfe .StructParent );_dcdca .SetIfNotNil ("\u0049\u0044",_dgfe .ID );
_dcdca .SetIfNotNil ("\u004f\u0050\u0049",_dgfe .OPI );_dcdca .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_dgfe .Metadata );_dcdca .SetIfNotNil ("\u004f\u0043",_dgfe .OC );_dcdca .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gea .MakeInteger (int64 (len (_dgfe .Stream ))));
_fdaaa .Stream =_dgfe .Stream ;return _fdaaa ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_eggea pdfFontSimple )GetRuneMetrics (r rune )(_ad .CharMetrics ,bool ){if _eggea ._eaeaef !=nil {_ebcab ,_feefc :=_eggea ._eaeaef .Read (r );if _feefc {return _ebcab ,true ;};};_efgb :=_eggea .Encoder ();if _efgb ==nil {_fd .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_eggea );
return _ad .CharMetrics {},false ;};_cdeeb ,_fecac :=_efgb .RuneToCharcode (r );if !_fecac {if r !=' '{_fd .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_eggea );
};return _ad .CharMetrics {},false ;};_ebcgb ,_ecdbbb :=_eggea .GetCharMetrics (_cdeeb );return _ebcgb ,_ecdbbb ;};func (_fcfe *pdfFontSimple )getFontEncoding ()(_geeba string ,_cceeb map[_ceb .CharCode ]_ceb .GlyphName ,_fdfef error ){_geeba ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _gfee ,_dcef :=_ffcea [_fcfe ._cacc ];_dcef {_geeba =_gfee ;}else if _fcfe .fontFlags ()&_dceb !=0{for _bffc ,_eadd :=range _ffcea {if _aa .Contains (_fcfe ._cacc ,_bffc ){_geeba =_eadd ;break ;};};};if _fcfe .Encoding ==nil {return _geeba ,nil ,nil ;
};switch _cceef :=_fcfe .Encoding .(type ){case *_gea .PdfObjectName :return string (*_cceef ),nil ,nil ;case *_gea .PdfObjectDictionary :_dead ,_gggfd :=_gea .GetName (_cceef .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
if _gggfd {_geeba =_dead .String ();};if _cbfdg :=_cceef .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_cbfdg !=nil {_aaga ,_ccagf :=_gea .GetArray (_cbfdg );if !_ccagf {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_cceef ,_cceef .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_gea .ErrTypeError ;};_cceeb ,_fdfef =_ceb .FromFontDifferences (_aaga );};return _geeba ,_cceeb ,_fdfef ;default:_fd .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_fcfe .Encoding ,_fcfe .Encoding );
return "",nil ,_gea .ErrTypeError ;};};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_gea .PdfObjectDictionary )(*PdfPageResources ,error ){_cdcf :=NewPdfPageResources ();if _bdgfbd :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_bdgfbd !=nil {_cdcf .ExtGState =_bdgfbd ;};if _ebaf :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_ebaf !=nil &&!_gea .IsNullObject (_ebaf ){_cdcf .ColorSpace =_ebaf ;};if _edbeg :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_edbeg !=nil {_cdcf .Pattern =_edbeg ;};if _faff :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_faff !=nil {_cdcf .Shading =_faff ;
};if _dfbc :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_dfbc !=nil {_cdcf .XObject =_dfbc ;};if _cbgbc :=_gea .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_cbgbc !=nil {_cdcf .Font =_cbgbc ;};if _cbeff :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_cbeff !=nil {_cdcf .ProcSet =_cbeff ;};if _acfbc :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_acfbc !=nil {_cdcf .Properties =_acfbc ;};return _cdcf ,nil ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_fac :=NewPdfAction ();_bfd :=&PdfActionJavaScript {};_bfd .PdfAction =_fac ;_fac .SetContext (_bfd );return _bfd ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_ecfb *PdfColorspaceSpecialIndexed )ToPdfObject ()_gea .PdfObject {_fcde :=_gea .MakeArray (_gea .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_fcde .Append (_ecfb .Base .ToPdfObject ());_fcde .Append (_gea .MakeInteger (int64 (_ecfb .HiVal )));
_fcde .Append (_ecfb .Lookup );if _ecfb ._ffbee !=nil {_ecfb ._ffbee .PdfObject =_fcde ;return _ecfb ._ffbee ;};return _fcde ;};

// ToPdfObject implements model.PdfModel interface.
func (_becad *PdfOutputIntent )ToPdfObject ()_gea .PdfObject {if _becad ._ecfbg ==nil {_becad ._ecfbg =_gea .MakeDict ();};_bgfgaf :=_becad ._ecfbg ;if _becad .Type !=""{_bgfgaf .Set ("\u0054\u0079\u0070\u0065",_gea .MakeName (_becad .Type ));};_bgfgaf .Set ("\u0053",_gea .MakeName (_becad .S .String ()));
if _becad .OutputCondition !=""{_bgfgaf .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_gea .MakeString (_becad .OutputCondition ));};_bgfgaf .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_gea .MakeString (_becad .OutputConditionIdentifier ));
_bgfgaf .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_gea .MakeString (_becad .RegistryName ));if _becad .Info !=""{_bgfgaf .Set ("\u0049\u006e\u0066\u006f",_gea .MakeString (_becad .Info ));};if len (_becad .DestOutputProfile )!=0{_ecaee ,_edcfc :=_gea .MakeStream (_becad .DestOutputProfile ,_gea .NewFlateEncoder ());
if _edcfc !=nil {_fd .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_edcfc );
};_ecaee .PdfObjectDictionary .Set ("\u004e",_gea .MakeInteger (int64 (_becad .ColorComponents )));_dade :=make ([]float64 ,_becad .ColorComponents *2);for _eafgb :=0;_eafgb < _becad .ColorComponents *2;_eafgb ++{_acdb :=0.0;if _eafgb %2!=0{_acdb =1.0;
};_dade [_eafgb ]=_acdb ;};_ecaee .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_gea .MakeArrayFromFloats (_dade ));_bgfgaf .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_ecaee );};return _bgfgaf ;
};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _gea .PdfObject ;IsMap _gea .PdfObject ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_bcabgd *PdfReader )GetOCProperties ()(_gea .PdfObject ,error ){_abcb :=_bcabgd ._cdda ;_ddaa :=_abcb .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_ddaa =_gea .ResolveReference (_ddaa );if !_bcabgd ._debgbb {_dbca :=_bcabgd .traverseObjectData (_ddaa );
if _dbca !=nil {return nil ,_dbca ;};};return _ddaa ,nil ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_befde :=PdfWriter {};_befde ._edfdb =map[_gea .PdfObject ]struct{}{};_befde ._aeaa =[]_gea .PdfObject {};_befde ._adbdb =map[_gea .PdfObject ][]*_gea .PdfObjectDictionary {};_befde ._fabgc =map[_gea .PdfObject ]struct{}{};
_befde ._fedce .Major =1;_befde ._fedce .Minor =3;_ceffb :=_gea .MakeDict ();_ecbed :=[]struct{_cgcfg _gea .PdfObjectName ;_bafcd string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_bbgdea ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_edbab ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_aeced ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_adcag ()},{"\u0054\u0069\u0074l\u0065",_cbdad ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_ccbde ()}};
for _ ,_cefb :=range _ecbed {if _cefb ._bafcd !=""{_ceffb .Set (_cefb ._cgcfg ,_gea .MakeString (_cefb ._bafcd ));};};if _dbgag :=_dadef ();!_dbgag .IsZero (){if _aaafa ,_cdefb :=NewPdfDateFromTime (_dbgag );_cdefb ==nil {_ceffb .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_aaafa .ToPdfObject ());
};};if _gbfbb :=_ccebg ();!_gbfbb .IsZero (){if _facgg ,_acgd :=NewPdfDateFromTime (_gbfbb );_acgd ==nil {_ceffb .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_facgg .ToPdfObject ());};};_dccdc :=_gea .PdfIndirectObject {};_dccdc .PdfObject =_ceffb ;_befde ._efabg =&_dccdc ;
_befde .addObject (&_dccdc );_gfdgc :=_gea .PdfIndirectObject {};_fefaa :=_gea .MakeDict ();_fefaa .Set ("\u0054\u0079\u0070\u0065",_gea .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_gfdgc .PdfObject =_fefaa ;_befde ._bcbed =&_gfdgc ;_befde .addObject (_befde ._bcbed );
_dafcg ,_cfdddc :=_dccda ("\u0077");if _cfdddc !=nil {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cfdddc );};_befde ._fgefc =_dafcg ;_ccbaf :=_gea .PdfIndirectObject {};_ggbad :=_gea .MakeDict ();_ggbad .Set ("\u0054\u0079\u0070\u0065",_gea .MakeName ("\u0050\u0061\u0067e\u0073"));
_fadfg :=_gea .PdfObjectArray {};_ggbad .Set ("\u004b\u0069\u0064\u0073",&_fadfg );_ggbad .Set ("\u0043\u006f\u0075n\u0074",_gea .MakeInteger (0));_ccbaf .PdfObject =_ggbad ;_befde ._bccec =&_ccbaf ;_befde ._aefc =map[_gea .PdfObject ]struct{}{};_befde .addObject (_befde ._bccec );
_fefaa .Set ("\u0050\u0061\u0067e\u0073",&_ccbaf );_befde ._ggbgf =_fefaa ;_fd .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_gfdgc );return _befde ;};func (_bgad *PdfReader )newPdfAnnotationCaretFromDict (_dedc *_gea .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_dafdg :=PdfAnnotationCaret {};
_cebc ,_dfdd :=_bgad .newPdfAnnotationMarkupFromDict (_dedc );if _dfdd !=nil {return nil ,_dfdd ;};_dafdg .PdfAnnotationMarkup =_cebc ;_dafdg .RD =_dedc .Get ("\u0052\u0044");_dafdg .Sy =_dedc .Get ("\u0053\u0079");return &_dafdg ,nil ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_bfefd *PdfAppender )UpdatePage (page *PdfPage ){_bfefd .updateObjectsDeep (page .ToPdfObject (),nil );};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_ageea *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _ageea ._efgbe .(*PdfShadingPattern );};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_cac :=NewPdfAction ();_cae :=&PdfActionNamed {};_cae .PdfAction =_cac ;_cac .SetContext (_cae );return _cae ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_beafd *PdfColorspaceCalGray )GetNumComponents ()int {return 1};func (_ddfaf *PdfReader )resolveReference (_aebcc *_gea .PdfObjectReference )(_gea .PdfObject ,bool ,error ){_dgdgd ,_beedcd :=_ddfaf ._edcdb .ObjCache [int (_aebcc .ObjectNumber )];
if !_beedcd {_fd .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_aebcc );_gdbde ,_dabg :=_ddfaf ._edcdb .LookupByReference (*_aebcc );if _dabg !=nil {return nil ,false ,_dabg ;};_ddfaf ._edcdb .ObjCache [int (_aebcc .ObjectNumber )]=_gdbde ;
return _gdbde ,false ,nil ;};return _dgdgd ,true ,nil ;};

// SetContext set the sub annotation (context).
func (_cbcf *PdfShading )SetContext (ctx PdfModel ){_cbcf ._cffdg =ctx };

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_bdgbe *PdfPage )GetPageAsIndirectObject ()*_gea .PdfIndirectObject {return _bdgbe ._gfgfdc };

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// DecodeArray returns the component range values for the Indexed colorspace.
func (_eafa *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_eafa .HiVal )};};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_dgg *PdfPage )error ;};func _begfe (_gdgg *_gea .PdfObjectStream )(*PdfFunctionType4 ,error ){_dagd :=&PdfFunctionType4 {};_dagd ._abec =_gdgg ;_cbfa :=_gdgg .PdfObjectDictionary ;_deccf ,_acbbe :=_gea .TraceToDirectObject (_cbfa .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gea .PdfObjectArray );
if !_acbbe {_fd .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_gg .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _deccf .Len ()%2!=0{_fd .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_gg .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_cbbg ,_gdaf :=_deccf .ToFloat64Array ();
if _gdaf !=nil {return nil ,_gdaf ;};_dagd .Domain =_cbbg ;_deccf ,_acbbe =_gea .TraceToDirectObject (_cbfa .Get ("\u0052\u0061\u006eg\u0065")).(*_gea .PdfObjectArray );if _acbbe {if _deccf .Len ()< 0||_deccf .Len ()%2!=0{return nil ,_gg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_bdcfb ,_fgdf :=_deccf .ToFloat64Array ();if _fgdf !=nil {return nil ,_fgdf ;};_dagd .Range =_bdcfb ;};_bgfga ,_gdaf :=_gea .DecodeStream (_gdgg );if _gdaf !=nil {return nil ,_gdaf ;};_dagd ._fceg =_bgfga ;_aebf :=_ac .NewPSParser (_bgfga );_gfgfd ,_gdaf :=_aebf .Parse ();
if _gdaf !=nil {return nil ,_gdaf ;};_dagd .Program =_gfgfd ;return _dagd ,nil ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_de .File ,error ){const _adeaf ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_ebcbg ,_bcee :=_de .Open (pdfFile );if _bcee !=nil {return nil ,nil ,_bcee ;};_ccaf ,_bcee :=_dcgdf (_ebcbg ,opts ,true ,_adeaf );if _bcee !=nil {_ebcbg .Close ();return nil ,nil ,_bcee ;};return _ccaf ,_ebcbg ,nil ;};

// SetContext sets the sub annotation (context).
func (_dad *PdfAnnotation )SetContext (ctx PdfModel ){_dad ._fag =ctx };

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_fb :=NewPdfAnnotation ();_eef :=&PdfAnnotationWatermark {};_eef .PdfAnnotation =_fb ;_fb .SetContext (_eef );return _eef ;};func _fafe (_fdbce []byte )bool {if len (_fdbce )< 4{return true ;};for _facaa :=range _fdbce [:4]{_ebdee :=rune (_facaa );
if !_gbab .Is (_gbab .ASCII_Hex_Digit ,_ebdee )&&!_gbab .IsSpace (_ebdee ){return true ;};};return false ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _gea .PdfObject )(_gea .PdfObjectName ,error ){var _eafd *_gea .PdfObjectName ;var _gbcd *_gea .PdfObjectArray ;if _edfb ,_agegc :=obj .(*_gea .PdfIndirectObject );_agegc {if _gfgf ,_beec :=_edfb .PdfObject .(*_gea .PdfObjectArray );
_beec {_gbcd =_gfgf ;}else if _gcdc ,_cbbfg :=_edfb .PdfObject .(*_gea .PdfObjectName );_cbbfg {_eafd =_gcdc ;};}else if _cadc ,_bgaae :=obj .(*_gea .PdfObjectArray );_bgaae {_gbcd =_cadc ;}else if _befb ,_afef :=obj .(*_gea .PdfObjectName );_afef {_eafd =_befb ;
};if _eafd !=nil {switch *_eafd {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_eafd ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_eafd ,nil ;
};};if _gbcd !=nil &&_gbcd .Len ()> 0{if _fbbf ,_cgge :=_gbcd .Get (0).(*_gea .PdfObjectName );_cgge {switch *_fbbf {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _gbcd .Len ()==1{return *_fbbf ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_fbbf ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_fbbf ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_fbbf ,nil ;};};};return "",nil ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_dcag *PdfField )IsTerminal ()bool {return len (_dcag .Kids )==0};

// String returns a string that describes `base`.
func (_acfab fontCommon )String ()string {return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_acfab .coreString ());};func (_aae *PdfReader )newPdfActionGoTo3DViewFromDict (_bead *_gea .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_bead .Get ("\u0054\u0041"),V :_bead .Get ("\u0056")},nil ;
};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_ccef :=NewPdfAnnotation ();_acbc :=&PdfAnnotationSound {};_acbc .PdfAnnotation =_ccef ;_acbc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ccef .SetContext (_acbc );return _acbc ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _gea .PdfObject )(*PdfFilespec ,error ){_efdb :=&PdfFilespec {};var _feeee *_gea .PdfObjectDictionary ;if _fbcac ,_cgab :=_gea .GetIndirect (obj );_cgab {_efdb ._feeef =_fbcac ;_gdfc ,_bbgdf :=_gea .GetDict (_fbcac .PdfObject );
if !_bbgdf {_fd .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_gea .ErrTypeError ;};_feeee =_gdfc ;}else if _gbaa ,_afbf :=_gea .GetDict (obj );
_afbf {_efdb ._feeef =_gbaa ;_feeee =_gbaa ;}else {_fd .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_gea .ErrTypeError ;};if _feeee ==nil {_fd .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_gg .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _baead :=_feeee .Get ("\u0054\u0079\u0070\u0065");_baead !=nil {_beagc ,_eebdc :=_baead .(*_gea .PdfObjectName );if !_eebdc {_fd .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_baead );
}else {if *_beagc !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_fd .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_beagc );
};};};if _ffead :=_feeee .Get ("\u0046\u0053");_ffead !=nil {_efdb .FS =_ffead ;};if _gbec :=_feeee .Get ("\u0046");_gbec !=nil {_efdb .F =_gbec ;};if _ddda :=_feeee .Get ("\u0055\u0046");_ddda !=nil {_efdb .UF =_ddda ;};if _egfe :=_feeee .Get ("\u0044\u004f\u0053");
_egfe !=nil {_efdb .DOS =_egfe ;};if _cbadb :=_feeee .Get ("\u004d\u0061\u0063");_cbadb !=nil {_efdb .Mac =_cbadb ;};if _cacb :=_feeee .Get ("\u0055\u006e\u0069\u0078");_cacb !=nil {_efdb .Unix =_cacb ;};if _egcd :=_feeee .Get ("\u0049\u0044");_egcd !=nil {_efdb .ID =_egcd ;
};if _fbec :=_feeee .Get ("\u0056");_fbec !=nil {_efdb .V =_fbec ;};if _gagbg :=_feeee .Get ("\u0045\u0046");_gagbg !=nil {_efdb .EF =_gagbg ;};if _eeag :=_feeee .Get ("\u0052\u0046");_eeag !=nil {_efdb .RF =_eeag ;};if _cfdbc :=_feeee .Get ("\u0044\u0065\u0073\u0063");
_cfdbc !=nil {_efdb .Desc =_cfdbc ;};if _faadc :=_feeee .Get ("\u0043\u0049");_faadc !=nil {_efdb .CI =_faadc ;};return _efdb ,nil ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_bbeg *modelManager )GetPrimitiveFromModel (model PdfModel )_gea .PdfObject {_dgfa ,_fcbbc :=_bbeg ._ecgee [model ];if !_fcbbc {return nil ;};return _dgfa ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _gea .PdfObject ;H _gea .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gaaff *PdfShadingType2 )ToPdfObject ()_gea .PdfObject {_gaaff .PdfShading .ToPdfObject ();_cfebf ,_afbbe :=_gaaff .getShadingDict ();if _afbbe !=nil {_fd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cfebf ==nil {_fd .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _gaaff .Coords !=nil {_cfebf .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_gaaff .Coords );
};if _gaaff .Domain !=nil {_cfebf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gaaff .Domain );};if _gaaff .Function !=nil {if len (_gaaff .Function )==1{_cfebf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gaaff .Function [0].ToPdfObject ());
}else {_aeef :=_gea .MakeArray ();for _ ,_fgfgb :=range _gaaff .Function {_aeef .Append (_fgfgb .ToPdfObject ());};_cfebf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aeef );};};if _gaaff .Extend !=nil {_cfebf .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_gaaff .Extend );
};return _gaaff ._adae ;};

// ToInteger convert to an integer format.
func (_gcbf *PdfColorDeviceGray )ToInteger (bits int )uint32 {_deace :=_fa .Pow (2,float64 (bits ))-1;return uint32 (_deace *_gcbf .Val ());};func _ggcc (_dgdf _gea .PdfObject )(map[_ceb .CharCode ]float64 ,error ){if _dgdf ==nil {return nil ,nil ;};_cbef ,_gbggc :=_gea .GetArray (_dgdf );
if !_gbggc {return nil ,nil ;};_dgeb :=map[_ceb .CharCode ]float64 {};_dgbb :=_cbef .Len ();for _ebda :=0;_ebda < _dgbb -1;_ebda ++{_bdagc :=_gea .TraceToDirectObject (_cbef .Get (_ebda ));_dced ,_caee :=_gea .GetIntVal (_bdagc );if !_caee {return nil ,_e .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_ebda ,_bdagc );
};_ebda ++;if _ebda > _dgbb -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_cbef );};_aedb :=_gea .TraceToDirectObject (_cbef .Get (_ebda ));
switch _aedb .(type ){case *_gea .PdfObjectArray :_egdfac ,_ :=_gea .GetArray (_aedb );if _egag ,_bbfbf :=_egdfac .ToFloat64Array ();_bbfbf ==nil {for _dfad :=0;_dfad < len (_egag );_dfad ++{_dgeb [_ceb .CharCode (_dced +_dfad )]=_egag [_dfad ];};}else {return nil ,_e .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_ebda ,_aedb );
};case *_gea .PdfObjectInteger :_aceeee ,_gbecc :=_gea .GetIntVal (_aedb );if !_gbecc {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_ebda ,_aedb );
};_ebda ++;if _ebda > _dgbb -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_cbef );};_bafda :=_cbef .Get (_ebda );_effac ,_abdea :=_gea .GetNumberAsFloat (_bafda );
if _abdea !=nil {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_ebda ,_bafda );};for _gfgc :=_dced ;_gfgc <=_aceeee ;
_gfgc ++{_dgeb [_ceb .CharCode (_gfgc )]=_effac ;};default:return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_ebda ,_aedb );
};};return _dgeb ,nil ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ddce pdfCIDFontType0 )GetRuneMetrics (r rune )(_ad .CharMetrics ,bool ){return _ad .CharMetrics {Wx :_ddce ._ecggc },true ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_aeafg *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _aeafg ._efgbe .(*PdfTilingPattern );};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_dcbaf :=&PdfColorspaceCalRGB {};_dcbaf .BlackPoint =[]float64 {0.0,0.0,0.0};_dcbaf .Gamma =[]float64 {1.0,1.0,1.0};_dcbaf .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _dcbaf ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_adbd *PdfPage )ToPdfObject ()_gea .PdfObject {_cbbce :=_adbd ._gfgfdc ;_adbd .GetPageDict ();return _cbbce ;};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _cef .ReadSeeker )(*CompliancePdfReader ,error ){const _gfcf ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_aceee ,_gbfe :=_dcgdf (rs ,&ReaderOpts {ComplianceMode :true },false ,_gfcf );
if _gbfe !=nil {return nil ,_gbfe ;};return &CompliancePdfReader {PdfReader :_aceee },nil ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_aba :=NewPdfAnnotation ();_edb :=&PdfAnnotationScreen {};_edb .PdfAnnotation =_aba ;_aba .SetContext (_edb );return _edb ;};func (_begcb *PdfReader )newPdfSignatureReferenceFromDict (_adfdf *_gea .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _cbcbe ,_eadcg :=_begcb ._gace .GetModelFromPrimitive (_adfdf ).(*PdfSignatureReference );
_eadcg {return _cbcbe ,nil ;};_degfa :=&PdfSignatureReference {_aedba :_adfdf ,Data :_adfdf .Get ("\u0044\u0061\u0074\u0061")};var _cabab bool ;_degfa .Type ,_ =_gea .GetName (_adfdf .Get ("\u0054\u0079\u0070\u0065"));_degfa .TransformMethod ,_cabab =_gea .GetName (_adfdf .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_cabab {_fd .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_degfa .TransformParams ,_ =_gea .GetDict (_adfdf .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_degfa .DigestMethod ,_ =_gea .GetName (_adfdf .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _degfa ,nil ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_dege *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_cbdg :=_ed .NewReader (img .getBase ());_cbeae :=_deg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_dadc :=_ed .NewWriter (_cbeae );
_fbbfa :=_fa .Pow (2,float64 (img .BitsPerComponent ))-1;_ccefb :=make ([]uint32 ,3);var (_eadg error ;_abgf ,_bfad ,_feda ,_cggea ,_caed ,_efab float64 ;);for {_eadg =_cbdg .ReadSamples (_ccefb );if _eadg ==_cef .EOF {break ;}else if _eadg !=nil {return img ,_eadg ;
};_abgf =float64 (_ccefb [0])/_fbbfa ;_bfad =float64 (_ccefb [1])/_fbbfa ;_feda =float64 (_ccefb [2])/_fbbfa ;_cggea =_dege .Matrix [0]*_fa .Pow (_abgf ,_dege .Gamma [0])+_dege .Matrix [3]*_fa .Pow (_bfad ,_dege .Gamma [1])+_dege .Matrix [6]*_fa .Pow (_feda ,_dege .Gamma [2]);
_caed =_dege .Matrix [1]*_fa .Pow (_abgf ,_dege .Gamma [0])+_dege .Matrix [4]*_fa .Pow (_bfad ,_dege .Gamma [1])+_dege .Matrix [7]*_fa .Pow (_feda ,_dege .Gamma [2]);_efab =_dege .Matrix [2]*_fa .Pow (_abgf ,_dege .Gamma [0])+_dege .Matrix [5]*_fa .Pow (_bfad ,_dege .Gamma [1])+_dege .Matrix [8]*_fa .Pow (_feda ,_dege .Gamma [2]);
_abgf =3.240479*_cggea +-1.537150*_caed +-0.498535*_efab ;_bfad =-0.969256*_cggea +1.875992*_caed +0.041556*_efab ;_feda =0.055648*_cggea +-0.204043*_caed +1.057311*_efab ;_abgf =_fa .Min (_fa .Max (_abgf ,0),1.0);_bfad =_fa .Min (_fa .Max (_bfad ,0),1.0);
_feda =_fa .Min (_fa .Max (_feda ,0),1.0);_ccefb [0]=uint32 (_abgf *_fbbfa );_ccefb [1]=uint32 (_bfad *_fbbfa );_ccefb [2]=uint32 (_feda *_fbbfa );if _eadg =_dadc .WriteSamples (_ccefb );_eadg !=nil {return img ,_eadg ;};};return _ebgdf (&_cbeae ),nil ;
};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fgdg pdfFontType3 )GetRuneMetrics (r rune )(_ad .CharMetrics ,bool ){_gfgca :=_fgdg .Encoder ();if _gfgca ==nil {_fd .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_fgdg );
return _ad .CharMetrics {},false ;};_bfdeb ,_ffae :=_gfgca .RuneToCharcode (r );if !_ffae {if r !=' '{_fd .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_fgdg );
};return _ad .CharMetrics {},false ;};_fbgg ,_agaab :=_fgdg .GetCharMetrics (_bfdeb );return _fbgg ,_agaab ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_bfb :=NewPdfAction ();_ab :=&PdfActionTrans {};_ab .PdfAction =_bfb ;_bfb .SetContext (_ab );return _ab ;};func _eafbg (_fdgd _gea .PdfObject )(*PdfPattern ,error ){_ffcb :=&PdfPattern {};var _gafga *_gea .PdfObjectDictionary ;
if _babed ,_egea :=_gea .GetIndirect (_fdgd );_egea {_ffcb ._bgcec =_babed ;_debf ,_gbgd :=_babed .PdfObject .(*_gea .PdfObjectDictionary );if !_gbgd {_fd .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_babed .PdfObject );
return nil ,_gea .ErrTypeError ;};_gafga =_debf ;}else if _dgbbd ,_ceeadg :=_gea .GetStream (_fdgd );_ceeadg {_ffcb ._bgcec =_dgbbd ;_gafga =_dgbbd .PdfObjectDictionary ;}else {_fd .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_fdgd );
return nil ,_gea .ErrTypeError ;};_cedafe :=_gafga .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _cedafe ==nil {_fd .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ggca ,_baeef :=_cedafe .(*_gea .PdfObjectInteger );if !_baeef {_fd .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cedafe );
return nil ,_gea .ErrTypeError ;};if *_ggca !=1&&*_ggca !=2{_fd .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_ggca );return nil ,_gea .ErrRangeError ;
};_ffcb .PatternType =int64 (*_ggca );switch *_ggca {case 1:_fcbfb ,_eecb :=_gfeca (_gafga );if _eecb !=nil {return nil ,_eecb ;};_fcbfb .PdfPattern =_ffcb ;_ffcb ._efgbe =_fcbfb ;return _ffcb ,nil ;case 2:_bbbec ,_dgdfc :=_eecaa (_gafga );if _dgdfc !=nil {return nil ,_dgdfc ;
};_bbbec .PdfPattern =_ffcb ;_ffcb ._efgbe =_bbbec ;return _ffcb ,nil ;};return nil ,_gg .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// AddOutlineTree adds outlines to a PDF file.
func (_begdg *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_begdg ._ecbgg =outlineTree };

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_aadb *PdfColorspaceICCBased )ToPdfObject ()_gea .PdfObject {_dfed :=&_gea .PdfObjectArray {};_dfed .Append (_gea .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _ffcee *_gea .PdfObjectStream ;if _aadb ._eeca !=nil {_ffcee =_aadb ._eeca ;
}else {_ffcee =&_gea .PdfObjectStream {};};_bdde :=_gea .MakeDict ();_bdde .Set ("\u004e",_gea .MakeInteger (int64 (_aadb .N )));if _aadb .Alternate !=nil {_bdde .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_aadb .Alternate .ToPdfObject ());};if _aadb .Metadata !=nil {_bdde .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_aadb .Metadata );
};if _aadb .Range !=nil {var _baff []_gea .PdfObject ;for _ ,_fddf :=range _aadb .Range {_baff =append (_baff ,_gea .MakeFloat (_fddf ));};_bdde .Set ("\u0052\u0061\u006eg\u0065",_gea .MakeArray (_baff ...));};_bdde .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gea .MakeInteger (int64 (len (_aadb .Data ))));
_ffcee .Stream =_aadb .Data ;_ffcee .PdfObjectDictionary =_bdde ;_dfed .Append (_ffcee );if _aadb ._adcg !=nil {_aadb ._adcg .PdfObject =_dfed ;return _aadb ._adcg ;};return _dfed ;};func _gafc (_dgcaa *_gea .PdfObjectDictionary )*VRI {_cgdc ,_ :=_gea .GetString (_dgcaa .Get ("\u0054\u0055"));
_bbbbg ,_ :=_gea .GetString (_dgcaa .Get ("\u0054\u0053"));return &VRI {Cert :_abafe (_dgcaa .Get ("\u0043\u0065\u0072\u0074")),OCSP :_abafe (_dgcaa .Get ("\u004f\u0043\u0053\u0050")),CRL :_abafe (_dgcaa .Get ("\u0043\u0052\u004c")),TU :_cgdc ,TS :_bbbbg };
};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// ToPdfObject implements interface PdfModel.
func (_fcd *PdfAnnotationText )ToPdfObject ()_gea .PdfObject {_fcd .PdfAnnotation .ToPdfObject ();_fbe :=_fcd ._bbf ;_abc :=_fbe .PdfObject .(*_gea .PdfObjectDictionary );if _fcd .PdfAnnotationMarkup !=nil {_fcd .PdfAnnotationMarkup .appendToPdfDictionary (_abc );
};_abc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0054\u0065\u0078\u0074"));_abc .SetIfNotNil ("\u004f\u0070\u0065\u006e",_fcd .Open );_abc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fcd .Name );_abc .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_fcd .State );
_abc .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_fcd .StateModel );return _fbe ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_gee :=NewPdfAnnotation ();_adda :=&PdfAnnotationPopup {};_adda .PdfAnnotation =_gee ;_gee .SetContext (_adda );return _adda ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _gea .PdfObject ;Popup *PdfAnnotationPopup ;CA _gea .PdfObject ;RC _gea .PdfObject ;CreationDate _gea .PdfObject ;IRT _gea .PdfObject ;Subj _gea .PdfObject ;RT _gea .PdfObject ;IT _gea .PdfObject ;ExData _gea .PdfObject ;
};func (_acfb *PdfReader )loadPerms ()(*Permissions ,error ){if _bbfcad :=_acfb ._cdda .Get ("\u0050\u0065\u0072m\u0073");_bbfcad !=nil {if _afdef ,_bfcfe :=_gea .GetDict (_bbfcad );_bfcfe {_deec :=_afdef .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");if _deec ==nil {return nil ,nil ;
};if _egcge ,_dcffd :=_gea .GetIndirect (_deec );_dcffd {_defg ,_fbafd :=_acfb .newPdfSignatureFromIndirect (_egcge );if _fbafd !=nil {return nil ,_fbafd ;};return NewPermissions (_defg ),nil ;};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");
};return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");};return nil ,nil ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _gea .PdfObject ;B _gea .PdfObject ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_add :=NewPdfAnnotation ();_dfb :=&PdfAnnotationInk {};_dfb .PdfAnnotation =_add ;_dfb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_add .SetContext (_dfb );return _dfb ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_edcdb *_gea .PdfParser ;_degdf _gea .PdfObject ;_ddefb *_gea .PdfIndirectObject ;_dbefe *_gea .PdfObjectDictionary ;_daega []*_gea .PdfIndirectObject ;PageList []*PdfPage ;_egfb int ;_cdda *_gea .PdfObjectDictionary ;_eageb *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_dbega *Permissions ;_cgcdfd map[*PdfReader ]*PdfReader ;_ceagg []*PdfReader ;_gace *modelManager ;_debgbb bool ;_gbef map[_gea .PdfObject ]struct{};_efged _cef .ReadSeeker ;_bgceb string ;_agcac bool ;_gffgc *ReaderOpts ;
_cgaf bool ;};func (_cfeb *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _cfeb ._edcdb .GetCrypter ()!=nil &&!_cfeb ._edcdb .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_eecbd :=_cfeb ._cdda ;_aedbd :=_eecbd .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _aedbd ==nil {return nil ,nil ;};_fd .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_dbcgb :=_gea .ResolveReference (_aedbd );
_fd .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_dbcgb );if _eagegd :=_gea .IsNullObject (_dbcgb );_eagegd {_fd .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_dgcda ,_gggbea :=_dbcgb .(*_gea .PdfIndirectObject );if !_gggbea {if _ ,_febcg :=_gea .GetDict (_dbcgb );!_febcg {_fd .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_fd .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_dgcda =_gea .MakeIndirectObject (_dbcgb );};_dfefa ,_gggbea :=_dgcda .PdfObject .(*_gea .PdfObjectDictionary );if !_gggbea {return nil ,_gg .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_fd .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_dfefa );_caefe ,_ ,_fagc :=_cfeb .buildOutlineTree (_dgcda ,nil ,nil ,nil );if _fagc !=nil {return nil ,_fagc ;};_fd .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_caefe );
return _caefe ,nil ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_babcb *PdfShading )GetContainingPdfObject ()_gea .PdfObject {return _babcb ._adae };

// SetAnnotations sets the annotations list.
func (_beaac *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_beaac ._egffb =annotations };

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_gea .PdfObject ;GetContainingPdfObject ()_gea .PdfObject ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_aacd *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_fcdee :=NewPdfOutlineItem ();_fcdee .Title =_gea .MakeEncodedString (_aacd .Title ,true );_fcdee .Dest =_aacd .Dest .ToPdfObject ();var _ffdcc []*PdfOutlineItem ;var _gbfee int64 ;
var _begd *PdfOutlineItem ;for _ ,_gcfeb :=range _aacd .Entries {_abae ,_gcefc :=_gcfeb .ToPdfOutlineItem ();_abae .Parent =&_fcdee .PdfOutlineTreeNode ;if _begd !=nil {_begd .Next =&_abae .PdfOutlineTreeNode ;_abae .Prev =&_begd .PdfOutlineTreeNode ;};
_ffdcc =append (_ffdcc ,_abae );_gbfee +=_gcefc ;_begd =_abae ;};_ccce :=len (_ffdcc );_gbfee +=int64 (_ccce );if _ccce > 0{_fcdee .First =&_ffdcc [0].PdfOutlineTreeNode ;_fcdee .Last =&_ffdcc [_ccce -1].PdfOutlineTreeNode ;_fcdee .Count =&_gbfee ;};return _fcdee ,_gbfee ;
};func (_beff *PdfReader )newPdfAnnotationCircleFromDict (_fece *_gea .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_bbbb :=PdfAnnotationCircle {};_cadg ,_bgd :=_beff .newPdfAnnotationMarkupFromDict (_fece );if _bgd !=nil {return nil ,_bgd ;};_bbbb .PdfAnnotationMarkup =_cadg ;
_bbbb .BS =_fece .Get ("\u0042\u0053");_bbbb .IC =_fece .Get ("\u0049\u0043");_bbbb .BE =_fece .Get ("\u0042\u0045");_bbbb .RD =_fece .Get ("\u0052\u0044");return &_bbbb ,nil ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_caab *PdfPageResources )SetXObjectByName (keyName _gea .PdfObjectName ,stream *_gea .PdfObjectStream )error {if _caab .XObject ==nil {_caab .XObject =_gea .MakeDict ();};_afcae :=_gea .TraceToDirectObject (_caab .XObject );_dccgaa ,_ddgeg :=_afcae .(*_gea .PdfObjectDictionary );
if !_ddgeg {_fd .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_caab .XObject ,_afcae );return _gg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_dccgaa .Set (keyName ,stream );return nil ;};func (_ggadb *PdfWriter )writeString (_dcffg string ){if _ggadb ._ebcdb !=nil {return ;};_dcgfd ,_bdada :=_ggadb ._ccfd .WriteString (_dcffg );_ggadb ._acaace +=int64 (_dcgfd );_ggadb ._ebcdb =_bdada ;};

// ParsePdfObject parses input pdf object into given output intent.
func (_gdcfe *PdfOutputIntent )ParsePdfObject (object _gea .PdfObject )error {_gcce ,_aefdd :=_gea .GetDict (object );if !_aefdd {_fd .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _gg .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_gdcfe ._ecfbg =_gcce ;_gdcfe .Type ,_ =_gcce .GetString ("\u0054\u0079\u0070\u0065");_dddg ,_aefdd :=_gcce .GetString ("\u0053");if _aefdd {switch _dddg {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_gdcfe .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_gdcfe .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_gdcfe .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_gdcfe .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_gdcfe .S =PdfOutputIntentTypeX ;
};};_gdcfe .OutputCondition ,_ =_gcce .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_gdcfe .OutputConditionIdentifier ,_ =_gcce .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_gdcfe .RegistryName ,_ =_gcce .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_gdcfe .Info ,_ =_gcce .GetString ("\u0049\u006e\u0066\u006f");if _gadaf ,_fadg :=_gea .GetStream (_gcce .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_fadg {_gdcfe .ColorComponents ,_ =_gea .GetIntVal (_gadaf .Get ("\u004e"));_aabg ,_bgeb :=_gea .DecodeStream (_gadaf );if _bgeb !=nil {return _bgeb ;};_gdcfe .DestOutputProfile =_aabg ;};return nil ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gea .PdfObject ;};func (_fbeac fontCommon )coreString ()string {_gefc :="";if _fbeac ._baffg !=nil {_gefc =_fbeac ._baffg .String ();};return _e .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_fbeac ._abed ,_fbeac ._cacc ,_fbeac ._aeaf ,_fbeac ._fceb ,_fbeac ._bbeaa !=nil ,_fbeac .fontFlags (),_gefc );
};

// Y returns the value of the yellow component of the color.
func (_beace *PdfColorDeviceCMYK )Y ()float64 {return _beace [2]};

// B returns the value of the B component of the color.
func (_ccaed *PdfColorLab )B ()float64 {return _ccaed [2]};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_ccdea *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_fbfc :=_ed .NewReader (img .getBase ());_afg :=_deg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_ccdea .AlternateSpace .GetNumComponents (),nil ,img ._bdbf ,nil );
_abbd :=_ed .NewWriter (_afg );_bgfbg :=_fa .Pow (2,float64 (img .BitsPerComponent ))-1;_fd .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_fd .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_ccdea .TintTransform );_ffdg :=_ccdea .AlternateSpace .DecodeArray ();var (_egdd uint32 ;_acbe error ;);for {_egdd ,_acbe =_fbfc .ReadSample ();
if _acbe ==_cef .EOF {break ;};if _acbe !=nil {return img ,_acbe ;};_egge :=float64 (_egdd )/_bgfbg ;_bgbfa ,_aadce :=_ccdea .TintTransform .Evaluate ([]float64 {_egge });if _aadce !=nil {return img ,_aadce ;};for _bbdd ,_ddgcg :=range _bgbfa {_dfbb :=_deg .LinearInterpolate (_ddgcg ,_ffdg [_bbdd *2],_ffdg [_bbdd *2+1],0,1);
if _aadce =_abbd .WriteSample (uint32 (_dfbb *_bgfbg ));_aadce !=nil {return img ,_aadce ;};};};return _ccdea .AlternateSpace .ImageToRGB (_ebgdf (&_afg ));};func (_ceeb *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _ceeb ._baffg };

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_bfddg :=PdfPage {};_bfddg ._acebb =_gea .MakeDict ();_bfddg .Resources =NewPdfPageResources ();_cbade :=_gea .PdfIndirectObject {};_cbade .PdfObject =_bfddg ._acebb ;_bfddg ._gfgfdc =&_cbade ;_bfddg ._bffef =*_bfddg ._acebb ;
return &_bfddg ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_fbeab *VRI )ToPdfObject ()*_gea .PdfObjectDictionary {_fcdeb :=_gea .MakeDict ();_fcdeb .SetIfNotNil (_gea .PdfObjectName ("\u0043\u0065\u0072\u0074"),_beffe (_fbeab .Cert ));_fcdeb .SetIfNotNil (_gea .PdfObjectName ("\u004f\u0043\u0053\u0050"),_beffe (_fbeab .OCSP ));
_fcdeb .SetIfNotNil (_gea .PdfObjectName ("\u0043\u0052\u004c"),_beffe (_fbeab .CRL ));_fcdeb .SetIfNotNil ("\u0054\u0055",_fbeab .TU );_fcdeb .SetIfNotNil ("\u0054\u0053",_fbeab .TS );return _fcdeb ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_dfacb *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// GetCharMetrics returns the char metrics for character code `code`.
func (_egagb pdfFontType3 )GetCharMetrics (code _ceb .CharCode )(_ad .CharMetrics ,bool ){if _bfdbg ,_abddc :=_egagb ._cgcae [code ];_abddc {return _ad .CharMetrics {Wx :_bfdbg },true ;};if _ad .IsStdFont (_ad .StdFontName (_egagb ._cacc )){return _ad .CharMetrics {Wx :250},true ;
};return _ad .CharMetrics {},false ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _gea .PdfObject ;Flags _gea .PdfObject ;};

// Encoder returns the font's text encoder.
func (_cefdc pdfFontType0 )Encoder ()_ceb .TextEncoder {return _cefdc ._dgaaf };

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_ggba int ,_gedf *PdfPage )error ;

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_cfgce *PdfReader )GetPageLabels ()(_gea .PdfObject ,error ){_gbdgd :=_gea .ResolveReference (_cfgce ._cdda .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _gbdgd ==nil {return nil ,nil ;};if !_cfgce ._debgbb {_badc :=_cfgce .traverseObjectData (_gbdgd );
if _badc !=nil {return nil ,_badc ;};};return _gbdgd ,nil ;};func (_bggab *PdfWriter )mapObjectStreams (_gcead bool )(map[_gea .PdfObject ]bool ,bool ){_adfg :=make (map[_gea .PdfObject ]bool );for _ ,_fcddf :=range _bggab ._aeaa {if _fbaae ,_cdgbgf :=_fcddf .(*_gea .PdfObjectStreams );
_cdgbgf {_gcead =true ;for _ ,_bcege :=range _fbaae .Elements (){_adfg [_bcege ]=true ;if _dggf ,_fega :=_bcege .(*_gea .PdfIndirectObject );_fega {_adfg [_dggf .PdfObject ]=true ;};};};};return _adfg ,_gcead ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};func _bbbda (_egcdc *_gea .PdfObjectDictionary )(*PdfShadingType6 ,error ){_fddca :=PdfShadingType6 {};_ddfe :=_egcdc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _ddfe ==nil {_fd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ffced ,_eddbf :=_ddfe .(*_gea .PdfObjectInteger );if !_eddbf {_fd .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ddfe );
return nil ,_gea .ErrTypeError ;};_fddca .BitsPerCoordinate =_ffced ;_ddfe =_egcdc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ddfe ==nil {_fd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ffced ,_eddbf =_ddfe .(*_gea .PdfObjectInteger );if !_eddbf {_fd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ddfe );
return nil ,_gea .ErrTypeError ;};_fddca .BitsPerComponent =_ffced ;_ddfe =_egcdc .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _ddfe ==nil {_fd .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ffced ,_eddbf =_ddfe .(*_gea .PdfObjectInteger );if !_eddbf {_fd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ddfe );
return nil ,_gea .ErrTypeError ;};_fddca .BitsPerComponent =_ffced ;_ddfe =_egcdc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ddfe ==nil {_fd .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fcefe ,_eddbf :=_ddfe .(*_gea .PdfObjectArray );if !_eddbf {_fd .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ddfe );
return nil ,_gea .ErrTypeError ;};_fddca .Decode =_fcefe ;if _eedeb :=_egcdc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_eedeb !=nil {_fddca .Function =[]PdfFunction {};if _gfeef ,_bbdcg :=_eedeb .(*_gea .PdfObjectArray );_bbdcg {for _ ,_bceec :=range _gfeef .Elements (){_beeae ,_edagbc :=_adggc (_bceec );
if _edagbc !=nil {_fd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_edagbc );return nil ,_edagbc ;};_fddca .Function =append (_fddca .Function ,_beeae );
};}else {_dbafe ,_bagfea :=_adggc (_eedeb );if _bagfea !=nil {_fd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bagfea );return nil ,_bagfea ;
};_fddca .Function =append (_fddca .Function ,_dbafe );};};return &_fddca ,nil ;};func (_eedd *PdfReader )newPdfAnnotationFileAttachmentFromDict (_bagg *_gea .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_dddce :=PdfAnnotationFileAttachment {};
_ccab ,_ffd :=_eedd .newPdfAnnotationMarkupFromDict (_bagg );if _ffd !=nil {return nil ,_ffd ;};_dddce .PdfAnnotationMarkup =_ccab ;_dddce .FS =_bagg .Get ("\u0046\u0053");_dddce .Name =_bagg .Get ("\u004e\u0061\u006d\u0065");return &_dddce ,nil ;};func _dbde (_ffeaad _gea .PdfObject )(string ,error ){_ffeaad =_gea .TraceToDirectObject (_ffeaad );
switch _fdbaa :=_ffeaad .(type ){case *_gea .PdfObjectString :return _fdbaa .Str (),nil ;case *_gea .PdfObjectStream :_bbbdd ,_dbfge :=_gea .DecodeStream (_fdbaa );if _dbfge !=nil {return "",_dbfge ;};return string (_bbbdd ),nil ;};return "",_e .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_ffeaad );
};

// String returns a string describing the font descriptor.
func (_gbbe *PdfFontDescriptor )String ()string {var _fddb []string ;if _gbbe .FontName !=nil {_fddb =append (_fddb ,_gbbe .FontName .String ());};if _gbbe .FontFamily !=nil {_fddb =append (_fddb ,_gbbe .FontFamily .String ());};if _gbbe .fontFile !=nil {_fddb =append (_fddb ,_gbbe .fontFile .String ());
};if _gbbe ._cdd !=nil {_fddb =append (_fddb ,_gbbe ._cdd .String ());};_fddb =append (_fddb ,_e .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_gbbe .FontFile3 !=nil ));return _e .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_aa .Join (_fddb ,"\u002c\u0020"));
};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_aefdbd .Lock ();defer _aefdbd .Unlock ();_dacgb =producer };

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_gdbgb *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};func (_gad *PdfReader )newPdfAnnotationStrikeOut (_bcb *_gea .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_ccca :=PdfAnnotationStrikeOut {};
_dddc ,_egbf :=_gad .newPdfAnnotationMarkupFromDict (_bcb );if _egbf !=nil {return nil ,_egbf ;};_ccca .PdfAnnotationMarkup =_dddc ;_ccca .QuadPoints =_bcb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_ccca ,nil ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_eac :=NewPdfAnnotation ();_ccbg :=&PdfAnnotationWidget {};_ccbg .PdfAnnotation =_eac ;_eac .SetContext (_ccbg );return _ccbg ;};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _gea .PdfObject )(*PdfOutputIntent ,error ){_cffb :=&PdfOutputIntent {};if _dgacb :=_cffb .ParsePdfObject (object );_dgacb !=nil {return nil ,_dgacb ;};return _cffb ,nil ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_ebecc *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _ebecc .Alternate ==nil {_fd .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _ebecc .N ==1{_fd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_bddg :=NewPdfColorspaceDeviceGray ();return _bddg .ImageToRGB (img );}else if _ebecc .N ==3{_fd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _ebecc .N ==4{_fd .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_fddg :=NewPdfColorspaceDeviceCMYK ();return _fddg .ImageToRGB (img );}else {return img ,_gg .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_fd .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_ebecc );
_ecefc ,_fafb :=_ebecc .Alternate .ImageToRGB (img );_fd .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_fd .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_ecefc );
return _ecefc ,_fafb ;};func (_ecf *PdfAnnotation )String ()string {_aaea :="";_gae ,_degd :=_ecf .ToPdfObject ().(*_gea .PdfIndirectObject );if _degd {_aaea =_e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ecf ._fag ,_gae .PdfObject .String ());};
return _aaea ;};func _bgccdf (_bebfe *_gea .PdfObjectArray )(float64 ,error ){_cbgad ,_bbcge :=_bebfe .ToFloat64Array ();if _bbcge !=nil {_fd .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bebfe ,_bbcge );
};switch len (_cbgad ){case 1:return _cbgad [0],nil ;case 3:_ffde :=PdfColorspaceDeviceRGB {};_cfgbb ,_ecebd :=_ffde .ColorFromFloats (_cbgad );if _ecebd !=nil {return 0.0,_ecebd ;};return _cfgbb .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_bgffgg :=PdfColorspaceDeviceCMYK {};
_dgfdd ,_efaab :=_bgffgg .ColorFromFloats (_cbgad );if _efaab !=nil {return 0.0,_efaab ;};_cebad ,_efaab :=_bgffgg .ColorToRGB (_dgfdd .(*PdfColorDeviceCMYK ));if _efaab !=nil {return 0.0,_efaab ;};return _cebad .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;
};_bbcge =_gg .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_fd .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bebfe ,_bbcge );
return 0.0,_bbcge ;};

// PdfVersion returns version of the PDF file.
func (_eege *PdfReader )PdfVersion ()_gea .Version {return _eege ._edcdb .PdfVersion ()};

// C returns the value of the cyan component of the color.
func (_gadg *PdfColorDeviceCMYK )C ()float64 {return _gadg [0]};func (_gfe *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;func (_dccb *PdfFunctionType0 )processSamples ()error {_ccgbfa :=_ed .ResampleBytes (_dccb ._feeda ,_dccb .BitsPerSample );_dccb ._fdfad =_ccgbfa ;return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_deacf *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _deacf .Alternate ==nil {if _deacf .N ==1{_gcfg :=NewPdfColorspaceDeviceGray ();return _gcfg .ColorFromFloats (vals );}else if _deacf .N ==3{_agdc :=NewPdfColorspaceDeviceRGB ();
return _agdc .ColorFromFloats (vals );}else if _deacf .N ==4{_bdbg :=NewPdfColorspaceDeviceCMYK ();return _bdbg .ColorFromFloats (vals );}else {return nil ,_gg .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _deacf .Alternate .ColorFromFloats (vals );};func (_abbff *PdfWriter )optimizeDocument ()error {if _abbff ._abfbb ==nil {return nil ;};_efceg ,_afgga :=_gea .GetDict (_abbff ._efabg );if !_afgga {return _gg .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_agggg :=_eg .Document {ID :[2]string {_abbff ._dgfabb ,_abbff ._ebcad },Version :_abbff ._fedce ,Objects :_abbff ._aeaa ,Info :_efceg ,Crypt :_abbff ._fecea ,UseHashBasedID :_abbff ._edfge };if _bcgag :=_abbff ._abfbb .ApplyStandard (&_agggg );_bcgag !=nil {return _bcgag ;
};_abbff ._dgfabb ,_abbff ._ebcad =_agggg .ID [0],_agggg .ID [1];_abbff ._fedce =_agggg .Version ;_abbff ._aeaa =_agggg .Objects ;_abbff ._efabg .PdfObject =_agggg .Info ;_abbff ._edfge =_agggg .UseHashBasedID ;_abbff ._fecea =_agggg .Crypt ;_dcab :=make (map[_gea .PdfObject ]struct{},len (_abbff ._aeaa ));
for _ ,_bcabe :=range _abbff ._aeaa {_dcab [_bcabe ]=struct{}{};};_abbff ._edfdb =_dcab ;return nil ;};

// String returns the name of the colorspace (DeviceN).
func (_aebc *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};func (_dbgdc *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _dbgdc ._baffg };

// ToPdfObject implements interface PdfModel.
func (_ccbb *PdfSignature )ToPdfObject ()_gea .PdfObject {_ecce :=_ccbb ._dagb ;var _gdgdgf *_gea .PdfObjectDictionary ;if _cfffc ,_bcecc :=_ecce .PdfObject .(*pdfSignDictionary );_bcecc {_gdgdgf =_cfffc .PdfObjectDictionary ;}else {_gdgdgf =_ecce .PdfObject .(*_gea .PdfObjectDictionary );
};_gdgdgf .SetIfNotNil ("\u0054\u0079\u0070\u0065",_ccbb .Type );_gdgdgf .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_ccbb .Filter );_gdgdgf .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_ccbb .SubFilter );_gdgdgf .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_ccbb .ByteRange );
_gdgdgf .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_ccbb .Contents );_gdgdgf .SetIfNotNil ("\u0043\u0065\u0072\u0074",_ccbb .Cert );_gdgdgf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ccbb .Name );_gdgdgf .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_ccbb .Reason );
_gdgdgf .SetIfNotNil ("\u004d",_ccbb .M );_gdgdgf .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_ccbb .Reference );_gdgdgf .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_ccbb .Changes );_gdgdgf .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_ccbb .ContactInfo );
return _ecce ;};func (_dgb *PdfReader )newPdfActionTransFromDict (_cgf *_gea .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_cgf .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};func (_babad *LTV )generateVRIKey (_facbb *PdfSignature )(string ,error ){_fecgf ,_becf :=_fefbb (_facbb .Contents .Bytes ());if _becf !=nil {return "",_becf ;};return _aa .ToUpper (_gb .EncodeToString (_fecgf )),nil ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_dfcf *PdfFieldButton )ToPdfObject ()_gea .PdfObject {_dfcf .PdfField .ToPdfObject ();_afefd :=_dfcf ._bcga ;_cfdgb :=_afefd .PdfObject .(*_gea .PdfObjectDictionary );_cfdgb .Set ("\u0046\u0054",_gea .MakeName ("\u0042\u0074\u006e"));if _dfcf .Opt !=nil {_cfdgb .Set ("\u004f\u0070\u0074",_dfcf .Opt );
};return _afefd ;};

// Encoder returns the font's text encoder.
func (_feag *pdfFontSimple )Encoder ()_ceb .TextEncoder {if _feag ._egaa !=nil {return _feag ._egaa ;};if _feag ._cdggf !=nil {return _feag ._cdggf ;};_beeb ,_ :=_ceb .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _beeb ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_gfbd FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_gfbd .Mask ()|fl .Mask ())};

// AddExtGState adds a graphics state to the XObject resources.
func (_aagce *PdfPage )AddExtGState (name _gea .PdfObjectName ,egs *_gea .PdfObjectDictionary )error {if _aagce .Resources ==nil {_aagce .Resources =NewPdfPageResources ();};if _aagce .Resources .ExtGState ==nil {_aagce .Resources .ExtGState =_gea .MakeDict ();
};_adcgg ,_becbc :=_gea .TraceToDirectObject (_aagce .Resources .ExtGState ).(*_gea .PdfObjectDictionary );if !_becbc {_fd .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_gea .TraceToDirectObject (_aagce .Resources .ExtGState ));
return _gg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_adcgg .Set (name ,egs );return nil ;};func (_cgb *PdfReader )newPdfAnnotationSquigglyFromDict (_dafb *_gea .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_bfa :=PdfAnnotationSquiggly {};
_dfde ,_ageg :=_cgb .newPdfAnnotationMarkupFromDict (_dafb );if _ageg !=nil {return nil ,_ageg ;};_bfa .PdfAnnotationMarkup =_dfde ;_bfa .QuadPoints =_dafb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bfa ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_gebg *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_gea .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdgc ,_bacag :=_gea .GetNumbersAsFloat (objects );
if _bacag !=nil {return nil ,_bacag ;};return _gebg .ColorFromFloats (_cdgc );};

// ToPdfObject returns the PDF representation of the function.
func (_edded *PdfFunctionType4 )ToPdfObject ()_gea .PdfObject {_feccb :=_edded ._abec ;if _feccb ==nil {_edded ._abec =&_gea .PdfObjectStream {};_feccb =_edded ._abec ;};_gcdfbf :=_gea .MakeDict ();_gcdfbf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gea .MakeInteger (4));
_agbb :=&_gea .PdfObjectArray {};for _ ,_befg :=range _edded .Domain {_agbb .Append (_gea .MakeFloat (_befg ));};_gcdfbf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_agbb );_ccgca :=&_gea .PdfObjectArray {};for _ ,_cegac :=range _edded .Range {_ccgca .Append (_gea .MakeFloat (_cegac ));
};_gcdfbf .Set ("\u0052\u0061\u006eg\u0065",_ccgca );if _edded ._fceg ==nil &&_edded .Program !=nil {_edded ._fceg =[]byte (_edded .Program .String ());};_gcdfbf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gea .MakeInteger (int64 (len (_edded ._fceg ))));
_feccb .Stream =_edded ._fceg ;_feccb .PdfObjectDictionary =_gcdfbf ;return _feccb ;};func (_fdgde *PdfShading )getShadingDict ()(*_gea .PdfObjectDictionary ,error ){_baagc :=_fdgde ._adae ;if _acaf ,_fddgd :=_baagc .(*_gea .PdfIndirectObject );_fddgd {_eefcg ,_acbda :=_acaf .PdfObject .(*_gea .PdfObjectDictionary );
if !_acbda {return nil ,_gea .ErrTypeError ;};return _eefcg ,nil ;}else if _afbfe ,_efec :=_baagc .(*_gea .PdfObjectStream );_efec {return _afbfe .PdfObjectDictionary ,nil ;}else if _fbdbe ,_beaaec :=_baagc .(*_gea .PdfObjectDictionary );_beaaec {return _fbdbe ,nil ;
}else {_fd .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_gea .ErrTypeError ;};};func (_gcfcg *PdfReader )newPdfActionGotoFromDict (_ccf *_gea .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_ccf .Get ("\u0044")},nil ;
};

// SetName sets the `Name` field of the signature.
func (_cbdf *PdfSignature )SetName (name string ){_cbdf .Name =_gea .MakeString (name )};func _dccda (_befdb string )(string ,error ){var _bedeg _ddg .Buffer ;_bedeg .WriteString (_befdb );_ceaecf :=make ([]byte ,8+16);_cfgcd :=_g .Now ().UTC ().UnixNano ();
_ca .BigEndian .PutUint64 (_ceaecf ,uint64 (_cfgcd ));_ ,_bbafb :=_gba .Read (_ceaecf [8:]);if _bbafb !=nil {return "",_bbafb ;};_bedeg .WriteString (_gb .EncodeToString (_ceaecf ));return _bedeg .String (),nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_bbbf *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_bbbf .Base .GetNumComponents ();_bfcbg :=int (vals [0])*N ;
if _bfcbg < 0||(_bfcbg +N -1)>=len (_bbbf ._dbdg ){_fd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bfcbg );return nil ,ErrColorOutOfRange ;};_bbcca :=_bbbf ._dbdg [_bfcbg :_bfcbg +N ];
var _aaeef []float64 ;for _ ,_bfgf :=range _bbcca {_aaeef =append (_aaeef ,float64 (_bfgf )/255.0);};_cbga ,_ggec :=_bbbf .Base .ColorFromFloats (_aaeef );if _ggec !=nil {return nil ,_ggec ;};return _cbga ,nil ;};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_cfbdd *PdfSignature )GetDocMDPPermission ()(_gbf .DocMDPPermission ,bool ){for _ ,_fccgc :=range _cfbdd .Reference .Elements (){if _afdd ,_fcaa :=_gea .GetDict (_fccgc );_fcaa {if _gefa ,_ccdff :=_gea .GetNameVal (_afdd .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_ccdff &&_gefa =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _efdce ,_fagdf :=_gea .GetDict (_afdd .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_fagdf {if P ,_aaabd :=_gea .GetIntVal (_efdce .Get ("\u0050"));
_aaabd {return _gbf .DocMDPPermission (P ),true ;};};};};};return 0,false ;};func (_gcaff *PdfWriter )writeXRefStreams (_dageg int ,_ccaga int64 )error {_abcg :=_dageg +1;_gcaff ._aebaa [_abcg ]=crossReference {Type :1,ObjectNumber :_abcg ,Offset :_ccaga };
_beeed :=_ddg .NewBuffer (nil );_dadabf :=_gea .MakeArray ();for _bedab :=0;_bedab <=_dageg ;{for ;_bedab <=_dageg ;_bedab ++{_bbccf ,_gbebf :=_gcaff ._aebaa [_bedab ];if _gbebf &&(!_gcaff ._abaff ||_gcaff ._abaff &&(_bbccf .Type ==1&&_bbccf .Offset >=_gcaff ._gcba ||_bbccf .Type ==0)){break ;
};};var _cfde int ;for _cfde =_bedab +1;_cfde <=_dageg ;_cfde ++{_aaae ,_fgaaf :=_gcaff ._aebaa [_cfde ];if _fgaaf &&(!_gcaff ._abaff ||_gcaff ._abaff &&(_aaae .Type ==1&&_aaae .Offset > _gcaff ._gcba )){continue ;};break ;};_dadabf .Append (_gea .MakeInteger (int64 (_bedab )),_gea .MakeInteger (int64 (_cfde -_bedab )));
for _gdagc :=_bedab ;_gdagc < _cfde ;_gdagc ++{_bebab :=_gcaff ._aebaa [_gdagc ];switch _bebab .Type {case 0:_ca .Write (_beeed ,_ca .BigEndian ,byte (0));_ca .Write (_beeed ,_ca .BigEndian ,uint32 (0));_ca .Write (_beeed ,_ca .BigEndian ,uint16 (0xFFFF));
case 1:_ca .Write (_beeed ,_ca .BigEndian ,byte (1));_ca .Write (_beeed ,_ca .BigEndian ,uint32 (_bebab .Offset ));_ca .Write (_beeed ,_ca .BigEndian ,uint16 (_bebab .Generation ));case 2:_ca .Write (_beeed ,_ca .BigEndian ,byte (2));_ca .Write (_beeed ,_ca .BigEndian ,uint32 (_bebab .ObjectNumber ));
_ca .Write (_beeed ,_ca .BigEndian ,uint16 (_bebab .Index ));};};_bedab =_cfde +1;};_ffda ,_ggebb :=_gea .MakeStream (_beeed .Bytes (),_gea .NewFlateEncoder ());if _ggebb !=nil {return _ggebb ;};_ffda .ObjectNumber =int64 (_abcg );_ffda .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_gea .MakeName ("\u0058\u0052\u0065\u0066"));
_ffda .PdfObjectDictionary .Set ("\u0057",_gea .MakeArray (_gea .MakeInteger (1),_gea .MakeInteger (4),_gea .MakeInteger (2)));_ffda .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_dadabf );_ffda .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_gea .MakeInteger (int64 (_abcg +1)));
_ffda .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_gcaff ._efabg );_ffda .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_gcaff ._bcbed );if _gcaff ._abaff &&_gcaff ._dfdea > 0{_ffda .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_gea .MakeInteger (_gcaff ._dfdea ));
};if _gcaff ._fecea !=nil {_ffda .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_gcaff ._caaaa );};if _gcaff ._bdgfbe ==nil &&_gcaff ._dgfabb !=""&&_gcaff ._ebcad !=""{_gcaff ._bdgfbe =_gea .MakeArray (_gea .MakeHexString (_gcaff ._dgfabb ),_gea .MakeHexString (_gcaff ._ebcad ));
};if _gcaff ._bdgfbe !=nil {_fd .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_gcaff ._bdgfbe );_ffda .Set ("\u0049\u0044",_gcaff ._bdgfbe );};_gcaff .writeObject (int (_ffda .ObjectNumber ),_ffda );return nil ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_gea .PdfIndirectObject ;SV *_gea .PdfIndirectObject ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};func (_eeda *pdfFontType0 )bytesToCharcodes (_bcabg []byte )([]_ceb .CharCode ,bool ){if _eeda ._caddc ==nil {return nil ,false ;
};_dcadg ,_cfeag :=_eeda ._caddc .BytesToCharcodes (_bcabg );if !_cfeag {return nil ,false ;};_beab :=make ([]_ceb .CharCode ,len (_dcadg ));for _abbc ,_gceb :=range _dcadg {_beab [_abbc ]=_ceb .CharCode (_gceb );};return _beab ,true ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_gea .PdfObjectString ;Author *_gea .PdfObjectString ;Subject *_gea .PdfObjectString ;Keywords *_gea .PdfObjectString ;Creator *_gea .PdfObjectString ;Producer *_gea .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;
Trapped *_gea .PdfObjectName ;_geda *_gea .PdfObjectDictionary ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_bbb :=&PdfAction {};_bbb ._af =_gea .MakeIndirectObject (_gea .MakeDict ());return _bbb ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_ddc :=NewPdfAction ();_bgc :=&PdfActionSetOCGState {};_bgc .PdfAction =_ddc ;_ddc .SetContext (_bgc );return _bgc ;};func _dgbd (_dadfg *_gea .PdfObjectDictionary )(*PdfShadingType2 ,error ){_gdbfg :=PdfShadingType2 {};
_afdba :=_dadfg .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _afdba ==nil {_fd .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_aged ,_gdege :=_afdba .(*_gea .PdfObjectArray );if !_gdege {_fd .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_afdba );
return nil ,_gg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _aged .Len ()!=4{_fd .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_aged .Len ());
return nil ,_gg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_gdbfg .Coords =_aged ;if _bgead :=_dadfg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bgead !=nil {_bgead =_gea .TraceToDirectObject (_bgead );
_fdfc ,_bdgagd :=_bgead .(*_gea .PdfObjectArray );if !_bdgagd {_fd .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bgead );return nil ,_gg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_gdbfg .Domain =_fdfc ;};_afdba =_dadfg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _afdba ==nil {_fd .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gdbfg .Function =[]PdfFunction {};if _dabgg ,_ebadb :=_afdba .(*_gea .PdfObjectArray );_ebadb {for _ ,_gcge :=range _dabgg .Elements (){_gfgcf ,_gcbcf :=_adggc (_gcge );if _gcbcf !=nil {_fd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gcbcf );
return nil ,_gcbcf ;};_gdbfg .Function =append (_gdbfg .Function ,_gfgcf );};}else {_acaac ,_gcad :=_adggc (_afdba );if _gcad !=nil {_fd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gcad );
return nil ,_gcad ;};_gdbfg .Function =append (_gdbfg .Function ,_acaac );};if _gfba :=_dadfg .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_gfba !=nil {_gfba =_gea .TraceToDirectObject (_gfba );_dcdgf ,_befee :=_gfba .(*_gea .PdfObjectArray );if !_befee {_fd .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gfba );
return nil ,_gea .ErrTypeError ;};if _dcdgf .Len ()!=2{_fd .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dcdgf .Len ());return nil ,ErrInvalidAttribute ;
};_gdbfg .Extend =_dcdgf ;};return &_gdbfg ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_gggg *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_baefc :=vals [0];if _baefc < 0.0||_baefc > 1.0{_fd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_baefc );
return nil ,ErrColorOutOfRange ;};_ccbef :=vals [1];if _ccbef < 0.0||_ccbef > 1.0{_fd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ccbef );return nil ,ErrColorOutOfRange ;
};_acgc :=vals [2];if _acgc < 0.0||_acgc > 1.0{_fd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_acgc );return nil ,ErrColorOutOfRange ;};_cfabe :=NewPdfColorCalRGB (_baefc ,_ccbef ,_acgc );
return _cfabe ,nil ;};func (_eeagc *PdfWriter )writeObjectsInStreams (_fcdef map[_gea .PdfObject ]bool )error {for _ ,_efdca :=range _eeagc ._aeaa {if _dabdf :=_fcdef [_efdca ];_dabdf {continue ;};_agcea :=int64 (0);switch _gaddf :=_efdca .(type ){case *_gea .PdfIndirectObject :_agcea =_gaddf .ObjectNumber ;
case *_gea .PdfObjectStream :_agcea =_gaddf .ObjectNumber ;case *_gea .PdfObjectStreams :_agcea =_gaddf .ObjectNumber ;default:_fd .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_efdca );
return ErrTypeCheck ;};if _eeagc ._fecea !=nil &&_efdca !=_eeagc ._caaaa {_dgegf :=_eeagc ._fecea .Encrypt (_efdca ,_agcea ,0);if _dgegf !=nil {_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_dgegf );
return _dgegf ;};};_eeagc .writeObject (int (_agcea ),_efdca );};return nil ;};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_bdca PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_gea .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_aacfc []_gea .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_gade []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// ToPdfObject implements interface PdfModel.
func (_def *PdfActionGoTo )ToPdfObject ()_gea .PdfObject {_def .PdfAction .ToPdfObject ();_cab :=_def ._af ;_egg :=_cab .PdfObject .(*_gea .PdfObjectDictionary );_egg .SetIfNotNil ("\u0053",_gea .MakeName (string (ActionTypeGoTo )));_egg .SetIfNotNil ("\u0044",_def .D );
return _cab ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_bdddf *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_gedgf :=RC4_128bit ;if options !=nil {_gedgf =options .Algorithm ;};_cadec :=_gcf .PermOwner ;if options !=nil {_cadec =options .Permissions ;};var _gbfdcc _ddgg .Filter ;
switch _gedgf {case RC4_128bit :_gbfdcc =_ddgg .NewFilterV2 (16);case AES_128bit :_gbfdcc =_ddgg .NewFilterAESV2 ();case AES_256bit :_gbfdcc =_ddgg .NewFilterAESV3 ();default:return _e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_dbefg ,_bgbd ,_agbaa :=_gea .PdfCryptNewEncrypt (_gbfdcc ,userPass ,ownerPass ,_cadec );if _agbaa !=nil {return _agbaa ;};_bdddf ._fecea =_dbefg ;if _bgbd .Major !=0{_bdddf .SetVersion (_bgbd .Major ,_bgbd .Minor );};_bdddf ._adgga =_bgbd .Encrypt ;
_bdddf ._dgfabb ,_bdddf ._ebcad =_bgbd .ID0 ,_bgbd .ID1 ;_ecedcd :=_gea .MakeIndirectObject (_bgbd .Encrypt );_bdddf ._caaaa =_ecedcd ;_bdddf .addObject (_ecedcd );return nil ;};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_ecfbg :_gea .MakeDict (),ColorComponents :colorComponents };
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_fbcc *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbf :=vals [0];if _dbf < 0.0||_dbf > 1.0{_fd .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _dbf < 0.0{_dbf =0.0;}else if _dbf > 1.0{_dbf =1.0;};return NewPdfColorDeviceGray (_dbf ),nil ;};

// ToPdfObject implements interface PdfModel.
func (_acea *PdfAnnotationCaret )ToPdfObject ()_gea .PdfObject {_acea .PdfAnnotation .ToPdfObject ();_dded :=_acea ._bbf ;_fdb :=_dded .PdfObject .(*_gea .PdfObjectDictionary );_acea .PdfAnnotationMarkup .appendToPdfDictionary (_fdb );_fdb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0043\u0061\u0072e\u0074"));
_fdb .SetIfNotNil ("\u0052\u0044",_acea .RD );_fdb .SetIfNotNil ("\u0053\u0079",_acea .Sy );return _dded ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};func (_dbae *PdfReader )newPdfAnnotationSoundFromDict (_afe *_gea .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_ebb :=PdfAnnotationSound {};_fgb ,_gag :=_dbae .newPdfAnnotationMarkupFromDict (_afe );if _gag !=nil {return nil ,_gag ;
};_ebb .PdfAnnotationMarkup =_fgb ;_ebb .Name =_afe .Get ("\u004e\u0061\u006d\u0065");_ebb .Sound =_afe .Get ("\u0053\u006f\u0075n\u0064");return &_ebb ,nil ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_bfca :=&XObjectImage {};_bbfcda :=&_gea .PdfObjectStream {};_bbfcda .PdfObjectDictionary =_gea .MakeDict ();_bfca ._bbffa =_bbfcda ;return _bfca ;};

// GetContentStreams returns the content stream as an array of strings.
func (_bdgba *PdfPage )GetContentStreams ()([]string ,error ){_egda :=_bdgba .GetContentStreamObjs ();var _dddgg []string ;for _ ,_cgcdf :=range _egda {_aegag ,_bafa :=_dbde (_cgcdf );if _bafa !=nil {return nil ,_bafa ;};_dddgg =append (_dddgg ,_aegag );
};return _dddgg ,nil ;};

// ToPdfObject returns a stream object.
func (_gbfde *XObjectForm )ToPdfObject ()_gea .PdfObject {_begcee :=_gbfde ._ggdde ;_dabdd :=_begcee .PdfObjectDictionary ;if _gbfde .Filter !=nil {_dabdd =_gbfde .Filter .MakeStreamDict ();_begcee .PdfObjectDictionary =_dabdd ;};_dabdd .Set ("\u0054\u0079\u0070\u0065",_gea .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_dabdd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0046\u006f\u0072\u006d"));_dabdd .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_gbfde .FormType );_dabdd .SetIfNotNil ("\u0042\u0042\u006f\u0078",_gbfde .BBox );
_dabdd .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_gbfde .Matrix );if _gbfde .Resources !=nil {_dabdd .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_gbfde .Resources .ToPdfObject ());};_dabdd .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_gbfde .Group );
_dabdd .SetIfNotNil ("\u0052\u0065\u0066",_gbfde .Ref );_dabdd .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_gbfde .MetaData );_dabdd .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_gbfde .PieceInfo );_dabdd .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_gbfde .LastModified );
_dabdd .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gbfde .StructParent );_dabdd .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_gbfde .StructParents );_dabdd .SetIfNotNil ("\u004f\u0050\u0049",_gbfde .OPI );
_dabdd .SetIfNotNil ("\u004f\u0043",_gbfde .OC );_dabdd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gbfde .Name );_dabdd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gea .MakeInteger (int64 (len (_gbfde .Stream ))));_begcee .Stream =_gbfde .Stream ;return _begcee ;
};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_egbgd *PdfReader )Inspect ()(map[string ]int ,error ){return _egbgd ._edcdb .Inspect ()};func _beffe (_cadba []*_gea .PdfObjectStream )*_gea .PdfObjectArray {if len (_cadba )==0{return nil ;};_efcaf :=make ([]_gea .PdfObject ,0,len (_cadba ));for _ ,_cadee :=range _cadba {_efcaf =append (_efcaf ,_cadee );
};return _gea .MakeArray (_efcaf ...);};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_dcgf *PdfFieldChoice )ToPdfObject ()_gea .PdfObject {_dcgf .PdfField .ToPdfObject ();_gegac :=_dcgf ._bcga ;_fgbaa :=_gegac .PdfObject .(*_gea .PdfObjectDictionary );_fgbaa .Set ("\u0046\u0054",_gea .MakeName ("\u0043\u0068"));if _dcgf .Opt !=nil {_fgbaa .Set ("\u004f\u0070\u0074",_dcgf .Opt );
};if _dcgf .TI !=nil {_fgbaa .Set ("\u0054\u0049",_dcgf .TI );};if _dcgf .I !=nil {_fgbaa .Set ("\u0049",_dcgf .I );};return _gegac ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_bbcg *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_gdeg ,_faab :=color .(*PdfColorPattern );if !_faab {_fd .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _gdeg .Color ==nil {return color ,nil ;};if _bbcg .UnderlyingCS ==nil {return nil ,_gg .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _bbcg .UnderlyingCS .ColorToRGB (_gdeg .Color );
};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_bgaaa int ,_bcgga *PdfPage );

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// MergePageWith appends page content to source Pdf file page content.
func (_fcbf *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_ebdfd :=pageNum -1;var _gcea *PdfPage ;for _bfac ,_dadg :=range _fcbf ._adaf {if _bfac ==_ebdfd {_gcea =_dadg ;};};if _gcea ==nil {return _e .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _gcea ._gfgfdc !=nil &&_gcea ._gfgfdc .GetParser ()==_fcbf ._ggea ._edcdb {_gcea =_gcea .Duplicate ();_fcbf ._adaf [_ebdfd ]=_gcea ;};page =page .Duplicate ();_gcebe (page );_eccca :=_eefb (_gcea );_beef :=_eefb (page );_ccag :=make (map[_gea .PdfObjectName ]_gea .PdfObjectName );
for _eadf :=range _beef {if _ ,_bdga :=_eccca [_eadf ];_bdga {for _eeab :=1;true ;_eeab ++{_dbaed :=_gea .PdfObjectName (string (_eadf )+_eb .Itoa (_eeab ));if _ ,_cbcc :=_eccca [_dbaed ];!_cbcc {_ccag [_eadf ]=_dbaed ;break ;};};};};_agea ,_aadg :=page .GetContentStreams ();
if _aadg !=nil {return _aadg ;};_bbgbf ,_aadg :=_gcea .GetContentStreams ();if _aadg !=nil {return _aadg ;};for _ffg ,_egad :=range _agea {for _eagda ,_dcba :=range _ccag {_egad =_aa .Replace (_egad ,"\u002f"+string (_eagda ),"\u002f"+string (_dcba ),-1);
};_agea [_ffg ]=_egad ;};_bbgbf =append (_bbgbf ,_agea ...);if _bggd :=_gcea .SetContentStreams (_bbgbf ,_gea .NewFlateEncoder ());_bggd !=nil {return _bggd ;};_gcea ._egffb =append (_gcea ._egffb ,page ._egffb ...);if _gcea .Resources ==nil {_gcea .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_gcea .Resources .Font =_fcbf .mergeResources (_gcea .Resources .Font ,page .Resources .Font ,_ccag );_gcea .Resources .XObject =_fcbf .mergeResources (_gcea .Resources .XObject ,page .Resources .XObject ,_ccag );_gcea .Resources .Properties =_fcbf .mergeResources (_gcea .Resources .Properties ,page .Resources .Properties ,_ccag );
if _gcea .Resources .ProcSet ==nil {_gcea .Resources .ProcSet =page .Resources .ProcSet ;};_gcea .Resources .Shading =_fcbf .mergeResources (_gcea .Resources .Shading ,page .Resources .Shading ,_ccag );_gcea .Resources .ExtGState =_fcbf .mergeResources (_gcea .Resources .ExtGState ,page .Resources .ExtGState ,_ccag );
};_addg ,_aadg :=_gcea .GetMediaBox ();if _aadg !=nil {return _aadg ;};_aaee ,_aadg :=page .GetMediaBox ();if _aadg !=nil {return _aadg ;};var _aeeg bool ;if _addg .Llx > _aaee .Llx {_addg .Llx =_aaee .Llx ;_aeeg =true ;};if _addg .Lly > _aaee .Lly {_addg .Lly =_aaee .Lly ;
_aeeg =true ;};if _addg .Urx < _aaee .Urx {_addg .Urx =_aaee .Urx ;_aeeg =true ;};if _addg .Ury < _aaee .Ury {_addg .Ury =_aaee .Ury ;_aeeg =true ;};if _aeeg {_gcea .MediaBox =_addg ;};return nil ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _gea .PdfObject ;};func (_gdba *PdfReader )newPdfAcroFormFromDict (_eacd *_gea .PdfIndirectObject ,_bfdd *_gea .PdfObjectDictionary )(*PdfAcroForm ,error ){_gggb :=NewPdfAcroForm ();if _eacd !=nil {_gggb ._eage =_eacd ;
_eacd .PdfObject =_gea .MakeDict ();};if _acbeb :=_bfdd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_acbeb !=nil &&!_gea .IsNullObject (_acbeb ){_bbeaaa ,_eeaea :=_gea .GetArray (_acbeb );if !_eeaea {return nil ,_e .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_acbeb );
};var _ccgbf []*PdfField ;for _ ,_ffee :=range _bbeaaa .Elements (){_eecef ,_ddef :=_gea .GetIndirect (_ffee );if !_ddef {if _ ,_ebcfc :=_ffee .(*_gea .PdfObjectNull );_ebcfc {_fd .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_fd .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_ffee );
return nil ,_e .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_gcagc ,_daee :=_gdba .newPdfFieldFromIndirectObject (_eecef ,nil );
if _daee !=nil {return nil ,_daee ;};_fd .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_gcagc );_ccgbf =append (_ccgbf ,_gcagc );};_gggb .Fields =&_ccgbf ;};if _gfgadd :=_bfdd .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_gfgadd !=nil {_fgbeb ,_fceba :=_gea .GetBool (_gfgadd );if _fceba {_gggb .NeedAppearances =_fgbeb ;}else {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_gfgadd );
};};if _dcacf :=_bfdd .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_dcacf !=nil {_adeea ,_eagb :=_gea .GetInt (_dcacf );if _eagb {_gggb .SigFlags =_adeea ;}else {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dcacf );
};};if _cdfd :=_bfdd .Get ("\u0043\u004f");_cdfd !=nil {_dgdb ,_bfecd :=_gea .GetArray (_cdfd );if _bfecd {_gggb .CO =_dgdb ;}else {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_cdfd );
};};if _afac :=_bfdd .Get ("\u0044\u0052");_afac !=nil {if _bgced ,_fcggf :=_gea .GetDict (_afac );_fcggf {_eagge ,_dcgd :=NewPdfPageResourcesFromDict (_bgced );if _dcgd !=nil {_fd .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_dcgd );
return nil ,_dcgd ;};_gggb .DR =_eagge ;}else {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_afac );};};if _edcd :=_bfdd .Get ("\u0044\u0041");
_edcd !=nil {_dbfe ,_ddfg :=_gea .GetString (_edcd );if _ddfg {_gggb .DA =_dbfe ;}else {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_edcd );
};};if _addgc :=_bfdd .Get ("\u0051");_addgc !=nil {_fggf ,_ecae :=_gea .GetInt (_addgc );if _ecae {_gggb .Q =_fggf ;}else {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_addgc );
};};if _fgcab :=_bfdd .Get ("\u0058\u0046\u0041");_fgcab !=nil {_gggb .XFA =_fgcab ;};if _deff :=_bfdd .Get ("\u0041\u0044\u0042\u0045\u005f\u0045\u0063\u0068\u006f\u0053\u0069\u0067\u006e");_deff !=nil {_gggb .ADBEEchoSign =_deff ;};_gggb .ToPdfObject ();
return _gggb ,nil ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_bdfcb *Image )ConvertToBinary ()error {if _bdfcb .ColorComponents ==1&&_bdfcb .BitsPerComponent ==1{return nil ;};_cceace ,_feagg :=_bdfcb .ToGoImage ();if _feagg !=nil {return _feagg ;};_fege ,_feagg :=_deg .MonochromeConverter .Convert (_cceace );
if _feagg !=nil {return _feagg ;};_bdfcb .Data =_fege .Base ().Data ;_bdfcb ._bdbf ,_feagg =_deg .ScaleAlphaToMonochrome (_bdfcb ._bdbf ,int (_bdfcb .Width ),int (_bdfcb .Height ));if _feagg !=nil {return _feagg ;};_bdfcb .BitsPerComponent =1;_bdfcb .ColorComponents =1;
_bdfcb ._edadg =nil ;return nil ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_daca *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_acee :=func (_eeeb float64 )float64 {if _eeeb >=6.0/29{return _eeeb *_eeeb *_eeeb ;};return 108.0/841*(_eeeb -4.0/29.0);};_fcgb ,_agdb :=color .(*PdfColorLab );if !_agdb {_fd .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_gg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_fcgb .L ();AStar :=_fcgb .A ();BStar :=_fcgb .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_daca .WhitePoint [0]*_acee (L );Y :=_daca .WhitePoint [1]*_acee (M );Z :=_daca .WhitePoint [2]*_acee (N );_bdaa :=3.240479*X +-1.537150*Y +-0.498535*Z ;_adff :=-0.969256*X +1.875992*Y +0.041556*Z ;_cfdb :=0.055648*X +-0.204043*Y +1.057311*Z ;_bdaa =_fa .Min (_fa .Max (_bdaa ,0),1.0);
_adff =_fa .Min (_fa .Max (_adff ,0),1.0);_cfdb =_fa .Min (_fa .Max (_cfdb ,0),1.0);return NewPdfColorDeviceRGB (_bdaa ,_adff ,_cfdb ),nil ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_fedg *DSS )GetContainingPdfObject ()_gea .PdfObject {return _fedg ._ebgfb };

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_ccacc ,_eadcb :=NewStandard14Font (basefont );if _eadcb !=nil {panic (_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _ccacc ;};func (_cdad *PdfReader )newPdfActionJavaScriptFromDict (_bgaa *_gea .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_bgaa .Get ("\u004a\u0053")},nil ;};func (_gedg *pdfFontSimple )baseFields ()*fontCommon {return &_gedg .fontCommon };
func (_bdge *pdfFontSimple )addEncoding ()error {var (_dbef string ;_aegeb map[_ceb .CharCode ]_ceb .GlyphName ;_abad _ceb .SimpleEncoder ;);if _bdge .Encoder ()!=nil {_ggde ,_dfega :=_bdge .Encoder ().(_ceb .SimpleEncoder );if _dfega &&_ggde !=nil {_dbef =_ggde .BaseName ();
};};if _bdge .Encoding !=nil {_abdfb ,_cfage ,_aegaf :=_bdge .getFontEncoding ();if _aegaf !=nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bdge ._cacc ,_bdge ._abed ,_bdge .Encoding ,_bdge .Encoding ,_aegaf );
return _aegaf ;};if _abdfb !=""{_dbef =_abdfb ;};_aegeb =_cfage ;_abad ,_aegaf =_ceb .NewSimpleTextEncoder (_dbef ,_aegeb );if _aegaf !=nil {return _aegaf ;};};if _abad ==nil {_cgcd :=_bdge ._baffg ;if _cgcd !=nil {switch _bdge ._abed {case "\u0054\u0079\u0070e\u0031":if _cgcd .fontFile !=nil &&_cgcd .fontFile ._edba !=nil {_fd .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_abad =_cgcd .fontFile ._edba ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _cgcd ._cdd !=nil {_fd .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_fbdfc ,_dcddd :=_cgcd ._cdd .MakeEncoder ();
if _dcddd ==nil {_abad =_fbdfc ;};if _bdge ._cbfe ==nil {_bdge ._cbfe =_cgcd ._cdd .MakeToUnicode ();};};};};};if _abad !=nil {if _aegeb !=nil {_fd .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_aegeb ,_bdge .baseFields ());
_abad =_ceb .ApplyDifferences (_abad ,_aegeb );};_bdge .SetEncoder (_abad );};return nil ;};

// PartialName returns the partial name of the field.
func (_ccfed *PdfField )PartialName ()string {_bfgc :="";if _ccfed .T !=nil {_bfgc =_ccfed .T .Decoded ();}else {_fd .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _bfgc ;};

// String returns a human readable description of `fontfile`.
func (_fbfe *fontFile )String ()string {_afdbc :="\u005b\u004e\u006f\u006e\u0065\u005d";if _fbfe ._edba !=nil {_afdbc =_fbfe ._edba .String ();};return _e .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_fbfe ._dgae ,_afdbc );
};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fabg *PdfShadingType3 )ToPdfObject ()_gea .PdfObject {_fabg .PdfShading .ToPdfObject ();_ccffb ,_cgcgg :=_fabg .getShadingDict ();if _cgcgg !=nil {_fd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fabg .Coords !=nil {_ccffb .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_fabg .Coords );};if _fabg .Domain !=nil {_ccffb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fabg .Domain );};if _fabg .Function !=nil {if len (_fabg .Function )==1{_ccffb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fabg .Function [0].ToPdfObject ());
}else {_bfaef :=_gea .MakeArray ();for _ ,_ddccg :=range _fabg .Function {_bfaef .Append (_ddccg .ToPdfObject ());};_ccffb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bfaef );};};if _fabg .Extend !=nil {_ccffb .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_fabg .Extend );
};return _fabg ._adae ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_efd :=NewPdfAnnotation ();_ede :=&PdfAnnotationFreeText {};_ede .PdfAnnotation =_efd ;_ede .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_efd .SetContext (_ede );return _ede ;};func _beefe (_ebfa StdFontName )(pdfFontSimple ,error ){_cdfca ,_eafg :=_ad .NewStdFontByName (_ebfa );
if !_eafg {return pdfFontSimple {},ErrFontNotSupported ;};_gaec :=_adga (_cdfca );return _gaec ,nil ;};func (_dea *PdfReader )newPdfActionLaunchFromDict (_ccfg *_gea .PdfObjectDictionary )(*PdfActionLaunch ,error ){_acde ,_bbac :=_bdg (_ccfg .Get ("\u0046"));
if _bbac !=nil {return nil ,_bbac ;};return &PdfActionLaunch {Win :_ccfg .Get ("\u0057\u0069\u006e"),Mac :_ccfg .Get ("\u004d\u0061\u0063"),Unix :_ccfg .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_ccfg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_acde },nil ;
};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_gddec *PdfPageResources )HasXObjectByName (keyName _gea .PdfObjectName )bool {_bbbbe ,_ :=_gddec .GetXObjectByName (keyName );return _bbbbe !=nil ;};

// GetSubFilter returns SubFilter value or empty string.
func (_afecf *pdfSignDictionary )GetSubFilter ()string {_fdbgg :=_afecf .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _fdbgg ==nil {return "";};if _adfd ,_eddea :=_gea .GetNameVal (_fdbgg );_eddea {return _adfd ;};return "";};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_gfgag *PdfOutlineTreeNode )GetContext ()PdfModel {if _gcdfg ,_ebgc :=_gfgag ._bdagf .(*PdfOutline );_ebgc {return _gcdfg ;};if _eeeed ,_bccb :=_gfgag ._bdagf .(*PdfOutlineItem );_bccb {return _eeeed ;};_fd .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_dfef *PdfPattern )IsTiling ()bool {return _dfef .PatternType ==1};

// ToPdfObject implements interface PdfModel.
func (_gca *PdfAnnotationHighlight )ToPdfObject ()_gea .PdfObject {_gca .PdfAnnotation .ToPdfObject ();_ggg :=_gca ._bbf ;_bgab :=_ggg .PdfObject .(*_gea .PdfObjectDictionary );_gca .PdfAnnotationMarkup .appendToPdfDictionary (_bgab );_bgab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_bgab .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gca .QuadPoints );return _ggg ;};func (_ebde *PdfReader )newPdfActionSoundFromDict (_ff *_gea .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_ff .Get ("\u0053\u006f\u0075n\u0064"),Volume :_ff .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_ff .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_ff .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_ff .Get ("\u004d\u0069\u0078")},nil ;
};func (_cadge *Image )samplesAddPadding (_geba []uint32 )[]uint32 {_aefa :=_deg .BytesPerLine (int (_cadge .Width ),int (_cadge .BitsPerComponent ),_cadge .ColorComponents )*(8/int (_cadge .BitsPerComponent ));_baaae :=_aefa *int (_cadge .Height );if len (_geba )==_baaae {return _geba ;
};_gfdf :=make ([]uint32 ,_baaae );_edgca :=int (_cadge .Width )*_cadge .ColorComponents ;for _gfggae :=0;_gfggae < int (_cadge .Height );_gfggae ++{_gfabe :=_gfggae *int (_cadge .Width );_egbdf :=_gfggae *_aefa ;for _geaea :=0;_geaea < _edgca ;_geaea ++{_gfdf [_egbdf +_geaea ]=_geba [_gfabe +_geaea ];
};};return _gfdf ;};func (_dcfbb *PdfWriter )flushWriter ()error {if _dcfbb ._ebcdb ==nil {_dcfbb ._ebcdb =_dcfbb ._ccfd .Flush ();};return _dcfbb ._ebcdb ;};func _dbgea (_gggce _gea .PdfObject )(*_gea .PdfObjectDictionary ,*fontCommon ,error ){_baggb :=&fontCommon {};
if _acfc ,_bgfd :=_gggce .(*_gea .PdfIndirectObject );_bgfd {_baggb ._fceb =_acfc .ObjectNumber ;};_eabe ,_cdbe :=_gea .GetDict (_gggce );if !_cdbe {_fd .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gggce );
return nil ,nil ,ErrFontNotSupported ;};_bdgca ,_cdbe :=_gea .GetNameVal (_eabe .Get ("\u0054\u0079\u0070\u0065"));if !_cdbe {_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _bdgca !="\u0046\u006f\u006e\u0074"{_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_bdgca ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_gea .ErrTypeError ;};_eaab ,_cdbe :=_gea .GetNameVal (_eabe .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_cdbe {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_baggb ._abed =_eaab ;_cdag ,_cdbe :=_gea .GetNameVal (_eabe .Get ("\u004e\u0061\u006d\u0065"));if _cdbe {_baggb ._aeaf =_cdag ;};_acgb :=_eabe .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _acgb !=nil {_baggb ._bbeaa =_gea .TraceToDirectObject (_acgb );
_bbfbd ,_begf :=_gebcb (_baggb ._bbeaa ,_baggb );if _begf !=nil {return _eabe ,_baggb ,_begf ;};_baggb ._cbfe =_bbfbd ;}else if _eaab =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_eaab =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_ceea ,_bcagd :=_ebd .NewCIDSystemInfo (_eabe .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _bcagd !=nil {return _eabe ,_baggb ,_bcagd ;};_gbbge :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_ceea .Registry ,_ceea .Ordering );if _ebd .IsPredefinedCMap (_gbbge ){_baggb ._cbfe ,_bcagd =_ebd .LoadPredefinedCMap (_gbbge );
if _bcagd !=nil {_fd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_gbbge ,_bcagd );
};};};_bgce :=_eabe .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _bgce !=nil {_ccbd ,_bacf :=_cdgd (_bgce );if _bacf !=nil {_fd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bacf );
return _eabe ,_baggb ,_bacf ;};_baggb ._baffg =_ccbd ;};if _eaab !="\u0054\u0079\u0070e\u0033"{_baeg ,_gbba :=_gea .GetNameVal (_eabe .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_gbba {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _eabe ,_baggb ,ErrRequiredAttributeMissing ;};_baggb ._cacc =_baeg ;};return _eabe ,_baggb ,nil ;};func (_ddbccg *PdfWriter )optimize ()error {if _ddbccg ._acbg ==nil {return nil ;};var _bgddc error ;_ddbccg ._aeaa ,_bgddc =_ddbccg ._acbg .Optimize (_ddbccg ._aeaa );
if _bgddc !=nil {return _bgddc ;};_gccef :=make (map[_gea .PdfObject ]struct{},len (_ddbccg ._aeaa ));for _ ,_eedaa :=range _ddbccg ._aeaa {_gccef [_eedaa ]=struct{}{};};_ddbccg ._edfdb =_gccef ;return nil ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_gcae *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_bbaa ,_aefg :=color .(*PdfColorDeviceCMYK );if !_aefg {_fd .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_gg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cade :=_bbaa .C ();_ddb :=_bbaa .M ();_dfgd :=_bbaa .Y ();_febg :=_bbaa .K ();_cade =_cade *(1-_febg )+_febg ;_ddb =_ddb *(1-_febg )+_febg ;
_dfgd =_dfgd *(1-_febg )+_febg ;_ecacd :=1-_cade ;_dbfc :=1-_ddb ;_agcg :=1-_dfgd ;return NewPdfColorDeviceRGB (_ecacd ,_dbfc ,_agcg ),nil ;};

// ToPdfObject implements interface PdfModel.
func (_eda *PdfActionRendition )ToPdfObject ()_gea .PdfObject {_eda .PdfAction .ToPdfObject ();_dff :=_eda ._af ;_dcd :=_dff .PdfObject .(*_gea .PdfObjectDictionary );_dcd .SetIfNotNil ("\u0053",_gea .MakeName (string (ActionTypeRendition )));_dcd .SetIfNotNil ("\u0052",_eda .R );
_dcd .SetIfNotNil ("\u0041\u004e",_eda .AN );_dcd .SetIfNotNil ("\u004f\u0050",_eda .OP );_dcd .SetIfNotNil ("\u004a\u0053",_eda .JS );return _dff ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_abb :=NewPdfAnnotation ();_dgee :=&PdfAnnotationRedact {};_dgee .PdfAnnotation =_abb ;_dgee .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abb .SetContext (_dgee );return _dgee ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_efga *LTV )EnableChain (chain []*_cg .Certificate )error {return _efga .enable (nil ,chain ,"")};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_edfg :=appender .Reader .DSS ;if _edfg ==nil {_edfg =NewDSS ();};if _bbdca :=_edfg .GenerateHashMaps ();_bbdca !=nil {return nil ,_bbdca ;};return &LTV {CertClient :_cad .NewCertClient (),OCSPClient :_cad .NewOCSPClient (),CRLClient :_cad .NewCRLClient (),SkipExisting :true ,_dgfff :appender ,_dggb :_edfg },nil ;
};func (_faddb *Image )getSuitableEncoder ()(_gea .StreamEncoder ,error ){var (_geaac ,_ddgga =int (_faddb .Width ),int (_faddb .Height );_fbde =make (map[string ]bool );_gdeb =true ;_ccgcc =false ;_afcf =func ()*_gea .DCTEncoder {return _gea .NewDCTEncoder ()};
_ebebb =func ()*_gea .DCTEncoder {_gadab :=_gea .NewDCTEncoder ();_gadab .BitsPerComponent =16;return _gadab };);for _efge :=0;_efge < _ddgga ;_efge ++{for _eccd :=0;_eccd < _geaac ;_eccd ++{_aceag ,_fabd :=_faddb .ColorAt (_eccd ,_efge );if _fabd !=nil {return nil ,_fabd ;
};_facd ,_gcaf ,_ffba ,_cfeab :=_aceag .RGBA ();if _gdeb &&(_facd !=_gcaf ||_facd !=_ffba ||_gcaf !=_ffba ){_gdeb =false ;};if !_ccgcc {switch _aceag .(type ){case _a .NRGBA :_ccgcc =_cfeab > 0;};};_fbde [_e .Sprintf ("\u0025\u0064\u002c\u0025\u0064\u002c\u0025\u0064",_facd ,_gcaf ,_ffba )]=true ;
if len (_fbde )> 2&&_ccgcc {return _ebebb (),nil ;};};};if _ccgcc ||len (_faddb ._bdbf )> 0{return _gea .NewFlateEncoder (),nil ;};if len (_fbde )<=2{_dfbgg :=_faddb .ConvertToBinary ();if _dfbgg !=nil {return nil ,_dfbgg ;};return _gea .NewJBIG2Encoder (),nil ;
};if _gdeb {return _afcf (),nil ;};if _faddb .ColorComponents ==1{if _faddb .BitsPerComponent ==1{return _gea .NewJBIG2Encoder (),nil ;}else if _faddb .BitsPerComponent ==8{_cdgbf :=_gea .NewDCTEncoder ();_cdgbf .ColorComponents =1;return _cdgbf ,nil ;
};}else if _faddb .ColorComponents ==3{if _faddb .BitsPerComponent ==8{return _afcf (),nil ;}else if _faddb .BitsPerComponent ==16{return _ebebb (),nil ;};}else if _faddb .ColorComponents ==4{_aagca :=_ebebb ();_aagca .ColorComponents =4;return _aagca ,nil ;
};return _ebebb (),nil ;};func (_gbgbd *PdfSignature )extractChainFromPKCS7 ()([]*_cg .Certificate ,error ){_acbed ,_gafgd :=_ec .Parse (_gbgbd .Contents .Bytes ());if _gafgd !=nil {return nil ,_gafgd ;};return _acbed .Certificates ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dfe *PdfAnnotationCircle )ToPdfObject ()_gea .PdfObject {_dfe .PdfAnnotation .ToPdfObject ();_cdfc :=_dfe ._bbf ;_ebca :=_cdfc .PdfObject .(*_gea .PdfObjectDictionary );_dfe .PdfAnnotationMarkup .appendToPdfDictionary (_ebca );_ebca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_ebca .SetIfNotNil ("\u0042\u0053",_dfe .BS );_ebca .SetIfNotNil ("\u0049\u0043",_dfe .IC );_ebca .SetIfNotNil ("\u0042\u0045",_dfe .BE );_ebca .SetIfNotNil ("\u0052\u0044",_dfe .RD );return _cdfc ;};var _ecbba =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_gea .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_fegb *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_bdad *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_gg .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_deed ,_ddde :=_deg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._bdbf ,img ._edadg );if _ddde !=nil {return img ,_ddde ;};_edac ,_ddde :=_deg .GrayConverter .Convert (_deed );if _ddde !=nil {return img ,_ddde ;
};return _ebgdf (_edac .Base ()),nil ;};

// ToPdfObject implements interface PdfModel.
func (_fab *PdfAnnotationSquare )ToPdfObject ()_gea .PdfObject {_fab .PdfAnnotation .ToPdfObject ();_eebe :=_fab ._bbf ;_ceab :=_eebe .PdfObject .(*_gea .PdfObjectDictionary );if _fab .PdfAnnotationMarkup !=nil {_fab .PdfAnnotationMarkup .appendToPdfDictionary (_ceab );
};_ceab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_ceab .SetIfNotNil ("\u0042\u0053",_fab .BS );_ceab .SetIfNotNil ("\u0049\u0043",_fab .IC );_ceab .SetIfNotNil ("\u0042\u0045",_fab .BE );
_ceab .SetIfNotNil ("\u0052\u0044",_fab .RD );return _eebe ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_aecg :=&PdfFieldSignature {};_aecg .PdfField =NewPdfField ();_aecg .PdfField .SetContext (_aecg );_aecg .PdfAnnotationWidget =NewPdfAnnotationWidget ();_aecg .PdfAnnotationWidget .SetContext (_aecg );
_aecg .PdfAnnotationWidget ._bbf =_aecg .PdfField ._bcga ;_aecg .T =_gea .MakeString ("");_aecg .F =_gea .MakeInteger (132);_aecg .V =signature ;return _aecg ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};func _adggc (_gaabf _gea .PdfObject )(PdfFunction ,error ){_gaabf =_gea .ResolveReference (_gaabf );if _daaa ,_fgeg :=_gaabf .(*_gea .PdfObjectStream );
_fgeg {_bfbc :=_daaa .PdfObjectDictionary ;_fbfae ,_baece :=_bfbc .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_gea .PdfObjectInteger );if !_baece {_fd .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_gg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_fbfae ==0{return _gaaad (_daaa );}else if *_fbfae ==4{return _begfe (_daaa );
}else {return nil ,_gg .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _ggfd ,_cgbac :=_gaabf .(*_gea .PdfIndirectObject );_cgbac {_ccfgb ,_caba :=_ggfd .PdfObject .(*_gea .PdfObjectDictionary );
if !_caba {_fd .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_gg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_afag ,_caba :=_ccfgb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_gea .PdfObjectInteger );
if !_caba {_fd .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_gg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_afag ==2{return _gffcd (_ggfd );}else if *_afag ==3{return _eaeb (_ggfd );}else {return nil ,_gg .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _fagga ,_bgbga :=_gaabf .(*_gea .PdfObjectDictionary );
_bgbga {_aggfb ,_gccde :=_fagga .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_gea .PdfObjectInteger );if !_gccde {_fd .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_gg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_aggfb ==2{return _gffcd (_fagga );}else if *_aggfb ==3{return _eaeb (_fagga );
}else {return nil ,_gg .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_fd .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_gaabf );
return nil ,_gg .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
//   - For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//     for Type 1 Fonts".
//   - For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//     "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//     conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//     encoding and use the glyph indices as character codes, as described following Table 118.
func (_cabda *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_gadb ,_ ,_bgffg :=_cabda .CharcodesToUnicodeWithStats (_cabda .BytesToCharcodes (data ));_added :=_ceb .ExpandLigatures (_gadb );return _added ,_caf .RuneCountInString (_added ),_bgffg ;
};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_gbga *PdfPageResources )SetXObjectImageByName (keyName _gea .PdfObjectName ,ximg *XObjectImage )error {_gbfdc :=ximg .ToPdfObject ().(*_gea .PdfObjectStream );_ccfbb :=_gbga .SetXObjectByName (keyName ,_gbfdc );return _ccfbb ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_ecd :=NewPdfAnnotation ();_bgb :=&PdfAnnotationPrinterMark {};_bgb .PdfAnnotation =_ecd ;_ecd .SetContext (_bgb );return _bgb ;};

// SetReason sets the `Reason` field of the signature.
func (_acefd *PdfSignature )SetReason (reason string ){_acefd .Reason =_gea .MakeString (reason )};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_ggdf *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _ggdf .MediaBox !=nil {return _ggdf .MediaBox ,nil ;};_eaece :=_ggdf .Parent ;for _eaece !=nil {_cfgdd ,_fddbf :=_gea .GetDict (_eaece );if !_fddbf {return nil ,_gg .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _efff :=_cfgdd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_efff !=nil {_dccab ,_faedd :=_gea .GetArray (_efff );if !_faedd {return nil ,_gg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_ecdfe ,_facc :=NewPdfRectangle (*_dccab );if _facc !=nil {return nil ,_facc ;};return _ecdfe ,nil ;};_eaece =_cfgdd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_gg .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};func (_abgea *PdfAcroForm )fill (_dgge FieldValueProvider ,_decaf FieldAppearanceGenerator )error {if _abgea ==nil {return nil ;};_gccdf ,_baed :=_dgge .FieldValues ();if _baed !=nil {return _baed ;};for _ ,_cdce :=range _abgea .AllFields (){_beaeg :=_cdce .PartialName ();
_aegc ,_geag :=_gccdf [_beaeg ];if !_geag {if _bdfbeg ,_cebfd :=_cdce .FullName ();_cebfd ==nil {_aegc ,_geag =_gccdf [_bdfbeg ];};};if !_geag {_fd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_beaeg );
continue ;};if _ddbg :=_gdffb (_cdce ,_aegc );_ddbg !=nil {return _ddbg ;};if _decaf ==nil {continue ;};for _ ,_bcdcg :=range _cdce .Annotations {_degf ,_abeb :=_decaf .GenerateAppearanceDict (_abgea ,_cdce ,_bcdcg );if _abeb !=nil {return _abeb ;};_bcdcg .AP =_degf ;
_bcdcg .ToPdfObject ();};};return nil ;};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_dbeedf *PdfSignature ,_fbgdc Hasher ,_bfdcd SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_ddcbc *PdfReader )GetNameDictionary ()(_gea .PdfObject ,error ){_aebdg :=_gea .ResolveReference (_ddcbc ._cdda .Get ("\u004e\u0061\u006de\u0073"));if _aebdg ==nil {return nil ,nil ;};if !_ddcbc ._debgbb {_dgfbc :=_ddcbc .traverseObjectData (_aebdg );
if _dgfbc !=nil {return nil ,_dgfbc ;};};return _aebdg ,nil ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";
ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";
ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";
ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";
ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);func (_bacb *PdfWriter )checkCrossReferenceStream ()bool {_dbbe :=_bacb ._fedce .Major > 1||(_bacb ._fedce .Major ==1&&_bacb ._fedce .Minor > 4);
if _bacb ._cgdca !=nil {_dbbe =*_bacb ._cgdca ;};return _dbbe ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_dcfd *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_gea .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcbee ,_aadfd :=_gea .GetNumbersAsFloat (objects );
if _aadfd !=nil {return nil ,_aadfd ;};return _dcfd .ColorFromFloats (_fcbee );};func (_dgec *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _gea .PdfObject ;};func _dcfe (_ffcfec *_gea .PdfObjectDictionary )(*PdfShadingType4 ,error ){_dgdef :=PdfShadingType4 {};_gbdfa :=_ffcfec .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _gbdfa ==nil {_fd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gffge ,_edffb :=_gbdfa .(*_gea .PdfObjectInteger );if !_edffb {_fd .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gbdfa );
return nil ,_gea .ErrTypeError ;};_dgdef .BitsPerCoordinate =_gffge ;_gbdfa =_ffcfec .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gbdfa ==nil {_fd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_gffge ,_edffb =_gbdfa .(*_gea .PdfObjectInteger );if !_edffb {_fd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gbdfa );
return nil ,_gea .ErrTypeError ;};_dgdef .BitsPerComponent =_gffge ;_gbdfa =_ffcfec .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _gbdfa ==nil {_fd .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gffge ,_edffb =_gbdfa .(*_gea .PdfObjectInteger );if !_edffb {_fd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gbdfa );
return nil ,_gea .ErrTypeError ;};_dgdef .BitsPerComponent =_gffge ;_gbdfa =_ffcfec .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gbdfa ==nil {_fd .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_abfef ,_edffb :=_gbdfa .(*_gea .PdfObjectArray );if !_edffb {_fd .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gbdfa );
return nil ,_gea .ErrTypeError ;};_dgdef .Decode =_abfef ;_gbdfa =_ffcfec .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gbdfa ==nil {_fd .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_dgdef .Function =[]PdfFunction {};if _aefac ,_fcggb :=_gbdfa .(*_gea .PdfObjectArray );_fcggb {for _ ,_babbd :=range _aefac .Elements (){_ceacc ,_cbgbe :=_adggc (_babbd );if _cbgbe !=nil {_fd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cbgbe );
return nil ,_cbgbe ;};_dgdef .Function =append (_dgdef .Function ,_ceacc );};}else {_gdcfb ,_fbcba :=_adggc (_gbdfa );if _fbcba !=nil {_fd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fbcba );
return nil ,_fbcba ;};_dgdef .Function =append (_dgdef .Function ,_gdcfb );};return &_dgdef ,nil ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_ecfbc *PdfPattern )ToPdfObject ()_gea .PdfObject {_gdfde :=_ecfbc .getDict ();_gdfde .Set ("\u0054\u0079\u0070\u0065",_gea .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_gdfde .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_gea .MakeInteger (_ecfbc .PatternType ));
return _ecfbc ._bgcec ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_cafae *PdfWriter )SetPageLabels (pageLabels _gea .PdfObject )error {if pageLabels ==nil {return nil ;};_fd .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_cafae ._ggbgf .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _cafae .addObjects (pageLabels );};

// String implements interface PdfObject.
func (_cbc *PdfAction )String ()string {_acb ,_gcd :=_cbc .ToPdfObject ().(*_gea .PdfIndirectObject );if _gcd {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_cbc ._fc ,_acb .PdfObject .String ());};return "";};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_fddgg *modelManager )GetModelFromPrimitive (primitive _gea .PdfObject )PdfModel {model ,_bdaed :=_fddgg ._efcba [primitive ];if !_bdaed {return nil ;};return model ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_gea .PdfObject ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_ccdc *Image )ColorAt (x ,y int )(_a .Color ,error ){_dccag :=_deg .BytesPerLine (int (_ccdc .Width ),int (_ccdc .BitsPerComponent ),_ccdc .ColorComponents );switch _ccdc .ColorComponents {case 1:return _deg .ColorAtGrayscale (x ,y ,int (_ccdc .BitsPerComponent ),_dccag ,_ccdc .Data ,_ccdc ._edadg );
case 3:return _deg .ColorAtNRGBA (x ,y ,int (_ccdc .Width ),_dccag ,int (_ccdc .BitsPerComponent ),_ccdc .Data ,_ccdc ._bdbf ,_ccdc ._edadg );case 4:return _deg .ColorAtCMYK (x ,y ,int (_ccdc .Width ),_ccdc .Data ,_ccdc ._edadg );};_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ccdc .ColorComponents ,_ccdc .BitsPerComponent );
return nil ,_gg .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_ecfd *PdfReader )GetObjectNums ()[]int {return _ecfd ._edcdb .GetObjectNums ()};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_ebgfb *_gea .PdfIndirectObject ;Certs []*_gea .PdfObjectStream ;OCSPs []*_gea .PdfObjectStream ;CRLs []*_gea .PdfObjectStream ;VRI map[string ]*VRI ;_abfg map[string ]*_gea .PdfObjectStream ;_gfbc map[string ]*_gea .PdfObjectStream ;_bbbfa map[string ]*_gea .PdfObjectStream ;
};

// GetOutlineTree returns the outline tree.
func (_bdccd *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _bdccd ._eageb };

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_ceead *Image )ToJBIG2Image ()(*_gea .JBIG2Image ,error ){_gcaab ,_efef :=_ceead .ToGoImage ();if _efef !=nil {return nil ,_efef ;};return _gea .GoImageToJBIG2 (_gcaab ,_gea .JB2ImageAutoThreshold );};func (_gbgg *PdfReader )newPdfAnnotationFromIndirectObject (_ccc *_gea .PdfIndirectObject )(*PdfAnnotation ,error ){_bbc ,_facb :=_ccc .PdfObject .(*_gea .PdfObjectDictionary );
if !_facb {return nil ,_e .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_gbgg ._gace .GetModelFromPrimitive (_bbc );model !=nil {_agga ,_aab :=model .(*PdfAnnotation );if !_aab {return nil ,_e .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _agga ,nil ;};_gdd :=&PdfAnnotation {};_gdd ._bbf =_ccc ;_gbgg ._gace .Register (_bbc ,_gdd );if _aag :=_bbc .Get ("\u0054\u0079\u0070\u0065");_aag !=nil {_dbc ,_egfc :=_aag .(*_gea .PdfObjectName );if !_egfc {_fd .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_aag );
}else {if *_dbc !="\u0041\u006e\u006eo\u0074"{_fd .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_dbc );};};};if _dee :=_bbc .Get ("\u0052\u0065\u0063\u0074");
_dee !=nil {_gdd .Rect =_dee ;};if _dgdg :=_bbc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_dgdg !=nil {_gdd .Contents =_dgdg ;};if _cfb :=_bbc .Get ("\u0050");_cfb !=nil {_gdd .P =_cfb ;};if _bcd :=_bbc .Get ("\u004e\u004d");_bcd !=nil {_gdd .NM =_bcd ;
};if _gdff :=_bbc .Get ("\u004d");_gdff !=nil {_gdd .M =_gdff ;};if _aafa :=_bbc .Get ("\u0046");_aafa !=nil {_gdd .F =_aafa ;};if _cba :=_bbc .Get ("\u0041\u0050");_cba !=nil {_gdd .AP =_cba ;};if _aaff :=_bbc .Get ("\u0041\u0053");_aaff !=nil {_gdd .AS =_aaff ;
};if _gbe :=_bbc .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_gbe !=nil {_gdd .Border =_gbe ;};if _fcce :=_bbc .Get ("\u0043");_fcce !=nil {_gdd .C =_fcce ;};if _adad :=_bbc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_adad !=nil {_gdd .StructParent =_adad ;};if _dgbe :=_bbc .Get ("\u004f\u0043");_dgbe !=nil {_gdd .OC =_dgbe ;};_gacg :=_bbc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _gacg ==nil {_fd .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_gdd ._fag =nil ;return _gdd ,nil ;};_adge ,_aea :=_gacg .(*_gea .PdfObjectName );if !_aea {_fd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_gacg );
return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_gacg );};switch *_adge {case "\u0054\u0065\u0078\u0074":_ggbf ,_dbd :=_gbgg .newPdfAnnotationTextFromDict (_bbc );
if _dbd !=nil {return nil ,_dbd ;};_ggbf .PdfAnnotation =_gdd ;_gdd ._fag =_ggbf ;return _gdd ,nil ;case "\u004c\u0069\u006e\u006b":_bfdf ,_gff :=_gbgg .newPdfAnnotationLinkFromDict (_bbc );if _gff !=nil {return nil ,_gff ;};_bfdf .PdfAnnotation =_gdd ;
_gdd ._fag =_bfdf ;return _gdd ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_gbd ,_gecd :=_gbgg .newPdfAnnotationFreeTextFromDict (_bbc );if _gecd !=nil {return nil ,_gecd ;};_gbd .PdfAnnotation =_gdd ;_gdd ._fag =_gbd ;return _gdd ,nil ;
case "\u004c\u0069\u006e\u0065":_cfff ,_aca :=_gbgg .newPdfAnnotationLineFromDict (_bbc );if _aca !=nil {return nil ,_aca ;};_cfff .PdfAnnotation =_gdd ;_gdd ._fag =_cfff ;_fd .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_gdd ,_gdd );
_fd .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_cfff ,_cfff );_fd .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_cfff .PdfAnnotationMarkup ,_cfff .PdfAnnotationMarkup );
return _gdd ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_fff ,_bdgd :=_gbgg .newPdfAnnotationSquareFromDict (_bbc );if _bdgd !=nil {return nil ,_bdgd ;};_fff .PdfAnnotation =_gdd ;_gdd ._fag =_fff ;return _gdd ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_fgfg ,_eca :=_gbgg .newPdfAnnotationCircleFromDict (_bbc );
if _eca !=nil {return nil ,_eca ;};_fgfg .PdfAnnotation =_gdd ;_gdd ._fag =_fgfg ;return _gdd ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_egd ,_fef :=_gbgg .newPdfAnnotationPolygonFromDict (_bbc );if _fef !=nil {return nil ,_fef ;};_egd .PdfAnnotation =_gdd ;
_gdd ._fag =_egd ;return _gdd ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_cbd ,_effg :=_gbgg .newPdfAnnotationPolyLineFromDict (_bbc );if _effg !=nil {return nil ,_effg ;};_cbd .PdfAnnotation =_gdd ;_gdd ._fag =_cbd ;return _gdd ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_ddec ,_gfcc :=_gbgg .newPdfAnnotationHighlightFromDict (_bbc );if _gfcc !=nil {return nil ,_gfcc ;};_ddec .PdfAnnotation =_gdd ;_gdd ._fag =_ddec ;return _gdd ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_effc ,_gge :=_gbgg .newPdfAnnotationUnderlineFromDict (_bbc );
if _gge !=nil {return nil ,_gge ;};_effc .PdfAnnotation =_gdd ;_gdd ._fag =_effc ;return _gdd ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_baee ,_ggc :=_gbgg .newPdfAnnotationSquigglyFromDict (_bbc );if _ggc !=nil {return nil ,_ggc ;};
_baee .PdfAnnotation =_gdd ;_gdd ._fag =_baee ;return _gdd ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_bfcb ,_ecaf :=_gbgg .newPdfAnnotationStrikeOut (_bbc );if _ecaf !=nil {return nil ,_ecaf ;};_bfcb .PdfAnnotation =_gdd ;_gdd ._fag =_bfcb ;
return _gdd ,nil ;case "\u0043\u0061\u0072e\u0074":_gfcd ,_gabc :=_gbgg .newPdfAnnotationCaretFromDict (_bbc );if _gabc !=nil {return nil ,_gabc ;};_gfcd .PdfAnnotation =_gdd ;_gdd ._fag =_gfcd ;return _gdd ,nil ;case "\u0053\u0074\u0061m\u0070":_baf ,_adadd :=_gbgg .newPdfAnnotationStampFromDict (_bbc );
if _adadd !=nil {return nil ,_adadd ;};_baf .PdfAnnotation =_gdd ;_gdd ._fag =_baf ;return _gdd ,nil ;case "\u0049\u006e\u006b":_abe ,_cdac :=_gbgg .newPdfAnnotationInkFromDict (_bbc );if _cdac !=nil {return nil ,_cdac ;};_abe .PdfAnnotation =_gdd ;_gdd ._fag =_abe ;
return _gdd ,nil ;case "\u0050\u006f\u0070u\u0070":_baag ,_bdb :=_gbgg .newPdfAnnotationPopupFromDict (_bbc );if _bdb !=nil {return nil ,_bdb ;};_baag .PdfAnnotation =_gdd ;_gdd ._fag =_baag ;return _gdd ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_faef ,_ddcg :=_gbgg .newPdfAnnotationFileAttachmentFromDict (_bbc );
if _ddcg !=nil {return nil ,_ddcg ;};_faef .PdfAnnotation =_gdd ;_gdd ._fag =_faef ;return _gdd ,nil ;case "\u0053\u006f\u0075n\u0064":_cca ,_dba :=_gbgg .newPdfAnnotationSoundFromDict (_bbc );if _dba !=nil {return nil ,_dba ;};_cca .PdfAnnotation =_gdd ;
_gdd ._fag =_cca ;return _gdd ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_bcf ,_fad :=_gbgg .newPdfAnnotationRichMediaFromDict (_bbc );if _fad !=nil {return nil ,_fad ;};_bcf .PdfAnnotation =_gdd ;_gdd ._fag =_bcf ;return _gdd ,nil ;case "\u004d\u006f\u0076i\u0065":_gcfd ,_bgbe :=_gbgg .newPdfAnnotationMovieFromDict (_bbc );
if _bgbe !=nil {return nil ,_bgbe ;};_gcfd .PdfAnnotation =_gdd ;_gdd ._fag =_gcfd ;return _gdd ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_ece ,_ccda :=_gbgg .newPdfAnnotationScreenFromDict (_bbc );if _ccda !=nil {return nil ,_ccda ;};_ece .PdfAnnotation =_gdd ;
_gdd ._fag =_ece ;return _gdd ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_bbg ,_debb :=_gbgg .newPdfAnnotationWidgetFromDict (_bbc );if _debb !=nil {return nil ,_debb ;};_bbg .PdfAnnotation =_gdd ;_gdd ._fag =_bbg ;return _gdd ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_feff ,_gdag :=_gbgg .newPdfAnnotationPrinterMarkFromDict (_bbc );
if _gdag !=nil {return nil ,_gdag ;};_feff .PdfAnnotation =_gdd ;_gdd ._fag =_feff ;return _gdd ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_fage ,_aegf :=_gbgg .newPdfAnnotationTrapNetFromDict (_bbc );if _aegf !=nil {return nil ,_aegf ;};_fage .PdfAnnotation =_gdd ;
_gdd ._fag =_fage ;return _gdd ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_becg ,_gcb :=_gbgg .newPdfAnnotationWatermarkFromDict (_bbc );if _gcb !=nil {return nil ,_gcb ;};_becg .PdfAnnotation =_gdd ;_gdd ._fag =_becg ;return _gdd ,nil ;
case "\u0033\u0044":_efc ,_bbbg :=_gbgg .newPdfAnnotation3DFromDict (_bbc );if _bbbg !=nil {return nil ,_bbbg ;};_efc .PdfAnnotation =_gdd ;_gdd ._fag =_efc ;return _gdd ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_baca ,_aac :=_gbgg .newPdfAnnotationProjectionFromDict (_bbc );
if _aac !=nil {return nil ,_aac ;};_baca .PdfAnnotation =_gdd ;_gdd ._fag =_baca ;return _gdd ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_egba ,_fde :=_gbgg .newPdfAnnotationRedactFromDict (_bbc );if _fde !=nil {return nil ,_fde ;};_egba .PdfAnnotation =_gdd ;
_gdd ._fag =_egba ;return _gdd ,nil ;};_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_adge );
return nil ,nil ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_dgfaa ,_edeea :=_cff .ParsePdfTime (dateStr );if _edeea !=nil {return PdfDate {},_edeea ;};return NewPdfDateFromTime (_dgfaa );};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_cgg :=NewPdfAction ();_ea :=&PdfActionHide {};_ea .PdfAction =_cgg ;_cgg .SetContext (_ea );return _ea ;};const (_eebb =0x00001;_fbcbf =0x00002;_dceb =0x00004;_cfgd =0x00008;_ffeff =0x00020;_beaae =0x00040;_fffcc =0x10000;
_bdgfb =0x20000;_cgaa =0x40000;);func (_cdca *PdfReader )flattenFieldsWithOpts (_beda bool ,_edgdc FieldAppearanceGenerator ,_geac *FieldFlattenOpts )error {if _geac ==nil {_geac =&FieldFlattenOpts {};};var _cbcd bool ;_faddd :=map[*PdfAnnotation ]bool {};
{var _ddab []*PdfField ;_eead :=_cdca .AcroForm ;if _eead !=nil {if _geac .FilterFunc !=nil {_ddab =_eead .filteredFields (_geac .FilterFunc ,true );_cbcd =_eead .Fields !=nil &&len (*_eead .Fields )> 0;}else {_ddab =_eead .AllFields ();};};for _ ,_agae :=range _ddab {if len (_agae .Annotations )< 1{_fd .Log .Debug ("\u004e\u006f\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0075\u006ed\u0020\u0066\u006f\u0072\u003a\u0020\u0025v\u002c\u0020\u006c\u006f\u006f\u006b\u0020\u0069\u006e\u0074\u006f \u004b\u0069\u0064\u0073\u0020\u004f\u0062\u006a\u0065\u0063\u0074",_agae .PartialName ());
for _bbcfa ,_aeecd :=range _agae .Kids {for _ ,_cdgb :=range _aeecd .Annotations {_faddd [_cdgb .PdfAnnotation ]=_agae .V !=nil ;if _aeecd .V ==nil {_aeecd .V =_agae .V ;};if _aeecd .T ==nil {_aeecd .T =_gea .MakeString (_e .Sprintf ("\u0025\u0073\u0023%\u0064",_agae .PartialName (),_bbcfa ));
};if _edgdc !=nil {_dffb ,_aggg :=_edgdc .GenerateAppearanceDict (_eead ,_aeecd ,_cdgb );if _aggg !=nil {return _aggg ;};_cdgb .AP =_dffb ;};};};};for _ ,_bcgge :=range _agae .Annotations {_faddd [_bcgge .PdfAnnotation ]=_agae .V !=nil ;if _edgdc !=nil {_bege ,_fdcg :=_edgdc .GenerateAppearanceDict (_eead ,_agae ,_bcgge );
if _fdcg !=nil {return _fdcg ;};_bcgge .AP =_bege ;};};};};if _beda {for _ ,_ceac :=range _cdca .PageList {_cdgfe ,_acbf :=_ceac .GetAnnotations ();if _acbf !=nil {return _acbf ;};for _ ,_ddbe :=range _cdgfe {_faddd [_ddbe ]=true ;};};};for _ ,_eegfa :=range _cdca .PageList {_eebc :=_eegfa .flattenFieldsWithOpts (_edgdc ,_geac ,_faddd );
if _eebc !=nil {return _eebc ;};};if !_cbcd {_cdca .AcroForm =nil ;};return nil ;};

// SetOCProperties sets the optional content properties.
func (_gagbf *PdfWriter )SetOCProperties (ocProperties _gea .PdfObject )error {_gfgfdg :=_gagbf ._ggbgf ;if ocProperties !=nil {_fd .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_gfgfdg .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _gagbf .addObjects (ocProperties );};return nil ;};func (_adgb *PdfReader )newPdfAnnotationMovieFromDict (_fdf *_gea .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_egdf :=PdfAnnotationMovie {};
_egdf .T =_fdf .Get ("\u0054");_egdf .Movie =_fdf .Get ("\u004d\u006f\u0076i\u0065");_egdf .A =_fdf .Get ("\u0041");return &_egdf ,nil ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_gdfe *PdfPageResources )GetExtGState (keyName _gea .PdfObjectName )(_gea .PdfObject ,bool ){if _gdfe .ExtGState ==nil {return nil ,false ;};_bbgfc ,_agdgg :=_gea .TraceToDirectObject (_gdfe .ExtGState ).(*_gea .PdfObjectDictionary );if !_agdgg {_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gdfe .ExtGState );
return nil ,false ;};if _gdfeb :=_bbgfc .Get (keyName );_gdfeb !=nil {return _gdfeb ,true ;};return nil ,false ;};func (_cee *PdfReader )newPdfAnnotationFreeTextFromDict (_gacb *_gea .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_fbd :=PdfAnnotationFreeText {};
_affa ,_bcg :=_cee .newPdfAnnotationMarkupFromDict (_gacb );if _bcg !=nil {return nil ,_bcg ;};_fbd .PdfAnnotationMarkup =_affa ;_fbd .DA =_gacb .Get ("\u0044\u0041");_fbd .Q =_gacb .Get ("\u0051");_fbd .RC =_gacb .Get ("\u0052\u0043");_fbd .DS =_gacb .Get ("\u0044\u0053");
_fbd .CL =_gacb .Get ("\u0043\u004c");_fbd .IT =_gacb .Get ("\u0049\u0054");_fbd .BE =_gacb .Get ("\u0042\u0045");_fbd .RD =_gacb .Get ("\u0052\u0044");_fbd .BS =_gacb .Get ("\u0042\u0053");_fbd .LE =_gacb .Get ("\u004c\u0045");return &_fbd ,nil ;};func (_cdagd *LTV )validateSig (_bfeeg *PdfSignature )error {if _bfeeg ==nil ||_bfeeg .Contents ==nil ||len (_bfeeg .Contents .Bytes ())==0{return _e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_bfeeg );
};return nil ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_effad :=map[rune ]int {};for _ ,_ccbcf :=range text {_effad [_ccbcf ]++;};return _effad ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_dce :=NewPdfAnnotation ();_ecgg :=&PdfAnnotationSquiggly {};_ecgg .PdfAnnotation =_dce ;_ecgg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dce .SetContext (_ecgg );return _ecgg ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_dcbcc *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_abfbf :=_dcbcc ._edcdb .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _abfbf {return nil ,_gg .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_abfbf {return _dcbcc ,nil ;};if _dcbcc ._ceagg [revisionNumber ]!=nil {return _dcbcc ._ceagg [revisionNumber ],nil ;};_gffca :=_dcbcc ;for _dgbea :=_abfbf -1;_dgbea >=revisionNumber ;_dgbea --{_ccbcc ,_caede :=_gffca .GetPreviousRevision ();
if _caede !=nil {return nil ,_caede ;};_dcbcc ._ceagg [_dgbea ]=_ccbcc ;_gffca =_ccbcc ;};return _gffca ,nil ;};func (_ddfga *PdfWriter )checkPendingObjects (){for _fgae ,_bfgbbb :=range _ddfga ._adbdb {if !_ddfga .hasObject (_fgae ){_fd .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_fgae ,_fgae ,_fgae );
for _ ,_begce :=range _bfgbbb {for _ ,_dfefe :=range _begce .Keys (){_ecgge :=_begce .Get (_dfefe );if _ecgge ==_fgae {_fd .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_begce .Set (_dfefe ,_gea .MakeNull ());break ;};};};};};};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_ccec :=NewPdfAnnotation ();_fgda :=&PdfAnnotationFileAttachment {};_fgda .PdfAnnotation =_ccec ;_fgda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ccec .SetContext (_fgda );return _fgda ;
};func (_ebcc *LTV )buildCertChain (_ecedf ,_bcadb []*_cg .Certificate )([]*_cg .Certificate ,map[string ]*_cg .Certificate ,error ){_abaf :=map[string ]*_cg .Certificate {};for _ ,_dfgaf :=range _ecedf {_abaf [_dfgaf .Subject .CommonName ]=_dfgaf ;};_gdcge :=_ecedf ;
for _ ,_gdec :=range _bcadb {_cagef :=_gdec .Subject .CommonName ;if _ ,_febe :=_abaf [_cagef ];_febe {continue ;};_abaf [_cagef ]=_gdec ;_gdcge =append (_gdcge ,_gdec );};if len (_gdcge )==0{return nil ,nil ,ErrSignNoCertificates ;};var _aafe error ;for _fdge :=_gdcge [0];
_fdge !=nil &&!_ebcc .CertClient .IsCA (_fdge );{_dcgg ,_bdcfe :=_abaf [_fdge .Issuer .CommonName ];if !_bdcfe {if _dcgg ,_aafe =_ebcc .CertClient .GetIssuer (_fdge );_aafe !=nil {_fd .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_aafe );
break ;};_abaf [_fdge .Issuer .CommonName ]=_dcgg ;_gdcge =append (_gdcge ,_dcgg );};_fdge =_dcgg ;};return _gdcge ,_abaf ,nil ;};func (_dgga PdfFont )actualFont ()pdfFont {if _dgga ._bgfbc ==nil {_fd .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dgga );
};return _dgga ._bgfbc ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// ToPdfObject returns a PDF object representation of the outline item.
func (_dcgbe *OutlineItem )ToPdfObject ()_gea .PdfObject {_gaeg ,_ :=_dcgbe .ToPdfOutlineItem ();return _gaeg .ToPdfObject ();};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cbfg *PdfColorspaceSpecialSeparation )ToPdfObject ()_gea .PdfObject {_ddgca :=_gea .MakeArray (_gea .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_ddgca .Append (_cbfg .ColorantName );_ddgca .Append (_cbfg .AlternateSpace .ToPdfObject ());
_ddgca .Append (_cbfg .TintTransform .ToPdfObject ());if _cbfg ._ccgf !=nil {_cbfg ._ccgf .PdfObject =_ddgca ;return _cbfg ._ccgf ;};return _ddgca ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_ccd :=NewPdfAction ();_ga :=&PdfActionURI {};_ga .PdfAction =_ccd ;_ccd .SetContext (_ga );return _ga ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_gea .PdfObjectArray ;ExtGState _gea .PdfObject ;};var (CourierName =_ad .CourierName ;CourierBoldName =_ad .CourierBoldName ;CourierObliqueName =_ad .CourierObliqueName ;CourierBoldObliqueName =_ad .CourierBoldObliqueName ;
HelveticaName =_ad .HelveticaName ;HelveticaBoldName =_ad .HelveticaBoldName ;HelveticaObliqueName =_ad .HelveticaObliqueName ;HelveticaBoldObliqueName =_ad .HelveticaBoldObliqueName ;SymbolName =_ad .SymbolName ;ZapfDingbatsName =_ad .ZapfDingbatsName ;
TimesRomanName =_ad .TimesRomanName ;TimesBoldName =_ad .TimesBoldName ;TimesItalicName =_ad .TimesItalicName ;TimesBoldItalicName =_ad .TimesBoldItalicName ;);var _ pdfFont =(*pdfCIDFontType2 )(nil );

// AddWatermarkImage adds a watermark to the page.
func (_dgadf *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_cfcdg ,_ccege :=_dgadf .GetMediaBox ();if _ccege !=nil {return _ccege ;};_ddbfc :=_cfcdg .Urx -_cfcdg .Llx ;_beebg :=_cfcdg .Ury -_cfcdg .Lly ;_aebfe :=float64 (*ximg .Width );
_bdab :=(_ddbfc -_aebfe )/2;if opt .FitToWidth {_aebfe =_ddbfc ;_bdab =0;};_gbdffe :=_beebg ;_dcfgd :=float64 (0);if opt .PreserveAspectRatio {_gbdffe =_aebfe *float64 (*ximg .Height )/float64 (*ximg .Width );_dcfgd =(_beebg -_gbdffe )/2;};if _dgadf .Resources ==nil {_dgadf .Resources =NewPdfPageResources ();
};_dbgca :=0;_agdcg :=_gea .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_dbgca ));for _dgadf .Resources .HasXObjectByName (_agdcg ){_dbgca ++;_agdcg =_gea .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_dbgca ));};_ccege =_dgadf .AddImageResource (_agdcg ,ximg );
if _ccege !=nil {return _ccege ;};_dbgca =0;_eagc :=_gea .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_dbgca ));for _dgadf .HasExtGState (_eagc ){_dbgca ++;_eagc =_gea .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_dbgca ));};_gfbe :=_gea .MakeDict ();
_gfbe .Set ("\u0042\u004d",_gea .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_gfbe .Set ("\u0043\u0041",_gea .MakeFloat (opt .Alpha ));_gfbe .Set ("\u0063\u0061",_gea .MakeFloat (opt .Alpha ));_ccege =_dgadf .AddExtGState (_eagc ,_gfbe );if _ccege !=nil {return _ccege ;
};_efgdb :=_e .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_eagc ,_aebfe ,_gbdffe ,_bdab ,_dcfgd ,_agdcg );
_dgadf .AddContentStreamByString (_efgdb );return nil ;};var (ErrRequiredAttributeMissing =_gg .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_gg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");
ErrTypeCheck =_gg .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_dgecf =_gg .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_gg .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
ErrNoFont =_gg .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_bga .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_gea .ErrNotSupported );
ErrType1CFontNotSupported =_bga .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_gea .ErrNotSupported );
ErrType3FontNotSupported =_bga .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_gea .ErrNotSupported );
ErrTTCmapNotSupported =_bga .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_gea .ErrNotSupported );
ErrSignNotEnoughSpace =_bga .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_bga .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););func (_babce *pdfFontType3 )baseFields ()*fontCommon {return &_babce .fontCommon };


// ToPdfObject convert PdfInfo to pdf object.
func (_eaaga *PdfInfo )ToPdfObject ()_gea .PdfObject {_eefd :=_gea .MakeDict ();_eefd .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_eaaga .Title );_eefd .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_eaaga .Author );_eefd .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_eaaga .Subject );
_eefd .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_eaaga .Keywords );_eefd .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_eaaga .Creator );_eefd .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_eaaga .Producer );
_eefd .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_eaaga .Trapped );if _eaaga .CreationDate !=nil {_eefd .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_eaaga .CreationDate .ToPdfObject ());};if _eaaga .ModifiedDate !=nil {_eefd .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_eaaga .ModifiedDate .ToPdfObject ());
};for _ ,_cgda :=range _eaaga ._geda .Keys (){_eefd .SetIfNotNil (_cgda ,_eaaga ._geda .Get (_cgda ));};return _eefd ;};func (_gffg *DSS )add (_ffff *[]*_gea .PdfObjectStream ,_ccgd map[string ]*_gea .PdfObjectStream ,_edada [][]byte )([]*_gea .PdfObjectStream ,error ){_cfdg :=make ([]*_gea .PdfObjectStream ,0,len (_edada ));
for _ ,_ceaf :=range _edada {_baecd ,_eaca :=_fefbb (_ceaf );if _eaca !=nil {return nil ,_eaca ;};_dcaa ,_gafe :=_ccgd [string (_baecd )];if !_gafe {_dcaa ,_eaca =_gea .MakeStream (_ceaf ,_gea .NewRawEncoder ());if _eaca !=nil {return nil ,_eaca ;};_ccgd [string (_baecd )]=_dcaa ;
*_ffff =append (*_ffff ,_dcaa );};_cfdg =append (_cfdg ,_dcaa );};return _cfdg ,nil ;};func (_bfeg *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// GetCharMetrics returns the char metrics for character code `code`.
func (_febd pdfFontType0 )GetCharMetrics (code _ceb .CharCode )(_ad .CharMetrics ,bool ){if _febd .DescendantFont ==nil {_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_febd );
return _ad .CharMetrics {},false ;};return _febd .DescendantFont .GetCharMetrics (code );};

// ToPdfObject implements interface PdfModel.
func (_gbc *PdfActionSound )ToPdfObject ()_gea .PdfObject {_gbc .PdfAction .ToPdfObject ();_ag :=_gbc ._af ;_bef :=_ag .PdfObject .(*_gea .PdfObjectDictionary );_bef .SetIfNotNil ("\u0053",_gea .MakeName (string (ActionTypeSound )));_bef .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_gbc .Sound );
_bef .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_gbc .Volume );_bef .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_gbc .Synchronous );_bef .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_gbc .Repeat );_bef .SetIfNotNil ("\u004d\u0069\u0078",_gbc .Mix );
return _ag ;};func _bgac (_fbge _gea .PdfObject )(*PdfColorspaceCalRGB ,error ){_gadd :=NewPdfColorspaceCalRGB ();if _efca ,_ffcg :=_fbge .(*_gea .PdfIndirectObject );_ffcg {_gadd ._ddcgd =_efca ;};_fbge =_gea .TraceToDirectObject (_fbge );_cece ,_abdd :=_fbge .(*_gea .PdfObjectArray );
if !_abdd {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cece .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_fbge =_gea .TraceToDirectObject (_cece .Get (0));_bacec ,_abdd :=_fbge .(*_gea .PdfObjectName );if !_abdd {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_bacec !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_e .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_fbge =_gea .TraceToDirectObject (_cece .Get (1));
_dccgg ,_abdd :=_fbge .(*_gea .PdfObjectDictionary );if !_abdd {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};
_fbge =_dccgg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_fbge =_gea .TraceToDirectObject (_fbge );_ccea ,_abdd :=_fbge .(*_gea .PdfObjectArray );if !_abdd {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _ccea .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_ffdb ,_dedb :=_ccea .GetAsFloat64Slice ();
if _dedb !=nil {return nil ,_dedb ;};_gadd .WhitePoint =_ffdb ;_fbge =_dccgg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fbge !=nil {_fbge =_gea .TraceToDirectObject (_fbge );_efbb ,_eaec :=_fbge .(*_gea .PdfObjectArray );
if !_eaec {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _efbb .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_eeefd ,_cbea :=_efbb .GetAsFloat64Slice ();if _cbea !=nil {return nil ,_cbea ;};_gadd .BlackPoint =_eeefd ;};_fbge =_dccgg .Get ("\u0047\u0061\u006dm\u0061");if _fbge !=nil {_fbge =_gea .TraceToDirectObject (_fbge );_bbcef ,_bdfb :=_fbge .(*_gea .PdfObjectArray );
if !_bdfb {return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _bbcef .Len ()!=3{return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_eab ,_ffcgf :=_bbcef .GetAsFloat64Slice ();if _ffcgf !=nil {return nil ,_ffcgf ;};_gadd .Gamma =_eab ;};_fbge =_dccgg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _fbge !=nil {_fbge =_gea .TraceToDirectObject (_fbge );_badg ,_egbad :=_fbge .(*_gea .PdfObjectArray );
if !_egbad {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _badg .Len ()!=9{_fd .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_badg .String ());
return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_ffe ,_gagd :=_badg .GetAsFloat64Slice ();if _gagd !=nil {return nil ,_gagd ;
};_gadd .Matrix =_ffe ;};return _gadd ,nil ;};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_abeba *PdfReader )GetCatalogMetadata ()(_gea .PdfObject ,bool ){if _abeba ._cdda ==nil {return nil ,false ;};_caec :=_abeba ._cdda .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _caec ,_caec !=nil ;};

// ToPdfObject implements interface PdfModel.
func (_bee *PdfActionSubmitForm )ToPdfObject ()_gea .PdfObject {_bee .PdfAction .ToPdfObject ();_deb :=_bee ._af ;_fae :=_deb .PdfObject .(*_gea .PdfObjectDictionary );_fae .SetIfNotNil ("\u0053",_gea .MakeName (string (ActionTypeSubmitForm )));if _bee .F !=nil {_fae .Set ("\u0046",_bee .F .ToPdfObject ());
};_fae .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_bee .Fields );_fae .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_bee .Flags );return _deb ;};func (_decc *PdfAppender )replaceObject (_fbgac ,_egfa _gea .PdfObject ){switch _daa :=_fbgac .(type ){case *_gea .PdfIndirectObject :_decc ._dfaa [_egfa ]=_daa .ObjectNumber ;
case *_gea .PdfObjectStream :_decc ._dfaa [_egfa ]=_daa .ObjectNumber ;};};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _gea .PdfObject ;Movie _gea .PdfObject ;A _gea .PdfObject ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_gea .PdfIndirectObject )*PdfOutlineItem {_bggec :=PdfOutlineItem {};_bggec ._bdagf =&_bggec ;_bggec .Title =_gea .MakeString (title );_eadaac :=_gea .MakeArray ();_eadaac .Append (page );_eadaac .Append (_gea .MakeName ("\u0046\u0069\u0074"));
_bggec .Dest =_eadaac ;return &_bggec ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_gafa PdfModel ;_bcga *_gea .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_gea .PdfObjectName ;T *_gea .PdfObjectString ;TU *_gea .PdfObjectString ;TM *_gea .PdfObjectString ;Ff *_gea .PdfObjectInteger ;
V _gea .PdfObject ;DV _gea .PdfObject ;AA _gea .PdfObject ;VariableText *VariableText ;};func (_gccaf *PdfWriter )copyObject (_faae _gea .PdfObject ,_gebfc map[_gea .PdfObject ]_gea .PdfObject ,_fgbbe map[_gea .PdfObject ]struct{},_aebcf bool )_gea .PdfObject {_abdab :=!_gccaf ._abaff &&_fgbbe !=nil ;
if _cafbgf ,_bfab :=_gebfc [_faae ];_bfab {if _abdab &&!_aebcf {delete (_fgbbe ,_faae );};return _cafbgf ;};if _faae ==nil {_cdbf :=_gea .MakeNull ();return _cdbf ;};_dbff :=_faae ;switch _dbdgf :=_faae .(type ){case *_gea .PdfObjectArray :_bcfcf :=_gea .MakeArray ();
_dbff =_bcfcf ;_gebfc [_faae ]=_dbff ;for _ ,_fadgd :=range _dbdgf .Elements (){_bcfcf .Append (_gccaf .copyObject (_fadgd ,_gebfc ,_fgbbe ,_aebcf ));};case *_gea .PdfObjectStreams :_cedfa :=&_gea .PdfObjectStreams {PdfObjectReference :_dbdgf .PdfObjectReference };
_dbff =_cedfa ;_gebfc [_faae ]=_dbff ;for _ ,_cdfeb :=range _dbdgf .Elements (){_cedfa .Append (_gccaf .copyObject (_cdfeb ,_gebfc ,_fgbbe ,_aebcf ));};case *_gea .PdfObjectStream :_efacgd :=&_gea .PdfObjectStream {Stream :_dbdgf .Stream ,PdfObjectReference :_dbdgf .PdfObjectReference };
_dbff =_efacgd ;_gebfc [_faae ]=_dbff ;_efacgd .PdfObjectDictionary =_gccaf .copyObject (_dbdgf .PdfObjectDictionary ,_gebfc ,_fgbbe ,_aebcf ).(*_gea .PdfObjectDictionary );case *_gea .PdfObjectDictionary :var _ebcca bool ;if _abdab &&!_aebcf {if _bagae ,_ :=_gea .GetNameVal (_dbdgf .Get ("\u0054\u0079\u0070\u0065"));
_bagae =="\u0050\u0061\u0067\u0065"{_ ,_geggd :=_gccaf ._aefc [_dbdgf ];_aebcf =!_geggd ;_ebcca =_aebcf ;};};_bffaf :=_gea .MakeDict ();_dbff =_bffaf ;_gebfc [_faae ]=_dbff ;for _ ,_ccfbd :=range _dbdgf .Keys (){_bffaf .Set (_ccfbd ,_gccaf .copyObject (_dbdgf .Get (_ccfbd ),_gebfc ,_fgbbe ,_aebcf ));
};if _ebcca {_dbff =_gea .MakeNull ();_aebcf =false ;};case *_gea .PdfIndirectObject :_dfgag :=&_gea .PdfIndirectObject {PdfObjectReference :_dbdgf .PdfObjectReference };_dbff =_dfgag ;_gebfc [_faae ]=_dbff ;_dfgag .PdfObject =_gccaf .copyObject (_dbdgf .PdfObject ,_gebfc ,_fgbbe ,_aebcf );
case *_gea .PdfObjectString :_cabde :=*_dbdgf ;_dbff =&_cabde ;_gebfc [_faae ]=_dbff ;case *_gea .PdfObjectName :_dfefb :=*_dbdgf ;_dbff =&_dfefb ;_gebfc [_faae ]=_dbff ;case *_gea .PdfObjectNull :_dbff =_gea .MakeNull ();_gebfc [_faae ]=_dbff ;case *_gea .PdfObjectInteger :_ebce :=*_dbdgf ;
_dbff =&_ebce ;_gebfc [_faae ]=_dbff ;case *_gea .PdfObjectReference :_ebfga :=*_dbdgf ;_dbff =&_ebfga ;_gebfc [_faae ]=_dbff ;case *_gea .PdfObjectFloat :_edcca :=*_dbdgf ;_dbff =&_edcca ;_gebfc [_faae ]=_dbff ;case *_gea .PdfObjectBool :_acda :=*_dbdgf ;
_dbff =&_acda ;_gebfc [_faae ]=_dbff ;case *pdfSignDictionary :_dcfec :=&pdfSignDictionary {PdfObjectDictionary :_gea .MakeDict (),_gdafe :_dbdgf ._gdafe ,_caaad :_dbdgf ._caaad };_dbff =_dcfec ;_gebfc [_faae ]=_dbff ;for _ ,_dcgbg :=range _dbdgf .Keys (){_dcfec .Set (_dcgbg ,_gccaf .copyObject (_dbdgf .Get (_dcgbg ),_gebfc ,_fgbbe ,_aebcf ));
};default:_fd .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_faae );
};if _abdab &&_aebcf {_fgbbe [_faae ]=struct{}{};};return _dbff ;};func (_egffa *PdfReader )loadStructure ()error {if _egffa ._edcdb .GetCrypter ()!=nil &&!_egffa ._edcdb .IsAuthenticated (){return _e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_gaeaa :=_egffa ._edcdb .GetTrailer ();if _gaeaa ==nil {return _e .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_fafeg ,_gbfa :=_gaeaa .Get ("\u0052\u006f\u006f\u0074").(*_gea .PdfObjectReference );if !_gbfa {return _e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_gaeaa );
};_cebag ,_ebacg :=_egffa ._edcdb .LookupByReference (*_fafeg );if _ebacg !=nil {_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_ebacg );
return _ebacg ;};_fcbbd ,_gbfa :=_cebag .(*_gea .PdfIndirectObject );if !_gbfa {_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_cebag ,*_gaeaa );
return _gg .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_cebcb ,_gbfa :=(*_fcbbd ).PdfObject .(*_gea .PdfObjectDictionary );if !_gbfa {_fd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_fcbbd .PdfObject );
return _gg .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_fd .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_cebcb );_feecc ,_gbfa :=_cebcb .Get ("\u0050\u0061\u0067e\u0073").(*_gea .PdfObjectReference );
if !_gbfa {return _gg .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_babgb ,_ebacg :=_egffa ._edcdb .LookupByReference (*_feecc );
if _ebacg !=nil {_fd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _ebacg ;};_dddcd ,_gbfa :=_babgb .(*_gea .PdfIndirectObject );if !_gbfa {_fd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_fd .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_dddcd );return _gg .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_acdg ,_gbfa :=_dddcd .PdfObject .(*_gea .PdfObjectDictionary );if !_gbfa {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_dddcd );
return _gg .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_eeecf ,_gbfa :=_gea .GetInt (_acdg .Get ("\u0043\u006f\u0075n\u0074"));if !_gbfa {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _gg .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_gbfa =_gea .GetName (_acdg .Get ("\u0054\u0079\u0070\u0065"));!_gbfa {_fd .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_acdg .Set ("\u0054\u0079\u0070\u0065",_gea .MakeName ("\u0050\u0061\u0067e\u0073"));};if _gfbdd ,_dcagb :=_gea .GetInt (_acdg .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_dcagb {_bfbff :=int64 (*_gfbdd );_egffa .Rotate =&_bfbff ;};_egffa ._degdf =_fafeg ;
_egffa ._cdda =_cebcb ;_egffa ._dbefe =_acdg ;_egffa ._ddefb =_dddcd ;_egffa ._egfb =int (*_eeecf );_egffa ._daega =[]*_gea .PdfIndirectObject {};_ebga :=map[_gea .PdfObject ]struct{}{};_ebacg =_egffa .buildPageList (_dddcd ,nil ,_ebga );if _ebacg !=nil {return _ebacg ;
};_fd .Log .Trace ("\u002d\u002d\u002d");_fd .Log .Trace ("\u0054\u004f\u0043");_fd .Log .Trace ("\u0050\u0061\u0067e\u0073");_fd .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_egffa ._daega ),_egffa ._daega );_egffa ._eageb ,_ebacg =_egffa .loadOutlines ();
if _ebacg !=nil {_fd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_ebacg );
return _ebacg ;};_egffa .AcroForm ,_ebacg =_egffa .loadForms ();if _ebacg !=nil {return _ebacg ;};_egffa .DSS ,_ebacg =_egffa .loadDSS ();if _ebacg !=nil {return _ebacg ;};_egffa ._dbega ,_ebacg =_egffa .loadPerms ();if _ebacg !=nil {return _ebacg ;};return nil ;
};func (_gfgd *DSS )generateHashMap (_gbag []*_gea .PdfObjectStream )(map[string ]*_gea .PdfObjectStream ,error ){_ceaga :=map[string ]*_gea .PdfObjectStream {};for _ ,_cfddg :=range _gbag {_dbad ,_dfda :=_gea .DecodeStream (_cfddg );if _dfda !=nil {return nil ,_dfda ;
};_edcc ,_dfda :=_fefbb (_dbad );if _dfda !=nil {return nil ,_dfda ;};_ceaga [string (_edcc )]=_cfddg ;};return _ceaga ,nil ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_gdgc :=&PdfColorspaceSpecialSeparation {};return _gdgc ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_ega :=NewPdfAction ();_ade :=&PdfActionGoTo {};_ade .PdfAction =_ega ;_ega .SetContext (_ade );return _ade ;};func (_eafc *PdfReader )loadAction (_afbc _gea .PdfObject )(*PdfAction ,error ){if _bebe ,_dgfd :=_gea .GetIndirect (_afbc );
_dgfd {_ffa ,_eed :=_eafc .newPdfActionFromIndirectObject (_bebe );if _eed !=nil {return nil ,_eed ;};return _ffa ,nil ;}else if !_gea .IsNullObject (_afbc ){return nil ,_gg .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// RemovePage removes a page by number.
func (_bffe *PdfAppender )RemovePage (pageNum int ){_dfc :=pageNum -1;_bffe ._adaf =append (_bffe ._adaf [0:_dfc ],_bffe ._adaf [pageNum :]...);};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_gea .PdfObjectArray ;Domain *_gea .PdfObjectArray ;Function []PdfFunction ;Extend *_gea .PdfObjectArray ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_ffb *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_ggcb :=range pages {_ggcb =_ggcb .Duplicate ();_gcebe (_ggcb );_ffb ._adaf =append (_ffb ._adaf ,_ggcb );};};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_cadce *PdfColorspaceLab )ToPdfObject ()_gea .PdfObject {_egbcb :=_gea .MakeArray ();_egbcb .Append (_gea .MakeName ("\u004c\u0061\u0062"));_deab :=_gea .MakeDict ();if _cadce .WhitePoint !=nil {_baab :=_gea .MakeArray (_gea .MakeFloat (_cadce .WhitePoint [0]),_gea .MakeFloat (_cadce .WhitePoint [1]),_gea .MakeFloat (_cadce .WhitePoint [2]));
_deab .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_baab );}else {_fd .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _cadce .BlackPoint !=nil {_dcfg :=_gea .MakeArray (_gea .MakeFloat (_cadce .BlackPoint [0]),_gea .MakeFloat (_cadce .BlackPoint [1]),_gea .MakeFloat (_cadce .BlackPoint [2]));_deab .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_dcfg );
};if _cadce .Range !=nil {_feeba :=_gea .MakeArray (_gea .MakeFloat (_cadce .Range [0]),_gea .MakeFloat (_cadce .Range [1]),_gea .MakeFloat (_cadce .Range [2]),_gea .MakeFloat (_cadce .Range [3]));_deab .Set ("\u0052\u0061\u006eg\u0065",_feeba );};_egbcb .Append (_deab );
if _cadce ._dfddf !=nil {_cadce ._dfddf .PdfObject =_egbcb ;return _cadce ._dfddf ;};return _egbcb ;};func (_bagea *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// GetNumComponents returns the number of color components (3 for RGB).
func (_eacc *PdfColorDeviceRGB )GetNumComponents ()int {return 3};func _cdgd (_eeefc _gea .PdfObject )(*PdfFontDescriptor ,error ){_efcga :=&PdfFontDescriptor {};_eeefc =_gea .ResolveReference (_eeefc );if _gecb ,_fgca :=_eeefc .(*_gea .PdfIndirectObject );
_fgca {_efcga ._fdef =_gecb ;_eeefc =_gecb .PdfObject ;};_fda ,_begb :=_gea .GetDict (_eeefc );if !_begb {_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_eeefc );
return nil ,_gea .ErrTypeError ;};if _fdaf :=_fda .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_fdaf !=nil {_efcga .FontName =_fdaf ;}else {_fd .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_fffcd ,_ :=_gea .GetName (_efcga .FontName );if _ggdcg :=_fda .Get ("\u0054\u0079\u0070\u0065");_ggdcg !=nil {_dbcbg ,_gcfcf :=_ggdcg .(*_gea .PdfObjectName );if !_gcfcf ||string (*_dbcbg )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_fd .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_ggdcg ,_fffcd ,_efcga .FontName );
};}else {_fd .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_fffcd ,_efcga .FontName );
};_efcga .FontFamily =_fda .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_efcga .FontStretch =_fda .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_efcga .FontWeight =_fda .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_efcga .Flags =_fda .Get ("\u0046\u006c\u0061g\u0073");_efcga .FontBBox =_fda .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_efcga .ItalicAngle =_fda .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_efcga .Ascent =_fda .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_efcga .Descent =_fda .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_efcga .Leading =_fda .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_efcga .CapHeight =_fda .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_efcga .XHeight =_fda .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_efcga .StemV =_fda .Get ("\u0053\u0074\u0065m\u0056");_efcga .StemH =_fda .Get ("\u0053\u0074\u0065m\u0048");_efcga .AvgWidth =_fda .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_efcga .MaxWidth =_fda .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_efcga .MissingWidth =_fda .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_efcga .FontFile =_fda .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_efcga .FontFile2 =_fda .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_efcga .FontFile3 =_fda .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_efcga .CharSet =_fda .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_efcga .Style =_fda .Get ("\u0053\u0074\u0079l\u0065");_efcga .Lang =_fda .Get ("\u004c\u0061\u006e\u0067");
_efcga .FD =_fda .Get ("\u0046\u0044");_efcga .CIDSet =_fda .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _efcga .Flags !=nil {if _bcged ,_eggga :=_gea .GetIntVal (_efcga .Flags );_eggga {_efcga ._efbcd =_bcged ;};};if _efcga .MissingWidth !=nil {if _cfgb ,_gbgc :=_gea .GetNumberAsFloat (_efcga .MissingWidth );
_gbgc ==nil {_efcga ._eaaf =_cfgb ;};};if _efcga .FontFile !=nil {_degba ,_gbdbdc :=_dedgd (_efcga .FontFile );if _gbdbdc !=nil {return _efcga ,_gbdbdc ;};_fd .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_degba );_efcga .fontFile =_degba ;
};if _efcga .FontFile2 !=nil {_dfgbe ,_dgdcg :=_ad .NewFontFile2FromPdfObject (_efcga .FontFile2 );if _dgdcg !=nil {return _efcga ,_dgdcg ;};_fd .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_dfgbe .String ());_efcga ._cdd =&_dfgbe ;
};return _efcga ,nil ;};func (_acc *PdfAppender )mergeResources (_fcbe ,_fgc _gea .PdfObject ,_ggab map[_gea .PdfObjectName ]_gea .PdfObjectName )_gea .PdfObject {if _fgc ==nil &&_fcbe ==nil {return nil ;};if _fgc ==nil {return _fcbe ;};_fce ,_dfea :=_gea .GetDict (_fgc );
if !_dfea {return _fcbe ;};if _fcbe ==nil {_gdg :=_gea .MakeDict ();_gdg .Merge (_fce );return _fgc ;};_faca ,_dfea :=_gea .GetDict (_fcbe );if !_dfea {_fd .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_faca =_gea .MakeDict ();};for _ ,_bafe :=range _fce .Keys (){if _cbgd ,_bff :=_ggab [_bafe ];_bff {_faca .Set (_cbgd ,_fce .Get (_bafe ));}else {_faca .Set (_bafe ,_fce .Get (_bafe ));};};return _faca ;};

// ToPdfObject implements interface PdfModel.
func (_aaab *PdfAnnotationMovie )ToPdfObject ()_gea .PdfObject {_aaab .PdfAnnotation .ToPdfObject ();_ddecb :=_aaab ._bbf ;_ceda :=_ddecb .PdfObject .(*_gea .PdfObjectDictionary );_ceda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u004d\u006f\u0076i\u0065"));
_ceda .SetIfNotNil ("\u0054",_aaab .T );_ceda .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_aaab .Movie );_ceda .SetIfNotNil ("\u0041",_aaab .A );return _ddecb ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _gea .PdfObject ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_acdcd *PdfWriter )SetDocInfo (info *PdfInfo ){_acdcd .setDocInfo (info .ToPdfObject ())};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_fbcaf *PdfPageResources )GetXObjectFormByName (keyName _gea .PdfObjectName )(*XObjectForm ,error ){_fefadf ,_gdbe :=_fbcaf .GetXObjectByName (keyName );if _fefadf ==nil {return nil ,nil ;};if _gdbe !=XObjectTypeForm {return nil ,_gg .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_egac ,_gggga :=NewXObjectFormFromStream (_fefadf );if _gggga !=nil {return nil ,_gggga ;};return _egac ,nil ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_gea .PdfObjectStream ;OCSP []*_gea .PdfObjectStream ;CRL []*_gea .PdfObjectStream ;TU *_gea .PdfObjectString ;TS *_gea .PdfObjectString ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_gdf :=NewPdfAnnotation ();_efe :=&PdfAnnotationProjection {};_efe .PdfAnnotation =_gdf ;_efe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gdf .SetContext (_efe );return _efe ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_gfcg *PdfColorspaceCalRGB )ToPdfObject ()_gea .PdfObject {_edea :=&_gea .PdfObjectArray {};_edea .Append (_gea .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_fcef :=_gea .MakeDict ();if _gfcg .WhitePoint !=nil {_cagdg :=_gea .MakeArray (_gea .MakeFloat (_gfcg .WhitePoint [0]),_gea .MakeFloat (_gfcg .WhitePoint [1]),_gea .MakeFloat (_gfcg .WhitePoint [2]));
_fcef .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_cagdg );}else {_fd .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _gfcg .BlackPoint !=nil {_eaea :=_gea .MakeArray (_gea .MakeFloat (_gfcg .BlackPoint [0]),_gea .MakeFloat (_gfcg .BlackPoint [1]),_gea .MakeFloat (_gfcg .BlackPoint [2]));_fcef .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_eaea );
};if _gfcg .Gamma !=nil {_cgad :=_gea .MakeArray (_gea .MakeFloat (_gfcg .Gamma [0]),_gea .MakeFloat (_gfcg .Gamma [1]),_gea .MakeFloat (_gfcg .Gamma [2]));_fcef .Set ("\u0047\u0061\u006dm\u0061",_cgad );};if _gfcg .Matrix !=nil {_gacc :=_gea .MakeArray (_gea .MakeFloat (_gfcg .Matrix [0]),_gea .MakeFloat (_gfcg .Matrix [1]),_gea .MakeFloat (_gfcg .Matrix [2]),_gea .MakeFloat (_gfcg .Matrix [3]),_gea .MakeFloat (_gfcg .Matrix [4]),_gea .MakeFloat (_gfcg .Matrix [5]),_gea .MakeFloat (_gfcg .Matrix [6]),_gea .MakeFloat (_gfcg .Matrix [7]),_gea .MakeFloat (_gfcg .Matrix [8]));
_fcef .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gacc );};_edea .Append (_fcef );if _gfcg ._ddcgd !=nil {_gfcg ._ddcgd .PdfObject =_edea ;return _gfcg ._ddcgd ;};return _edea ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_fea :=&PdfBorderStyle {};return _fea };

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_ebdaa *PdfPageResources )GetContainingPdfObject ()_gea .PdfObject {return _ebdaa ._daaff };

// HasFontByName checks whether a font is defined by the specified keyName.
func (_eedcf *PdfPageResources )HasFontByName (keyName _gea .PdfObjectName )bool {_ ,_ccdfc :=_eedcf .GetFontByName (keyName );return _ccdfc ;};

// PdfShadingPatternType2 is shading patterns that will use a Type 2 shading pattern (Axial).
type PdfShadingPatternType2 struct{*PdfPattern ;Shading *PdfShadingType2 ;Matrix *_gea .PdfObjectArray ;ExtGState _gea .PdfObject ;};

// GetRevisionNumber returns the version of the current Pdf document
func (_fbac *PdfReader )GetRevisionNumber ()int {return _fbac ._edcdb .GetRevisionNumber ()};

// GetContainingPdfObject implements interface PdfModel.
func (_deba *PdfAnnotation )GetContainingPdfObject ()_gea .PdfObject {return _deba ._bbf };

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _gea .PdfObject ;};func (_afbgg *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _aegb []*PdfFieldSignature ;for _ ,_ggacf :=range _afbgg .AllFields (){switch _daea :=_ggacf .GetContext ().(type ){case *PdfFieldSignature :_deceb :=_daea ;
_aegb =append (_aegb ,_deceb );};};return _aegb ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _gea .PdfObject ;T3DV _gea .PdfObject ;T3DA _gea .PdfObject ;T3DI _gea .PdfObject ;T3DB _gea .PdfObject ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_afce *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _gg .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_bbgf :=field .V ;if _bbgf ==nil {return _gg .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_bage :=pageNum -1;
if _bage < 0||_bage > len (_afce ._adaf )-1{return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_gcdd :=_afce .Reader .PageList [_bage ];field .P =_gcdd .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_gea .MakeString (_e .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_gcdd .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _afce ._ddeb ==_afce ._ggea .AcroForm {_afce ._ddeb =_afce .Reader .AcroForm ;};_accf :=_afce ._ddeb ;if _accf ==nil {_accf =NewPdfAcroForm ();};_accf .SigFlags =_gea .MakeInteger (3);
if _accf .NeedAppearances !=nil {_accf .NeedAppearances =nil ;};_agca :=append (_accf .AllFields (),field .PdfField );_accf .Fields =&_agca ;_afce .ReplaceAcroForm (_accf );_afce .UpdatePage (_gcdd );_afce ._adaf [_bage ]=_gcdd ;if _ ,_fded :=field .V .GetDocMDPPermission ();
_fded {_afce ._bgada =NewPermissions (field .V );};return nil ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;PageProcessCallback PageProcessCallback ;


// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};func _ffdd (_dccgf *_gea .PdfObjectDictionary ,_caea *fontCommon )(*pdfFontType0 ,error ){_dbgc ,_afga :=_gea .GetArray (_dccgf .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_afga {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_caea );
return nil ,_gea .ErrRangeError ;};if _dbgc .Len ()!=1{_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_dbgc .Len ());return nil ,_gea .ErrRangeError ;
};_fcgd ,_gced :=_dcbdd (_dbgc .Get (0),false );if _gced !=nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_gced ,_caea );
return nil ,_gced ;};_bcgd :=_fgfad (_caea );_bcgd .DescendantFont =_fcgd ;_becba ,_afga :=_gea .GetNameVal (_dccgf .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _afga {if _becba =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_becba =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_bcgd ._dgaaf =_ceb .NewIdentityTextEncoder (_becba );
}else if _ebd .IsPredefinedCMap (_becba ){_bcgd ._caddc ,_gced =_ebd .LoadPredefinedCMap (_becba );if _gced !=nil {_fd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_becba ,_gced );
};}else {_fd .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_becba );};};if _gfacg :=_fcgd .baseFields ()._cbfe ;_gfacg !=nil {if _beadc :=_gfacg .Name ();_beadc =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_beadc =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_beadc =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_beadc =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_bcgd ._dgaaf =_ceb .NewCMapEncoder (_becba ,_bcgd ._caddc ,_gfacg );
};};return _bcgd ,nil ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_dbfcc *LTV )EnableByName (name string ,extraCerts []*_cg .Certificate )error {_fbgc :=_dbfcc ._dgfff ._ggea .AcroForm ;for _ ,_gfcfb :=range _fbgc .AllFields (){_faecgd ,_ :=_gfcfb .GetContext ().(*PdfFieldSignature );if _faecgd ==nil {continue ;
};if _fgef :=_faecgd .PartialName ();_fgef !=name {continue ;};return _dbfcc .Enable (_faecgd .V ,extraCerts );};return nil ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_bbdacc int64 ;_eefcf int64 ;_cggf int64 ;_cebfc int64 ;_agcacg int64 ;_bfecg int64 ;_bdbbf byte ;_gacgf int64 ;_bade int64 ;};func (_bfbb *PdfWriter )writeOutlines ()error {if _bfbb ._ecbgg ==nil {return nil ;};_fd .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_bfbb ._ecbgg );
_edcad :=_bfbb ._ecbgg .ToPdfObject ();_fd .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_edcad ,_edcad ,_edcad );_bfbb ._ggbgf .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_edcad );
_gagece :=_bfbb .addObjects (_edcad );if _gagece !=nil {return _gagece ;};return nil ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_ecggb *BorderStyle )GetPdfName ()string {switch *_ecggb {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_agad *PdfReader )GetCatalogStructTreeRoot ()(_gea .PdfObject ,bool ){if _agad ._cdda ==nil {return nil ,false ;};_dfbbc :=_agad ._cdda .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return _dfbbc ,_dfbbc !=nil ;
};

// ToPdfObject implements interface PdfModel.
func (_agac *PdfAnnotationSound )ToPdfObject ()_gea .PdfObject {_agac .PdfAnnotation .ToPdfObject ();_fbf :=_agac ._bbf ;_bcgb :=_fbf .PdfObject .(*_gea .PdfObjectDictionary );_agac .PdfAnnotationMarkup .appendToPdfDictionary (_bcgb );_bcgb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0053\u006f\u0075n\u0064"));
_bcgb .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_agac .Sound );_bcgb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_agac .Name );return _fbf ;};func (_bgcae *PdfReader )newPdfAnnotationPopupFromDict (_dbea *_gea .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_bebed :=PdfAnnotationPopup {};
_bebed .Parent =_dbea .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_bebed .Open =_dbea .Get ("\u004f\u0070\u0065\u006e");return &_bebed ,nil ;};func (_ffc *PdfReader )newPdfAnnotationProjectionFromDict (_cdf *_gea .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_cgfb :=&PdfAnnotationProjection {};
_aacf ,_fged :=_ffc .newPdfAnnotationMarkupFromDict (_cdf );if _fged !=nil {return nil ,_fged ;};_cgfb .PdfAnnotationMarkup =_aacf ;return _cgfb ,nil ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _gea .PdfObject ;Open _gea .PdfObject ;};

// SetFillImage attach a model.Image to push button.
func (_faafd *PdfFieldButton )SetFillImage (image *Image ){if _faafd .IsPush (){_faafd ._gegdc =image ;};};

// ToPdfObject returns the PDF representation of the colorspace.
func (_adca *PdfColorspaceDeviceCMYK )ToPdfObject ()_gea .PdfObject {return _gea .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_deebf *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_fd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_gg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};func (_caeaa *pdfFontSimple )updateStandard14Font (){_eeabg ,_abeg :=_caeaa .Encoder ().(_ceb .SimpleEncoder );
if !_abeg {_fd .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_caeaa .Encoder (),_caeaa );return ;};_gece :=_eeabg .Charcodes ();
_caeaa ._bgdfg =make (map[_ceb .CharCode ]float64 ,len (_gece ));for _ ,_agbe :=range _gece {_gdee ,_ :=_eeabg .CharcodeToRune (_agbe );_bggdg ,_ :=_caeaa ._eaeaef .Read (_gdee );_caeaa ._bgdfg [_agbe ]=_bggdg .Wx ;};};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_dadab *DSS )ToPdfObject ()_gea .PdfObject {_gaae :=_dadab ._ebgfb .PdfObject .(*_gea .PdfObjectDictionary );_gaae .Clear ();_bccg :=_gea .MakeDict ();for _cbad ,_ggbc :=range _dadab .VRI {_bccg .Set (*_gea .MakeName (_cbad ),_ggbc .ToPdfObject ());
};_gaae .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_beffe (_dadab .Certs ));_gaae .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_beffe (_dadab .OCSPs ));_gaae .SetIfNotNil ("\u0043\u0052\u004c\u0073",_beffe (_dadab .CRLs ));_gaae .Set ("\u0056\u0052\u0049",_bccg );
return _dadab ._ebgfb ;};func (_beb *PdfReader )newPdfActionImportDataFromDict (_cgc *_gea .PdfObjectDictionary )(*PdfActionImportData ,error ){_cce ,_bae :=_bdg (_cgc .Get ("\u0046"));if _bae !=nil {return nil ,_bae ;};return &PdfActionImportData {F :_cce },nil ;
};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _gea .PdfObject ;Q _gea .PdfObject ;RC _gea .PdfObject ;DS _gea .PdfObject ;CL _gea .PdfObject ;IT _gea .PdfObject ;BE _gea .PdfObject ;RD _gea .PdfObject ;BS _gea .PdfObject ;LE _gea .PdfObject ;
};func _edbd (_eagga []byte )(_fgeb ,_adgec string ,_beaad error ){_fd .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_eagga ));_fbaag :=_cedaf .FindIndex (_eagga );if _fbaag ==nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_gea .ErrTypeError ;};_eadfc :=_fbaag [1];_fbafb :=_aa .Index (string (_eagga [_eadfc :]),_ceaec );if _fbafb < 0{_fgeb =string (_eagga [_eadfc :]);return _fgeb ,"",nil ;};_ffbd :=_eadfc +_fbafb ;_fgeb =string (_eagga [_eadfc :_ffbd ]);_cgcdb :=_ffbd ;
_fbafb =_aa .Index (string (_eagga [_cgcdb :]),_gcga );if _fbafb < 0{_fd .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_beaad );
return "","",_gea .ErrTypeError ;};_acedf :=_cgcdb +_fbafb ;_adgec =string (_eagga [_cgcdb :_acedf ]);return _fgeb ,_adgec ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_agff *PdfTransformParamsDocMDP )ToPdfObject ()_gea .PdfObject {_ffadf :=_gea .MakeDict ();_ffadf .SetIfNotNil ("\u0054\u0079\u0070\u0065",_agff .Type );_ffadf .SetIfNotNil ("\u0056",_agff .V );_ffadf .SetIfNotNil ("\u0050",_agff .P );return _ffadf ;
};

// AddFont adds a font dictionary to the Font resources.
func (_caedd *PdfPage )AddFont (name _gea .PdfObjectName ,font _gea .PdfObject )error {if _caedd .Resources ==nil {_caedd .Resources =NewPdfPageResources ();};if _caedd .Resources .Font ==nil {_caedd .Resources .Font =_gea .MakeDict ();};_bbcgd ,_cbecg :=_gea .TraceToDirectObject (_caedd .Resources .Font ).(*_gea .PdfObjectDictionary );
if !_cbecg {_fd .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_gea .TraceToDirectObject (_caedd .Resources .Font ));
return _gg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bbcgd .Set (name ,font );return nil ;};func (_aeff *PdfReader )traverseObjectData (_aeaeee _gea .PdfObject )error {return _gea .ResolveReferencesDeep (_aeaeee ,_aeff ._gbef );
};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_ffgfde *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _ebaa []*PdfOutlineTreeNode ;var _efefa []string ;var _ebae func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_ebae =func (_dgaec *PdfOutlineTreeNode ,_ddabd *[]*PdfOutlineTreeNode ,_agecg *[]string ,_cfeg int ){if _dgaec ==nil {return ;
};if _dgaec ._bdagf ==nil {_fd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_abdg ,_caeae :=_dgaec ._bdagf .(*PdfOutlineItem );if _caeae {*_ddabd =append (*_ddabd ,&_abdg .PdfOutlineTreeNode );
_debgf :=_aa .Repeat ("\u0020",_cfeg *2)+_abdg .Title .Decoded ();*_agecg =append (*_agecg ,_debgf );};if _dgaec .First !=nil {_ecedc :=_aa .Repeat ("\u0020",_cfeg *2)+"\u002b";*_agecg =append (*_agecg ,_ecedc );_ebae (_dgaec .First ,_ddabd ,_agecg ,_cfeg +1);
};if _caeae &&_abdg .Next !=nil {_ebae (_abdg .Next ,_ddabd ,_agecg ,_cfeg );};};_ebae (_ffgfde ._eageb ,&_ebaa ,&_efefa ,0);return _ebaa ,_efefa ,nil ;};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_ddac *PdfWriter )SetNamedDestinations (dests _gea .PdfObject )error {if dests ==nil {return nil ;};_fd .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_ddac ._ggbgf .Set ("\u0044\u0065\u0073t\u0073",dests );return _ddac .addObjects (dests );};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_cfede []byte )(_edabbg int ,_gbcdf error );};

// GetNumComponents returns the number of color components.
func (_efbd *PdfColorspaceICCBased )GetNumComponents ()int {return _efbd .N };

// ToPdfObject returns the PDF representation of the colorspace.
func (_ceabbd *PdfColorspaceDeviceRGB )ToPdfObject ()_gea .PdfObject {return _gea .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};func _degc (_gdcf _gea .PdfObject )(*PdfColorspaceCalGray ,error ){_gfgbb :=NewPdfColorspaceCalGray ();if _gbdf ,_bddd :=_gdcf .(*_gea .PdfIndirectObject );
_bddd {_gfgbb ._dbgg =_gbdf ;};_gdcf =_gea .TraceToDirectObject (_gdcf );_abgd ,_afcc :=_gdcf .(*_gea .PdfObjectArray );if !_afcc {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _abgd .Len ()!=2{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_gdcf =_gea .TraceToDirectObject (_abgd .Get (0));_ebbc ,_afcc :=_gdcf .(*_gea .PdfObjectName );if !_afcc {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_ebbc !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_e .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_gdcf =_gea .TraceToDirectObject (_abgd .Get (1));
_adcb ,_afcc :=_gdcf .(*_gea .PdfObjectDictionary );if !_afcc {return nil ,_e .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_gdcf =_adcb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_gdcf =_gea .TraceToDirectObject (_gdcf );_fbce ,_afcc :=_gdcf .(*_gea .PdfObjectArray );if !_afcc {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _fbce .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_gdac ,_bfdfb :=_fbce .GetAsFloat64Slice ();
if _bfdfb !=nil {return nil ,_bfdfb ;};_gfgbb .WhitePoint =_gdac ;_gdcf =_adcb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gdcf !=nil {_gdcf =_gea .TraceToDirectObject (_gdcf );_geee ,_ccgc :=_gdcf .(*_gea .PdfObjectArray );
if !_ccgc {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _geee .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_ebcg ,_edad :=_geee .GetAsFloat64Slice ();if _edad !=nil {return nil ,_edad ;};_gfgbb .BlackPoint =_ebcg ;};_gdcf =_adcb .Get ("\u0047\u0061\u006dm\u0061");if _gdcf !=nil {_gdcf =_gea .TraceToDirectObject (_gdcf );_agfb ,_agde :=_gea .GetNumberAsFloat (_gdcf );
if _agde !=nil {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_gfgbb .Gamma =_agfb ;};return _gfgbb ,nil ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_ggecc *PdfPage )Duplicate ()*PdfPage {_aedd :=*_ggecc ;_aedd ._acebb =_gea .MakeDict ();_aedd ._gfgfdc =_gea .MakeIndirectObject (_aedd ._acebb );_aedd ._bffef =*_aedd ._acebb ;return &_aedd ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_ceagd FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_ceagd .Mask ()&^fl .Mask ())};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_dgac *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_cagd :=_ed .NewReader (img .getBase ());_bdee :=_deg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_cfee :=_ed .NewWriter (_bdee );
_ggfc :=_fa .Pow (2,float64 (img .BitsPerComponent ))-1;_bbag :=make ([]uint32 ,3);var (_aggf uint32 ;ANorm ,X ,Y ,Z ,_cgec ,_eeaa ,_fcdb float64 ;_bbcc error ;);for {_aggf ,_bbcc =_cagd .ReadSample ();if _bbcc ==_cef .EOF {break ;}else if _bbcc !=nil {return img ,_bbcc ;
};ANorm =float64 (_aggf )/_ggfc ;X =_dgac .WhitePoint [0]*_fa .Pow (ANorm ,_dgac .Gamma );Y =_dgac .WhitePoint [1]*_fa .Pow (ANorm ,_dgac .Gamma );Z =_dgac .WhitePoint [2]*_fa .Pow (ANorm ,_dgac .Gamma );_cgec =3.240479*X +-1.537150*Y +-0.498535*Z ;_eeaa =-0.969256*X +1.875992*Y +0.041556*Z ;
_fcdb =0.055648*X +-0.204043*Y +1.057311*Z ;_cgec =_fa .Min (_fa .Max (_cgec ,0),1.0);_eeaa =_fa .Min (_fa .Max (_eeaa ,0),1.0);_fcdb =_fa .Min (_fa .Max (_fcdb ,0),1.0);_bbag [0]=uint32 (_cgec *_ggfc );_bbag [1]=uint32 (_eeaa *_ggfc );_bbag [2]=uint32 (_fcdb *_ggfc );
if _bbcc =_cfee .WriteSamples (_bbag );_bbcc !=nil {return img ,_bbcc ;};};return _ebgdf (&_bdee ),nil ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_gdce :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_gdce ;};func _gfgbg (_eega *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_eega }};

// WriteToFile writes the Appender output to file specified by path.
func (_bbcf *PdfAppender )WriteToFile (outputPath string )error {_cbcb ,_gaba :=_de .Create (outputPath );if _gaba !=nil {return _gaba ;};defer _cbcb .Close ();return _bbcf .Write (_cbcb );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dcdb *PdfShadingType4 )ToPdfObject ()_gea .PdfObject {_dcdb .PdfShading .ToPdfObject ();_agfc ,_fgec :=_dcdb .getShadingDict ();if _fgec !=nil {_fd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dcdb .BitsPerCoordinate !=nil {_agfc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dcdb .BitsPerCoordinate );};if _dcdb .BitsPerComponent !=nil {_agfc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dcdb .BitsPerComponent );
};if _dcdb .BitsPerFlag !=nil {_agfc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_dcdb .BitsPerFlag );};if _dcdb .Decode !=nil {_agfc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dcdb .Decode );};if _dcdb .Function !=nil {if len (_dcdb .Function )==1{_agfc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dcdb .Function [0].ToPdfObject ());
}else {_eaebg :=_gea .MakeArray ();for _ ,_dgfda :=range _dcdb .Function {_eaebg .Append (_dgfda .ToPdfObject ());};_agfc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eaebg );};};return _dcdb ._adae ;};var ImageHandling ImageHandler =DefaultImageHandler {};


// ToPdfObject converts the PdfFont object to its PDF representation.
func (_dgbef *PdfFont )ToPdfObject ()_gea .PdfObject {if _dgbef ._bgfbc ==nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _gea .MakeNull ();
};return _dgbef ._bgfbc .ToPdfObject ();};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_gea .PdfObjectArray ;_gegdc *Image ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_bfda *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_egcca *PdfPageResources )GetShadingByName (keyName _gea .PdfObjectName )(*PdfShading ,bool ){if _egcca .Shading ==nil {return nil ,false ;};_ebbf ,_gbdge :=_gea .TraceToDirectObject (_egcca .Shading ).(*_gea .PdfObjectDictionary );if !_gbdge {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_egcca .Shading );
return nil ,false ;};if _fceef :=_ebbf .Get (keyName );_fceef !=nil {_afebeb ,_dfegf :=_gfcfc (_fceef );if _dfegf !=nil {_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_dfegf );
return nil ,false ;};return _afebeb ,true ;};return nil ,false ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_eaf :=NewPdfAnnotation ();_cbge :=&PdfAnnotationLine {};_cbge .PdfAnnotation =_eaf ;_cbge .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eaf .SetContext (_cbge );return _cbge ;};

// String returns a string that describes `font`.
func (_efebb *PdfFont )String ()string {_fbbeg :="";if _efebb ._bgfbc .Encoder ()!=nil {_fbbeg =_efebb ._bgfbc .Encoder ().String ();};return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_efebb ._bgfbc ,_efebb .baseFields ().coreString (),_fbbeg );
};type pdfFontSimple struct{fontCommon ;_gfbcc *_gea .PdfIndirectObject ;_bgdfg map[_ceb .CharCode ]float64 ;_egaa _ceb .TextEncoder ;_cdggf _ceb .TextEncoder ;_bgfcb *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _gea .PdfObject ;LastChar _gea .PdfObject ;Widths _gea .PdfObject ;Encoding _gea .PdfObject ;_eaeaef *_ad .RuneCharSafeMap ;};func (_bfg *PdfReader )newPdfAnnotationRedactFromDict (_cfbb *_gea .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_eddg :=PdfAnnotationRedact {};
_aef ,_ddeg :=_bfg .newPdfAnnotationMarkupFromDict (_cfbb );if _ddeg !=nil {return nil ,_ddeg ;};_eddg .PdfAnnotationMarkup =_aef ;_eddg .QuadPoints =_cfbb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_eddg .IC =_cfbb .Get ("\u0049\u0043");
_eddg .RO =_cfbb .Get ("\u0052\u004f");_eddg .OverlayText =_cfbb .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_eddg .Repeat =_cfbb .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_eddg .DA =_cfbb .Get ("\u0044\u0041");_eddg .Q =_cfbb .Get ("\u0051");
return &_eddg ,nil ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_fcge _gea .ParserMetadata ;};var (_cedaf =_cag .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_bcgedb =_cag .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");
_gdaeg =_cag .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_ceaec ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_gcga ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_cgfda ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);func (_ggfbce *PdfWriter )seekByName (_dcfbce _gea .PdfObject ,_dbgga []string ,_bcacc string )([]_gea .PdfObject ,error ){_fd .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_dcfbce );
var _gfgagg []_gea .PdfObject ;if _bacce ,_debcd :=_dcfbce .(*_gea .PdfIndirectObject );_debcd {return _ggfbce .seekByName (_bacce .PdfObject ,_dbgga ,_bcacc );};if _efffg ,_fgea :=_dcfbce .(*_gea .PdfObjectStream );_fgea {return _ggfbce .seekByName (_efffg .PdfObjectDictionary ,_dbgga ,_bcacc );
};if _dfefba ,_efba :=_dcfbce .(*_gea .PdfObjectDictionary );_efba {_fd .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_gcbac :=range _dfefba .Keys (){_bffadc :=_dfefba .Get (_gcbac );if string (_gcbac )==_bcacc {_gfgagg =append (_gfgagg ,_bffadc );};
for _ ,_eaacd :=range _dbgga {if string (_gcbac )==_eaacd {_fd .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_eaacd );_ecefg ,_aggec :=_ggfbce .seekByName (_bffadc ,_dbgga ,_bcacc );if _aggec !=nil {return _gfgagg ,_aggec ;
};_gfgagg =append (_gfgagg ,_ecefg ...);break ;};};};return _gfgagg ,nil ;};return _gfgagg ,nil ;};func _gfbba (_eeac map[_ad .GID ]int ,_gfefa uint16 )*_gea .PdfObjectArray {_dadf :=&_gea .PdfObjectArray {};_ebgd :=_ad .GID (_gfefa );for _dddf :=_ad .GID (0);
_dddf < _ebgd ;{_facae ,_bfcgd :=_eeac [_dddf ];if !_bfcgd {_dddf ++;continue ;};_agcfb :=_dddf ;for _edca :=_agcfb +1;_edca < _ebgd ;_edca ++{if _babcf ,_bagf :=_eeac [_edca ];!_bagf ||_facae !=_babcf {break ;};_agcfb =_edca ;};_dadf .Append (_gea .MakeInteger (int64 (_dddf )));
_dadf .Append (_gea .MakeInteger (int64 (_agcfb )));_dadf .Append (_gea .MakeInteger (int64 (_facae )));_dddf =_agcfb +1;};return _dadf ;};

// GetContainingPdfObject implements interface PdfModel.
func (_aadbg *PdfSignatureReference )GetContainingPdfObject ()_gea .PdfObject {return _aadbg ._aedba };

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_gbddg *_eg .Document )error ;};func (_dcdde *PdfWriter )addObjects (_bcbc _gea .PdfObject )error {_fd .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _cbbbe ,_eccf :=_bcbc .(*_gea .PdfIndirectObject );
_eccf {_fd .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_fd .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_bcbc ,_cbbbe );_fd .Log .Trace ("\u002d\u0020\u0025\u0073",_cbbbe .PdfObject );if _dcdde .addObject (_cbbbe ){_efbe :=_dcdde .addObjects (_cbbbe .PdfObject );
if _efbe !=nil {return _efbe ;};};return nil ;};if _cfccb ,_gbac :=_bcbc .(*_gea .PdfObjectStream );_gbac {_fd .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_fd .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_bcbc ,_bcbc );if _dcdde .addObject (_cfccb ){_gcgf :=_dcdde .addObjects (_cfccb .PdfObjectDictionary );
if _gcgf !=nil {return _gcgf ;};};return nil ;};if _gdafb ,_cbfec :=_bcbc .(*_gea .PdfObjectDictionary );_cbfec {_fd .Log .Trace ("\u0044\u0069\u0063\u0074");_fd .Log .Trace ("\u002d\u0020\u0025\u0073",_bcbc );for _ ,_ddfagb :=range _gdafb .Keys (){_ggfde :=_gdafb .Get (_ddfagb );
if _gaed ,_cdggc :=_ggfde .(*_gea .PdfObjectReference );_cdggc {_ggfde =_gaed .Resolve ();_gdafb .Set (_ddfagb ,_ggfde );};if _ddfagb !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _edcg :=_dcdde .addObjects (_ggfde );_edcg !=nil {return _edcg ;};}else {if _ ,_cgdbd :=_ggfde .(*_gea .PdfObjectNull );
_cgdbd {continue ;};if _beagb :=_dcdde .hasObject (_ggfde );!_beagb {_fd .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_ggfde ,_ggfde ,_ggfde );
_dcdde ._adbdb [_ggfde ]=append (_dcdde ._adbdb [_ggfde ],_gdafb );};};};return nil ;};if _agbba ,_baeae :=_bcbc .(*_gea .PdfObjectArray );_baeae {_fd .Log .Trace ("\u0041\u0072\u0072a\u0079");_fd .Log .Trace ("\u002d\u0020\u0025\u0073",_bcbc );if _agbba ==nil {return _gg .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _bfdbe ,_eabab :=range _agbba .Elements (){if _gaded ,_ceeed :=_eabab .(*_gea .PdfObjectReference );_ceeed {_eabab =_gaded .Resolve ();_agbba .Set (_bfdbe ,_eabab );};if _bgadd :=_dcdde .addObjects (_eabab );_bgadd !=nil {return _bgadd ;};};return nil ;
};if _ ,_cfbgd :=_bcbc .(*_gea .PdfObjectReference );_cfbgd {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_bcbc );
return _gg .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_gfbca *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _gfbca .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_eafb DefaultImageHandler )NewImageFromGoImage (goimg _d .Image )(*Image ,error ){_adgc ,_gcccf :=_deg .FromGoImage (goimg );if _gcccf !=nil {return nil ,_gcccf ;};_dcaf :=_ebgdf (_adgc .Base ());return &_dcaf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ebecd *Permissions )ToPdfObject ()_gea .PdfObject {return _ebecd ._fbccg };

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_agcf *PdfFieldButton )IsCheckbox ()bool {return _agcf .GetType ()==ButtonTypeCheckbox };func (_ccdcf SignatureValidationResult )String ()string {var _afgc _ddg .Buffer ;_afgc .WriteString (_e .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_ccdcf .Name ));
if _ccdcf .Date ._bbdacc > 0{_afgc .WriteString (_e .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_ccdcf .Date .ToGoTime ().String ()));}else {_afgc .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_ccdcf .Reason )> 0{_afgc .WriteString (_e .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_ccdcf .Reason ));}else {_afgc .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_ccdcf .Location )> 0{_afgc .WriteString (_e .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_ccdcf .Location ));}else {_afgc .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_ccdcf .ContactInfo )> 0{_afgc .WriteString (_e .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_ccdcf .ContactInfo ));}else {_afgc .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_afgc .WriteString (_e .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_ccdcf .Fields )));if _ccdcf .IsSigned {_afgc .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_afgc .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _ccdcf .IsVerified {_afgc .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_afgc .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _ccdcf .IsTrusted {_afgc .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_afgc .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_ccdcf .GeneralizedTime .IsZero (){_afgc .WriteString (_e .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_ccdcf .GeneralizedTime .String ()));
};if _ccdcf .DiffResults !=nil {_afgc .WriteString (_e .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_ccdcf .DiffResults .IsPermitted ()));if len (_ccdcf .DiffResults .Warnings )> 0{_afgc .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");
for _ ,_ffcdc :=range _ccdcf .DiffResults .Warnings {_afgc .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_ffcdc ));};};if len (_ccdcf .DiffResults .Errors )> 0{_afgc .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");
for _ ,_agba :=range _ccdcf .DiffResults .Errors {_afgc .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_agba ));};};};if _ccdcf .IsCrlFound {_afgc .WriteString ("R\u0065\u0076\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u0064\u0061\u0074\u0061\u003a\u0020C\u0052\u004c\u0020f\u006fu\u006e\u0064\u000a");
}else {_afgc .WriteString ("\u0052\u0065\u0076o\u0063\u0061\u0074\u0069o\u006e\u0020\u0064\u0061\u0074\u0061\u003a \u0043\u0052\u004c\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};if _ccdcf .IsOcspFound {_afgc .WriteString ("\u0052\u0065\u0076\u006fc\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u0066\u006f\u0075n\u0064\u000a");
}else {_afgc .WriteString ("\u0052\u0065\u0076\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0064\u0061\u0074\u0061:\u0020O\u0043\u0053\u0050\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u000a");};return _afgc .String ();};

// GetPageDict converts the Page to a PDF object dictionary.
func (_cafbg *PdfPage )GetPageDict ()*_gea .PdfObjectDictionary {_cbgdg :=_cafbg ._acebb ;_cbgdg .Clear ();_cbgdg .Set ("\u0054\u0079\u0070\u0065",_gea .MakeName ("\u0050\u0061\u0067\u0065"));_cbgdg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cafbg .Parent );
if _cafbg .LastModified !=nil {_cbgdg .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_cafbg .LastModified .ToPdfObject ());};if _cafbg .Resources !=nil {_cbgdg .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_cafbg .Resources .ToPdfObject ());
};if _cafbg .CropBox !=nil {_cbgdg .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_cafbg .CropBox .ToPdfObject ());};if _cafbg .MediaBox !=nil {_cbgdg .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_cafbg .MediaBox .ToPdfObject ());};if _cafbg .BleedBox !=nil {_cbgdg .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_cafbg .BleedBox .ToPdfObject ());
};if _cafbg .TrimBox !=nil {_cbgdg .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_cafbg .TrimBox .ToPdfObject ());};if _cafbg .ArtBox !=nil {_cbgdg .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_cafbg .ArtBox .ToPdfObject ());};_cbgdg .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_cafbg .BoxColorInfo );
_cbgdg .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cafbg .Contents );if _cafbg .Rotate !=nil {_cbgdg .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_gea .MakeInteger (*_cafbg .Rotate ));};_cbgdg .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_cafbg .Group );
_cbgdg .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_cafbg .Thumb );_cbgdg .SetIfNotNil ("\u0042",_cafbg .B );_cbgdg .SetIfNotNil ("\u0044\u0075\u0072",_cafbg .Dur );_cbgdg .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_cafbg .Trans );_cbgdg .SetIfNotNil ("\u0041\u0041",_cafbg .AA );
_cbgdg .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_cafbg .Metadata );_cbgdg .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_cafbg .PieceInfo );_cbgdg .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_cafbg .StructParents );
_cbgdg .SetIfNotNil ("\u0049\u0044",_cafbg .ID );_cbgdg .SetIfNotNil ("\u0050\u005a",_cafbg .PZ );_cbgdg .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_cafbg .SeparationInfo );_cbgdg .SetIfNotNil ("\u0054\u0061\u0062\u0073",_cafbg .Tabs );
_cbgdg .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_cafbg .TemplateInstantiated );_cbgdg .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_cafbg .PresSteps );_cbgdg .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_cafbg .UserUnit );
_cbgdg .SetIfNotNil ("\u0056\u0050",_cafbg .VP );if _cafbg ._egffb !=nil {_aebbf :=_gea .MakeArray ();for _ ,_aadbb :=range _cafbg ._egffb {if _bbbea :=_aadbb .GetContext ();_bbbea !=nil {_aebbf .Append (_bbbea .ToPdfObject ());}else {_aebbf .Append (_aadbb .ToPdfObject ());
};};if _aebbf .Len ()> 0{_cbgdg .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_aebbf );};}else if _cafbg .Annots !=nil {_cbgdg .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_cafbg .Annots );};return _cbgdg ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_ddaed :=&XObjectForm {};_bgadb :=&_gea .PdfObjectStream {};_bgadb .PdfObjectDictionary =_gea .MakeDict ();_ddaed ._ggdde =_bgadb ;return _ddaed ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_aefdbd .Lock ();defer _aefdbd .Unlock ();_ceec =keywords };

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_fcgdd *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_fcgdd .ToPdfOutline ().PdfOutlineTreeNode ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_aefdbd .Lock ();defer _aefdbd .Unlock ();_begdd =title };func _dbbb (_acae _gea .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_geffad :=NewPdfColorspaceSpecialSeparation ();if _dgcd ,_dgcg :=_acae .(*_gea .PdfIndirectObject );
_dgcg {_geffad ._ccgf =_dgcd ;};_acae =_gea .TraceToDirectObject (_acae );_ebecf ,_cdccd :=_acae .(*_gea .PdfObjectArray );if !_cdccd {return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _ebecf .Len ()!=4{return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_acae =_ebecf .Get (0);
_cefg ,_cdccd :=_acae .(*_gea .PdfObjectName );if !_cdccd {return nil ,_e .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_cefg !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_e .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_acae =_ebecf .Get (1);_cefg ,_cdccd =_acae .(*_gea .PdfObjectName );if !_cdccd {return nil ,_e .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_geffad .ColorantName =_cefg ;_acae =_ebecf .Get (2);_edagb ,_cecf :=NewPdfColorspaceFromPdfObject (_acae );if _cecf !=nil {return nil ,_cecf ;};_geffad .AlternateSpace =_edagb ;_bbbd ,_cecf :=_adggc (_ebecf .Get (3));if _cecf !=nil {return nil ,_cecf ;
};_geffad .TintTransform =_bbbd ;return _geffad ,nil ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_fed *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_gffc :=0.3*_fed .R ()+0.59*_fed .G ()+0.11*_fed .B ();_gffc =_fa .Min (_fa .Max (_gffc ,0.0),1.0);return NewPdfColorDeviceGray (_gffc );};

// ToPdfObject returns the PDF representation of the page resources.
func (_ebacfa *PdfPageResources )ToPdfObject ()_gea .PdfObject {_facdf :=_ebacfa ._daaff ;_facdf .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_ebacfa .ExtGState );if _ebacfa ._bbgeg !=nil {_ebacfa .ColorSpace =_ebacfa ._bbgeg .ToPdfObject ();
};_facdf .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_ebacfa .ColorSpace );_facdf .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_ebacfa .Pattern );_facdf .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_ebacfa .Shading );
_facdf .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_ebacfa .XObject );_facdf .SetIfNotNil ("\u0046\u006f\u006e\u0074",_ebacfa .Font );_facdf .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_ebacfa .ProcSet );_facdf .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_ebacfa .Properties );
return _facdf ;};

// AddOCSPs adds OCSPs to DSS.
func (_gabe *DSS )AddOCSPs (ocsps [][]byte )([]*_gea .PdfObjectStream ,error ){return _gabe .add (&_gabe .OCSPs ,_gabe ._gfbc ,ocsps );};

// GetCharMetrics returns the char metrics for character code `code`.
func (_ffaf pdfCIDFontType2 )GetCharMetrics (code _ceb .CharCode )(_ad .CharMetrics ,bool ){if _dfcc ,_cfddf :=_ffaf ._gebgb [code ];_cfddf {return _ad .CharMetrics {Wx :_dfcc },true ;};_gbee :=rune (code );_gcbda ,_aebba :=_ffaf ._aagb [_gbee ];if !_aebba {_gcbda =int (_ffaf ._dcdab );
};return _ad .CharMetrics {Wx :float64 (_gcbda )},true ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _gea .PdfObject ;MK _gea .PdfObject ;A _gea .PdfObject ;AA _gea .PdfObject ;};func (_efb *PdfAppender )addNewObject (_efad _gea .PdfObject ){if _ ,_fbb :=_efb ._edbc [_efad ];!_fbb {_efb ._eaae =append (_efb ._eaae ,_efad );
_efb ._edbc [_efad ]=struct{}{};};};func _abggb (_bbdac _gea .PdfObject ,_eaabb *PdfReader )(*OutlineDest ,error ){_agacg ,_cagdgb :=_gea .GetArray (_bbdac );if !_cagdgb {return nil ,_gg .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_gbce :=_agacg .Len ();if _gbce < 2{return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_gbce );
};_gfafg :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_afccc :=_agacg .Get (0);if _fbgaf ,_befdc :=_gea .GetIndirect (_afccc );_befdc {if _ ,_efbdga ,_eddbg :=_eaabb .PageFromIndirectObject (_fbgaf );_eddbg ==nil {_gfafg .Page =int64 (_efbdga -1);}else {_fd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_fbgaf );
};_gfafg .PageObj =_fbgaf ;}else if _ecaed ,_agacga :=_gea .GetIntVal (_afccc );_agacga {if _ecaed >=0&&_ecaed < len (_eaabb .PageList ){_gfafg .PageObj =_eaabb .PageList [_ecaed ].GetPageAsIndirectObject ();}else {_fd .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_ecaed );
};_gfafg .Page =int64 (_ecaed );}else {return nil ,_e .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_afccc );};_gefeb ,_cagdgb :=_gea .GetNameVal (_agacg .Get (1));
if !_cagdgb {_fd .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_agacg .Get (1));
return _gfafg ,nil ;};switch _gefeb {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _gbce > 2{_gfafg .Y ,_ =_gea .GetNumberAsFloat (_gea .TraceToDirectObject (_agacg .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _gbce > 2{_gfafg .X ,_ =_gea .GetNumberAsFloat (_gea .TraceToDirectObject (_agacg .Get (2)));
};case "\u0058\u0059\u005a":if _gbce > 4{_gfafg .X ,_ =_gea .GetNumberAsFloat (_gea .TraceToDirectObject (_agacg .Get (2)));_gfafg .Y ,_ =_gea .GetNumberAsFloat (_gea .TraceToDirectObject (_agacg .Get (3)));_gfafg .Zoom ,_ =_gea .GetNumberAsFloat (_gea .TraceToDirectObject (_agacg .Get (4)));
};default:_gefeb ="\u0046\u0069\u0074";};_gfafg .Mode =_gefeb ;return _gfafg ,nil ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_deedc ,_gfab :=_de .Open (filePath );if _gfab !=nil {_fd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_gfab );
return nil ,_gfab ;};defer _deedc .Close ();return NewCompositePdfFontFromTTF (_deedc );};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_fgfe *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _fgfe .Range };

// ColorToRGB converts a CalRGB color to an RGB color.
func (_adde *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_cdaab ,_cccg :=color .(*PdfColorCalRGB );if !_cccg {_fd .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_gg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dfeaa :=_cdaab .A ();_deeb :=_cdaab .B ();_fbdc :=_cdaab .C ();X :=_adde .Matrix [0]*_fa .Pow (_dfeaa ,_adde .Gamma [0])+_adde .Matrix [3]*_fa .Pow (_deeb ,_adde .Gamma [1])+_adde .Matrix [6]*_fa .Pow (_fbdc ,_adde .Gamma [2]);
Y :=_adde .Matrix [1]*_fa .Pow (_dfeaa ,_adde .Gamma [0])+_adde .Matrix [4]*_fa .Pow (_deeb ,_adde .Gamma [1])+_adde .Matrix [7]*_fa .Pow (_fbdc ,_adde .Gamma [2]);Z :=_adde .Matrix [2]*_fa .Pow (_dfeaa ,_adde .Gamma [0])+_adde .Matrix [5]*_fa .Pow (_deeb ,_adde .Gamma [1])+_adde .Matrix [8]*_fa .Pow (_fbdc ,_adde .Gamma [2]);
_abfbd :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ggcf :=-0.969256*X +1.875992*Y +0.041556*Z ;_ddcge :=0.055648*X +-0.204043*Y +1.057311*Z ;_abfbd =_fa .Min (_fa .Max (_abfbd ,0),1.0);_ggcf =_fa .Min (_fa .Max (_ggcf ,0),1.0);_ddcge =_fa .Min (_fa .Max (_ddcge ,0),1.0);
return NewPdfColorDeviceRGB (_abfbd ,_ggcf ,_ddcge ),nil ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _gea .StreamEncoder ;FormType _gea .PdfObject ;BBox _gea .PdfObject ;Matrix _gea .PdfObject ;Resources *PdfPageResources ;Group _gea .PdfObject ;Ref _gea .PdfObject ;MetaData _gea .PdfObject ;PieceInfo _gea .PdfObject ;LastModified _gea .PdfObject ;
StructParent _gea .PdfObject ;StructParents _gea .PdfObject ;OPI _gea .PdfObject ;OC _gea .PdfObject ;Name _gea .PdfObject ;

// Stream data.
Stream []byte ;_ggdde *_gea .PdfObjectStream ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_gggfa *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcbg :=vals [0];if _fcbg < 0.0||_fcbg > 1.0{_fd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fcbg );
return nil ,ErrColorOutOfRange ;};_dbdc :=vals [1];if _dbdc < 0.0||_dbdc > 1.0{_fd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dbdc );return nil ,ErrColorOutOfRange ;
};_afbg :=vals [2];if _afbg < 0.0||_afbg > 1.0{_fd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_afbg );return nil ,ErrColorOutOfRange ;};_bfff :=vals [3];
if _bfff < 0.0||_bfff > 1.0{_fd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bfff );return nil ,ErrColorOutOfRange ;};_cdbd :=NewPdfColorDeviceCMYK (_fcbg ,_dbdc ,_afbg ,_bfff );
return _cdbd ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_geaa *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};func _edbab ()string {_aefdbd .Lock ();defer _aefdbd .Unlock ();if len (_abaea )> 0{return _abaea ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);func _fgfad (_fbgbg *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_fbgbg }};


// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_aecac *PdfPageResources )GetColorspaceByName (keyName _gea .PdfObjectName )(PdfColorspace ,bool ){_bdda ,_cbcgf :=_aecac .GetColorspaces ();if _cbcgf !=nil {_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_cbcgf );
return nil ,false ;};if _bdda ==nil {return nil ,false ;};_bdaef ,_eefg :=_bdda .Colorspaces [string (keyName )];if !_eefg {return nil ,false ;};return _bdaef ,true ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_gea .PdfObjectInteger ;BitsPerComponent *_gea .PdfObjectInteger ;VerticesPerRow *_gea .PdfObjectInteger ;Decode *_gea .PdfObjectArray ;Function []PdfFunction ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// B returns the value of the B component of the color.
func (_babg *PdfColorCalRGB )B ()float64 {return _babg [1]};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_bebd *PdfShadingPatternType3 )ToPdfObject ()_gea .PdfObject {_bebd .PdfPattern .ToPdfObject ();_abfec :=_bebd .getDict ();if _bebd .Shading !=nil {_abfec .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bebd .Shading .ToPdfObject ());};if _bebd .Matrix !=nil {_abfec .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bebd .Matrix );
};if _bebd .ExtGState !=nil {_abfec .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bebd .ExtGState );};return _bebd ._bgcec ;};func _bcgg (_dcda _gea .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_fd .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_dcda .String (),_dcda );
_eegba :=NewPdfColorspaceSpecialPattern ();if _adefd ,_acagd :=_dcda .(*_gea .PdfIndirectObject );_acagd {_eegba ._dfbf =_adefd ;};_dcda =_gea .TraceToDirectObject (_dcda );if _edfd ,_abff :=_dcda .(*_gea .PdfObjectName );_abff {if *_edfd !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _eegba ,nil ;};_gddb ,_edaf :=_dcda .(*_gea .PdfObjectArray );if !_edaf {_fd .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_dcda );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _gddb .Len ()!=1&&_gddb .Len ()!=2{_fd .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_gddb );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_dcda =_gddb .Get (0);if _bgcaa ,_caa :=_dcda .(*_gea .PdfObjectName );_caa {if *_bgcaa !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_fd .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_bgcaa );
return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _gddb .Len ()> 1{_dcda =_gddb .Get (1);_dcda =_gea .TraceToDirectObject (_dcda );_dgdc ,_ccbed :=NewPdfColorspaceFromPdfObject (_dcda );if _ccbed !=nil {return nil ,_ccbed ;
};_eegba .UnderlyingCS =_dgdc ;};_fd .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_eegba .UnderlyingCS );
return _eegba ,nil ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_bgeda *PdfPageResources )GetPatternByName (keyName _gea .PdfObjectName )(*PdfPattern ,bool ){if _bgeda .Pattern ==nil {return nil ,false ;};_bbfgg ,_ddabb :=_gea .TraceToDirectObject (_bgeda .Pattern ).(*_gea .PdfObjectDictionary );if !_ddabb {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bgeda .Pattern );
return nil ,false ;};if _ecda :=_bbfgg .Get (keyName );_ecda !=nil {_eegaa ,_dfcea :=_eafbg (_ecda );if _dfcea !=nil {_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_dfcea );
return nil ,false ;};return _eegaa ,true ;};return nil ,false ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_ac .PSProgram ;_cbadf *_ac .PSExecutor ;_fceg []byte ;_abec *_gea .PdfObjectStream ;};func _ddfdg (_cfaag *_gea .PdfObjectDictionary ,_ffcd *fontCommon )(*pdfFontType3 ,error ){_gbeac :=_eedbg (_ffcd );
_aeea :=_cfaag .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _aeea ==nil {_aeea =_gea .MakeInteger (0);};_gbeac .FirstChar =_aeea ;_bffcf ,_dfeca :=_gea .GetIntVal (_aeea );if !_dfeca {_fd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_aeea );
return nil ,_gea .ErrTypeError ;};_cfbg :=_ceb .CharCode (_bffcf );_aeea =_cfaag .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _aeea ==nil {_aeea =_gea .MakeInteger (255);};_gbeac .LastChar =_aeea ;_bffcf ,_dfeca =_gea .GetIntVal (_aeea );
if !_dfeca {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_aeea );return nil ,_gea .ErrTypeError ;
};_gfccc :=_ceb .CharCode (_bffcf );_aeea =_cfaag .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _aeea !=nil {_gbeac .Resources =_aeea ;};_aeea =_cfaag .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _aeea ==nil {_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_aeea );
return nil ,_gea .ErrNotSupported ;};_gbeac .CharProcs =_aeea ;_aeea =_cfaag .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _aeea ==nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_aeea );
return nil ,_gea .ErrNotSupported ;};_gbeac .FontMatrix =_aeea ;_gbeac ._cgcae =make (map[_ceb .CharCode ]float64 );_aeea =_cfaag .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _aeea !=nil {_gbeac .Widths =_aeea ;_gfae ,_dgcgf :=_gea .GetArray (_aeea );
if !_dgcgf {_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_aeea );return nil ,_gea .ErrTypeError ;
};_edgdcc ,_cefgc :=_gfae .ToFloat64Array ();if _cefgc !=nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_cefgc ;};if len (_edgdcc )!=int (_gfccc -_cfbg +1){_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_gfccc -_cfbg +1,len (_edgdcc ));
return nil ,_gea .ErrRangeError ;};_egbg ,_dgcgf :=_gea .GetArray (_gbeac .FontMatrix );if !_dgcgf {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_egbg );
return nil ,_cefgc ;};_baffc ,_cefgc :=_egbg .ToFloat64Array ();if _cefgc !=nil {_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_cefgc ;};_aade :=_fe .NewMatrix (_baffc [0],_baffc [1],_baffc [2],_baffc [3],_baffc [4],_baffc [5]);for _fdba ,_gaga :=range _edgdcc {_cegf ,_ :=_aade .Transform (_gaga ,_gaga );_gbeac ._cgcae [_cfbg +_ceb .CharCode (_fdba )]=_cegf ;};};_gbeac .Encoding =_gea .TraceToDirectObject (_cfaag .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_acgbd :=_cfaag .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _acgbd !=nil {_gbeac ._bbeaa =_gea .TraceToDirectObject (_acgbd );_aefdc ,_bfba :=_gebcb (_gbeac ._bbeaa ,&_gbeac .fontCommon );if _bfba !=nil {return nil ,_bfba ;};_gbeac ._cbfe =_aefdc ;
};if _ebeccb :=_gbeac ._cbfe ;_ebeccb !=nil {_gbeac ._cbcba =_ceb .NewCMapEncoder ("",nil ,_ebeccb );}else {_gbeac ._cbcba =_ceb .NewPdfDocEncoder ();};return _gbeac ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_egc *PdfAnnotationScreen )ToPdfObject ()_gea .PdfObject {_egc .PdfAnnotation .ToPdfObject ();_ebac :=_egc ._bbf ;_ggee :=_ebac .PdfObject .(*_gea .PdfObjectDictionary );_ggee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_ggee .SetIfNotNil ("\u0054",_egc .T );_ggee .SetIfNotNil ("\u004d\u004b",_egc .MK );_ggee .SetIfNotNil ("\u0041",_egc .A );_ggee .SetIfNotNil ("\u0041\u0041",_egc .AA );return _ebac ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _gea .PdfObject ;Volume _gea .PdfObject ;Synchronous _gea .PdfObject ;Repeat _gea .PdfObject ;Mix _gea .PdfObject ;};

// C returns the value of the C component of the color.
func (_cgeg *PdfColorCalRGB )C ()float64 {return _cgeg [2]};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _gea .PdfObject ;LE _gea .PdfObject ;BS _gea .PdfObject ;IC _gea .PdfObject ;BE _gea .PdfObject ;IT _gea .PdfObject ;Measure _gea .PdfObject ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ccbad pdfCIDFontType2 )GetRuneMetrics (r rune )(_ad .CharMetrics ,bool ){_fagab ,_gdbc :=_ccbad ._aagb [r ];if !_gdbc {_bfcg ,_eaad :=_gea .GetInt (_ccbad .DW );if !_eaad {return _ad .CharMetrics {},false ;};_fagab =int (*_bfcg );};return _ad .CharMetrics {Wx :float64 (_fagab )},true ;
};

// ToPdfObject implements interface PdfModel.
func (_beg *PdfActionNamed )ToPdfObject ()_gea .PdfObject {_beg .PdfAction .ToPdfObject ();_dec :=_beg ._af ;_dgf :=_dec .PdfObject .(*_gea .PdfObjectDictionary );_dgf .SetIfNotNil ("\u0053",_gea .MakeName (string (ActionTypeNamed )));_dgf .SetIfNotNil ("\u004e",_beg .N );
return _dec ;};func (_bdgge *pdfFontType0 )baseFields ()*fontCommon {return &_bdgge .fontCommon };

// GetCharMetrics returns the char metrics for character code `code`.
func (_ababd pdfCIDFontType0 )GetCharMetrics (code _ceb .CharCode )(_ad .CharMetrics ,bool ){_ggff :=_ababd ._ecggc ;if _gffe ,_ecbe :=_ababd ._cbfda [code ];_ecbe {_ggff =_gffe ;};return _ad .CharMetrics {Wx :_ggff },true ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_cbee :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_cbee .N =N ;return _cbee ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bd *PdfActionResetForm )ToPdfObject ()_gea .PdfObject {_bd .PdfAction .ToPdfObject ();_dge :=_bd ._af ;_dafd :=_dge .PdfObject .(*_gea .PdfObjectDictionary );_dafd .SetIfNotNil ("\u0053",_gea .MakeName (string (ActionTypeResetForm )));_dafd .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_bd .Fields );
_dafd .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_bd .Flags );return _dge ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_bacgg *PdfPage )SetContentStreams (cStreams []string ,encoder _gea .StreamEncoder )error {if len (cStreams )==0{_bacgg .Contents =nil ;return nil ;};if encoder ==nil {encoder =_gea .NewRawEncoder ();};var _bccfd []*_gea .PdfObjectStream ;for _ ,_abgcg :=range cStreams {_cacfa :=&_gea .PdfObjectStream {};
_dcebf :=encoder .MakeStreamDict ();_gbcac ,_afdbg :=encoder .EncodeBytes ([]byte (_abgcg ));if _afdbg !=nil {return _afdbg ;};_dcebf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gea .MakeInteger (int64 (len (_gbcac ))));_cacfa .PdfObjectDictionary =_dcebf ;
_cacfa .Stream =_gbcac ;_bccfd =append (_bccfd ,_cacfa );};if len (_bccfd )==1{_bacgg .Contents =_bccfd [0];}else {_bgcf :=_gea .MakeArray ();for _ ,_dgcaf :=range _bccfd {_bgcf .Append (_dgcaf );};_bacgg .Contents =_bgcf ;};return nil ;};func (_adeb *PdfAppender )updateObjectsDeep (_abce _gea .PdfObject ,_efag map[_gea .PdfObject ]struct{}){if _efag ==nil {_efag =map[_gea .PdfObject ]struct{}{};
};if _ ,_ege :=_efag [_abce ];_ege ||_abce ==nil {return ;};_efag [_abce ]=struct{}{};_fadf :=_gea .ResolveReferencesDeep (_abce ,_adeb ._bdd );if _fadf !=nil {_fd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fadf );};switch _acec :=_abce .(type ){case *_gea .PdfIndirectObject :switch {case _acec .GetParser ()==_adeb ._ggea ._edcdb :return ;
case _acec .GetParser ()==_adeb .Reader ._edcdb :_cdfa ,_ :=_adeb ._ggea .GetIndirectObjectByNumber (int (_acec .ObjectNumber ));_cfab ,_eadb :=_cdfa .(*_gea .PdfIndirectObject );if _eadb &&_cfab !=nil {if _cfab .PdfObject !=_acec .PdfObject &&_cfab .PdfObject .WriteString ()!=_acec .PdfObject .WriteString (){_adeb .addNewObject (_abce );
_adeb ._dfaa [_abce ]=_acec .ObjectNumber ;};};default:_adeb .addNewObject (_abce );};_adeb .updateObjectsDeep (_acec .PdfObject ,_efag );case *_gea .PdfObjectArray :for _ ,_adf :=range _acec .Elements (){_adeb .updateObjectsDeep (_adf ,_efag );};case *_gea .PdfObjectDictionary :for _ ,_dcee :=range _acec .Keys (){_adeb .updateObjectsDeep (_acec .Get (_dcee ),_efag );
};case *_gea .PdfObjectStreams :if _acec .GetParser ()!=_adeb ._ggea ._edcdb {for _ ,_defac :=range _acec .Elements (){_adeb .updateObjectsDeep (_defac ,_efag );};};case *_gea .PdfObjectStream :switch {case _acec .GetParser ()==_adeb ._ggea ._edcdb :return ;
case _acec .GetParser ()==_adeb .Reader ._edcdb :if _ddca ,_eagd :=_adeb ._ggea ._edcdb .LookupByReference (_acec .PdfObjectReference );_eagd ==nil {var _fccb bool ;if _cefca ,_abea :=_gea .GetStream (_ddca );_abea &&_ddg .Equal (_cefca .Stream ,_acec .Stream ){_fccb =true ;
};if _ebdb ,_gdab :=_gea .GetDict (_ddca );_fccb &&_gdab {_fccb =_ebdb .WriteString ()==_acec .PdfObjectDictionary .WriteString ();};if _fccb {return ;};};if _acec .ObjectNumber !=0{_adeb ._dfaa [_abce ]=_acec .ObjectNumber ;};default:if _ ,_cfgc :=_adeb ._edbc [_abce ];
!_cfgc {_adeb .addNewObject (_abce );};};_adeb .updateObjectsDeep (_acec .PdfObjectDictionary ,_efag );};};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_acag *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };func (_ffaga *PdfWriter )checkLicense ()error {_dcffe :=_ge .GetLicenseKey ();if (_dcffe ==nil ||!_dcffe .IsLicensed ())&&!_ceaea {_e .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_e .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _gg .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_degga DefaultImageHandler )Read (reader _cef .Reader )(*Image ,error ){_dcbg ,_ ,_abaa :=_d .Decode (reader );if _abaa !=nil {_fd .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_abaa );
return nil ,_abaa ;};return _degga .NewImageFromGoImage (_dcbg );};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_dffba *_gea .PdfIndirectObject ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_ccdf :=&PdfAnnotation {};_ccdf ._bbf =_gea .MakeIndirectObject (_gea .MakeDict ());return _ccdf ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fcdbeg *PdfPageResourcesColorspaces )ToPdfObject ()_gea .PdfObject {_dafdc :=_gea .MakeDict ();for _ ,_dffbg :=range _fcdbeg .Names {_dafdc .Set (_gea .PdfObjectName (_dffbg ),_fcdbeg .Colorspaces [_dffbg ].ToPdfObject ());};if _fcdbeg ._dffba !=nil {_fcdbeg ._dffba .PdfObject =_dafdc ;
return _fcdbeg ._dffba ;};return _dafdc ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_gea .PdfObjectName ;Colorants _gea .PdfObject ;Process _gea .PdfObject ;MixingHints _gea .PdfObject ;_aabd *_gea .PdfIndirectObject ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_eabb *PdfOutlineItem )ToPdfObject ()_gea .PdfObject {_bdccb :=_eabb ._cgcf ;_fead :=_bdccb .PdfObject .(*_gea .PdfObjectDictionary );_fead .Set ("\u0054\u0069\u0074l\u0065",_eabb .Title );if _eabb .A !=nil {_fead .Set ("\u0041",_eabb .A );};if _bdcbe :=_fead .Get ("\u0053\u0045");
_bdcbe !=nil {_fead .Remove ("\u0053\u0045");};if _eabb .C !=nil {_fead .Set ("\u0043",_eabb .C );};if _eabb .Dest !=nil {_fead .Set ("\u0044\u0065\u0073\u0074",_eabb .Dest );};if _eabb .F !=nil {_fead .Set ("\u0046",_eabb .F );};if _eabb .Count !=nil {_fead .Set ("\u0043\u006f\u0075n\u0074",_gea .MakeInteger (*_eabb .Count ));
};if _eabb .Next !=nil {_fead .Set ("\u004e\u0065\u0078\u0074",_eabb .Next .ToPdfObject ());};if _eabb .First !=nil {_fead .Set ("\u0046\u0069\u0072s\u0074",_eabb .First .ToPdfObject ());};if _eabb .Prev !=nil {_fead .Set ("\u0050\u0072\u0065\u0076",_eabb .Prev .GetContext ().GetContainingPdfObject ());
};if _eabb .Last !=nil {_fead .Set ("\u004c\u0061\u0073\u0074",_eabb .Last .GetContext ().GetContainingPdfObject ());};if _eabb .Parent !=nil {_fead .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eabb .Parent .GetContext ().GetContainingPdfObject ());};
return _bdccb ;};

// ToPdfObject implements interface PdfModel.
func (_bdcf *PdfAnnotation3D )ToPdfObject ()_gea .PdfObject {_bdcf .PdfAnnotation .ToPdfObject ();_geff :=_bdcf ._bbf ;_bace :=_geff .PdfObject .(*_gea .PdfObjectDictionary );_bace .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0033\u0044"));
_bace .SetIfNotNil ("\u0033\u0044\u0044",_bdcf .T3DD );_bace .SetIfNotNil ("\u0033\u0044\u0056",_bdcf .T3DV );_bace .SetIfNotNil ("\u0033\u0044\u0041",_bdcf .T3DA );_bace .SetIfNotNil ("\u0033\u0044\u0049",_bdcf .T3DI );_bace .SetIfNotNil ("\u0033\u0044\u0042",_bdcf .T3DB );
return _geff ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_gedbg *PdfRectangle )Normalize (){if _gedbg .Llx > _gedbg .Urx {_gedbg .Llx ,_gedbg .Urx =_gedbg .Urx ,_gedbg .Llx ;};if _gedbg .Lly > _gedbg .Ury {_gedbg .Lly ,_gedbg .Ury =_gedbg .Ury ,_gedbg .Lly ;};};func (_eddb *PdfReader )newPdfActionURIFromDict (_cec *_gea .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_cec .Get ("\u0055\u0052\u0049"),IsMap :_cec .Get ("\u0049\u0073\u004da\u0070")},nil ;
};var _adbe =_cag .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// GetStandardApplier gets currently used StandardApplier..
func (_feffa *PdfWriter )GetStandardApplier ()StandardApplier {return _feffa ._abfbb };

// ToInteger convert to an integer format.
func (_ecb *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_dgba :=_fa .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_dgba *_ecb .C ()),uint32 (_dgba *_ecb .M ()),uint32 (_dgba *_ecb .Y ()),uint32 (_dgba *_ecb .K ())};};func (_cdcd *PdfWriter )setHashIDs (_cgbdf _ef .Hash )error {_fcecf :=_cgbdf .Sum (nil );
if _cdcd ._dgfabb ==""{_cdcd ._dgfabb =_gb .EncodeToString (_fcecf [:8]);};_cdcd .setDocumentIDs (_cdcd ._dgfabb ,_gb .EncodeToString (_fcecf [8:]));return nil ;};func (_ecga *PdfWriter )setDocInfo (_dbfab _gea .PdfObject ){if _ecga .hasObject (_ecga ._efabg ){delete (_ecga ._edfdb ,_ecga ._efabg );
delete (_ecga ._fabgc ,_ecga ._efabg );for _ggcg ,_dbgba :=range _ecga ._aeaa {if _dbgba ==_ecga ._efabg {copy (_ecga ._aeaa [_ggcg :],_ecga ._aeaa [_ggcg +1:]);_ecga ._aeaa [len (_ecga ._aeaa )-1]=nil ;_ecga ._aeaa =_ecga ._aeaa [:len (_ecga ._aeaa )-1];
break ;};};};_dgabb :=_gea .PdfIndirectObject {};_dgabb .PdfObject =_dbfab ;_ecga ._efabg =&_dgabb ;_ecga .addObject (&_dgabb );};

// GetXObjectByName gets XObject by name.
func (_fdgaf *PdfPage )GetXObjectByName (name _gea .PdfObjectName )(_gea .PdfObject ,bool ){_cegbf ,_babef :=_fdgaf .Resources .XObject .(*_gea .PdfObjectDictionary );if !_babef {return nil ,false ;};if _gffdd :=_cegbf .Get (name );_gffdd !=nil {return _gffdd ,true ;
};return nil ,false ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_gea .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_gea .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_gea .PdfObjectBool ;_cffdg PdfModel ;_adae _gea .PdfObject ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_gbg :=NewPdfAction ();_dde :=&PdfActionSubmitForm {};_dde .PdfAction =_gbg ;_gbg .SetContext (_dde );return _dde ;};

// ToInteger convert to an integer format.
func (_bddc *PdfColorCalGray )ToInteger (bits int )uint32 {_ddfa :=_fa .Pow (2,float64 (bits ))-1;return uint32 (_ddfa *_bddc .Val ());};

// Initialize initializes the PdfSignature.
func (_abdad *PdfSignature )Initialize ()error {if _abdad .Handler ==nil {return _gg .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _abdad .Handler .InitSignature (_abdad );};

// Evaluate runs the function on the passed in slice and returns the results.
func (_cfagea *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_fd .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_cfceg :=[]float64 {0.0};if _cfagea .C0 !=nil {_cfceg =_cfagea .C0 ;};_accba :=[]float64 {1.0};if _cfagea .C1 !=nil {_accba =_cfagea .C1 ;};var _eeba []float64 ;for _cbacc :=0;_cbacc < len (_cfceg );_cbacc ++{_gbbee :=_cfceg [_cbacc ]+_fa .Pow (x [0],_cfagea .N )*(_accba [_cbacc ]-_cfceg [_cbacc ]);
_eeba =append (_eeba ,_gbbee );};return _eeba ,nil ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_fdcgb *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _gea .GetNumberAsFloat (_fdcgb .CapHeight );};func (_eecfa *PdfWriter )adjustXRefAffectedVersion (_gabgd bool ){if _gabgd &&_eecfa ._fedce .Major ==1&&_eecfa ._fedce .Minor < 5{_eecfa ._fedce .Minor =5;
};};

// Encoder returns the font's text encoder.
func (_dgef pdfCIDFontType0 )Encoder ()_ceb .TextEncoder {return _dgef ._eecde };

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _gea .PdfObject ;BS _gea .PdfObject ;LE _gea .PdfObject ;IC _gea .PdfObject ;LL _gea .PdfObject ;LLE _gea .PdfObject ;Cap _gea .PdfObject ;IT _gea .PdfObject ;LLO _gea .PdfObject ;CP _gea .PdfObject ;
Measure _gea .PdfObject ;CO _gea .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_gaab *PdfAnnotationPolygon )ToPdfObject ()_gea .PdfObject {_gaab .PdfAnnotation .ToPdfObject ();_adea :=_gaab ._bbf ;_dafg :=_adea .PdfObject .(*_gea .PdfObjectDictionary );_gaab .PdfAnnotationMarkup .appendToPdfDictionary (_dafg );_dafg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_dafg .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_gaab .Vertices );_dafg .SetIfNotNil ("\u004c\u0045",_gaab .LE );_dafg .SetIfNotNil ("\u0042\u0053",_gaab .BS );_dafg .SetIfNotNil ("\u0049\u0043",_gaab .IC );_dafg .SetIfNotNil ("\u0042\u0045",_gaab .BE );
_dafg .SetIfNotNil ("\u0049\u0054",_gaab .IT );_dafg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gaab .Measure );return _adea ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_fcgbe *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_gea .PdfObject )(PdfColor ,error ){if len (objects )!=_fcgbe .GetNumComponents (){return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_accca ,_edfc :=_gea .GetNumbersAsFloat (objects );
if _edfc !=nil {return nil ,_edfc ;};return _fcgbe .ColorFromFloats (_accca );};func (_adbf *Image )samplesTrimPadding (_bagfe []uint32 )[]uint32 {_ggbcc :=_adbf .ColorComponents *int (_adbf .Width )*int (_adbf .Height );if len (_bagfe )==_ggbcc {return _bagfe ;
};_eadfcf :=make ([]uint32 ,_ggbcc );_febc :=int (_adbf .Width )*_adbf .ColorComponents ;var _fefad ,_dbba ,_bedgb ,_caac int ;_ffeee :=_deg .BytesPerLine (int (_adbf .Width ),int (_adbf .BitsPerComponent ),_adbf .ColorComponents );for _fefad =0;_fefad < int (_adbf .Height );
_fefad ++{_dbba =_fefad *int (_adbf .Width );_bedgb =_fefad *_ffeee ;for _caac =0;_caac < _febc ;_caac ++{_eadfcf [_dbba +_caac ]=_bagfe [_bedgb +_caac ];};};return _eadfcf ;};func _gaaaee (_gfge *_gea .PdfObjectDictionary )(*PdfShadingType7 ,error ){_ebabb :=PdfShadingType7 {};
_eaba :=_gfge .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _eaba ==nil {_fd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dcaae ,_ggggc :=_eaba .(*_gea .PdfObjectInteger );if !_ggggc {_fd .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eaba );
return nil ,_gea .ErrTypeError ;};_ebabb .BitsPerCoordinate =_dcaae ;_eaba =_gfge .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _eaba ==nil {_fd .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dcaae ,_ggggc =_eaba .(*_gea .PdfObjectInteger );if !_ggggc {_fd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_eaba );
return nil ,_gea .ErrTypeError ;};_ebabb .BitsPerComponent =_dcaae ;_eaba =_gfge .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _eaba ==nil {_fd .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dcaae ,_ggggc =_eaba .(*_gea .PdfObjectInteger );if !_ggggc {_fd .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_eaba );
return nil ,_gea .ErrTypeError ;};_ebabb .BitsPerComponent =_dcaae ;_eaba =_gfge .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _eaba ==nil {_fd .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dbgdcd ,_ggggc :=_eaba .(*_gea .PdfObjectArray );if !_ggggc {_fd .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eaba );
return nil ,_gea .ErrTypeError ;};_ebabb .Decode =_dbgdcd ;if _bdagbf :=_gfge .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_bdagbf !=nil {_ebabb .Function =[]PdfFunction {};if _geef ,_ccecg :=_bdagbf .(*_gea .PdfObjectArray );_ccecg {for _ ,_gbcfg :=range _geef .Elements (){_gfcaf ,_ecbd :=_adggc (_gbcfg );
if _ecbd !=nil {_fd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ecbd );return nil ,_ecbd ;};_ebabb .Function =append (_ebabb .Function ,_gfcaf );
};}else {_edgag ,_abcf :=_adggc (_bdagbf );if _abcf !=nil {_fd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_abcf );return nil ,_abcf ;
};_ebabb .Function =append (_ebabb .Function ,_edgag );};};return &_ebabb ,nil ;};

// GetPdfVersion gets the version of the PDF used within this document.
func (_eaefa *PdfWriter )GetPdfVersion ()string {return _eaefa .getPdfVersion ()};func _gcebe (_dabbg *PdfPage ){_abafee :=_ge .GetLicenseKey ();if _abafee !=nil &&_abafee .IsLicensed (){return ;};_ddbfd :=_gea .PdfObjectName ("\u0055\u0046\u0031");if !_dabbg .Resources .HasFontByName (_ddbfd ){_dabbg .Resources .SetFontByName (_ddbfd ,DefaultFont ().ToPdfObject ());
};var _cbfef []string ;_cbfef =append (_cbfef ,"\u0071");_cbfef =append (_cbfef ,"\u0042\u0054");_cbfef =append (_cbfef ,_e .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_ddbfd .String ()));_cbfef =append (_cbfef ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");
_cbfef =append (_cbfef ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_fgfd :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_cbfef =append (_cbfef ,_e .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_fgfd ));_cbfef =append (_cbfef ,"\u0045\u0054");_cbfef =append (_cbfef ,"\u0051");_feea :=_aa .Join (_cbfef ,"\u000a");_dabbg .AddContentStreamByString (_feea );_dabbg .ToPdfObject ();
};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _g .Time )(PdfDate ,error ){_gdega :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_daab ,_ :=_eb .ParseInt (_gdega [1:3],10,32);_bbcgcg ,_ :=_eb .ParseInt (_gdega [4:6],10,32);return PdfDate {_bbdacc :int64 (timeObj .Year ()),_eefcf :int64 (timeObj .Month ()),_cggf :int64 (timeObj .Day ()),_cebfc :int64 (timeObj .Hour ()),_agcacg :int64 (timeObj .Minute ()),_bfecg :int64 (timeObj .Second ()),_bdbbf :_gdega [0],_gacgf :_daab ,_bade :_bbcgcg },nil ;
};

// Add appends a top level outline item to the outline.
func (_adeaa *Outline )Add (item *OutlineItem ){_adeaa .Entries =append (_adeaa .Entries ,item )};func _ccbde ()string {_aefdbd .Lock ();defer _aefdbd .Unlock ();return _ceec };

// SetLocation sets the `Location` field of the signature.
func (_afecfd *PdfSignature )SetLocation (location string ){_afecfd .Location =_gea .MakeString (location );};

// B returns the value of the blue component of the color.
func (_fgfff *PdfColorDeviceRGB )B ()float64 {return _fgfff [2]};func _caeb (_aeec *_gea .PdfObjectDictionary )(*PdfFieldButton ,error ){_beaa :=&PdfFieldButton {};_beaa .PdfField =NewPdfField ();_beaa .PdfField .SetContext (_beaa );_beaa .Opt ,_ =_gea .GetArray (_aeec .Get ("\u004f\u0070\u0074"));
_ccee :=NewPdfAnnotationWidget ();_ccee .A ,_ =_gea .GetDict (_aeec .Get ("\u0041"));_ccee .AP ,_ =_gea .GetDict (_aeec .Get ("\u0041\u0050"));_ccee .SetContext (_beaa );_beaa .PdfField .Annotations =append (_beaa .PdfField .Annotations ,_ccee );return _beaa ,nil ;
};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_dagb *_gea .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_gea .PdfObjectName ;Filter *_gea .PdfObjectName ;SubFilter *_gea .PdfObjectName ;Contents *_gea .PdfObjectString ;Cert _gea .PdfObject ;ByteRange *_gea .PdfObjectArray ;Reference *_gea .PdfObjectArray ;Changes *_gea .PdfObjectArray ;Name *_gea .PdfObjectString ;
M *_gea .PdfObjectString ;Location *_gea .PdfObjectString ;Reason *_gea .PdfObjectString ;ContactInfo *_gea .PdfObjectString ;R *_gea .PdfObjectInteger ;V *_gea .PdfObjectInteger ;PropBuild *_gea .PdfObjectDictionary ;PropAuthTime *_gea .PdfObjectInteger ;
PropAuthType *_gea .PdfObjectName ;};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);func (_cde *PdfReader )newPdfAnnotationSquareFromDict (_fgff *_gea .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_age :=PdfAnnotationSquare {};
_ddecd ,_gga :=_cde .newPdfAnnotationMarkupFromDict (_fgff );if _gga !=nil {return nil ,_gga ;};_age .PdfAnnotationMarkup =_ddecd ;_age .BS =_fgff .Get ("\u0042\u0053");_age .IC =_fgff .Get ("\u0049\u0043");_age .BE =_fgff .Get ("\u0042\u0045");_age .RD =_fgff .Get ("\u0052\u0044");
return &_age ,nil ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_ggad *PdfPageResources )SetShadingByName (keyName _gea .PdfObjectName ,shadingObj _gea .PdfObject )error {if _ggad .Shading ==nil {_ggad .Shading =_gea .MakeDict ();};_gebb ,_gfcce :=_gea .GetDict (_ggad .Shading );if !_gfcce {return _gea .ErrTypeError ;
};_gebb .Set (keyName ,shadingObj );return nil ;};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_ceabb :=PdfColorDeviceGray (grayVal );return &_ceabb ;};func (_aabdb *PdfFilespec )getDict ()*_gea .PdfObjectDictionary {if _gbdff ,_gbagd :=_aabdb ._feeef .(*_gea .PdfIndirectObject );
_gbagd {_abee ,_eeee :=_gbdff .PdfObject .(*_gea .PdfObjectDictionary );if !_eeee {return nil ;};return _abee ;}else if _fcdd ,_fddgc :=_aabdb ._feeef .(*_gea .PdfObjectDictionary );_fddgc {return _fcdd ;}else {_fd .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_aabdb ._feeef );
return nil ;};};

// SetAction sets the PDF action for the annotation link.
func (_gdb *PdfAnnotationLink )SetAction (action *PdfAction ){_gdb ._gaaf =action ;if action ==nil {_gdb .A =nil ;};};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_ecdf *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_eeb :=NewPdfAnnotation ();_ccbe :=&PdfAnnotation3D {};_ccbe .PdfAnnotation =_eeb ;_eeb .SetContext (_ccbe );return _ccbe ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_fafde *Outline )ToPdfObject ()_gea .PdfObject {return _fafde .ToPdfOutline ().ToPdfObject ()};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _gea .StreamEncoder )(*XObjectImage ,error ){_ccefd :=NewXObjectImage ();return UpdateXObjectImageFromImage (_ccefd ,img ,cs ,encoder );};func (_bfae *PdfReader )lookupPageByObject (_dcdcba _gea .PdfObject )(*PdfPage ,error ){return nil ,_gg .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_cdab *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_aebb ,_bgge :=color .(*PdfColorDeviceRGB );if !_bgge {_fd .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_gg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _aebb ,nil ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_gbfeb *PdfField )FullName ()(string ,error ){var _bfag _ddg .Buffer ;_fbbb :=[]string {};if _gbfeb .T !=nil {_fbbb =append (_fbbb ,_gbfeb .T .Decoded ());};_efbc :=map[*PdfField ]bool {};_efbc [_gbfeb ]=true ;_bfaf :=_gbfeb .Parent ;for _bfaf !=nil {if _ ,_gffcf :=_efbc [_bfaf ];
_gffcf {return _bfag .String (),_gg .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _bfaf .T ==nil {return _bfag .String (),_gg .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_fbbb =append (_fbbb ,_bfaf .T .Decoded ());_efbc [_bfaf ]=true ;_bfaf =_bfaf .Parent ;};for _debgb :=len (_fbbb )-1;_debgb >=0;_debgb --{_bfag .WriteString (_fbbb [_debgb ]);if _debgb > 0{_bfag .WriteString ("\u002e");};};return _bfag .String (),nil ;
};

// WriteString outputs the object as it is to be written to file.
func (_dagaa *pdfSignDictionary )WriteString ()string {_dagaa ._dcacb =0;_dagaa ._fbdbc =0;_dagaa ._fcgda =0;_dagaa ._aadbbc =0;_ecdgb :=_ddg .NewBuffer (nil );_ecdgb .WriteString ("\u003c\u003c");for _ ,_eeebd :=range _dagaa .Keys (){_bgba :=_dagaa .Get (_eeebd );
switch _eeebd {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_ecdgb .WriteString (_eeebd .WriteString ());_ecdgb .WriteString ("\u0020");_dagaa ._fcgda =_ecdgb .Len ();_ecdgb .WriteString (_bgba .WriteString ());_ecdgb .WriteString ("\u0020");_dagaa ._aadbbc =_ecdgb .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_ecdgb .WriteString (_eeebd .WriteString ());_ecdgb .WriteString ("\u0020");_dagaa ._dcacb =_ecdgb .Len ();_ecdgb .WriteString (_bgba .WriteString ());_ecdgb .WriteString ("\u0020");_dagaa ._fbdbc =_ecdgb .Len ()-1;
default:_ecdgb .WriteString (_eeebd .WriteString ());_ecdgb .WriteString ("\u0020");_ecdgb .WriteString (_bgba .WriteString ());};};_ecdgb .WriteString ("\u003e\u003e");return _ecdgb .String ();};

// ToPdfObject implements interface PdfModel.
func (_adbg *PdfActionJavaScript )ToPdfObject ()_gea .PdfObject {_adbg .PdfAction .ToPdfObject ();_ceba :=_adbg ._af ;_fca :=_ceba .PdfObject .(*_gea .PdfObjectDictionary );_fca .SetIfNotNil ("\u0053",_gea .MakeName (string (ActionTypeJavaScript )));_fca .SetIfNotNil ("\u004a\u0053",_adbg .JS );
return _ceba ;};

// Add appends an outline item as a child of the current outline item.
func (_dbggb *OutlineItem )Add (item *OutlineItem ){_dbggb .Entries =append (_dbggb .Entries ,item )};

// ToPdfObject converts date to a PDF string object.
func (_facgb *PdfDate )ToPdfObject ()_gea .PdfObject {_eddgd :=_e .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_facgb ._bbdacc ,_facgb ._eefcf ,_facgb ._cggf ,_facgb ._cebfc ,_facgb ._agcacg ,_facgb ._bfecg ,_facgb ._bdbbf ,_facgb ._gacgf ,_facgb ._bade );
return _gea .MakeString (_eddgd );};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_ecgbb *PdfPageResources )AddExtGState (gsName _gea .PdfObjectName ,gsDict _gea .PdfObject )error {if _ecgbb .ExtGState ==nil {_ecgbb .ExtGState =_gea .MakeDict ();};_ebadf :=_ecgbb .ExtGState ;_gefg ,_dcadc :=_gea .TraceToDirectObject (_ebadf ).(*_gea .PdfObjectDictionary );
if !_dcadc {_fd .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_ebadf ,_gea .TraceToDirectObject (_ebadf ));
return _gea .ErrTypeError ;};_gefg .Set (gsName ,gsDict );return nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_fagdd *PdfPage )AppendContentStream (contentStr string )error {_dbafg ,_fbee :=_fagdd .GetContentStreams ();if _fbee !=nil {return _fbee ;};if len (_dbafg )==0{_dbafg =[]string {contentStr };return _fagdd .SetContentStreams (_dbafg ,_gea .NewFlateEncoder ());
};var _cddg _ddg .Buffer ;_cddg .WriteString (_dbafg [len (_dbafg )-1]);_cddg .WriteString ("\u000a");_cddg .WriteString (contentStr );_dbafg [len (_dbafg )-1]=_cddg .String ();return _fagdd .SetContentStreams (_dbafg ,_gea .NewFlateEncoder ());};func _gbbad (_gaddc *_gea .PdfObjectDictionary ,_gfea *fontCommon )(*pdfCIDFontType2 ,error ){if _gfea ._abed !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_fd .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_gfea );
return nil ,_gea .ErrRangeError ;};_cgecg :=_eadge (_gfea );_ebdcf ,_effae :=_gea .GetDict (_gaddc .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_effae {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_gfea );
return nil ,ErrRequiredAttributeMissing ;};_cgecg .CIDSystemInfo =_ebdcf ;_cgecg .DW =_gaddc .Get ("\u0044\u0057");_cgecg .W =_gaddc .Get ("\u0057");_cgecg .DW2 =_gaddc .Get ("\u0044\u0057\u0032");_cgecg .W2 =_gaddc .Get ("\u0057\u0032");_cgecg .CIDToGIDMap =_gaddc .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_cgecg ._dcdab =1000.0;if _fdca ,_ddecf :=_gea .GetNumberAsFloat (_cgecg .DW );_ddecf ==nil {_cgecg ._dcdab =_fdca ;};_ddecbc ,_deabc :=_ggcc (_cgecg .W );if _deabc !=nil {return nil ,_deabc ;};if _ddecbc ==nil {_ddecbc =map[_ceb .CharCode ]float64 {};
};_cgecg ._gebgb =_ddecbc ;return _cgecg ,nil ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_cfdad *Image )ToGoImage ()(_d .Image ,error ){_fd .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_aeag ,_fefb :=_deg .NewImage (int (_cfdad .Width ),int (_cfdad .Height ),int (_cfdad .BitsPerComponent ),_cfdad .ColorComponents ,_cfdad .Data ,_cfdad ._bdbf ,_cfdad ._edadg );
if _fefb !=nil {return nil ,_fefb ;};return _aeag ,nil ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_efgbe PdfModel ;_bgcec _gea .PdfObject ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_gea .PdfObjectArray ;Matrix *_gea .PdfObjectArray ;Function []PdfFunction ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_ebcf ,_bgfcg :=_beefe (basefont );if _bgfcg !=nil {return nil ,_bgfcg ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_ebcf ._egaa =_ceb .NewWinAnsiEncoder ();};return &PdfFont {_bgfbc :&_ebcf },nil ;
};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _g .Time ){_aefdbd .Lock ();defer _aefdbd .Unlock ();_adcaa =modifiedDate ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_bgfg *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffdf :=vals [0];if _ffdf < 0.0||_ffdf > 100.0{_fd .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_ffdf );
return nil ,ErrColorOutOfRange ;};_gdcee :=vals [1];_fefc :=float64 (-100);_gadf :=float64 (100);if len (_bgfg .Range )> 1{_fefc =_bgfg .Range [0];_gadf =_bgfg .Range [1];};if _gdcee < _fefc ||_gdcee > _gadf {_fd .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_gdcee ,_fefc ,_gadf );
return nil ,ErrColorOutOfRange ;};_efdc :=vals [2];_geab :=float64 (-100);_gcbe :=float64 (100);if len (_bgfg .Range )> 3{_geab =_bgfg .Range [2];_gcbe =_bgfg .Range [3];};if _efdc < _geab ||_efdc > _gcbe {_fd .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_efdc ,_geab ,_gcbe );
return nil ,ErrColorOutOfRange ;};_cdaf :=NewPdfColorLab (_ffdf ,_gdcee ,_efdc );return _cdaf ,nil ;};

// Transform rectangle with the supplied matrix.
func (_acgea *PdfRectangle )Transform (transformMatrix _fe .Matrix ){_acgea .Llx ,_acgea .Lly =transformMatrix .Transform (_acgea .Llx ,_acgea .Lly );_acgea .Urx ,_acgea .Ury =transformMatrix .Transform (_acgea .Urx ,_acgea .Ury );_acgea .Normalize ();
};func (_dcc *PdfReader )newPdfActionGotoEFromDict (_bfc *_gea .PdfObjectDictionary )(*PdfActionGoToE ,error ){_baae ,_agg :=_bdg (_bfc .Get ("\u0046"));if _agg !=nil {return nil ,_agg ;};return &PdfActionGoToE {D :_bfc .Get ("\u0044"),NewWindow :_bfc .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_bfc .Get ("\u0054"),F :_baae },nil ;
};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _gea .PdfObject ;T _gea .PdfObject ;Operation _gea .PdfObject ;};func _ddad (_baeaa string )(map[_ceb .CharCode ]_ceb .GlyphName ,error ){_bffdc :=_aa .Split (_baeaa ,"\u000a");_efacge :=make (map[_ceb .CharCode ]_ceb .GlyphName );
for _ ,_gcef :=range _bffdc {_fadc :=_gdaeg .FindStringSubmatch (_gcef );if _fadc ==nil {continue ;};_bffcb ,_aeae :=_fadc [1],_fadc [2];_gfbfa ,_abbg :=_eb .Atoi (_bffcb );if _abbg !=nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_gcef );
return nil ,_gea .ErrTypeError ;};_efacge [_ceb .CharCode (_gfbfa )]=_ceb .GlyphName (_aeae );};_fd .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_efacge );
return _efacge ,nil ;};func (_gaa *PdfReader )newPdfActionSetOCGStateFromDict (_bca *_gea .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_bca .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_bca .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};func (_ceebg *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _ceebg ._edcdb .GetCrypter ()!=nil &&!_ceebg ._edcdb .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_gfddf :=_ceebg ._cdda ;_bcca :=_gfddf .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _bcca ==nil {return nil ,nil ;};_afbfb ,_gebd :=_gea .GetIndirect (_bcca );_bcca =_gea .TraceToDirectObject (_bcca );if _gea .IsNullObject (_bcca ){_fd .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_bdbe ,_gdad :=_gea .GetDict (_bcca );if !_gdad {_fd .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_bcca );_fd .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_bcca );};_fd .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_fd .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_ceebg ._debgbb {_gadae :=_ceebg .traverseObjectData (_bdbe );
if _gadae !=nil {_fd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_gadae );
return nil ,_gadae ;};};_caebd ,_dbdad :=_ceebg .newPdfAcroFormFromDict (_afbfb ,_bdbe );if _dbdad !=nil {return nil ,_dbdad ;};_caebd ._ecab =!_gebd ;return _caebd ,nil ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_egeg *PdfPage )GetContentStreamObjs ()[]_gea .PdfObject {if _egeg .Contents ==nil {return nil ;};_dbcca :=_gea .TraceToDirectObject (_egeg .Contents );if _gadee ,_dcbea :=_dbcca .(*_gea .PdfObjectArray );_dcbea {return _gadee .Elements ();};return []_gea .PdfObject {_dbcca };
};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_gab :=NewPdfAnnotation ();_ddee :=&PdfAnnotationHighlight {};_ddee .PdfAnnotation =_gab ;_ddee .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gab .SetContext (_ddee );return _ddee ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_agaac *_gea .PdfIndirectObject ;};func _dedgd (_bbeb _gea .PdfObject )(*fontFile ,error ){_fd .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_bbeb );
_facg :=&fontFile {};_bbeb =_gea .TraceToDirectObject (_bbeb );_addc ,_ffecc :=_bbeb .(*_gea .PdfObjectStream );if !_ffecc {_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_bbeb );
return nil ,_gea .ErrTypeError ;};_bdbc :=_addc .PdfObjectDictionary ;_eecdb ,_bedac :=_gea .DecodeStream (_addc );if _bedac !=nil {return nil ,_bedac ;};_fced ,_ffecc :=_gea .GetNameVal (_bdbc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_ffecc {_facg ._ggaa =_fced ;
if _fced =="\u0054\u0079\u0070\u0065\u0031\u0043"{_fd .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_aaacf ,_ :=_gea .GetIntVal (_bdbc .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_dafc ,_ :=_gea .GetIntVal (_bdbc .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _aaacf > len (_eecdb ){_aaacf =len (_eecdb );
};if _aaacf +_dafc > len (_eecdb ){_dafc =len (_eecdb )-_aaacf ;};_bbcfc :=_eecdb [:_aaacf ];var _cgfa []byte ;if _dafc > 0{_cgfa =_eecdb [_aaacf :_aaacf +_dafc ];};if _aaacf > 0&&_dafc > 0{_fdfa :=_facg .loadFromSegments (_bbcfc ,_cgfa );if _fdfa !=nil {return nil ,_fdfa ;
};};return _facg ,nil ;};func (_edde *PdfReader )newPdfFieldSignatureFromDict (_beae *_gea .PdfObjectDictionary )(*PdfFieldSignature ,error ){_edgdf :=&PdfFieldSignature {};_dabb ,_gcbb :=_gea .GetIndirect (_beae .Get ("\u0056"));if _gcbb {var _geecc error ;
_edgdf .V ,_geecc =_edde .newPdfSignatureFromIndirect (_dabb );if _geecc !=nil {return nil ,_geecc ;};};_edgdf .Lock ,_ =_gea .GetIndirect (_beae .Get ("\u004c\u006f\u0063\u006b"));_edgdf .SV ,_ =_gea .GetIndirect (_beae .Get ("\u0053\u0056"));return _edgdf ,nil ;
};

// Items returns all children outline items.
func (_ccaba *Outline )Items ()[]*OutlineItem {return _ccaba .Entries };func (_dgaebe *PdfReader )buildNameNodes (_dcfgb *_gea .PdfIndirectObject ,_fdab map[_gea .PdfObject ]struct{})error {if _dcfgb ==nil {return nil ;};if _ ,_cbgff :=_fdab [_dcfgb ];
_cbgff {_fd .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_dcfgb .ObjectNumber );return nil ;};_fdab [_dcfgb ]=struct{}{};
_gbbbb ,_bdgde :=_dcfgb .PdfObject .(*_gea .PdfObjectDictionary );if !_bdgde {return _gg .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _ccaa ,_edgbc :=_gea .GetDict (_gbbbb .Get ("\u0044\u0065\u0073t\u0073"));
_edgbc {_dede ,_cgga :=_gea .GetArray (_ccaa .Get ("\u004b\u0069\u0064\u0073"));if !_cgga {return _gg .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_fd .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_dede );
for _gbeae ,_cdcg :=range _dede .Elements (){_cafdg ,_gbegc :=_gea .GetIndirect (_cdcg );if !_gbegc {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_cafdg );
return _gg .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_dede .Set (_gbeae ,_cafdg );_ecbgb :=_dgaebe .buildNameNodes (_cafdg ,_fdab );if _ecbgb !=nil {return _ecbgb ;
};};};if _ecfg ,_ggdcc :=_gea .GetDict (_gbbbb );_ggdcc {if !_gea .IsNullObject (_ecfg .Get ("\u004b\u0069\u0064\u0073")){if _dabcc ,_afaeb :=_gea .GetArray (_ecfg .Get ("\u004b\u0069\u0064\u0073"));_afaeb {for _addgd ,_bdef :=range _dabcc .Elements (){if _aaedg ,_gfag :=_gea .GetIndirect (_bdef );
_gfag {_dabcc .Set (_addgd ,_aaedg );_fafa :=_dgaebe .buildNameNodes (_aaedg ,_fdab );if _fafa !=nil {return _fafa ;};};};};};};return nil ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// String returns a string representation of what flags are set.
func (_cgfe FieldFlag )String ()string {_dadae :="";if _cgfe ==FieldFlagClear {_dadae ="\u0043\u006c\u0065a\u0072";return _dadae ;};if _cgfe &FieldFlagReadOnly > 0{_dadae +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _cgfe &FieldFlagRequired > 0{_dadae +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _cgfe &FieldFlagNoExport > 0{_dadae +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _cgfe &FieldFlagNoToggleToOff > 0{_dadae +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _cgfe &FieldFlagRadio > 0{_dadae +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _cgfe &FieldFlagPushbutton > 0{_dadae +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _cgfe &FieldFlagRadiosInUnision > 0{_dadae +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _cgfe &FieldFlagMultiline > 0{_dadae +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _cgfe &FieldFlagPassword > 0{_dadae +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _cgfe &FieldFlagFileSelect > 0{_dadae +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _cgfe &FieldFlagDoNotScroll > 0{_dadae +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _cgfe &FieldFlagComb > 0{_dadae +="\u007c\u0043\u006fm\u0062";};if _cgfe &FieldFlagRichText > 0{_dadae +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _cgfe &FieldFlagDoNotSpellCheck > 0{_dadae +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _cgfe &FieldFlagCombo > 0{_dadae +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _cgfe &FieldFlagEdit > 0{_dadae +="\u007c\u0045\u0064i\u0074";};if _cgfe &FieldFlagSort > 0{_dadae +="\u007c\u0053\u006fr\u0074";};if _cgfe &FieldFlagMultiSelect > 0{_dadae +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _cgfe &FieldFlagCommitOnSelChange > 0{_dadae +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _aa .Trim (_dadae ,"\u007c");};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_cafc :=NewPdfAction ();_be :=&PdfActionThread {};_be .PdfAction =_cafc ;_cafc .SetContext (_be );return _be ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_degdc *PdfWriter )SetRotation (rotate int64 )error {_gcbeb ,_bafdb :=_gea .GetDict (_degdc ._bccec );if !_bafdb {return ErrTypeCheck ;};_gcbeb .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_gea .MakeInteger (rotate ));return nil ;};

// SetContext sets the sub action (context).
func (_fcc *PdfAction )SetContext (ctx PdfModel ){_fcc ._fc =ctx };type pdfFontType0 struct{fontCommon ;_fbbc *_gea .PdfIndirectObject ;_dgaaf _ceb .TextEncoder ;Encoding _gea .PdfObject ;DescendantFont *PdfFont ;_caddc *_ebd .CMap ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_dgceb *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _gea .GetNumberAsFloat (_dgceb .Ascent );};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_ggef *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// String returns a string representation of PdfTransformParamsDocMDP.
func (_efecg *PdfTransformParamsDocMDP )String ()string {return _e .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_efecg .Type ,_efecg .P ,_efecg .V );};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };func (_bab *PdfReader )newPdfActionSubmitFormFromDict (_fgf *_gea .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_gfc ,_gbb :=_bdg (_fgf .Get ("\u0046"));if _gbb !=nil {return nil ,_gbb ;};return &PdfActionSubmitForm {F :_gfc ,Fields :_fgf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_fgf .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};func _deeg (_eeaeb _gea .PdfObject )(*PdfColorspaceICCBased ,error ){_fddcg :=&PdfColorspaceICCBased {};if _bddcb ,_adba :=_eeaeb .(*_gea .PdfIndirectObject );_adba {_fddcg ._adcg =_bddcb ;};_eeaeb =_gea .TraceToDirectObject (_eeaeb );_aagg ,_bcec :=_eeaeb .(*_gea .PdfObjectArray );
if !_bcec {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _aagg .Len ()!=2{return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_eeaeb =_gea .TraceToDirectObject (_aagg .Get (0));_acead ,_bcec :=_eeaeb .(*_gea .PdfObjectName );if !_bcec {return nil ,_e .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_acead !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_e .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_eeaeb =_aagg .Get (1);
_bbea ,_bcec :=_gea .GetStream (_eeaeb );if !_bcec {_fd .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_eeaeb );
return nil ,_e .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_gdae :=_bbea .PdfObjectDictionary ;_edcb ,_bcec :=_gdae .Get ("\u004e").(*_gea .PdfObjectInteger );
if !_bcec {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_edcb !=1&&*_edcb !=3&&*_edcb !=4{return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_fddcg .N =int (*_edcb );if _fdbc :=_gdae .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_fdbc !=nil {_gcbg ,_aeed :=NewPdfColorspaceFromPdfObject (_fdbc );if _aeed !=nil {return nil ,_aeed ;};_fddcg .Alternate =_gcbg ;};if _acbb :=_gdae .Get ("\u0052\u0061\u006eg\u0065");
_acbb !=nil {_acbb =_gea .TraceToDirectObject (_acbb );_adgg ,_gfa :=_acbb .(*_gea .PdfObjectArray );if !_gfa {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _adgg .Len ()!=2*_fddcg .N {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_abdef ,_bgbf :=_adgg .GetAsFloat64Slice ();if _bgbf !=nil {return nil ,_bgbf ;};_fddcg .Range =_abdef ;}else {_fddcg .Range =make ([]float64 ,2*_fddcg .N );for _aagc :=0;_aagc < _fddcg .N ;_aagc ++{_fddcg .Range [2*_aagc ]=0.0;_fddcg .Range [2*_aagc +1]=1.0;
};};if _cafg :=_gdae .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_cafg !=nil {_fdfd ,_fegf :=_cafg .(*_gea .PdfObjectStream );if !_fegf {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_fddcg .Metadata =_fdfd ;};_ddbf ,_feac :=_gea .DecodeStream (_bbea );if _feac !=nil {return nil ,_feac ;};_fddcg .Data =_ddbf ;_fddcg ._eeca =_bbea ;return _fddcg ,nil ;};

// M returns the value of the magenta component of the color.
func (_gacd *PdfColorDeviceCMYK )M ()float64 {return _gacd [1]};

// GetContainingPdfObject implements interface PdfModel.
func (_ecfbcg *PdfSignature )GetContainingPdfObject ()_gea .PdfObject {return _ecfbcg ._dagb };

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_gea .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_gea .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_fgaf *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_gea .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdgf ,_eddf :=_gea .GetNumbersAsFloat (objects );
if _eddf !=nil {return nil ,_eddf ;};return _fgaf .ColorFromFloats (_cdgf );};func _aebeb (_ffeg *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_ffeg }};func (_adedcd *PdfWriter )writeDocumentVersion (){if _adedcd ._abaff {_adedcd .writeString ("\u000a");
}else {_adedcd .writeString (_e .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_adedcd ._fedce .Major ,_adedcd ._fedce .Minor ));_adedcd .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_aefdbd .Lock ();defer _aefdbd .Unlock ();_caacf =subject };

// L returns the value of the L component of the color.
func (_aead *PdfColorLab )L ()float64 {return _aead [0]};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _gea .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _bccf *_gea .PdfIndirectObject ;var _eeff *_gea .PdfObjectName ;var _fcgg *_gea .PdfObjectArray ;if _gdfd ,_aaecf :=obj .(*_gea .PdfIndirectObject );
_aaecf {_bccf =_gdfd ;};obj =_gea .TraceToDirectObject (obj );switch _bad :=obj .(type ){case *_gea .PdfObjectArray :_fcgg =_bad ;case *_gea .PdfObjectName :_eeff =_bad ;};if _eeff !=nil {switch *_eeff {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_fd .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_eeff );return nil ,_dgecf ;};};if _fcgg !=nil &&_fcgg .Len ()> 0{var _bbgc _gea .PdfObject =_bccf ;
if _bccf ==nil {_bbgc =_fcgg ;};if _ecac ,_dgcf :=_gea .GetName (_fcgg .Get (0));_dgcf {switch _ecac .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _fcgg .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _fcgg .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _fcgg .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _degc (_bbgc );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _bgac (_bbgc );
case "\u004c\u0061\u0062":return _fgcd (_bbgc );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _deeg (_bbgc );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _bcgg (_bbgc );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _bcbg (_bbgc );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _dbbb (_bbgc );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _dgbf (_bbgc );default:_fd .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_ecac );
};};};_fd .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_fabfg *PdfWriter )SetOpenAction (dest _gea .PdfObject )error {if dest ==nil ||_gea .IsNullObject (dest ){return nil ;};_fabfg ._ggbgf .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _fabfg .addObjects (dest );};
func (_dgagcd *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _cfccc :=_dgagcd ._baffg ;_cfccc !=nil {return _cfccc ;};return _dgagcd ._bgfcb ;};func _bcbg (_bdfce _gea .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_affae :=NewPdfColorspaceSpecialIndexed ();
if _adcd ,_beacd :=_bdfce .(*_gea .PdfIndirectObject );_beacd {_affae ._ffbee =_adcd ;};_bdfce =_gea .TraceToDirectObject (_bdfce );_bbgg ,_bbfe :=_bdfce .(*_gea .PdfObjectArray );if !_bbfe {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _bbgg .Len ()!=4{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_bdfce =_bbgg .Get (0);
_caag ,_bbfe :=_bdfce .(*_gea .PdfObjectName );if !_bbfe {return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_caag !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_bdfce =_bbgg .Get (1);_aecfd ,_abcc :=DetermineColorspaceNameFromPdfObject (_bdfce );if _abcc !=nil {return nil ,_abcc ;};if _aecfd =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_aecfd =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_fd .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_aecfd );
return nil ,_dgecf ;};_cccc ,_abcc :=NewPdfColorspaceFromPdfObject (_bdfce );if _abcc !=nil {return nil ,_abcc ;};_affae .Base =_cccc ;_bdfce =_bbgg .Get (2);_eaac ,_abcc :=_gea .GetNumberAsInt64 (_bdfce );if _abcc !=nil {return nil ,_abcc ;};if _eaac > 255{return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_affae .HiVal =int (_eaac );_bdfce =_bbgg .Get (3);_affae .Lookup =_bdfce ;_bdfce =_gea .TraceToDirectObject (_bdfce );var _gaf []byte ;if _dfeg ,_bccc :=_bdfce .(*_gea .PdfObjectString );_bccc {_gaf =_dfeg .Bytes ();_fd .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_gaf );
}else if _dbaedd ,_defb :=_bdfce .(*_gea .PdfObjectStream );_defb {_fd .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_bdfce .String ());_fd .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_dbaedd .Stream ),_dbaedd .Stream );
_cfcb ,_ceffa :=_gea .DecodeStream (_dbaedd );if _ceffa !=nil {return nil ,_ceffa ;};_fd .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_cfcb ),_cfcb );_gaf =_cfcb ;}else {_fd .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_bdfce );
return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_gaf )< _affae .Base .GetNumComponents ()*(_affae .HiVal +1){_fd .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_fd .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_gaf ),_affae .Base .GetNumComponents (),_affae .HiVal );
}else {_gaf =_gaf [:_affae .Base .GetNumComponents ()*(_affae .HiVal +1)];};_affae ._dbdg =_gaf ;return _affae ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_beadd *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// ToPdfObject implements interface PdfModel.
func (_baa *PdfActionGoTo3DView )ToPdfObject ()_gea .PdfObject {_baa .PdfAction .ToPdfObject ();_geca :=_baa ._af ;_gcg :=_geca .PdfObject .(*_gea .PdfObjectDictionary );_gcg .SetIfNotNil ("\u0053",_gea .MakeName (string (ActionTypeGoTo3DView )));_gcg .SetIfNotNil ("\u0054\u0041",_baa .TA );
_gcg .SetIfNotNil ("\u0056",_baa .V );return _geca ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_fgaab *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_gea .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfcc ,_fbea :=_gea .GetNumbersAsFloat (objects );
if _fbea !=nil {return nil ,_fbea ;};return _fgaab .ColorFromFloats (_cfcc );};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_gcdde *PdfWriter )SetOptimizer (optimizer Optimizer ){_gcdde ._acbg =optimizer };

// GetNumPages returns the number of pages in the document.
func (_dgaeb *PdfReader )GetNumPages ()(int ,error ){if _dgaeb ._edcdb .GetCrypter ()!=nil &&!_dgaeb ._edcdb .IsAuthenticated (){return 0,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_dgaeb ._daega ),nil ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_gdgff *PdfPageResources )GetXObjectByName (keyName _gea .PdfObjectName )(*_gea .PdfObjectStream ,XObjectType ){if _gdgff .XObject ==nil {return nil ,XObjectTypeUndefined ;};_fbccf ,_fdeg :=_gea .TraceToDirectObject (_gdgff .XObject ).(*_gea .PdfObjectDictionary );
if !_fdeg {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gea .TraceToDirectObject (_gdgff .XObject ));
return nil ,XObjectTypeUndefined ;};if _egcdee :=_fbccf .Get (keyName );_egcdee !=nil {_gfdfg ,_gafcab :=_gea .GetStream (_egcdee );if !_gafcab {_fd .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_egcdee );
return nil ,XObjectTypeUndefined ;};_cgdge :=_gfdfg .PdfObjectDictionary ;_gebde ,_gafcab :=_gea .TraceToDirectObject (_cgdge .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_gea .PdfObjectName );if !_gafcab {_fd .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_cgdge .String ());
return nil ,XObjectTypeUndefined ;};if *_gebde =="\u0049\u006d\u0061g\u0065"{return _gfdfg ,XObjectTypeImage ;}else if *_gebde =="\u0046\u006f\u0072\u006d"{return _gfdfg ,XObjectTypeForm ;}else if *_gebde =="\u0050\u0053"{return _gfdfg ,XObjectTypePS ;
}else {_fd .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_gebde );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_fbdab *PdfFieldButton )SetType (btype ButtonType ){_bebge :=uint32 (0);if _fbdab .Ff !=nil {_bebge =uint32 (*_fbdab .Ff );};switch btype {case ButtonTypePush :_bebge |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_bebge |=FieldFlagRadio .Mask ();
};_fbdab .Ff =_gea .MakeInteger (int64 (_bebge ));};

// GetContainingPdfObject implements model.PdfModel interface.
func (_ceagb *PdfOutputIntent )GetContainingPdfObject ()_gea .PdfObject {return _ceagb ._ecfbg };

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_dbeeb *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_fgde :=_ed .NewReader (img .getBase ());_gbdbf :=_deg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._bdbf ,img ._edadg );
_bbfg :=_ed .NewWriter (_gbdbf );_dfce :=_fa .Pow (2,float64 (img .BitsPerComponent ))-1;_fddccc :=_dbeeb .GetNumComponents ();_dbed :=make ([]uint32 ,_fddccc );_dgce :=make ([]float64 ,_fddccc );for {_bagb :=_fgde .ReadSamples (_dbed );if _bagb ==_cef .EOF {break ;
}else if _bagb !=nil {return img ,_bagb ;};for _fcaf :=0;_fcaf < _fddccc ;_fcaf ++{_eaag :=float64 (_dbed [_fcaf ])/_dfce ;_dgce [_fcaf ]=_eaag ;};_adfee ,_bagb :=_dbeeb .TintTransform .Evaluate (_dgce );if _bagb !=nil {return img ,_bagb ;};for _ ,_gfcb :=range _adfee {_gfcb =_fa .Min (_fa .Max (0,_gfcb ),1.0);
if _bagb =_bbfg .WriteSample (uint32 (_gfcb *_dfce ));_bagb !=nil {return img ,_bagb ;};};};return _dbeeb .AlternateSpace .ImageToRGB (_ebgdf (&_gbdbf ));};

// Val returns the color value.
func (_cabd *PdfColorDeviceGray )Val ()float64 {return float64 (*_cabd )};func (_fcb *PdfReader )newPdfAnnotationPolygonFromDict (_deda *_gea .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_dfgb :=PdfAnnotationPolygon {};_eecg ,_abfb :=_fcb .newPdfAnnotationMarkupFromDict (_deda );
if _abfb !=nil {return nil ,_abfb ;};_dfgb .PdfAnnotationMarkup =_eecg ;_dfgb .Vertices =_deda .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_dfgb .LE =_deda .Get ("\u004c\u0045");_dfgb .BS =_deda .Get ("\u0042\u0053");_dfgb .IC =_deda .Get ("\u0049\u0043");
_dfgb .BE =_deda .Get ("\u0042\u0045");_dfgb .IT =_deda .Get ("\u0049\u0054");_dfgb .Measure =_deda .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_dfgb ,nil ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_agfg *PdfReader )IsEncrypted ()(bool ,error ){return _agfg ._edcdb .IsEncrypted ()};

// SetFontByName sets the font specified by keyName to the given object.
func (_dbccg *PdfPageResources )SetFontByName (keyName _gea .PdfObjectName ,obj _gea .PdfObject )error {if _dbccg .Font ==nil {_dbccg .Font =_gea .MakeDict ();};_acedbd ,_ddbcg :=_gea .TraceToDirectObject (_dbccg .Font ).(*_gea .PdfObjectDictionary );if !_ddbcg {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_gea .TraceToDirectObject (_dbccg .Font ));
return _gea .ErrTypeError ;};_acedbd .Set (keyName ,obj );return nil ;};

// StdFontName represents name of a standard font.
type StdFontName =_ad .StdFontName ;var _ pdfFont =(*pdfCIDFontType0 )(nil );

// ToPdfObject implements interface PdfModel.
func (_acad *PdfAnnotationSquiggly )ToPdfObject ()_gea .PdfObject {_acad .PdfAnnotation .ToPdfObject ();_deac :=_acad ._bbf ;_eddba :=_deac .PdfObject .(*_gea .PdfObjectDictionary );_acad .PdfAnnotationMarkup .appendToPdfDictionary (_eddba );_eddba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_eddba .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_acad .QuadPoints );return _deac ;};

// HasShadingByName checks whether a shading is defined by the specified keyName.
func (_ffag *PdfPageResources )HasShadingByName (keyName _gea .PdfObjectName )bool {_ ,_bcbgf :=_ffag .GetShadingByName (keyName );return _bcbgf ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
/*
	Format: [/DeviceN names alternateSpace tintTransform]
        or: [/DeviceN names alternateSpace tintTransform attributes]
*/
type PdfColorspaceDeviceN struct{ColorantNames *_gea .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_cbce *_gea .PdfIndirectObject ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_dccf *PdfInfo )GetCustomInfo (name string )*_gea .PdfObjectString {var _bgfa *_gea .PdfObjectString ;if _dccf ._geda ==nil {return _bgfa ;};if _bdfd ,_ffga :=_dccf ._geda .Get (*_gea .MakeName (name )).(*_gea .PdfObjectString );_ffga {_bgfa =_bdfd ;
};return _bgfa ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_gegg *Image )AlphaMap (mapFunc AlphaMapFunc ){for _gggbe ,_eedge :=range _gegg ._bdbf {_gegg ._bdbf [_gggbe ]=mapFunc (_eedge );};};func _gdaeb (_cdgfd *[]*PdfField ,_ggaee FieldFilterFunc ,_caead bool )[]*PdfField {if _cdgfd ==nil {return nil ;
};_gabb :=*_cdgfd ;if len (*_cdgfd )==0{return nil ;};_cabbb :=_gabb [:0];if _ggaee ==nil {_ggaee =func (*PdfField )bool {return true };};var _adaaa []*PdfField ;for _ ,_dgdfa :=range _gabb {_acfac :=_ggaee (_dgdfa );if _acfac {_adaaa =append (_adaaa ,_dgdfa );
if len (_dgdfa .Kids )> 0{_adaaa =append (_adaaa ,_gdaeb (&_dgdfa .Kids ,_ggaee ,_caead )...);};};if !_caead ||!_acfac ||len (_dgdfa .Kids )> 0{_cabbb =append (_cabbb ,_dgdfa );};};*_cdgfd =_cabbb ;return _adaaa ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_gggac *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gggac .AlternateSpace ==nil {return nil ,_gg .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _gggac .AlternateSpace .ColorToRGB (color );};func (_acedb *pdfCIDFontType0 )baseFields ()*fontCommon {return &_acedb .fontCommon };

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_dfddf *_gea .PdfIndirectObject ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);func (_debg *PdfReader )newPdfAnnotationInkFromDict (_bgfe *_gea .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_ecgf :=PdfAnnotationInk {};
_bafc ,_dae :=_debg .newPdfAnnotationMarkupFromDict (_bgfe );if _dae !=nil {return nil ,_dae ;};_ecgf .PdfAnnotationMarkup =_bafc ;_ecgf .InkList =_bgfe .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_ecgf .BS =_bgfe .Get ("\u0042\u0053");return &_ecgf ,nil ;
};func _gebcb (_cdbda _gea .PdfObject ,_beadg *fontCommon )(*_ebd .CMap ,error ){_afcg ,_bcfae :=_gea .GetStream (_cdbda );if !_bcfae {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_cdbda );
return nil ,_gea .ErrTypeError ;};_ccecf ,_geecb :=_gea .DecodeStream (_afcg );if _geecb !=nil {return nil ,_geecb ;};_gfac ,_geecb :=_ebd .LoadCmapFromData (_ccecf ,!_beadg .isCIDFont ());if _geecb !=nil {_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_afcg .ObjectNumber ,_geecb );
};return _gfac ,_geecb ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _gea .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _gea .PdfObject ;Contents _gea .PdfObject ;
Rotate *int64 ;Group _gea .PdfObject ;Thumb _gea .PdfObject ;B _gea .PdfObject ;Dur _gea .PdfObject ;Trans _gea .PdfObject ;AA _gea .PdfObject ;Metadata _gea .PdfObject ;PieceInfo _gea .PdfObject ;StructParents _gea .PdfObject ;ID _gea .PdfObject ;PZ _gea .PdfObject ;
SeparationInfo _gea .PdfObject ;Tabs _gea .PdfObject ;TemplateInstantiated _gea .PdfObject ;PresSteps _gea .PdfObject ;UserUnit _gea .PdfObject ;VP _gea .PdfObject ;Annots _gea .PdfObject ;_egffb []*PdfAnnotation ;_acebb *_gea .PdfObjectDictionary ;_gfgfdc *_gea .PdfIndirectObject ;
_bffef _gea .PdfObjectDictionary ;_ddffg *PdfReader ;};

// GetDSS gets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_dbeg *PdfAppender )GetDSS ()(_ddcac *DSS ){return _dbeg ._edeb };func (_abfdf *fontFile )loadFromSegments (_gfcfd ,_dceed []byte )error {_fd .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_gfcfd ),len (_dceed ));
_fdfaf :=_abfdf .parseASCIIPart (_gfcfd );if _fdfaf !=nil {return _fdfaf ;};_fd .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_abfdf );if len (_dceed )==0{return nil ;};_fd .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_abfdf );
return nil ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_gcagcg *PdfReader )GetNamedDestinations ()(_gea .PdfObject ,error ){_ccafd :=_gea .ResolveReference (_gcagcg ._cdda .Get ("\u0044\u0065\u0073t\u0073"));if _ccafd ==nil {return nil ,nil ;};if !_gcagcg ._debgbb {_dadd :=_gcagcg .traverseObjectData (_ccafd );
if _dadd !=nil {return nil ,_dadd ;};};return _ccafd ,nil ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_ddcag *PdfPattern )GetContext ()PdfModel {return _ddcag ._efgbe };

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_ggeef *PdfColorspaceDeviceNAttributes )ToPdfObject ()_gea .PdfObject {_edge :=_gea .MakeDict ();if _ggeef .Subtype !=nil {_edge .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ggeef .Subtype );};_edge .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_ggeef .Colorants );
_edge .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_ggeef .Process );_edge .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_ggeef .MixingHints );if _ggeef ._aabd !=nil {_ggeef ._aabd .PdfObject =_edge ;return _ggeef ._aabd ;
};return _edge ;};

// SetBorderWidth sets the style's border width.
func (_fabf *PdfBorderStyle )SetBorderWidth (width float64 ){_fabf .W =&width };

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _cef .ReadSeeker )(*PdfFont ,error ){const _gcfbc =_ceb .CharCode (32);const _accb =_ceb .CharCode (255);_bcead ,_dabcg :=_gc .ReadAll (r );if _dabcg !=nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_dabcg );
return nil ,_dabcg ;};_gaeea ,_dabcg :=_ad .TtfParse (_ddg .NewReader (_bcead ));if _dabcg !=nil {_fd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_dabcg );
return nil ,_dabcg ;};_cace :=&pdfFontSimple {_bgdfg :make (map[_ceb .CharCode ]float64 ),fontCommon :fontCommon {_abed :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_cace ._egaa =_ceb .NewWinAnsiEncoder ();_cace ._cacc =_gaeea .PostScriptName ;
_cace .FirstChar =_gea .MakeInteger (int64 (_gcfbc ));_cace .LastChar =_gea .MakeInteger (int64 (_accb ));_cgffa :=1000.0/float64 (_gaeea .UnitsPerEm );if len (_gaeea .Widths )<=0{return nil ,_gg .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_ffgc :=_cgffa *float64 (_gaeea .Widths [0]);_bfcfg :=make ([]float64 ,0,_accb -_gcfbc +1);for _fbced :=_gcfbc ;_fbced <=_accb ;_fbced ++{_bbad ,_bffd :=_cace .Encoder ().CharcodeToRune (_fbced );if !_bffd {_fd .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_fbced );
_bfcfg =append (_bfcfg ,_ffgc );continue ;};_fbfgg ,_cfbe :=_gaeea .Chars [_bbad ];if !_cfbe {_fd .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_bfcfg =append (_bfcfg ,_ffgc );continue ;
};_eefe :=_cgffa *float64 (_gaeea .Widths [_fbfgg ]);_bfcfg =append (_bfcfg ,_eefe );};_cace .Widths =_gea .MakeIndirectObject (_gea .MakeArrayFromFloats (_bfcfg ));if len (_bfcfg )< int (_accb -_gcfbc +1){_fd .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_bfcfg ),255-32+1);
return nil ,_gea .ErrRangeError ;};for _cdbg :=_gcfbc ;_cdbg <=_accb ;_cdbg ++{_cace ._bgdfg [_cdbg ]=_bfcfg [_cdbg -_gcfbc ];};_cace .Encoding =_gea .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_gcda :=&PdfFontDescriptor {};
_gcda .FontName =_gea .MakeName (_gaeea .PostScriptName );_gcda .Ascent =_gea .MakeFloat (_cgffa *float64 (_gaeea .TypoAscender ));_gcda .Descent =_gea .MakeFloat (_cgffa *float64 (_gaeea .TypoDescender ));_gcda .CapHeight =_gea .MakeFloat (_cgffa *float64 (_gaeea .CapHeight ));
_gcda .FontBBox =_gea .MakeArrayFromFloats ([]float64 {_cgffa *float64 (_gaeea .Xmin ),_cgffa *float64 (_gaeea .Ymin ),_cgffa *float64 (_gaeea .Xmax ),_cgffa *float64 (_gaeea .Ymax )});_gcda .ItalicAngle =_gea .MakeFloat (_gaeea .ItalicAngle );_gcda .MissingWidth =_gea .MakeFloat (_cgffa *float64 (_gaeea .Widths [0]));
_gebf ,_dabcg :=_gea .MakeStream (_bcead ,_gea .NewFlateEncoder ());if _dabcg !=nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_dabcg );
return nil ,_dabcg ;};_gebf .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_gea .MakeInteger (int64 (len (_bcead ))));_gcda .FontFile2 =_gebf ;if _gaeea .Bold {_gcda .StemV =_gea .MakeInteger (120);}else {_gcda .StemV =_gea .MakeInteger (70);
};_edabb :=_ffeff ;if _gaeea .IsFixedPitch {_edabb |=_eebb ;};if _gaeea .ItalicAngle !=0{_edabb |=_beaae ;};_gcda .Flags =_gea .MakeInteger (int64 (_edabb ));_cace ._baffg =_gcda ;_gada :=&PdfFont {_bgfbc :_cace };return _gada ,nil ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_eag :=NewPdfAnnotation ();_fge :=&PdfAnnotationPolygon {};_fge .PdfAnnotation =_eag ;_fge .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eag .SetContext (_fge );return _fge ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};type pdfCIDFontType0 struct{fontCommon ;_eebdb *_gea .PdfIndirectObject ;_eecde _ceb .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_gea .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _gea .PdfObject ;W _gea .PdfObject ;DW2 _gea .PdfObject ;W2 _gea .PdfObject ;_cbfda map[_ceb .CharCode ]float64 ;_ecggc float64 ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_ad .CharMetrics ;

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_bfec *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_gea .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gddf ,_fbed :=_gea .GetNumbersAsFloat (objects );
if _fbed !=nil {return nil ,_fbed ;};return _bfec .ColorFromFloats (_gddf );};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_gcgag *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _gcgag ._egffb !=nil {return _gcgag ._egffb ,nil ;};if _gcgag .Annots ==nil {_gcgag ._egffb =[]*PdfAnnotation {};return nil ,nil ;};if _gcgag ._ddffg ==nil {_gcgag ._egffb =[]*PdfAnnotation {};
return nil ,nil ;};_bddbg ,_dcgc :=_gcgag ._ddffg .loadAnnotations (_gcgag .Annots );if _dcgc !=nil {return nil ,_dcgc ;};if _bddbg ==nil {_gcgag ._egffb =[]*PdfAnnotation {};};_gcgag ._egffb =_bddbg ;return _gcgag ._egffb ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_edeaf *PdfColorspaceLab )GetNumComponents ()int {return 3};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_aafab *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_aafab ._bbgeg =colorspace ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _gea .PdfObjectArray )(*PdfRectangle ,error ){_edgbcd :=PdfRectangle {};if arr .Len ()!=4{return nil ,_gg .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _fbgcc error ;_edgbcd .Llx ,_fbgcc =_gea .GetNumberAsFloat (arr .Get (0));if _fbgcc !=nil {return nil ,_fbgcc ;};_edgbcd .Lly ,_fbgcc =_gea .GetNumberAsFloat (arr .Get (1));if _fbgcc !=nil {return nil ,_fbgcc ;};_edgbcd .Urx ,_fbgcc =_gea .GetNumberAsFloat (arr .Get (2));
if _fbgcc !=nil {return nil ,_fbgcc ;};_edgbcd .Ury ,_fbgcc =_gea .GetNumberAsFloat (arr .Get (3));if _fbgcc !=nil {return nil ,_fbgcc ;};return &_edgbcd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_acf *PdfActionGoToE )ToPdfObject ()_gea .PdfObject {_acf .PdfAction .ToPdfObject ();_ae :=_acf ._af ;_gcc :=_ae .PdfObject .(*_gea .PdfObjectDictionary );_gcc .SetIfNotNil ("\u0053",_gea .MakeName (string (ActionTypeGoToE )));if _acf .F !=nil {_gcc .Set ("\u0046",_acf .F .ToPdfObject ());
};_gcc .SetIfNotNil ("\u0044",_acf .D );_gcc .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_acf .NewWindow );_gcc .SetIfNotNil ("\u0054",_acf .T );return _ae ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_cdaec *PdfPageResources )SetPatternByName (keyName _gea .PdfObjectName ,pattern _gea .PdfObject )error {if _cdaec .Pattern ==nil {_cdaec .Pattern =_gea .MakeDict ();};_afgbg ,_bfagd :=_gea .GetDict (_cdaec .Pattern );if !_bfagd {return _gea .ErrTypeError ;
};_afgbg .Set (keyName ,pattern );return nil ;};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_dcdgc *PdfColorspaceICCBased )GetContainingPdfObject ()_gea .PdfObject {return _dcdgc ._eeca };

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_gcffd *PdfPageResources )GetFontByName (keyName _gea .PdfObjectName )(_gea .PdfObject ,bool ){if _gcffd .Font ==nil {return nil ,false ;};_bebgf ,_bfcdb :=_gea .TraceToDirectObject (_gcffd .Font ).(*_gea .PdfObjectDictionary );if !_bfcdb {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_gea .TraceToDirectObject (_gcffd .Font ));
return nil ,false ;};if _cecfa :=_bebgf .Get (keyName );_cecfa !=nil {return _cecfa ,true ;};return nil ,false ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_begeg *PdfPageResources )SetColorspaceByName (keyName _gea .PdfObjectName ,cs PdfColorspace )error {_edbbe ,_cgfbc :=_begeg .GetColorspaces ();if _cgfbc !=nil {_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_cgfbc );
return _cgfbc ;};if _edbbe ==nil {_edbbe =NewPdfPageResourcesColorspaces ();_begeg .SetColorSpace (_edbbe );};_edbbe .Set (keyName ,cs );return nil ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _gea .PdfObject ;RichMediaContent _gea .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fba *PdfAnnotationPopup )ToPdfObject ()_gea .PdfObject {_fba .PdfAnnotation .ToPdfObject ();_fgbe :=_fba ._bbf ;_aga :=_fgbe .PdfObject .(*_gea .PdfObjectDictionary );_aga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0050\u006f\u0070u\u0070"));
_aga .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fba .Parent );_aga .SetIfNotNil ("\u004f\u0070\u0065\u006e",_fba .Open );return _fgbe ;};func (_ccafe *PdfWriter )setWriter (_cdcfb _cef .Writer ){_ccafe ._acaace =_ccafe ._geage ;_ccafe ._ccfd =_ce .NewWriter (_cdcfb );
};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gea .PdfObject ;};func (_faed *PdfField )inherit (_daga func (*PdfField )bool )(bool ,error ){_bdfgg :=map[*PdfField ]bool {};_fdeb :=false ;_gdffc :=_faed ;for _gdffc !=nil {if _ ,_deddg :=_bdfgg [_gdffc ];
_deddg {return false ,_gg .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_ebfcb :=_daga (_gdffc );if _ebfcb {_fdeb =true ;break ;};_bdfgg [_gdffc ]=true ;_gdffc =_gdffc .Parent ;};return _fdeb ,nil ;
};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bfadg *PdfShadingType6 )ToPdfObject ()_gea .PdfObject {_bfadg .PdfShading .ToPdfObject ();_fdbab ,_bdccbd :=_bfadg .getShadingDict ();if _bdccbd !=nil {_fd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bfadg .BitsPerCoordinate !=nil {_fdbab .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bfadg .BitsPerCoordinate );};if _bfadg .BitsPerComponent !=nil {_fdbab .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bfadg .BitsPerComponent );
};if _bfadg .BitsPerFlag !=nil {_fdbab .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bfadg .BitsPerFlag );};if _bfadg .Decode !=nil {_fdbab .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bfadg .Decode );};if _bfadg .Function !=nil {if len (_bfadg .Function )==1{_fdbab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bfadg .Function [0].ToPdfObject ());
}else {_aedg :=_gea .MakeArray ();for _ ,_ccfbec :=range _bfadg .Function {_aedg .Append (_ccfbec .ToPdfObject ());};_fdbab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aedg );};};return _bfadg ._adae ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_bdcb *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _aggb []float64 ;for _bcge :=0;_bcge < _bdcb .GetNumComponents ();_bcge ++{_aggb =append (_aggb ,0.0,1.0);};return _aggb ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_adg :=NewPdfAnnotation ();_aega :=&PdfAnnotationUnderline {};_aega .PdfAnnotation =_adg ;_aega .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_adg .SetContext (_aega );return _aega ;};

// IsSimple returns true if `font` is a simple font.
func (_dbfce *PdfFont )IsSimple ()bool {_ ,_dcdcb :=_dbfce ._bgfbc .(*pdfFontSimple );return _dcdcb };

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_eaecf *pdfCIDFontType0 )ToPdfObject ()_gea .PdfObject {return _gea .MakeNull ()};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _gea .PdfObject ;LE _gea .PdfObject ;BS _gea .PdfObject ;IC _gea .PdfObject ;BE _gea .PdfObject ;IT _gea .PdfObject ;Measure _gea .PdfObject ;};

// GetXHeight returns the XHeight of the font `descriptor`.
func (_caegc *PdfFontDescriptor )GetXHeight ()(float64 ,error ){return _gea .GetNumberAsFloat (_caegc .XHeight );};func (_ccecfe *PdfAcroForm )fillImageWithAppearance (_baccc FieldImageProvider ,_fcdec FieldAppearanceGenerator )error {if _ccecfe ==nil {return nil ;
};_gadbg ,_facbe :=_baccc .FieldImageValues ();if _facbe !=nil {return _facbe ;};for _ ,_efce :=range _ccecfe .AllFields (){_aaafe :=_efce .PartialName ();_afeg ,_caefg :=_gadbg [_aaafe ];if !_caefg {if _baaf ,_adgf :=_efce .FullName ();_adgf ==nil {_afeg ,_caefg =_gadbg [_baaf ];
};};if !_caefg {_fd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_aaafe );
continue ;};switch _gbae :=_efce .GetContext ().(type ){case *PdfFieldButton :if _gbae .IsPush (){_gbae .SetFillImage (_afeg );};};if _fcdec ==nil {continue ;};for _ ,_edebg :=range _efce .Annotations {_gagef ,_gcgaf :=_fcdec .GenerateAppearanceDict (_ccecfe ,_efce ,_edebg );
if _gcgaf !=nil {return _gcgaf ;};_edebg .AP =_gagef ;_edebg .ToPdfObject ();};};return nil ;};type fontCommon struct{_cacc string ;_abed string ;_aeaf string ;_bbeaa _gea .PdfObject ;_cbfe *_ebd .CMap ;_baffg *PdfFontDescriptor ;_fceb int64 ;};

// ToPdfObject implements interface PdfModel.
func (_aceg *PdfAnnotationPrinterMark )ToPdfObject ()_gea .PdfObject {_aceg .PdfAnnotation .ToPdfObject ();_ebdc :=_aceg ._bbf ;_fbga :=_ebdc .PdfObject .(*_gea .PdfObjectDictionary );_fbga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_fbga .SetIfNotNil ("\u004d\u004e",_aceg .MN );return _ebdc ;};func _cbcda (_cfbdc *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_aaeda ,_egecf :=_gea .GetDict (_cfbdc .AP );if !_egecf {return nil ,nil ,_gg .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _aaeda ==nil {return nil ,nil ,nil ;};_bgff ,_egecf :=_gea .GetArray (_cfbdc .Rect );if !_egecf ||_bgff .Len ()!=4{return nil ,nil ,_gg .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_cfge ,_fcfg :=NewPdfRectangle (*_bgff );
if _fcfg !=nil {return nil ,nil ,_fcfg ;};_ebgba :=_gea .TraceToDirectObject (_aaeda .Get ("\u004e"));switch _aace :=_ebgba .(type ){case *_gea .PdfObjectStream :_cbdd :=_aace ;_ebebg ,_ebegg :=NewXObjectFormFromStream (_cbdd );return _ebebg ,_cfge ,_ebegg ;
case *_gea .PdfObjectDictionary :_ecdbfg :=_aace ;_dbbd ,_bede :=_gea .GetName (_cfbdc .AS );if !_bede {return nil ,nil ,nil ;};if _ecdbfg .Get (*_dbbd )==nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_bcce ,_bede :=_gea .GetStream (_ecdbfg .Get (*_dbbd ));if !_bede {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_dbbd );
return nil ,nil ,_gg .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_fefg ,_dddca :=NewXObjectFormFromStream (_bcce );return _fefg ,_cfge ,_dddca ;};_fd .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_ebgba );
return nil ,nil ,_gg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};

// ToPdfObject implements interface PdfModel.
func (_ead *PdfActionURI )ToPdfObject ()_gea .PdfObject {_ead .PdfAction .ToPdfObject ();_feb :=_ead ._af ;_dc :=_feb .PdfObject .(*_gea .PdfObjectDictionary );_dc .SetIfNotNil ("\u0053",_gea .MakeName (string (ActionTypeURI )));_dc .SetIfNotNil ("\u0055\u0052\u0049",_ead .URI );
_dc .SetIfNotNil ("\u0049\u0073\u004da\u0070",_ead .IsMap );return _feb ;};func (_daafe *PdfReader )buildOutlineTree (_begee _gea .PdfObject ,_gcdec *PdfOutlineTreeNode ,_fccfc *PdfOutlineTreeNode ,_aebea map[_gea .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _aebea ==nil {_aebea =map[_gea .PdfObject ]struct{}{};
};_aebea [_begee ]=struct{}{};_cfageb ,_egccd :=_begee .(*_gea .PdfIndirectObject );if !_egccd {return nil ,nil ,_e .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_begee );
};_afdfec ,_gabaf :=_cfageb .PdfObject .(*_gea .PdfObjectDictionary );if !_gabaf {return nil ,nil ,_gg .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fd .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_afdfec ,_cfageb ,_cfageb );
if _fdgeb :=_afdfec .Get ("\u0054\u0069\u0074l\u0065");_fdgeb !=nil {_ggdbd ,_cccgd :=_daafe .newPdfOutlineItemFromIndirectObject (_cfageb );if _cccgd !=nil {return nil ,nil ,_cccgd ;};_ggdbd .Parent =_gcdec ;_ggdbd .Prev =_fccfc ;_ddcab :=_gea .ResolveReference (_afdfec .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_agec :=_aebea [_ddcab ];_ddcab !=nil &&_ddcab !=_cfageb &&!_agec {if !_gea .IsNullObject (_ddcab ){_fbbbe ,_adgag ,_fcafe :=_daafe .buildOutlineTree (_ddcab ,&_ggdbd .PdfOutlineTreeNode ,nil ,_aebea );if _fcafe !=nil {_fd .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_fcafe );
}else {_ggdbd .First =_fbbbe ;_ggdbd .Last =_adgag ;};};};_begg :=_gea .ResolveReference (_afdfec .Get ("\u004e\u0065\u0078\u0074"));if _ ,_eaeed :=_aebea [_begg ];_begg !=nil &&_begg !=_cfageb &&!_eaeed {if !_gea .IsNullObject (_begg ){_dbdeg ,_baegg ,_ddgec :=_daafe .buildOutlineTree (_begg ,_gcdec ,&_ggdbd .PdfOutlineTreeNode ,_aebea );
if _ddgec !=nil {_fd .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_ddgec );
}else {_ggdbd .Next =_dbdeg ;return &_ggdbd .PdfOutlineTreeNode ,_baegg ,nil ;};};};return &_ggdbd .PdfOutlineTreeNode ,&_ggdbd .PdfOutlineTreeNode ,nil ;};_ffbf ,_bdeef :=_aegace (_cfageb );if _bdeef !=nil {return nil ,nil ,_bdeef ;};_ffbf .Parent =_gcdec ;
if _efcecc :=_afdfec .Get ("\u0046\u0069\u0072s\u0074");_efcecc !=nil {_efcecc =_gea .ResolveReference (_efcecc );if _ ,_gbafa :=_aebea [_efcecc ];_efcecc !=nil &&_efcecc !=_cfageb &&!_gbafa {_edged :=_gea .TraceToDirectObject (_efcecc );if _ ,_gagbe :=_edged .(*_gea .PdfObjectNull );
!_gagbe &&_edged !=nil {_adfba ,_bddbbf ,_fbgfb :=_daafe .buildOutlineTree (_efcecc ,&_ffbf .PdfOutlineTreeNode ,nil ,_aebea );if _fbgfb !=nil {_fd .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_fbgfb );
}else {_ffbf .First =_adfba ;_ffbf .Last =_bddbbf ;};};};};return &_ffbf .PdfOutlineTreeNode ,&_ffbf .PdfOutlineTreeNode ,nil ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;func (_bgbef *PdfReader )loadDSS ()(*DSS ,error ){if _bgbef ._edcdb .GetCrypter ()!=nil &&!_bgbef ._edcdb .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_bgbc :=_bgbef ._cdda .Get ("\u0044\u0053\u0053");if _bgbc ==nil {return nil ,nil ;};_adbbf ,_ :=_gea .GetIndirect (_bgbc );_bgbc =_gea .TraceToDirectObject (_bgbc );switch _cdefd :=_bgbc .(type ){case *_gea .PdfObjectNull :return nil ,nil ;case *_gea .PdfObjectDictionary :return _eacg (_adbbf ,_cdefd );
};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_bgbc );};

// Width returns the width of `rect`.
func (_eedbf *PdfRectangle )Width ()float64 {return _fa .Abs (_eedbf .Urx -_eedbf .Llx )};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_eddde *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _gafb []*PdfField ;if _eddde .AcroForm !=nil {_gafb =_eddde .AcroForm .AllFields ();};_bccfb :=make (map[*PdfField ]struct{},len (_gafb ));for _ ,_gafce :=range _gafb {_bccfb [_gafce ]=struct{}{};
};for _ ,_adefe :=range _eddde .PageList {_gddd ,_cefcf :=_adefe .GetAnnotations ();if _cefcf !=nil {return false ,_cefcf ;};for _ ,_gagfe :=range _gddd {_dfcdc ,_gccgaf :=_gagfe .GetContext ().(*PdfAnnotationWidget );if !_gccgaf {continue ;};_dgcba :=_dfcdc .Field ();
if _dgcba ==nil {return true ,nil ;};if _ ,_aacbg :=_bccfb [_dgcba ];!_aacbg {return true ,nil ;};};};return false ,nil ;};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_ecfbg *_gea .PdfObjectDictionary ;};func (_cbcgd *PdfReader )buildPageList (_egbgg *_gea .PdfIndirectObject ,_gdade *_gea .PdfIndirectObject ,_ggdbe map[_gea .PdfObject ]struct{})error {if _egbgg ==nil {return nil ;};if _ ,_dccfc :=_ggdbe [_egbgg ];
_dccfc {_fd .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_egbgg .ObjectNumber );return nil ;};_ggdbe [_egbgg ]=struct{}{};
_gdcfd ,_deccg :=_egbgg .PdfObject .(*_gea .PdfObjectDictionary );if !_deccg {return _gg .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_gefded ,_deccg :=(*_gdcfd ).Get ("\u0054\u0079\u0070\u0065").(*_gea .PdfObjectName );
if !_deccg {if _gdcfd .Get ("\u004b\u0069\u0064\u0073")==nil {return _gg .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_fd .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_gefded =_gea .MakeName ("\u0050\u0061\u0067e\u0073");_gdcfd .Set ("\u0054\u0079\u0070\u0065",_gefded );};_fd .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_gefded ,_egbgg );
if *_gefded =="\u0050\u0061\u0067\u0065"{_gcdfd ,_bcddd :=_cbcgd .newPdfPageFromDict (_gdcfd );if _bcddd !=nil {return _bcddd ;};_gcdfd .setContainer (_egbgg );if _gdade !=nil {_gdcfd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gdade );};_cbcgd ._daega =append (_cbcgd ._daega ,_egbgg );
_cbcgd .PageList =append (_cbcgd .PageList ,_gcdfd );return nil ;};if *_gefded !="\u0050\u0061\u0067e\u0073"{_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_gefded );
return _gg .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _gdade !=nil {_gdcfd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gdade );};if !_cbcgd ._debgbb {_bbga :=_cbcgd .traverseObjectData (_egbgg );if _bbga !=nil {return _bbga ;};};_cacce ,_gcdaa :=_cbcgd ._edcdb .Resolve (_gdcfd .Get ("\u004b\u0069\u0064\u0073"));
if _gcdaa !=nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _gcdaa ;};var _egbb *_gea .PdfObjectArray ;
_egbb ,_deccg =_cacce .(*_gea .PdfObjectArray );if !_deccg {_ebegb ,_cbebb :=_cacce .(*_gea .PdfIndirectObject );if !_cbebb {return _gg .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};
_egbb ,_deccg =_ebegb .PdfObject .(*_gea .PdfObjectArray );if !_deccg {return _gg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_fd .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_egbb );
for _ecaeg ,_bbfaf :=range _egbb .Elements (){_bgfca ,_fbgbfd :=_gea .GetIndirect (_bbfaf );if !_fbgbfd {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_bgfca );
return _gg .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_egbb .Set (_ecaeg ,_bgfca );_gcdaa =_cbcgd .buildPageList (_bgfca ,_egbgg ,_ggdbe );if _gcdaa !=nil {return _gcdaa ;
};};return nil ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_gea .PdfObject ,error );};func _eefb (_bdgc *PdfPage )map[_gea .PdfObjectName ]_gea .PdfObject {_baef :=make (map[_gea .PdfObjectName ]_gea .PdfObject );if _bdgc .Resources ==nil {return _baef ;
};if _bdgc .Resources .Font !=nil {if _acaa ,_bged :=_gea .GetDict (_bdgc .Resources .Font );_bged {for _ ,_fdcd :=range _acaa .Keys (){_baef [_fdcd ]=_acaa .Get (_fdcd );};};};if _bdgc .Resources .ExtGState !=nil {if _agc ,_ecdbc :=_gea .GetDict (_bdgc .Resources .ExtGState );
_ecdbc {for _ ,_cbaf :=range _agc .Keys (){_baef [_cbaf ]=_agc .Get (_cbaf );};};};if _bdgc .Resources .XObject !=nil {if _bggc ,_bgbbc :=_gea .GetDict (_bdgc .Resources .XObject );_bgbbc {for _ ,_ageb :=range _bggc .Keys (){_baef [_ageb ]=_bggc .Get (_ageb );
};};};if _bdgc .Resources .Pattern !=nil {if _cdfe ,_cebe :=_gea .GetDict (_bdgc .Resources .Pattern );_cebe {for _ ,_fffa :=range _cdfe .Keys (){_baef [_fffa ]=_cdfe .Get (_fffa );};};};if _bdgc .Resources .Shading !=nil {if _fgfa ,_bcaf :=_gea .GetDict (_bdgc .Resources .Shading );
_bcaf {for _ ,_dcb :=range _fgfa .Keys (){_baef [_dcb ]=_fgfa .Get (_dcb );};};};if _bdgc .Resources .ProcSet !=nil {if _ebeb ,_bdae :=_gea .GetDict (_bdgc .Resources .ProcSet );_bdae {for _ ,_ffad :=range _ebeb .Keys (){_baef [_ffad ]=_ebeb .Get (_ffad );
};};};if _bdgc .Resources .Properties !=nil {if _cefc ,_edcf :=_gea .GetDict (_bdgc .Resources .Properties );_edcf {for _ ,_edda :=range _cefc .Keys (){_baef [_edda ]=_cefc .Get (_edda );};};};return _baef ;};func (_cgdd *PdfReader )newPdfAnnotationPrinterMarkFromDict (_eccc *_gea .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_afbca :=PdfAnnotationPrinterMark {};
_afbca .MN =_eccc .Get ("\u004d\u004e");return &_afbca ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ceefd *PdfShadingType7 )ToPdfObject ()_gea .PdfObject {_ceefd .PdfShading .ToPdfObject ();_egcaa ,_cffa :=_ceefd .getShadingDict ();if _cffa !=nil {_fd .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ceefd .BitsPerCoordinate !=nil {_egcaa .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ceefd .BitsPerCoordinate );};if _ceefd .BitsPerComponent !=nil {_egcaa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ceefd .BitsPerComponent );
};if _ceefd .BitsPerFlag !=nil {_egcaa .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ceefd .BitsPerFlag );};if _ceefd .Decode !=nil {_egcaa .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ceefd .Decode );};if _ceefd .Function !=nil {if len (_ceefd .Function )==1{_egcaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ceefd .Function [0].ToPdfObject ());
}else {_ddggd :=_gea .MakeArray ();for _ ,_gacdb :=range _ceefd .Function {_ddggd .Append (_gacdb .ToPdfObject ());};_egcaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ddggd );};};return _ceefd ._adae ;};

// SetForms sets the Acroform for a PDF file.
func (_bacdd *PdfWriter )SetForms (form *PdfAcroForm )error {_bacdd ._fdfda =form ;return nil };

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_bbbfag *PdfOutline )GetContainingPdfObject ()_gea .PdfObject {return _bbbfag ._dcbac };func (_afb *PdfReader )newPdfActionFromIndirectObject (_cbg *_gea .PdfIndirectObject )(*PdfAction ,error ){_gd ,_aec :=_cbg .PdfObject .(*_gea .PdfObjectDictionary );
if !_aec {return nil ,_e .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_afb ._gace .GetModelFromPrimitive (_gd );model !=nil {_dfd ,_eeg :=model .(*PdfAction );if !_eeg {return nil ,_e .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _dfd ,nil ;};_beaf :=&PdfAction {};_beaf ._af =_cbg ;_afb ._gace .Register (_gd ,_beaf );if _ddgc :=_gd .Get ("\u0054\u0079\u0070\u0065");_ddgc !=nil {_ddf ,_gbcff :=_ddgc .(*_gea .PdfObjectName );if !_gbcff {_fd .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ddgc );
}else {if *_ddf !="\u0041\u0063\u0074\u0069\u006f\u006e"{_fd .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_ddf );
};_beaf .Type =_ddf ;};};if _cga :=_gd .Get ("\u004e\u0065\u0078\u0074");_cga !=nil {_beaf .Next =_cga ;};if _cfg :=_gd .Get ("\u0053");_cfg !=nil {_beaf .S =_cfg ;};_dag ,_ded :=_beaf .S .(*_gea .PdfObjectName );if !_ded {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_beaf .S );
return nil ,_e .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_beaf .S );};_ecg :=PdfActionType (_dag .String ());
switch _ecg {case ActionTypeGoTo :_cdb ,_bbe :=_afb .newPdfActionGotoFromDict (_gd );if _bbe !=nil {return nil ,_bbe ;};_cdb .PdfAction =_beaf ;_beaf ._fc =_cdb ;return _beaf ,nil ;case ActionTypeGoToR :_faf ,_edd :=_afb .newPdfActionGotoRFromDict (_gd );
if _edd !=nil {return nil ,_edd ;};_faf .PdfAction =_beaf ;_beaf ._fc =_faf ;return _beaf ,nil ;case ActionTypeGoToE :_dgd ,_cgdb :=_afb .newPdfActionGotoEFromDict (_gd );if _cgdb !=nil {return nil ,_cgdb ;};_dgd .PdfAction =_beaf ;_beaf ._fc =_dgd ;return _beaf ,nil ;
case ActionTypeLaunch :_acd ,_gda :=_afb .newPdfActionLaunchFromDict (_gd );if _gda !=nil {return nil ,_gda ;};_acd .PdfAction =_beaf ;_beaf ._fc =_acd ;return _beaf ,nil ;case ActionTypeThread :_eae ,_egb :=_afb .newPdfActionThreadFromDict (_gd );if _egb !=nil {return nil ,_egb ;
};_eae .PdfAction =_beaf ;_beaf ._fc =_eae ;return _beaf ,nil ;case ActionTypeURI :_bgcc ,_bagc :=_afb .newPdfActionURIFromDict (_gd );if _bagc !=nil {return nil ,_bagc ;};_bgcc .PdfAction =_beaf ;_beaf ._fc =_bgcc ;return _beaf ,nil ;case ActionTypeSound :_dab ,_bdc :=_afb .newPdfActionSoundFromDict (_gd );
if _bdc !=nil {return nil ,_bdc ;};_dab .PdfAction =_beaf ;_beaf ._fc =_dab ;return _beaf ,nil ;case ActionTypeMovie :_dgdd ,_fee :=_afb .newPdfActionMovieFromDict (_gd );if _fee !=nil {return nil ,_fee ;};_dgdd .PdfAction =_beaf ;_beaf ._fc =_dgdd ;return _beaf ,nil ;
case ActionTypeHide :_bec ,_gead :=_afb .newPdfActionHideFromDict (_gd );if _gead !=nil {return nil ,_gead ;};_bec .PdfAction =_beaf ;_beaf ._fc =_bec ;return _beaf ,nil ;case ActionTypeNamed :_abd ,_afc :=_afb .newPdfActionNamedFromDict (_gd );if _afc !=nil {return nil ,_afc ;
};_abd .PdfAction =_beaf ;_beaf ._fc =_abd ;return _beaf ,nil ;case ActionTypeSubmitForm :_defa ,_aed :=_afb .newPdfActionSubmitFormFromDict (_gd );if _aed !=nil {return nil ,_aed ;};_defa .PdfAction =_beaf ;_beaf ._fc =_defa ;return _beaf ,nil ;case ActionTypeResetForm :_gce ,_afd :=_afb .newPdfActionResetFormFromDict (_gd );
if _afd !=nil {return nil ,_afd ;};_gce .PdfAction =_beaf ;_beaf ._fc =_gce ;return _beaf ,nil ;case ActionTypeImportData :_faeb ,_cadb :=_afb .newPdfActionImportDataFromDict (_gd );if _cadb !=nil {return nil ,_cadb ;};_faeb .PdfAction =_beaf ;_beaf ._fc =_faeb ;
return _beaf ,nil ;case ActionTypeSetOCGState :_bgf ,_gfb :=_afb .newPdfActionSetOCGStateFromDict (_gd );if _gfb !=nil {return nil ,_gfb ;};_bgf .PdfAction =_beaf ;_beaf ._fc =_bgf ;return _beaf ,nil ;case ActionTypeRendition :_gac ,_gcfc :=_afb .newPdfActionRenditionFromDict (_gd );
if _gcfc !=nil {return nil ,_gcfc ;};_gac .PdfAction =_beaf ;_beaf ._fc =_gac ;return _beaf ,nil ;case ActionTypeTrans :_ceg ,_egbc :=_afb .newPdfActionTransFromDict (_gd );if _egbc !=nil {return nil ,_egbc ;};_ceg .PdfAction =_beaf ;_beaf ._fc =_ceg ;
return _beaf ,nil ;case ActionTypeGoTo3DView :_bbec ,_cage :=_afb .newPdfActionGoTo3DViewFromDict (_gd );if _cage !=nil {return nil ,_cage ;};_bbec .PdfAction =_beaf ;_beaf ._fc =_bbec ;return _beaf ,nil ;case ActionTypeJavaScript :_edc ,_aedf :=_afb .newPdfActionJavaScriptFromDict (_gd );
if _aedf !=nil {return nil ,_aedf ;};_edc .PdfAction =_beaf ;_beaf ._fc =_edc ;return _beaf ,nil ;};_fd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_ecg );
return nil ,nil ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_gadce *PdfReader )Decrypt (password []byte )(bool ,error ){_cfec ,_afcgb :=_gadce ._edcdb .Decrypt (password );if _afcgb !=nil {return false ,_afcgb ;};if !_cfec {return false ,nil ;};_afcgb =_gadce .loadStructure ();if _afcgb !=nil {_fd .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_afcgb );
return false ,_afcgb ;};return true ,nil ;};

// K returns the value of the key component of the color.
func (_baga *PdfColorDeviceCMYK )K ()float64 {return _baga [3]};func _eecaa (_bdgbbb *_gea .PdfObjectDictionary )(*PdfShadingPattern ,error ){_fbdef :=&PdfShadingPattern {};_bbfca :=_bdgbbb .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _bbfca ==nil {_fd .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_eeggb ,_dgfab :=_gfcfc (_bbfca );if _dgfab !=nil {_fd .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_dgfab );return nil ,_dgfab ;
};_fbdef .Shading =_eeggb ;if _edagg :=_bdgbbb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_edagg !=nil {_dfeda ,_bebfa :=_edagg .(*_gea .PdfObjectArray );if !_bebfa {_fd .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_edagg );
return nil ,_gea .ErrTypeError ;};_fbdef .Matrix =_dfeda ;};if _eaagc :=_bdgbbb .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_eaagc !=nil {_fbdef .ExtGState =_eaagc ;};return _fbdef ,nil ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_gafca *PdfReader )GetOutlines ()(*Outline ,error ){if _gafca ==nil {return nil ,_gg .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_aeba :=_gafca .GetOutlineTree ();if _aeba ==nil {return nil ,_gg .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _gcdda func (_gadda *PdfOutlineTreeNode ,_baaed *[]*OutlineItem );_gcdda =func (_agfgf *PdfOutlineTreeNode ,_dfaag *[]*OutlineItem ){if _agfgf ==nil {return ;};if _agfgf ._bdagf ==nil {_fd .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _beffd *OutlineItem ;if _cegdg ,_fgcaa :=_agfgf ._bdagf .(*PdfOutlineItem );_fgcaa {_aecbg :=_cegdg .Dest ;if (_aecbg ==nil ||_gea .IsNullObject (_aecbg ))&&_cegdg .A !=nil {if _gdgbdb ,_ddfc :=_gea .GetDict (_cegdg .A );_ddfc {if _cfcgd ,_fbeee :=_gea .GetArray (_gdgbdb .Get ("\u0044"));
_fbeee {_aecbg =_cfcgd ;}else {_fegff ,_gfdg :=_gea .GetString (_gdgbdb .Get ("\u0044"));if !_gfdg {return ;};_acefc ,_gfdg :=_gafca ._cdda .Get ("\u004e\u0061\u006de\u0073").(*_gea .PdfObjectReference );if !_gfdg {return ;};_fbdba ,_ddffgg :=_gafca ._edcdb .LookupByReference (*_acefc );
if _ddffgg !=nil {_fd .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_ddffgg .Error ());
return ;};_eggec ,_gfdg :=_fbdba .(*_gea .PdfIndirectObject );if !_gfdg {return ;};_ebabf :=map[_gea .PdfObject ]struct{}{};_ddffgg =_gafca .buildNameNodes (_eggec ,_ebabf );if _ddffgg !=nil {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_ddffgg .Error ());
return ;};for _acff :=range _ebabf {_agccd ,_cdaba :=_gea .GetDict (_acff );if !_cdaba {continue ;};_gddc ,_cdaba :=_gea .GetArray (_agccd .Get ("\u004e\u0061\u006de\u0073"));if !_cdaba {continue ;};for _dggeb ,_daeb :=range _gddc .Elements (){switch _daeb .(type ){case *_gea .PdfObjectString :if _daeb .String ()==_fegff .String (){if _begbf :=_gddc .Get (_dggeb +1);
_begbf !=nil {if _gcbgg ,_fdgfc :=_gea .GetDict (_begbf );_fdgfc {_aecbg =_gcbgg .Get ("\u0044");break ;};};};};};};};};};var _ebcbab OutlineDest ;if _aecbg !=nil &&!_gea .IsNullObject (_aecbg ){if _agcae ,_gfgaa :=_abggb (_aecbg ,_gafca );_gfgaa ==nil {_ebcbab =*_agcae ;
}else {_fd .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_aecbg ,_gfgaa );
};};_beffd =NewOutlineItem (_cegdg .Title .Decoded (),_ebcbab );*_dfaag =append (*_dfaag ,_beffd );if _cegdg .Next !=nil {_gcdda (_cegdg .Next ,_dfaag );};};if _agfgf .First !=nil {if _beffd !=nil {_dfaag =&_beffd .Entries ;};_gcdda (_agfgf .First ,_dfaag );
};};_bgddf :=NewOutline ();_gcdda (_aeba ,&_bgddf .Entries );return _bgddf ,nil ;};func (_cada *LTV )getCerts (_eecf []*_cg .Certificate )([][]byte ,error ){_edbe :=make ([][]byte ,0,len (_eecf ));for _ ,_caff :=range _eecf {_edbe =append (_edbe ,_caff .Raw );
};return _edbe ,nil ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_dcbac *_gea .PdfIndirectObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_ecbb *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_gg .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aded :=vals [0];if _aded < 0.0||_aded > 1.0{_fd .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_aded );
return nil ,ErrColorOutOfRange ;};_fbafc :=NewPdfColorCalGray (_aded );return _fbafc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ba *PdfAction )ToPdfObject ()_gea .PdfObject {_bag :=_ba ._af ;_ggb :=_bag .PdfObject .(*_gea .PdfObjectDictionary );_ggb .Clear ();_ggb .Set ("\u0054\u0079\u0070\u0065",_gea .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_ggb .SetIfNotNil ("\u0053",_ba .S );
_ggb .SetIfNotNil ("\u004e\u0065\u0078\u0074",_ba .Next );return _bag ;};func (_cbdae *PdfWriter )writeObjects (){_fd .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_cbdae ._aeaa ));_cbdae ._aebaa =make (map[int ]crossReference );
_cbdae ._aebaa [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _cbdae ._eddaf .ObjectMap !=nil {for _gcefb ,_afgbe :=range _cbdae ._eddaf .ObjectMap {if _gcefb ==0{continue ;};if _afgbe .XType ==_gea .XrefTypeObjectStream {_cceae :=crossReference {Type :2,ObjectNumber :_afgbe .OsObjNumber ,Index :_afgbe .OsObjIndex };
_cbdae ._aebaa [_gcefb ]=_cceae ;};if _afgbe .XType ==_gea .XrefTypeTableEntry {_gacce :=crossReference {Type :1,ObjectNumber :_afgbe .ObjectNumber ,Offset :_afgbe .Offset };_cbdae ._aebaa [_gcefb ]=_gacce ;};};};};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_cd :=NewPdfAction ();_gf :=&PdfActionMovie {};_gf .PdfAction =_cd ;_cd .SetContext (_gf );return _gf ;};

// ToPdfObject returns the PDF representation of the function.
func (_bcae *PdfFunctionType0 )ToPdfObject ()_gea .PdfObject {if _bcae ._addge ==nil {_bcae ._addge =&_gea .PdfObjectStream {};};_afcd :=_gea .MakeDict ();_afcd .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gea .MakeInteger (0));
_fcebaa :=&_gea .PdfObjectArray {};for _ ,_ceca :=range _bcae .Domain {_fcebaa .Append (_gea .MakeFloat (_ceca ));};_afcd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fcebaa );_fdda :=&_gea .PdfObjectArray {};for _ ,_baeaf :=range _bcae .Range {_fdda .Append (_gea .MakeFloat (_baeaf ));
};_afcd .Set ("\u0052\u0061\u006eg\u0065",_fdda );_bbfbdg :=&_gea .PdfObjectArray {};for _ ,_egffg :=range _bcae .Size {_bbfbdg .Append (_gea .MakeInteger (int64 (_egffg )));};_afcd .Set ("\u0053\u0069\u007a\u0065",_bbfbdg );_afcd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_gea .MakeInteger (int64 (_bcae .BitsPerSample )));
if _bcae .Order !=1{_afcd .Set ("\u004f\u0072\u0064e\u0072",_gea .MakeInteger (int64 (_bcae .Order )));};_afcd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gea .MakeInteger (int64 (len (_bcae ._feeda ))));_bcae ._addge .Stream =_bcae ._feeda ;_bcae ._addge .PdfObjectDictionary =_afcd ;
return _bcae ._addge ;};func (_cdgbg *PdfPage )getParentResources ()(*PdfPageResources ,error ){_efdg :=_cdgbg .Parent ;for _efdg !=nil {_cecb ,_bgfab :=_gea .GetDict (_efdg );if !_bgfab {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_gg .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _abgggd :=_cecb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_abgggd !=nil {_eedf ,_agaag :=_gea .GetDict (_abgggd );
if !_agaag {return nil ,_gg .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_daefa ,_gfbdg :=NewPdfPageResourcesFromDict (_eedf );if _gfbdg !=nil {return nil ,_gfbdg ;};return _daefa ,nil ;
};_efdg =_cecb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_ebfc *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_dcdee *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_gea .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_gg .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_bdaf :=&PdfColorPattern {};_bddb ,_ebebd :=objects [len (objects )-1].(*_gea .PdfObjectName );if !_ebebd {_fd .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_bdaf .PatternName =*_bddb ;if len (objects )> 1{_bgged :=objects [0:len (objects )-1];if _dcdee .UnderlyingCS ==nil {_fd .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_gg .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_geffa ,_fdce :=_dcdee .UnderlyingCS .ColorFromPdfObjects (_bgged );if _fdce !=nil {_fd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_fdce );
return nil ,_fdce ;};_bdaf .Color =_geffa ;};return _bdaf ,nil ;};func _fecbe (_bbbag _gea .PdfObject ){_fd .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_bbbag ,_bbbag .String ());if _agfa ,_abdda :=_bbbag .(*_gea .PdfObjectStream );
_abdda {_fcdcg ,_cgcfa :=_gea .DecodeStream (_agfa );if _cgcfa !=nil {_fd .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_cgcfa );return ;};_fd .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_fcdcg );}else if _abbf ,_ebaaf :=_bbbag .(*_gea .PdfIndirectObject );
_ebaaf {_fd .Log .Debug ("\u0025\u0054\u0020%\u0076",_abbf .PdfObject ,_abbf .PdfObject );_fd .Log .Debug ("\u0025\u0073",_abbf .PdfObject .String ());};};func (_ddgd *PdfWriter )getPdfVersion ()string {return _e .Sprintf ("\u0025\u0064\u002e%\u0064",_ddgd ._fedce .Major ,_ddgd ._fedce .Minor );
};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _g .Time ){_aefdbd .Lock ();defer _aefdbd .Unlock ();_aebfca =creationDate ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _gea .StreamEncoder ;Intent _gea .PdfObject ;ImageMask _gea .PdfObject ;Mask _gea .PdfObject ;Matte _gea .PdfObject ;Decode _gea .PdfObject ;Interpolate _gea .PdfObject ;
Alternatives _gea .PdfObject ;SMask _gea .PdfObject ;SMaskInData _gea .PdfObject ;Name _gea .PdfObject ;StructParent _gea .PdfObject ;ID _gea .PdfObject ;OPI _gea .PdfObject ;Metadata _gea .PdfObject ;OC _gea .PdfObject ;Stream []byte ;_bbffa *_gea .PdfObjectStream ;
};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _gea .PdfObject ;V _gea .PdfObject ;};func (_bbebg *PdfWriter )writeObject (_bfgfc int ,_efdab _gea .PdfObject ){_fd .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_bfgfc );
if _ebafb ,_gadcb :=_efdab .(*_gea .PdfIndirectObject );_gadcb {_bbebg ._aebaa [_bfgfc ]=crossReference {Type :1,Offset :_bbebg ._acaace ,Generation :_ebafb .GenerationNumber };_aebce :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bfgfc );
if _fafgf ,_cagaa :=_ebafb .PdfObject .(*pdfSignDictionary );_cagaa {_fafgf ._afdg =_bbebg ._acaace +int64 (len (_aebce ));};if _ebafb .PdfObject ==nil {_fd .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_ebafb .PdfObject =_gea .MakeNull ();};_aebce +=_ebafb .PdfObject .WriteString ();_aebce +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_bbebg .writeString (_aebce );return ;};if _agbee ,_dcfbcc :=_efdab .(*_gea .PdfObjectStream );_dcfbcc {_bbebg ._aebaa [_bfgfc ]=crossReference {Type :1,Offset :_bbebg ._acaace ,Generation :_agbee .GenerationNumber };
_fbag :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bfgfc );_fbag +=_agbee .PdfObjectDictionary .WriteString ();_fbag +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_bbebg .writeString (_fbag );_bbebg .writeBytes (_agbee .Stream );
_bbebg .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _gbcg ,_bbgcc :=_efdab .(*_gea .PdfObjectStreams );_bbgcc {_bbebg ._aebaa [_bfgfc ]=crossReference {Type :1,Offset :_bbebg ._acaace ,Generation :_gbcg .GenerationNumber };
_fcaed :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bfgfc );var _cgced []string ;var _bcccg string ;var _bgfcae int64 ;for _dcdeg ,_aaggd :=range _gbcg .Elements (){_bdcgd ,_cafdd :=_aaggd .(*_gea .PdfIndirectObject );if !_cafdd {_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_bfgfc ,_aaggd );
continue ;};_gbcae :=_bdcgd .PdfObject .WriteString ()+"\u0020";_bcccg =_bcccg +_gbcae ;_cgced =append (_cgced ,_e .Sprintf ("\u0025\u0064\u0020%\u0064",_bdcgd .ObjectNumber ,_bgfcae ));_bbebg ._aebaa [int (_bdcgd .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_bfgfc ,Index :_dcdeg };
_bgfcae =_bgfcae +int64 (len ([]byte (_gbcae )));};_dbfad :=_aa .Join (_cgced ,"\u0020")+"\u0020";_bcaad :=_gea .NewFlateEncoder ();_cbdgf :=_bcaad .MakeStreamDict ();_cbdgf .Set (_gea .PdfObjectName ("\u0054\u0079\u0070\u0065"),_gea .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_efgee :=int64 (_gbcg .Len ());_cbdgf .Set (_gea .PdfObjectName ("\u004e"),_gea .MakeInteger (_efgee ));_gcbeg :=int64 (len (_dbfad ));_cbdgf .Set (_gea .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_gea .MakeInteger (_gcbeg ));_gdfge ,_ :=_bcaad .EncodeBytes ([]byte (_dbfad +_bcccg ));
_caaf :=int64 (len (_gdfge ));_cbdgf .Set (_gea .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_gea .MakeInteger (_caaf ));_fcaed +=_cbdgf .WriteString ();_fcaed +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_bbebg .writeString (_fcaed );
_bbebg .writeBytes (_gdfge );_bbebg .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_bbebg .writeString (_efdab .WriteString ());};

// ToPdfObject implements interface PdfModel.
func (_bgcg *PdfAnnotationPolyLine )ToPdfObject ()_gea .PdfObject {_bgcg .PdfAnnotation .ToPdfObject ();_ccde :=_bgcg ._bbf ;_feef :=_ccde .PdfObject .(*_gea .PdfObjectDictionary );_bgcg .PdfAnnotationMarkup .appendToPdfDictionary (_feef );_feef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gea .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_feef .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_bgcg .Vertices );_feef .SetIfNotNil ("\u004c\u0045",_bgcg .LE );_feef .SetIfNotNil ("\u0042\u0053",_bgcg .BS );_feef .SetIfNotNil ("\u0049\u0043",_bgcg .IC );_feef .SetIfNotNil ("\u0042\u0045",_bgcg .BE );
_feef .SetIfNotNil ("\u0049\u0054",_bgcg .IT );_feef .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bgcg .Measure );return _ccde ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_dbgg *_gea .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_cggc *PdfAnnotation )ToPdfObject ()_gea .PdfObject {_ffab :=_cggc ._bbf ;_ffca :=_ffab .PdfObject .(*_gea .PdfObjectDictionary );_ffca .Clear ();_ffca .Set ("\u0054\u0079\u0070\u0065",_gea .MakeName ("\u0041\u006e\u006eo\u0074"));_ffca .SetIfNotNil ("\u0052\u0065\u0063\u0074",_cggc .Rect );
_ffca .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cggc .Contents );_ffca .SetIfNotNil ("\u0050",_cggc .P );_ffca .SetIfNotNil ("\u004e\u004d",_cggc .NM );_ffca .SetIfNotNil ("\u004d",_cggc .M );_ffca .SetIfNotNil ("\u0046",_cggc .F );
_ffca .SetIfNotNil ("\u0041\u0050",_cggc .AP );_ffca .SetIfNotNil ("\u0041\u0053",_cggc .AS );_ffca .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_cggc .Border );_ffca .SetIfNotNil ("\u0043",_cggc .C );_ffca .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_cggc .StructParent );
_ffca .SetIfNotNil ("\u004f\u0043",_cggc .OC );return _ffab ;};

// AllFields returns a flattened list of all fields in the form.
func (_acga *PdfAcroForm )AllFields ()[]*PdfField {if _acga ==nil {return nil ;};var _bbcb []*PdfField ;if _acga .Fields !=nil {for _ ,_cdbb :=range *_acga .Fields {_bbcb =append (_bbcb ,_ggce (_cdbb )...);};};return _bbcb ;};

// AddImageResource adds an image to the XObject resources.
func (_bgee *PdfPage )AddImageResource (name _gea .PdfObjectName ,ximg *XObjectImage )error {var _gdcae *_gea .PdfObjectDictionary ;if _bgee .Resources .XObject ==nil {_gdcae =_gea .MakeDict ();_bgee .Resources .XObject =_gdcae ;}else {var _gbdbga bool ;
_gdcae ,_gbdbga =(_bgee .Resources .XObject ).(*_gea .PdfObjectDictionary );if !_gbdbga {return _gg .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_gdcae .Set (name ,ximg .ToPdfObject ());
return nil ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_db :=NewPdfAnnotation ();_fdc :=&PdfAnnotationCircle {};_fdc .PdfAnnotation =_db ;_fdc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_db .SetContext (_fdc );return _fdc ;};func _dadef ()_g .Time {_aefdbd .Lock ();
defer _aefdbd .Unlock ();return _aebfca };

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_eadgd *PdfFont )BytesToCharcodes (data []byte )[]_ceb .CharCode {_fd .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _fdbg ,_cecef :=_eadgd ._bgfbc .(*pdfFontType0 );_cecef &&_fdbg ._caddc !=nil {if _cfdf ,_febf :=_fdbg .bytesToCharcodes (data );_febf {return _cfdf ;};};var (_egce =make ([]_ceb .CharCode ,0,len (data )+len (data )%2);_eaga =_eadgd .baseFields (););
if _eaga ._cbfe !=nil {if _aaeac ,_ffcf :=_eaga ._cbfe .BytesToCharcodes (data );_ffcf {for _ ,_gafg :=range _aaeac {_egce =append (_egce ,_ceb .CharCode (_gafg ));};return _egce ;};};if _eaga .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};};
if len (data )%2!=0{_fd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _cgfff :=0;_cgfff < len (data );_cgfff +=2{_cfeaf :=uint16 (data [_cgfff ])<<8|uint16 (data [_cgfff +1]);_egce =append (_egce ,_ceb .CharCode (_cfeaf ));};}else {for _ ,_eceee :=range data {_egce =append (_egce ,_ceb .CharCode (_eceee ));
};};return _egce ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _gea .PdfObject ;FS _gea .PdfObject ;F _gea .PdfObject ;UF _gea .PdfObject ;DOS _gea .PdfObject ;Mac _gea .PdfObject ;Unix _gea .PdfObject ;ID _gea .PdfObject ;V _gea .PdfObject ;EF _gea .PdfObject ;RF _gea .PdfObject ;Desc _gea .PdfObject ;
CI _gea .PdfObject ;_feeef _gea .PdfObject ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gea .PdfObject ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_addac *PdfColorspaceLab )DecodeArray ()[]float64 {_ddcc :=[]float64 {0,100};if _addac .Range !=nil &&len (_addac .Range )==4{_ddcc =append (_ddcc ,_addac .Range ...);}else {_ddcc =append (_ddcc ,-100,100,-100,100);};return _ddcc ;};

// A returns the value of the A component of the color.
func (_fbfb *PdfColorLab )A ()float64 {return _fbfb [1]};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_cad .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_cad .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_cad .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_dgfff *PdfAppender ;_dggb *DSS ;};func _debe (_gfgae string )map[string ]string {_bffcc :=_adbe .Split (_gfgae ,-1);_bddf :=map[string ]string {};for _ ,_bccff :=range _bffcc {_aaffc :=_bcgedb .FindStringSubmatch (_bccff );if _aaffc ==nil {continue ;
};_bcfag ,_ccadf :=_aaffc [1],_aaffc [2];_bddf [_bcfag ]=_ccadf ;};return _bddf ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_dcefa *PdfPageResources )HasExtGState (keyName _gea .PdfObjectName )bool {_ ,_abfeg :=_dcefa .GetFontByName (keyName );return _abfeg ;};

// GetBorderWidth returns the border style's width.
func (_ccad *PdfBorderStyle )GetBorderWidth ()float64 {if _ccad .W ==nil {return 1;};return *_ccad .W ;};

// Val returns the value of the color.
func (_bcegf *PdfColorCalGray )Val ()float64 {return float64 (*_bcegf )};

// GetPdfInfo returns the PDF info dictionary.
func (_dbede *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_gcdg ,_egcgb :=_dbede .GetTrailer ();if _egcgb !=nil {return nil ,_egcgb ;};var _bbed *_gea .PdfObjectDictionary ;_ffgac :=_gcdg .Get ("\u0049\u006e\u0066\u006f");switch _gdfgg :=_ffgac .(type ){case *_gea .PdfObjectReference :_ggdce :=_gdfgg ;
_ffgac ,_egcgb =_dbede .GetIndirectObjectByNumber (int (_ggdce .ObjectNumber ));_ffgac =_gea .TraceToDirectObject (_ffgac );if _egcgb !=nil {return nil ,_egcgb ;};_bbed ,_ =_ffgac .(*_gea .PdfObjectDictionary );case *_gea .PdfObjectDictionary :_bbed =_gdfgg ;
};if _bbed ==nil {return nil ,_gg .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_egdfcd ,_egcgb :=NewPdfInfoFromObject (_bbed );if _egcgb !=nil {return nil ,_egcgb ;
};return _egdfcd ,nil ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_dffgb *PdfPage )AddContentStreamByString (contentStr string )error {_eeea ,_cbba :=_gea .MakeStream ([]byte (contentStr ),_gea .NewFlateEncoder ());if _cbba !=nil {return _cbba ;};if _dffgb .Contents ==nil {_dffgb .Contents =_eeea ;}else {_eaedgd :=_gea .TraceToDirectObject (_dffgb .Contents );
_dbaacd ,_acgbb :=_eaedgd .(*_gea .PdfObjectArray );if !_acgbb {_dbaacd =_gea .MakeArray (_eaedgd );};_dbaacd .Append (_eeea );_dffgb .Contents =_dbaacd ;};return nil ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_aecb *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_dgda ,_cgef :=color .(*PdfColorDeviceGray );if !_cgef {_fd .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_gg .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_dgda ),float64 (*_dgda ),float64 (*_dgda )),nil ;};