//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_b "bufio";_dc "bytes";_ce "crypto/rand";_gg "crypto/sha1";_ff "crypto/x509";_bc "encoding/binary";_f "encoding/hex";_ea "errors";_c "fmt";_ab "github.com/unidoc/pkcs7";_ae "github.com/unidoc/unipdf/v3/common";_cda "github.com/unidoc/unipdf/v3/core";
_dd "github.com/unidoc/unipdf/v3/core/security";_ag "github.com/unidoc/unipdf/v3/core/security/crypt";_db "github.com/unidoc/unipdf/v3/internal/cmap";_eee "github.com/unidoc/unipdf/v3/internal/imageutil";_ffc "github.com/unidoc/unipdf/v3/internal/license";
_bed "github.com/unidoc/unipdf/v3/internal/sampling";_aef "github.com/unidoc/unipdf/v3/internal/textencoding";_acg "github.com/unidoc/unipdf/v3/internal/transform";_fd "github.com/unidoc/unipdf/v3/model/internal/fonts";_bf "github.com/unidoc/unipdf/v3/model/sigutil";
_fbd "github.com/unidoc/unipdf/v3/ps";_ad "github.com/unidoc/unitype";_ac "golang.org/x/xerrors";_e "image";_de "image/color";_ "image/gif";_ "image/png";_cd "io";_fb "io/ioutil";_ba "math";_ee "math/rand";_eg "os";_cf "regexp";_df "sort";_gc "strconv";
_bb "strings";_d "sync";_be "time";_ge "unicode";_fbc "unicode/utf8";);

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_dcgae *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_dagb ,_ ,_cdde :=_dcgae .CharcodesToUnicodeWithStats (_dcgae .BytesToCharcodes (data ));_fbfd :=_aef .ExpandLigatures (_dagb );return _fbfd ,_fbc .RuneCountInString (_fbfd ),_cdde ;
};

// BaseFont returns the font's "BaseFont" field.
func (_gfef *PdfFont )BaseFont ()string {return _gfef .baseFields ()._gedd };

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_gad :=NewPdfAnnotation ();_efa :=&PdfAnnotationPolygon {};_efa .PdfAnnotation =_gad ;_efa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gad .SetContext (_efa );return _efa ;};func (_geec *PdfReader )loadAction (_efcd _cda .PdfObject )(*PdfAction ,error ){if _bae ,_ddca :=_cda .GetIndirect (_efcd );
_ddca {_dcbd ,_eabc :=_geec .newPdfActionFromIndirectObject (_bae );if _eabc !=nil {return nil ,_eabc ;};return _dcbd ,nil ;}else if !_cda .IsNullObject (_efcd ){return nil ,_ea .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_cda .PdfObject ,error );};

// String returns a string describing the font descriptor.
func (_affeb *PdfFontDescriptor )String ()string {var _gdcgg []string ;if _affeb .FontName !=nil {_gdcgg =append (_gdcgg ,_affeb .FontName .String ());};if _affeb .FontFamily !=nil {_gdcgg =append (_gdcgg ,_affeb .FontFamily .String ());};if _affeb .fontFile !=nil {_gdcgg =append (_gdcgg ,_affeb .fontFile .String ());
};if _affeb ._adfcc !=nil {_gdcgg =append (_gdcgg ,_affeb ._adfcc .String ());};_gdcgg =append (_gdcgg ,_c .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_affeb .FontFile3 !=nil ));return _c .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_bb .Join (_gdcgg ,"\u002c\u0020"));
};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_bgeda *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_ea .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_eabfd ,_fgba :=_eee .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._eeeg ,img ._eabad );if _fgba !=nil {return img ,_fgba ;};_adgbc ,_fgba :=_eee .GrayConverter .Convert (_eabfd );if _fgba !=nil {return img ,_fgba ;
};return _fdaad (_adgbc .Base ()),nil ;};func (_gfbb *PdfReader )newPdfAnnotationSquigglyFromDict (_ecc *_cda .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_dbd :=PdfAnnotationSquiggly {};_gaae ,_dgc :=_gfbb .newPdfAnnotationMarkupFromDict (_ecc );
if _dgc !=nil {return nil ,_dgc ;};_dbd .PdfAnnotationMarkup =_gaae ;_dbd .QuadPoints =_ecc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_dbd ,nil ;};func _dead (_bccbg _cda .PdfObject )(*_cda .PdfObjectDictionary ,*fontCommon ,error ){_fdad :=&fontCommon {};
if _eadc ,_gdbf :=_bccbg .(*_cda .PdfIndirectObject );_gdbf {_fdad ._dbdae =_eadc .ObjectNumber ;};_dgga ,_gefg :=_cda .GetDict (_bccbg );if !_gefg {_ae .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bccbg );
return nil ,nil ,ErrFontNotSupported ;};_dadge ,_gefg :=_cda .GetNameVal (_dgga .Get ("\u0054\u0079\u0070\u0065"));if !_gefg {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _dadge !="\u0046\u006f\u006e\u0074"{_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_dadge ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_cda .ErrTypeError ;};_deca ,_gefg :=_cda .GetNameVal (_dgga .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_gefg {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_fdad ._fceb =_deca ;_cead ,_gefg :=_cda .GetNameVal (_dgga .Get ("\u004e\u0061\u006d\u0065"));if _gefg {_fdad ._abgeg =_cead ;};_ffge :=_dgga .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _ffge !=nil {_fdad ._fbee =_cda .TraceToDirectObject (_ffge );
_ggcf ,_eadge :=_dagdg (_fdad ._fbee ,_fdad );if _eadge !=nil {return _dgga ,_fdad ,_eadge ;};_fdad ._bfdgd =_ggcf ;}else if _deca =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_deca =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_adfc ,_bffgf :=_db .NewCIDSystemInfo (_dgga .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _bffgf !=nil {return _dgga ,_fdad ,_bffgf ;};_dafd :=_c .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_adfc .Registry ,_adfc .Ordering );if _db .IsPredefinedCMap (_dafd ){_fdad ._bfdgd ,_bffgf =_db .LoadPredefinedCMap (_dafd );
if _bffgf !=nil {_ae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_dafd ,_bffgf );
};};};_dcfdb :=_dgga .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _dcfdb !=nil {_bagbd ,_eecf :=_fdfc (_dcfdb );if _eecf !=nil {_ae .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_eecf );
return _dgga ,_fdad ,_eecf ;};_fdad ._bedag =_bagbd ;};if _deca !="\u0054\u0079\u0070e\u0033"{_gcbbb ,_bffege :=_cda .GetNameVal (_dgga .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_bffege {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _dgga ,_fdad ,ErrRequiredAttributeMissing ;};_fdad ._gedd =_gcbbb ;};return _dgga ,_fdad ,nil ;};type fontFile struct{_bafcg string ;_eebf string ;_ggff _aef .SimpleEncoder ;};

// Y returns the value of the yellow component of the color.
func (_dgab *PdfColorDeviceCMYK )Y ()float64 {return _dgab [2]};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);func _cebcb (_bebgd *_cda .PdfObjectDictionary )(*PdfShadingPattern ,error ){_bcdde :=&PdfShadingPattern {};
_gfdcg :=_bebgd .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _gfdcg ==nil {_ae .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_beacc ,_baag :=_dfec (_gfdcg );
if _baag !=nil {_ae .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_baag );return nil ,_baag ;};_bcdde .Shading =_beacc ;if _fefbd :=_bebgd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_fefbd !=nil {_bebc ,_aeeec :=_fefbd .(*_cda .PdfObjectArray );if !_aeeec {_ae .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fefbd );
return nil ,_cda .ErrTypeError ;};_bcdde .Matrix =_bebc ;};if _afbeba :=_bebgd .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_afbeba !=nil {_bcdde .ExtGState =_afbeba ;};return _bcdde ,nil ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_fbcb *PdfColorspaceSpecialIndexed )ToPdfObject ()_cda .PdfObject {_fgfff :=_cda .MakeArray (_cda .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_fgfff .Append (_fbcb .Base .ToPdfObject ());_fgfff .Append (_cda .MakeInteger (int64 (_fbcb .HiVal )));
_fgfff .Append (_fbcb .Lookup );if _fbcb ._edcb !=nil {_fbcb ._edcb .PdfObject =_fgfff ;return _fbcb ._edcb ;};return _fgfff ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_fgab *PdfColorspaceICCBased )ToPdfObject ()_cda .PdfObject {_acdg :=&_cda .PdfObjectArray {};_acdg .Append (_cda .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _bagc *_cda .PdfObjectStream ;if _fgab ._dfff !=nil {_bagc =_fgab ._dfff ;
}else {_bagc =&_cda .PdfObjectStream {};};_eebd :=_cda .MakeDict ();_eebd .Set ("\u004e",_cda .MakeInteger (int64 (_fgab .N )));if _fgab .Alternate !=nil {_eebd .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_fgab .Alternate .ToPdfObject ());};if _fgab .Metadata !=nil {_eebd .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_fgab .Metadata );
};if _fgab .Range !=nil {var _eecaa []_cda .PdfObject ;for _ ,_efdf :=range _fgab .Range {_eecaa =append (_eecaa ,_cda .MakeFloat (_efdf ));};_eebd .Set ("\u0052\u0061\u006eg\u0065",_cda .MakeArray (_eecaa ...));};_eebd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cda .MakeInteger (int64 (len (_fgab .Data ))));
_bagc .Stream =_fgab .Data ;_bagc .PdfObjectDictionary =_eebd ;_acdg .Append (_bagc );if _fgab ._bcebb !=nil {_fgab ._bcebb .PdfObject =_acdg ;return _fgab ._bcebb ;};return _acdg ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _cda .PdfObject ;Q _cda .PdfObject ;RC _cda .PdfObject ;DS _cda .PdfObject ;CL _cda .PdfObject ;IT _cda .PdfObject ;BE _cda .PdfObject ;RD _cda .PdfObject ;BS _cda .PdfObject ;LE _cda .PdfObject ;
};

// ToPdfObject implements interface PdfModel.
func (_edeb *PdfAnnotationPrinterMark )ToPdfObject ()_cda .PdfObject {_edeb .PdfAnnotation .ToPdfObject ();_ecb :=_edeb ._afd ;_acag :=_ecb .PdfObject .(*_cda .PdfObjectDictionary );_acag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_acag .SetIfNotNil ("\u004d\u004e",_edeb .MN );return _ecb ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// R returns the value of the red component of the color.
func (_ggfcg *PdfColorDeviceRGB )R ()float64 {return _ggfcg [0]};func (_eggb *PdfReader )newPdfAnnotationUnderlineFromDict (_adcg *_cda .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_afge :=PdfAnnotationUnderline {};_ffef ,_fgc :=_eggb .newPdfAnnotationMarkupFromDict (_adcg );
if _fgc !=nil {return nil ,_fgc ;};_afge .PdfAnnotationMarkup =_ffef ;_afge .QuadPoints =_adcg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_afge ,nil ;};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_aafcc .Lock ();defer _aafcc .Unlock ();_fccdf =subject };func (_gbdf *PdfReader )newPdfActionTransFromDict (_accba *_cda .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_accba .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};

// GetPage returns the PdfPage model for the specified page number.
func (_ddgab *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _ddgab ._gaedg .GetCrypter ()!=nil &&!_ddgab ._gaedg .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_ddgab ._gbdee )< pageNumber {return nil ,_ea .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_aeega :=pageNumber -1;if _aeega < 0{return nil ,_c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_deage :=_ddgab .PageList [_aeega ];
return _deage ,nil ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_eeeg []byte ;_eabad []float64 ;};func (_abbca fontCommon )isCIDFont ()bool {if _abbca ._fceb ==""{_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_abbca );
};_efeab :=false ;switch _abbca ._fceb {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_efeab =true ;};_ae .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_efeab ,_abbca );
return _efeab ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_cbbf *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_gbbd ,_bdce :=color .(*PdfColorDeviceGray );if !_bdce {_ae .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_ea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_gbbd ),float64 (*_gbbd ),float64 (*_gbbd )),nil ;};func (_adeg *PdfReader )newPdfAnnotationProjectionFromDict (_bfd *_cda .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_abaf :=&PdfAnnotationProjection {};
_febg ,_gafa :=_adeg .newPdfAnnotationMarkupFromDict (_bfd );if _gafa !=nil {return nil ,_gafa ;};_abaf .PdfAnnotationMarkup =_febg ;return _abaf ,nil ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _cda .PdfObject ;T _cda .PdfObject ;Operation _cda .PdfObject ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_agec *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _bcab []float64 ;for _aafba :=0;_aafba < _agec .GetNumComponents ();_aafba ++{_bcab =append (_bcab ,0.0,1.0);};return _bcab ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _be .Time ){_aafcc .Lock ();defer _aafcc .Unlock ();_dbdce =modifiedDate ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// ToPdfObject implements interface PdfModel.
func (_faeb *PdfAnnotationPolygon )ToPdfObject ()_cda .PdfObject {_faeb .PdfAnnotation .ToPdfObject ();_aaab :=_faeb ._afd ;_geg :=_aaab .PdfObject .(*_cda .PdfObjectDictionary );_faeb .PdfAnnotationMarkup .appendToPdfDictionary (_geg );_geg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_geg .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_faeb .Vertices );_geg .SetIfNotNil ("\u004c\u0045",_faeb .LE );_geg .SetIfNotNil ("\u0042\u0053",_faeb .BS );_geg .SetIfNotNil ("\u0049\u0043",_faeb .IC );_geg .SetIfNotNil ("\u0042\u0045",_faeb .BE );
_geg .SetIfNotNil ("\u0049\u0054",_faeb .IT );_geg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_faeb .Measure );return _aaab ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_dbb :=NewPdfAction ();_acc :=&PdfActionSetOCGState {};_acc .PdfAction =_dbb ;_dbb .SetContext (_acc );return _acc ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _cd .ReadSeeker )(*PdfReader ,error ){const _acbe ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _dagae (rs ,&ReaderOpts {LazyLoad :true },false ,_acbe );
};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_ggd :=NewPdfAction ();_abf :=&PdfActionTrans {};_abf .PdfAction =_ggd ;_ggd .SetContext (_abf );return _abf ;};func _gcfdb (_fgbe *_cda .PdfObjectDictionary )(*PdfFieldButton ,error ){_dafe :=&PdfFieldButton {};
_dafe .Opt ,_ =_cda .GetArray (_fgbe .Get ("\u004f\u0070\u0074"));return _dafe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dba *PdfAction )ToPdfObject ()_cda .PdfObject {_bbb :=_dba ._dcg ;_cff :=_bbb .PdfObject .(*_cda .PdfObjectDictionary );_cff .Clear ();_cff .Set ("\u0054\u0079\u0070\u0065",_cda .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_cff .SetIfNotNil ("\u0053",_dba .S );
_cff .SetIfNotNil ("\u004e\u0065\u0078\u0074",_dba .Next );return _bbb ;};

// ToPdfObject implements interface PdfModel.
func (_eca *PdfAnnotation3D )ToPdfObject ()_cda .PdfObject {_eca .PdfAnnotation .ToPdfObject ();_fda :=_eca ._afd ;_edgd :=_fda .PdfObject .(*_cda .PdfObjectDictionary );_edgd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0033\u0044"));
_edgd .SetIfNotNil ("\u0033\u0044\u0044",_eca .T3DD );_edgd .SetIfNotNil ("\u0033\u0044\u0056",_eca .T3DV );_edgd .SetIfNotNil ("\u0033\u0044\u0041",_eca .T3DA );_edgd .SetIfNotNil ("\u0033\u0044\u0049",_eca .T3DI );_edgd .SetIfNotNil ("\u0033\u0044\u0042",_eca .T3DB );
return _fda ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};func _cdfeg (_gbaf *_cda .PdfObjectStream )(*PdfFunctionType0 ,error ){_dedc :=&PdfFunctionType0 {};_dedc ._bfeee =_gbaf ;_gceeb :=_gbaf .PdfObjectDictionary ;_efdfg ,_gead :=_cda .TraceToDirectObject (_gceeb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cda .PdfObjectArray );
if !_gead {_ae .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ea .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _efdfg .Len ()< 0||_efdfg .Len ()%2!=0{_ae .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ea .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_dedc .NumInputs =_efdfg .Len ()/2;_cccfd ,_bdbb :=_efdfg .ToFloat64Array ();if _bdbb !=nil {return nil ,_bdbb ;};_dedc .Domain =_cccfd ;_efdfg ,_gead =_cda .TraceToDirectObject (_gceeb .Get ("\u0052\u0061\u006eg\u0065")).(*_cda .PdfObjectArray );if !_gead {_ae .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ea .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _efdfg .Len ()< 0||_efdfg .Len ()%2!=0{return nil ,_ea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_dedc .NumOutputs =_efdfg .Len ()/2;_adga ,_bdbb :=_efdfg .ToFloat64Array ();if _bdbb !=nil {return nil ,_bdbb ;};_dedc .Range =_adga ;_efdfg ,_gead =_cda .TraceToDirectObject (_gceeb .Get ("\u0053\u0069\u007a\u0065")).(*_cda .PdfObjectArray );if !_gead {_ae .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_ea .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_efgbf ,_bdbb :=_efdfg .ToIntegerArray ();
if _bdbb !=nil {return nil ,_bdbb ;};if len (_efgbf )!=_dedc .NumInputs {_ae .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dedc .Size =_efgbf ;_cffb ,_gead :=_cda .TraceToDirectObject (_gceeb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_cda .PdfObjectInteger );
if !_gead {_ae .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_ea .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_cffb !=1&&*_cffb !=2&&*_cffb !=4&&*_cffb !=8&&*_cffb !=12&&*_cffb !=16&&*_cffb !=24&&*_cffb !=32{_ae .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_cffb );
return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dedc .BitsPerSample =int (*_cffb );_dedc .Order =1;_ecagg ,_gead :=_cda .TraceToDirectObject (_gceeb .Get ("\u004f\u0072\u0064e\u0072")).(*_cda .PdfObjectInteger );
if _gead {if *_ecagg !=1&&*_ecagg !=3{_ae .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_ecagg );return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dedc .Order =int (*_ecagg );
};_efdfg ,_gead =_cda .TraceToDirectObject (_gceeb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_cda .PdfObjectArray );if _gead {_dbegc ,_gbdea :=_efdfg .ToFloat64Array ();if _gbdea !=nil {return nil ,_gbdea ;};_dedc .Encode =_dbegc ;};_efdfg ,_gead =_cda .TraceToDirectObject (_gceeb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_cda .PdfObjectArray );
if _gead {_aadef ,_gcff :=_efdfg .ToFloat64Array ();if _gcff !=nil {return nil ,_gcff ;};_dedc .Decode =_aadef ;};_dccga ,_bdbb :=_cda .DecodeStream (_gbaf );if _bdbb !=nil {return nil ,_bdbb ;};_dedc ._gabbf =_dccga ;return _dedc ,nil ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_eadbd *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_eadbd .updateObjectsDeep (dss .ToPdfObject (),nil );};_eadbd ._eeee =dss ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_fdfd *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _fdfd ._ceeaa !=nil {return _fdfd ._ceeaa ,nil ;};if _fdfd .Annots ==nil {_fdfd ._ceeaa =[]*PdfAnnotation {};return nil ,nil ;};if _fdfd ._abadcg ==nil {_fdfd ._ceeaa =[]*PdfAnnotation {};
return nil ,nil ;};_ddcfb ,_ccccd :=_fdfd ._abadcg .loadAnnotations (_fdfd .Annots );if _ccccd !=nil {return nil ,_ccccd ;};if _ddcfb ==nil {_fdfd ._ceeaa =[]*PdfAnnotation {};};_fdfd ._ceeaa =_ddcfb ;return _fdfd ._ceeaa ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gdbd *PdfFilespec )ToPdfObject ()_cda .PdfObject {_febea :=_gdbd .getDict ();_febea .Clear ();_febea .Set ("\u0054\u0079\u0070\u0065",_cda .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_febea .SetIfNotNil ("\u0046\u0053",_gdbd .FS );
_febea .SetIfNotNil ("\u0046",_gdbd .F );_febea .SetIfNotNil ("\u0055\u0046",_gdbd .UF );_febea .SetIfNotNil ("\u0044\u004f\u0053",_gdbd .DOS );_febea .SetIfNotNil ("\u004d\u0061\u0063",_gdbd .Mac );_febea .SetIfNotNil ("\u0055\u006e\u0069\u0078",_gdbd .Unix );
_febea .SetIfNotNil ("\u0049\u0044",_gdbd .ID );_febea .SetIfNotNil ("\u0056",_gdbd .V );_febea .SetIfNotNil ("\u0045\u0046",_gdbd .EF );_febea .SetIfNotNil ("\u0052\u0046",_gdbd .RF );_febea .SetIfNotNil ("\u0044\u0065\u0073\u0063",_gdbd .Desc );_febea .SetIfNotNil ("\u0043\u0049",_gdbd .CI );
return _gdbd ._gfcf ;};func (_bcd *PdfReader )newPdfActionFromIndirectObject (_adf *_cda .PdfIndirectObject )(*PdfAction ,error ){_bbc ,_cgce :=_adf .PdfObject .(*_cda .PdfObjectDictionary );if !_cgce {return nil ,_c .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_bcd ._bbgffg .GetModelFromPrimitive (_bbc );model !=nil {_agd ,_aag :=model .(*PdfAction );if !_aag {return nil ,_c .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _agd ,nil ;};_bbgf :=&PdfAction {};_bbgf ._dcg =_adf ;_bcd ._bbgffg .Register (_bbc ,_bbgf );if _gfg :=_bbc .Get ("\u0054\u0079\u0070\u0065");_gfg !=nil {_bfe ,_acce :=_gfg .(*_cda .PdfObjectName );if !_acce {_ae .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gfg );
}else {if *_bfe !="\u0041\u0063\u0074\u0069\u006f\u006e"{_ae .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_bfe );
};_bbgf .Type =_bfe ;};};if _dbba :=_bbc .Get ("\u004e\u0065\u0078\u0074");_dbba !=nil {_bbgf .Next =_dbba ;};if _aad :=_bbc .Get ("\u0053");_aad !=nil {_bbgf .S =_aad ;};_baaf ,_bbbg :=_bbgf .S .(*_cda .PdfObjectName );if !_bbbg {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_bbgf .S );
return nil ,_c .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_bbgf .S );};_dcf :=PdfActionType (_baaf .String ());
switch _dcf {case ActionTypeGoTo :_ggg ,_cca :=_bcd .newPdfActionGotoFromDict (_bbc );if _cca !=nil {return nil ,_cca ;};_ggg .PdfAction =_bbgf ;_bbgf ._gd =_ggg ;return _bbgf ,nil ;case ActionTypeGoToR :_fecg ,_bgee :=_bcd .newPdfActionGotoRFromDict (_bbc );
if _bgee !=nil {return nil ,_bgee ;};_fecg .PdfAction =_bbgf ;_bbgf ._gd =_fecg ;return _bbgf ,nil ;case ActionTypeGoToE :_gcd ,_dca :=_bcd .newPdfActionGotoEFromDict (_bbc );if _dca !=nil {return nil ,_dca ;};_gcd .PdfAction =_bbgf ;_bbgf ._gd =_gcd ;
return _bbgf ,nil ;case ActionTypeLaunch :_gbc ,_feab :=_bcd .newPdfActionLaunchFromDict (_bbc );if _feab !=nil {return nil ,_feab ;};_gbc .PdfAction =_bbgf ;_bbgf ._gd =_gbc ;return _bbgf ,nil ;case ActionTypeThread :_cceg ,_cgg :=_bcd .newPdfActionThreadFromDict (_bbc );
if _cgg !=nil {return nil ,_cgg ;};_cceg .PdfAction =_bbgf ;_bbgf ._gd =_cceg ;return _bbgf ,nil ;case ActionTypeURI :_defa ,_bda :=_bcd .newPdfActionURIFromDict (_bbc );if _bda !=nil {return nil ,_bda ;};_defa .PdfAction =_bbgf ;_bbgf ._gd =_defa ;return _bbgf ,nil ;
case ActionTypeSound :_acgb ,_cbf :=_bcd .newPdfActionSoundFromDict (_bbc );if _cbf !=nil {return nil ,_cbf ;};_acgb .PdfAction =_bbgf ;_bbgf ._gd =_acgb ;return _bbgf ,nil ;case ActionTypeMovie :_gacc ,_gce :=_bcd .newPdfActionMovieFromDict (_bbc );if _gce !=nil {return nil ,_gce ;
};_gacc .PdfAction =_bbgf ;_bbgf ._gd =_gacc ;return _bbgf ,nil ;case ActionTypeHide :_fba ,_cdag :=_bcd .newPdfActionHideFromDict (_bbc );if _cdag !=nil {return nil ,_cdag ;};_fba .PdfAction =_bbgf ;_bbgf ._gd =_fba ;return _bbgf ,nil ;case ActionTypeNamed :_fcc ,_afb :=_bcd .newPdfActionNamedFromDict (_bbc );
if _afb !=nil {return nil ,_afb ;};_fcc .PdfAction =_bbgf ;_bbgf ._gd =_fcc ;return _bbgf ,nil ;case ActionTypeSubmitForm :_bdb ,_dfd :=_bcd .newPdfActionSubmitFormFromDict (_bbc );if _dfd !=nil {return nil ,_dfd ;};_bdb .PdfAction =_bbgf ;_bbgf ._gd =_bdb ;
return _bbgf ,nil ;case ActionTypeResetForm :_cdf ,_ece :=_bcd .newPdfActionResetFormFromDict (_bbc );if _ece !=nil {return nil ,_ece ;};_cdf .PdfAction =_bbgf ;_bbgf ._gd =_cdf ;return _bbgf ,nil ;case ActionTypeImportData :_abb ,_cec :=_bcd .newPdfActionImportDataFromDict (_bbc );
if _cec !=nil {return nil ,_cec ;};_abb .PdfAction =_bbgf ;_bbgf ._gd =_abb ;return _bbgf ,nil ;case ActionTypeSetOCGState :_ffb ,_cae :=_bcd .newPdfActionSetOCGStateFromDict (_bbc );if _cae !=nil {return nil ,_cae ;};_ffb .PdfAction =_bbgf ;_bbgf ._gd =_ffb ;
return _bbgf ,nil ;case ActionTypeRendition :_aeg ,_eeca :=_bcd .newPdfActionRenditionFromDict (_bbc );if _eeca !=nil {return nil ,_eeca ;};_aeg .PdfAction =_bbgf ;_bbgf ._gd =_aeg ;return _bbgf ,nil ;case ActionTypeTrans :_gdc ,_gceg :=_bcd .newPdfActionTransFromDict (_bbc );
if _gceg !=nil {return nil ,_gceg ;};_gdc .PdfAction =_bbgf ;_bbgf ._gd =_gdc ;return _bbgf ,nil ;case ActionTypeGoTo3DView :_ffgg ,_dfde :=_bcd .newPdfActionGoTo3DViewFromDict (_bbc );if _dfde !=nil {return nil ,_dfde ;};_ffgg .PdfAction =_bbgf ;_bbgf ._gd =_ffgg ;
return _bbgf ,nil ;case ActionTypeJavaScript :_dfad ,_dfda :=_bcd .newPdfActionJavaScriptFromDict (_bbc );if _dfda !=nil {return nil ,_dfda ;};_dfad .PdfAction =_bbgf ;_bbgf ._gd =_dfad ;return _bbgf ,nil ;};_ae .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_dcf );
return nil ,nil ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_dgbf *DSS )ToPdfObject ()_cda .PdfObject {_eaaf :=_dgbf ._cabgd .PdfObject .(*_cda .PdfObjectDictionary );_eaaf .Clear ();_feefg :=_cda .MakeDict ();for _edab ,_cfgg :=range _dgbf .VRI {_feefg .Set (*_cda .MakeName (_edab ),_cfgg .ToPdfObject ());
};_eaaf .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_egafd (_dgbf .Certs ));_eaaf .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_egafd (_dgbf .OCSPs ));_eaaf .SetIfNotNil ("\u0043\u0052\u004c\u0073",_egafd (_dgbf .CRLs ));_eaaf .Set ("\u0056\u0052\u0049",_feefg );
return _dgbf ._cabgd ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_gdagb *PdfPage )GetAllContentStreams ()(string ,error ){_gedcg ,_fccdb :=_gdagb .GetContentStreams ();if _fccdb !=nil {return "",_fccdb ;};return _bb .Join (_gedcg ,"\u0020"),nil ;};func (_fgfcd *PdfReader )newPdfAcroFormFromDict (_ccbdg *_cda .PdfIndirectObject ,_gdabd *_cda .PdfObjectDictionary )(*PdfAcroForm ,error ){_dbbe :=NewPdfAcroForm ();
if _ccbdg !=nil {_dbbe ._eada =_ccbdg ;_ccbdg .PdfObject =_cda .MakeDict ();};if _cecab :=_gdabd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_cecab !=nil {_bffcd ,_fcfb :=_cda .GetArray (_cecab );if !_fcfb {return nil ,_c .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_cecab );
};var _ebfeb []*PdfField ;for _ ,_efeac :=range _bffcd .Elements (){_dgaaf ,_abcg :=_cda .GetIndirect (_efeac );if !_abcg {if _ ,_dcbf :=_efeac .(*_cda .PdfObjectNull );_dcbf {_ae .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_ae .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_efeac );
return nil ,_c .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fdgcg ,_eace :=_fgfcd .newPdfFieldFromIndirectObject (_dgaaf ,nil );
if _eace !=nil {return nil ,_eace ;};_ae .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_fdgcg );_ebfeb =append (_ebfeb ,_fdgcg );};_dbbe .Fields =&_ebfeb ;};if _bgebf :=_gdabd .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_bgebf !=nil {_dccag ,_bbfgc :=_cda .GetBool (_bgebf );if _bbfgc {_dbbe .NeedAppearances =_dccag ;}else {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_bgebf );
};};if _ageafg :=_gdabd .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_ageafg !=nil {_bffff ,_bgcaa :=_cda .GetInt (_ageafg );if _bgcaa {_dbbe .SigFlags =_bffff ;}else {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ageafg );
};};if _bdbe :=_gdabd .Get ("\u0043\u004f");_bdbe !=nil {_fdaa ,_gfaf :=_cda .GetArray (_bdbe );if _gfaf {_dbbe .CO =_fdaa ;}else {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bdbe );
};};if _fbacc :=_gdabd .Get ("\u0044\u0052");_fbacc !=nil {if _aeddb ,_cfdbg :=_cda .GetDict (_fbacc );_cfdbg {_bbdd ,_dfcdg :=NewPdfPageResourcesFromDict (_aeddb );if _dfcdg !=nil {_ae .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_dfcdg );
return nil ,_dfcdg ;};_dbbe .DR =_bbdd ;}else {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fbacc );};};if _fbfcd :=_gdabd .Get ("\u0044\u0041");
_fbfcd !=nil {_cfcd ,_abef :=_cda .GetString (_fbfcd );if _abef {_dbbe .DA =_cfcd ;}else {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fbfcd );
};};if _bedc :=_gdabd .Get ("\u0051");_bedc !=nil {_eccf ,_afdef :=_cda .GetInt (_bedc );if _afdef {_dbbe .Q =_eccf ;}else {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_bedc );
};};if _gcagc :=_gdabd .Get ("\u0058\u0046\u0041");_gcagc !=nil {_dbbe .XFA =_gcagc ;};_dbbe .ToPdfObject ();return _dbbe ,nil ;};func _ceba (_ddcb *_cda .PdfObjectDictionary ,_gdec *fontCommon )(*pdfFontType3 ,error ){_cedc :=_cgfg (_gdec );_bgggg :=_ddcb .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _bgggg ==nil {_bgggg =_cda .MakeInteger (0);};_cedc .FirstChar =_bgggg ;_ggfd ,_aaedg :=_cda .GetIntVal (_bgggg );if !_aaedg {_ae .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_bgggg );
return nil ,_cda .ErrTypeError ;};_geaa :=_aef .CharCode (_ggfd );_bgggg =_ddcb .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _bgggg ==nil {_bgggg =_cda .MakeInteger (255);};_cedc .LastChar =_bgggg ;_ggfd ,_aaedg =_cda .GetIntVal (_bgggg );
if !_aaedg {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_bgggg );return nil ,_cda .ErrTypeError ;
};_fdgec :=_aef .CharCode (_ggfd );_bgggg =_ddcb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _bgggg !=nil {_cedc .Resources =_bgggg ;};_bgggg =_ddcb .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _bgggg ==nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_bgggg );
return nil ,_cda .ErrNotSupported ;};_cedc .CharProcs =_bgggg ;_bgggg =_ddcb .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _bgggg ==nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_bgggg );
return nil ,_cda .ErrNotSupported ;};_cedc .FontMatrix =_bgggg ;_cedc ._edeef =make (map[_aef .CharCode ]float64 );_bgggg =_ddcb .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _bgggg !=nil {_cedc .Widths =_bgggg ;_eegff ,_gabbg :=_cda .GetArray (_bgggg );
if !_gabbg {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_bgggg );return nil ,_cda .ErrTypeError ;
};_bfgc ,_abadc :=_eegff .ToFloat64Array ();if _abadc !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_abadc ;};if len (_bfgc )!=int (_fdgec -_geaa +1){_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_fdgec -_geaa +1,len (_bfgc ));
return nil ,_cda .ErrRangeError ;};_acbb ,_gabbg :=_cda .GetArray (_cedc .FontMatrix );if !_gabbg {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_acbb );
return nil ,_abadc ;};_gbcad ,_abadc :=_acbb .ToFloat64Array ();if _abadc !=nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_abadc ;};_ebab :=_acg .NewMatrix (_gbcad [0],_gbcad [1],_gbcad [2],_gbcad [3],_gbcad [4],_gbcad [5]);for _ddbc ,_dfefe :=range _bfgc {_fcba ,_ :=_ebab .Transform (_dfefe ,_dfefe );_cedc ._edeef [_geaa +_aef .CharCode (_ddbc )]=_fcba ;};};_cedc .Encoding =_cda .TraceToDirectObject (_ddcb .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_cacg :=_ddcb .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _cacg !=nil {_cedc ._fbee =_cda .TraceToDirectObject (_cacg );_eceda ,_aegde :=_dagdg (_cedc ._fbee ,&_cedc .fontCommon );if _aegde !=nil {return nil ,_aegde ;};_cedc ._bfdgd =_eceda ;
};if _cadee :=_cedc ._bfdgd ;_cadee !=nil {_cedc ._bdgf =_aef .NewCMapEncoder ("",nil ,_cadee );}else {_cedc ._bdgf =_aef .NewPdfDocEncoder ();};return _cedc ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_acda *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_baa :=NewPdfAction ();_gcf :=&PdfActionNamed {};_gcf .PdfAction =_baa ;_baa .SetContext (_gcf );return _gcf ;};func (_gefef *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _gefef ._bedag };

// ToPdfObject implements interface PdfModel.
func (_bade *PdfAnnotationPolyLine )ToPdfObject ()_cda .PdfObject {_bade .PdfAnnotation .ToPdfObject ();_fcef :=_bade ._afd ;_dfcc :=_fcef .PdfObject .(*_cda .PdfObjectDictionary );_bade .PdfAnnotationMarkup .appendToPdfDictionary (_dfcc );_dfcc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_dfcc .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_bade .Vertices );_dfcc .SetIfNotNil ("\u004c\u0045",_bade .LE );_dfcc .SetIfNotNil ("\u0042\u0053",_bade .BS );_dfcc .SetIfNotNil ("\u0049\u0043",_bade .IC );_dfcc .SetIfNotNil ("\u0042\u0045",_bade .BE );
_dfcc .SetIfNotNil ("\u0049\u0054",_bade .IT );_dfcc .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bade .Measure );return _fcef ;};

// M returns the value of the magenta component of the color.
func (_eegf *PdfColorDeviceCMYK )M ()float64 {return _eegf [1]};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_ebgd *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_dcdf :=NewPdfAnnotation ();_cad :=&PdfAnnotationSound {};_cad .PdfAnnotation =_dcdf ;_cad .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dcdf .SetContext (_cad );return _cad ;};func (_cac *PdfReader )newPdfAnnotationMarkupFromDict (_gade *_cda .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_agc :=&PdfAnnotationMarkup {};
if _bafg :=_gade .Get ("\u0054");_bafg !=nil {_agc .T =_bafg ;};if _gdb :=_gade .Get ("\u0050\u006f\u0070u\u0070");_gdb !=nil {_add ,_fegc :=_gdb .(*_cda .PdfIndirectObject );if !_fegc {if _ ,_bba :=_gdb .(*_cda .PdfObjectNull );!_bba {return nil ,_ea .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_fbf ,_egde :=_cac .newPdfAnnotationFromIndirectObject (_add );if _egde !=nil {return nil ,_egde ;};if _fbf !=nil {_fbeb ,_gdce :=_fbf ._edbe .(*PdfAnnotationPopup );if !_gdce {return nil ,_ea .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_agc .Popup =_fbeb ;};};};if _cfcb :=_gade .Get ("\u0043\u0041");_cfcb !=nil {_agc .CA =_cfcb ;};if _ccdc :=_gade .Get ("\u0052\u0043");_ccdc !=nil {_agc .RC =_ccdc ;};if _fgg :=_gade .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_fgg !=nil {_agc .CreationDate =_fgg ;};if _dbce :=_gade .Get ("\u0049\u0052\u0054");_dbce !=nil {_agc .IRT =_dbce ;};if _gefd :=_gade .Get ("\u0053\u0075\u0062\u006a");_gefd !=nil {_agc .Subj =_gefd ;};if _afca :=_gade .Get ("\u0052\u0054");_afca !=nil {_agc .RT =_afca ;
};if _eedd :=_gade .Get ("\u0049\u0054");_eedd !=nil {_agc .IT =_eedd ;};if _ddbe :=_gade .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_ddbe !=nil {_agc .ExData =_ddbe ;};return _agc ,nil ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_cgdc *_cda .PdfIndirectObject ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_dccg PdfModel ;_geab *_cda .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_cda .PdfObjectName ;T *_cda .PdfObjectString ;TU *_cda .PdfObjectString ;TM *_cda .PdfObjectString ;Ff *_cda .PdfObjectInteger ;
V _cda .PdfObject ;DV _cda .PdfObject ;AA _cda .PdfObject ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_ddbf *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _ea .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_acgbf :=field .V ;if _acgbf ==nil {return _ea .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_gdga :=pageNum -1;
if _gdga < 0||_gdga > len (_ddbf ._cafc )-1{return _c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_egeg :=_ddbf .Reader .PageList [_gdga ];field .P =_egeg .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_cda .MakeString (_c .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_egeg .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _ddbf ._degb ==_ddbf ._ddaff .AcroForm {_ddbf ._degb =_ddbf .Reader .AcroForm ;};_gcdg :=_ddbf ._degb ;if _gcdg ==nil {_gcdg =NewPdfAcroForm ();};_gcdg .SigFlags =_cda .MakeInteger (3);
_aaec :=append (_gcdg .AllFields (),field .PdfField );_gcdg .Fields =&_aaec ;_ddbf .ReplaceAcroForm (_gcdg );_ddbf .UpdatePage (_egeg );_ddbf ._cafc [_gdga ]=_egeg ;return nil ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _cda .PdfObject ;};func (_abee *pdfFontSimple )addEncoding ()error {var (_gfgcc string ;_eaefa map[_aef .CharCode ]_aef .GlyphName ;_ddgaa _aef .SimpleEncoder ;);if _abee .Encoder ()!=nil {_ceege ,_dcfb :=_abee .Encoder ().(_aef .SimpleEncoder );
if _dcfb &&_ceege !=nil {_gfgcc =_ceege .BaseName ();};};if _abee .Encoding !=nil {_gefda ,_cegb ,_dggdf :=_abee .getFontEncoding ();if _dggdf !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_abee ._gedd ,_abee ._fceb ,_abee .Encoding ,_abee .Encoding ,_dggdf );
return _dggdf ;};if _gefda !=""{_gfgcc =_gefda ;};_eaefa =_cegb ;_ddgaa ,_dggdf =_aef .NewSimpleTextEncoder (_gfgcc ,_eaefa );if _dggdf !=nil {return _dggdf ;};};if _ddgaa ==nil {_abecc :=_abee ._bedag ;if _abecc !=nil {switch _abee ._fceb {case "\u0054\u0079\u0070e\u0031":if _abecc .fontFile !=nil &&_abecc .fontFile ._ggff !=nil {_ae .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_ddgaa =_abecc .fontFile ._ggff ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _abecc ._adfcc !=nil {_ae .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_geegd ,_eggge :=_abecc ._adfcc .MakeEncoder ();
if _eggge ==nil {_ddgaa =_geegd ;};};};};};if _ddgaa !=nil {if _eaefa !=nil {_ae .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_eaefa ,_abee .baseFields ());
_ddgaa =_aef .ApplyDifferences (_ddgaa ,_eaefa );};_abee .SetEncoder (_ddgaa );};return nil ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_cggfb *LTV )EnableByName (name string ,extraCerts []*_ff .Certificate )error {_ggegd :=_cggfb ._gefbg ._ddaff .AcroForm ;for _ ,_deaae :=range _ggegd .AllFields (){_ddgc ,_ :=_deaae .GetContext ().(*PdfFieldSignature );if _ddgc ==nil {continue ;
};if _gaed :=_ddgc .PartialName ();_gaed !=name {continue ;};return _cggfb .Enable (_ddgc .V ,extraCerts );};return nil ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_ggbcf *PdfPageResources )HasExtGState (keyName _cda .PdfObjectName )bool {_ ,_ebbab :=_ggbcf .GetFontByName (keyName );return _ebbab ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_gdbe *PdfReader )GetOutlines ()(*Outline ,error ){if _gdbe ==nil {return nil ,_ea .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_fcgece :=_gdbe .GetOutlineTree ();if _fcgece ==nil {return nil ,_ea .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _fefa func (_gdad *PdfOutlineTreeNode ,_ecfca *[]*OutlineItem );_fefa =func (_ebggg *PdfOutlineTreeNode ,_ageg *[]*OutlineItem ){if _ebggg ==nil {return ;};if _ebggg ._debg ==nil {_ae .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _bddg *OutlineItem ;if _ebbef ,_beabg :=_ebggg ._debg .(*PdfOutlineItem );_beabg {_dgeb :=_ebbef .Dest ;if (_dgeb ==nil ||_cda .IsNullObject (_dgeb ))&&_ebbef .A !=nil {if _bgcgb ,_eebdef :=_cda .GetDict (_ebbef .A );_eebdef {_dgeb ,_ =_cda .GetArray (_bgcgb .Get ("\u0044"));
};};var _cafcd OutlineDest ;if _dgeb !=nil &&!_cda .IsNullObject (_dgeb ){if _ebdb ,_gdaga :=_cafdb (_dgeb ,_gdbe );_gdaga ==nil {_cafcd =*_ebdb ;}else {_ae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_dgeb ,_gdaga );
};};_bddg =NewOutlineItem (_ebbef .Title .Decoded (),_cafcd );*_ageg =append (*_ageg ,_bddg );if _ebbef .Next !=nil {_fefa (_ebbef .Next ,_ageg );};};if _ebggg .First !=nil {if _bddg !=nil {_ageg =&_bddg .Entries ;};_fefa (_ebggg .First ,_ageg );};};_ffab :=NewOutline ();
_fefa (_fcgece ,&_ffab .Entries );return _ffab ,nil ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _cda .PdfObject ;Name _cda .PdfObject ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_affac *PdfReader )Decrypt (password []byte )(bool ,error ){_feefa ,_dagdb :=_affac ._gaedg .Decrypt (password );if _dagdb !=nil {return false ,_dagdb ;};if !_feefa {return false ,nil ;};_dagdb =_affac .loadStructure ();if _dagdb !=nil {_ae .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_dagdb );
return false ,_dagdb ;};return true ,nil ;};func (_gabd *PdfReader )newPdfAnnotationPopupFromDict (_cddgb *_cda .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_gabb :=PdfAnnotationPopup {};_gabb .Parent =_cddgb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_gabb .Open =_cddgb .Get ("\u004f\u0070\u0065\u006e");return &_gabb ,nil ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_cda .PdfObjectStream ;OCSP []*_cda .PdfObjectStream ;CRL []*_cda .PdfObjectStream ;TU *_cda .PdfObjectString ;TS *_cda .PdfObjectString ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_afafe *PdfPageResources )GetColorspaceByName (keyName _cda .PdfObjectName )(PdfColorspace ,bool ){_cdfba ,_fbdbd :=_afafe .GetColorspaces ();if _fbdbd !=nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_fbdbd );
return nil ,false ;};if _cdfba ==nil {return nil ,false ;};_fdfbf ,_dfddb :=_cdfba .Colorspaces [string (keyName )];if !_dfddb {return nil ,false ;};return _fdfbf ,true ;};

// AddCustomInfo adds a custom info into document info dictionary.
func (_bbdf *PdfInfo )AddCustomInfo (name string ,value string )error {if _bbdf ._adaa ==nil {_bbdf ._adaa =_cda .MakeDict ();};if _ ,_gfad :=_agbc [name ];_gfad {return _c .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_bbdf ._adaa .SetIfNotNil (*_cda .MakeName (name ),_cda .MakeString (value ));return nil ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _cda .PdfObject ;FS _cda .PdfObject ;F _cda .PdfObject ;UF _cda .PdfObject ;DOS _cda .PdfObject ;Mac _cda .PdfObject ;Unix _cda .PdfObject ;ID _cda .PdfObject ;V _cda .PdfObject ;EF _cda .PdfObject ;RF _cda .PdfObject ;Desc _cda .PdfObject ;
CI _cda .PdfObject ;_gfcf _cda .PdfObject ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_dcgbd *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_dcgbd ._ccbbf =colorspace ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_febcb *PdfColorspaceDeviceGray )ToPdfObject ()_cda .PdfObject {return _cda .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_aafcc .Lock ();defer _aafcc .Unlock ();_cecgf =producer };

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};func _cacf (_eeaa *_cda .PdfObjectDictionary )*VRI {_deef ,_ :=_cda .GetString (_eeaa .Get ("\u0054\u0055"));_ddaa ,_ :=_cda .GetString (_eeaa .Get ("\u0054\u0053"));return &VRI {Cert :_edebd (_eeaa .Get ("\u0043\u0065\u0072\u0074")),OCSP :_edebd (_eeaa .Get ("\u004f\u0043\u0053\u0050")),CRL :_edebd (_eeaa .Get ("\u0043\u0052\u004c")),TU :_deef ,TS :_ddaa };
};

// WriteToFile writes the Appender output to file specified by path.
func (_bfdd *PdfAppender )WriteToFile (outputPath string )error {_eea ,_gbac :=_eg .Create (outputPath );if _gbac !=nil {return _gbac ;};defer _eea .Close ();return _bfdd .Write (_eea );};func (_addd *PdfReader )newPdfAnnotationSquareFromDict (_bbac *_cda .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_fab :=PdfAnnotationSquare {};
_bad ,_fcbfc :=_addd .newPdfAnnotationMarkupFromDict (_bbac );if _fcbfc !=nil {return nil ,_fcbfc ;};_fab .PdfAnnotationMarkup =_bad ;_fab .BS =_bbac .Get ("\u0042\u0053");_fab .IC =_bbac .Get ("\u0049\u0043");_fab .BE =_bbac .Get ("\u0042\u0045");_fab .RD =_bbac .Get ("\u0052\u0044");
return &_fab ,nil ;};func _agdef (_edecg *PdfPage ){_aeggg :=_ffc .GetLicenseKey ();if _aeggg !=nil &&_aeggg .IsLicensed (){return ;};_facdcc :=_cda .PdfObjectName ("\u0055\u0046\u0031");if !_edecg .Resources .HasFontByName (_facdcc ){_edecg .Resources .SetFontByName (_facdcc ,DefaultFont ().ToPdfObject ());
};var _gbafb []string ;_gbafb =append (_gbafb ,"\u0071");_gbafb =append (_gbafb ,"\u0042\u0054");_gbafb =append (_gbafb ,_c .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_facdcc .String ()));_gbafb =append (_gbafb ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");
_gbafb =append (_gbafb ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_ddaaa :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_gbafb =append (_gbafb ,_c .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_ddaaa ));_gbafb =append (_gbafb ,"\u0045\u0054");_gbafb =append (_gbafb ,"\u0051");_gaage :=_bb .Join (_gbafb ,"\u000a");_edecg .AddContentStreamByString (_gaage );_edecg .ToPdfObject ();
};func (_gbd *PdfReader )newPdfActionRenditionFromDict (_dcbe *_cda .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_dcbe .Get ("\u0052"),AN :_dcbe .Get ("\u0041\u004e"),OP :_dcbe .Get ("\u004f\u0050"),JS :_dcbe .Get ("\u004a\u0053")},nil ;
};func (_bdgfa *pdfFontType3 )baseFields ()*fontCommon {return &_bdgfa .fontCommon };

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_fbbc *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _fbbc .Range };

// GetDescent returns the Descent of the font `descriptor`.
func (_cbacc *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _cda .GetNumberAsFloat (_cbacc .Descent );};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_agfgb :=appender .Reader .DSS ;if _agfgb ==nil {_agfgb =NewDSS ();};if _fafc :=_agfgb .generateHashMaps ();_fafc !=nil {return nil ,_fafc ;};return &LTV {CertClient :_bf .NewCertClient (),OCSPClient :_bf .NewOCSPClient (),CRLClient :_bf .NewCRLClient (),SkipExisting :true ,_gefbg :appender ,_bfddf :_agfgb },nil ;
};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_cda .PdfObjectArray ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_efcga FieldFlag )Has (fl FieldFlag )bool {return (_efcga .Mask ()&fl .Mask ())> 0};

// Write writes out the PDF.
func (_debfeg *PdfWriter )Write (writer _cd .Writer )error {_ae .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_bedgd :=_ffc .GetLicenseKey ();if (_bedgd ==nil ||!_bedgd .IsLicensed ())&&!_cgaaee {_c .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_c .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _ea .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _debfeg ._cadab !=nil {_ae .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_debfeg ._cadab );
_ccgg :=_debfeg ._cadab .ToPdfObject ();_ae .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_ccgg ,_ccgg ,_ccgg );_debfeg ._bgafe .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_ccgg );
_becff :=_debfeg .addObjects (_ccgg );if _becff !=nil {return _becff ;};};if _debfeg ._faebc !=nil {_ae .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_ffgca :=_debfeg ._faebc .ToPdfObject ();_ae .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_ffgca );
_debfeg ._bgafe .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_ffgca );_fdgabd :=_debfeg .addObjects (_ffgca );if _fdgabd !=nil {return _fdgabd ;};};for _cgfaf ,_faedg :=range _debfeg ._caada {if !_debfeg .hasObject (_cgfaf ){_ae .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_cgfaf ,_cgfaf ,_cgfaf );
for _ ,_abdde :=range _faedg {for _ ,_aafcd :=range _abdde .Keys (){_gfegd :=_abdde .Get (_aafcd );if _gfegd ==_cgfaf {_ae .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_abdde .Set (_aafcd ,_cda .MakeNull ());break ;};};};};};_debfeg ._bgafe .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_cda .MakeName (_c .Sprintf ("\u0025\u0064\u002e%\u0064",_debfeg ._bgce ,_debfeg ._agfdf )));_debfeg .copyObjects ();if _debfeg ._bdcf !=nil {var _aecec error ;
_debfeg ._gbffa ,_aecec =_debfeg ._bdcf .Optimize (_debfeg ._gbffa );if _aecec !=nil {return _aecec ;};_dgfeb :=make (map[_cda .PdfObject ]struct{},len (_debfeg ._gbffa ));for _ ,_gcfgf :=range _debfeg ._gbffa {_dgfeb [_gcfgf ]=struct{}{};};_debfeg ._ffbg =_dgfeb ;
};_debfeg ._gdbec =_debfeg ._ddbga ;_debfeg ._abgca =_b .NewWriter (writer );_fcbdc :=_debfeg ._bgce > 1||(_debfeg ._bgce ==1&&_debfeg ._agfdf > 4);if _debfeg ._bafcgd !=nil {_fcbdc =*_debfeg ._bafcgd ;};_bafeb :=make (map[_cda .PdfObject ]bool );for _ ,_ddddc :=range _debfeg ._gbffa {if _bccef ,_cceea :=_ddddc .(*_cda .PdfObjectStreams );
_cceea {_fcbdc =true ;for _ ,_fffag :=range _bccef .Elements (){_bafeb [_fffag ]=true ;if _dgbfg ,_cebaa :=_fffag .(*_cda .PdfIndirectObject );_cebaa {_bafeb [_dgbfg .PdfObject ]=true ;};};};};if _fcbdc &&_debfeg ._bgce ==1&&_debfeg ._agfdf < 5{_debfeg ._agfdf =5;
};if _debfeg ._dddcb {_debfeg .writeString ("\u000a");}else {_debfeg .writeString (_c .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_debfeg ._bgce ,_debfeg ._agfdf ));_debfeg .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");
};_debfeg .updateObjectNumbers ();_ae .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_debfeg ._gbffa ));_debfeg ._aaddc =make (map[int ]crossReference );_debfeg ._aaddc [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};
if _debfeg ._baedc .ObjectMap !=nil {for _cebgc ,_fcag :=range _debfeg ._baedc .ObjectMap {if _cebgc ==0{continue ;};if _fcag .XType ==_cda .XrefTypeObjectStream {_aaabg :=crossReference {Type :2,ObjectNumber :_fcag .OsObjNumber ,Index :_fcag .OsObjIndex };
_debfeg ._aaddc [_cebgc ]=_aaabg ;};if _fcag .XType ==_cda .XrefTypeTableEntry {_ebfa :=crossReference {Type :1,ObjectNumber :_fcag .ObjectNumber ,Offset :_fcag .Offset };_debfeg ._aaddc [_cebgc ]=_ebfa ;};};};for _ ,_adaee :=range _debfeg ._gbffa {if _cddeg :=_bafeb [_adaee ];
_cddeg {continue ;};_bacfe :=int64 (0);switch _egfg :=_adaee .(type ){case *_cda .PdfIndirectObject :_bacfe =_egfg .ObjectNumber ;case *_cda .PdfObjectStream :_bacfe =_egfg .ObjectNumber ;case *_cda .PdfObjectStreams :_bacfe =_egfg .ObjectNumber ;default:_ae .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_adaee );
return ErrTypeCheck ;};if _debfeg ._babdb !=nil &&_adaee !=_debfeg ._dbcfe {_egaff :=_debfeg ._babdb .Encrypt (_adaee ,_bacfe ,0);if _egaff !=nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_egaff );
return _egaff ;};};_debfeg .writeObject (int (_bacfe ),_adaee );};_fdcde :=_debfeg ._gdbec ;var _fadea int ;for _edgcb :=range _debfeg ._aaddc {if _edgcb > _fadea {_fadea =_edgcb ;};};if _fcbdc {_eeacd :=_fadea +1;_debfeg ._aaddc [_eeacd ]=crossReference {Type :1,ObjectNumber :_eeacd ,Offset :_fdcde };
_cccea :=_dc .NewBuffer (nil );_agdf :=_cda .MakeArray ();for _aaaa :=0;_aaaa <=_fadea ;{for ;_aaaa <=_fadea ;_aaaa ++{_efbae ,_gfgdf :=_debfeg ._aaddc [_aaaa ];if _gfgdf &&(!_debfeg ._dddcb ||_debfeg ._dddcb &&(_efbae .Type ==1&&_efbae .Offset >=_debfeg ._ecbed ||_efbae .Type ==0)){break ;
};};var _ggfdc int ;for _ggfdc =_aaaa +1;_ggfdc <=_fadea ;_ggfdc ++{_eegbd ,_bbca :=_debfeg ._aaddc [_ggfdc ];if _bbca &&(!_debfeg ._dddcb ||_debfeg ._dddcb &&(_eegbd .Type ==1&&_eegbd .Offset > _debfeg ._ecbed )){continue ;};break ;};_agdf .Append (_cda .MakeInteger (int64 (_aaaa )),_cda .MakeInteger (int64 (_ggfdc -_aaaa )));
for _dcfcd :=_aaaa ;_dcfcd < _ggfdc ;_dcfcd ++{_gedag :=_debfeg ._aaddc [_dcfcd ];switch _gedag .Type {case 0:_bc .Write (_cccea ,_bc .BigEndian ,byte (0));_bc .Write (_cccea ,_bc .BigEndian ,uint32 (0));_bc .Write (_cccea ,_bc .BigEndian ,uint16 (0xFFFF));
case 1:_bc .Write (_cccea ,_bc .BigEndian ,byte (1));_bc .Write (_cccea ,_bc .BigEndian ,uint32 (_gedag .Offset ));_bc .Write (_cccea ,_bc .BigEndian ,uint16 (_gedag .Generation ));case 2:_bc .Write (_cccea ,_bc .BigEndian ,byte (2));_bc .Write (_cccea ,_bc .BigEndian ,uint32 (_gedag .ObjectNumber ));
_bc .Write (_cccea ,_bc .BigEndian ,uint16 (_gedag .Index ));};};_aaaa =_ggfdc +1;};_bedec ,_affeaf :=_cda .MakeStream (_cccea .Bytes (),_cda .NewFlateEncoder ());if _affeaf !=nil {return _affeaf ;};_bedec .ObjectNumber =int64 (_eeacd );_bedec .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_cda .MakeName ("\u0058\u0052\u0065\u0066"));
_bedec .PdfObjectDictionary .Set ("\u0057",_cda .MakeArray (_cda .MakeInteger (1),_cda .MakeInteger (4),_cda .MakeInteger (2)));_bedec .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_agdf );_bedec .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_cda .MakeInteger (int64 (_eeacd +1)));
_bedec .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_debfeg ._acdadd );_bedec .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_debfeg ._cddbe );if _debfeg ._dddcb &&_debfeg ._ggdad > 0{_bedec .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_cda .MakeInteger (_debfeg ._ggdad ));
};if _debfeg ._babdb !=nil {_bedec .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_debfeg ._dbcfe );_bedec .Set ("\u0049\u0044",_debfeg ._dbfde );_ae .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_debfeg ._dbfde );};_debfeg .writeObject (int (_bedec .ObjectNumber ),_bedec );
}else {_debfeg .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _beabe :=0;_beabe <=_fadea ;{for ;_beabe <=_fadea ;_beabe ++{_gdcf ,_gedb :=_debfeg ._aaddc [_beabe ];if _gedb &&(!_debfeg ._dddcb ||_debfeg ._dddcb &&(_gdcf .Type ==1&&_gdcf .Offset >=_debfeg ._ecbed ||_gdcf .Type ==0)){break ;
};};var _geegb int ;for _geegb =_beabe +1;_geegb <=_fadea ;_geegb ++{_dege ,_dfbfg :=_debfeg ._aaddc [_geegb ];if _dfbfg &&(!_debfeg ._dddcb ||_debfeg ._dddcb &&(_dege .Type ==1&&_dege .Offset > _debfeg ._ecbed )){continue ;};break ;};_ebege :=_c .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_beabe ,_geegb -_beabe );
_debfeg .writeString (_ebege );for _dcbef :=_beabe ;_dcbef < _geegb ;_dcbef ++{_fgddf :=_debfeg ._aaddc [_dcbef ];switch _fgddf .Type {case 0:_ebege =_c .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_debfeg .writeString (_ebege );case 1:_ebege =_c .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_fgddf .Offset ,0);_debfeg .writeString (_ebege );};};_beabe =_geegb +1;};_acfdgb :=_cda .MakeDict ();_acfdgb .Set ("\u0049\u006e\u0066\u006f",_debfeg ._acdadd );
_acfdgb .Set ("\u0052\u006f\u006f\u0074",_debfeg ._cddbe );_acfdgb .Set ("\u0053\u0069\u007a\u0065",_cda .MakeInteger (int64 (_fadea +1)));if _debfeg ._dddcb &&_debfeg ._ggdad > 0{_acfdgb .Set ("\u0050\u0072\u0065\u0076",_cda .MakeInteger (_debfeg ._ggdad ));
};if _debfeg ._babdb !=nil {_acfdgb .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_debfeg ._dbcfe );_acfdgb .Set ("\u0049\u0044",_debfeg ._dbfde );_ae .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_debfeg ._dbfde );};_debfeg .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");
_debfeg .writeString (_acfdgb .WriteString ());_debfeg .writeString ("\u000a");};_gffb :=_c .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_fdcde );_debfeg .writeString (_gffb );_debfeg .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");
if _debfeg ._dgef ==nil {_debfeg ._dgef =_debfeg ._abgca .Flush ();};return _debfeg ._dgef ;};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_fdabg *PdfReader )GetIndirectObjectByNumber (number int )(_cda .PdfObject ,error ){_bgec ,_becga :=_fdabg ._gaedg .LookupByNumber (number );return _bgec ,_becga ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_cabgd :_cda .MakeIndirectObject (_cda .MakeDict ()),VRI :map[string ]*VRI {}};};

// ToPdfObject returns a PDF object representation of the outline item.
func (_dfbgb *OutlineItem )ToPdfObject ()_cda .PdfObject {_cfdge ,_ :=_dfbgb .ToPdfOutlineItem ();return _cfdge .ToPdfObject ();};

// ToInteger convert to an integer format.
func (_fbdff *PdfColorCalGray )ToInteger (bits int )uint32 {_dgfff :=_ba .Pow (2,float64 (bits ))-1;return uint32 (_dgfff *_fbdff .Val ());};

// ToPdfObject implements interface PdfModel.
func (_cga *PdfAnnotationText )ToPdfObject ()_cda .PdfObject {_cga .PdfAnnotation .ToPdfObject ();_eba :=_cga ._afd ;_cfa :=_eba .PdfObject .(*_cda .PdfObjectDictionary );if _cga .PdfAnnotationMarkup !=nil {_cga .PdfAnnotationMarkup .appendToPdfDictionary (_cfa );
};_cfa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0054\u0065\u0078\u0074"));_cfa .SetIfNotNil ("\u004f\u0070\u0065\u006e",_cga .Open );_cfa .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cga .Name );_cfa .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_cga .State );
_cfa .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_cga .StateModel );return _eba ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_eafff *_cda .PdfIndirectObject ;};

// GetContainingPdfObject implements interface PdfModel.
func (_cb *PdfAction )GetContainingPdfObject ()_cda .PdfObject {return _cb ._dcg };

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_ecgdb :=&PdfOutlineItem {_cggef :_cda .MakeIndirectObject (_cda .MakeDict ())};_ecgdb ._debg =_ecgdb ;return _ecgdb ;};func _affd (_abda _cda .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_cefdc :=NewPdfColorspaceSpecialSeparation ();
if _cacbd ,_dagd :=_abda .(*_cda .PdfIndirectObject );_dagd {_cefdc ._feda =_cacbd ;};_abda =_cda .TraceToDirectObject (_abda );_dbacc ,_begfg :=_abda .(*_cda .PdfObjectArray );if !_begfg {return nil ,_c .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _dbacc .Len ()!=4{return nil ,_c .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_abda =_dbacc .Get (0);
_eabaf ,_begfg :=_abda .(*_cda .PdfObjectName );if !_begfg {return nil ,_c .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_eabaf !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_c .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_abda =_dbacc .Get (1);_eabaf ,_begfg =_abda .(*_cda .PdfObjectName );if !_begfg {return nil ,_c .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_cefdc .ColorantName =_eabaf ;_abda =_dbacc .Get (2);_cbgea ,_ccfg :=NewPdfColorspaceFromPdfObject (_abda );if _ccfg !=nil {return nil ,_ccfg ;};_cefdc .AlternateSpace =_cbgea ;_agfa ,_ccfg :=_facff (_dbacc .Get (3));if _ccfg !=nil {return nil ,_ccfg ;
};_cefdc .TintTransform =_agfa ;return _cefdc ,nil ;};func _eegc (_acb _cda .PdfObject )(*PdfColorspaceCalRGB ,error ){_bfef :=NewPdfColorspaceCalRGB ();if _adda ,_cade :=_acb .(*_cda .PdfIndirectObject );_cade {_bfef ._dfcee =_adda ;};_acb =_cda .TraceToDirectObject (_acb );
_egaf ,_eafgfe :=_acb .(*_cda .PdfObjectArray );if !_eafgfe {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _egaf .Len ()!=2{return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_acb =_cda .TraceToDirectObject (_egaf .Get (0));_bfb ,_eafgfe :=_acb .(*_cda .PdfObjectName );if !_eafgfe {return nil ,_c .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_bfb !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_c .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_acb =_cda .TraceToDirectObject (_egaf .Get (1));
_gbde ,_eafgfe :=_acb .(*_cda .PdfObjectDictionary );if !_eafgfe {return nil ,_c .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};_acb =_gbde .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_acb =_cda .TraceToDirectObject (_acb );_fbca ,_eafgfe :=_acb .(*_cda .PdfObjectArray );if !_eafgfe {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _fbca .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_ggcc ,_cddb :=_fbca .GetAsFloat64Slice ();
if _cddb !=nil {return nil ,_cddb ;};_bfef .WhitePoint =_ggcc ;_acb =_gbde .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _acb !=nil {_acb =_cda .TraceToDirectObject (_acb );_eedfa ,_ecbc :=_acb .(*_cda .PdfObjectArray );if !_ecbc {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");
};if _eedfa .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_bbda ,_affea :=_eedfa .GetAsFloat64Slice ();
if _affea !=nil {return nil ,_affea ;};_bfef .BlackPoint =_bbda ;};_acb =_gbde .Get ("\u0047\u0061\u006dm\u0061");if _acb !=nil {_acb =_cda .TraceToDirectObject (_acb );_febe ,_aacc :=_acb .(*_cda .PdfObjectArray );if !_aacc {return nil ,_c .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");
};if _febe .Len ()!=3{return nil ,_c .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_baea ,_edfdb :=_febe .GetAsFloat64Slice ();if _edfdb !=nil {return nil ,_edfdb ;
};_bfef .Gamma =_baea ;};_acb =_gbde .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _acb !=nil {_acb =_cda .TraceToDirectObject (_acb );_aafc ,_fdbg :=_acb .(*_cda .PdfObjectArray );if !_fdbg {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");
};if _aafc .Len ()!=9{_ae .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_aafc .String ());return nil ,_c .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");
};_debf ,_dbge :=_aafc .GetAsFloat64Slice ();if _dbge !=nil {return nil ,_dbge ;};_bfef .Matrix =_debf ;};return _bfef ,nil ;};

// Val returns the value of the color.
func (_ecad *PdfColorCalGray )Val ()float64 {return float64 (*_ecad )};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_ecfc *PdfAcroForm )ToPdfObject ()_cda .PdfObject {_ebgf :=_ecfc ._eada ;_gbgeg :=_ebgf .PdfObject .(*_cda .PdfObjectDictionary );if _ecfc .Fields !=nil {_afce :=_cda .PdfObjectArray {};for _ ,_dbdca :=range *_ecfc .Fields {_bgfc :=_dbdca .GetContext ();
if _bgfc !=nil {_afce .Append (_bgfc .ToPdfObject ());}else {_afce .Append (_dbdca .ToPdfObject ());};};_gbgeg .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_afce );};if _ecfc .NeedAppearances !=nil {_gbgeg .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_ecfc .NeedAppearances );
};if _ecfc .SigFlags !=nil {_gbgeg .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_ecfc .SigFlags );};if _ecfc .CO !=nil {_gbgeg .Set ("\u0043\u004f",_ecfc .CO );};if _ecfc .DR !=nil {_gbgeg .Set ("\u0044\u0052",_ecfc .DR .ToPdfObject ());};if _ecfc .DA !=nil {_gbgeg .Set ("\u0044\u0041",_ecfc .DA );
};if _ecfc .Q !=nil {_gbgeg .Set ("\u0051",_ecfc .Q );};if _ecfc .XFA !=nil {_gbgeg .Set ("\u0058\u0046\u0041",_ecfc .XFA );};return _ebgf ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_bbeef *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _bgafa []*PdfField ;_aeea :=map[*_cda .PdfIndirectObject ]struct{}{};for _ ,_fffe :=range _bbeef .PageList {_fdfcf ,_gccd :=_fffe .GetAnnotations ();if _gccd !=nil {return _gccd ;
};for _ ,_adeb :=range _fdfcf {var _dgced *PdfField ;switch _beafa :=_adeb .GetContext ().(type ){case *PdfAnnotationWidget :if _beafa ._cba !=nil {_dgced =_beafa ._cba ;break ;};if _dagab ,_gaaee :=_cda .GetIndirect (_beafa .Parent );_gaaee {_dgced ,_gccd =_bbeef .newPdfFieldFromIndirectObject (_dagab ,nil );
if _gccd ==nil {break ;};_ae .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_dagab ,_gccd );
};if _beafa ._afd !=nil {_dgced ,_gccd =_bbeef .newPdfFieldFromIndirectObject (_beafa ._afd ,nil );if _gccd ==nil {break ;};_ae .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_beafa ._afd ,_gccd );
};};if _dgced ==nil {continue ;};if _ ,_ffbec :=_aeea [_dgced ._geab ];_ffbec {continue ;};_aeea [_dgced ._geab ]=struct{}{};_bgafa =append (_bgafa ,_dgced );};};if len (_bgafa )==0{return nil ;};if _bbeef .AcroForm ==nil {_bbeef .AcroForm =NewPdfAcroForm ();
};_bbeef .AcroForm .Fields =&_bgafa ;return nil ;};func _dggc (_affdc *_cda .PdfObjectDictionary )bool {for _ ,_bgea :=range _affdc .Keys (){if _ ,_fdgc :=_ffgfe [_bgea .String ()];_fdgc {return true ;};};return false ;};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_agfd :=PdfColorCalRGB {a ,b ,c };return &_agfd ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_dabea *PdfAcroForm ,_agbg *PdfField ,_bgagd *PdfAnnotationWidget )(*_cda .PdfObjectDictionary ,error );};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _cda .PdfObject ;Name _cda .PdfObject ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_eegb *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_dccff *PdfFont )ToPdfObject ()_cda .PdfObject {if _dccff ._aecg ==nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _cda .MakeNull ();
};return _dccff ._aecg .ToPdfObject ();};

// Items returns all children outline items.
func (_dgbe *OutlineItem )Items ()[]*OutlineItem {return _dgbe .Entries };

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_dcge :=NewPdfAnnotation ();_fbed :=&PdfAnnotationStamp {};_fbed .PdfAnnotation =_dcge ;_fbed .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dcge .SetContext (_fbed );return _fbed ;};func (_bffb *PdfReader )newPdfAnnotationTextFromDict (_dac *_cda .PdfObjectDictionary )(*PdfAnnotationText ,error ){_gda :=PdfAnnotationText {};
_gdff ,_beb :=_bffb .newPdfAnnotationMarkupFromDict (_dac );if _beb !=nil {return nil ,_beb ;};_gda .PdfAnnotationMarkup =_gdff ;_gda .Open =_dac .Get ("\u004f\u0070\u0065\u006e");_gda .Name =_dac .Get ("\u004e\u0061\u006d\u0065");_gda .State =_dac .Get ("\u0053\u0074\u0061t\u0065");
_gda .StateModel =_dac .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_gda ,nil ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_dccf *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _dccf .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_dabd *pdfCIDFontType2 )ToPdfObject ()_cda .PdfObject {if _dabd ._bfdcf ==nil {_dabd ._bfdcf =&_cda .PdfIndirectObject {};};_cdbc :=_dabd .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_dabd ._bfdcf .PdfObject =_cdbc ;if _dabd .CIDSystemInfo !=nil {_cdbc .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_dabd .CIDSystemInfo );};if _dabd .DW !=nil {_cdbc .Set ("\u0044\u0057",_dabd .DW );};if _dabd .DW2 !=nil {_cdbc .Set ("\u0044\u0057\u0032",_dabd .DW2 );
};if _dabd .W !=nil {_cdbc .Set ("\u0057",_dabd .W );};if _dabd .W2 !=nil {_cdbc .Set ("\u0057\u0032",_dabd .W2 );};if _dabd .CIDToGIDMap !=nil {_cdbc .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_dabd .CIDToGIDMap );};return _dabd ._bfdcf ;
};type pdfFontSimple struct{fontCommon ;_bdeg *_cda .PdfIndirectObject ;_fbgce map[_aef .CharCode ]float64 ;_dcag _aef .TextEncoder ;_afee _aef .TextEncoder ;_ebef *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _cda .PdfObject ;LastChar _cda .PdfObject ;Widths _cda .PdfObject ;Encoding _cda .PdfObject ;_aefg *_fd .RuneCharSafeMap ;};func (_bcc *PdfAppender )mergeResources (_bgeb ,_debe _cda .PdfObject ,_fcgee map[_cda .PdfObjectName ]_cda .PdfObjectName )_cda .PdfObject {if _debe ==nil &&_bgeb ==nil {return nil ;
};if _debe ==nil {return _bgeb ;};_fdgf ,_aebag :=_cda .GetDict (_debe );if !_aebag {return _bgeb ;};if _bgeb ==nil {_faee :=_cda .MakeDict ();_faee .Merge (_fdgf );return _debe ;};_fgdb ,_aebag :=_cda .GetDict (_bgeb );if !_aebag {_ae .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_fgdb =_cda .MakeDict ();};for _ ,_bdbc :=range _fdgf .Keys (){if _dcdd ,_ebg :=_fcgee [_bdbc ];_ebg {_fgdb .Set (_dcdd ,_fdgf .Get (_bdbc ));}else {_fgdb .Set (_bdbc ,_fdgf .Get (_bdbc ));};};return _fgdb ;};func _dcca (_degc _cda .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_afebg :=NewPdfColorspaceSpecialIndexed ();
if _bdgbf ,_dabb :=_degc .(*_cda .PdfIndirectObject );_dabb {_afebg ._edcb =_bdgbf ;};_degc =_cda .TraceToDirectObject (_degc );_ffde ,_gggaf :=_degc .(*_cda .PdfObjectArray );if !_gggaf {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _ffde .Len ()!=4{return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_degc =_ffde .Get (0);
_baeae ,_gggaf :=_degc .(*_cda .PdfObjectName );if !_gggaf {return nil ,_c .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_baeae !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_degc =_ffde .Get (1);_fgad ,_debc :=DetermineColorspaceNameFromPdfObject (_degc );if _debc !=nil {return nil ,_debc ;};if _fgad =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_fgad =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ae .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_fgad );
return nil ,_fbac ;};_cdae ,_debc :=NewPdfColorspaceFromPdfObject (_degc );if _debc !=nil {return nil ,_debc ;};_afebg .Base =_cdae ;_degc =_ffde .Get (2);_ccbdb ,_debc :=_cda .GetNumberAsInt64 (_degc );if _debc !=nil {return nil ,_debc ;};if _ccbdb > 255{return nil ,_c .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_afebg .HiVal =int (_ccbdb );_degc =_ffde .Get (3);_afebg .Lookup =_degc ;_degc =_cda .TraceToDirectObject (_degc );var _afffg []byte ;if _gcaeb ,_edgf :=_degc .(*_cda .PdfObjectString );_edgf {_afffg =_gcaeb .Bytes ();_ae .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_afffg );
}else if _bcg ,_bdec :=_degc .(*_cda .PdfObjectStream );_bdec {_ae .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_degc .String ());_ae .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_bcg .Stream ),_bcg .Stream );
_ccbc ,_dgd :=_cda .DecodeStream (_bcg );if _dgd !=nil {return nil ,_dgd ;};_ae .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_ccbc ),_ccbc );_afffg =_ccbc ;}else {_ae .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_degc );
return nil ,_c .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_afffg )< _afebg .Base .GetNumComponents ()*(_afebg .HiVal +1){_ae .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_ae .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_afffg ),_afebg .Base .GetNumComponents (),_afebg .HiVal );
}else {_afffg =_afffg [:_afebg .Base .GetNumComponents ()*(_afebg .HiVal +1)];};_afebg ._ccfec =_afffg ;return _afebg ,nil ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_cgdbb int64 ;_ceac int64 ;_ffbfc int64 ;_becdf int64 ;_acbge int64 ;_ddae int64 ;_dcgeg byte ;_aeae int64 ;_egeca int64 ;};func (_egda *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";
};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_cag :=NewPdfAnnotation ();_gec :=&PdfAnnotationRedact {};_gec .PdfAnnotation =_cag ;_gec .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cag .SetContext (_gec );return _gec ;};func (_cddef *PdfWriter )updateObjectNumbers (){_fddbdb :=_cddef .ObjNumOffset ;
_defbc :=0;for _ ,_eacde :=range _cddef ._gbffa {_cagba :=int64 (_defbc +1+_fddbdb );_dcbfg :=true ;if _cddef ._dddcb {if _ccegd ,_eggbb :=_cddef ._cedcb [_eacde ];_eggbb {_cagba =_ccegd ;_dcbfg =false ;};};switch _bfcba :=_eacde .(type ){case *_cda .PdfIndirectObject :_bfcba .ObjectNumber =_cagba ;
_bfcba .GenerationNumber =0;case *_cda .PdfObjectStream :_bfcba .ObjectNumber =_cagba ;_bfcba .GenerationNumber =0;case *_cda .PdfObjectStreams :_bfcba .ObjectNumber =_cagba ;_bfcba .GenerationNumber =0;default:_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_bfcba );
continue ;};if _dcbfg {_defbc ++;};};_ccfca :=func (_abaede _cda .PdfObject )int64 {switch _fcfgc :=_abaede .(type ){case *_cda .PdfIndirectObject :return _fcfgc .ObjectNumber ;case *_cda .PdfObjectStream :return _fcfgc .ObjectNumber ;case *_cda .PdfObjectStreams :return _fcfgc .ObjectNumber ;
};return 0;};_df .SliceStable (_cddef ._gbffa ,func (_dcfc ,_ebdbb int )bool {return _ccfca (_cddef ._gbffa [_dcfc ])< _ccfca (_cddef ._gbffa [_ebdbb ])});};func (_gcgc *PdfReader )newPdfActionURIFromDict (_dffc *_cda .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_dffc .Get ("\u0055\u0052\u0049"),IsMap :_dffc .Get ("\u0049\u0073\u004da\u0070")},nil ;
};func (_bfbf *DSS )addCRLs (_eacc [][]byte )([]*_cda .PdfObjectStream ,error ){return _bfbf .add (&_bfbf .CRLs ,_bfbf ._gceb ,_eacc );};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_gafd PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_cda .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_aebd []_cda .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_adgb []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// WriteToFile writes the output PDF to file.
func (_cccda *PdfWriter )WriteToFile (outputFilePath string )error {_cbgcc ,_cecaf :=_eg .Create (outputFilePath );if _cecaf !=nil {return _cecaf ;};defer _cbgcc .Close ();return _cccda .Write (_cbgcc );};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_aggbbg *XObjectImage )GetContainingPdfObject ()_cda .PdfObject {return _aggbbg ._dbdfb };

// GetBorderWidth returns the border style's width.
func (_afaf *PdfBorderStyle )GetBorderWidth ()float64 {if _afaf .W ==nil {return 1;};return *_afaf .W ;};func (_gdaef fontCommon )asPdfObjectDictionary (_agdba string )*_cda .PdfObjectDictionary {if _agdba !=""&&_gdaef ._fceb !=""&&_agdba !=_gdaef ._fceb {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_agdba ,_gdaef );
}else if _agdba ==""&&_gdaef ._fceb ==""{_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_gdaef );
}else if _gdaef ._fceb ==""{_gdaef ._fceb =_agdba ;};_acefcg :=_cda .MakeDict ();_acefcg .Set ("\u0054\u0079\u0070\u0065",_cda .MakeName ("\u0046\u006f\u006e\u0074"));_acefcg .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_cda .MakeName (_gdaef ._gedd ));
_acefcg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName (_gdaef ._fceb ));if _gdaef ._bedag !=nil {_acefcg .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_gdaef ._bedag .ToPdfObject ());};if _gdaef ._fbee !=nil {_acefcg .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_gdaef ._fbee );
}else if _gdaef ._bfdgd !=nil {_deece ,_fcee :=_gdaef ._bfdgd .Stream ();if _fcee !=nil {_ae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_fcee );
}else {_acefcg .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_deece );};};return _acefcg ;};

// ToPdfObject implements interface PdfModel.
func (_fcge *PdfAnnotationPopup )ToPdfObject ()_cda .PdfObject {_fcge .PdfAnnotation .ToPdfObject ();_caadb :=_fcge ._afd ;_ebbg :=_caadb .PdfObject .(*_cda .PdfObjectDictionary );_ebbg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0050\u006f\u0070u\u0070"));
_ebbg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fcge .Parent );_ebbg .SetIfNotNil ("\u004f\u0070\u0065\u006e",_fcge .Open );return _caadb ;};func (_dcegg *Image )samplesTrimPadding (_cdfd []uint32 )[]uint32 {_cabba :=_dcegg .ColorComponents *int (_dcegg .Width )*int (_dcegg .Height );
if len (_cdfd )==_cabba {return _cdfd ;};_gadgg :=make ([]uint32 ,_cabba );_agffd :=int (_dcegg .Width )*_dcegg .ColorComponents ;var _abefe ,_ddcgb ,_dfcfa ,_bfegg int ;_defe :=_eee .BytesPerLine (int (_dcegg .Width ),int (_dcegg .BitsPerComponent ),_dcegg .ColorComponents );
for _abefe =0;_abefe < int (_dcegg .Height );_abefe ++{_ddcgb =_abefe *int (_dcegg .Width );_dfcfa =_abefe *_defe ;for _bfegg =0;_bfegg < _agffd ;_bfegg ++{_gadgg [_ddcgb +_bfegg ]=_cdfd [_dfcfa +_bfegg ];};};return _gadgg ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_cdd :=NewPdfAction ();_ccf :=&PdfActionGoToE {};_ccf .PdfAction =_cdd ;_cdd .SetContext (_ccf );return _ccf ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_cefe *PdfFont )GetCharMetrics (code _aef .CharCode )(CharMetrics ,bool ){var _aafab _fd .CharMetrics ;switch _ccfa :=_cefe ._aecg .(type ){case *pdfFontSimple :if _dgdad ,_abgcd :=_ccfa .GetCharMetrics (code );_abgcd {return _dgdad ,_abgcd ;};case *pdfFontType0 :if _bbcf ,_fbacb :=_ccfa .GetCharMetrics (code );
_fbacb {return _bbcf ,_fbacb ;};case *pdfCIDFontType0 :if _cbae ,_aedd :=_ccfa .GetCharMetrics (code );_aedd {return _cbae ,_aedd ;};case *pdfCIDFontType2 :if _gaced ,_fdfff :=_ccfa .GetCharMetrics (code );_fdfff {return _gaced ,_fdfff ;};case *pdfFontType3 :if _bebgb ,_agae :=_ccfa .GetCharMetrics (code );
_agae {return _bebgb ,_agae ;};default:_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_cefe ._aecg );
return _aafab ,false ;};if _feccg ,_afad :=_cefe .GetFontDescriptor ();_afad ==nil &&_feccg !=nil {return _fd .CharMetrics {Wx :_feccg ._gaacd },true ;};_ae .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_cefe );
return _aafab ,false ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_fbgc *PdfFont )CharcodesToUnicodeWithStats (charcodes []_aef .CharCode )(_gffd []rune ,_gabbb ,_bacb int ){_eeebf ,_gabbb ,_bacb :=_fbgc .CharcodesToStrings (charcodes );return []rune (_bb .Join (_eeebf ,"")),_gabbb ,_bacb ;};

// K returns the value of the key component of the color.
func (_bdca *PdfColorDeviceCMYK )K ()float64 {return _bdca [3]};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_aced *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_cgf :=NewPdfAnnotation ();_ceca :=&PdfAnnotationScreen {};_ceca .PdfAnnotation =_cgf ;_cgf .SetContext (_ceca );return _ceca ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_gaedg *_cda .PdfParser ;_gcfed _cda .PdfObject ;_caceb *_cda .PdfIndirectObject ;_gdeg *_cda .PdfObjectDictionary ;_gbdee []*_cda .PdfIndirectObject ;PageList []*PdfPage ;_dddd int ;_ggef *_cda .PdfObjectDictionary ;_gdaed *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_bbgffg *modelManager ;_fdgef bool ;_abffb map[_cda .PdfObject ]struct{};_dgbee _cd .ReadSeeker ;_aaddf string ;};var _ _cda .PdfObject =&pdfSignDictionary {};

// ToPdfObject returns the PDF representation of the function.
func (_edag *PdfFunctionType0 )ToPdfObject ()_cda .PdfObject {if _edag ._bfeee ==nil {_edag ._bfeee =&_cda .PdfObjectStream {};};_ccbcf :=_cda .MakeDict ();_ccbcf .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cda .MakeInteger (0));
_fged :=&_cda .PdfObjectArray {};for _ ,_bgbf :=range _edag .Domain {_fged .Append (_cda .MakeFloat (_bgbf ));};_ccbcf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fged );_ecfa :=&_cda .PdfObjectArray {};for _ ,_gdcgf :=range _edag .Range {_ecfa .Append (_cda .MakeFloat (_gdcgf ));
};_ccbcf .Set ("\u0052\u0061\u006eg\u0065",_ecfa );_ddgag :=&_cda .PdfObjectArray {};for _ ,_gfeg :=range _edag .Size {_ddgag .Append (_cda .MakeInteger (int64 (_gfeg )));};_ccbcf .Set ("\u0053\u0069\u007a\u0065",_ddgag );_ccbcf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_cda .MakeInteger (int64 (_edag .BitsPerSample )));
if _edag .Order !=1{_ccbcf .Set ("\u004f\u0072\u0064e\u0072",_cda .MakeInteger (int64 (_edag .Order )));};_ccbcf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cda .MakeInteger (int64 (len (_edag ._gabbf ))));_edag ._bfeee .Stream =_edag ._gabbf ;_edag ._bfeee .PdfObjectDictionary =_ccbcf ;
return _edag ._bfeee ;};func _agedc (_bada []byte )([]byte ,error ){_cggdgd :=_gg .New ();if _ ,_egea :=_cd .Copy (_cggdgd ,_dc .NewReader (_bada ));_egea !=nil {return nil ,_egea ;};return _cggdgd .Sum (nil ),nil ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_gbgg *PdfColorspaceLab )DecodeArray ()[]float64 {_bcbc :=[]float64 {0,100};if _gbgg .Range !=nil &&len (_gbgg .Range )==4{_bcbc =append (_bcbc ,_gbgg .Range ...);}else {_bcbc =append (_bcbc ,-100,100,-100,100);};return _bcbc ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dgbce *PdfColorspaceSpecialPattern )ToPdfObject ()_cda .PdfObject {if _dgbce .UnderlyingCS ==nil {return _cda .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_gdbgb :=_cda .MakeArray (_cda .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));
_gdbgb .Append (_dgbce .UnderlyingCS .ToPdfObject ());if _dgbce ._aeee !=nil {_dgbce ._aeee .PdfObject =_gdbgb ;return _dgbce ._aeee ;};return _gdbgb ;};func (_ffcaf *pdfFontType0 )bytesToCharcodes (_fdge []byte )([]_aef .CharCode ,bool ){if _ffcaf ._feba ==nil {return nil ,false ;
};_fgaa ,_dgaa :=_ffcaf ._feba .BytesToCharcodes (_fdge );if !_dgaa {return nil ,false ;};_dagda :=make ([]_aef .CharCode ,len (_fgaa ));for _egdfe ,_abdd :=range _fgaa {_dagda [_egdfe ]=_aef .CharCode (_abdd );};return _dagda ,true ;};func _efgbc (_caeaff string )(string ,error ){var _efge _dc .Buffer ;
_efge .WriteString (_caeaff );_agbdg :=make ([]byte ,8+16);_gagbg :=_be .Now ().UTC ().UnixNano ();_bc .BigEndian .PutUint64 (_agbdg ,uint64 (_gagbg ));_ ,_acaffd :=_ce .Read (_agbdg [8:]);if _acaffd !=nil {return "",_acaffd ;};_efge .WriteString (_f .EncodeToString (_agbdg ));
return _efge .String (),nil ;};func (_cbbe *PdfAppender )addNewObject (_fed _cda .PdfObject ){if _ ,_dcbg :=_cbbe ._dece [_fed ];!_dcbg {_cbbe ._faae =append (_cbbe ._faae ,_fed );_cbbe ._dece [_fed ]=struct{}{};};};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_eag :=NewPdfAction ();_adb :=&PdfActionSound {};_adb .PdfAction =_eag ;_eag .SetContext (_adb );return _adb ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_gggg *PdfAppender )Write (w _cd .Writer )error {if _gggg ._eeff {return _ea .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_adgc :=NewPdfWriter ();_gbbe ,_ddce :=_cda .GetDict (_adgc ._bacdc );if !_ddce {return _ea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_cbd ,_ddce :=_gbbe .Get ("\u004b\u0069\u0064\u0073").(*_cda .PdfObjectArray );if !_ddce {return _ea .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_ebfe ,_ddce :=_gbbe .Get ("\u0043\u006f\u0075n\u0074").(*_cda .PdfObjectInteger );if !_ddce {return _ea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_fccd :=_gggg ._ddaff ._gaedg ;_gfde :=_fccd .GetTrailer ();if _gfde ==nil {return _ea .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_cffa ,_ddce :=_cda .GetIndirect (_gfde .Get ("\u0052\u006f\u006f\u0074"));
if !_ddce {return _ea .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_dfef ,_ddce :=_cda .GetDict (_cffa );if !_ddce {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_cffa ,*_gfde );
return _ea .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_bbf :=range _dfef .Keys (){if _adgc ._bgafe .Get (_bbf )==nil {_efcde :=_dfef .Get (_bbf );_adgc ._bgafe .Set (_bbf ,_efcde );};};if _gggg ._degb !=nil {_adgc ._bgafe .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_gggg ._degb .ToPdfObject ());
_gggg .updateObjectsDeep (_gggg ._degb .ToPdfObject (),nil );};if _gggg ._eeee !=nil {_gggg .updateObjectsDeep (_gggg ._eeee .ToPdfObject (),nil );_adgc ._bgafe .Set ("\u0044\u0053\u0053",_gggg ._eeee .GetContainingPdfObject ());};if _adgc ._bgce < 2{_adgc .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);
_adgc .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};_gggg .addNewObject (_adgc ._acdadd );_gggg .addNewObject (_adgc ._cddbe );_baee :=false ;if len (_gggg ._ddaff .PageList )!=len (_gggg ._cafc ){_baee =true ;}else {for _bcf :=range _gggg ._ddaff .PageList {switch {case _gggg ._cafc [_bcf ]==_gggg ._ddaff .PageList [_bcf ]:case _gggg ._cafc [_bcf ]==_gggg .Reader .PageList [_bcf ]:default:_baee =true ;
};if _baee {break ;};};};if _baee {_gggg .updateObjectsDeep (_adgc ._bacdc ,nil );}else {_gggg ._bca [_adgc ._bacdc ]=struct{}{};};_adgc ._bacdc .ObjectNumber =_gggg .Reader ._caceb .ObjectNumber ;_gggg ._cebg [_adgc ._bacdc ]=_gggg .Reader ._caceb .ObjectNumber ;
_daga :=[]_cda .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_agcab :=range _gggg ._cafc {_efaa :=_agcab .ToPdfObject ();
*_ebfe =*_ebfe +1;if _agf ,_ega :=_efaa .(*_cda .PdfIndirectObject );_ega &&_agf .GetParser ()==_gggg ._ddaff ._gaedg {_cbd .Append (&_agf .PdfObjectReference );continue ;};if _daa ,_dbcef :=_cda .GetDict (_efaa );_dbcef {_dgce ,_cbgb :=_daa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_cda .PdfIndirectObject );
for _cbgb {_ae .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_dgce );_cbec ,_cgeg :=_dgce .PdfObject .(*_cda .PdfObjectDictionary );if !_cgeg {return _ea .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_bfag :=range _daga {_ae .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bfag );if _daa .Get (_bfag )!=nil {_ae .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _ggag :=_cbec .Get (_bfag );_ggag !=nil {_ae .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bfag );_daa .Set (_bfag ,_ggag );};};_dgce ,_cbgb =_cbec .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_cda .PdfIndirectObject );
_ae .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_cbec .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_daa .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_adgc ._bacdc );};_gggg .updateObjectsDeep (_efaa ,nil );
_cbd .Append (_efaa );};if _ ,_ccc :=_gggg ._deb .Seek (0,_cd .SeekStart );_ccc !=nil {return _ccc ;};_ggfe :=make (map[SignatureHandler ]_cd .Writer );_gcde :=_cda .MakeArray ();for _ ,_gfdg :=range _gggg ._faae {if _eaed ,_dfca :=_cda .GetIndirect (_gfdg );
_dfca {if _edfd ,_begfb :=_eaed .PdfObject .(*pdfSignDictionary );_begfb {_cfaf :=*_edfd ._ebeec ;var _edbeb error ;_ggfe [_cfaf ],_edbeb =_cfaf .NewDigest (_edfd ._efeaeb );if _edbeb !=nil {return _edbeb ;};_gcde .Append (_cda .MakeInteger (0xfffff),_cda .MakeInteger (0xfffff));
};};};if _gcde .Len ()> 0{_gcde .Append (_cda .MakeInteger (0xfffff),_cda .MakeInteger (0xfffff));};for _ ,_ffdb :=range _gggg ._faae {if _fead ,_aged :=_cda .GetIndirect (_ffdb );_aged {if _gde ,_dfdae :=_fead .PdfObject .(*pdfSignDictionary );_dfdae {_gde .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_gcde );
};};};_cbaa :=len (_ggfe )> 0;var _eggd _cd .Reader =_gggg ._deb ;if _cbaa {_gged :=make ([]_cd .Writer ,0,len (_ggfe ));for _ ,_eegd :=range _ggfe {_gged =append (_gged ,_eegd );};_eggd =_cd .TeeReader (_gggg ._deb ,_cd .MultiWriter (_gged ...));};_begd ,_dfcd :=_cd .Copy (w ,_eggd );
if _dfcd !=nil {return _dfcd ;};if len (_gggg ._faae )==0{return nil ;};_adgc ._ddbga =_begd ;_adgc .ObjNumOffset =_gggg ._ggeb ;_adgc ._dddcb =true ;_adgc ._baedc =_gggg ._aage ;_adgc ._ggdad =_gggg ._gfdd ;_adgc ._ecbed =_gggg ._gbe ;_adgc ._agfdf =_gggg ._ddaff .PdfVersion ().Minor ;
_adgc ._cedcb =_gggg ._cebg ;_dcaa :=_gggg ._gbdg .GetXrefType ();if _dcaa !=nil {_edgce :=*_dcaa ==_cda .XrefTypeObjectStream ;_adgc ._bafcgd =&_edgce ;};_adgc ._ffbg =map[_cda .PdfObject ]struct{}{};_adgc ._gbffa =[]_cda .PdfObject {};for _ ,_dbab :=range _gggg ._faae {if _ ,_dgff :=_gggg ._bca [_dbab ];
_dgff {continue ;};_adgc .addObject (_dbab );};_bdbd :=w ;if _cbaa {_bdbd =_dc .NewBuffer (nil );};if _eefab :=_adgc .Write (_bdbd );_eefab !=nil {return _eefab ;};if _cbaa {_aggd :=_bdbd .(*_dc .Buffer ).Bytes ();_defg :=_cda .MakeArray ();var _ggga []*pdfSignDictionary ;
var _eafg int64 ;for _ ,_acfa :=range _adgc ._gbffa {if _caeg ,_dbg :=_cda .GetIndirect (_acfa );_dbg {if _efag ,_cagf :=_caeg .PdfObject .(*pdfSignDictionary );_cagf {_ggga =append (_ggga ,_efag );_bfdg :=_efag ._adgga +int64 (_efag ._cdbg );_defg .Append (_cda .MakeInteger (_eafg ),_cda .MakeInteger (_bfdg -_eafg ));
_eafg =_efag ._adgga +int64 (_efag ._cbadg );};};};_defg .Append (_cda .MakeInteger (_eafg ),_cda .MakeInteger (_begd +int64 (len (_aggd ))-_eafg ));_agge :=[]byte (_defg .WriteString ());for _ ,_fdb :=range _ggga {_ceeb :=int (_fdb ._adgga -_begd );for _aaff :=_fdb ._geabc ;
_aaff < _fdb ._adfd ;_aaff ++{_aggd [_ceeb +_aaff ]=' ';};_gdfd :=_aggd [_ceeb +_fdb ._geabc :_ceeb +_fdb ._adfd ];copy (_gdfd ,_agge );};var _bdccc int ;for _ ,_bcdcf :=range _ggga {_gcbd :=int (_bcdcf ._adgga -_begd );_dbdaf :=_aggd [_bdccc :_gcbd +_bcdcf ._cdbg ];
_ceddf :=*_bcdcf ._ebeec ;_ggfe [_ceddf ].Write (_dbdaf );_bdccc =_gcbd +_bcdcf ._cbadg ;};for _ ,_bdgae :=range _ggga {_abcb :=_aggd [_bdccc :];_egad :=*_bdgae ._ebeec ;_ggfe [_egad ].Write (_abcb );};for _ ,_ddab :=range _ggga {_gecf :=int (_ddab ._adgga -_begd );
_ace :=*_ddab ._ebeec ;_ccfe :=_ggfe [_ace ];if _efeb :=_ace .Sign (_ddab ._efeaeb ,_ccfe );_efeb !=nil {return _efeb ;};_ddab ._efeaeb .ByteRange =_defg ;_ggab :=[]byte (_ddab ._efeaeb .Contents .WriteString ());for _cacbg :=_ddab ._geabc ;_cacbg < _ddab ._adfd ;
_cacbg ++{_aggd [_gecf +_cacbg ]=' ';};for _ccee :=_ddab ._cdbg ;_ccee < _ddab ._cbadg ;_ccee ++{_aggd [_gecf +_ccee ]=' ';};_bebd :=_aggd [_gecf +_ddab ._geabc :_gecf +_ddab ._adfd ];copy (_bebd ,_agge );_bebd =_aggd [_gecf +_ddab ._cdbg :_gecf +_ddab ._cbadg ];
copy (_bebd ,_ggab );};_dffcc :=_dc .NewBuffer (_aggd );_ ,_dfcd =_cd .Copy (w ,_dffcc );if _dfcd !=nil {return _dfcd ;};};_gggg ._eeff =true ;return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_dfag *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_egfc :=vals [0];if _egfc < 0.0||_egfc > 1.0{_ae .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _egfc < 0.0{_egfc =0.0;}else if _egfc > 1.0{_egfc =1.0;};return NewPdfColorDeviceGray (_egfc ),nil ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_cfaa :=&PdfFieldSignature {};_cfaa .PdfField =NewPdfField ();_cfaa .PdfField .SetContext (_cfaa );_cfaa .PdfAnnotationWidget =NewPdfAnnotationWidget ();_cfaa .PdfAnnotationWidget .SetContext (_cfaa );
_cfaa .PdfAnnotationWidget ._afd =_cfaa .PdfField ._geab ;_cfaa .T =_cda .MakeString ("");_cfaa .F =_cda .MakeInteger (132);_cfaa .V =signature ;return _cfaa ;};var _ffgfe =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};
func (_feb *PdfAnnotation )String ()string {_dgf :="";_bgb ,_gcge :=_feb .ToPdfObject ().(*_cda .PdfIndirectObject );if _gcge {_dgf =_c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_feb ._edbe ,_bgb .PdfObject .String ());};return _dgf ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_adad *PdfPage )GetPageDict ()*_cda .PdfObjectDictionary {_bfgf :=_adad ._edefc ;_bfgf .Clear ();_bfgf .Set ("\u0054\u0079\u0070\u0065",_cda .MakeName ("\u0050\u0061\u0067\u0065"));_bfgf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_adad .Parent );
if _adad .LastModified !=nil {_bfgf .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_adad .LastModified .ToPdfObject ());};if _adad .Resources !=nil {_bfgf .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_adad .Resources .ToPdfObject ());
};if _adad .CropBox !=nil {_bfgf .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_adad .CropBox .ToPdfObject ());};if _adad .MediaBox !=nil {_bfgf .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_adad .MediaBox .ToPdfObject ());};if _adad .BleedBox !=nil {_bfgf .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_adad .BleedBox .ToPdfObject ());
};if _adad .TrimBox !=nil {_bfgf .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_adad .TrimBox .ToPdfObject ());};if _adad .ArtBox !=nil {_bfgf .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_adad .ArtBox .ToPdfObject ());};_bfgf .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_adad .BoxColorInfo );
_bfgf .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_adad .Contents );if _adad .Rotate !=nil {_bfgf .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_cda .MakeInteger (*_adad .Rotate ));};_bfgf .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_adad .Group );
_bfgf .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_adad .Thumb );_bfgf .SetIfNotNil ("\u0042",_adad .B );_bfgf .SetIfNotNil ("\u0044\u0075\u0072",_adad .Dur );_bfgf .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_adad .Trans );_bfgf .SetIfNotNil ("\u0041\u0041",_adad .AA );
_bfgf .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_adad .Metadata );_bfgf .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_adad .PieceInfo );_bfgf .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_adad .StructParents );
_bfgf .SetIfNotNil ("\u0049\u0044",_adad .ID );_bfgf .SetIfNotNil ("\u0050\u005a",_adad .PZ );_bfgf .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_adad .SeparationInfo );_bfgf .SetIfNotNil ("\u0054\u0061\u0062\u0073",_adad .Tabs );
_bfgf .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_adad .TemplateInstantiated );_bfgf .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_adad .PresSteps );_bfgf .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_adad .UserUnit );
_bfgf .SetIfNotNil ("\u0056\u0050",_adad .VP );if _adad ._ceeaa !=nil {_eacfg :=_cda .MakeArray ();for _ ,_acdfg :=range _adad ._ceeaa {if _bdagb :=_acdfg .GetContext ();_bdagb !=nil {_eacfg .Append (_bdagb .ToPdfObject ());}else {_eacfg .Append (_acdfg .ToPdfObject ());
};};if _eacfg .Len ()> 0{_bfgf .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_eacfg );};}else if _adad .Annots !=nil {_bfgf .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_adad .Annots );};return _bfgf ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _cda .PdfObject ;LE _cda .PdfObject ;BS _cda .PdfObject ;IC _cda .PdfObject ;BE _cda .PdfObject ;IT _cda .PdfObject ;Measure _cda .PdfObject ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_cgbf *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_ae .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_ae .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_ae .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_ae .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_gfgf ,_gdd :=_eee .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._eeeg ,img ._eabad );if _gdd !=nil {return Image {},_gdd ;};_cfca ,_gdd :=_eee .NRGBAConverter .Convert (_gfgf );if _gdd !=nil {return Image {},_gdd ;
};return _fdaad (_cfca .Base ()),nil ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_cda .PdfObjectArray ;TI *_cda .PdfObjectInteger ;I *_cda .PdfObjectArray ;};

// ToPdfObject converts rectangle to a PDF object.
func (_cagab *PdfRectangle )ToPdfObject ()_cda .PdfObject {return _cda .MakeArray (_cda .MakeFloat (_cagab .Llx ),_cda .MakeFloat (_cagab .Lly ),_cda .MakeFloat (_cagab .Urx ),_cda .MakeFloat (_cagab .Ury ));};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_gabda *PdfAnnotation )ToPdfObject ()_cda .PdfObject {_fcaa :=_gabda ._afd ;_egbad :=_fcaa .PdfObject .(*_cda .PdfObjectDictionary );_egbad .Clear ();_egbad .Set ("\u0054\u0079\u0070\u0065",_cda .MakeName ("\u0041\u006e\u006eo\u0074"));_egbad .SetIfNotNil ("\u0052\u0065\u0063\u0074",_gabda .Rect );
_egbad .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_gabda .Contents );_egbad .SetIfNotNil ("\u0050",_gabda .P );_egbad .SetIfNotNil ("\u004e\u004d",_gabda .NM );_egbad .SetIfNotNil ("\u004d",_gabda .M );_egbad .SetIfNotNil ("\u0046",_gabda .F );
_egbad .SetIfNotNil ("\u0041\u0050",_gabda .AP );_egbad .SetIfNotNil ("\u0041\u0053",_gabda .AS );_egbad .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_gabda .Border );_egbad .SetIfNotNil ("\u0043",_gabda .C );_egbad .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gabda .StructParent );
_egbad .SetIfNotNil ("\u004f\u0043",_gabda .OC );return _fcaa ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_aee :=NewPdfAnnotation ();_ede :=&PdfAnnotationSquiggly {};_ede .PdfAnnotation =_aee ;_ede .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aee .SetContext (_ede );return _ede ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_debb DefaultImageHandler )NewImageFromGoImage (goimg _e .Image )(*Image ,error ){_abdaef ,_dfcga :=_eee .FromGoImage (goimg );if _dfcga !=nil {return nil ,_dfcga ;};_afebe :=_fdaad (_abdaef .Base ());return &_afebe ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_adcgg *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_dge :=NewPdfAnnotation ();_bgf :=&PdfAnnotationCaret {};_bgf .PdfAnnotation =_dge ;_bgf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dge .SetContext (_bgf );return _bgf ;};

// C returns the value of the cyan component of the color.
func (_cbdd *PdfColorDeviceCMYK )C ()float64 {return _cbdd [0]};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_bbbfb *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_ggdb :=func (_cabfa float64 )float64 {if _cabfa >=6.0/29{return _cabfa *_cabfa *_cabfa ;};return 108.0/841*(_cabfa -4/29);};_aaea :=img ._eabad ;if len (_aaea )!=6{_ae .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_aaea =_bbbfb .DecodeArray ();};_abea :=_bed .NewReader (img .getBase ());_bgag :=_eee .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._eeeg ,img ._eabad );_ddbgb :=_bed .NewWriter (_bgag );_eadg :=_ba .Pow (2,float64 (img .BitsPerComponent ))-1;
_ecfg :=make ([]uint32 ,3);var (_ffbd error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_fddg ,_bbdc ,_gcae float64 ;);for {_ffbd =_abea .ReadSamples (_ecfg );if _ffbd ==_cd .EOF {break ;}else if _ffbd !=nil {return img ,_ffbd ;};Ls =float64 (_ecfg [0])/_eadg ;As =float64 (_ecfg [1])/_eadg ;
Bs =float64 (_ecfg [2])/_eadg ;Ls =_eee .LinearInterpolate (Ls ,0.0,1.0,_aaea [0],_aaea [1]);As =_eee .LinearInterpolate (As ,0.0,1.0,_aaea [2],_aaea [3]);Bs =_eee .LinearInterpolate (Bs ,0.0,1.0,_aaea [4],_aaea [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;
N =(Ls +16)/116-Bs /200;X =_bbbfb .WhitePoint [0]*_ggdb (L );Y =_bbbfb .WhitePoint [1]*_ggdb (M );Z =_bbbfb .WhitePoint [2]*_ggdb (N );_fddg =3.240479*X +-1.537150*Y +-0.498535*Z ;_bbdc =-0.969256*X +1.875992*Y +0.041556*Z ;_gcae =0.055648*X +-0.204043*Y +1.057311*Z ;
_fddg =_ba .Min (_ba .Max (_fddg ,0),1.0);_bbdc =_ba .Min (_ba .Max (_bbdc ,0),1.0);_gcae =_ba .Min (_ba .Max (_gcae ,0),1.0);_ecfg [0]=uint32 (_fddg *_eadg );_ecfg [1]=uint32 (_bbdc *_eadg );_ecfg [2]=uint32 (_gcae *_eadg );if _ffbd =_ddbgb .WriteSamples (_ecfg );
_ffbd !=nil {return img ,_ffbd ;};};return _fdaad (&_bgag ),nil ;};

// ReplacePage replaces the original page to a new page.
func (_cdce *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_becdd :=pageNum -1;for _dccb :=range _cdce ._cafc {if _dccb ==_becdd {_egdc :=page .Duplicate ();_agdef (_egdc );_cdce ._cafc [_dccb ]=_egdc ;};};};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _cda .PdfObject )(_cda .PdfObjectName ,error ){var _ebff *_cda .PdfObjectName ;var _eeeb *_cda .PdfObjectArray ;if _eabd ,_bfga :=obj .(*_cda .PdfIndirectObject );_bfga {if _ecde ,_dbea :=_eabd .PdfObject .(*_cda .PdfObjectArray );
_dbea {_eeeb =_ecde ;}else if _dacd ,_ddeb :=_eabd .PdfObject .(*_cda .PdfObjectName );_ddeb {_ebff =_dacd ;};}else if _eedfc ,_eafgf :=obj .(*_cda .PdfObjectArray );_eafgf {_eeeb =_eedfc ;}else if _bgebd ,_faag :=obj .(*_cda .PdfObjectName );_faag {_ebff =_bgebd ;
};if _ebff !=nil {switch *_ebff {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_ebff ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_ebff ,nil ;
};};if _eeeb !=nil &&_eeeb .Len ()> 0{if _dgfd ,_fgbd :=_eeeb .Get (0).(*_cda .PdfObjectName );_fgbd {switch *_dgfd {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _eeeb .Len ()==1{return *_dgfd ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_dgfd ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_dgfd ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_dgfd ,nil ;};};};return "",nil ;};

// ToPdfObject implements interface PdfModel.
func (_fec *PdfActionNamed )ToPdfObject ()_cda .PdfObject {_fec .PdfAction .ToPdfObject ();_cce :=_fec ._dcg ;_ef :=_cce .PdfObject .(*_cda .PdfObjectDictionary );_ef .SetIfNotNil ("\u0053",_cda .MakeName (string (ActionTypeNamed )));_ef .SetIfNotNil ("\u004e",_fec .N );
return _cce ;};func _ddad (_cebb _cda .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_cgbad :=&PdfColorspaceDeviceNAttributes {};var _cbeb *_cda .PdfObjectDictionary ;switch _dcce :=_cebb .(type ){case *_cda .PdfIndirectObject :_cgbad ._gadb =_dcce ;
var _cdcb bool ;_cbeb ,_cdcb =_dcce .PdfObject .(*_cda .PdfObjectDictionary );if !_cdcb {_ae .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ea .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_cda .PdfObjectDictionary :_cbeb =_dcce ;case *_cda .PdfObjectReference :_fbfe :=_dcce .Resolve ();return _ddad (_fbfe );default:_ae .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ea .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dcga :=_cbeb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_dcga !=nil {_caaf ,_cfga :=_cda .TraceToDirectObject (_dcga ).(*_cda .PdfObjectName );if !_cfga {_ae .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_ea .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_cgbad .Subtype =_caaf ;};if _bcbd :=_cbeb .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_bcbd !=nil {_cgbad .Colorants =_bcbd ;};if _acdag :=_cbeb .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_acdag !=nil {_cgbad .Process =_acdag ;};if _fdde :=_cbeb .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_fdde !=nil {_cgbad .MixingHints =_fdde ;};return _cgbad ,nil ;};func (_ffaaa *PdfReader )newPdfFieldSignatureFromDict (_facbc *_cda .PdfObjectDictionary )(*PdfFieldSignature ,error ){_aade :=&PdfFieldSignature {};
_efcfb ,_gaafb :=_cda .GetIndirect (_facbc .Get ("\u0056"));if _gaafb {var _fcbc error ;_aade .V ,_fcbc =_ffaaa .newPdfSignatureFromIndirect (_efcfb );if _fcbc !=nil {return nil ,_fcbc ;};};_aade .Lock ,_ =_cda .GetIndirect (_facbc .Get ("\u004c\u006f\u0063\u006b"));
_aade .SV ,_ =_cda .GetIndirect (_facbc .Get ("\u0053\u0056"));return _aade ,nil ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_gebe *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _gebe .UnderlyingCS .GetNumComponents ();};

// ToPdfObject implements interface PdfModel.
func (_fge *PdfAnnotationSound )ToPdfObject ()_cda .PdfObject {_fge .PdfAnnotation .ToPdfObject ();_aafb :=_fge ._afd ;_bbde :=_aafb .PdfObject .(*_cda .PdfObjectDictionary );_fge .PdfAnnotationMarkup .appendToPdfDictionary (_bbde );_bbde .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0053\u006f\u0075n\u0064"));
_bbde .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_fge .Sound );_bbde .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fge .Name );return _aafb ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_cda .PdfObjectBool ;SigFlags *_cda .PdfObjectInteger ;CO *_cda .PdfObjectArray ;DR *PdfPageResources ;DA *_cda .PdfObjectString ;Q *_cda .PdfObjectInteger ;XFA _cda .PdfObject ;_eada *_cda .PdfIndirectObject ;
};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_abfbc *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _abfbc .MediaBox !=nil {return _abfbc .MediaBox ,nil ;};_ffgb :=_abfbc .Parent ;for _ffgb !=nil {_bbaab ,_aecdf :=_cda .GetDict (_ffgb );if !_aecdf {return nil ,_ea .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _geffa :=_bbaab .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_geffa !=nil {_eded ,_ebdca :=_cda .GetArray (_geffa );if !_ebdca {return nil ,_ea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_ecfb ,_fbad :=NewPdfRectangle (*_eded );if _fbad !=nil {return nil ,_fbad ;};return _ecfb ,nil ;};_ffgb =_bbaab .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_ea .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _cda .PdfObject ;Flags _cda .PdfObject ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_adccb :=PdfDate {};_fcbda :=_cbedb .FindAllStringSubmatch (dateStr ,1);if len (_fcbda )< 1{return _adccb ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );
};if len (_fcbda [0])!=10{return _adccb ,_ea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");
};_adccb ._cgdbb ,_ =_gc .ParseInt (_fcbda [0][1],10,32);_adccb ._ceac ,_ =_gc .ParseInt (_fcbda [0][2],10,32);_adccb ._ffbfc ,_ =_gc .ParseInt (_fcbda [0][3],10,32);_adccb ._becdf ,_ =_gc .ParseInt (_fcbda [0][4],10,32);_adccb ._acbge ,_ =_gc .ParseInt (_fcbda [0][5],10,32);
_adccb ._ddae ,_ =_gc .ParseInt (_fcbda [0][6],10,32);if len (_fcbda [0][7])> 0{_adccb ._dcgeg =_fcbda [0][7][0];}else {_adccb ._dcgeg ='+';};if len (_fcbda [0][8])> 0{_adccb ._aeae ,_ =_gc .ParseInt (_fcbda [0][8],10,32);}else {_adccb ._aeae =0;};if len (_fcbda [0][9])> 0{_adccb ._egeca ,_ =_gc .ParseInt (_fcbda [0][9],10,32);
}else {_adccb ._egeca =0;};return _adccb ,nil ;};func (_ffed *PdfReader )newPdfAnnotationLineFromDict (_faa *_cda .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_cbc :=PdfAnnotationLine {};_dda ,_fad :=_ffed .newPdfAnnotationMarkupFromDict (_faa );
if _fad !=nil {return nil ,_fad ;};_cbc .PdfAnnotationMarkup =_dda ;_cbc .L =_faa .Get ("\u004c");_cbc .BS =_faa .Get ("\u0042\u0053");_cbc .LE =_faa .Get ("\u004c\u0045");_cbc .IC =_faa .Get ("\u0049\u0043");_cbc .LL =_faa .Get ("\u004c\u004c");_cbc .LLE =_faa .Get ("\u004c\u004c\u0045");
_cbc .Cap =_faa .Get ("\u0043\u0061\u0070");_cbc .IT =_faa .Get ("\u0049\u0054");_cbc .LLO =_faa .Get ("\u004c\u004c\u004f");_cbc .CP =_faa .Get ("\u0043\u0050");_cbc .Measure =_faa .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_cbc .CO =_faa .Get ("\u0043\u004f");
return &_cbc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_adbb *PdfAnnotationWidget )ToPdfObject ()_cda .PdfObject {_adbb .PdfAnnotation .ToPdfObject ();_beg :=_adbb ._afd ;_acfb :=_beg .PdfObject .(*_cda .PdfObjectDictionary );if _adbb ._bgc {return _beg ;};_adbb ._bgc =true ;_acfb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_acfb .SetIfNotNil ("\u0048",_adbb .H );_acfb .SetIfNotNil ("\u004d\u004b",_adbb .MK );_acfb .SetIfNotNil ("\u0041",_adbb .A );_acfb .SetIfNotNil ("\u0041\u0041",_adbb .AA );_acfb .SetIfNotNil ("\u0042\u0053",_adbb .BS );_ddfb :=_adbb .Parent ;if _adbb ._cba !=nil {if _adbb ._cba ._geab ==_adbb ._afd {_adbb ._cba .ToPdfObject ();
};_ddfb =_adbb ._cba .GetContainingPdfObject ();};if _ddfb !=_beg {_acfb .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_ddfb );};_adbb ._bgc =false ;return _beg ;};func (_cgbgc *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _ffbf :=_cgbgc ._bedag ;
_ffbf !=nil {return _ffbf ;};return _cgbgc ._ebef ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;func (_aaabd fontCommon )coreString ()string {_babf :="";if _aaabd ._bedag !=nil {_babf =_aaabd ._bedag .String ();};return _c .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_aaabd ._fceb ,_aaabd ._gedd ,_aaabd ._abgeg ,_aaabd ._dbdae ,_aaabd ._fbee !=nil ,_aaabd .fontFlags (),_babf );
};func (_dbdgf *PdfWriter )copyObject (_gdeeb _cda .PdfObject ,_cccfb map[_cda .PdfObject ]_cda .PdfObject ,_dbbda map[_cda .PdfObject ]struct{},_fcgag bool )_cda .PdfObject {_bcgfd :=!_dbdgf ._dddcb &&_dbbda !=nil ;if _ceabc ,_adag :=_cccfb [_gdeeb ];
_adag {if _bcgfd &&!_fcgag {delete (_dbbda ,_gdeeb );};return _ceabc ;};_gfedg :=_gdeeb ;switch _cbaced :=_gdeeb .(type ){case *_cda .PdfObjectArray :_dedad :=_cda .MakeArray ();_gfedg =_dedad ;_cccfb [_gdeeb ]=_gfedg ;for _ ,_bbfa :=range _cbaced .Elements (){_dedad .Append (_dbdgf .copyObject (_bbfa ,_cccfb ,_dbbda ,_fcgag ));
};case *_cda .PdfObjectStreams :_dffbb :=&_cda .PdfObjectStreams {PdfObjectReference :_cbaced .PdfObjectReference };_gfedg =_dffbb ;_cccfb [_gdeeb ]=_gfedg ;for _ ,_bbdcf :=range _cbaced .Elements (){_dffbb .Append (_dbdgf .copyObject (_bbdcf ,_cccfb ,_dbbda ,_fcgag ));
};case *_cda .PdfObjectStream :_eebae :=&_cda .PdfObjectStream {Stream :_cbaced .Stream ,PdfObjectReference :_cbaced .PdfObjectReference };_gfedg =_eebae ;_cccfb [_gdeeb ]=_gfedg ;_eebae .PdfObjectDictionary =_dbdgf .copyObject (_cbaced .PdfObjectDictionary ,_cccfb ,_dbbda ,_fcgag ).(*_cda .PdfObjectDictionary );
case *_cda .PdfObjectDictionary :var _aaebbf bool ;if _bcgfd &&!_fcgag {if _gdgd ,_ :=_cda .GetNameVal (_cbaced .Get ("\u0054\u0079\u0070\u0065"));_gdgd =="\u0050\u0061\u0067\u0065"{_ ,_fdbddg :=_dbdgf ._baegb [_cbaced ];_fcgag =!_fdbddg ;_aaebbf =_fcgag ;
};};_bacdd :=_cda .MakeDict ();_gfedg =_bacdd ;_cccfb [_gdeeb ]=_gfedg ;for _ ,_bgfec :=range _cbaced .Keys (){_bacdd .Set (_bgfec ,_dbdgf .copyObject (_cbaced .Get (_bgfec ),_cccfb ,_dbbda ,_fcgag ));};if _aaebbf {_gfedg =_cda .MakeNull ();_fcgag =false ;
};case *_cda .PdfIndirectObject :_fbcgc :=&_cda .PdfIndirectObject {PdfObjectReference :_cbaced .PdfObjectReference };_gfedg =_fbcgc ;_cccfb [_gdeeb ]=_gfedg ;_fbcgc .PdfObject =_dbdgf .copyObject (_cbaced .PdfObject ,_cccfb ,_dbbda ,_fcgag );case *_cda .PdfObjectString :_cbeff :=*_cbaced ;
_gfedg =&_cbeff ;_cccfb [_gdeeb ]=_gfedg ;case *_cda .PdfObjectName :_cefg :=*_cbaced ;_gfedg =&_cefg ;_cccfb [_gdeeb ]=_gfedg ;case *_cda .PdfObjectNull :_gfedg =_cda .MakeNull ();_cccfb [_gdeeb ]=_gfedg ;case *_cda .PdfObjectInteger :_bgfaee :=*_cbaced ;
_gfedg =&_bgfaee ;_cccfb [_gdeeb ]=_gfedg ;case *_cda .PdfObjectReference :_gbded :=*_cbaced ;_gfedg =&_gbded ;_cccfb [_gdeeb ]=_gfedg ;case *_cda .PdfObjectFloat :_dfba :=*_cbaced ;_gfedg =&_dfba ;_cccfb [_gdeeb ]=_gfedg ;case *_cda .PdfObjectBool :_efbg :=*_cbaced ;
_gfedg =&_efbg ;_cccfb [_gdeeb ]=_gfedg ;case *pdfSignDictionary :_gcaab :=&pdfSignDictionary {PdfObjectDictionary :_cda .MakeDict (),_ebeec :_cbaced ._ebeec ,_efeaeb :_cbaced ._efeaeb };_gfedg =_gcaab ;_cccfb [_gdeeb ]=_gfedg ;for _ ,_fbbdc :=range _cbaced .Keys (){_gcaab .Set (_fbbdc ,_dbdgf .copyObject (_cbaced .Get (_fbbdc ),_cccfb ,_dbbda ,_fcgag ));
};default:_ae .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_gdeeb );
};if _bcgfd &&_fcgag {_dbbda [_gdeeb ]=struct{}{};};return _gfedg ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_daaa *pdfFontSimple )SetEncoder (encoder _aef .TextEncoder ){_daaa ._dcag =encoder };

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_bfdf :=PdfColorLab {l ,a ,b };return &_bfdf };func (_abfg *PdfReader )buildPageList (_edddb *_cda .PdfIndirectObject ,_aafec *_cda .PdfIndirectObject ,_agfbe map[_cda .PdfObject ]struct{})error {if _edddb ==nil {return nil ;
};if _ ,_ebbc :=_agfbe [_edddb ];_ebbc {_ae .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_edddb .ObjectNumber );
return nil ;};_agfbe [_edddb ]=struct{}{};_agcc ,_bffca :=_edddb .PdfObject .(*_cda .PdfObjectDictionary );if !_bffca {return _ea .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_agfagb ,_bffca :=(*_agcc ).Get ("\u0054\u0079\u0070\u0065").(*_cda .PdfObjectName );
if !_bffca {if _agcc .Get ("\u004b\u0069\u0064\u0073")==nil {return _ea .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_ae .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_agfagb =_cda .MakeName ("\u0050\u0061\u0067e\u0073");_agcc .Set ("\u0054\u0079\u0070\u0065",_agfagb );};_ae .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_agfagb ,_edddb );
if *_agfagb =="\u0050\u0061\u0067\u0065"{_ffgfb ,_dcbc :=_abfg .newPdfPageFromDict (_agcc );if _dcbc !=nil {return _dcbc ;};_ffgfb .setContainer (_edddb );if _aafec !=nil {_agcc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_aafec );};_abfg ._gbdee =append (_abfg ._gbdee ,_edddb );
_abfg .PageList =append (_abfg .PageList ,_ffgfb );return nil ;};if *_agfagb !="\u0050\u0061\u0067e\u0073"{_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_agfagb );
return _ea .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _aafec !=nil {_agcc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_aafec );};if !_abfg ._fdgef {_ddbde :=_abfg .traverseObjectData (_edddb );if _ddbde !=nil {return _ddbde ;};};_cdfef ,_febcef :=_abfg ._gaedg .Resolve (_agcc .Get ("\u004b\u0069\u0064\u0073"));
if _febcef !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _febcef ;};var _gfbgb *_cda .PdfObjectArray ;
_gfbgb ,_bffca =_cdfef .(*_cda .PdfObjectArray );if !_bffca {_affad ,_fddea :=_cdfef .(*_cda .PdfIndirectObject );if !_fddea {return _ea .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};
_gfbgb ,_bffca =_affad .PdfObject .(*_cda .PdfObjectArray );if !_bffca {return _ea .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_ae .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_gfbgb );
for _eeegf ,_ggadf :=range _gfbgb .Elements (){_gegg ,_cbce :=_cda .GetIndirect (_ggadf );if !_cbce {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_gegg );
return _ea .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_gfbgb .Set (_eeegf ,_gegg );_febcef =_abfg .buildPageList (_gegg ,_edddb ,_agfbe );if _febcef !=nil {return _febcef ;
};};return nil ;};func (_gagb *PdfReader )newPdfAnnotationWidgetFromDict (_fcea *_cda .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_fccb :=PdfAnnotationWidget {};_fccb .H =_fcea .Get ("\u0048");_fccb .MK =_fcea .Get ("\u004d\u004b");_fccb .A =_fcea .Get ("\u0041");
_fccb .AA =_fcea .Get ("\u0041\u0041");_fccb .BS =_fcea .Get ("\u0042\u0053");_fccb .Parent =_fcea .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_fccb ,nil ;};

// AddFont adds a font dictionary to the Font resources.
func (_dbgb *PdfPage )AddFont (name _cda .PdfObjectName ,font _cda .PdfObject )error {if _dbgb .Resources ==nil {_dbgb .Resources =NewPdfPageResources ();};if _dbgb .Resources .Font ==nil {_dbgb .Resources .Font =_cda .MakeDict ();};_aebf ,_bfge :=_cda .TraceToDirectObject (_dbgb .Resources .Font ).(*_cda .PdfObjectDictionary );
if !_bfge {_ae .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_cda .TraceToDirectObject (_dbgb .Resources .Font ));
return _ea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aebf .Set (name ,font );return nil ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _cda .StreamEncoder )(*XObjectImage ,error ){_abfea :=NewXObjectImage ();return UpdateXObjectImageFromImage (_abfea ,img ,cs ,encoder );};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_bgfa *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_bgabf :=_bgfa .actualFont ();if _bgabf ==nil {_ae .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_bgfa ._aecg );
return _fd .CharMetrics {},false ;};if _dgda ,_ecgafc :=_bgabf .GetRuneMetrics (r );_ecgafc {return _dgda ,true ;};if _gcaga ,_ccceg :=_bgfa .GetFontDescriptor ();_ccceg ==nil &&_gcaga !=nil {return _fd .CharMetrics {Wx :_gcaga ._gaacd },true ;};_ae .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bgfa );
return _fd .CharMetrics {},false ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_afbf *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// ToPdfObject implements interface PdfModel.
func (_gcg *PdfActionImportData )ToPdfObject ()_cda .PdfObject {_gcg .PdfAction .ToPdfObject ();_bd :=_gcg ._dcg ;_cde :=_bd .PdfObject .(*_cda .PdfObjectDictionary );_cde .SetIfNotNil ("\u0053",_cda .MakeName (string (ActionTypeImportData )));if _gcg .F !=nil {_cde .Set ("\u0046",_gcg .F .ToPdfObject ());
};return _bd ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cecff *PdfShadingType1 )ToPdfObject ()_cda .PdfObject {_cecff .PdfShading .ToPdfObject ();_feabfc ,_afeg :=_cecff .getShadingDict ();if _afeg !=nil {_ae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cecff .Domain !=nil {_feabfc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cecff .Domain );};if _cecff .Matrix !=nil {_feabfc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cecff .Matrix );};if _cecff .Function !=nil {if len (_cecff .Function )==1{_feabfc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cecff .Function [0].ToPdfObject ());
}else {_caba :=_cda .MakeArray ();for _ ,_fgfae :=range _cecff .Function {_caba .Append (_fgfae .ToPdfObject ());};_feabfc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_caba );};};return _cecff ._bfddc ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_ccb :=NewPdfAction ();_eed :=&PdfActionResetForm {};_eed .PdfAction =_ccb ;_ccb .SetContext (_eed );return _eed ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_eaafg *PdfPageResourcesColorspaces )Set (key _cda .PdfObjectName ,val PdfColorspace ){if _ ,_gcfbf :=_eaafg .Colorspaces [string (key )];!_gcfbf {_eaafg .Names =append (_eaafg .Names ,string (key ));};_eaafg .Colorspaces [string (key )]=val ;};var (_aafcc _d .Mutex ;
_afcga ="";_ddffe _be .Time ;_feeag ="";_ddbffg ="";_dbdce _be .Time ;_cecgf ="";_fccdf ="";_cabag ="";);

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };func (_gfgd *PdfReader )flattenFieldsWithOpts (_geafe bool ,_dded FieldAppearanceGenerator ,_gfgde *FieldFlattenOpts )error {if _gfgde ==nil {_gfgde =&FieldFlattenOpts {};};var _dgfc bool ;
_faab :=map[*PdfAnnotation ]bool {};{var _eege []*PdfField ;_ecgf :=_gfgd .AcroForm ;if _ecgf !=nil {if _gfgde .FilterFunc !=nil {_eege =_ecgf .filteredFields (_gfgde .FilterFunc ,true );_dgfc =_ecgf .Fields !=nil &&len (*_ecgf .Fields )> 0;}else {_eege =_ecgf .AllFields ();
};};for _ ,_dadg :=range _eege {for _ ,_bccgf :=range _dadg .Annotations {_faab [_bccgf .PdfAnnotation ]=_dadg .V !=nil ;if _dded !=nil {_cgfb ,_geegc :=_dded .GenerateAppearanceDict (_ecgf ,_dadg ,_bccgf );if _geegc !=nil {return _geegc ;};_bccgf .AP =_cgfb ;
};};};};if _geafe {for _ ,_gccfc :=range _gfgd .PageList {_ffefc ,_ffedb :=_gccfc .GetAnnotations ();if _ffedb !=nil {return _ffedb ;};for _ ,_cgcd :=range _ffefc {_faab [_cgcd ]=true ;};};};for _ ,_aacd :=range _gfgd .PageList {var _eeac []*PdfAnnotation ;
if _dded !=nil {if _degd :=_dded .WrapContentStream (_aacd );_degd !=nil {return _degd ;};};_fcbfb ,_afdcf :=_aacd .GetAnnotations ();if _afdcf !=nil {return _afdcf ;};for _ ,_cbdff :=range _fcbfb {_fcfd ,_aeefb :=_faab [_cbdff ];if !_aeefb &&_gfgde .AnnotFilterFunc !=nil {if _ ,_ccce :=_cbdff .GetContext ().(*PdfAnnotationWidget );
!_ccce {_aeefb =_gfgde .AnnotFilterFunc (_cbdff );};};if !_aeefb {_eeac =append (_eeac ,_cbdff );continue ;};switch _cbdff .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_gedc ,_cgbff ,_dcac :=_gdbc (_cbdff );if _dcac !=nil {if !_fcfd {_ae .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_dcac );
continue ;};if _gedc ==nil {continue ;};_ffec :=_aacd .Resources .GenerateXObjectName ();_aacd .Resources .SetXObjectFormByName (_ffec ,_gedc );_ceab :=_ba .Min (_cgbff .Llx ,_cgbff .Urx );_fdfec :=_ba .Min (_cgbff .Lly ,_cgbff .Ury );var _aece []string ;
_aece =append (_aece ,"\u0071");_aece =append (_aece ,_c .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_ceab ,_fdfec ));
_aece =append (_aece ,_c .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_ffec .String ()));_aece =append (_aece ,"\u0051");_fccf :=_bb .Join (_aece ,"\u000a");_dcac =_aacd .AppendContentStream (_fccf );if _dcac !=nil {return _dcac ;};if _gedc .Resources !=nil {_gafb ,_ffeg :=_cda .GetDict (_gedc .Resources .Font );
if _ffeg {for _ ,_cgac :=range _gafb .Keys (){if !_aacd .Resources .HasFontByName (_cgac ){_aacd .Resources .SetFontByName (_cgac ,_gafb .Get (_cgac ));};};};};};if len (_eeac )> 0{_aacd ._ceeaa =_eeac ;}else {_aacd ._ceeaa =[]*PdfAnnotation {};};};if !_dgfc {_gfgd .AcroForm =nil ;
};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_dfb *PdfActionSubmitForm )ToPdfObject ()_cda .PdfObject {_dfb .PdfAction .ToPdfObject ();_eec :=_dfb ._dcg ;_eaf :=_eec .PdfObject .(*_cda .PdfObjectDictionary );_eaf .SetIfNotNil ("\u0053",_cda .MakeName (string (ActionTypeSubmitForm )));if _dfb .F !=nil {_eaf .Set ("\u0046",_dfb .F .ToPdfObject ());
};_eaf .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_dfb .Fields );_eaf .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_dfb .Flags );return _eec ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_cge :=NewPdfAnnotation ();_bbeb :=&PdfAnnotationHighlight {};_bbeb .PdfAnnotation =_cge ;_bbeb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cge .SetContext (_bbeb );return _bbeb ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_dfccc *PdfShadingPattern )ToPdfObject ()_cda .PdfObject {_dfccc .PdfPattern .ToPdfObject ();_bffcc :=_dfccc .getDict ();if _dfccc .Shading !=nil {_bffcc .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_dfccc .Shading .ToPdfObject ());};if _dfccc .Matrix !=nil {_bffcc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dfccc .Matrix );
};if _dfccc .ExtGState !=nil {_bffcc .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_dfccc .ExtGState );};return _dfccc ._eaedcg ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_cbab FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_cbab .Mask ()|fl .Mask ())};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_cegg *PdfReader )GetEncryptionMethod ()string {_ccca :=_cegg ._gaedg .GetCrypter ();return _ccca .String ();};func (_gcca *DSS )addOCSPs (_acbg [][]byte )([]*_cda .PdfObjectStream ,error ){return _gcca .add (&_gcca .OCSPs ,_gcca ._efcf ,_acbg );
};func (_dfbc PdfFont )actualFont ()pdfFont {if _dfbc ._aecg ==nil {_ae .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dfbc );
};return _dfbc ._aecg ;};func _afbdd (_fffga _cda .PdfObject ){_ae .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_fffga ,_fffga .String ());if _fcggg ,_gddade :=_fffga .(*_cda .PdfObjectStream );_gddade {_agaag ,_dcdcf :=_cda .DecodeStream (_fcggg );
if _dcdcf !=nil {_ae .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_dcdcf );return ;};_ae .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_agaag );}else if _addggc ,_fbdbf :=_fffga .(*_cda .PdfIndirectObject );
_fbdbf {_ae .Log .Debug ("\u0025\u0054\u0020%\u0076",_addggc .PdfObject ,_addggc .PdfObject );_ae .Log .Debug ("\u0025\u0073",_addggc .PdfObject .String ());};};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_fe :=&PdfAction {};_fe ._dcg =_cda .MakeIndirectObject (_cda .MakeDict ());return _fe ;};

// A returns the value of the A component of the color.
func (_eddd *PdfColorLab )A ()float64 {return _eddd [1]};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_gafe :=&PdfAnnotation {};_gafe ._afd =_cda .MakeIndirectObject (_cda .MakeDict ());return _gafe ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_eccgb *PdfPage )ToPdfObject ()_cda .PdfObject {_cgbe :=_eccgb ._bcadb ;_eccgb .GetPageDict ();return _cgbe ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _cda .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ecgfa *PdfShadingType6 )ToPdfObject ()_cda .PdfObject {_ecgfa .PdfShading .ToPdfObject ();_cfeb ,_bcccg :=_ecgfa .getShadingDict ();if _bcccg !=nil {_ae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ecgfa .BitsPerCoordinate !=nil {_cfeb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ecgfa .BitsPerCoordinate );};if _ecgfa .BitsPerComponent !=nil {_cfeb .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ecgfa .BitsPerComponent );
};if _ecgfa .BitsPerFlag !=nil {_cfeb .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ecgfa .BitsPerFlag );};if _ecgfa .Decode !=nil {_cfeb .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ecgfa .Decode );};if _ecgfa .Function !=nil {if len (_ecgfa .Function )==1{_cfeb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ecgfa .Function [0].ToPdfObject ());
}else {_afebd :=_cda .MakeArray ();for _ ,_bdfdd :=range _ecgfa .Function {_afebd .Append (_bdfdd .ToPdfObject ());};_cfeb .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_afebd );};};return _ecgfa ._bfddc ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_ecba *PdfColorDeviceGray )GetNumComponents ()int {return 1};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);
FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);
FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26);
);

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_cccdd *LTV )EnableAll (extraCerts []*_ff .Certificate )error {_cggdg :=_cccdd ._gefbg ._ddaff .AcroForm ;for _ ,_afbd :=range _cggdg .AllFields (){_dcaf ,_ :=_afbd .GetContext ().(*PdfFieldSignature );if _dcaf ==nil {continue ;};_adggg :=_dcaf .V ;
if _gcfbb :=_cccdd .validateSig (_adggg );_gcfbb !=nil {_ae .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_gcfbb );
};if _fcbe :=_cccdd .Enable (_adggg ,extraCerts );_fcbe !=nil {return _fcbe ;};};return nil ;};func (_bcadbf *PdfReader )buildOutlineTree (_ecaf _cda .PdfObject ,_eadff *PdfOutlineTreeNode ,_eeebbc *PdfOutlineTreeNode ,_ffbb map[_cda .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _ffbb ==nil {_ffbb =map[_cda .PdfObject ]struct{}{};
};_ffbb [_ecaf ]=struct{}{};_edea ,_bfdb :=_ecaf .(*_cda .PdfIndirectObject );if !_bfdb {return nil ,nil ,_c .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_ecaf );
};_fafed ,_ebdae :=_edea .PdfObject .(*_cda .PdfObjectDictionary );if !_ebdae {return nil ,nil ,_ea .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ae .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_fafed ,_edea ,_edea );
if _dcaga :=_fafed .Get ("\u0054\u0069\u0074l\u0065");_dcaga !=nil {_bccd ,_decgf :=_bcadbf .newPdfOutlineItemFromIndirectObject (_edea );if _decgf !=nil {return nil ,nil ,_decgf ;};_bccd .Parent =_eadff ;_bccd .Prev =_eeebbc ;_gfdca :=_cda .ResolveReference (_fafed .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_adac :=_ffbb [_gfdca ];_gfdca !=nil &&_gfdca !=_edea &&!_adac {if !_cda .IsNullObject (_gfdca ){_dedea ,_bafdc ,_gbacd :=_bcadbf .buildOutlineTree (_gfdca ,&_bccd .PdfOutlineTreeNode ,nil ,_ffbb );if _gbacd !=nil {_ae .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_gbacd );
}else {_bccd .First =_dedea ;_bccd .Last =_bafdc ;};};};_adade :=_cda .ResolveReference (_fafed .Get ("\u004e\u0065\u0078\u0074"));if _ ,_dafdd :=_ffbb [_adade ];_adade !=nil &&_adade !=_edea &&!_dafdd {if !_cda .IsNullObject (_adade ){_bedbg ,_afcg ,_bbdga :=_bcadbf .buildOutlineTree (_adade ,_eadff ,&_bccd .PdfOutlineTreeNode ,_ffbb );
if _bbdga !=nil {_ae .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_bbdga );
}else {_bccd .Next =_bedbg ;return &_bccd .PdfOutlineTreeNode ,_afcg ,nil ;};};};return &_bccd .PdfOutlineTreeNode ,&_bccd .PdfOutlineTreeNode ,nil ;};_ggaag ,_afedc :=_babc (_edea );if _afedc !=nil {return nil ,nil ,_afedc ;};_ggaag .Parent =_eadff ;if _abfce :=_fafed .Get ("\u0046\u0069\u0072s\u0074");
_abfce !=nil {_abfce =_cda .ResolveReference (_abfce );if _ ,_ffgeb :=_ffbb [_abfce ];_abfce !=nil &&_abfce !=_edea &&!_ffgeb {_gcgg :=_cda .TraceToDirectObject (_abfce );if _ ,_ddagc :=_gcgg .(*_cda .PdfObjectNull );!_ddagc &&_gcgg !=nil {_cegda ,_bacfc ,_gggad :=_bcadbf .buildOutlineTree (_abfce ,&_ggaag .PdfOutlineTreeNode ,nil ,_ffbb );
if _gggad !=nil {_ae .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_gggad );
}else {_ggaag .First =_cegda ;_ggaag .Last =_bacfc ;};};};};return &_ggaag .PdfOutlineTreeNode ,&_ggaag .PdfOutlineTreeNode ,nil ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// ToPdfObject implements interface PdfModel.
func (_ffgga *PdfAnnotationRedact )ToPdfObject ()_cda .PdfObject {_ffgga .PdfAnnotation .ToPdfObject ();_fcf :=_ffgga ._afd ;_ebbd :=_fcf .PdfObject .(*_cda .PdfObjectDictionary );_ffgga .PdfAnnotationMarkup .appendToPdfDictionary (_ebbd );_ebbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_ebbd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ffgga .QuadPoints );_ebbd .SetIfNotNil ("\u0049\u0043",_ffgga .IC );_ebbd .SetIfNotNil ("\u0052\u004f",_ffgga .RO );_ebbd .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_ffgga .OverlayText );
_ebbd .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_ffgga .Repeat );_ebbd .SetIfNotNil ("\u0044\u0041",_ffgga .DA );_ebbd .SetIfNotNil ("\u0051",_ffgga .Q );return _fcf ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_bcef *Image )ToGoImage ()(_e .Image ,error ){_ae .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_acfeg ,_gbcc :=_eee .NewImage (int (_bcef .Width ),int (_bcef .Height ),int (_bcef .BitsPerComponent ),_bcef .ColorComponents ,_bcef .Data ,_bcef ._eeeg ,_bcef ._eabad );
if _gbcc !=nil {return nil ,_gbcc ;};return _acfeg ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ddaf *PdfAnnotationWatermark )ToPdfObject ()_cda .PdfObject {_ddaf .PdfAnnotation .ToPdfObject ();_bcdc :=_ddaf ._afd ;_egf :=_bcdc .PdfObject .(*_cda .PdfObjectDictionary );_egf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_egf .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_ddaf .FixedPrint );return _bcdc ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dcfef pdfFontType3 )GetCharMetrics (code _aef .CharCode )(_fd .CharMetrics ,bool ){if _bcaeg ,_effda :=_dcfef ._edeef [code ];_effda {return _fd .CharMetrics {Wx :_bcaeg },true ;};if _fd .IsStdFont (_fd .StdFontName (_dcfef ._gedd )){return _fd .CharMetrics {Wx :250},true ;
};return _fd .CharMetrics {},false ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_cda .PdfObjectArray ;ExtGState _cda .PdfObject ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_fc :=NewPdfAction ();_acd :=&PdfActionSubmitForm {};_acd .PdfAction =_fc ;_fc .SetContext (_acd );return _acd ;};func (_bcfb *DSS )add (_gaaa *[]*_cda .PdfObjectStream ,_cfcff map[string ]*_cda .PdfObjectStream ,_decb [][]byte )([]*_cda .PdfObjectStream ,error ){_fgcf :=make ([]*_cda .PdfObjectStream ,0,len (_decb ));
for _ ,_gfbcg :=range _decb {_dgcb ,_fdfee :=_agedc (_gfbcg );if _fdfee !=nil {return nil ,_fdfee ;};_ebcd ,_egdg :=_cfcff [string (_dgcb )];if !_egdg {_ebcd ,_fdfee =_cda .MakeStream (_gfbcg ,_cda .NewRawEncoder ());if _fdfee !=nil {return nil ,_fdfee ;
};_cfcff [string (_dgcb )]=_ebcd ;*_gaaa =append (*_gaaa ,_ebcd );};_fgcf =append (_fgcf ,_ebcd );};return _fgcf ,nil ;};const (_fdaf =0x00001;_fgbeb =0x00002;_egdd =0x00004;_aaccd =0x00008;_aadf =0x00020;_ddegf =0x00040;_cbcd =0x10000;_gffgg =0x20000;
_bcae =0x40000;);

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_aed *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_dfcf ,_bdfd :=color .(*PdfColorDeviceRGB );if !_bdfd {_ae .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_ea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _dfcf ,nil ;};

// Register registers (caches) a model to primitive object relationship.
func (_gbfe *modelManager )Register (primitive _cda .PdfObject ,model PdfModel ){_gbfe ._facdc [model ]=primitive ;_gbfe ._affb [primitive ]=model ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_bec :=NewPdfAnnotation ();_faf :=&PdfAnnotationFreeText {};_faf .PdfAnnotation =_bec ;_faf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bec .SetContext (_faf );return _faf ;};func _beeeg ()string {_aafcc .Lock ();
defer _aafcc .Unlock ();if len (_feeag )> 0{return _feeag ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// Encoder returns the font's text encoder.
func (_afea pdfCIDFontType0 )Encoder ()_aef .TextEncoder {return _afea ._bfcb };

// String returns a string that describes `base`.
func (_dabec fontCommon )String ()string {return _c .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_dabec .coreString ());};func (_fefbdf SignatureValidationResult )String ()string {var _cbdbb _dc .Buffer ;_cbdbb .WriteString (_c .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_fefbdf .Name ));
if _fefbdf .Date ._cgdbb > 0{_cbdbb .WriteString (_c .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_fefbdf .Date .ToGoTime ().String ()));}else {_cbdbb .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_fefbdf .Reason )> 0{_cbdbb .WriteString (_c .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_fefbdf .Reason ));}else {_cbdbb .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_fefbdf .Location )> 0{_cbdbb .WriteString (_c .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_fefbdf .Location ));}else {_cbdbb .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_fefbdf .ContactInfo )> 0{_cbdbb .WriteString (_c .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_fefbdf .ContactInfo ));}else {_cbdbb .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_cbdbb .WriteString (_c .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_fefbdf .Fields )));if _fefbdf .IsSigned {_cbdbb .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_cbdbb .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _fefbdf .IsVerified {_cbdbb .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_cbdbb .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _fefbdf .IsTrusted {_cbdbb .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_cbdbb .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_fefbdf .GeneralizedTime .IsZero (){_cbdbb .WriteString (_c .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_fefbdf .GeneralizedTime .String ()));
};return _cbdbb .String ();};

// ToPdfObject implements interface PdfModel.
func (_aaee *PdfAnnotationStrikeOut )ToPdfObject ()_cda .PdfObject {_aaee .PdfAnnotation .ToPdfObject ();_bafe :=_aaee ._afd ;_faaa :=_bafe .PdfObject .(*_cda .PdfObjectDictionary );_aaee .PdfAnnotationMarkup .appendToPdfDictionary (_faaa );_faaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_faaa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_aaee .QuadPoints );return _bafe ;};func (_egadc *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// SetPatternByName sets a pattern resource specified by keyName.
func (_ebdfg *PdfPageResources )SetPatternByName (keyName _cda .PdfObjectName ,pattern _cda .PdfObject )error {if _ebdfg .Pattern ==nil {_ebdfg .Pattern =_cda .MakeDict ();};_cgddf ,_afcaae :=_ebdfg .Pattern .(*_cda .PdfObjectDictionary );if !_afcaae {return _cda .ErrTypeError ;
};_cgddf .Set (keyName ,pattern );return nil ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_debg interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// ToPdfObject implements interface PdfModel.
func (_bef *PdfActionSetOCGState )ToPdfObject ()_cda .PdfObject {_bef .PdfAction .ToPdfObject ();_cdb :=_bef ._dcg ;_bge :=_cdb .PdfObject .(*_cda .PdfObjectDictionary );_bge .SetIfNotNil ("\u0053",_cda .MakeName (string (ActionTypeSetOCGState )));_bge .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_bef .State );
_bge .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_bef .PreserveRB );return _cdb ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// SetAnnotations sets the annotations list.
func (_aefdb *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_aefdb ._ceeaa =annotations };

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_aecg pdfFont };

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _cda .PdfObject ;Open _cda .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fbcd *PdfColorspaceDeviceCMYK )ToPdfObject ()_cda .PdfObject {return _cda .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_cda .PdfObjectString ;Author *_cda .PdfObjectString ;Subject *_cda .PdfObjectString ;Keywords *_cda .PdfObjectString ;Creator *_cda .PdfObjectString ;Producer *_cda .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;
Trapped *_cda .PdfObjectName ;_adaa *_cda .PdfObjectDictionary ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_bdad *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_cda .PdfObject )(PdfColor ,error ){if len (objects )!=_bdad .GetNumComponents (){return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ceeab ,_ddba :=_cda .GetNumbersAsFloat (objects );
if _ddba !=nil {return nil ,_ddba ;};return _bdad .ColorFromFloats (_ceeab );};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_eada :_cda .MakeIndirectObject (_cda .MakeDict ())};};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cda .PdfObject ;};var _cbedb =_cf .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");


// ToPdfObject returns the PDF representation of the shading dictionary.
func (_abbd *PdfShadingType2 )ToPdfObject ()_cda .PdfObject {_abbd .PdfShading .ToPdfObject ();_edcea ,_fgeag :=_abbd .getShadingDict ();if _fgeag !=nil {_ae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _edcea ==nil {_ae .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _abbd .Coords !=nil {_edcea .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_abbd .Coords );
};if _abbd .Domain !=nil {_edcea .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_abbd .Domain );};if _abbd .Function !=nil {if len (_abbd .Function )==1{_edcea .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_abbd .Function [0].ToPdfObject ());}else {_egafa :=_cda .MakeArray ();
for _ ,_gfce :=range _abbd .Function {_egafa .Append (_gfce .ToPdfObject ());};_edcea .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_egafa );};};if _abbd .Extend !=nil {_edcea .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_abbd .Extend );};return _abbd ._bfddc ;
};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_dffe *Image )ToJBIG2Image ()(*_cda .JBIG2Image ,error ){_fafd ,_fdded :=_dffe .ToGoImage ();if _fdded !=nil {return nil ,_fdded ;};return _cda .GoImageToJBIG2 (_fafd ,_cda .JB2ImageAutoThreshold );};func (_fcfga *PdfPattern )getDict ()*_cda .PdfObjectDictionary {if _ffdgb ,_badee :=_fcfga ._eaedcg .(*_cda .PdfIndirectObject );
_badee {_bgfd ,_dfefd :=_ffdgb .PdfObject .(*_cda .PdfObjectDictionary );if !_dfefd {return nil ;};return _bgfd ;}else if _cbff ,_cfcfcf :=_fcfga ._eaedcg .(*_cda .PdfObjectStream );_cfcfcf {return _cbff .PdfObjectDictionary ;}else {_ae .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_fcfga ._eaedcg );
return nil ;};};type pdfSignDictionary struct{*_cda .PdfObjectDictionary ;_ebeec *SignatureHandler ;_efeaeb *PdfSignature ;_adgga int64 ;_cdbg int ;_cbadg int ;_geabc int ;_adfd int ;};func (_caa *PdfReader )newPdfActionSoundFromDict (_eabg *_cda .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_eabg .Get ("\u0053\u006f\u0075n\u0064"),Volume :_eabg .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_eabg .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_eabg .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_eabg .Get ("\u004d\u0069\u0078")},nil ;
};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_dface *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};func (_cdefc *PdfReader )newPdfOutlineItemFromIndirectObject (_dddce *_cda .PdfIndirectObject )(*PdfOutlineItem ,error ){_abfcc ,_ceffc :=_dddce .PdfObject .(*_cda .PdfObjectDictionary );
if !_ceffc {return nil ,_c .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_beab :=NewPdfOutlineItem ();_afcda :=_abfcc .Get ("\u0054\u0069\u0074l\u0065");
if _afcda ==nil {return nil ,_c .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_ecdec ,_feeb :=_cda .GetString (_afcda );if !_feeb {return nil ,_c .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_afcda );};_beab .Title =_ecdec ;if _bbce :=_abfcc .Get ("\u0043\u006f\u0075n\u0074");
_bbce !=nil {_efcb ,_ecbd :=_bbce .(*_cda .PdfObjectInteger );if !_ecbd {return nil ,_c .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_bbce );};_fcgde :=int64 (*_efcb );
_beab .Count =&_fcgde ;};if _feeaf :=_abfcc .Get ("\u0044\u0065\u0073\u0074");_feeaf !=nil {_beab .Dest =_cda .ResolveReference (_feeaf );if !_cdefc ._fdgef {_decbd :=_cdefc .traverseObjectData (_beab .Dest );if _decbd !=nil {return nil ,_decbd ;};};};
if _fcfdc :=_abfcc .Get ("\u0041");_fcfdc !=nil {_beab .A =_cda .ResolveReference (_fcfdc );if !_cdefc ._fdgef {_cdefcg :=_cdefc .traverseObjectData (_beab .A );if _cdefcg !=nil {return nil ,_cdefcg ;};};};if _ggge :=_abfcc .Get ("\u0053\u0045");_ggge !=nil {_beab .SE =nil ;
};if _cdff :=_abfcc .Get ("\u0043");_cdff !=nil {_beab .C =_cda .ResolveReference (_cdff );};if _ebcdc :=_abfcc .Get ("\u0046");_ebcdc !=nil {_beab .F =_cda .ResolveReference (_ebcdc );};return _beab ,nil ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_ebdfe :=PdfColorCalGray (grayVal );return &_ebdfe ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_cbbec *PdfField )SetContext (ctx PdfModel ){_cbbec ._dccg =ctx };

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_dabbc *Image )ConvertToBinary ()error {if _dabbc .ColorComponents ==1&&_dabbc .BitsPerComponent ==1{return nil ;};_adbfd ,_efcab :=_dabbc .ToGoImage ();if _efcab !=nil {return _efcab ;};_afbgf ,_efcab :=_eee .MonochromeConverter .Convert (_adbfd );
if _efcab !=nil {return _efcab ;};_dabbc .Data =_afbgf .Base ().Data ;_dabbc ._eeeg ,_efcab =_eee .ScaleAlphaToMonochrome (_dabbc ._eeeg ,int (_dabbc .Width ),int (_dabbc .Height ));if _efcab !=nil {return _efcab ;};_dabbc .BitsPerComponent =1;_dabbc .ColorComponents =1;
_dabbc ._eabad =nil ;return nil ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_dcaaa *PdfPage )GetContentStreamObjs ()[]_cda .PdfObject {if _dcaaa .Contents ==nil {return nil ;};_aaegd :=_cda .TraceToDirectObject (_dcaaa .Contents );if _dfeda ,_ddag :=_aaegd .(*_cda .PdfObjectArray );_ddag {return _dfeda .Elements ();};return []_cda .PdfObject {_aaegd };
};

// Items returns all children outline items.
func (_aedad *Outline )Items ()[]*OutlineItem {return _aedad .Entries };

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cda .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_agdb *PdfAnnotationRichMedia )ToPdfObject ()_cda .PdfObject {_agdb .PdfAnnotation .ToPdfObject ();_aadg :=_agdb ._afd ;_fgca :=_aadg .PdfObject .(*_cda .PdfObjectDictionary );_fgca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_fgca .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_agdb .RichMediaSettings );_fgca .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_agdb .RichMediaContent );
return _aadg ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_agbce *PdfFont )BytesToCharcodes (data []byte )[]_aef .CharCode {_ae .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _bbfcg ,_acfbf :=_agbce ._aecg .(*pdfFontType0 );_acfbf &&_bbfcg ._feba !=nil {if _dagg ,_bebb :=_bbfcg .bytesToCharcodes (data );_bebb {return _dagg ;};};_eaefe :=make ([]_aef .CharCode ,0,len (data )+len (data )%2);if _agbce .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _dbdfe :=0;_dbdfe < len (data );_dbdfe +=2{_eebg :=uint16 (data [_dbdfe ])<<8|uint16 (data [_dbdfe +1]);_eaefe =append (_eaefe ,_aef .CharCode (_eebg ));};}else {for _ ,_cfab :=range data {_eaefe =append (_eaefe ,_aef .CharCode (_cfab ));
};};return _eaefe ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_cda .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_cda .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_cda .PdfObjectBool ;_gbee PdfModel ;_bfddc _cda .PdfObject ;};func (_ecg *PdfReader )newPdfActionNamedFromDict (_cdee *_cda .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_cdee .Get ("\u004e")},nil ;
};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_effc *LTV )EnableChain (chain []*_ff .Certificate )error {return _effc .enable (nil ,chain ,"")};func (_aaddg *LTV )validateSig (_afeef *PdfSignature )error {if _afeef ==nil ||_afeef .Contents ==nil ||len (_afeef .Contents .Bytes ())==0{return _c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_afeef );
};return nil ;};

// String implements interface PdfObject.
func (_eab *PdfAction )String ()string {_ec ,_dec :=_eab .ToPdfObject ().(*_cda .PdfIndirectObject );if _dec {return _c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_eab ._gd ,_ec .PdfObject .String ());};return "";};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_gdba *PdfPageResources )GetXObjectFormByName (keyName _cda .PdfObjectName )(*XObjectForm ,error ){_dafb ,_fabf :=_gdba .GetXObjectByName (keyName );if _dafb ==nil {return nil ,nil ;};if _fabf !=XObjectTypeForm {return nil ,_ea .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_ggddc ,_dbdb :=NewXObjectFormFromStream (_dafb );if _dbdb !=nil {return nil ,_dbdb ;};return _ggddc ,nil ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_cda .PdfObject ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_bbgec *PdfReader )GetTrailer ()(*_cda .PdfObjectDictionary ,error ){_cgga :=_bbgec ._gaedg .GetTrailer ();if _cgga ==nil {return nil ,_ea .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _cgga ,nil ;
};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_aaag *PdfFieldButton )SetType (btype ButtonType ){_fffbb :=uint32 (0);if _aaag .Ff !=nil {_fffbb =uint32 (*_aaag .Ff );};switch btype {case ButtonTypePush :_fffbb |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_fffbb |=FieldFlagRadio .Mask ();
};_aaag .Ff =_cda .MakeInteger (int64 (_fffbb ));};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_ggcb ,_fbcbf :=_eg .Open (filePath );if _fbcbf !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_fbcbf );
return nil ,_fbcbf ;};defer _ggcb .Close ();return NewPdfFontFromTTF (_ggcb );};func (_gggc *PdfReader )newPdfActionHideFromDict (_cea *_cda .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_cea .Get ("\u0054"),H :_cea .Get ("\u0048")},nil ;
};

// Encoder returns the font's text encoder.
func (_gbdcd pdfFontType0 )Encoder ()_aef .TextEncoder {return _gbdcd ._fbbce };var _cgaaee =false ;

// String returns a string that describes `font`.
func (_ffbaf *PdfFont )String ()string {_bgdb :="";if _ffbaf ._aecg .Encoder ()!=nil {_bgdb =_ffbaf ._aecg .Encoder ().String ();};return _c .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_ffbaf ._aecg ,_ffbaf .baseFields ().coreString (),_bgdb );
};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _cda .PdfObjectArray )(*PdfRectangle ,error ){_gdbgbg :=PdfRectangle {};if arr .Len ()!=4{return nil ,_ea .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _bbga error ;_gdbgbg .Llx ,_bbga =_cda .GetNumberAsFloat (arr .Get (0));if _bbga !=nil {return nil ,_bbga ;};_gdbgbg .Lly ,_bbga =_cda .GetNumberAsFloat (arr .Get (1));if _bbga !=nil {return nil ,_bbga ;};_gdbgbg .Urx ,_bbga =_cda .GetNumberAsFloat (arr .Get (2));
if _bbga !=nil {return nil ,_bbga ;};_gdbgbg .Ury ,_bbga =_cda .GetNumberAsFloat (arr .Get (3));if _bbga !=nil {return nil ,_bbga ;};return &_gdbgbg ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_babb *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_cda .PdfObject )(PdfColor ,error ){if _babb .Alternate ==nil {if _babb .N ==1{_eaec :=NewPdfColorspaceDeviceGray ();return _eaec .ColorFromPdfObjects (objects );}else if _babb .N ==3{_baccc :=NewPdfColorspaceDeviceRGB ();
return _baccc .ColorFromPdfObjects (objects );}else if _babb .N ==4{_bddc :=NewPdfColorspaceDeviceCMYK ();return _bddc .ColorFromPdfObjects (objects );}else {return nil ,_ea .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _babb .Alternate .ColorFromPdfObjects (objects );};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_cda .PdfObjectDictionary )(*PdfPageResources ,error ){_bfggg :=NewPdfPageResources ();if _cdcbbd :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_cdcbbd !=nil {_bfggg .ExtGState =_cdcbbd ;};if _fdcc :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_fdcc !=nil &&!_cda .IsNullObject (_fdcc ){_bfggg .ColorSpace =_fdcc ;};if _eecba :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_eecba !=nil {_bfggg .Pattern =_eecba ;};if _ddggd :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_ddggd !=nil {_bfggg .Shading =_ddggd ;
};if _eafcg :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_eafcg !=nil {_bfggg .XObject =_eafcg ;};if _dgaad :=_cda .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_dgaad !=nil {_bfggg .Font =_dgaad ;};if _fcefc :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_fcefc !=nil {_bfggg .ProcSet =_fcefc ;};if _fcbdd :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_fcbdd !=nil {_bfggg .Properties =_fcbdd ;};return _bfggg ,nil ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_afed *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _afed ._babfg ==nil {_afed ._babfg =_fbd .NewPSExecutor (_afed .Program );};var _bfdfe []_fbd .PSObject ;for _ ,_debea :=range xVec {_bfdfe =append (_bfdfe ,_fbd .MakeReal (_debea ));
};_ddcf ,_bgaa :=_afed ._babfg .Execute (_bfdfe );if _bgaa !=nil {return nil ,_bgaa ;};_fcegb ,_bgaa :=_fbd .PSObjectArrayToFloat64Array (_ddcf );if _bgaa !=nil {return nil ,_bgaa ;};return _fcegb ,nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_bab *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_cda .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adef ,_fbebd :=_cda .GetNumbersAsFloat (objects );
if _fbebd !=nil {return nil ,_fbebd ;};return _bab .ColorFromFloats (_adef );};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_aaagaa *PdfPageResources )GetFontByName (keyName _cda .PdfObjectName )(_cda .PdfObject ,bool ){if _aaagaa .Font ==nil {return nil ,false ;};_cgdcb ,_agcge :=_cda .TraceToDirectObject (_aaagaa .Font ).(*_cda .PdfObjectDictionary );if !_agcge {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cda .TraceToDirectObject (_aaagaa .Font ));
return nil ,false ;};if _dcddg :=_cgdcb .Get (keyName );_dcddg !=nil {return _dcddg ,true ;};return nil ,false ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_geadf *PdfOutlineTreeNode )GetContext ()PdfModel {if _gfega ,_abde :=_geadf ._debg .(*PdfOutline );_abde {return _gfega ;};if _affc ,_eeedf :=_geadf ._debg .(*PdfOutlineItem );_eeedf {return _affc ;};_ae .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_dfaaf int ,_degce *PdfPage );

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_caegd *PdfShading )GetContainingPdfObject ()_cda .PdfObject {return _caegd ._bfddc };

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_beeg *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_cda .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcfa ,_bgdeg :=_cda .GetNumbersAsFloat (objects );
if _bgdeg !=nil {return nil ,_bgdeg ;};return _beeg .ColorFromFloats (_gcfa );};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _dd .Permissions ;Algorithm EncryptionAlgorithm ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _cda .PdfObject ;T3DV _cda .PdfObject ;T3DA _cda .PdfObject ;T3DI _cda .PdfObject ;T3DB _cda .PdfObject ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_cda .PdfObjectArray ;Matrix *_cda .PdfObjectArray ;Function []PdfFunction ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_egbb ,_efba :=_fcafe (basefont );if _efba !=nil {return nil ,_efba ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_egbb ._dcag =_aef .NewWinAnsiEncoder ();};return &PdfFont {_aecg :&_egbb },nil ;
};func (_cdeg *PdfReader )newPdfAnnotationCaretFromDict (_gfbg *_cda .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_ebbe :=PdfAnnotationCaret {};_adgg ,_cggc :=_cdeg .newPdfAnnotationMarkupFromDict (_gfbg );if _cggc !=nil {return nil ,_cggc ;};_ebbe .PdfAnnotationMarkup =_adgg ;
_ebbe .RD =_gfbg .Get ("\u0052\u0044");_ebbe .Sy =_gfbg .Get ("\u0053\u0079");return &_ebbe ,nil ;};func (_dgb *PdfReader )newPdfAnnotationPolyLineFromDict (_gaac *_cda .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_abe :=PdfAnnotationPolyLine {};
_bgcg ,_bcdd :=_dgb .newPdfAnnotationMarkupFromDict (_gaac );if _bcdd !=nil {return nil ,_bcdd ;};_abe .PdfAnnotationMarkup =_bgcg ;_abe .Vertices =_gaac .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_abe .LE =_gaac .Get ("\u004c\u0045");_abe .BS =_gaac .Get ("\u0042\u0053");
_abe .IC =_gaac .Get ("\u0049\u0043");_abe .BE =_gaac .Get ("\u0042\u0045");_abe .IT =_gaac .Get ("\u0049\u0054");_abe .Measure =_gaac .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_abe ,nil ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_ggdda *PdfRectangle )Normalize (){if _ggdda .Llx > _ggdda .Urx {_ggdda .Llx ,_ggdda .Urx =_ggdda .Urx ,_ggdda .Llx ;};if _ggdda .Lly > _ggdda .Ury {_ggdda .Lly ,_ggdda .Ury =_ggdda .Ury ,_ggdda .Lly ;};};

// ToPdfObject implements interface PdfModel.
func (_acf *PdfActionGoTo3DView )ToPdfObject ()_cda .PdfObject {_acf .PdfAction .ToPdfObject ();_bdg :=_acf ._dcg ;_bgd :=_bdg .PdfObject .(*_cda .PdfObjectDictionary );_bgd .SetIfNotNil ("\u0053",_cda .MakeName (string (ActionTypeGoTo3DView )));_bgd .SetIfNotNil ("\u0054\u0041",_acf .TA );
_bgd .SetIfNotNil ("\u0056",_acf .V );return _bdg ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bfgaa *PdfShadingType4 )ToPdfObject ()_cda .PdfObject {_bfgaa .PdfShading .ToPdfObject ();_gafbd ,_bgbfe :=_bfgaa .getShadingDict ();if _bgbfe !=nil {_ae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bfgaa .BitsPerCoordinate !=nil {_gafbd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bfgaa .BitsPerCoordinate );};if _bfgaa .BitsPerComponent !=nil {_gafbd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bfgaa .BitsPerComponent );
};if _bfgaa .BitsPerFlag !=nil {_gafbd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bfgaa .BitsPerFlag );};if _bfgaa .Decode !=nil {_gafbd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bfgaa .Decode );};if _bfgaa .Function !=nil {if len (_bfgaa .Function )==1{_gafbd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bfgaa .Function [0].ToPdfObject ());
}else {_abfed :=_cda .MakeArray ();for _ ,_fffc :=range _bfgaa .Function {_abfed .Append (_fffc .ToPdfObject ());};_gafbd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_abfed );};};return _bfgaa ._bfddc ;};

// ToPdfObject convert PdfInfo to pdf object.
func (_aaeab *PdfInfo )ToPdfObject ()_cda .PdfObject {_acbf :=_cda .MakeDict ();_acbf .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_aaeab .Title );_acbf .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_aaeab .Author );_acbf .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_aaeab .Subject );
_acbf .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_aaeab .Keywords );_acbf .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_aaeab .Creator );_acbf .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_aaeab .Producer );
_acbf .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_aaeab .Trapped );if _aaeab .CreationDate !=nil {_acbf .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_aaeab .CreationDate .ToPdfObject ());};if _aaeab .ModifiedDate !=nil {_acbf .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_aaeab .ModifiedDate .ToPdfObject ());
};for _ ,_eaeb :=range _aaeab ._adaa .Keys (){_acbf .SetIfNotNil (_eaeb ,_aaeab ._adaa .Get (_eaeb ));};return _acbf ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_gcea *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gcea .Base ==nil {return nil ,_ea .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _gcea .Base .ColorToRGB (color );};

// Mask returns the uin32 bitmask for the specific flag.
func (_bbaad FieldFlag )Mask ()uint32 {return uint32 (_bbaad )};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _cda .PdfObject ;};func _cdebe ()string {_aafcc .Lock ();defer _aafcc .Unlock ();return _afcga };func _gddad (_aaeb *_cda .PdfObjectDictionary )(*PdfFieldChoice ,error ){_egegb :=&PdfFieldChoice {};
_egegb .Opt ,_ =_cda .GetArray (_aaeb .Get ("\u004f\u0070\u0074"));_egegb .TI ,_ =_cda .GetInt (_aaeb .Get ("\u0054\u0049"));_egegb .I ,_ =_cda .GetArray (_aaeb .Get ("\u0049"));return _egegb ,nil ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _cda .PdfObject ;MK _cda .PdfObject ;A _cda .PdfObject ;AA _cda .PdfObject ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _cda .PdfObject ;MK _cda .PdfObject ;A _cda .PdfObject ;AA _cda .PdfObject ;BS _cda .PdfObject ;Parent _cda .PdfObject ;_cba *PdfField ;_bgc bool ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_eg .File ,error ){const _agdeb ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_fggdc ,_cfcdf :=_eg .Open (pdfFile );if _cfcdf !=nil {return nil ,nil ,_cfcdf ;};_bbdec ,_cfcdf :=_dagae (_fggdc ,opts ,true ,_agdeb );if _cfcdf !=nil {_fggdc .Close ();return nil ,nil ,_cfcdf ;};return _bbdec ,_fggdc ,nil ;};func _dagae (_ggebe _cd .ReadSeeker ,_eegec *ReaderOpts ,_egedc bool ,_cafbc string )(*PdfReader ,error ){if _eegec ==nil {_eegec =NewReaderOpts ();
};_gbcgg :=&PdfReader {_dgbee :_ggebe ,_abffb :map[_cda .PdfObject ]struct{}{},_bbgffg :_febbgc (),_fdgef :_eegec .LazyLoad };_abecea ,_fccce :=_efgbc ("\u0072");if _fccce !=nil {return nil ,_fccce ;};_fccce =_ffc .Track (_abecea ,_cafbc );if _fccce !=nil {return nil ,_fccce ;
};_gbcgg ._aaddf =_abecea ;_fedff ,_fccce :=_cda .NewParser (_ggebe );if _fccce !=nil {return nil ,_fccce ;};_gbcgg ._gaedg =_fedff ;_cecae ,_fccce :=_gbcgg .IsEncrypted ();if _fccce !=nil {return nil ,_fccce ;};if !_cecae {_fccce =_gbcgg .loadStructure ();
if _fccce !=nil {return nil ,_fccce ;};}else if _egedc {_ebefd ,_gcfg :=_gbcgg .Decrypt ([]byte (_eegec .Password ));if _gcfg !=nil {return nil ,_gcfg ;};if !_ebefd {return nil ,_ea .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};return _gbcgg ,nil ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _cda .PdfObject ;};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _cda .PdfObject ;NewWindow _cda .PdfObject ;T _cda .PdfObject ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _cda .PdfObject ;B _cda .PdfObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_egag *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_cda .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afcb ,_deec :=_cda .GetNumbersAsFloat (objects );
if _deec !=nil {return nil ,_deec ;};return _egag .ColorFromFloats (_afcb );};

// GetAction returns the PDF action for the annotation link.
func (_gcee *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _gcee ._ecf !=nil {return _gcee ._ecf ,nil ;};if _gcee .A ==nil {return nil ,nil ;};if _gcee ._fecf ==nil {return nil ,nil ;};_gace ,_adgd :=_gcee ._fecf .loadAction (_gcee .A );if _adgd !=nil {return nil ,_adgd ;
};_gcee ._ecf =_gace ;return _gcee ._ecf ,nil ;};func (_cbed *Image )samplesAddPadding (_cgfbb []uint32 )[]uint32 {_eefb :=_eee .BytesPerLine (int (_cbed .Width ),int (_cbed .BitsPerComponent ),_cbed .ColorComponents )*(8/int (_cbed .BitsPerComponent ));
_edef :=_eefb *int (_cbed .Height );if len (_cgfbb )==_edef {return _cgfbb ;};_gadfd :=make ([]uint32 ,_edef );_acgfd :=int (_cbed .Width )*_cbed .ColorComponents ;for _aeda :=0;_aeda < int (_cbed .Height );_aeda ++{_fgbg :=_aeda *int (_cbed .Width );_bacgg :=_aeda *_eefb ;
for _agaacf :=0;_agaacf < _acgfd ;_agaacf ++{_gadfd [_bacgg +_agaacf ]=_cgfbb [_fgbg +_agaacf ];};};return _gadfd ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_agebb *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_agebb .HiVal )};};func _cccag ()_be .Time {_aafcc .Lock ();defer _aafcc .Unlock ();return _dbdce };

// GetPdfInfo returns the PDF info dictionary.
func (_agadeg *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_gfacf :=PdfInfo {};_eade ,_ebge :=_agadeg .GetTrailer ();if _ebge !=nil {return nil ,_ebge ;};var _dfdd *_cda .PdfObjectDictionary ;_cdga :=_eade .Get ("\u0049\u006e\u0066\u006f");switch _bgcc :=_cdga .(type ){case *_cda .PdfObjectReference :_dabge :=_bgcc ;
_cdga ,_ebge =_agadeg .GetIndirectObjectByNumber (int (_dabge .ObjectNumber ));_cdga =_cda .TraceToDirectObject (_cdga );if _ebge !=nil {return nil ,_ebge ;};_dfdd ,_ =_cdga .(*_cda .PdfObjectDictionary );case *_cda .PdfObjectDictionary :_dfdd =_bgcc ;
};if _dfdd ==nil {return nil ,_ea .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};for _ ,_edfab :=range _dfdd .Keys (){switch _edfab {case "\u0054\u0069\u0074l\u0065":_gfacf .Title ,_ =_cda .GetString (_dfdd .Get ("\u0054\u0069\u0074l\u0065"));
case "\u0041\u0075\u0074\u0068\u006f\u0072":_gfacf .Author ,_ =_cda .GetString (_dfdd .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));case "\u0053u\u0062\u006a\u0065\u0063\u0074":_gfacf .Subject ,_ =_cda .GetString (_dfdd .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));
case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_gfacf .Keywords ,_ =_cda .GetString (_dfdd .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));case "\u0043r\u0065\u0061\u0074\u006f\u0072":_gfacf .Creator ,_ =_cda .GetString (_dfdd .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));
case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_gfacf .Producer ,_ =_cda .GetString (_dfdd .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));case "\u0054r\u0061\u0070\u0070\u0065\u0064":_gfacf .Trapped ,_ =_cda .GetName (_dfdd .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));
case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _gfegb ,_aaddgb :=_cda .GetString (_dfdd .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));_aaddgb &&_gfegb .String ()!=""{_cafa ,_cgdbc :=NewPdfDate (_gfegb .String ());
if _cgdbc !=nil {return nil ,_cgdbc ;};_gfacf .CreationDate =&_cafa ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _egec ,_begde :=_cda .GetString (_dfdd .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_begde &&_egec .String ()!=""{_dbbdf ,_gbfg :=NewPdfDate (_egec .String ());
if _gbfg !=nil {return nil ,_gbfg ;};_gfacf .ModifiedDate =&_dbbdf ;};default:_deggf ,_ :=_cda .GetString (_dfdd .Get (_edfab ));if _gfacf ._adaa ==nil {_gfacf ._adaa =_cda .MakeDict ();};_gfacf ._adaa .Set (_edfab ,_deggf );};};return &_gfacf ,nil ;};
func (_ggb *PdfAppender )replaceObject (_afbg ,_dag _cda .PdfObject ){switch _eacb :=_afbg .(type ){case *_cda .PdfIndirectObject :_ggb ._cebg [_dag ]=_eacb .ObjectNumber ;case *_cda .PdfObjectStream :_ggb ._cebg [_dag ]=_eacb .ObjectNumber ;};};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _cda .PdfObject ;Flags _cda .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_ebe *PdfAnnotationUnderline )ToPdfObject ()_cda .PdfObject {_ebe .PdfAnnotation .ToPdfObject ();_cbef :=_ebe ._afd ;_aae :=_cbef .PdfObject .(*_cda .PdfObjectDictionary );_ebe .PdfAnnotationMarkup .appendToPdfDictionary (_aae );_aae .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_aae .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ebe .QuadPoints );return _cbef ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _cda .PdfObject ;Movie _cda .PdfObject ;A _cda .PdfObject ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_dgca *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_cg :=NewPdfAction ();_fbe :=&PdfActionGoToR {};_fbe .PdfAction =_cg ;_cg .SetContext (_fbe );return _fbe ;};func (_facac *PdfWriter )writeBytes (_dcgfd []byte ){if _facac ._dgef !=nil {return ;};_cdabd ,_abeae :=_facac ._abgca .Write (_dcgfd );
_facac ._gdbec +=int64 (_cdabd );_facac ._dgef =_abeae ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_fde :=NewPdfAnnotation ();_eff :=&PdfAnnotationFileAttachment {};_eff .PdfAnnotation =_fde ;_eff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fde .SetContext (_eff );return _eff ;};


// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _cda .PdfObject ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_ade :=NewPdfAnnotation ();_bdgc :=&PdfAnnotationLine {};_bdgc .PdfAnnotation =_ade ;_bdgc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ade .SetContext (_bdgc );return _bdgc ;};func (_gbbf *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};
func (_dedgb *PdfReader )lookupPageByObject (_gbbfb _cda .PdfObject )(*PdfPage ,error ){return nil ,_ea .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_bffgg *PdfFieldButton )IsPush ()bool {return _bffgg .GetType ()==ButtonTypePush };

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_gddb *PdfOutline )GetContainingPdfObject ()_cda .PdfObject {return _gddb ._cfbd };

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;};

// GetNumPages returns the number of pages in the document.
func (_bbfeb *PdfReader )GetNumPages ()(int ,error ){if _bbfeb ._gaedg .GetCrypter ()!=nil &&!_bbfeb ._gaedg .IsAuthenticated (){return 0,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_bbfeb ._gbdee ),nil ;};func _efff (_gfbged *PdfField ,_dgfea _cda .PdfObject )error {switch _gfbged .GetContext ().(type ){case *PdfFieldText :switch _fbeab :=_dgfea .(type ){case *_cda .PdfObjectName :_cdddb :=_fbeab ;_ae .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_cdddb .String ());
_gfbged .V =_cda .MakeEncodedString (_fbeab .String (),true );case *_cda .PdfObjectString :_gfbged .V =_cda .MakeEncodedString (_fbeab .String (),true );default:_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_fbeab ,_fbeab );
};case *PdfFieldButton :switch _dgfea .(type ){case *_cda .PdfObjectName :if len (_dgfea .String ())> 0{_gfbged .V =_dgfea ;_cfaec (_gfbged ,_dgfea );};case *_cda .PdfObjectString :if len (_dgfea .String ())> 0{_gfbged .V =_cda .MakeName (_dgfea .String ());
_cfaec (_gfbged ,_gfbged .V );};default:_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_gfbged .PartialName (),_dgfea );_gfbged .V =_dgfea ;
};case *PdfFieldChoice :switch _dgfea .(type ){case *_cda .PdfObjectName :if len (_dgfea .String ())> 0{_gfbged .V =_cda .MakeString (_dgfea .String ());_cfaec (_gfbged ,_dgfea );};case *_cda .PdfObjectString :if len (_dgfea .String ())> 0{_gfbged .V =_dgfea ;
_cfaec (_gfbged ,_cda .MakeName (_dgfea .String ()));};default:_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_gfbged .PartialName (),_dgfea );
_gfbged .V =_dgfea ;};case *PdfFieldSignature :_ae .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_gfbged .PartialName (),_dgfea );
};return nil ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_cgcc :=NewPdfAnnotation ();_ggc :=&PdfAnnotationText {};_ggc .PdfAnnotation =_cgcc ;_ggc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgcc .SetContext (_ggc );return _ggc ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_dffb :=&PdfAppender {_deb :reader ._dgbee ,Reader :reader ,_gbdg :reader ._gaedg ,_fgeb :reader ._abffb };_bedfg ,_cddd :=_dffb ._deb .Seek (0,_cd .SeekEnd );if _cddd !=nil {return nil ,_cddd ;
};_dffb ._gbe =_bedfg ;if _ ,_cddd =_dffb ._deb .Seek (0,_cd .SeekStart );_cddd !=nil {return nil ,_cddd ;};_dffb ._ddaff ,_cddd =NewPdfReader (_dffb ._deb );if _cddd !=nil {return nil ,_cddd ;};for _ ,_bcad :=range _dffb .Reader .GetObjectNums (){if _dffb ._ggeb < _bcad {_dffb ._ggeb =_bcad ;
};};_dffb ._aage =_dffb ._gbdg .GetXrefTable ();_dffb ._gfdd =_dffb ._gbdg .GetXrefOffset ();_dffb ._cafc =append (_dffb ._cafc ,_dffb ._ddaff .PageList ...);_dffb ._dece =make (map[_cda .PdfObject ]struct{});_dffb ._cebg =make (map[_cda .PdfObject ]int64 );
_dffb ._bca =make (map[_cda .PdfObject ]struct{});_dffb ._degb =_dffb ._ddaff .AcroForm ;_dffb ._eeee =_dffb ._ddaff .DSS ;return _dffb ,nil ;};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_fbbdcf *PdfWriter )SetNamedDestinations (dests _cda .PdfObject )error {if dests ==nil {return nil ;};_ae .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_fbbdcf ._bgafe .Set ("\u0044\u0065\u0073t\u0073",dests );return _fbbdcf .addObjects (dests );};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_cabgd *_cda .PdfIndirectObject ;Certs []*_cda .PdfObjectStream ;OCSPs []*_cda .PdfObjectStream ;CRLs []*_cda .PdfObjectStream ;VRI map[string ]*VRI ;_abad map[string ]*_cda .PdfObjectStream ;_efcf map[string ]*_cda .PdfObjectStream ;_gceb map[string ]*_cda .PdfObjectStream ;
};

// ToInteger convert to an integer format.
func (_daag *PdfColorDeviceGray )ToInteger (bits int )uint32 {_eaee :=_ba .Pow (2,float64 (bits ))-1;return uint32 (_eaee *_daag .Val ());};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_age :=NewPdfAnnotation ();_ced :=&PdfAnnotationPopup {};_ced .PdfAnnotation =_age ;_age .SetContext (_ced );return _ced ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_bdadd *Image )SetSamples (samples []uint32 ){if _bdadd .BitsPerComponent < 8{samples =_bdadd .samplesAddPadding (samples );};_babg :=_bed .ResampleUint32 (samples ,int (_bdadd .BitsPerComponent ),8);_feceb :=make ([]byte ,len (_babg ));for _agde ,_aegg :=range _babg {_feceb [_agde ]=byte (_aegg );
};_bdadd .Data =_feceb ;};var _faef =_cf .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");func _feabf (_cdac *_cda .PdfObjectDictionary ,_fgbb *fontCommon )(*pdfCIDFontType2 ,error ){if _fgbb ._fceb !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_ae .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_fgbb );
return nil ,_cda .ErrRangeError ;};_decaa :=_gbcg (_fgbb );_fbdfb ,_eafea :=_cda .GetDict (_cdac .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_eafea {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_fgbb );
return nil ,ErrRequiredAttributeMissing ;};_decaa .CIDSystemInfo =_fbdfb ;_decaa .DW =_cdac .Get ("\u0044\u0057");_decaa .W =_cdac .Get ("\u0057");_decaa .DW2 =_cdac .Get ("\u0044\u0057\u0032");_decaa .W2 =_cdac .Get ("\u0057\u0032");_decaa .CIDToGIDMap =_cdac .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_decaa ._cfde =1000.0;if _febad ,_abgef :=_cda .GetNumberAsFloat (_decaa .DW );_abgef ==nil {_decaa ._cfde =_febad ;};_gdfg ,_dagcg :=_deada (_decaa .W );if _dagcg !=nil {return nil ,_dagcg ;};if _gdfg ==nil {_gdfg =map[_aef .CharCode ]float64 {};};_decaa ._geag =_gdfg ;
return _decaa ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_dbff *PdfColorspaceLab )ColorFromPdfObjects (objects []_cda .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fddb ,_abff :=_cda .GetNumbersAsFloat (objects );
if _abff !=nil {return nil ,_abff ;};return _dbff .ColorFromFloats (_fddb );};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_gbgb :=&PdfColorspaceDeviceN {};return _gbgb };

// GetCerts returns the signature certificate chain.
func (_egdgd *PdfSignature )GetCerts ()([]*_ff .Certificate ,error ){var _fccbc []func ()([]*_ff .Certificate ,error );switch _edefb ,_ :=_cda .GetNameVal (_egdgd .SubFilter );_edefb {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_fccbc =append (_fccbc ,_egdgd .extractChainFromPKCS7 ,_egdgd .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_fccbc =append (_fccbc ,_egdgd .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_fccbc =append (_fccbc ,_egdgd .extractChainFromPKCS7 );
default:return nil ,_c .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_edefb );};for _ ,_cdbfec :=range _fccbc {_dfdabe ,_bbefdg :=_cdbfec ();if _bbefdg !=nil {return nil ,_bbefdg ;
};if len (_dfdabe )> 0{return _dfdabe ,nil ;};};return nil ,ErrSignNoCertificates ;};func _dagdg (_eaccb _cda .PdfObject ,_dbfd *fontCommon )(*_db .CMap ,error ){_fagd ,_aecc :=_cda .GetStream (_eaccb );if !_aecc {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_eaccb );
return nil ,_cda .ErrTypeError ;};_gecg ,_becdc :=_cda .DecodeStream (_fagd );if _becdc !=nil {return nil ,_becdc ;};_ecae ,_becdc :=_db .LoadCmapFromData (_gecg ,!_dbfd .isCIDFont ());if _becdc !=nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_fagd .ObjectNumber ,_becdc );
};return _ecae ,_becdc ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_bbg :=NewPdfAction ();_aea :=&PdfActionJavaScript {};_aea .PdfAction =_bbg ;_bbg .SetContext (_aea );return _aea ;};func _becbb (_ecgb _cda .PdfObject )(*PdfColorspaceDeviceN ,error ){_babba :=NewPdfColorspaceDeviceN ();
if _ffbc ,_badb :=_ecgb .(*_cda .PdfIndirectObject );_badb {_babba ._cdfe =_ffbc ;};_ecgb =_cda .TraceToDirectObject (_ecgb );_ecgd ,_cefb :=_ecgb .(*_cda .PdfObjectArray );if !_cefb {return nil ,_c .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _ecgd .Len ()!=4&&_ecgd .Len ()!=5{return nil ,_c .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_ecgb =_ecgd .Get (0);
_gaag ,_cefb :=_ecgb .(*_cda .PdfObjectName );if !_cefb {return nil ,_c .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_gaag !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_c .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_ecgb =_ecgd .Get (1);
_ecgb =_cda .TraceToDirectObject (_ecgb );_acff ,_cefb :=_ecgb .(*_cda .PdfObjectArray );if !_cefb {return nil ,_c .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_babba .ColorantNames =_acff ;_ecgb =_ecgd .Get (2);_dgfe ,_dcgga :=NewPdfColorspaceFromPdfObject (_ecgb );if _dcgga !=nil {return nil ,_dcgga ;};_babba .AlternateSpace =_dgfe ;_bcgb ,_dcgga :=_facff (_ecgd .Get (3));if _dcgga !=nil {return nil ,_dcgga ;
};_babba .TintTransform =_bcgb ;if _ecgd .Len ()==5{_beccf ,_fage :=_ddad (_ecgd .Get (4));if _fage !=nil {return nil ,_fage ;};_babba .Attributes =_beccf ;};return _babba ,nil ;};func (_cbcf *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};


// ToPdfObject implements interface PdfModel.
func (_acgg *PdfActionSound )ToPdfObject ()_cda .PdfObject {_acgg .PdfAction .ToPdfObject ();_def :=_acgg ._dcg ;_gfc :=_def .PdfObject .(*_cda .PdfObjectDictionary );_gfc .SetIfNotNil ("\u0053",_cda .MakeName (string (ActionTypeSound )));_gfc .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_acgg .Sound );
_gfc .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_acgg .Volume );_gfc .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_acgg .Synchronous );_gfc .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_acgg .Repeat );
_gfc .SetIfNotNil ("\u004d\u0069\u0078",_acgg .Mix );return _def ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cda .PdfObject ;IC _cda .PdfObject ;RO _cda .PdfObject ;OverlayText _cda .PdfObject ;Repeat _cda .PdfObject ;DA _cda .PdfObject ;Q _cda .PdfObject ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_fafac DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};func (_cedd *PdfAppender )updateObjectsDeep (_bgdf _cda .PdfObject ,_gggb map[_cda .PdfObject ]struct{}){if _gggb ==nil {_gggb =map[_cda .PdfObject ]struct{}{};
};if _ ,_gfgb :=_gggb [_bgdf ];_gfgb ||_bgdf ==nil {return ;};_gggb [_bgdf ]=struct{}{};_fgda :=_cda .ResolveReferencesDeep (_bgdf ,_cedd ._fgeb );if _fgda !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fgda );};switch _ecga :=_bgdf .(type ){case *_cda .PdfIndirectObject :switch {case _ecga .GetParser ()==_cedd ._ddaff ._gaedg :return ;
case _ecga .GetParser ()==_cedd .Reader ._gaedg :_bbaa ,_ :=_cedd ._ddaff .GetIndirectObjectByNumber (int (_ecga .ObjectNumber ));_dfbb ,_eaga :=_bbaa .(*_cda .PdfIndirectObject );if _eaga &&_dfbb !=nil {if _dfbb .PdfObject !=_ecga .PdfObject &&_dfbb .PdfObject .WriteString ()!=_ecga .PdfObject .WriteString (){_cedd .addNewObject (_bgdf );
_cedd ._cebg [_bgdf ]=_ecga .ObjectNumber ;};};default:_cedd .addNewObject (_bgdf );};_cedd .updateObjectsDeep (_ecga .PdfObject ,_gggb );case *_cda .PdfObjectArray :for _ ,_fade :=range _ecga .Elements (){_cedd .updateObjectsDeep (_fade ,_gggb );};case *_cda .PdfObjectDictionary :for _ ,_fgff :=range _ecga .Keys (){_cedd .updateObjectsDeep (_ecga .Get (_fgff ),_gggb );
};case *_cda .PdfObjectStreams :if _ecga .GetParser ()!=_cedd ._ddaff ._gaedg {for _ ,_fbdf :=range _ecga .Elements (){_cedd .updateObjectsDeep (_fbdf ,_gggb );};};case *_cda .PdfObjectStream :switch {case _ecga .GetParser ()==_cedd ._ddaff ._gaedg :return ;
case _ecga .GetParser ()==_cedd .Reader ._gaedg :if _ecdg ,_dccc :=_cedd ._ddaff ._gaedg .LookupByReference (_ecga .PdfObjectReference );_dccc ==nil {var _fgdc bool ;if _ebcf ,_efec :=_cda .GetStream (_ecdg );_efec &&_dc .Equal (_ebcf .Stream ,_ecga .Stream ){_fgdc =true ;
};if _cbga ,_gdab :=_cda .GetDict (_ecdg );_fgdc &&_gdab {_fgdc =_cbga .WriteString ()==_ecga .PdfObjectDictionary .WriteString ();};if _fgdc {return ;};};if _ecga .ObjectNumber !=0{_cedd ._cebg [_bgdf ]=_ecga .ObjectNumber ;};default:if _ ,_beba :=_cedd ._dece [_bgdf ];
!_beba {_cedd .addNewObject (_bgdf );};};_cedd .updateObjectsDeep (_ecga .PdfObjectDictionary ,_gggb );};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_egfac *PdfShadingType5 )ToPdfObject ()_cda .PdfObject {_egfac .PdfShading .ToPdfObject ();_caga ,_ddff :=_egfac .getShadingDict ();if _ddff !=nil {_ae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _egfac .BitsPerCoordinate !=nil {_caga .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_egfac .BitsPerCoordinate );};if _egfac .BitsPerComponent !=nil {_caga .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_egfac .BitsPerComponent );
};if _egfac .VerticesPerRow !=nil {_caga .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_egfac .VerticesPerRow );};if _egfac .Decode !=nil {_caga .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_egfac .Decode );};if _egfac .Function !=nil {if len (_egfac .Function )==1{_caga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_egfac .Function [0].ToPdfObject ());
}else {_bfbgc :=_cda .MakeArray ();for _ ,_aeacg :=range _egfac .Function {_bfbgc .Append (_aeacg .ToPdfObject ());};_caga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bfbgc );};};return _egfac ._bfddc ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_dfee :=PdfColorDeviceRGB {r ,g ,b };return &_dfee ;};func _dgcea (_gadg *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_gadg }};

// GetContentStream returns the XObject Form's content stream.
func (_ffaba *XObjectForm )GetContentStream ()([]byte ,error ){_begdd ,_dbcfea :=_cda .DecodeStream (_ffaba ._edcbb );if _dbcfea !=nil {return nil ,_dbcfea ;};return _begdd ,nil ;};func _eedgd ()string {return _ae .Version };

// StdFontName represents name of a standard font.
type StdFontName =_fd .StdFontName ;

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_dcddb DefaultImageHandler )NewGrayImageFromGoImage (goimg _e .Image )(*Image ,error ){_cdeae :=goimg .Bounds ();_gfeef :=&Image {Width :int64 (_cdeae .Dx ()),Height :int64 (_cdeae .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _bdegc :=goimg .(type ){case *_e .Gray :if len (_bdegc .Pix )!=_cdeae .Dx ()*_cdeae .Dy (){_cdadf ,_dggdc :=_eee .GrayConverter .Convert (goimg );
if _dggdc !=nil {return nil ,_dggdc ;};_gfeef .Data =_cdadf .Pix ();}else {_gfeef .Data =_bdegc .Pix ;};case *_e .Gray16 :_gfeef .BitsPerComponent =16;if len (_bdegc .Pix )!=_cdeae .Dx ()*_cdeae .Dy ()*2{_ddbgg ,_bcfcc :=_eee .Gray16Converter .Convert (goimg );
if _bcfcc !=nil {return nil ,_bcfcc ;};_gfeef .Data =_ddbgg .Pix ();}else {_gfeef .Data =_bdegc .Pix ;};case _eee .Image :_cecdd :=_bdegc .Base ();if _cecdd .ColorComponents ==1{_gfeef .BitsPerComponent =int64 (_cecdd .BitsPerComponent );_gfeef .Data =_cecdd .Data ;
return _gfeef ,nil ;};_eedgb ,_defb :=_eee .GrayConverter .Convert (goimg );if _defb !=nil {return nil ,_defb ;};_gfeef .Data =_eedgb .Pix ();default:_cgcb ,_dbeab :=_eee .GrayConverter .Convert (goimg );if _dbeab !=nil {return nil ,_dbeab ;};_gfeef .Data =_cgcb .Pix ();
};return _gfeef ,nil ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_gfac :=NewPdfAnnotation ();_ada :=&PdfAnnotationMovie {};_ada .PdfAnnotation =_gfac ;_gfac .SetContext (_ada );return _ada ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_gdfdc *Image )GetParamsDict ()*_cda .PdfObjectDictionary {_fgbed :=_cda .MakeDict ();_fgbed .Set ("\u0057\u0069\u0064t\u0068",_cda .MakeInteger (_gdfdc .Width ));_fgbed .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_cda .MakeInteger (_gdfdc .Height ));
_fgbed .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_cda .MakeInteger (int64 (_gdfdc .ColorComponents )));_fgbed .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cda .MakeInteger (_gdfdc .BitsPerComponent ));
return _fgbed ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_cda .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_feda *_cda .PdfIndirectObject ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_agbee *PdfWriter )SetNameDictionary (names _cda .PdfObject )error {if names ==nil {return nil ;};_ae .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_agbee ._bgafe .Set ("\u004e\u0061\u006de\u0073",names );return _agbee .addObjects (names );};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_cda .PdfObjectStream )(*XObjectImage ,error ){_fgabd :=&XObjectImage {};_fgabd ._dbdfb =stream ;_eeab :=*(stream .PdfObjectDictionary );_cfaba ,_gbfb :=_cda .NewEncoderFromStream (stream );if _gbfb !=nil {return nil ,_gbfb ;
};_fgabd .Filter =_cfaba ;if _gddf :=_cda .TraceToDirectObject (_eeab .Get ("\u0057\u0069\u0064t\u0068"));_gddf !=nil {_cdeca ,_fcbgc :=_gddf .(*_cda .PdfObjectInteger );if !_fcbgc {return nil ,_ea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_gcdfe :=int64 (*_cdeca );_fgabd .Width =&_gcdfe ;}else {return nil ,_ea .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _beage :=_cda .TraceToDirectObject (_eeab .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_beage !=nil {_dcgd ,_bccea :=_beage .(*_cda .PdfObjectInteger );if !_bccea {return nil ,_ea .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_eefbd :=int64 (*_dcgd );
_fgabd .Height =&_eefbd ;}else {return nil ,_ea .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _fgaee :=_cda .TraceToDirectObject (_eeab .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_fgaee !=nil {_cadge ,_ddggb :=NewPdfColorspaceFromPdfObject (_fgaee );if _ddggb !=nil {return nil ,_ddggb ;};_fgabd .ColorSpace =_cadge ;}else {_ae .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");
_fgabd .ColorSpace =NewPdfColorspaceDeviceGray ();};if _dfgce :=_cda .TraceToDirectObject (_eeab .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_dfgce !=nil {_cgfafb ,_fccdfa :=_dfgce .(*_cda .PdfObjectInteger );
if !_fccdfa {return nil ,_ea .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_fbgbd :=int64 (*_cgfafb );_fgabd .BitsPerComponent =&_fbgbd ;};_fgabd .Intent =_eeab .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_fgabd .ImageMask =_eeab .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_fgabd .Mask =_eeab .Get ("\u004d\u0061\u0073\u006b");_fgabd .Decode =_eeab .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_fgabd .Interpolate =_eeab .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_fgabd .Alternatives =_eeab .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_fgabd .SMask =_eeab .Get ("\u0053\u004d\u0061s\u006b");_fgabd .SMaskInData =_eeab .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_fgabd .Matte =_eeab .Get ("\u004d\u0061\u0074t\u0065");_fgabd .Name =_eeab .Get ("\u004e\u0061\u006d\u0065");_fgabd .StructParent =_eeab .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_fgabd .ID =_eeab .Get ("\u0049\u0044");
_fgabd .OPI =_eeab .Get ("\u004f\u0050\u0049");_fgabd .Metadata =_eeab .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_fgabd .OC =_eeab .Get ("\u004f\u0043");_fgabd .Stream =stream .Stream ;return _fgabd ,nil ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_ffbfa OutlineDest )ToPdfObject ()_cda .PdfObject {if (_ffbfa .PageObj ==nil &&_ffbfa .Page < 0)||_ffbfa .Mode ==""{return _cda .MakeNull ();};_gfgbf :=_cda .MakeArray ();if _ffbfa .PageObj !=nil {_gfgbf .Append (_ffbfa .PageObj );}else {_gfgbf .Append (_cda .MakeInteger (_ffbfa .Page ));
};_gfgbf .Append (_cda .MakeName (_ffbfa .Mode ));switch _ffbfa .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_gfgbf .Append (_cda .MakeFloat (_ffbfa .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_gfgbf .Append (_cda .MakeFloat (_ffbfa .X ));
case "\u0058\u0059\u005a":_gfgbf .Append (_cda .MakeFloat (_ffbfa .X ));_gfgbf .Append (_cda .MakeFloat (_ffbfa .Y ));_gfgbf .Append (_cda .MakeFloat (_ffbfa .Zoom ));default:_gfgbf .Set (1,_cda .MakeName ("\u0046\u0069\u0074"));};return _gfgbf ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_cedbb *PdfPageResources )HasXObjectByName (keyName _cda .PdfObjectName )bool {_aege ,_ :=_cedbb .GetXObjectByName (keyName );return _aege !=nil ;};type pdfCIDFontType0 struct{fontCommon ;_dgag *_cda .PdfIndirectObject ;_bfcb _aef .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_cda .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _cda .PdfObject ;W _cda .PdfObject ;DW2 _cda .PdfObject ;W2 _cda .PdfObject ;_edcf map[_aef .CharCode ]float64 ;_bafac float64 ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_eddea *PdfPage )error ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_cda .PdfIndirectObject ;SV *_cda .PdfIndirectObject ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_cgd :=NewPdfAnnotation ();_bdf :=&PdfAnnotationPolyLine {};_bdf .PdfAnnotation =_cgd ;_bdf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgd .SetContext (_bdf );return _bdf ;};func _cecge (_affaf _cda .PdfObject )(*PdfPageResourcesColorspaces ,error ){_dgeag :=&PdfPageResourcesColorspaces {};
if _dgdc ,_fcdg :=_affaf .(*_cda .PdfIndirectObject );_fcdg {_dgeag ._cgdc =_dgdc ;_affaf =_dgdc .PdfObject ;};_gadge ,_fbbed :=_cda .GetDict (_affaf );if !_fbbed {return nil ,_ea .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_dgeag .Names =[]string {};_dgeag .Colorspaces =map[string ]PdfColorspace {};for _ ,_ecbf :=range _gadge .Keys (){_dggbd :=_gadge .Get (_ecbf );_dgeag .Names =append (_dgeag .Names ,string (_ecbf ));_cbdg ,_fdbdd :=NewPdfColorspaceFromPdfObject (_dggbd );
if _fdbdd !=nil {return nil ,_fdbdd ;};_dgeag .Colorspaces [string (_ecbf )]=_cbdg ;};return _dgeag ,nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_abaed *PdfOutlineItem )ToPdfObject ()_cda .PdfObject {_faad :=_abaed ._cggef ;_edgfg :=_faad .PdfObject .(*_cda .PdfObjectDictionary );_edgfg .Set ("\u0054\u0069\u0074l\u0065",_abaed .Title );if _abaed .A !=nil {_edgfg .Set ("\u0041",_abaed .A );
};if _dfedb :=_edgfg .Get ("\u0053\u0045");_dfedb !=nil {_edgfg .Remove ("\u0053\u0045");};if _abaed .C !=nil {_edgfg .Set ("\u0043",_abaed .C );};if _abaed .Dest !=nil {_edgfg .Set ("\u0044\u0065\u0073\u0074",_abaed .Dest );};if _abaed .F !=nil {_edgfg .Set ("\u0046",_abaed .F );
};if _abaed .Count !=nil {_edgfg .Set ("\u0043\u006f\u0075n\u0074",_cda .MakeInteger (*_abaed .Count ));};if _abaed .Next !=nil {_edgfg .Set ("\u004e\u0065\u0078\u0074",_abaed .Next .ToPdfObject ());};if _abaed .First !=nil {_edgfg .Set ("\u0046\u0069\u0072s\u0074",_abaed .First .ToPdfObject ());
};if _abaed .Prev !=nil {_edgfg .Set ("\u0050\u0072\u0065\u0076",_abaed .Prev .GetContext ().GetContainingPdfObject ());};if _abaed .Last !=nil {_edgfg .Set ("\u004c\u0061\u0073\u0074",_abaed .Last .GetContext ().GetContainingPdfObject ());};if _abaed .Parent !=nil {_edgfg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_abaed .Parent .GetContext ().GetContainingPdfObject ());
};return _faad ;};func (_gfcag *LTV )enable (_ffcd ,_egbc []*_ff .Certificate ,_fddbd string )error {_fceaf ,_gfagg ,_fbfce :=_gfcag .buildCertChain (_ffcd ,_egbc );if _fbfce !=nil {return _fbfce ;};_eaggd ,_fbfce :=_gfcag .getCerts (_fceaf );if _fbfce !=nil {return _fbfce ;
};_gbba ,_fbfce :=_gfcag .getOCSPs (_fceaf ,_gfagg );if _fbfce !=nil {return _fbfce ;};_ecbe ,_fbfce :=_gfcag .getCRLs (_fceaf );if _fbfce !=nil {return _fbfce ;};_ceadg :=_gfcag ._bfddf ;_aacf ,_fbfce :=_ceadg .addCerts (_eaggd );if _fbfce !=nil {return _fbfce ;
};_bbefg ,_fbfce :=_ceadg .addOCSPs (_gbba );if _fbfce !=nil {return _fbfce ;};_accee ,_fbfce :=_ceadg .addCRLs (_ecbe );if _fbfce !=nil {return _fbfce ;};if _fddbd !=""{_ceadg .VRI [_fddbd ]=&VRI {Cert :_aacf ,OCSP :_bbefg ,CRL :_accee };};_gfcag ._gefbg .SetDSS (_ceadg );
return nil ;};func (_dacbf *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_deda *PdfColorspaceCalGray )ToPdfObject ()_cda .PdfObject {_gbdd :=&_cda .PdfObjectArray {};_gbdd .Append (_cda .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_ddafe :=_cda .MakeDict ();if _deda .WhitePoint !=nil {_ddafe .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_cda .MakeArray (_cda .MakeFloat (_deda .WhitePoint [0]),_cda .MakeFloat (_deda .WhitePoint [1]),_cda .MakeFloat (_deda .WhitePoint [2])));
}else {_ae .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _deda .BlackPoint !=nil {_ddafe .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_cda .MakeArray (_cda .MakeFloat (_deda .BlackPoint [0]),_cda .MakeFloat (_deda .BlackPoint [1]),_cda .MakeFloat (_deda .BlackPoint [2])));
};_ddafe .Set ("\u0047\u0061\u006dm\u0061",_cda .MakeFloat (_deda .Gamma ));_gbdd .Append (_ddafe );if _deda ._cada !=nil {_deda ._cada .PdfObject =_gbdd ;return _deda ._cada ;};return _gbdd ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_fdeg *PdfFieldButton )ToPdfObject ()_cda .PdfObject {_fdeg .PdfField .ToPdfObject ();_ddeg :=_fdeg ._geab ;_gaga :=_ddeg .PdfObject .(*_cda .PdfObjectDictionary );_gaga .Set ("\u0046\u0054",_cda .MakeName ("\u0042\u0074\u006e"));if _fdeg .Opt !=nil {_gaga .Set ("\u004f\u0070\u0074",_fdeg .Opt );
};return _ddeg ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_cddbe *_cda .PdfIndirectObject ;_bacdc *_cda .PdfIndirectObject ;_baegb map[_cda .PdfObject ]struct{};_gbffa []_cda .PdfObject ;_ffbg map[_cda .PdfObject ]struct{};_febdg []*_cda .PdfIndirectObject ;_cadab *PdfOutlineTreeNode ;_bgafe *_cda .PdfObjectDictionary ;
_abede []_cda .PdfObject ;_acdadd *_cda .PdfIndirectObject ;_abgca *_b .Writer ;_gdbec int64 ;_dgef error ;_babdb *_cda .PdfCrypt ;_eacd *_cda .PdfObjectDictionary ;_dbcfe *_cda .PdfIndirectObject ;_dbfde *_cda .PdfObjectArray ;_bgce int ;_agfdf int ;_bafcgd *bool ;
_caada map[_cda .PdfObject ][]*_cda .PdfObjectDictionary ;_faebc *PdfAcroForm ;_bdcf Optimizer ;_aaddc map[int ]crossReference ;_ddbga int64 ;ObjNumOffset int ;_dddcb bool ;_baedc _cda .XrefTable ;_ggdad int64 ;_ecbed int64 ;_cedcb map[_cda .PdfObject ]int64 ;
_bddff map[_cda .PdfObject ]struct{};_gdbaa string ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_cda .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_cdfe *_cda .PdfIndirectObject ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_eagag PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _eagag ._aecg .getFontDescriptor (),nil ;};func _cfaec (_adegb *PdfField ,_ecgaeb _cda .PdfObject ){for _ ,_aaaf :=range _adegb .Annotations {_aaaf .AS =_ecgaeb ;_aaaf .ToPdfObject ();
};};func _fdaad (_dggg *_eee .ImageBase )(_debff Image ){_debff .Width =int64 (_dggg .Width );_debff .Height =int64 (_dggg .Height );_debff .BitsPerComponent =int64 (_dggg .BitsPerComponent );_debff .ColorComponents =_dggg .ColorComponents ;_debff .Data =_dggg .Data ;
_debff ._eabad =_dggg .Decode ;_debff ._eeeg =_dggg .Alpha ;return _debff ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_eeeaa :=&PdfFilespec {};_eeeaa ._gfcf =_cda .MakeIndirectObject (_cda .MakeDict ());return _eeeaa ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_cfeag *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_cda .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afde ,_fffb :=_cda .GetNumbersAsFloat (objects );
if _fffb !=nil {return nil ,_fffb ;};return _cfeag .ColorFromFloats (_afde );};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_aafcc .Lock ();defer _aafcc .Unlock ();_ddbffg =keywords };const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// ToPdfObject converts date to a PDF string object.
func (_cgbb *PdfDate )ToPdfObject ()_cda .PdfObject {_baae :=_c .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_cgbb ._cgdbb ,_cgbb ._ceac ,_cgbb ._ffbfc ,_cgbb ._becdf ,_cgbb ._acbge ,_cgbb ._ddae ,_cgbb ._dcgeg ,_cgbb ._aeae ,_cgbb ._egeca );
return _cda .MakeString (_baae );};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_ebbdf *PdfPageResources )GetXObjectByName (keyName _cda .PdfObjectName )(*_cda .PdfObjectStream ,XObjectType ){if _ebbdf .XObject ==nil {return nil ,XObjectTypeUndefined ;};_bdced ,_fggdf :=_cda .TraceToDirectObject (_ebbdf .XObject ).(*_cda .PdfObjectDictionary );
if !_fggdf {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cda .TraceToDirectObject (_ebbdf .XObject ));
return nil ,XObjectTypeUndefined ;};if _dgaab :=_bdced .Get (keyName );_dgaab !=nil {_gabef ,_ebgfg :=_cda .GetStream (_dgaab );if !_ebgfg {_ae .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_dgaab );
return nil ,XObjectTypeUndefined ;};_deba :=_gabef .PdfObjectDictionary ;_cdega ,_ebgfg :=_cda .TraceToDirectObject (_deba .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_cda .PdfObjectName );if !_ebgfg {_ae .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_deba .String ());
return nil ,XObjectTypeUndefined ;};if *_cdega =="\u0049\u006d\u0061g\u0065"{return _gabef ,XObjectTypeImage ;}else if *_cdega =="\u0046\u006f\u0072\u006d"{return _gabef ,XObjectTypeForm ;}else if *_cdega =="\u0050\u0053"{return _gabef ,XObjectTypePS ;
}else {_ae .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_cdega );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_abffb :map[_cda .PdfObject ]struct{}{},_bbgffg :_febbgc (),_gaedg :_cda .NewParserFromString (txt )};};func _beace (_dbf *PdfPage )map[_cda .PdfObjectName ]_cda .PdfObject {_fgf :=make (map[_cda .PdfObjectName ]_cda .PdfObject );
if _dbf .Resources ==nil {return _fgf ;};if _dbf .Resources .Font !=nil {if _fgaf ,_dgbc :=_cda .GetDict (_dbf .Resources .Font );_dgbc {for _ ,_fdfb :=range _fgaf .Keys (){_fgf [_fdfb ]=_fgaf .Get (_fdfb );};};};if _dbf .Resources .ExtGState !=nil {if _eeg ,_bde :=_cda .GetDict (_dbf .Resources .ExtGState );
_bde {for _ ,_baca :=range _eeg .Keys (){_fgf [_baca ]=_eeg .Get (_baca );};};};if _dbf .Resources .XObject !=nil {if _bdgb ,_agcd :=_cda .GetDict (_dbf .Resources .XObject );_agcd {for _ ,_bede :=range _bdgb .Keys (){_fgf [_bede ]=_bdgb .Get (_bede );
};};};if _dbf .Resources .Pattern !=nil {if _cfg ,_degf :=_cda .GetDict (_dbf .Resources .Pattern );_degf {for _ ,_begf :=range _cfg .Keys (){_fgf [_begf ]=_cfg .Get (_begf );};};};if _dbf .Resources .Shading !=nil {if _becd ,_cbee :=_cda .GetDict (_dbf .Resources .Shading );
_cbee {for _ ,_abfcb :=range _becd .Keys (){_fgf [_abfcb ]=_becd .Get (_abfcb );};};};if _dbf .Resources .ProcSet !=nil {if _aaac ,_feef :=_cda .GetDict (_dbf .Resources .ProcSet );_feef {for _ ,_dbde :=range _aaac .Keys (){_fgf [_dbde ]=_aaac .Get (_dbde );
};};};if _dbf .Resources .Properties !=nil {if _fegd ,_cgec :=_cda .GetDict (_dbf .Resources .Properties );_cgec {for _ ,_ebee :=range _fegd .Keys (){_fgf [_ebee ]=_fegd .Get (_ebee );};};};return _fgf ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _cda .PdfObjectName ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_cda .PdfObjectStream )(*XObjectForm ,error ){_geebg :=&XObjectForm {};_geebg ._edcbb =stream ;_eddde :=*(stream .PdfObjectDictionary );_dbbed ,_deagd :=_cda .NewEncoderFromStream (stream );if _deagd !=nil {return nil ,_deagd ;
};_geebg .Filter =_dbbed ;if _caag :=_eddde .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_caag !=nil {_gcdcg ,_agacb :=_caag .(*_cda .PdfObjectName );if !_agacb {return nil ,_ea .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};
if *_gcdcg !="\u0046\u006f\u0072\u006d"{_ae .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_ea .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _eeccd :=_eddde .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_eeccd !=nil {_geebg .FormType =_eeccd ;};if _fecde :=_eddde .Get ("\u0042\u0042\u006f\u0078");_fecde !=nil {_geebg .BBox =_fecde ;};if _ccgdf :=_eddde .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_ccgdf !=nil {_geebg .Matrix =_ccgdf ;};if _fbgbg :=_eddde .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_fbgbg !=nil {_fbgbg =_cda .TraceToDirectObject (_fbgbg );_gggae ,_ccbffd :=_fbgbg .(*_cda .PdfObjectDictionary );if !_ccbffd {_ae .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_cda .ErrTypeError ;};_cdaec ,_ffeaf :=NewPdfPageResourcesFromDict (_gggae );if _ffeaf !=nil {_ae .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_ffeaf ;};_geebg .Resources =_cdaec ;_ae .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_geebg .Resources );};_geebg .Group =_eddde .Get ("\u0047\u0072\u006fu\u0070");
_geebg .Ref =_eddde .Get ("\u0052\u0065\u0066");_geebg .MetaData =_eddde .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_geebg .PieceInfo =_eddde .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_geebg .LastModified =_eddde .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_geebg .StructParent =_eddde .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_geebg .StructParents =_eddde .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_geebg .OPI =_eddde .Get ("\u004f\u0050\u0049");
_geebg .OC =_eddde .Get ("\u004f\u0043");_geebg .Name =_eddde .Get ("\u004e\u0061\u006d\u0065");_geebg .Stream =stream .Stream ;return _geebg ,nil ;};func (_egdf *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";
};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _cda .PdfObject ;H _cda .PdfObject ;};

// ValidateSignatures validates digital signatures in the document.
func (_fccg *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _fccg .AcroForm ==nil {return nil ,nil ;};if _fccg .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_geddd *PdfSignature ;
_gacbe *PdfField ;_gadged SignatureHandler ;};var _ggbf []*sigFieldPair ;for _ ,_bffd :=range _fccg .AcroForm .AllFields (){if _bffd .V ==nil {continue ;};if _addeb ,_bfacc :=_cda .GetDict (_bffd .V );_bfacc {if _cafaf ,_bdabg :=_cda .GetNameVal (_addeb .Get ("\u0054\u0079\u0070\u0065"));
_bdabg &&_cafaf =="\u0053\u0069\u0067"{_bbgfff ,_cebce :=_cda .GetIndirect (_bffd .V );if !_cebce {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_cfee ,_ebbcg :=_fccg .newPdfSignatureFromIndirect (_bbgfff );if _ebbcg !=nil {return nil ,_ebbcg ;};var _cbegg SignatureHandler ;for _ ,_eaccf :=range handlers {if _eaccf .IsApplicable (_cfee ){_cbegg =_eaccf ;break ;};};_ggbf =append (_ggbf ,&sigFieldPair {_geddd :_cfee ,_gacbe :_bffd ,_gadged :_cbegg });
};};};var _geagd []SignatureValidationResult ;for _ ,_ceeef :=range _ggbf {_ggee :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_ceeef ._gacbe }};if _ceeef ._gadged ==nil {_ggee .Errors =append (_ggee .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_geagd =append (_geagd ,_ggee );continue ;};_dgdab ,_fddee :=_ceeef ._gadged .NewDigest (_ceeef ._geddd );if _fddee !=nil {_ggee .Errors =append (_ggee .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_fddee .Error ());_geagd =append (_geagd ,_ggee );
continue ;};_efga :=_ceeef ._geddd .ByteRange ;if _efga ==nil {_ggee .Errors =append (_ggee .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_geagd =append (_geagd ,_ggee );continue ;};for _ebcga :=0;
_ebcga < _efga .Len ();_ebcga =_ebcga +2{_eggffc ,_ :=_cda .GetNumberAsInt64 (_efga .Get (_ebcga ));_ccbgd ,_ :=_cda .GetIntVal (_efga .Get (_ebcga +1));if _ ,_efac :=_fccg ._dgbee .Seek (_eggffc ,_cd .SeekStart );_efac !=nil {return nil ,_efac ;};_acfae :=make ([]byte ,_ccbgd );
if _ ,_cfdgea :=_fccg ._dgbee .Read (_acfae );_cfdgea !=nil {return nil ,_cfdgea ;};_dgdab .Write (_acfae );};_bddgg ,_fddee :=_ceeef ._gadged .Validate (_ceeef ._geddd ,_dgdab );if _fddee !=nil {return nil ,_fddee ;};_bddgg .Name =_ceeef ._geddd .Name .Decoded ();
_bddgg .Reason =_ceeef ._geddd .Reason .Decoded ();if _ceeef ._geddd .M !=nil {_cgaacb ,_cbegf :=NewPdfDate (_ceeef ._geddd .M .String ());if _cbegf !=nil {_bddgg .Errors =append (_bddgg .Errors ,_cbegf .Error ());continue ;};_bddgg .Date =_cgaacb ;};_bddgg .ContactInfo =_ceeef ._geddd .ContactInfo .Decoded ();
_bddgg .Location =_ceeef ._geddd .Location .Decoded ();_bddgg .Fields =_ggee .Fields ;_geagd =append (_geagd ,_bddgg );};return _geagd ,nil ;};

// Encoder returns the font's text encoder.
func (_cbega *PdfFont )Encoder ()_aef .TextEncoder {_dbgc :=_cbega .actualFont ();if _dbgc ==nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_cbega ._aecg );
return nil ;};return _dbgc .Encoder ();};func (_eagb *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _ebgg []*PdfFieldSignature ;for _ ,_efbeb :=range _eagb .AllFields (){switch _gdfacg :=_efbeb .GetContext ().(type ){case *PdfFieldSignature :_debef :=_gdfacg ;
_ebgg =append (_ebgg ,_debef );};};return _ebgg ;};func _fdggf (_afgg string )(map[_aef .CharCode ]_aef .GlyphName ,error ){_cegbb :=_bb .Split (_afgg ,"\u000a");_fcga :=make (map[_aef .CharCode ]_aef .GlyphName );for _ ,_gcbfc :=range _cegbb {_bddd :=_addfd .FindStringSubmatch (_gcbfc );
if _bddd ==nil {continue ;};_acge ,_gefdbb :=_bddd [1],_bddd [2];_afgea ,_aadddb :=_gc .Atoi (_acge );if _aadddb !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_gcbfc );
return nil ,_cda .ErrTypeError ;};_fcga [_aef .CharCode (_afgea )]=_aef .GlyphName (_gefdbb );};_ae .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_fcga );
return _fcga ,nil ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_bdcec []byte )(_cgfbf int ,_deea error );};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_bfee *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_bfee .Base .GetNumComponents ();_afbef :=int (vals [0])*N ;
if _afbef < 0||(_afbef +N -1)>=len (_bfee ._ccfec ){return nil ,_ea .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_daee :=_bfee ._ccfec [_afbef :_afbef +N ];var _eaa []float64 ;for _ ,_aeef :=range _daee {_eaa =append (_eaa ,float64 (_aeef )/255.0);
};_adge ,_fafa :=_bfee .Base .ColorFromFloats (_eaa );if _fafa !=nil {return nil ,_fafa ;};return _adge ,nil ;};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_ebd :=NewPdfAction ();_ffg :=&PdfActionLaunch {};_ffg .PdfAction =_ebd ;_ebd .SetContext (_ffg );return _ffg ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_afccg *PdfColorCalGray )GetNumComponents ()int {return 1};func (_dg *PdfReader )newPdfActionGotoRFromDict (_fcb *_cda .PdfObjectDictionary )(*PdfActionGoToR ,error ){_bbe ,_fce :=_gef (_fcb .Get ("\u0046"));if _fce !=nil {return nil ,_fce ;};return &PdfActionGoToR {D :_fcb .Get ("\u0044"),NewWindow :_fcb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_bbe },nil ;
};

// ToPdfObject implements interface PdfModel.
func (_ebc *PdfAnnotationLine )ToPdfObject ()_cda .PdfObject {_ebc .PdfAnnotation .ToPdfObject ();_dfdb :=_ebc ._afd ;_cdea :=_dfdb .PdfObject .(*_cda .PdfObjectDictionary );_ebc .PdfAnnotationMarkup .appendToPdfDictionary (_cdea );_cdea .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u004c\u0069\u006e\u0065"));
_cdea .SetIfNotNil ("\u004c",_ebc .L );_cdea .SetIfNotNil ("\u0042\u0053",_ebc .BS );_cdea .SetIfNotNil ("\u004c\u0045",_ebc .LE );_cdea .SetIfNotNil ("\u0049\u0043",_ebc .IC );_cdea .SetIfNotNil ("\u004c\u004c",_ebc .LL );_cdea .SetIfNotNil ("\u004c\u004c\u0045",_ebc .LLE );
_cdea .SetIfNotNil ("\u0043\u0061\u0070",_ebc .Cap );_cdea .SetIfNotNil ("\u0049\u0054",_ebc .IT );_cdea .SetIfNotNil ("\u004c\u004c\u004f",_ebc .LLO );_cdea .SetIfNotNil ("\u0043\u0050",_ebc .CP );_cdea .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_ebc .Measure );
_cdea .SetIfNotNil ("\u0043\u004f",_ebc .CO );return _dfdb ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_ggddg *PdfPageResources )GetContainingPdfObject ()_cda .PdfObject {return _ggddg ._feedd };

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_cddc *PdfColorCalRGB )GetNumComponents ()int {return 3};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_aecda *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _aecda ._edbec .(*PdfShadingPattern );};func _cfeae (_gddd *_cda .PdfObjectDictionary ,_cgaa *fontCommon )(*pdfCIDFontType0 ,error ){if _cgaa ._fceb !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_ae .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_cgaa );
return nil ,_cda .ErrRangeError ;};_cdbb :=_gedf (_cgaa );_dcgba ,_cdddc :=_cda .GetDict (_gddd .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_cdddc {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_cgaa );
return nil ,ErrRequiredAttributeMissing ;};_cdbb .CIDSystemInfo =_dcgba ;_cdbb .DW =_gddd .Get ("\u0044\u0057");_cdbb .W =_gddd .Get ("\u0057");_cdbb .DW2 =_gddd .Get ("\u0044\u0057\u0032");_cdbb .W2 =_gddd .Get ("\u0057\u0032");_cdbb ._bafac =1000.0;if _defgd ,_bcadd :=_cda .GetNumberAsFloat (_cdbb .DW );
_bcadd ==nil {_cdbb ._bafac =_defgd ;};_bcfa ,_fcda :=_deada (_cdbb .W );if _fcda !=nil {return nil ,_fcda ;};if _bcfa ==nil {_bcfa =map[_aef .CharCode ]float64 {};};_cdbb ._edcf =_bcfa ;return _cdbb ,nil ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_cbcab *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _cbcab ._edbec .(*PdfTilingPattern );};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_cbaeac *XObjectForm )GetContainingPdfObject ()_cda .PdfObject {return _cbaeac ._edcbb };func _gdbc (_dbeef *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_fgdg ,_edec :=_cda .GetDict (_dbeef .AP );if !_edec {return nil ,nil ,_ea .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _fgdg ==nil {return nil ,nil ,nil ;};_faed ,_edec :=_cda .GetArray (_dbeef .Rect );if !_edec ||_faed .Len ()!=4{return nil ,nil ,_ea .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_dbabe ,_cecg :=NewPdfRectangle (*_faed );
if _cecg !=nil {return nil ,nil ,_cecg ;};_defcb :=_cda .TraceToDirectObject (_fgdg .Get ("\u004e"));switch _fbfc :=_defcb .(type ){case *_cda .PdfObjectStream :_cgff :=_fbfc ;_ceefe ,_efae :=NewXObjectFormFromStream (_cgff );return _ceefe ,_dbabe ,_efae ;
case *_cda .PdfObjectDictionary :_fdbb :=_fbfc ;_eegee ,_cdeb :=_cda .GetName (_dbeef .AS );if !_cdeb {return nil ,nil ,nil ;};if _fdbb .Get (*_eegee )==nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_acae ,_cdeb :=_cda .GetStream (_fdbb .Get (*_eegee ));if !_cdeb {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_eegee );
return nil ,nil ,_ea .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_cfbe ,_ddgeg :=NewXObjectFormFromStream (_acae );return _cfbe ,_dbabe ,_ddgeg ;};_ae .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_defcb );
return nil ,nil ,_ea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};func (_bbdb *PdfReader )newPdfAnnotationFromIndirectObject (_abg *_cda .PdfIndirectObject )(*PdfAnnotation ,error ){_cabc ,_aeed :=_abg .PdfObject .(*_cda .PdfObjectDictionary );
if !_aeed {return nil ,_c .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_bbdb ._bbgffg .GetModelFromPrimitive (_cabc );model !=nil {_cgfd ,_ebfb :=model .(*PdfAnnotation );if !_ebfb {return nil ,_c .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _cgfd ,nil ;};_gae :=&PdfAnnotation {};_gae ._afd =_abg ;_bbdb ._bbgffg .Register (_cabc ,_gae );if _gge :=_cabc .Get ("\u0054\u0079\u0070\u0065");_gge !=nil {_ebdf ,_aadd :=_gge .(*_cda .PdfObjectName );if !_aadd {_ae .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gge );
}else {if *_ebdf !="\u0041\u006e\u006eo\u0074"{_ae .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_ebdf );};};};
if _ceb :=_cabc .Get ("\u0052\u0065\u0063\u0074");_ceb !=nil {_gae .Rect =_ceb ;};if _bcda :=_cabc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_bcda !=nil {_gae .Contents =_bcda ;};if _caf :=_cabc .Get ("\u0050");_caf !=nil {_gae .P =_caf ;
};if _dged :=_cabc .Get ("\u004e\u004d");_dged !=nil {_gae .NM =_dged ;};if _effd :=_cabc .Get ("\u004d");_effd !=nil {_gae .M =_effd ;};if _fgb :=_cabc .Get ("\u0046");_fgb !=nil {_gae .F =_fgb ;};if _efbf :=_cabc .Get ("\u0041\u0050");_efbf !=nil {_gae .AP =_efbf ;
};if _dgg :=_cabc .Get ("\u0041\u0053");_dgg !=nil {_gae .AS =_dgg ;};if _agab :=_cabc .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_agab !=nil {_gae .Border =_agab ;};if _gfae :=_cabc .Get ("\u0043");_gfae !=nil {_gae .C =_gfae ;};if _dgfb :=_cabc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_dgfb !=nil {_gae .StructParent =_dgfb ;};if _bfec :=_cabc .Get ("\u004f\u0043");_bfec !=nil {_gae .OC =_bfec ;};_baaa :=_cabc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _baaa ==nil {_ae .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_gae ._edbe =nil ;return _gae ,nil ;};_dcc ,_ebdc :=_baaa .(*_cda .PdfObjectName );if !_ebdc {_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_baaa );
return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_baaa );};switch *_dcc {case "\u0054\u0065\u0078\u0074":_bff ,_cbfb :=_bbdb .newPdfAnnotationTextFromDict (_cabc );
if _cbfb !=nil {return nil ,_cbfb ;};_bff .PdfAnnotation =_gae ;_gae ._edbe =_bff ;return _gae ,nil ;case "\u004c\u0069\u006e\u006b":_bac ,_becc :=_bbdb .newPdfAnnotationLinkFromDict (_cabc );if _becc !=nil {return nil ,_becc ;};_bac .PdfAnnotation =_gae ;
_gae ._edbe =_bac ;return _gae ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_dbcf ,_cdec :=_bbdb .newPdfAnnotationFreeTextFromDict (_cabc );if _cdec !=nil {return nil ,_cdec ;};_dbcf .PdfAnnotation =_gae ;_gae ._edbe =_dbcf ;return _gae ,nil ;
case "\u004c\u0069\u006e\u0065":_abge ,_dfe :=_bbdb .newPdfAnnotationLineFromDict (_cabc );if _dfe !=nil {return nil ,_dfe ;};_abge .PdfAnnotation =_gae ;_gae ._edbe =_abge ;_ae .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_gae ,_gae );
_ae .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_abge ,_abge );_ae .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_abge .PdfAnnotationMarkup ,_abge .PdfAnnotationMarkup );
return _gae ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_cgdd ,_feg :=_bbdb .newPdfAnnotationSquareFromDict (_cabc );if _feg !=nil {return nil ,_feg ;};_cgdd .PdfAnnotation =_gae ;_gae ._edbe =_cgdd ;return _gae ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_gbff ,_bee :=_bbdb .newPdfAnnotationCircleFromDict (_cabc );
if _bee !=nil {return nil ,_bee ;};_gbff .PdfAnnotation =_gae ;_gae ._edbe =_gbff ;return _gae ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_cggd ,_fee :=_bbdb .newPdfAnnotationPolygonFromDict (_cabc );if _fee !=nil {return nil ,_fee ;};_cggd .PdfAnnotation =_gae ;
_gae ._edbe =_cggd ;return _gae ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_cefc ,_eced :=_bbdb .newPdfAnnotationPolyLineFromDict (_cabc );if _eced !=nil {return nil ,_eced ;};_cefc .PdfAnnotation =_gae ;_gae ._edbe =_cefc ;return _gae ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_dbcff ,_febc :=_bbdb .newPdfAnnotationHighlightFromDict (_cabc );if _febc !=nil {return nil ,_febc ;};_dbcff .PdfAnnotation =_gae ;_gae ._edbe =_dbcff ;return _gae ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_bdc ,_dcdfd :=_bbdb .newPdfAnnotationUnderlineFromDict (_cabc );
if _dcdfd !=nil {return nil ,_dcdfd ;};_bdc .PdfAnnotation =_gae ;_gae ._edbe =_bdc ;return _gae ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_efbb ,_ecd :=_bbdb .newPdfAnnotationSquigglyFromDict (_cabc );if _ecd !=nil {return nil ,_ecd ;
};_efbb .PdfAnnotation =_gae ;_gae ._edbe =_efbb ;return _gae ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_afcd ,_aba :=_bbdb .newPdfAnnotationStrikeOut (_cabc );if _aba !=nil {return nil ,_aba ;};_afcd .PdfAnnotation =_gae ;_gae ._edbe =_afcd ;
return _gae ,nil ;case "\u0043\u0061\u0072e\u0074":_eabe ,_adc :=_bbdb .newPdfAnnotationCaretFromDict (_cabc );if _adc !=nil {return nil ,_adc ;};_eabe .PdfAnnotation =_gae ;_gae ._edbe =_eabe ;return _gae ,nil ;case "\u0053\u0074\u0061m\u0070":_cbe ,_baab :=_bbdb .newPdfAnnotationStampFromDict (_cabc );
if _baab !=nil {return nil ,_baab ;};_cbe .PdfAnnotation =_gae ;_gae ._edbe =_cbe ;return _gae ,nil ;case "\u0049\u006e\u006b":_egd ,_aaa :=_bbdb .newPdfAnnotationInkFromDict (_cabc );if _aaa !=nil {return nil ,_aaa ;};_egd .PdfAnnotation =_gae ;_gae ._edbe =_egd ;
return _gae ,nil ;case "\u0050\u006f\u0070u\u0070":_edg ,_ege :=_bbdb .newPdfAnnotationPopupFromDict (_cabc );if _ege !=nil {return nil ,_ege ;};_edg .PdfAnnotation =_gae ;_gae ._edbe =_edg ;return _gae ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_agabc ,_efd :=_bbdb .newPdfAnnotationFileAttachmentFromDict (_cabc );
if _efd !=nil {return nil ,_efd ;};_agabc .PdfAnnotation =_gae ;_gae ._edbe =_agabc ;return _gae ,nil ;case "\u0053\u006f\u0075n\u0064":_efe ,_bga :=_bbdb .newPdfAnnotationSoundFromDict (_cabc );if _bga !=nil {return nil ,_bga ;};_efe .PdfAnnotation =_gae ;
_gae ._edbe =_efe ;return _gae ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_egba ,_fbcf :=_bbdb .newPdfAnnotationRichMediaFromDict (_cabc );if _fbcf !=nil {return nil ,_fbcf ;};_egba .PdfAnnotation =_gae ;_gae ._edbe =_egba ;return _gae ,nil ;
case "\u004d\u006f\u0076i\u0065":_bcdb ,_eecb :=_bbdb .newPdfAnnotationMovieFromDict (_cabc );if _eecb !=nil {return nil ,_eecb ;};_bcdb .PdfAnnotation =_gae ;_gae ._edbe =_bcdb ;return _gae ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_ageb ,_bedb :=_bbdb .newPdfAnnotationScreenFromDict (_cabc );
if _bedb !=nil {return nil ,_bedb ;};_ageb .PdfAnnotation =_gae ;_gae ._edbe =_ageb ;return _gae ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_gdg ,_gfbc :=_bbdb .newPdfAnnotationWidgetFromDict (_cabc );if _gfbc !=nil {return nil ,_gfbc ;};_gdg .PdfAnnotation =_gae ;
_gae ._edbe =_gdg ;return _gae ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_cfe ,_cgb :=_bbdb .newPdfAnnotationPrinterMarkFromDict (_cabc );if _cgb !=nil {return nil ,_cgb ;};_cfe .PdfAnnotation =_gae ;_gae ._edbe =_cfe ;
return _gae ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_cgee ,_fded :=_bbdb .newPdfAnnotationTrapNetFromDict (_cabc );if _fded !=nil {return nil ,_fded ;};_cgee .PdfAnnotation =_gae ;_gae ._edbe =_cgee ;return _gae ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_fafg ,_cebf :=_bbdb .newPdfAnnotationWatermarkFromDict (_cabc );
if _cebf !=nil {return nil ,_cebf ;};_fafg .PdfAnnotation =_gae ;_gae ._edbe =_fafg ;return _gae ,nil ;case "\u0033\u0044":_bdga ,_cgbg :=_bbdb .newPdfAnnotation3DFromDict (_cabc );if _cgbg !=nil {return nil ,_cgbg ;};_bdga .PdfAnnotation =_gae ;_gae ._edbe =_bdga ;
return _gae ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_ead ,_agebg :=_bbdb .newPdfAnnotationProjectionFromDict (_cabc );if _agebg !=nil {return nil ,_agebg ;};_ead .PdfAnnotation =_gae ;_gae ._edbe =_ead ;return _gae ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_daf ,_feea :=_bbdb .newPdfAnnotationRedactFromDict (_cabc );if _feea !=nil {return nil ,_feea ;};_daf .PdfAnnotation =_gae ;_gae ._edbe =_daf ;return _gae ,nil ;};_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_dcc );
return nil ,nil ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_efadd int ,_ddac *PdfPage )error ;func _fdfc (_ffeb _cda .PdfObject )(*PdfFontDescriptor ,error ){_dcgf :=&PdfFontDescriptor {};_ffeb =_cda .ResolveReference (_ffeb );if _fcff ,_fcgg :=_ffeb .(*_cda .PdfIndirectObject );
_fcgg {_dcgf ._cffdg =_fcff ;_ffeb =_fcff .PdfObject ;};_adcd ,_gbcb :=_cda .GetDict (_ffeb );if !_gbcb {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ffeb );
return nil ,_cda .ErrTypeError ;};if _dcfe :=_adcd .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_dcfe !=nil {_dcgf .FontName =_dcfe ;}else {_ae .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_ddgga ,_ :=_cda .GetName (_dcgf .FontName );if _aeceb :=_adcd .Get ("\u0054\u0079\u0070\u0065");_aeceb !=nil {_gbdff ,_bcca :=_aeceb .(*_cda .PdfObjectName );if !_bcca ||string (*_gbdff )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_ae .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_aeceb ,_ddgga ,_dcgf .FontName );
};}else {_ae .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_ddgga ,_dcgf .FontName );
};_dcgf .FontFamily =_adcd .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_dcgf .FontStretch =_adcd .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_dcgf .FontWeight =_adcd .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_dcgf .Flags =_adcd .Get ("\u0046\u006c\u0061g\u0073");_dcgf .FontBBox =_adcd .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_dcgf .ItalicAngle =_adcd .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_dcgf .Ascent =_adcd .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_dcgf .Descent =_adcd .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_dcgf .Leading =_adcd .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_dcgf .CapHeight =_adcd .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_dcgf .XHeight =_adcd .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_dcgf .StemV =_adcd .Get ("\u0053\u0074\u0065m\u0056");_dcgf .StemH =_adcd .Get ("\u0053\u0074\u0065m\u0048");_dcgf .AvgWidth =_adcd .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_dcgf .MaxWidth =_adcd .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_dcgf .MissingWidth =_adcd .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_dcgf .FontFile =_adcd .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_dcgf .FontFile2 =_adcd .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_dcgf .FontFile3 =_adcd .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_dcgf .CharSet =_adcd .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_dcgf .Style =_adcd .Get ("\u0053\u0074\u0079l\u0065");_dcgf .Lang =_adcd .Get ("\u004c\u0061\u006e\u0067");
_dcgf .FD =_adcd .Get ("\u0046\u0044");_dcgf .CIDSet =_adcd .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _dcgf .Flags !=nil {if _fabe ,_gfaa :=_cda .GetIntVal (_dcgf .Flags );_gfaa {_dcgf ._eebe =_fabe ;};};if _dcgf .MissingWidth !=nil {if _fede ,_ddabba :=_cda .GetNumberAsFloat (_dcgf .MissingWidth );
_ddabba ==nil {_dcgf ._gaacd =_fede ;};};if _dcgf .FontFile !=nil {_fgbf ,_bdgcb :=_agcac (_dcgf .FontFile );if _bdgcb !=nil {return _dcgf ,_bdgcb ;};_ae .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_fgbf );_dcgf .fontFile =_fgbf ;
};if _dcgf .FontFile2 !=nil {_gfcdc ,_efebd :=_fd .NewFontFile2FromPdfObject (_dcgf .FontFile2 );if _efebd !=nil {return _dcgf ,_efebd ;};_ae .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_gfcdc .String ());_dcgf ._adfcc =&_gfcdc ;
};return _dcgf ,nil ;};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_bgfg *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _cda .GetNumberAsFloat (_bgfg .CapHeight );};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};type pdfFontType3 struct{fontCommon ;_eedg *_cda .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _cda .PdfObject ;Encoding _cda .PdfObject ;FontBBox _cda .PdfObject ;FontMatrix _cda .PdfObject ;FirstChar _cda .PdfObject ;LastChar _cda .PdfObject ;Widths _cda .PdfObject ;Resources _cda .PdfObject ;_edeef map[_aef .CharCode ]float64 ;_bdgf _aef .TextEncoder ;
};func (_bbeea *PdfReader )loadDSS ()(*DSS ,error ){if _bbeea ._gaedg .GetCrypter ()!=nil &&!_bbeea ._gaedg .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_gbgd :=_bbeea ._ggef .Get ("\u0044\u0053\u0053");if _gbgd ==nil {return nil ,nil ;};_febbb ,_ :=_cda .GetIndirect (_gbgd );_gbgd =_cda .TraceToDirectObject (_gbgd );switch _cbgd :=_gbgd .(type ){case *_cda .PdfObjectNull :return nil ,nil ;case *_cda .PdfObjectDictionary :return _caced (_febbb ,_cbgd );
};return nil ,_c .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_gbgd );};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_dbbfg *PdfFieldSignature )ToPdfObject ()_cda .PdfObject {if _dbbfg .PdfAnnotationWidget !=nil {_dbbfg .PdfAnnotationWidget .ToPdfObject ();};_dbbfg .PdfField .ToPdfObject ();_feaa :=_dbbfg ._geab ;_bfefe :=_feaa .PdfObject .(*_cda .PdfObjectDictionary );
_bfefe .SetIfNotNil ("\u0046\u0054",_cda .MakeName ("\u0053\u0069\u0067"));_bfefe .SetIfNotNil ("\u004c\u006f\u0063\u006b",_dbbfg .Lock );_bfefe .SetIfNotNil ("\u0053\u0056",_dbbfg .SV );if _dbbfg .V !=nil {_bfefe .SetIfNotNil ("\u0056",_dbbfg .V .ToPdfObject ());
};return _feaa ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_ddage *XObjectForm )SetContentStream (content []byte ,encoder _cda .StreamEncoder )error {_gedace :=content ;if encoder ==nil {if _ddage .Filter !=nil {encoder =_ddage .Filter ;}else {encoder =_cda .NewRawEncoder ();};};_fcdaeb ,_fgcb :=encoder .EncodeBytes (_gedace );
if _fgcb !=nil {return _fgcb ;};_gedace =_fcdaeb ;_ddage .Stream =_gedace ;_ddage .Filter =encoder ;return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_dfadf *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbegb :=vals [0];_bccg :=[]float64 {_cbegb };_fecc ,_dbbd :=_dfadf .TintTransform .Evaluate (_bccg );
if _dbbd !=nil {_ae .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_dbbd );_ae .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_dfadf .TintTransform );
return nil ,_dbbd ;};_ae .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_fecc ,_dfadf .AlternateSpace );
_dgede ,_dbbd :=_dfadf .AlternateSpace .ColorFromFloats (_fecc );if _dbbd !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_dbbd );
return nil ,_dbbd ;};return _dgede ,nil ;};

// ToGoTime returns the date in time.Time format.
func (_ddgaac PdfDate )ToGoTime ()_be .Time {_aggc :=int (_ddgaac ._aeae *60*60+_ddgaac ._egeca *60);switch _ddgaac ._dcgeg {case '-':_aggc =-_aggc ;case 'Z':_aggc =0;};_adab :=_c .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_ddgaac ._dcgeg ,_ddgaac ._aeae ,_ddgaac ._egeca );
_degab :=_be .FixedZone (_adab ,_aggc );return _be .Date (int (_ddgaac ._cgdbb ),_be .Month (_ddgaac ._ceac ),int (_ddgaac ._ffbfc ),int (_ddgaac ._becdf ),int (_ddgaac ._acbge ),int (_ddgaac ._ddae ),0,_degab );};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_becba *PdfPageResources )GetPatternByName (keyName _cda .PdfObjectName )(*PdfPattern ,bool ){if _becba .Pattern ==nil {return nil ,false ;};_ffdgc ,_fbfcg :=_cda .TraceToDirectObject (_becba .Pattern ).(*_cda .PdfObjectDictionary );if !_fbfcg {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_becba .Pattern );
return nil ,false ;};if _beeag :=_ffdgc .Get (keyName );_beeag !=nil {_geeefb ,_gcce :=_ffdbgg (_beeag );if _gcce !=nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_gcce );
return nil ,false ;};return _geeefb ,true ;};return nil ,false ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_dgfg *pdfFontSimple )ToPdfObject ()_cda .PdfObject {if _dgfg ._bdeg ==nil {_dgfg ._bdeg =&_cda .PdfIndirectObject {};};_adce :=_dgfg .baseFields ().asPdfObjectDictionary ("");_dgfg ._bdeg .PdfObject =_adce ;if _dgfg .FirstChar !=nil {_adce .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_dgfg .FirstChar );
};if _dgfg .LastChar !=nil {_adce .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_dgfg .LastChar );};if _dgfg .Widths !=nil {_adce .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_dgfg .Widths );};if _dgfg .Encoding !=nil {_adce .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dgfg .Encoding );
}else if _dgfg ._dcag !=nil {_dfgd :=_dgfg ._dcag .ToPdfObject ();if _dfgd !=nil {_adce .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dfgd );};};return _dgfg ._bdeg ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_cgba *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_cda .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eggf ,_fdfe :=_cda .GetNumbersAsFloat (objects );
if _fdfe !=nil {return nil ,_fdfe ;};return _cgba .ColorFromFloats (_eggf );};func (_deac *DSS )generateHashMaps ()error {_bacce ,_bgab :=_deac .generateHashMap (_deac .Certs );if _bgab !=nil {return _bgab ;};_bfda ,_bgab :=_deac .generateHashMap (_deac .OCSPs );
if _bgab !=nil {return _bgab ;};_egdfb ,_bgab :=_deac .generateHashMap (_deac .CRLs );if _bgab !=nil {return _bgab ;};_deac ._abad =_bacce ;_deac ._efcf =_bfda ;_deac ._gceb =_egdfb ;return nil ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_fbcc :=NewPdfAction ();_aga :=&PdfActionMovie {};_aga .PdfAction =_fbcc ;_fbcc .SetContext (_aga );return _aga ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_gaeg *PdfAppender )UpdateObject (obj _cda .PdfObject ){_gaeg .replaceObject (obj ,obj );if _ ,_bgca :=_gaeg ._dece [obj ];!_bgca {_gaeg ._faae =append (_gaeg ._faae ,obj );_gaeg ._dece [obj ]=struct{}{};};};func _ababc (_agfb *_cda .PdfObjectDictionary )(*PdfFieldText ,error ){_aagd :=&PdfFieldText {};
_aagd .DA ,_ =_cda .GetString (_agfb .Get ("\u0044\u0041"));_aagd .Q ,_ =_cda .GetInt (_agfb .Get ("\u0051"));_aagd .DS ,_ =_cda .GetString (_agfb .Get ("\u0044\u0053"));_aagd .RV =_agfb .Get ("\u0052\u0056");_aagd .MaxLen ,_ =_cda .GetInt (_agfb .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));
return _aagd ,nil ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// SetContext sets the sub annotation (context).
func (_abd *PdfAnnotation )SetContext (ctx PdfModel ){_abd ._edbe =ctx };

// ToPdfObject implements interface PdfModel.
func (_eabb *PdfAnnotationStamp )ToPdfObject ()_cda .PdfObject {_eabb .PdfAnnotation .ToPdfObject ();_febcd :=_eabb ._afd ;_cbad :=_febcd .PdfObject .(*_cda .PdfObjectDictionary );_eabb .PdfAnnotationMarkup .appendToPdfDictionary (_cbad );_cbad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0053\u0074\u0061m\u0070"));
_cbad .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eabb .Name );return _febcd ;};func (_gbf *PdfReader )newPdfActionSubmitFormFromDict (_dce *_cda .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_accb ,_ddc :=_gef (_dce .Get ("\u0046"));if _ddc !=nil {return nil ,_ddc ;
};return &PdfActionSubmitForm {F :_accb ,Fields :_dce .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_dce .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_ccebe *PdfPageResources )SetXObjectImageByName (keyName _cda .PdfObjectName ,ximg *XObjectImage )error {_bgfe :=ximg .ToPdfObject ().(*_cda .PdfObjectStream );_dgfdd :=_ccebe .SetXObjectByName (keyName ,_bgfe );return _dgfdd ;};func _fegb (_gdbdg _cda .PdfObject )(*PdfFunctionType2 ,error ){_agff :=&PdfFunctionType2 {};
var _dgdgc *_cda .PdfObjectDictionary ;if _cbbee ,_gecb :=_gdbdg .(*_cda .PdfIndirectObject );_gecb {_dcfa ,_agabd :=_cbbee .PdfObject .(*_cda .PdfObjectDictionary );if !_agabd {return nil ,_ea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_agff ._fbbg =_cbbee ;_dgdgc =_dcfa ;}else if _dbabcb ,_deabb :=_gdbdg .(*_cda .PdfObjectDictionary );_deabb {_dgdgc =_dbabcb ;}else {return nil ,_ea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ae .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_dgdgc .String ());
_efab ,_fagab :=_cda .TraceToDirectObject (_dgdgc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cda .PdfObjectArray );if !_fagab {_ae .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ea .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _efab .Len ()< 0||_efab .Len ()%2!=0{_ae .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_ea .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_cdgfb ,_ffbag :=_efab .ToFloat64Array ();if _ffbag !=nil {return nil ,_ffbag ;};_agff .Domain =_cdgfb ;_efab ,_fagab =_cda .TraceToDirectObject (_dgdgc .Get ("\u0052\u0061\u006eg\u0065")).(*_cda .PdfObjectArray );if _fagab {if _efab .Len ()< 0||_efab .Len ()%2!=0{return nil ,_ea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_abfa ,_gcbe :=_efab .ToFloat64Array ();if _gcbe !=nil {return nil ,_gcbe ;};_agff .Range =_abfa ;};_efab ,_fagab =_cda .TraceToDirectObject (_dgdgc .Get ("\u0043\u0030")).(*_cda .PdfObjectArray );if _fagab {_feagb ,_dbgga :=_efab .ToFloat64Array ();
if _dbgga !=nil {return nil ,_dbgga ;};_agff .C0 =_feagb ;};_efab ,_fagab =_cda .TraceToDirectObject (_dgdgc .Get ("\u0043\u0031")).(*_cda .PdfObjectArray );if _fagab {_bdbgd ,_abae :=_efab .ToFloat64Array ();if _abae !=nil {return nil ,_abae ;};_agff .C1 =_bdbgd ;
};if len (_agff .C0 )!=len (_agff .C1 ){_ae .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_cda .ErrRangeError ;};N ,_ffbag :=_cda .GetNumberAsFloat (_cda .TraceToDirectObject (_dgdgc .Get ("\u004e")));
if _ffbag !=nil {_ae .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_dgdgc .String ());return nil ,_ffbag ;};_agff .N =N ;
return _agff ,nil ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_fbfb :=&PdfColorspaceCalRGB {};_fbfb .BlackPoint =[]float64 {0.0,0.0,0.0};_fbfb .Gamma =[]float64 {1.0,1.0,1.0};_fbfb .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _fbfb ;};func (_bdd *PdfReader )newPdfAnnotationPolygonFromDict (_edge *_cda .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_fbb :=PdfAnnotationPolygon {};
_adde ,_gag :=_bdd .newPdfAnnotationMarkupFromDict (_edge );if _gag !=nil {return nil ,_gag ;};_fbb .PdfAnnotationMarkup =_adde ;_fbb .Vertices =_edge .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_fbb .LE =_edge .Get ("\u004c\u0045");_fbb .BS =_edge .Get ("\u0042\u0053");
_fbb .IC =_edge .Get ("\u0049\u0043");_fbb .BE =_edge .Get ("\u0042\u0045");_fbb .IT =_edge .Get ("\u0049\u0054");_fbb .Measure =_edge .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_fbb ,nil ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_dfacd *PdfFontDescriptor )ToPdfObject ()_cda .PdfObject {_deaf :=_cda .MakeDict ();if _dfacd ._cffdg ==nil {_dfacd ._cffdg =&_cda .PdfIndirectObject {};};_dfacd ._cffdg .PdfObject =_deaf ;_deaf .Set ("\u0054\u0079\u0070\u0065",_cda .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _dfacd .FontName !=nil {_deaf .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_dfacd .FontName );};if _dfacd .FontFamily !=nil {_deaf .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_dfacd .FontFamily );};if _dfacd .FontStretch !=nil {_deaf .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_dfacd .FontStretch );
};if _dfacd .FontWeight !=nil {_deaf .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_dfacd .FontWeight );};if _dfacd .Flags !=nil {_deaf .Set ("\u0046\u006c\u0061g\u0073",_dfacd .Flags );};if _dfacd .FontBBox !=nil {_deaf .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_dfacd .FontBBox );
};if _dfacd .ItalicAngle !=nil {_deaf .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_dfacd .ItalicAngle );};if _dfacd .Ascent !=nil {_deaf .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_dfacd .Ascent );};if _dfacd .Descent !=nil {_deaf .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_dfacd .Descent );
};if _dfacd .Leading !=nil {_deaf .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_dfacd .Leading );};if _dfacd .CapHeight !=nil {_deaf .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_dfacd .CapHeight );};if _dfacd .XHeight !=nil {_deaf .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_dfacd .XHeight );
};if _dfacd .StemV !=nil {_deaf .Set ("\u0053\u0074\u0065m\u0056",_dfacd .StemV );};if _dfacd .StemH !=nil {_deaf .Set ("\u0053\u0074\u0065m\u0048",_dfacd .StemH );};if _dfacd .AvgWidth !=nil {_deaf .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_dfacd .AvgWidth );
};if _dfacd .MaxWidth !=nil {_deaf .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_dfacd .MaxWidth );};if _dfacd .MissingWidth !=nil {_deaf .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_dfacd .MissingWidth );};if _dfacd .FontFile !=nil {_deaf .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_dfacd .FontFile );
};if _dfacd .FontFile2 !=nil {_deaf .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_dfacd .FontFile2 );};if _dfacd .FontFile3 !=nil {_deaf .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_dfacd .FontFile3 );};if _dfacd .CharSet !=nil {_deaf .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_dfacd .CharSet );
};if _dfacd .Style !=nil {_deaf .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_dfacd .FontName );};if _dfacd .Lang !=nil {_deaf .Set ("\u004c\u0061\u006e\u0067",_dfacd .Lang );};if _dfacd .FD !=nil {_deaf .Set ("\u0046\u0044",_dfacd .FD );};
if _dfacd .CIDSet !=nil {_deaf .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_dfacd .CIDSet );};return _dfacd ._cffdg ;};func (_fca *PdfReader )newPdfAnnotationRichMediaFromDict (_ccdg *_cda .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_gggcg :=&PdfAnnotationRichMedia {};
_gggcg .RichMediaSettings =_ccdg .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_gggcg .RichMediaContent =_ccdg .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _gggcg ,nil ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _cda .PdfObject ;FontFamily _cda .PdfObject ;FontStretch _cda .PdfObject ;FontWeight _cda .PdfObject ;Flags _cda .PdfObject ;FontBBox _cda .PdfObject ;ItalicAngle _cda .PdfObject ;Ascent _cda .PdfObject ;Descent _cda .PdfObject ;
Leading _cda .PdfObject ;CapHeight _cda .PdfObject ;XHeight _cda .PdfObject ;StemV _cda .PdfObject ;StemH _cda .PdfObject ;AvgWidth _cda .PdfObject ;MaxWidth _cda .PdfObject ;MissingWidth _cda .PdfObject ;FontFile _cda .PdfObject ;FontFile2 _cda .PdfObject ;
FontFile3 _cda .PdfObject ;CharSet _cda .PdfObject ;_eebe int ;_gaacd float64 ;*fontFile ;_adfcc *_fd .TtfType ;

// Additional entries for CIDFonts
Style _cda .PdfObject ;Lang _cda .PdfObject ;FD _cda .PdfObject ;CIDSet _cda .PdfObject ;_cffdg *_cda .PdfIndirectObject ;};func (_ebba *PdfReader )newPdfAnnotationLinkFromDict (_fff *_cda .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_gfeb :=PdfAnnotationLink {};
_gfeb .A =_fff .Get ("\u0041");_gfeb .Dest =_fff .Get ("\u0044\u0065\u0073\u0074");_gfeb .H =_fff .Get ("\u0048");_gfeb .PA =_fff .Get ("\u0050\u0041");_gfeb .QuadPoints =_fff .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_gfeb .BS =_fff .Get ("\u0042\u0053");
return &_gfeb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_efdc *PdfAnnotationFileAttachment )ToPdfObject ()_cda .PdfObject {_efdc .PdfAnnotation .ToPdfObject ();_bceb :=_efdc ._afd ;_gagg :=_bceb .PdfObject .(*_cda .PdfObjectDictionary );_efdc .PdfAnnotationMarkup .appendToPdfDictionary (_gagg );_gagg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_gagg .SetIfNotNil ("\u0046\u0053",_efdc .FS );_gagg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_efdc .Name );return _bceb ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _cda .PdfObject ;V _cda .PdfObject ;};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_bdae *PdfFont )ToUnicode ()string {if _bdae .baseFields ()._bfdgd ==nil {return "";};return _bdae .baseFields ()._bfdgd .Name ();};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_fadac *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _adgcg []*PdfOutlineTreeNode ;var _fbge []string ;var _edgeg func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_edgeg =func (_eeggd *PdfOutlineTreeNode ,_agcff *[]*PdfOutlineTreeNode ,_baddg *[]string ,_fbcaa int ){if _eeggd ==nil {return ;
};if _eeggd ._debg ==nil {_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_efbc ,_dgagf :=_eeggd ._debg .(*PdfOutlineItem );if _dgagf {*_agcff =append (*_agcff ,&_efbc .PdfOutlineTreeNode );
_cagc :=_bb .Repeat ("\u0020",_fbcaa *2)+_efbc .Title .Decoded ();*_baddg =append (*_baddg ,_cagc );};if _eeggd .First !=nil {_agfbb :=_bb .Repeat ("\u0020",_fbcaa *2)+"\u002b";*_baddg =append (*_baddg ,_agfbb );_edgeg (_eeggd .First ,_agcff ,_baddg ,_fbcaa +1);
};if _dgagf &&_efbc .Next !=nil {_edgeg (_efbc .Next ,_agcff ,_baddg ,_fbcaa );};};_edgeg (_fadac ._gdaed ,&_adgcg ,&_fbge ,0);return _adgcg ,_fbge ,nil ;};

// SetFlag sets the flag for the field.
func (_eaeeb *PdfField )SetFlag (flag FieldFlag ){_eaeeb .Ff =_cda .MakeInteger (int64 (flag ))};func (_eecbc *LTV )getOCSPs (_fcdb []*_ff .Certificate ,_cgge map[string ]*_ff .Certificate )([][]byte ,error ){_aaccg :=make ([][]byte ,0,len (_fcdb ));for _ ,_bcacaa :=range _fcdb {for _ ,_dacdd :=range _bcacaa .OCSPServer {if _eecbc .CertClient .IsCA (_bcacaa ){continue ;
};_ccac ,_dffa :=_cgge [_bcacaa .Issuer .CommonName ];if !_dffa {_ae .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_ebfgb ,_bbff :=_eecbc .OCSPClient .MakeRequest (_dacdd ,_bcacaa ,_ccac );if _bbff !=nil {_ae .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_bbff );
continue ;};_aaccg =append (_aaccg ,_ebfgb );};};return _aaccg ,nil ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_cda .PdfObjectInteger ;BitsPerComponent *_cda .PdfObjectInteger ;VerticesPerRow *_cda .PdfObjectInteger ;Decode *_cda .PdfObjectArray ;Function []PdfFunction ;};func (_efbad *PdfReader )newPdfPageFromDict (_cfcffd *_cda .PdfObjectDictionary )(*PdfPage ,error ){_cfgfa :=NewPdfPage ();
_cfgfa ._edefc =_cfcffd ;_dega :=*_cfcffd ;_cfbebe ,_gbae :=_dega .Get ("\u0054\u0079\u0070\u0065").(*_cda .PdfObjectName );if !_gbae {return nil ,_ea .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_cfbebe !="\u0050\u0061\u0067\u0065"{return nil ,_ea .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _afefa :=_dega .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_afefa !=nil {_cfgfa .Parent =_afefa ;};if _fcfcg :=_dega .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_fcfcg !=nil {_bgeeg ,_eaad :=_cda .GetString (_fcfcg );if !_eaad {return nil ,_ea .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_ccabe ,_dacc :=NewPdfDate (_bgeeg .Str ());if _dacc !=nil {return nil ,_dacc ;};_cfgfa .LastModified =&_ccabe ;};if _ggbac :=_dega .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ggbac !=nil &&!_cda .IsNullObject (_ggbac ){_bcfbb ,_abeff :=_cda .GetDict (_ggbac );
if !_abeff {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ggbac );};var _abba error ;_cfgfa .Resources ,_abba =NewPdfPageResourcesFromDict (_bcfbb );
if _abba !=nil {return nil ,_abba ;};}else {_fcfbe ,_aedb :=_cfgfa .getParentResources ();if _aedb !=nil {return nil ,_aedb ;};if _fcfbe ==nil {_fcfbe =NewPdfPageResources ();};_cfgfa .Resources =_fcfbe ;};if _eacf :=_dega .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_eacf !=nil {_bbcdd ,_ceebg :=_cda .GetArray (_eacf );if !_ceebg {return nil ,_ea .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _bgcge error ;
_cfgfa .MediaBox ,_bgcge =NewPdfRectangle (*_bbcdd );if _bgcge !=nil {return nil ,_bgcge ;};};if _ccagb :=_dega .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_ccagb !=nil {_bfeac ,_aceb :=_cda .GetArray (_ccagb );if !_aceb {return nil ,_ea .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _cffgb error ;_cfgfa .CropBox ,_cffgb =NewPdfRectangle (*_bfeac );if _cffgb !=nil {return nil ,_cffgb ;};};if _cebc :=_dega .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_cebc !=nil {_effbb ,_ggbga :=_cda .GetArray (_cebc );if !_ggbga {return nil ,_ea .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _cbcda error ;_cfgfa .BleedBox ,_cbcda =NewPdfRectangle (*_effbb );if _cbcda !=nil {return nil ,_cbcda ;};};if _acac :=_dega .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_acac !=nil {_gbccf ,_bdecg :=_cda .GetArray (_acac );if !_bdecg {return nil ,_ea .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _bbbdd error ;_cfgfa .TrimBox ,_bbbdd =NewPdfRectangle (*_gbccf );if _bbbdd !=nil {return nil ,_bbbdd ;};};if _acffb :=_dega .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_acffb !=nil {_gggeg ,_eabcc :=_cda .GetArray (_acffb );if !_eabcc {return nil ,_ea .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _caegg error ;_cfgfa .ArtBox ,_caegg =NewPdfRectangle (*_gggeg );if _caegg !=nil {return nil ,_caegg ;};};if _fabg :=_dega .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_fabg !=nil {_cfgfa .BoxColorInfo =_fabg ;};if _bfca :=_dega .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_bfca !=nil {_cfgfa .Contents =_bfca ;};if _fafaf :=_dega .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_fafaf !=nil {_gcaee ,_becbc :=_cda .GetInt (_fafaf );if !_becbc {return nil ,_ea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_bccac :=int64 (*_gcaee );_cfgfa .Rotate =&_bccac ;};if _dgbcg :=_dega .Get ("\u0047\u0072\u006fu\u0070");_dgbcg !=nil {_cfgfa .Group =_dgbcg ;};if _fcgda :=_dega .Get ("\u0054\u0068\u0075m\u0062");_fcgda !=nil {_cfgfa .Thumb =_fcgda ;};if _gbfeb :=_dega .Get ("\u0042");
_gbfeb !=nil {_cfgfa .B =_gbfeb ;};if _cega :=_dega .Get ("\u0044\u0075\u0072");_cega !=nil {_cfgfa .Dur =_cega ;};if _gfegf :=_dega .Get ("\u0054\u0072\u0061n\u0073");_gfegf !=nil {_cfgfa .Trans =_gfegf ;};if _geceb :=_dega .Get ("\u0041\u0041");_geceb !=nil {_cfgfa .AA =_geceb ;
};if _abbbb :=_dega .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_abbbb !=nil {_cfgfa .Metadata =_abbbb ;};if _cdade :=_dega .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_cdade !=nil {_cfgfa .PieceInfo =_cdade ;};if _aeeed :=_dega .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_aeeed !=nil {_cfgfa .StructParents =_aeeed ;};if _eaag :=_dega .Get ("\u0049\u0044");_eaag !=nil {_cfgfa .ID =_eaag ;};if _gdgcag :=_dega .Get ("\u0050\u005a");_gdgcag !=nil {_cfgfa .PZ =_gdgcag ;};if _ffcf :=_dega .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_ffcf !=nil {_cfgfa .SeparationInfo =_ffcf ;};if _gefdbbf :=_dega .Get ("\u0054\u0061\u0062\u0073");_gefdbbf !=nil {_cfgfa .Tabs =_gefdbbf ;};if _gcfc :=_dega .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_gcfc !=nil {_cfgfa .TemplateInstantiated =_gcfc ;};if _fdage :=_dega .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_fdage !=nil {_cfgfa .PresSteps =_fdage ;};if _fgccf :=_dega .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_fgccf !=nil {_cfgfa .UserUnit =_fgccf ;
};if _bbdfc :=_dega .Get ("\u0056\u0050");_bbdfc !=nil {_cfgfa .VP =_bbdfc ;};if _fdfa :=_dega .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_fdfa !=nil {_cfgfa .Annots =_fdfa ;};_cfgfa ._abadcg =_efbad ;return _cfgfa ,nil ;};func _aff (_ebac _cda .PdfObject )(*PdfBorderStyle ,error ){_cabf :=&PdfBorderStyle {};
_cabf ._fbfa =_ebac ;var _ggfc *_cda .PdfObjectDictionary ;_ebac =_cda .TraceToDirectObject (_ebac );_ggfc ,_eaba :=_ebac .(*_cda .PdfObjectDictionary );if !_eaba {return nil ,_ea .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};
if _gcba :=_ggfc .Get ("\u0054\u0079\u0070\u0065");_gcba !=nil {_aefe ,_gcgf :=_gcba .(*_cda .PdfObjectName );if !_gcgf {_ae .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_gcba );
}else {if *_aefe !="\u0042\u006f\u0072\u0064\u0065\u0072"{_ae .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_aefe );};};};if _fgcc :=_ggfc .Get ("\u0057");
_fgcc !=nil {_gba ,_eeea :=_cda .GetNumberAsFloat (_fgcc );if _eeea !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_eeea );return nil ,_eeea ;};_cabf .W =&_gba ;
};if _aded :=_ggfc .Get ("\u0053");_aded !=nil {_gaff ,_aefc :=_aded .(*_cda .PdfObjectName );if !_aefc {return nil ,_ea .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _dbda BorderStyle ;switch *_gaff {case "\u0053":_dbda =BorderStyleSolid ;case "\u0044":_dbda =BorderStyleDashed ;case "\u0042":_dbda =BorderStyleBeveled ;case "\u0049":_dbda =BorderStyleInset ;case "\u0055":_dbda =BorderStyleUnderline ;default:_ae .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_gaff );
return nil ,_ea .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_cabf .S =&_dbda ;};if _gbb :=_ggfc .Get ("\u0044");_gbb !=nil {_bedf ,_bfdc :=_gbb .(*_cda .PdfObjectArray );
if !_bfdc {_ae .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_gbb );return nil ,_ea .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_dcgg ,_bacc :=_bedf .ToIntegerArray ();if _bacc !=nil {_ae .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_bacc );
return nil ,_bacc ;};_cabf .D =&_dcgg ;};return _cabf ,nil ;};

// GetNumComponents returns the number of color components.
func (_cgbd *PdfColorspaceICCBased )GetNumComponents ()int {return _cgbd .N };

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_fcae *PdfFont )SubsetRegistered ()error {switch _aegb :=_fcae ._aecg .(type ){case *pdfFontType0 :_cbagg :=_aegb .subsetRegistered ();if _cbagg !=nil {_ae .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_cbagg );
return _cbagg ;};if _aegb ._dbfa !=nil {if _aegb ._fbbce !=nil {_aegb ._fbbce .ToPdfObject ();};_aegb .ToPdfObject ();};default:_ae .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_aegb );
};return nil ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_bcaca *PdfField )IsTerminal ()bool {return len (_bcaca .Kids )==0};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_dggfd *PdfPage )SetContentStreams (cStreams []string ,encoder _cda .StreamEncoder )error {if len (cStreams )==0{_dggfd .Contents =nil ;return nil ;};if encoder ==nil {encoder =_cda .NewRawEncoder ();};var _gedef []*_cda .PdfObjectStream ;for _ ,_dgddg :=range cStreams {_gdcgd :=&_cda .PdfObjectStream {};
_bbedg :=encoder .MakeStreamDict ();_agcabe ,_eegfd :=encoder .EncodeBytes ([]byte (_dgddg ));if _eegfd !=nil {return _eegfd ;};_bbedg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cda .MakeInteger (int64 (len (_agcabe ))));_gdcgd .PdfObjectDictionary =_bbedg ;
_gdcgd .Stream =_agcabe ;_gedef =append (_gedef ,_gdcgd );};if len (_gedef )==1{_dggfd .Contents =_gedef [0];}else {_dbdg :=_cda .MakeArray ();for _ ,_fbcag :=range _gedef {_dbdg .Append (_fbcag );};_dggfd .Contents =_dbdg ;};return nil ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_cda .PdfIndirectObject )*PdfOutlineItem {_acgd :=PdfOutlineItem {};_acgd ._debg =&_acgd ;_acgd .Title =_cda .MakeString (title );_afabc :=_cda .MakeArray ();_afabc .Append (page );_afabc .Append (_cda .MakeName ("\u0046\u0069\u0074"));
_acgd .Dest =_afabc ;return &_acgd ;};func _edebd (_ceaf _cda .PdfObject )[]*_cda .PdfObjectStream {if _ceaf ==nil {return nil ;};_fgbaa ,_abac :=_cda .GetArray (_ceaf );if !_abac ||_fgbaa .Len ()==0{return nil ;};_eeeff :=make ([]*_cda .PdfObjectStream ,0,_fgbaa .Len ());
for _ ,_cceedc :=range _fgbaa .Elements (){if _ggfeb ,_fffad :=_cda .GetStream (_cceedc );_fffad {_eeeff =append (_eeeff ,_ggfeb );};};return _eeeff ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_edbec PdfModel ;_eaedcg _cda .PdfObject ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_debfe *PdfShading )GetContext ()PdfModel {return _debfe ._gbee };

// GetXObjectByName gets XObject by name.
func (_bgda *PdfPage )GetXObjectByName (name _cda .PdfObjectName )(_cda .PdfObject ,bool ){_degdg ,_cedbg :=_bgda .Resources .XObject .(*_cda .PdfObjectDictionary );if !_cedbg {return nil ,false ;};if _fagfa :=_degdg .Get (name );_fagfa !=nil {return _fagfa ,true ;
};return nil ,false ;};func _afcac ()string {_abecg :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _bacgb _dc .Buffer ;for _adgca :=0;_adgca < 6;
_adgca ++{_bacgb .WriteRune (rune (_abecg [_ee .Intn (len (_abecg ))]));};return _bacgb .String ();};func (_gdaea *PdfWriter )hasObject (_dcdcb _cda .PdfObject )bool {_ ,_fdfdf :=_gdaea ._ffbg [_dcdcb ];return _fdfdf ;};func (_eccb *PdfReader )newPdfAnnotationWatermarkFromDict (_ebda *_cda .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_eeda :=PdfAnnotationWatermark {};
_eeda .FixedPrint =_ebda .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_eeda ,nil ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;func _egadf ()string {_aafcc .Lock ();defer _aafcc .Unlock ();return _fccdf };

// ToPdfObject returns the PDF representation of the function.
func (_dcebg *PdfFunctionType4 )ToPdfObject ()_cda .PdfObject {_feabe :=_dcebg ._cfbb ;if _feabe ==nil {_dcebg ._cfbb =&_cda .PdfObjectStream {};_feabe =_dcebg ._cfbb ;};_cdabe :=_cda .MakeDict ();_cdabe .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cda .MakeInteger (4));
_bagad :=&_cda .PdfObjectArray {};for _ ,_bfde :=range _dcebg .Domain {_bagad .Append (_cda .MakeFloat (_bfde ));};_cdabe .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bagad );_cbdc :=&_cda .PdfObjectArray {};for _ ,_gede :=range _dcebg .Range {_cbdc .Append (_cda .MakeFloat (_gede ));
};_cdabe .Set ("\u0052\u0061\u006eg\u0065",_cbdc );if _dcebg ._bfgcd ==nil &&_dcebg .Program !=nil {_dcebg ._bfgcd =[]byte (_dcebg .Program .String ());};_cdabe .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cda .MakeInteger (int64 (len (_dcebg ._bfgcd ))));
_feabe .Stream =_dcebg ._bfgcd ;_feabe .PdfObjectDictionary =_cdabe ;return _feabe ;};func _fcacf (_dfccg _cda .PdfObject ,_dfg bool )(*PdfFont ,error ){_gcec ,_abce ,_cfgc :=_dead (_dfccg );if _cfgc !=nil {if _cfgc ==ErrType1CFontNotSupported {_bcff ,_eagg :=_fgegb (_gcec ,_abce ,nil );
if _eagg !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_abce ,_eagg );
return nil ,_cfgc ;};return &PdfFont {_aecg :_bcff },_cfgc ;};return nil ,_cfgc ;};_fgacc :=&PdfFont {};switch _abce ._fceb {case "\u0054\u0079\u0070e\u0030":if !_dfg {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_abce );
return nil ,_ea .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_geecg ,_efaf :=_abead (_gcec ,_abce );if _efaf !=nil {_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_abce ,_efaf );
return nil ,_efaf ;};_fgacc ._aecg =_geecg ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _adfeg *pdfFontSimple ;_bacd ,_faca :=_fd .NewStdFontByName (_fd .StdFontName (_abce ._gedd ));
if _faca {_dbabc :=_cgaee (_bacd );_fgacc ._aecg =&_dbabc ;_gffa :=_cda .TraceToDirectObject (_dbabc .ToPdfObject ());_dabbf ,_aafbd ,_abbc :=_dead (_gffa );if _abbc !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_abce ,_dbabc );
return nil ,_abbc ;};for _ ,_cdcff :=range _gcec .Keys (){_dabbf .Set (_cdcff ,_gcec .Get (_cdcff ));};_adfeg ,_abbc =_fgegb (_dabbf ,_aafbd ,_dbabc ._afee );if _abbc !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_abce ,_dbabc );
return nil ,_abbc ;};_adfeg ._fbgce =_dbabc ._fbgce ;_adfeg ._aefg =_dbabc ._aefg ;}else {_adfeg ,_cfgc =_fgegb (_gcec ,_abce ,nil );if _cfgc !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_abce ,_cfgc );
return nil ,_cfgc ;};};_cfgc =_adfeg .addEncoding ();if _cfgc !=nil {return nil ,_cfgc ;};if _faca {_adfeg .updateStandard14Font ();};if _faca &&_adfeg ._dcag ==nil &&_adfeg ._afee ==nil {_ae .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_adfeg );
_ae .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_bacd );};if len (_adfeg ._fbgce )==0{_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_adfeg );};_fgacc ._aecg =_adfeg ;
case "\u0054\u0079\u0070e\u0033":_abgcg ,_cfdd :=_ceba (_gcec ,_abce );if _cfdd !=nil {_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_cfdd );
return nil ,_cfdd ;};_fgacc ._aecg =_abgcg ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_cdcgc ,_efed :=_cfeae (_gcec ,_abce );if _efed !=nil {_ae .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_efed );
return nil ,_efed ;};_fgacc ._aecg =_cdcgc ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_gbef ,_fddeg :=_feabf (_gcec ,_abce );if _fddeg !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_abce ,_fddeg );
return nil ,_fddeg ;};_fgacc ._aecg =_gbef ;default:_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_abce );
return nil ,_c .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_abce );};return _fgacc ,nil ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_dfefbg *PdfReader )GetObjectNums ()[]int {return _dfefbg ._gaedg .GetObjectNums ()};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _cda .PdfObject ;RichMediaContent _cda .PdfObject ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_gfdbd *PdfReader )GetPageLabels ()(_cda .PdfObject ,error ){_ababe :=_cda .ResolveReference (_gfdbd ._ggef .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _ababe ==nil {return nil ,nil ;};if !_gfdbd ._fdgef {_gdgac :=_gfdbd .traverseObjectData (_ababe );
if _gdgac !=nil {return nil ,_gdgac ;};};return _ababe ,nil ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_ffca *PdfAppender )UpdatePage (page *PdfPage ){_ffca .updateObjectsDeep (page .ToPdfObject (),nil )};

// IsShading specifies if the pattern is a shading pattern.
func (_bced *PdfPattern )IsShading ()bool {return _bced .PatternType ==2};type pdfFontType0 struct{fontCommon ;_dbfa *_cda .PdfIndirectObject ;_fbbce _aef .TextEncoder ;Encoding _cda .PdfObject ;DescendantFont *PdfFont ;_feba *_db .CMap ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _cda .PdfObject ;Popup *PdfAnnotationPopup ;CA _cda .PdfObject ;RC _cda .PdfObject ;CreationDate _cda .PdfObject ;IRT _cda .PdfObject ;Subj _cda .PdfObject ;RT _cda .PdfObject ;IT _cda .PdfObject ;ExData _cda .PdfObject ;
};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _cda .PdfObject ;BS _cda .PdfObject ;LE _cda .PdfObject ;IC _cda .PdfObject ;LL _cda .PdfObject ;LLE _cda .PdfObject ;Cap _cda .PdfObject ;IT _cda .PdfObject ;LLO _cda .PdfObject ;CP _cda .PdfObject ;
Measure _cda .PdfObject ;CO _cda .PdfObject ;};

// GetContentStreams returns the content stream as an array of strings.
func (_dgffe *PdfPage )GetContentStreams ()([]string ,error ){_cffba :=_dgffe .GetContentStreamObjs ();var _dgee []string ;for _ ,_cccbb :=range _cffba {_bbfd ,_dfdab :=_cgbgcc (_cccbb );if _dfdab !=nil {return nil ,_dfdab ;};_dgee =append (_dgee ,_bbfd );
};return _dgee ,nil ;};

// MergePageWith appends page content to source Pdf file page content.
func (_cbea *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_cbeed :=pageNum -1;var _cbeg *PdfPage ;for _bcea ,_fedc :=range _cbea ._cafc {if _bcea ==_cbeed {_cbeg =_fedc ;};};if _cbeg ==nil {return _c .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _cbeg ._bcadb !=nil &&_cbeg ._bcadb .GetParser ()==_cbea ._ddaff ._gaedg {_cbeg =_cbeg .Duplicate ();_cbea ._cafc [_cbeed ]=_cbeg ;};page =page .Duplicate ();_agdef (page );_adbd :=_beace (_cbeg );_dbe :=_beace (page );_aagef :=make (map[_cda .PdfObjectName ]_cda .PdfObjectName );
for _dfac :=range _dbe {if _ ,_dfce :=_adbd [_dfac ];_dfce {for _ggdaf :=1;true ;_ggdaf ++{_dcdg :=_cda .PdfObjectName (string (_dfac )+_gc .Itoa (_ggdaf ));if _ ,_bged :=_adbd [_dcdg ];!_bged {_aagef [_dfac ]=_dcdg ;break ;};};};};_dfaf ,_caae :=page .GetContentStreams ();
if _caae !=nil {return _caae ;};_aabce ,_caae :=_cbeg .GetContentStreams ();if _caae !=nil {return _caae ;};for _cefda ,_ggfcd :=range _dfaf {for _fdedd ,_ccba :=range _aagef {_ggfcd =_bb .Replace (_ggfcd ,"\u002f"+string (_fdedd ),"\u002f"+string (_ccba ),-1);
};_dfaf [_cefda ]=_ggfcd ;};_aabce =append (_aabce ,_dfaf ...);if _ccfd :=_cbeg .SetContentStreams (_aabce ,_cda .NewFlateEncoder ());_ccfd !=nil {return _ccfd ;};_cbeg ._ceeaa =append (_cbeg ._ceeaa ,page ._ceeaa ...);if _cbeg .Resources ==nil {_cbeg .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_cbeg .Resources .Font =_cbea .mergeResources (_cbeg .Resources .Font ,page .Resources .Font ,_aagef );_cbeg .Resources .XObject =_cbea .mergeResources (_cbeg .Resources .XObject ,page .Resources .XObject ,_aagef );_cbeg .Resources .Properties =_cbea .mergeResources (_cbeg .Resources .Properties ,page .Resources .Properties ,_aagef );
if _cbeg .Resources .ProcSet ==nil {_cbeg .Resources .ProcSet =page .Resources .ProcSet ;};_cbeg .Resources .Shading =_cbea .mergeResources (_cbeg .Resources .Shading ,page .Resources .Shading ,_aagef );_cbeg .Resources .ExtGState =_cbea .mergeResources (_cbeg .Resources .ExtGState ,page .Resources .ExtGState ,_aagef );
};_gefa ,_caae :=_cbeg .GetMediaBox ();if _caae !=nil {return _caae ;};_edgc ,_caae :=page .GetMediaBox ();if _caae !=nil {return _caae ;};var _cdagf bool ;if _gefa .Llx > _edgc .Llx {_gefa .Llx =_edgc .Llx ;_cdagf =true ;};if _gefa .Lly > _edgc .Lly {_gefa .Lly =_edgc .Lly ;
_cdagf =true ;};if _gefa .Urx < _edgc .Urx {_gefa .Urx =_edgc .Urx ;_cdagf =true ;};if _gefa .Ury < _edgc .Ury {_gefa .Ury =_edgc .Ury ;_cdagf =true ;};if _cdagf {_cbeg .MediaBox =_gefa ;};return nil ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_gcaeff *PdfSignature )bool ;Validate (_dbgac *PdfSignature ,_cbfce Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_badbc *PdfSignature )(Hasher ,error );Sign (_fgbdc *PdfSignature ,_dbfad Hasher )error ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_fbaab *Outline )ToPdfObject ()_cda .PdfObject {return _fbaab .ToPdfOutline ().ToPdfObject ()};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gdbbfe *PdfShadingType3 )ToPdfObject ()_cda .PdfObject {_gdbbfe .PdfShading .ToPdfObject ();_ggcfe ,_fcfcf :=_gdbbfe .getShadingDict ();if _fcfcf !=nil {_ae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gdbbfe .Coords !=nil {_ggcfe .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_gdbbfe .Coords );};if _gdbbfe .Domain !=nil {_ggcfe .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gdbbfe .Domain );};if _gdbbfe .Function !=nil {if len (_gdbbfe .Function )==1{_ggcfe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gdbbfe .Function [0].ToPdfObject ());
}else {_fecd :=_cda .MakeArray ();for _ ,_fcgcd :=range _gdbbfe .Function {_fecd .Append (_fcgcd .ToPdfObject ());};_ggcfe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fecd );};};if _gdbbfe .Extend !=nil {_ggcfe .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_gdbbfe .Extend );
};return _gdbbfe ._bfddc ;};

// SetBorderWidth sets the style's border width.
func (_deg *PdfBorderStyle )SetBorderWidth (width float64 ){_deg .W =&width };

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _cda .PdfObject ;IsMap _cda .PdfObject ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_gecfd *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_fd .CharMetrics ;

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_gcfe :=NewPdfAnnotation ();_dga :=&PdfAnnotationInk {};_dga .PdfAnnotation =_gcfe ;_dga .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gcfe .SetContext (_dga );return _dga ;};func (_cgebb *fontFile )loadFromSegments (_fegg ,_dfed []byte )error {_ae .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_fegg ),len (_dfed ));
_dddc :=_cgebb .parseASCIIPart (_fegg );if _dddc !=nil {return _dddc ;};_ae .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_cgebb );if len (_dfed )==0{return nil ;};_ae .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_cgebb );
return nil ;};

// HasExtGState checks if ExtGState name is available.
func (_abgdf *PdfPage )HasExtGState (name _cda .PdfObjectName )bool {if _abgdf .Resources ==nil {return false ;};if _abgdf .Resources .ExtGState ==nil {return false ;};_ggbaf ,_befba :=_cda .TraceToDirectObject (_abgdf .Resources .ExtGState ).(*_cda .PdfObjectDictionary );
if !_befba {_ae .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_cda .TraceToDirectObject (_abgdf .Resources .ExtGState ));
return false ;};_bbad :=_ggbaf .Get (name );_bcdec :=_bbad !=nil ;return _bcdec ;};func (_cab *PdfReader )newPdfActionMovieFromDict (_eabgg *_cda .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_eabgg .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_eabgg .Get ("\u0054"),Operation :_eabgg .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};func (_cced *PdfReader )newPdfActionThreadFromDict (_gaa *_cda .PdfObjectDictionary )(*PdfActionThread ,error ){_bfgg ,_eae :=_gef (_gaa .Get ("\u0046"));if _eae !=nil {return nil ,_eae ;};return &PdfActionThread {D :_gaa .Get ("\u0044"),B :_gaa .Get ("\u0042"),F :_bfgg },nil ;
};

// Evaluate runs the function on the passed in slice and returns the results.
func (_egfbc *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ae .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_abbg :=[]float64 {0.0};if _egfbc .C0 !=nil {_abbg =_egfbc .C0 ;};_fdac :=[]float64 {1.0};if _egfbc .C1 !=nil {_fdac =_egfbc .C1 ;};var _eedag []float64 ;for _bcgg :=0;_bcgg < len (_abbg );_bcgg ++{_dabeac :=_abbg [_bcgg ]+_ba .Pow (x [0],_egfbc .N )*(_fdac [_bcgg ]-_abbg [_bcgg ]);
_eedag =append (_eedag ,_dabeac );};return _eedag ,nil ;};func (_eefe *PdfWriter )writeString (_cabagg string ){if _eefe ._dgef !=nil {return ;};_edeg ,_efebe :=_eefe ._abgca .WriteString (_cabagg );_eefe ._gdbec +=int64 (_edeg );_eefe ._dgef =_efebe ;
};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_afeb *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_aaeg :=0.3*_afeb .R ()+0.59*_afeb .G ()+0.11*_afeb .B ();_aaeg =_ba .Min (_ba .Max (_aaeg ,0.0),1.0);return NewPdfColorDeviceGray (_aaeg );};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_afabe *PdfOutlineItem )GetContainingPdfObject ()_cda .PdfObject {return _afabe ._cggef };

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_dada *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_adgbe *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_cda .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebaf ,_cdgf :=_cda .GetNumbersAsFloat (objects );
if _cdgf !=nil {return nil ,_cdgf ;};return _adgbe .ColorFromFloats (_ebaf );};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_acagc :=map[rune ]int {};for _ ,_bcbde :=range text {_acagc [_bcbde ]++;};return _acagc ;};func (_aecb *pdfFontSimple )baseFields ()*fontCommon {return &_aecb .fontCommon };

// DecodeArray returns the component range values for the Separation colorspace.
func (_cbag *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_bbgbf :=NewPdfOutline ();_bbgbf ._debg =&_bbgbf ;return _bbgbf ;};func _cafdb (_babbag _cda .PdfObject ,_aefde *PdfReader )(*OutlineDest ,error ){_bbfgcb ,_ffad :=_cda .GetArray (_babbag );if !_ffad {return nil ,_ea .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_dgfeg :=_bbfgcb .Len ();if _dgfeg < 2{return nil ,_c .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_dgfeg );
};_edfg :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_fbgb :=_bbfgcb .Get (0);if _dcdda ,_ebfgc :=_cda .GetIndirect (_fbgb );_ebfgc {if _ ,_geae ,_bcag :=_aefde .PageFromIndirectObject (_dcdda );_bcag ==nil {_edfg .Page =int64 (_geae -1);}else {_ae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_dcdda );
};_edfg .PageObj =_dcdda ;}else if _gaca ,_gebf :=_cda .GetIntVal (_fbgb );_gebf {if _gaca >=0&&_gaca < len (_aefde .PageList ){_edfg .PageObj =_aefde .PageList [_gaca ].GetPageAsIndirectObject ();}else {_ae .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_gaca );
};_edfg .Page =int64 (_gaca );}else {return nil ,_c .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_fbgb );};_fdfbg ,_ffad :=_cda .GetNameVal (_bbfgcb .Get (1));
if !_ffad {_ae .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_bbfgcb .Get (1));
return _edfg ,nil ;};switch _fdfbg {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _dgfeg > 2{_edfg .Y ,_ =_cda .GetNumberAsFloat (_cda .TraceToDirectObject (_bbfgcb .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _dgfeg > 2{_edfg .X ,_ =_cda .GetNumberAsFloat (_cda .TraceToDirectObject (_bbfgcb .Get (2)));
};case "\u0058\u0059\u005a":if _dgfeg > 4{_edfg .X ,_ =_cda .GetNumberAsFloat (_cda .TraceToDirectObject (_bbfgcb .Get (2)));_edfg .Y ,_ =_cda .GetNumberAsFloat (_cda .TraceToDirectObject (_bbfgcb .Get (3)));_edfg .Zoom ,_ =_cda .GetNumberAsFloat (_cda .TraceToDirectObject (_bbfgcb .Get (4)));
};default:_fdfbg ="\u0046\u0069\u0074";};_edfg .Mode =_fdfbg ;return _edfg ,nil ;};

// B returns the value of the B component of the color.
func (_ddbg *PdfColorCalRGB )B ()float64 {return _ddbg [1]};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_cgfac *XObjectImage )SetFilter (encoder _cda .StreamEncoder )error {_cccdg :=_cgfac .Stream ;_ebfbc ,_ffeea :=_cgfac .Filter .DecodeBytes (_cccdg );if _ffeea !=nil {return _ffeea ;};_cgfac .Filter =encoder ;encoder .UpdateParams (_cgfac .getParamsDict ());
_cccdg ,_ffeea =encoder .EncodeBytes (_ebfbc );if _ffeea !=nil {return _ffeea ;};_cgfac .Stream =_cccdg ;return nil ;};func _cgfg (_gffgc *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_gffgc }};const (BorderStyleSolid BorderStyle =iota ;
BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// ToPdfObject returns the PDF representation of the colorspace.
func (_cfabb *PdfPageResourcesColorspaces )ToPdfObject ()_cda .PdfObject {_ggabd :=_cda .MakeDict ();for _ ,_gdde :=range _cfabb .Names {_ggabd .Set (_cda .PdfObjectName (_gdde ),_cfabb .Colorspaces [_gdde ].ToPdfObject ());};if _cfabb ._cgdc !=nil {_cfabb ._cgdc .PdfObject =_ggabd ;
return _cfabb ._cgdc ;};return _ggabd ;};

// CustomKeys returns all custom info keys as list.
func (_dcbdd *PdfInfo )CustomKeys ()[]string {if _dcbdd ._adaa ==nil {return nil ;};_fgae :=make ([]string ,len (_dcbdd ._adaa .Keys ()));for _ ,_dcffd :=range _dcbdd ._adaa .Keys (){_fgae =append (_fgae ,_dcffd .String ());};return _fgae ;};

// SetVersion sets the PDF version of the output file.
func (_ddbad *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_ddbad ._bgce =majorVersion ;_ddbad ._agfdf =minorVersion ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_cgdb *PdfOutline )ToPdfObject ()_cda .PdfObject {_fafef :=_cgdb ._cfbd ;_gfgfc :=_fafef .PdfObject .(*_cda .PdfObjectDictionary );_gfgfc .Set ("\u0054\u0079\u0070\u0065",_cda .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _cgdb .First !=nil {_gfgfc .Set ("\u0046\u0069\u0072s\u0074",_cgdb .First .ToPdfObject ());
};if _cgdb .Last !=nil {_gfgfc .Set ("\u004c\u0061\u0073\u0074",_cgdb .Last .GetContext ().GetContainingPdfObject ());};if _cgdb .Parent !=nil {_gfgfc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cgdb .Parent .GetContext ().GetContainingPdfObject ());
};if _cgdb .Count !=nil {_gfgfc .Set ("\u0043\u006f\u0075n\u0074",_cda .MakeInteger (*_cgdb .Count ));};return _fafef ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_aabcg *PdfField )ToPdfObject ()_cda .PdfObject {_cefcd :=_aabcg ._geab ;_bcafa :=_cefcd .PdfObject .(*_cda .PdfObjectDictionary );_fddc :=_cda .MakeArray ();for _ ,_fcbd :=range _aabcg .Kids {_fddc .Append (_fcbd .ToPdfObject ());};for _ ,_febb :=range _aabcg .Annotations {if _febb ._afd !=_aabcg ._geab {_fddc .Append (_febb .GetContext ().ToPdfObject ());
};};if _aabcg .Parent !=nil {_bcafa .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_aabcg .Parent .GetContainingPdfObject ());};if _fddc .Len ()> 0{_bcafa .Set ("\u004b\u0069\u0064\u0073",_fddc );};_bcafa .SetIfNotNil ("\u0046\u0054",_aabcg .FT );
_bcafa .SetIfNotNil ("\u0054",_aabcg .T );_bcafa .SetIfNotNil ("\u0054\u0055",_aabcg .TU );_bcafa .SetIfNotNil ("\u0054\u004d",_aabcg .TM );_bcafa .SetIfNotNil ("\u0046\u0066",_aabcg .Ff );_bcafa .SetIfNotNil ("\u0056",_aabcg .V );_bcafa .SetIfNotNil ("\u0044\u0056",_aabcg .DV );
_bcafa .SetIfNotNil ("\u0041\u0041",_aabcg .AA );return _cefcd ;};func (_decg *PdfReader )newPdfAnnotationStampFromDict (_ccag *_cda .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_eafc :=PdfAnnotationStamp {};_eede ,_baff :=_decg .newPdfAnnotationMarkupFromDict (_ccag );
if _baff !=nil {return nil ,_baff ;};_eafc .PdfAnnotationMarkup =_eede ;_eafc .Name =_ccag .Get ("\u004e\u0061\u006d\u0065");return &_eafc ,nil ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_bggf *PdfPageResources )SetXObjectByName (keyName _cda .PdfObjectName ,stream *_cda .PdfObjectStream )error {if _bggf .XObject ==nil {_bggf .XObject =_cda .MakeDict ();};_ecebe :=_cda .TraceToDirectObject (_bggf .XObject );_bdede ,_cdbe :=_ecebe .(*_cda .PdfObjectDictionary );
if !_cdbe {_ae .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_bggf .XObject ,_ecebe );return _ea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bdede .Set (keyName ,stream );return nil ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_bfagb *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eeebb :=vals [0];if _eeebb < 0.0||_eeebb > 1.0{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_gega :=vals [1];if _gega < 0.0||_gega > 1.0{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eggdd :=vals [2];if _eggdd < 0.0||_eggdd > 1.0{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_cabb :=vals [3];if _cabb < 0.0||_cabb > 1.0{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbace :=NewPdfColorDeviceCMYK (_eeebb ,_gega ,_eggdd ,_cabb );return _dbace ,nil ;};type crossReference struct{Type int ;


// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_eaadf *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_ddde ,_fcaac :=_cda .GetDict (_eaadf ._bgafe .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_fcaac {_ddde =_cda .MakeDict ();_eaadf ._bgafe .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_ddde );
};_dcdfg ,_fcaac :=_cda .GetDict (_ddde .Get (_cda .PdfObjectName (extName )));if !_fcaac {_dcdfg =_cda .MakeDict ();_ddde .Set (_cda .PdfObjectName (extName ),_dcdfg );};if _cedg ,_ :=_cda .GetNameVal (_dcdfg .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_cedg !=baseVersion {_dcdfg .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_cda .MakeName (baseVersion ));};if _bgfca ,_ :=_cda .GetIntVal (_dcdfg .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_bgfca !=extLevel {_dcdfg .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_cda .MakeInteger (int64 (extLevel )));};};func (_afcf *pdfCIDFontType2 )baseFields ()*fontCommon {return &_afcf .fontCommon };

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_eeccg *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _eeccg .AlternateSpace ==nil {return nil ,_ea .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _eeccg .AlternateSpace .ColorToRGB (color );};

// ToPdfObject returns the PDF representation of the function.
func (_ccbb *PdfFunctionType3 )ToPdfObject ()_cda .PdfObject {_bdgfab :=_cda .MakeDict ();_bdgfab .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cda .MakeInteger (3));_afbeb :=&_cda .PdfObjectArray {};for _ ,_fbeee :=range _ccbb .Domain {_afbeb .Append (_cda .MakeFloat (_fbeee ));
};_bdgfab .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_afbeb );if _ccbb .Range !=nil {_dbad :=&_cda .PdfObjectArray {};for _ ,_cfbce :=range _ccbb .Range {_dbad .Append (_cda .MakeFloat (_cfbce ));};_bdgfab .Set ("\u0052\u0061\u006eg\u0065",_dbad );};
if _ccbb .Functions !=nil {_dfefb :=&_cda .PdfObjectArray {};for _ ,_cfcag :=range _ccbb .Functions {_dfefb .Append (_cfcag .ToPdfObject ());};_bdgfab .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_dfefb );};if _ccbb .Bounds !=nil {_ggaac :=&_cda .PdfObjectArray {};
for _ ,_dfada :=range _ccbb .Bounds {_ggaac .Append (_cda .MakeFloat (_dfada ));};_bdgfab .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_ggaac );};if _ccbb .Encode !=nil {_decba :=&_cda .PdfObjectArray {};for _ ,_ggeg :=range _ccbb .Encode {_decba .Append (_cda .MakeFloat (_ggeg ));
};_bdgfab .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_decba );};if _ccbb ._eadcc !=nil {_ccbb ._eadcc .PdfObject =_bdgfab ;return _ccbb ._eadcc ;};return _bdgfab ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_acgf *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _acgf .Alternate ==nil {_ae .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _acgf .N ==1{_ae .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_acfaf :=NewPdfColorspaceDeviceGray ();return _acfaf .ImageToRGB (img );}else if _acgf .N ==3{_ae .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _acgf .N ==4{_ae .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_acfe :=NewPdfColorspaceDeviceCMYK ();return _acfe .ImageToRGB (img );}else {return img ,_ea .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_ae .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_acgf );
_ceae ,_gfdb :=_acgf .Alternate .ImageToRGB (img );_ae .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_ae .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_ceae );
return _ceae ,_gfdb ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_cdbfe *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_dfcfe :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_ddcc ,_fcafc :=_cdbfe .GetNumPages ();if _fcafc !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcafc );
return nil ,_fcafc ;};for _ecage :=1;_ecage <=_ddcc ;_ecage ++{_gdecb ,_bbcg :=_cdbfe .GetPage (_ecage );if _bbcg !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbcg );return nil ,_bbcg ;};if opts .PageProcessCallback !=nil {_bbcg =opts .PageProcessCallback (_ecage ,_gdecb );
if _bbcg !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbcg );return nil ,_bbcg ;};}else if opts .PageCallback !=nil {opts .PageCallback (_ecage ,_gdecb );};_bbcg =_dfcfe .AddPage (_gdecb );if _bbcg !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbcg );
return nil ,_bbcg ;};};_dfcfe ._bgce =_cdbfe .PdfVersion ().Major ;_dfcfe ._agfdf =_cdbfe .PdfVersion ().Minor ;if !opts .SkipInfo {_edddc ,_eebag :=_cdbfe .GetPdfInfo ();if _eebag !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eebag );
}else {_dfcfe ._acdadd .PdfObject =_edddc .ToPdfObject ();};};if !opts .SkipAcroForm {_bebf :=_dfcfe .SetForms (_cdbfe .AcroForm );if _bebf !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bebf );return nil ,_bebf ;};};if !opts .SkipOutlines {_dfcfe .AddOutlineTree (_cdbfe .GetOutlineTree ());
};if !opts .SkipOCProperties {_agcg ,_aafbdb :=_cdbfe .GetOCProperties ();if _aafbdb !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aafbdb );}else {_aafbdb =_dfcfe .SetOCProperties (_agcg );if _aafbdb !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aafbdb );
};};};if !opts .SkipPageLabels {_ebag ,_cfaca :=_cdbfe .GetPageLabels ();if _cfaca !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cfaca );}else {_cfaca =_dfcfe .SetPageLabels (_ebag );if _cfaca !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cfaca );
};};};if !opts .SkipNamedDests {_ffgba ,_gcbec :=_cdbfe .GetNamedDestinations ();if _gcbec !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gcbec );}else {_gcbec =_dfcfe .SetNamedDestinations (_ffgba );if _gcbec !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gcbec );
};};};if !opts .SkipNameDictionary {_dbfbd ,_agbcd :=_cdbfe .GetNameDictionary ();if _agbcd !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agbcd );}else {_agbcd =_dfcfe .SetNameDictionary (_dbfbd );if _agbcd !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agbcd );
};};};if !opts .SkipRotation &&_cdbfe .Rotate !=nil {if _fcgec :=_dfcfe .SetRotation (*_cdbfe .Rotate );_fcgec !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcgec );};};return &_dfcfe ,nil ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_ddd *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// L returns the value of the L component of the color.
func (_fbaac *PdfColorLab )L ()float64 {return _fbaac [0]};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cbcb pdfFontType3 )GetRuneMetrics (r rune )(_fd .CharMetrics ,bool ){_gbed :=_cbcb .Encoder ();if _gbed ==nil {_ae .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_cbcb );
return _fd .CharMetrics {},false ;};_bffggd ,_bgge :=_gbed .RuneToCharcode (r );if !_bgge {if r !=' '{_ae .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_cbcb );
};return _fd .CharMetrics {},false ;};_eagf ,_ccefd :=_cbcb .GetCharMetrics (_bffggd );return _eagf ,_ccefd ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// SetReason sets the `Reason` field of the signature.
func (_face *PdfSignature )SetReason (reason string ){_face .Reason =_cda .MakeString (reason )};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_dceg *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_fbff *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_acaf ,_febd :=color .(*PdfColorDeviceCMYK );if !_febd {_ae .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_ea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gfcd :=_acaf .C ();_badd :=_acaf .M ();_fefg :=_acaf .Y ();_dcgee :=_acaf .K ();_gfcd =_gfcd *(1-_dcgee )+_dcgee ;_badd =_badd *(1-_dcgee )+_dcgee ;
_fefg =_fefg *(1-_dcgee )+_dcgee ;_ceea :=1-_gfcd ;_dagc :=1-_badd ;_fcac :=1-_fefg ;return NewPdfColorDeviceRGB (_ceea ,_dagc ,_fcac ),nil ;};func (_eadcf *fontFile )parseASCIIPart (_ccab []byte )error {if len (_ccab )< 2||string (_ccab [:2])!="\u0025\u0021"{return _ea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_fabb ,_dcad ,_gcdf :=_gcda (_ccab );if _gcdf !=nil {return _gcdf ;};_efbfd :=_bfdgb (_fabb );_eadcf ._bafcg =_efbfd ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _eadcf ._bafcg ==""{_ae .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _dcad !=""{_adcb ,_acab :=_fdggf (_dcad );if _acab !=nil {return _acab ;};_bdaeg ,_acab :=_aef .NewCustomSimpleTextEncoder (_adcb ,nil );if _acab !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_acab );
return nil ;};_eadcf ._ggff =_bdaeg ;};return nil ;};func (_bfae *PdfReader )newPdfAnnotation3DFromDict (_cacb *_cda .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_ccbf :=PdfAnnotation3D {};_ccbf .T3DD =_cacb .Get ("\u0033\u0044\u0044");_ccbf .T3DV =_cacb .Get ("\u0033\u0044\u0056");
_ccbf .T3DA =_cacb .Get ("\u0033\u0044\u0041");_ccbf .T3DI =_cacb .Get ("\u0033\u0044\u0049");_ccbf .T3DB =_cacb .Get ("\u0033\u0044\u0042");return &_ccbf ,nil ;};func (_eagac *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _eagac ._gaedg .GetCrypter ()!=nil &&!_eagac ._gaedg .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_gacg :=_eagac ._ggef ;_bgade :=_gacg .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _bgade ==nil {return nil ,nil ;};_ae .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_fgcgf :=_cda .ResolveReference (_bgade );
_ae .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_fgcgf );if _agade :=_cda .IsNullObject (_fgcgf );_agade {_ae .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_cdece ,_ddbaf :=_fgcgf .(*_cda .PdfIndirectObject );if !_ddbaf {if _ ,_gcac :=_cda .GetDict (_fgcgf );!_gcac {_ae .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_ae .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_cdece =_cda .MakeIndirectObject (_fgcgf );};_fcec ,_ddbaf :=_cdece .PdfObject .(*_cda .PdfObjectDictionary );if !_ddbaf {return nil ,_ea .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_ae .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_fcec );_cddcb ,_ ,_fdabf :=_eagac .buildOutlineTree (_cdece ,nil ,nil ,nil );if _fdabf !=nil {return nil ,_fdabf ;};_ae .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_cddcb );
return _cddcb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eagc *PdfActionHide )ToPdfObject ()_cda .PdfObject {_eagc .PdfAction .ToPdfObject ();_dfc :=_eagc ._dcg ;_ccg :=_dfc .PdfObject .(*_cda .PdfObjectDictionary );_ccg .SetIfNotNil ("\u0053",_cda .MakeName (string (ActionTypeHide )));_ccg .SetIfNotNil ("\u0054",_eagc .T );
_ccg .SetIfNotNil ("\u0048",_eagc .H );return _dfc ;};

// Val returns the color value.
func (_gege *PdfColorDeviceGray )Val ()float64 {return float64 (*_gege )};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_afbfa *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _efbbb []*PdfField ;if _afbfa .AcroForm !=nil {_efbbb =_afbfa .AcroForm .AllFields ();};_cadf :=make (map[*PdfField ]struct{},len (_efbbb ));for _ ,_cagfg :=range _efbbb {_cadf [_cagfg ]=struct{}{};
};for _ ,_abecge :=range _afbfa .PageList {_addgg ,_bfaa :=_abecge .GetAnnotations ();if _bfaa !=nil {return false ,_bfaa ;};for _ ,_aefdec :=range _addgg {_ebdcf ,_becg :=_aefdec .GetContext ().(*PdfAnnotationWidget );if !_becg {continue ;};_abbed :=_ebdcf .Field ();
if _abbed ==nil {return true ,nil ;};if _ ,_gdadg :=_cadf [_abbed ];!_gdadg {return true ,nil ;};};};return false ,nil ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_adaff :=&XObjectForm {};_bfadb :=&_cda .PdfObjectStream {};_bfadb .PdfObjectDictionary =_cda .MakeDict ();_adaff ._edcbb =_bfadb ;return _adaff ;};func _abead (_bfagd *_cda .PdfObjectDictionary ,_fcgd *fontCommon )(*pdfFontType0 ,error ){_cecf ,_cabd :=_cda .GetArray (_bfagd .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_cabd {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_fcgd );
return nil ,_cda .ErrRangeError ;};if _cecf .Len ()!=1{_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_cecf .Len ());return nil ,_cda .ErrRangeError ;
};_fagbd ,_gbcf :=_fcacf (_cecf .Get (0),false );if _gbcf !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_gbcf ,_fcgd );
return nil ,_gbcf ;};_bdbg :=_dgcea (_fcgd );_bdbg .DescendantFont =_fagbd ;_ffdg ,_cabd :=_cda .GetNameVal (_bfagd .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _cabd {if _ffdg =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_ffdg =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_bdbg ._fbbce =_aef .NewIdentityTextEncoder (_ffdg );
}else if _db .IsPredefinedCMap (_ffdg ){_bdbg ._feba ,_gbcf =_db .LoadPredefinedCMap (_ffdg );if _gbcf !=nil {_ae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_ffdg ,_gbcf );
};}else {_ae .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_ffdg );};};if _fcfaf :=_fagbd .baseFields ()._bfdgd ;_fcfaf !=nil {if _gadcd :=_fcfaf .Name ();_gadcd =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_gadcd =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_gadcd =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_gadcd =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_bdbg ._fbbce =_aef .NewCMapEncoder (_ffdg ,_bdbg ._feba ,_fcfaf );
};};return _bdbg ,nil ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_eadcc *_cda .PdfIndirectObject ;};func _ffdbgg (_gdgg _cda .PdfObject )(*PdfPattern ,error ){_ebeg :=&PdfPattern {};var _gebd *_cda .PdfObjectDictionary ;
if _fgcg ,_gcgfd :=_cda .GetIndirect (_gdgg );_gcgfd {_ebeg ._eaedcg =_fgcg ;_afdb ,_efaee :=_fgcg .PdfObject .(*_cda .PdfObjectDictionary );if !_efaee {_ae .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_fgcg .PdfObject );
return nil ,_cda .ErrTypeError ;};_gebd =_afdb ;}else if _dgeeg ,_bbee :=_cda .GetStream (_gdgg );_bbee {_ebeg ._eaedcg =_dgeeg ;_gebd =_dgeeg .PdfObjectDictionary ;}else {_ae .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_gdgg );
return nil ,_cda .ErrTypeError ;};_eecec :=_gebd .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _eecec ==nil {_ae .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_edfdg ,_bbaae :=_eecec .(*_cda .PdfObjectInteger );if !_bbaae {_ae .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_eecec );
return nil ,_cda .ErrTypeError ;};if *_edfdg !=1&&*_edfdg !=2{_ae .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_edfdg );return nil ,_cda .ErrRangeError ;
};_ebeg .PatternType =int64 (*_edfdg );switch *_edfdg {case 1:_gacbg ,_gefc :=_cddae (_gebd );if _gefc !=nil {return nil ,_gefc ;};_gacbg .PdfPattern =_ebeg ;_ebeg ._edbec =_gacbg ;return _ebeg ,nil ;case 2:_bdee ,_defab :=_cebcb (_gebd );if _defab !=nil {return nil ,_defab ;
};_bdee .PdfPattern =_ebeg ;_ebeg ._edbec =_bdee ;return _ebeg ,nil ;};return nil ,_ea .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// ToPdfObject implements interface PdfModel.
func (_ga *PdfActionLaunch )ToPdfObject ()_cda .PdfObject {_ga .PdfAction .ToPdfObject ();_ggda :=_ga ._dcg ;_baf :=_ggda .PdfObject .(*_cda .PdfObjectDictionary );_baf .SetIfNotNil ("\u0053",_cda .MakeName (string (ActionTypeLaunch )));if _ga .F !=nil {_baf .Set ("\u0046",_ga .F .ToPdfObject ());
};_baf .SetIfNotNil ("\u0057\u0069\u006e",_ga .Win );_baf .SetIfNotNil ("\u004d\u0061\u0063",_ga .Mac );_baf .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ga .Unix );_baf .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ga .NewWindow );return _ggda ;
};func (_dadf *Image )resampleLowBits (_gcfb []uint32 ){_cbdcb :=_eee .BytesPerLine (int (_dadf .Width ),int (_dadf .BitsPerComponent ),_dadf .ColorComponents );_bdeb :=make ([]byte ,_dadf .ColorComponents *_cbdcb *int (_dadf .Height ));_cfcfc :=int (_dadf .BitsPerComponent )*_dadf .ColorComponents *int (_dadf .Width );
_bffa :=uint8 (8);var (_cafca ,_cffg int ;_ebcaf uint32 ;);for _fbaf :=0;_fbaf < int (_dadf .Height );_fbaf ++{_cffg =_fbaf *_cbdcb ;for _babebd :=0;_babebd < _cfcfc ;_babebd ++{_ebcaf =_gcfb [_cafca ];_bffa -=uint8 (_dadf .BitsPerComponent );_bdeb [_cffg ]|=byte (_ebcaf )<<_bffa ;
if _bffa ==0{_bffa =8;_cffg ++;};_cafca ++;};};_dadf .Data =_bdeb ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_bbed *PdfColorspaceCalRGB )ToPdfObject ()_cda .PdfObject {_dceb :=&_cda .PdfObjectArray {};_dceb .Append (_cda .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_aaddd :=_cda .MakeDict ();if _bbed .WhitePoint !=nil {_feac :=_cda .MakeArray (_cda .MakeFloat (_bbed .WhitePoint [0]),_cda .MakeFloat (_bbed .WhitePoint [1]),_cda .MakeFloat (_bbed .WhitePoint [2]));
_aaddd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_feac );}else {_ae .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _bbed .BlackPoint !=nil {_fgafb :=_cda .MakeArray (_cda .MakeFloat (_bbed .BlackPoint [0]),_cda .MakeFloat (_bbed .BlackPoint [1]),_cda .MakeFloat (_bbed .BlackPoint [2]));_aaddd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_fgafb );
};if _bbed .Gamma !=nil {_eafca :=_cda .MakeArray (_cda .MakeFloat (_bbed .Gamma [0]),_cda .MakeFloat (_bbed .Gamma [1]),_cda .MakeFloat (_bbed .Gamma [2]));_aaddd .Set ("\u0047\u0061\u006dm\u0061",_eafca );};if _bbed .Matrix !=nil {_gedg :=_cda .MakeArray (_cda .MakeFloat (_bbed .Matrix [0]),_cda .MakeFloat (_bbed .Matrix [1]),_cda .MakeFloat (_bbed .Matrix [2]),_cda .MakeFloat (_bbed .Matrix [3]),_cda .MakeFloat (_bbed .Matrix [4]),_cda .MakeFloat (_bbed .Matrix [5]),_cda .MakeFloat (_bbed .Matrix [6]),_cda .MakeFloat (_bbed .Matrix [7]),_cda .MakeFloat (_bbed .Matrix [8]));
_aaddd .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gedg );};_dceb .Append (_aaddd );if _bbed ._dfcee !=nil {_bbed ._dfcee .PdfObject =_dceb ;return _bbed ._dfcee ;};return _dceb ;};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_cda .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// Width returns the width of `rect`.
func (_edded *PdfRectangle )Width ()float64 {return _ba .Abs (_edded .Urx -_edded .Llx )};func _gcda (_bfad []byte )(_ffee ,_fffa string ,_aeefbe error ){_ae .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_bfad ));
_cggf :=_dggb .FindIndex (_bfad );if _cggf ==nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_cda .ErrTypeError ;};_cfdb :=_cggf [1];_aecbf :=_bb .Index (string (_bfad [_cfdb :]),_dbddc );if _aecbf < 0{_ffee =string (_bfad [_cfdb :]);return _ffee ,"",nil ;};_cbgc :=_cfdb +_aecbf ;_ffee =string (_bfad [_cfdb :_cbgc ]);_dcaee :=_cbgc ;
_aecbf =_bb .Index (string (_bfad [_dcaee :]),_cbaf );if _aecbf < 0{_ae .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_aeefbe );
return "","",_cda .ErrTypeError ;};_bebab :=_dcaee +_aecbf ;_fffa =string (_bfad [_dcaee :_bebab ]);return _ffee ,_fffa ,nil ;};func _feeg (_fcde _cda .PdfObject )(*PdfColorspaceCalGray ,error ){_ecagd :=NewPdfColorspaceCalGray ();if _aedc ,_abdb :=_fcde .(*_cda .PdfIndirectObject );
_abdb {_ecagd ._cada =_aedc ;};_fcde =_cda .TraceToDirectObject (_fcde );_eaef ,_adbf :=_fcde .(*_cda .PdfObjectArray );if !_adbf {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _eaef .Len ()!=2{return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_fcde =_cda .TraceToDirectObject (_eaef .Get (0));_bgdc ,_adbf :=_fcde .(*_cda .PdfObjectName );if !_adbf {return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_bgdc !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_c .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_fcde =_cda .TraceToDirectObject (_eaef .Get (1));
_agdc ,_adbf :=_fcde .(*_cda .PdfObjectDictionary );if !_adbf {return nil ,_c .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_fcde =_agdc .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_fcde =_cda .TraceToDirectObject (_fcde );_bbba ,_adbf :=_fcde .(*_cda .PdfObjectArray );if !_adbf {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _bbba .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_ebffg ,_gdcga :=_bbba .GetAsFloat64Slice ();
if _gdcga !=nil {return nil ,_gdcga ;};_ecagd .WhitePoint =_ebffg ;_fcde =_agdc .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _fcde !=nil {_fcde =_cda .TraceToDirectObject (_fcde );_afff ,_ddbd :=_fcde .(*_cda .PdfObjectArray );
if !_ddbd {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _afff .Len ()!=3{return nil ,_c .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_fbaa ,_ebfg :=_afff .GetAsFloat64Slice ();if _ebfg !=nil {return nil ,_ebfg ;};_ecagd .BlackPoint =_fbaa ;};_fcde =_agdc .Get ("\u0047\u0061\u006dm\u0061");if _fcde !=nil {_fcde =_cda .TraceToDirectObject (_fcde );_eafb ,_ddfbg :=_cda .GetNumberAsFloat (_fcde );
if _ddfbg !=nil {return nil ,_c .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_ecagd .Gamma =_eafb ;};return _ecagd ,nil ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_ggccb *PdfPage )Duplicate ()*PdfPage {_ccgc :=*_ggccb ;_ccgc ._edefc =_cda .MakeDict ();_ccgc ._bcadb =_cda .MakeIndirectObject (_ccgc ._edefc );return &_ccgc ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_cadeg _cd .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_agcb _e .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_ggbd _e .Image )(*Image ,error );

// Compress an image.
Compress (_ecadg *Image ,_ggfec int64 )(*Image ,error );};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_gfgff :=PdfWriter {};_gfgff ._ffbg =map[_cda .PdfObject ]struct{}{};_gfgff ._gbffa =[]_cda .PdfObject {};_gfgff ._caada =map[_cda .PdfObject ][]*_cda .PdfObjectDictionary {};_gfgff ._bddff =map[_cda .PdfObject ]struct{}{};
_gfgff ._bgce =1;_gfgff ._agfdf =3;_egga :=_cda .MakeDict ();_abgbf :=[]struct{_gbfdc _cda .PdfObjectName ;_cacef string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_fedd ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_beeeg ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_cdebe ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_egadf ()},{"\u0054\u0069\u0074l\u0065",_abffe ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_fcdf ()}};
for _ ,_ggcfec :=range _abgbf {if _ggcfec ._cacef !=""{_egga .Set (_ggcfec ._gbfdc ,_cda .MakeString (_ggcfec ._cacef ));};};if _faaag :=_gfabe ();!_faaag .IsZero (){if _gggac ,_bfbc :=NewPdfDateFromTime (_faaag );_bfbc ==nil {_egga .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_gggac .ToPdfObject ());
};};if _abdcf :=_cccag ();!_abdcf .IsZero (){if _adgcag ,_abacb :=NewPdfDateFromTime (_abdcf );_abacb ==nil {_egga .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_adgcag .ToPdfObject ());};};_bcbg :=_cda .PdfIndirectObject {};_bcbg .PdfObject =_egga ;_gfgff ._acdadd =&_bcbg ;
_gfgff .addObject (&_bcbg );_cgbaf :=_cda .PdfIndirectObject {};_bfcbcf :=_cda .MakeDict ();_bfcbcf .Set ("\u0054\u0079\u0070\u0065",_cda .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_cgbaf .PdfObject =_bfcbcf ;_gfgff ._cddbe =&_cgbaf ;_gfgff .addObject (_gfgff ._cddbe );
_cdffb ,_bbefdd :=_efgbc ("\u0077");if _bbefdd !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbefdd );};_gfgff ._gdbaa =_cdffb ;_bfcac :=_cda .PdfIndirectObject {};_bedee :=_cda .MakeDict ();_bedee .Set ("\u0054\u0079\u0070\u0065",_cda .MakeName ("\u0050\u0061\u0067e\u0073"));
_gbab :=_cda .PdfObjectArray {};_bedee .Set ("\u004b\u0069\u0064\u0073",&_gbab );_bedee .Set ("\u0043\u006f\u0075n\u0074",_cda .MakeInteger (0));_bfcac .PdfObject =_bedee ;_gfgff ._bacdc =&_bfcac ;_gfgff ._baegb =map[_cda .PdfObject ]struct{}{};_gfgff .addObject (_gfgff ._bacdc );
_bfcbcf .Set ("\u0050\u0061\u0067e\u0073",&_bfcac );_gfgff ._bgafe =_bfcbcf ;_ae .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_cgbaf );return _gfgff ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cccf pdfCIDFontType0 )GetRuneMetrics (r rune )(_fd .CharMetrics ,bool ){return _fd .CharMetrics {Wx :_cccf ._bafac },true ;};func _gdbcd (_eega *_cda .PdfObjectDictionary )(*PdfShadingType2 ,error ){_adadc :=PdfShadingType2 {};_fbce :=_eega .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");
if _fbce ==nil {_ae .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;
};_gddbb ,_cfaaf :=_fbce .(*_cda .PdfObjectArray );if !_cfaaf {_ae .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fbce );return nil ,_ea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};if _gddbb .Len ()!=4{_ae .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gddbb .Len ());return nil ,_ea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");
};_adadc .Coords =_gddbb ;if _afga :=_eega .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_afga !=nil {_afga =_cda .TraceToDirectObject (_afga );_babbc ,_accc :=_afga .(*_cda .PdfObjectArray );if !_accc {_ae .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_afga );
return nil ,_ea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_adadc .Domain =_babbc ;};_fbce =_eega .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fbce ==nil {_ae .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_adadc .Function =[]PdfFunction {};if _bceg ,_bceaa :=_fbce .(*_cda .PdfObjectArray );_bceaa {for _ ,_aecdb :=range _bceg .Elements (){_accbf ,_bceeb :=_facff (_aecdb );if _bceeb !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bceeb );
return nil ,_bceeb ;};_adadc .Function =append (_adadc .Function ,_accbf );};}else {_egaa ,_ccec :=_facff (_fbce );if _ccec !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ccec );
return nil ,_ccec ;};_adadc .Function =append (_adadc .Function ,_egaa );};if _gcdab :=_eega .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_gcdab !=nil {_gcdab =_cda .TraceToDirectObject (_gcdab );_fbdcae ,_fbdab :=_gcdab .(*_cda .PdfObjectArray );if !_fbdab {_ae .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gcdab );
return nil ,_cda .ErrTypeError ;};if _fbdcae .Len ()!=2{_ae .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_fbdcae .Len ());return nil ,ErrInvalidAttribute ;
};_adadc .Extend =_fbdcae ;};return &_adadc ,nil ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_cbaece *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _cbaece ._ceeaa ==nil {_cbaece .GetAnnotations ();};_cbaece ._ceeaa =append (_cbaece ._ceeaa ,annot );};

// ToPdfObject implements interface PdfModel.
func (_efcg *PdfAnnotationInk )ToPdfObject ()_cda .PdfObject {_efcg .PdfAnnotation .ToPdfObject ();_efbbc :=_efcg ._afd ;_ffa :=_efbbc .PdfObject .(*_cda .PdfObjectDictionary );_efcg .PdfAnnotationMarkup .appendToPdfDictionary (_ffa );_ffa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0049\u006e\u006b"));
_ffa .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_efcg .InkList );_ffa .SetIfNotNil ("\u0042\u0053",_efcg .BS );return _efbbc ;};func (_cdcaa *PdfWriter )addObject (_bebcc _cda .PdfObject )bool {_addaa :=_cdcaa .hasObject (_bebcc );if !_addaa {_abeg :=_cda .ResolveReferencesDeep (_bebcc ,_cdcaa ._bddff );
if _abeg !=nil {_ae .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_abeg );};_cdcaa ._gbffa =append (_cdcaa ._gbffa ,_bebcc );_cdcaa ._ffbg [_bebcc ]=struct{}{};return true ;};return false ;
};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cafdd *PdfShading )ToPdfObject ()_cda .PdfObject {_eeaef :=_cafdd ._bfddc ;_abdaf ,_bgfbc :=_cafdd .getShadingDict ();if _bgfbc !=nil {_ae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cafdd .ShadingType !=nil {_abdaf .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_cafdd .ShadingType );};if _cafdd .ColorSpace !=nil {_abdaf .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_cafdd .ColorSpace .ToPdfObject ());
};if _cafdd .Background !=nil {_abdaf .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_cafdd .Background );};if _cafdd .BBox !=nil {_abdaf .Set ("\u0042\u0042\u006f\u0078",_cafdd .BBox .ToPdfObject ());};if _cafdd .AntiAlias !=nil {_abdaf .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_cafdd .AntiAlias );
};return _eeaef ;};func (_addf *PdfReader )newPdfFieldFromIndirectObject (_bege *_cda .PdfIndirectObject ,_abag *PdfField )(*PdfField ,error ){if _ggba ,_gcaa :=_addf ._bbgffg .GetModelFromPrimitive (_bege ).(*PdfField );_gcaa {return _ggba ,nil ;};_ddge ,_bdgaa :=_cda .GetDict (_bege );
if !_bdgaa {return nil ,_c .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_acfed :=NewPdfField ();_acfed ._geab =_bege ;_acfed ._geab .PdfObject =_ddge ;if _faga ,_bcfc :=_cda .GetName (_ddge .Get ("\u0046\u0054"));_bcfc {_acfed .FT =_faga ;};if _abag !=nil {_acfed .Parent =_abag ;};_acfed .T ,_ =_ddge .Get ("\u0054").(*_cda .PdfObjectString );
_acfed .TU ,_ =_ddge .Get ("\u0054\u0055").(*_cda .PdfObjectString );_acfed .TM ,_ =_ddge .Get ("\u0054\u004d").(*_cda .PdfObjectString );_acfed .Ff ,_ =_ddge .Get ("\u0046\u0066").(*_cda .PdfObjectInteger );_acfed .V =_ddge .Get ("\u0056");_acfed .DV =_ddge .Get ("\u0044\u0056");
_acfed .AA =_ddge .Get ("\u0041\u0041");_ebbb :=_acfed .FT ;if _ebbb ==nil &&_abag !=nil {_ebbb =_abag .FT ;};if _ebbb !=nil {switch *_ebbb {case "\u0054\u0078":_geac ,_gabf :=_ababc (_ddge );if _gabf !=nil {return nil ,_gabf ;};_geac .PdfField =_acfed ;
_acfed ._dccg =_geac ;case "\u0043\u0068":_bfea ,_geaf :=_gddad (_ddge );if _geaf !=nil {return nil ,_geaf ;};_bfea .PdfField =_acfed ;_acfed ._dccg =_bfea ;case "\u0042\u0074\u006e":_fagag ,_bbfc :=_gcfdb (_ddge );if _bbfc !=nil {return nil ,_bbfc ;};
_fagag .PdfField =_acfed ;_acfed ._dccg =_fagag ;case "\u0053\u0069\u0067":_gedgc ,_aeca :=_addf .newPdfFieldSignatureFromDict (_ddge );if _aeca !=nil {return nil ,_aeca ;};_gedgc .PdfField =_acfed ;_acfed ._dccg =_gedgc ;default:_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_acfed .FT );
return nil ,_ea .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _gdfac ,_daba :=_cda .GetName (_ddge .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_daba {if *_gdfac =="\u0057\u0069\u0064\u0067\u0065\u0074"{_gbdbg ,_feacc :=_addf .newPdfAnnotationFromIndirectObject (_bege );
if _feacc !=nil {return nil ,_feacc ;};_bedeb ,_aabcga :=_gbdbg .GetContext ().(*PdfAnnotationWidget );if !_aabcga {return nil ,_ea .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");
};_bedeb ._cba =_acfed ;_bedeb .Parent =_acfed ._geab ;_acfed .Annotations =append (_acfed .Annotations ,_bedeb );return _acfed ,nil ;};};_gefb :=true ;if _faff ,_gbdc :=_cda .GetArray (_ddge .Get ("\u004b\u0069\u0064\u0073"));_gbdc {_beee :=make ([]*_cda .PdfIndirectObject ,0,_faff .Len ());
for _ ,_eccbc :=range _faff .Elements (){_egggf ,_geeef :=_cda .GetIndirect (_eccbc );if !_geeef {_gcdb ,_adfee :=_cda .GetStream (_eccbc );if _adfee &&_gcdb .PdfObjectDictionary !=nil {_fgdad ,_dfbf :=_cda .GetNameVal (_gcdb .Get ("\u0054\u0079\u0070\u0065"));
if _dfbf &&_fgdad =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_ae .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_ea .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_fddbf ,_bccb :=_cda .GetDict (_egggf );
if !_bccb {return nil ,ErrTypeCheck ;};if _gefb {_gefb =!_dggc (_fddbf );};_beee =append (_beee ,_egggf );};for _ ,_gccg :=range _beee {if _gefb {_fcfg ,_cdfa :=_addf .newPdfAnnotationFromIndirectObject (_gccg );if _cdfa !=nil {_ae .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_cdfa );
return nil ,_cdfa ;};_fbdg ,_edaef :=_fcfg ._edbe .(*PdfAnnotationWidget );if !_edaef {return nil ,ErrTypeCheck ;};_fbdg ._cba =_acfed ;_acfed .Annotations =append (_acfed .Annotations ,_fbdg );}else {_aggb ,_egegc :=_addf .newPdfFieldFromIndirectObject (_gccg ,_acfed );
if _egegc !=nil {_ae .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_egegc );return nil ,_egegc ;};_acfed .Kids =append (_acfed .Kids ,_aggb );
};};};return _acfed ,nil ;};

// B returns the value of the B component of the color.
func (_fdag *PdfColorLab )B ()float64 {return _fdag [2]};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_gfbgea *VRI )ToPdfObject ()*_cda .PdfObjectDictionary {_gfcg :=_cda .MakeDict ();_gfcg .SetIfNotNil (_cda .PdfObjectName ("\u0043\u0065\u0072\u0074"),_egafd (_gfbgea .Cert ));_gfcg .SetIfNotNil (_cda .PdfObjectName ("\u004f\u0043\u0053\u0050"),_egafd (_gfbgea .OCSP ));
_gfcg .SetIfNotNil (_cda .PdfObjectName ("\u0043\u0052\u004c"),_egafd (_gfbgea .CRL ));_gfcg .SetIfNotNil ("\u0054\u0055",_gfbgea .TU );_gfcg .SetIfNotNil ("\u0054\u0053",_gfbgea .TS );return _gfcg ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_gabbf []byte ;_fdaag []uint32 ;_bfeee *_cda .PdfObjectStream ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_dbbg *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_ea .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_ffac ,_afdc :=_eee .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._eeeg ,img ._eabad );if _afdc !=nil {return img ,_afdc ;};_cfdc ,_afdc :=_eee .NRGBAConverter .Convert (_ffac );if _afdc !=nil {return img ,_afdc ;
};_cbge :=_fdaad (_cfdc .Base ());_ae .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_ae .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_ae .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_cbge .Data );
_ae .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_cbge );return _cbge ,nil ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _be .Time )(PdfDate ,error ){_fbaabe :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_ffead ,_ :=_gc .ParseInt (_fbaabe [1:3],10,32);_beadac ,_ :=_gc .ParseInt (_fbaabe [4:6],10,32);return PdfDate {_cgdbb :int64 (timeObj .Year ()),_ceac :int64 (timeObj .Month ()),_ffbfc :int64 (timeObj .Day ()),_becdf :int64 (timeObj .Hour ()),_acbge :int64 (timeObj .Minute ()),_ddae :int64 (timeObj .Second ()),_dcgeg :_fbaabe [0],_aeae :_ffead ,_egeca :_beadac },nil ;
};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _cda .StreamEncoder ;FormType _cda .PdfObject ;BBox _cda .PdfObject ;Matrix _cda .PdfObject ;Resources *PdfPageResources ;Group _cda .PdfObject ;Ref _cda .PdfObject ;MetaData _cda .PdfObject ;PieceInfo _cda .PdfObject ;LastModified _cda .PdfObject ;
StructParent _cda .PdfObject ;StructParents _cda .PdfObject ;OPI _cda .PdfObject ;OC _cda .PdfObject ;Name _cda .PdfObject ;

// Stream data.
Stream []byte ;_edcbb *_cda .PdfObjectStream ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_cfb *PdfAnnotation )GetContext ()PdfModel {if _cfb ==nil {return nil ;};return _cfb ._edbe ;};

// AddWatermarkImage adds a watermark to the page.
func (_bdcd *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_eaabg ,_bgcab :=_bdcd .GetMediaBox ();if _bgcab !=nil {return _bgcab ;};_gaeb :=_eaabg .Urx -_eaabg .Llx ;_dade :=_eaabg .Ury -_eaabg .Lly ;_cdgg :=float64 (*ximg .Width );
_cffbe :=(_gaeb -_cdgg )/2;if opt .FitToWidth {_cdgg =_gaeb ;_cffbe =0;};_gabee :=_dade ;_dabfc :=float64 (0);if opt .PreserveAspectRatio {_gabee =_cdgg *float64 (*ximg .Height )/float64 (*ximg .Width );_dabfc =(_dade -_gabee )/2;};if _bdcd .Resources ==nil {_bdcd .Resources =NewPdfPageResources ();
};_fbbgf :=0;_agagc :=_cda .PdfObjectName (_c .Sprintf ("\u0049\u006d\u0077%\u0064",_fbbgf ));for _bdcd .Resources .HasXObjectByName (_agagc ){_fbbgf ++;_agagc =_cda .PdfObjectName (_c .Sprintf ("\u0049\u006d\u0077%\u0064",_fbbgf ));};_bgcab =_bdcd .AddImageResource (_agagc ,ximg );
if _bgcab !=nil {return _bgcab ;};_fbbgf =0;_bbcea :=_cda .PdfObjectName (_c .Sprintf ("\u0047\u0053\u0025\u0064",_fbbgf ));for _bdcd .HasExtGState (_bbcea ){_fbbgf ++;_bbcea =_cda .PdfObjectName (_c .Sprintf ("\u0047\u0053\u0025\u0064",_fbbgf ));};_ebeea :=_cda .MakeDict ();
_ebeea .Set ("\u0042\u004d",_cda .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_ebeea .Set ("\u0043\u0041",_cda .MakeFloat (opt .Alpha ));_ebeea .Set ("\u0063\u0061",_cda .MakeFloat (opt .Alpha ));_bgcab =_bdcd .AddExtGState (_bbcea ,_ebeea );if _bgcab !=nil {return _bgcab ;
};_acgbfc :=_c .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_bbcea ,_cdgg ,_gabee ,_cffbe ,_dabfc ,_agagc );
_bdcd .AddContentStreamByString (_acgbfc );return nil ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_gfff *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _gfff .fill (provider ,appGen );};func _bbfb (_efbbd *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_efbbd }};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_acafd *PdfPageResources )GenerateXObjectName ()_cda .PdfObjectName {_gfbd :=1;for {_gfab :=_cda .MakeName (_c .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_gfbd ));if !_acafd .HasXObjectByName (*_gfab ){return *_gfab ;};_gfbd ++;};};func (_gaaf *PdfReader )newPdfActionGoTo3DViewFromDict (_cfc *_cda .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_cfc .Get ("\u0054\u0041"),V :_cfc .Get ("\u0056")},nil ;
};

// ToPdfObject implements interface PdfModel.
func (_egg *PdfActionJavaScript )ToPdfObject ()_cda .PdfObject {_egg .PdfAction .ToPdfObject ();_bbd :=_egg ._dcg ;_efc :=_bbd .PdfObject .(*_cda .PdfObjectDictionary );_efc .SetIfNotNil ("\u0053",_cda .MakeName (string (ActionTypeJavaScript )));_efc .SetIfNotNil ("\u004a\u0053",_egg .JS );
return _bbd ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_bgedg *Image )AlphaMap (mapFunc AlphaMapFunc ){for _dabgd ,_facd :=range _bgedg ._eeeg {_bgedg ._eeeg [_dabgd ]=mapFunc (_facd );};};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_aeee *_cda .PdfIndirectObject ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_befc *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_befc .NumInputs {_ae .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_ea .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _befc ._fdaag ==nil {_ebfed :=_befc .processSamples ();if _ebfed !=nil {return nil ,_ebfed ;};};_fdef :=_befc .Encode ;if _fdef ==nil {_fdef =[]float64 {};
for _aedf :=0;_aedf < len (_befc .Size );_aedf ++{_fdef =append (_fdef ,0);_fdef =append (_fdef ,float64 (_befc .Size [_aedf ]-1));};};_fadc :=_befc .Decode ;if _fadc ==nil {_fadc =_befc .Range ;};_gbeb :=make ([]int ,len (x ));for _bdag :=0;_bdag < len (x );
_bdag ++{_begc :=x [_bdag ];_addg :=_ba .Min (_ba .Max (_begc ,_befc .Domain [2*_bdag ]),_befc .Domain [2*_bdag +1]);_cefcc :=_eee .LinearInterpolate (_addg ,_befc .Domain [2*_bdag ],_befc .Domain [2*_bdag +1],_fdef [2*_bdag ],_fdef [2*_bdag +1]);_efad :=_ba .Min (_ba .Max (_cefcc ,0),float64 (_befc .Size [_bdag ]-1));
_fada :=int (_ba .Floor (_efad +0.5));if _fada < 0{_fada =0;}else if _fada > _befc .Size [_bdag ]{_fada =_befc .Size [_bdag ]-1;};_gbeb [_bdag ]=_fada ;};_aadge :=_gbeb [0];for _afgba :=1;_afgba < _befc .NumInputs ;_afgba ++{_gfed :=_gbeb [_afgba ];for _cdbf :=0;
_cdbf < _afgba ;_cdbf ++{_gfed *=_befc .Size [_cdbf ];};_aadge +=_gfed ;};_aadge *=_befc .NumOutputs ;var _aecac []float64 ;for _cgcab :=0;_cgcab < _befc .NumOutputs ;_cgcab ++{_gafcg :=_aadge +_cgcab ;if _gafcg >=len (_befc ._fdaag ){_ae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_degcd :=_befc ._fdaag [_gafcg ];_aadac :=_eee .LinearInterpolate (float64 (_degcd ),0,_ba .Pow (2,float64 (_befc .BitsPerSample )),_fadc [2*_cgcab ],_fadc [2*_cgcab +1]);_cgbgb :=_ba .Min (_ba .Max (_aadac ,_befc .Range [2*_cgcab ]),_befc .Range [2*_cgcab +1]);
_aecac =append (_aecac ,_cgbgb );};return _aecac ,nil ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_gb :=NewPdfAction ();_eb :=&PdfActionGoTo {};_eb .PdfAction =_gb ;_gb .SetContext (_eb );return _eb ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_ca :=NewPdfAction ();_da :=&PdfActionRendition {};_da .PdfAction =_ca ;_ca .SetContext (_da );return _da ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_fbgd *PdfInfo )GetCustomInfo (name string )*_cda .PdfObjectString {var _gadc *_cda .PdfObjectString ;if _fbgd ._adaa ==nil {return _gadc ;};if _eafcb ,_egge :=_fbgd ._adaa .Get (*_cda .MakeName (name )).(*_cda .PdfObjectString );_egge {_gadc =_eafcb ;
};return _gadc ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _cda .PdfObject ;AN _cda .PdfObject ;OP _cda .PdfObject ;JS _cda .PdfObject ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_gd PdfModel ;Type _cda .PdfObject ;S _cda .PdfObject ;Next _cda .PdfObject ;_dcg *_cda .PdfIndirectObject ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_fdf :=NewPdfAction ();_bfc :=&PdfActionThread {};_bfc .PdfAction =_fdf ;_fdf .SetContext (_bfc );return _bfc ;};

// Add appends an outline item as a child of the current outline item.
func (_cccb *OutlineItem )Add (item *OutlineItem ){_cccb .Entries =append (_cccb .Entries ,item )};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_faagb *PdfWriter )SetDocInfo (info *PdfInfo ){if _faagb .hasObject (_faagb ._acdadd ){delete (_faagb ._ffbg ,_faagb ._acdadd );delete (_faagb ._bddff ,_faagb ._acdadd );for _dadb ,_aeafd :=range _faagb ._gbffa {if _aeafd ==_faagb ._acdadd {copy (_faagb ._gbffa [_dadb :],_faagb ._gbffa [_dadb +1:]);
_faagb ._gbffa [len (_faagb ._gbffa )-1]=nil ;_faagb ._gbffa =_faagb ._gbffa [:len (_faagb ._gbffa )-1];break ;};};};_dbbga :=_cda .PdfIndirectObject {};_dbbga .PdfObject =info .ToPdfObject ();_faagb ._acdadd =&_dbbga ;_faagb .addObject (&_dbbga );};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_aef .SimpleEncoder ,error ){_beag ,_efccg :=_fcafe (basefont );if _efccg !=nil {return nil ,nil ,_efccg ;};_ccbff ,_bdff :=_beag .Encoder ().(_aef .SimpleEncoder );
if !_bdff {return nil ,nil ,_c .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_beag .Encoder ());
};_bafd :=make (map[rune ]_aef .GlyphName );for _agac :=range alphabet {if _ ,_cbaaf :=_ccbff .RuneToCharcode (_agac );!_cbaaf {_ ,_dgfbc :=_beag ._aefg .Read (_agac );if !_dgfbc {_ae .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_agac ,_agac );
continue ;};_bagb ,_dgfbc :=_aef .RuneToGlyph (_agac );if !_dgfbc {_ae .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_agac ,_agac );continue ;};if len (_bafd )>=255{return nil ,nil ,_ea .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_bafd [_agac ]=_bagb ;};};var (_dfaa []_aef .CharCode ;_edcc []_aef .CharCode ;);for _dacg :=_aef .CharCode (1);_dacg <=0xff;_dacg ++{_adbfb ,_agbe :=_ccbff .CharcodeToRune (_dacg );if !_agbe {_dfaa =append (_dfaa ,_dacg );continue ;};if _ ,_agbe =alphabet [_adbfb ];
!_agbe {_edcc =append (_edcc ,_dacg );};};_fcfdg :=append (_dfaa ,_edcc ...);if len (_fcfdg )< len (_bafd ){return nil ,nil ,_c .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_bafd ),len (_fcfdg ));
};_fedg :=make ([]rune ,0,len (_bafd ));for _afgb :=range _bafd {_fedg =append (_fedg ,_afgb );};_df .Slice (_fedg ,func (_gbad ,_fgccc int )bool {return _fedg [_gbad ]< _fedg [_fgccc ]});_bdaea :=make (map[_aef .CharCode ]_aef .GlyphName ,len (_fedg ));
for _ ,_ebea :=range _fedg {_adea :=_fcfdg [0];_fcfdg =_fcfdg [1:];_bdaea [_adea ]=_bafd [_ebea ];};_ccbff =_aef .ApplyDifferences (_ccbff ,_bdaea );_beag .SetEncoder (_ccbff );return &PdfFont {_aecg :&_beag },_ccbff ,nil ;};func (_eadef *PdfShading )getShadingDict ()(*_cda .PdfObjectDictionary ,error ){_begaf :=_eadef ._bfddc ;
if _cgef ,_bedd :=_begaf .(*_cda .PdfIndirectObject );_bedd {_ffbfd ,_fcabfb :=_cgef .PdfObject .(*_cda .PdfObjectDictionary );if !_fcabfb {return nil ,_cda .ErrTypeError ;};return _ffbfd ,nil ;}else if _bbbcd ,_bbeeg :=_begaf .(*_cda .PdfObjectStream );
_bbeeg {return _bbbcd .PdfObjectDictionary ,nil ;}else if _cdfae ,_ccdge :=_begaf .(*_cda .PdfObjectDictionary );_ccdge {return _cdfae ,nil ;}else {_ae .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");
return nil ,_cda .ErrTypeError ;};};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_bfa :=NewPdfAction ();_dff :=&PdfActionGoTo3DView {};_dff .PdfAction =_bfa ;_bfa .SetContext (_dff );return _dff ;};

// ToPdfObject implements interface PdfModel.
func (_eabf *PdfActionThread )ToPdfObject ()_cda .PdfObject {_eabf .PdfAction .ToPdfObject ();_gac :=_eabf ._dcg ;_gcb :=_gac .PdfObject .(*_cda .PdfObjectDictionary );_gcb .SetIfNotNil ("\u0053",_cda .MakeName (string (ActionTypeThread )));if _eabf .F !=nil {_gcb .Set ("\u0046",_eabf .F .ToPdfObject ());
};_gcb .SetIfNotNil ("\u0044",_eabf .D );_gcb .SetIfNotNil ("\u0042",_eabf .B );return _gac ;};

// SetOCProperties sets the optional content properties.
func (_dfbae *PdfWriter )SetOCProperties (ocProperties _cda .PdfObject )error {_eedbf :=_dfbae ._bgafe ;if ocProperties !=nil {_ae .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_eedbf .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _dfbae .addObjects (ocProperties );};return nil ;};func (_ccae *pdfFontSimple )getFontEncoding ()(_fdgfc string ,_bccba map[_aef .CharCode ]_aef .GlyphName ,_bbbfc error ){_fdgfc ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _deabd ,_adaeb :=_fafb [_ccae ._gedd ];_adaeb {_fdgfc =_deabd ;}else if _ccae .fontFlags ()&_egdd !=0{for _cfae ,_edce :=range _fafb {if _bb .Contains (_ccae ._gedd ,_cfae ){_fdgfc =_edce ;break ;};};};if _ccae .Encoding ==nil {return _fdgfc ,nil ,nil ;
};switch _gdced :=_ccae .Encoding .(type ){case *_cda .PdfObjectName :return string (*_gdced ),nil ,nil ;case *_cda .PdfObjectDictionary :_baga ,_gcdcc :=_cda .GetName (_gdced .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
if _gcdcc {_fdgfc =_baga .String ();};if _fcgea :=_gdced .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_fcgea !=nil {_bffbg ,_bbefd :=_cda .GetArray (_fcgea );if !_bbefd {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_gdced ,_gdced .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_cda .ErrTypeError ;};_bccba ,_bbbfc =_aef .FromFontDifferences (_bffbg );};return _fdgfc ,_bccba ,_bbbfc ;default:_ae .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_ccae .Encoding ,_ccae .Encoding );
return "",nil ,_cda .ErrTypeError ;};};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _cda .PdfObject ;IC _cda .PdfObject ;BE _cda .PdfObject ;RD _cda .PdfObject ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_bgaba *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_bdeac :=NewPdfOutlineItem ();_bdeac .Title =_cda .MakeEncodedString (_bgaba .Title ,true );_bdeac .Dest =_bgaba .Dest .ToPdfObject ();var _eebfa []*PdfOutlineItem ;var _bfcg int64 ;
var _ffagd *PdfOutlineItem ;for _ ,_afggd :=range _bgaba .Entries {_dcade ,_abfcf :=_afggd .ToPdfOutlineItem ();_dcade .Parent =&_bdeac .PdfOutlineTreeNode ;if _ffagd !=nil {_ffagd .Next =&_dcade .PdfOutlineTreeNode ;_dcade .Prev =&_ffagd .PdfOutlineTreeNode ;
};_eebfa =append (_eebfa ,_dcade );_bfcg +=_abfcf ;_ffagd =_dcade ;};_dgad :=len (_eebfa );_bfcg +=int64 (_dgad );if _dgad > 0{_bdeac .First =&_eebfa [0].PdfOutlineTreeNode ;_bdeac .Last =&_eebfa [_dgad -1].PdfOutlineTreeNode ;_bdeac .Count =&_bfcg ;};
return _bdeac ,_bfcg ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_bcbf *Image )GetSamples ()[]uint32 {_fgebg :=_bed .ResampleBytes (_bcbf .Data ,int (_bcbf .BitsPerComponent ));if _bcbf .BitsPerComponent < 8{_fgebg =_bcbf .samplesTrimPadding (_fgebg );};_afdce :=int (_bcbf .Width )*int (_bcbf .Height )*_bcbf .ColorComponents ;
if len (_fgebg )< _afdce {_ae .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_fgebg ),_afdce );
return _fgebg ;}else if len (_fgebg )> _afdce {_ae .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_fgebg ),_afdce );
_fgebg =_fgebg [:_afdce ];};return _fgebg ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_ceag *PdfPage )AppendContentStream (contentStr string )error {_aagg ,_edaa :=_ceag .GetContentStreams ();if _edaa !=nil {return _edaa ;};if len (_aagg )==0{_aagg =[]string {contentStr };return _ceag .SetContentStreams (_aagg ,_cda .NewFlateEncoder ());
};var _cagg _dc .Buffer ;_cagg .WriteString (_aagg [len (_aagg )-1]);_cagg .WriteString ("\u000a");_cagg .WriteString (contentStr );_aagg [len (_aagg )-1]=_cagg .String ();return _ceag .SetContentStreams (_aagg ,_cda .NewFlateEncoder ());};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _cda .PdfObject ;Name _cda .PdfObject ;State _cda .PdfObject ;StateModel _cda .PdfObject ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _cda .PdfObject ;LE _cda .PdfObject ;BS _cda .PdfObject ;IC _cda .PdfObject ;BE _cda .PdfObject ;IT _cda .PdfObject ;Measure _cda .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_cgcf *PdfAnnotationSquare )ToPdfObject ()_cda .PdfObject {_cgcf .PdfAnnotation .ToPdfObject ();_cefd :=_cgcf ._afd ;_ddf :=_cefd .PdfObject .(*_cda .PdfObjectDictionary );if _cgcf .PdfAnnotationMarkup !=nil {_cgcf .PdfAnnotationMarkup .appendToPdfDictionary (_ddf );
};_ddf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_ddf .SetIfNotNil ("\u0042\u0053",_cgcf .BS );_ddf .SetIfNotNil ("\u0049\u0043",_cgcf .IC );_ddf .SetIfNotNil ("\u0042\u0045",_cgcf .BE );
_ddf .SetIfNotNil ("\u0052\u0044",_cgcf .RD );return _cefd ;};

// SetDecode sets the decode image float slice.
func (_edcg *Image )SetDecode (decode []float64 ){_edcg ._eabad =decode };func _bbcd (_cgab *[]*PdfField ,_gfgad FieldFilterFunc ,_faffd bool )[]*PdfField {if _cgab ==nil {return nil ;};_dcgfa :=*_cgab ;if len (*_cgab )==0{return nil ;};_acdbb :=_dcgfa [:0];
if _gfgad ==nil {_gfgad =func (*PdfField )bool {return true };};var _gebbd []*PdfField ;for _ ,_fabd :=range _dcgfa {_gdcggd :=_gfgad (_fabd );if _gdcggd {_gebbd =append (_gebbd ,_fabd );if len (_fabd .Kids )> 0{_gebbd =append (_gebbd ,_bbcd (&_fabd .Kids ,_gfgad ,_faffd )...);
};};if !_faffd ||!_gdcggd ||len (_fabd .Kids )> 0{_acdbb =append (_acdbb ,_fabd );};};*_cgab =_acdbb ;return _gebbd ;};func (_baad *LTV )getCRLs (_dcab []*_ff .Certificate )([][]byte ,error ){_fafba :=make ([][]byte ,0,len (_dcab ));for _ ,_eebec :=range _dcab {for _ ,_efef :=range _eebec .CRLDistributionPoints {if _baad .CertClient .IsCA (_eebec ){continue ;
};_bdegd ,_fbbbc :=_baad .CRLClient .MakeRequest (_efef ,_eebec );if _fbbbc !=nil {_ae .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_fbbbc );continue ;
};_fafba =append (_fafba ,_bdegd );};};return _fafba ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fbeg *PdfSignature )ToPdfObject ()_cda .PdfObject {_bbec :=_fbeg ._gaec ;var _gddge *_cda .PdfObjectDictionary ;if _bgdae ,_efce :=_bbec .PdfObject .(*pdfSignDictionary );_efce {_gddge =_bgdae .PdfObjectDictionary ;}else {_gddge =_bbec .PdfObject .(*_cda .PdfObjectDictionary );
};_gddge .SetIfNotNil ("\u0054\u0079\u0070\u0065",_fbeg .Type );_gddge .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_fbeg .Filter );_gddge .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_fbeg .SubFilter );_gddge .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_fbeg .ByteRange );
_gddge .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_fbeg .Contents );_gddge .SetIfNotNil ("\u0043\u0065\u0072\u0074",_fbeg .Cert );_gddge .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fbeg .Name );_gddge .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_fbeg .Reason );
_gddge .SetIfNotNil ("\u004d",_fbeg .M );_gddge .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_fbeg .Reference );_gddge .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_fbeg .Changes );_gddge .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_fbeg .ContactInfo );
return _bbec ;};func (_gfee *PdfReader )newPdfAnnotationStrikeOut (_aac *_cda .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_aeaf :=PdfAnnotationStrikeOut {};_fadf ,_fef :=_gfee .newPdfAnnotationMarkupFromDict (_aac );if _fef !=nil {return nil ,_fef ;
};_aeaf .PdfAnnotationMarkup =_fadf ;_aeaf .QuadPoints =_aac .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_aeaf ,nil ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_fga :=NewPdfAnnotation ();_acde :=&PdfAnnotationPrinterMark {};_acde .PdfAnnotation =_fga ;_fga .SetContext (_acde );return _acde ;};

// AddImageResource adds an image to the XObject resources.
func (_gafg *PdfPage )AddImageResource (name _cda .PdfObjectName ,ximg *XObjectImage )error {var _adedf *_cda .PdfObjectDictionary ;if _gafg .Resources .XObject ==nil {_adedf =_cda .MakeDict ();_gafg .Resources .XObject =_adedf ;}else {var _gbce bool ;
_adedf ,_gbce =(_gafg .Resources .XObject ).(*_cda .PdfObjectDictionary );if !_gbce {return _ea .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_adedf .Set (name ,ximg .ToPdfObject ());
return nil ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_daccc *XObjectImage )ToImage ()(*Image ,error ){_gbbee :=&Image {};if _daccc .Height ==nil {return nil ,_ea .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_gbbee .Height =*_daccc .Height ;if _daccc .Width ==nil {return nil ,_ea .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_gbbee .Width =*_daccc .Width ;if _daccc .BitsPerComponent ==nil {switch _daccc .Filter .(type ){case *_cda .CCITTFaxEncoder ,*_cda .JBIG2Encoder :_gbbee .BitsPerComponent =1;
case *_cda .LZWEncoder ,*_cda .RunLengthEncoder :_gbbee .BitsPerComponent =8;default:return nil ,_ea .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_gbbee .BitsPerComponent =*_daccc .BitsPerComponent ;};_gbbee .ColorComponents =_daccc .ColorSpace .GetNumComponents ();_daccc ._dbdfb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_cda .MakeInteger (int64 (_gbbee .ColorComponents )));
_daab ,_dbbgf :=_cda .DecodeStream (_daccc ._dbdfb );if _dbbgf !=nil {return nil ,_dbbgf ;};_gbbee .Data =_daab ;if _daccc .Decode !=nil {_bdbgdc ,_acbff :=_daccc .Decode .(*_cda .PdfObjectArray );if !_acbff {_ae .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_ea .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_fedb ,_ceggd :=_bdbgdc .ToFloat64Array ();if _ceggd !=nil {return nil ,_ceggd ;};_gbbee ._eabad =_fedb ;};return _gbbee ,nil ;};func (_cceed *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";
};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_acgc *PdfField )Flags ()FieldFlag {var _ffgc FieldFlag ;_gabe ,_egcc :=_acgc .inherit (func (_gdgcf *PdfField )bool {if _gdgcf .Ff !=nil {_ffgc =FieldFlag (*_gdgcf .Ff );return true ;};return false ;});if _egcc !=nil {_ae .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_egcc );
};if !_gabe {_ae .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _ffgc ;};

// ToPdfObject implements interface PdfModel.
func (_eabgd *PdfAnnotationMovie )ToPdfObject ()_cda .PdfObject {_eabgd .PdfAnnotation .ToPdfObject ();_afbe :=_eabgd ._afd ;_dabe :=_afbe .PdfObject .(*_cda .PdfObjectDictionary );_dabe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u004d\u006f\u0076i\u0065"));
_dabe .SetIfNotNil ("\u0054",_eabgd .T );_dabe .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_eabgd .Movie );_dabe .SetIfNotNil ("\u0041",_eabgd .A );return _afbe ;};

// GetOutlineTree returns the outline tree.
func (_eafab *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _eafab ._gdaed };

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_acfcc *Outline )ToPdfOutline ()*PdfOutline {_fcbg :=NewPdfOutline ();var _fadff []*PdfOutlineItem ;var _ceff int64 ;var _geed *PdfOutlineItem ;for _ ,_afdd :=range _acfcc .Entries {_ddfcd ,_cegd :=_afdd .ToPdfOutlineItem ();_ddfcd .Parent =&_fcbg .PdfOutlineTreeNode ;
if _geed !=nil {_geed .Next =&_ddfcd .PdfOutlineTreeNode ;_ddfcd .Prev =&_geed .PdfOutlineTreeNode ;};_fadff =append (_fadff ,_ddfcd );_ceff +=_cegd ;_geed =_ddfcd ;};_bedcg :=int64 (len (_fadff ));_ceff +=_bedcg ;if _bedcg > 0{_fcbg .First =&_fadff [0].PdfOutlineTreeNode ;
_fcbg .Last =&_fadff [_bedcg -1].PdfOutlineTreeNode ;_fcbg .Count =&_ceff ;};return _fcbg ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_bbbe :=NewPdfAction ();_dbag :=&PdfActionHide {};_dbag .PdfAction =_bbbe ;_bbbe .SetContext (_dbag );return _dbag ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _cda .PdfObject ;Volume _cda .PdfObject ;Synchronous _cda .PdfObject ;Repeat _cda .PdfObject ;Mix _cda .PdfObject ;};

// IsCID returns true if the underlying font is CID.
func (_afef *PdfFont )IsCID ()bool {return _afef .baseFields ().isCIDFont ()};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_edac *PdfReader )Inspect ()(map[string ]int ,error ){return _edac ._gaedg .Inspect ()};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_cfdg DefaultImageHandler )Read (reader _cd .Reader )(*Image ,error ){_eaedc ,_ ,_cged :=_e .Decode (reader );if _cged !=nil {_ae .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_cged );
return nil ,_cged ;};return _cfdg .NewImageFromGoImage (_eaedc );};

// C returns the value of the C component of the color.
func (_babd *PdfColorCalRGB )C ()float64 {return _babd [2]};

// G returns the value of the green component of the color.
func (_dfab *PdfColorDeviceRGB )G ()float64 {return _dfab [1]};

// Encoder returns the font's text encoder.
func (_agaaa pdfCIDFontType2 )Encoder ()_aef .TextEncoder {return _agaaa ._dbbc };

// Fill populates `form` with values provided by `provider`.
func (_ccdf *PdfAcroForm )Fill (provider FieldValueProvider )error {return _ccdf .fill (provider ,nil )};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_fgfc *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_ebcce :=_bed .NewReader (img .getBase ());_bebe :=_eee .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._eeeg ,img ._eabad );
_ffefb :=_bed .NewWriter (_bebe );_gegef :=_ba .Pow (2,float64 (img .BitsPerComponent ))-1;_adee :=_fgfc .GetNumComponents ();_fdae :=make ([]uint32 ,_adee );_cgegc :=make ([]float64 ,_adee );for {_gdeb :=_ebcce .ReadSamples (_fdae );if _gdeb ==_cd .EOF {break ;
}else if _gdeb !=nil {return img ,_gdeb ;};for _efecc :=0;_efecc < _adee ;_efecc ++{_feabb :=float64 (_fdae [_efecc ])/_gegef ;_cgegc [_efecc ]=_feabb ;};_ebfge ,_gdeb :=_fgfc .TintTransform .Evaluate (_cgegc );if _gdeb !=nil {return img ,_gdeb ;};for _ ,_dfcg :=range _ebfge {_dfcg =_ba .Min (_ba .Max (0,_dfcg ),1.0);
if _gdeb =_ffefb .WriteSample (uint32 (_dfcg *_gegef ));_gdeb !=nil {return img ,_gdeb ;};};};return _fgfc .AlternateSpace .ImageToRGB (_fdaad (&_bebe ));};func (_cefcda *PdfAcroForm )filteredFields (_aagb FieldFilterFunc ,_gbefa bool )[]*PdfField {if _cefcda ==nil {return nil ;
};return _bbcd (_cefcda .Fields ,_aagb ,_gbefa );};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_bddfe *PdfWriter )SetRotation (rotate int64 )error {_gbddc ,_cgfgc :=_cda .GetDict (_bddfe ._bacdc );if !_cgfgc {return ErrTypeCheck ;};_gbddc .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_cda .MakeInteger (rotate ));return nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_geccd *PdfFunctionType2 )ToPdfObject ()_cda .PdfObject {_gdee :=_cda .MakeDict ();_gdee .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_cda .MakeInteger (2));_adcbd :=&_cda .PdfObjectArray {};for _ ,_aedg :=range _geccd .Domain {_adcbd .Append (_cda .MakeFloat (_aedg ));
};_gdee .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_adcbd );if _geccd .Range !=nil {_feeda :=&_cda .PdfObjectArray {};for _ ,_gadbe :=range _geccd .Range {_feeda .Append (_cda .MakeFloat (_gadbe ));};_gdee .Set ("\u0052\u0061\u006eg\u0065",_feeda );};
if _geccd .C0 !=nil {_cgbdg :=&_cda .PdfObjectArray {};for _ ,_aeebd :=range _geccd .C0 {_cgbdg .Append (_cda .MakeFloat (_aeebd ));};_gdee .Set ("\u0043\u0030",_cgbdg );};if _geccd .C1 !=nil {_gfaded :=&_cda .PdfObjectArray {};for _ ,_efda :=range _geccd .C1 {_gfaded .Append (_cda .MakeFloat (_efda ));
};_gdee .Set ("\u0043\u0031",_gfaded );};_gdee .Set ("\u004e",_cda .MakeFloat (_geccd .N ));if _geccd ._fbbg !=nil {_geccd ._fbbg .PdfObject =_gdee ;return _geccd ._fbbg ;};return _gdee ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_aaed *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// ToPdfObject returns a stream object.
func (_fecgcg *XObjectImage )ToPdfObject ()_cda .PdfObject {_gdfed :=_fecgcg ._dbdfb ;_geege :=_gdfed .PdfObjectDictionary ;if _fecgcg .Filter !=nil {_geege =_fecgcg .Filter .MakeStreamDict ();_gdfed .PdfObjectDictionary =_geege ;};_geege .Set ("\u0054\u0079\u0070\u0065",_cda .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_geege .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0049\u006d\u0061g\u0065"));_geege .Set ("\u0057\u0069\u0064t\u0068",_cda .MakeInteger (*(_fecgcg .Width )));_geege .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_cda .MakeInteger (*(_fecgcg .Height )));
if _fecgcg .BitsPerComponent !=nil {_geege .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cda .MakeInteger (*(_fecgcg .BitsPerComponent )));};if _fecgcg .ColorSpace !=nil {_geege .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_fecgcg .ColorSpace .ToPdfObject ());
};_geege .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_fecgcg .Intent );_geege .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_fecgcg .ImageMask );_geege .SetIfNotNil ("\u004d\u0061\u0073\u006b",_fecgcg .Mask );_daad :=_geege .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _fecgcg .Decode ==nil &&_daad {_geege .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _fecgcg .Decode !=nil {_geege .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fecgcg .Decode );};_geege .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_fecgcg .Interpolate );
_geege .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_fecgcg .Alternatives );_geege .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_fecgcg .SMask );_geege .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_fecgcg .SMaskInData );
_geege .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_fecgcg .Matte );_geege .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fecgcg .Name );_geege .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_fecgcg .StructParent );_geege .SetIfNotNil ("\u0049\u0044",_fecgcg .ID );
_geege .SetIfNotNil ("\u004f\u0050\u0049",_fecgcg .OPI );_geege .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_fecgcg .Metadata );_geege .SetIfNotNil ("\u004f\u0043",_fecgcg .OC );_geege .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cda .MakeInteger (int64 (len (_fecgcg .Stream ))));
_gdfed .Stream =_fecgcg .Stream ;return _gdfed ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_acef *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aeac :=vals [0];if _aeac < 0.0||_aeac > 1.0{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_bfbd :=vals [1];if _bfbd < 0.0||_bfbd > 1.0{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbfe :=vals [2];if _cbfe < 0.0||_cbfe > 1.0{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_ccda :=NewPdfColorCalRGB (_aeac ,_bfbd ,_cbfe );return _ccda ,nil ;};func (_dcaab *PdfWriter )copyObjects (){_befdd :=make (map[_cda .PdfObject ]_cda .PdfObject );_ddefe :=make ([]_cda .PdfObject ,0,len (_dcaab ._gbffa ));_ffbeg :=make (map[_cda .PdfObject ]struct{},len (_dcaab ._gbffa ));
_aabe :=make (map[_cda .PdfObject ]struct{});for _ ,_daafe :=range _dcaab ._gbffa {_gfcc :=_dcaab .copyObject (_daafe ,_befdd ,_aabe ,false );if _ ,_bddfa :=_aabe [_daafe ];_bddfa {continue ;};_ddefe =append (_ddefe ,_gfcc );_ffbeg [_gfcc ]=struct{}{};
};_dcaab ._gbffa =_ddefe ;_dcaab ._ffbg =_ffbeg ;_dcaab ._acdadd =_dcaab .copyObject (_dcaab ._acdadd ,_befdd ,nil ,false ).(*_cda .PdfIndirectObject );_dcaab ._cddbe =_dcaab .copyObject (_dcaab ._cddbe ,_befdd ,nil ,false ).(*_cda .PdfIndirectObject );
if _dcaab ._dbcfe !=nil {_dcaab ._dbcfe =_dcaab .copyObject (_dcaab ._dbcfe ,_befdd ,nil ,false ).(*_cda .PdfIndirectObject );};if _dcaab ._dddcb {_fafbc :=make (map[_cda .PdfObject ]int64 );for _eceg ,_fedfc :=range _dcaab ._cedcb {if _debfd ,_cbfgg :=_befdd [_eceg ];
_cbfgg {_fafbc [_debfd ]=_fedfc ;}else {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_dcaab ._cedcb =_fafbc ;};};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _cda .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_cccd *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _cccd .UnderlyingCS ==nil {return nil ,_ea .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _cccd .UnderlyingCS .ColorFromFloats (vals );};

// ToPdfObject implements interface PdfModel.
func (_eedf *PdfAnnotationScreen )ToPdfObject ()_cda .PdfObject {_eedf .PdfAnnotation .ToPdfObject ();_eecg :=_eedf ._afd ;_cbfbb :=_eecg .PdfObject .(*_cda .PdfObjectDictionary );_cbfbb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_cbfbb .SetIfNotNil ("\u0054",_eedf .T );_cbfbb .SetIfNotNil ("\u004d\u004b",_eedf .MK );_cbfbb .SetIfNotNil ("\u0041",_eedf .A );_cbfbb .SetIfNotNil ("\u0041\u0041",_eedf .AA );return _eecg ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_aefd *PdfColorspaceSpecialSeparation )ToPdfObject ()_cda .PdfObject {_adegd :=_cda .MakeArray (_cda .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_adegd .Append (_aefd .ColorantName );_adegd .Append (_aefd .AlternateSpace .ToPdfObject ());
_adegd .Append (_aefd .TintTransform .ToPdfObject ());if _aefd ._feda !=nil {_aefd ._feda .PdfObject =_adegd ;return _aefd ._feda ;};return _adegd ;};func _ebeeg (_eagd []byte )bool {if len (_eagd )< 4{return true ;};for _efdfb :=range _eagd [:4]{_addc :=rune (_efdfb );
if !_ge .Is (_ge .ASCII_Hex_Digit ,_addc )&&!_ge .IsSpace (_addc ){return true ;};};return false ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};func (_ffbe *LTV )generateVRIKey (_gffae *PdfSignature )(string ,error ){_aebca ,_bcdg :=_agedc (_gffae .Contents .Bytes ());if _bcdg !=nil {return "",_bcdg ;
};return _bb .ToUpper (_f .EncodeToString (_aebca )),nil ;};

// ImageToRGB convert an indexed image to RGB.
func (_fedf *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_fedf .Base .GetNumComponents ();if N < 1{return Image {},_c .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_ggfga :=_eee .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._eeeg ,img ._eabad );_ccea :=_bed .NewReader (img .getBase ());_cbgf :=_bed .NewWriter (_ggfga );var (_gfag uint32 ;_cddf int ;_gfdbc error ;);for {_gfag ,_gfdbc =_ccea .ReadSample ();
if _gfdbc ==_cd .EOF {break ;}else if _gfdbc !=nil {return img ,_gfdbc ;};_cddf =int (_gfag );_ae .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_cddf ,N ,len (_fedf ._ccfec ));
if (_cddf +1)*N > len (_fedf ._ccfec ){_cddf =len (_fedf ._ccfec )/N -1;_ae .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_cddf );if _cddf < 0{_ae .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _dbfb :=_cddf *N ;_dbfb < (_cddf +1)*N ;_dbfb ++{if _gfdbc =_cbgf .WriteSample (uint32 (_fedf ._ccfec [_dbfb ]));_gfdbc !=nil {return img ,_gfdbc ;};};};return _fedf .Base .ImageToRGB (_fdaad (&_ggfga ));};

// GetAscent returns the Ascent of the font `descriptor`.
func (_eddb *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _cda .GetNumberAsFloat (_eddb .Ascent );};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _cda .PdfObject ;_ccfec []byte ;_edcb *_cda .PdfIndirectObject ;};func (_bdece *PdfFont )baseFields ()*fontCommon {if _bdece ._aecg ==nil {_ae .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _bdece ._aecg .baseFields ();};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_acdf :=PdfPage {};_acdf ._edefc =_cda .MakeDict ();_acdf .Resources =NewPdfPageResources ();_dafa :=_cda .PdfIndirectObject {};_dafa .PdfObject =_acdf ._edefc ;_acdf ._bcadb =&_dafa ;return &_acdf ;};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_dbcd *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _dbcd .baseFields ()._bedag !=nil {return _dbcd .baseFields ()._bedag ;};if _aecgc :=_dbcd ._aecg .getFontDescriptor ();_aecgc !=nil {return _aecgc ;};_ae .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_dbcd );
return nil ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_bfbea :=&XObjectImage {};_beegg :=&_cda .PdfObjectStream {};_beegg .PdfObjectDictionary =_cda .MakeDict ();_bfbea ._dbdfb =_beegg ;return _bfbea ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_cgeee *PdfAcroForm )GetContainingPdfObject ()_cda .PdfObject {return _cgeee ._eada };

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_abfc :=NewPdfAnnotation ();_ebf :=&PdfAnnotationLink {};_ebf .PdfAnnotation =_abfc ;_abfc .SetContext (_ebf );return _ebf ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_fgcd :=&PdfPageResourcesColorspaces {};_fgcd .Names =[]string {};_fgcd .Colorspaces =map[string ]PdfColorspace {};_fgcd ._cgdc =&_cda .PdfIndirectObject {};return _fgcd ;};func (_aebda *PdfWriter )seekByName (_cacag _cda .PdfObject ,_fbadb []string ,_afcbd string )([]_cda .PdfObject ,error ){_ae .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_cacag );
var _begfgb []_cda .PdfObject ;if _eacdf ,_ffbae :=_cacag .(*_cda .PdfIndirectObject );_ffbae {return _aebda .seekByName (_eacdf .PdfObject ,_fbadb ,_afcbd );};if _cfec ,_bgfeb :=_cacag .(*_cda .PdfObjectStream );_bgfeb {return _aebda .seekByName (_cfec .PdfObjectDictionary ,_fbadb ,_afcbd );
};if _bcgfg ,_geeea :=_cacag .(*_cda .PdfObjectDictionary );_geeea {_ae .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_fefab :=range _bcgfg .Keys (){_aacga :=_bcgfg .Get (_fefab );if string (_fefab )==_afcbd {_begfgb =append (_begfgb ,_aacga );};for _ ,_daac :=range _fbadb {if string (_fefab )==_daac {_ae .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_daac );
_dbbeb ,_agcbf :=_aebda .seekByName (_aacga ,_fbadb ,_afcbd );if _agcbf !=nil {return _begfgb ,_agcbf ;};_begfgb =append (_begfgb ,_dbbeb ...);break ;};};};return _begfgb ,nil ;};return _begfgb ,nil ;};var (_dggb =_cf .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_bfaea =_cf .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_addfd =_cf .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_dbddc ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_cbaf ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_dacf ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_efaad :=&PdfPageResources {};_efaad ._feedd =_cda .MakeDict ();return _efaad ;};func (_aadga *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _aadga ._bedag };

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_befe *PdfFieldButton )IsRadio ()bool {return _befe .GetType ()==ButtonTypeRadio };

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_cda .PdfObjectArray ;Domain *_cda .PdfObjectArray ;Function []PdfFunction ;Extend *_cda .PdfObjectArray ;};

// ToPdfObject implements interface PdfModel.
func (_cdef *PdfAnnotationCaret )ToPdfObject ()_cda .PdfObject {_cdef .PdfAnnotation .ToPdfObject ();_bdcc :=_cdef ._afd ;_eeb :=_bdcc .PdfObject .(*_cda .PdfObjectDictionary );_cdef .PdfAnnotationMarkup .appendToPdfDictionary (_eeb );_eeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0043\u0061\u0072e\u0074"));
_eeb .SetIfNotNil ("\u0052\u0044",_cdef .RD );_eeb .SetIfNotNil ("\u0053\u0079",_cdef .Sy );return _bdcc ;};

// Encoder returns the font's text encoder.
func (_ggaa *pdfFontSimple )Encoder ()_aef .TextEncoder {if _ggaa ._dcag !=nil {return _ggaa ._dcag ;};if _ggaa ._afee !=nil {return _ggaa ._afee ;};_gcgfe ,_ :=_aef .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _gcgfe ;};func _fedd ()string {_aafcc .Lock ();defer _aafcc .Unlock ();_dccfg :=_ffc .GetLicenseKey ();if len (_cecgf )> 0&&(_dccfg .IsLicensed ()||_cgaaee ){return _cecgf ;};return _c .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_eedgd (),_dccfg .TypeToString ());
};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_fcbf :=NewPdfAnnotation ();_bea :=&PdfAnnotation3D {};_bea .PdfAnnotation =_fcbf ;_fcbf .SetContext (_bea );return _bea ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_dfabf ,_fdbd :=_eg .Open (filePath );if _fdbd !=nil {_ae .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_fdbd );
return nil ,_fdbd ;};defer _dfabf .Close ();return NewCompositePdfFontFromTTF (_dfabf );};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_febbe *PdfPageResources )GetShadingByName (keyName _cda .PdfObjectName )(*PdfShading ,bool ){if _febbe .Shading ==nil {return nil ,false ;};_fgccb ,_baed :=_cda .TraceToDirectObject (_febbe .Shading ).(*_cda .PdfObjectDictionary );if !_baed {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_febbe .Shading );
return nil ,false ;};if _dfdaf :=_fgccb .Get (keyName );_dfdaf !=nil {_fecec ,_dfccb :=_dfec (_dfdaf );if _dfccb !=nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_dfccb );
return nil ,false ;};return _fecec ,true ;};return nil ,false ;};

// SetDate sets the `M` field of the signature.
func (_bbebd *PdfSignature )SetDate (date _be .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_bbebd .M =_cda .MakeString (date .Format (format ));
};

// ToPdfObject implements interface PdfModel.
func (_bggg *PdfBorderStyle )ToPdfObject ()_cda .PdfObject {_fcfc :=_cda .MakeDict ();if _bggg ._fbfa !=nil {if _gbcd ,_ffedc :=_bggg ._fbfa .(*_cda .PdfIndirectObject );_ffedc {_gbcd .PdfObject =_fcfc ;};};_fcfc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _bggg .W !=nil {_fcfc .Set ("\u0057",_cda .MakeFloat (*_bggg .W ));};if _bggg .S !=nil {_fcfc .Set ("\u0053",_cda .MakeName (_bggg .S .GetPdfName ()));};if _bggg .D !=nil {_fcfc .Set ("\u0044",_cda .MakeArrayFromIntegers (*_bggg .D ));};if _bggg ._fbfa !=nil {return _bggg ._fbfa ;
};return _fcfc ;};func (_fbaae *PdfPage )getParentResources ()(*PdfPageResources ,error ){_bgeg :=_fbaae .Parent ;for _bgeg !=nil {_decgd ,_daef :=_cda .GetDict (_bgeg );if !_daef {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_ea .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _ecac :=_decgd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_ecac !=nil {_bcccb ,_efeg :=_cda .GetDict (_ecac );
if !_efeg {return nil ,_ea .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_baeg ,_gbcge :=NewPdfPageResourcesFromDict (_bcccb );if _gbcge !=nil {return nil ,_gbcge ;};return _baeg ,nil ;
};_bgeg =_decgd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// WriteString outputs the object as it is to be written to file.
func (_efefb *pdfSignDictionary )WriteString ()string {_efefb ._cdbg =0;_efefb ._cbadg =0;_efefb ._geabc =0;_efefb ._adfd =0;_fbaed :=_dc .NewBuffer (nil );_fbaed .WriteString ("\u003c\u003c");for _ ,_ddaab :=range _efefb .Keys (){_eabfdc :=_efefb .Get (_ddaab );
switch _ddaab {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_fbaed .WriteString (_ddaab .WriteString ());_fbaed .WriteString ("\u0020");_efefb ._geabc =_fbaed .Len ();_fbaed .WriteString (_eabfdc .WriteString ());_fbaed .WriteString ("\u0020");_efefb ._adfd =_fbaed .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_fbaed .WriteString (_ddaab .WriteString ());_fbaed .WriteString ("\u0020");_efefb ._cdbg =_fbaed .Len ();_fbaed .WriteString (_eabfdc .WriteString ());_fbaed .WriteString ("\u0020");_efefb ._cbadg =_fbaed .Len ()-1;
default:_fbaed .WriteString (_ddaab .WriteString ());_fbaed .WriteString ("\u0020");_fbaed .WriteString (_eabfdc .WriteString ());};};_fbaed .WriteString ("\u003e\u003e");return _fbaed .String ();};func _cgbgcc (_cfda _cda .PdfObject )(string ,error ){_cfda =_cda .TraceToDirectObject (_cfda );
switch _dcbge :=_cfda .(type ){case *_cda .PdfObjectString :return _dcbge .Str (),nil ;case *_cda .PdfObjectStream :_dfge ,_aadgee :=_cda .DecodeStream (_dcbge );if _aadgee !=nil {return "",_aadgee ;};return string (_dfge ),nil ;};return "",_c .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_cfda );
};func (_bgg *PdfReader )newPdfActionGotoEFromDict (_eda *_cda .PdfObjectDictionary )(*PdfActionGoToE ,error ){_aeb ,_aec :=_gef (_eda .Get ("\u0046"));if _aec !=nil {return nil ,_aec ;};return &PdfActionGoToE {D :_eda .Get ("\u0044"),NewWindow :_eda .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_eda .Get ("\u0054"),F :_aeb },nil ;
};func _cgaee (_eebeg _fd .StdFont )pdfFontSimple {_egbdc :=_eebeg .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_fceb :"\u0054\u0079\u0070e\u0031",_gedd :_eebeg .Name ()},_aefg :_eebeg .GetMetricsTable (),_ebef :&PdfFontDescriptor {FontName :_cda .MakeName (string (_egbdc .Name )),FontFamily :_cda .MakeName (_egbdc .Family ),FontWeight :_cda .MakeFloat (float64 (_egbdc .Weight )),Flags :_cda .MakeInteger (int64 (_egbdc .Flags )),FontBBox :_cda .MakeArrayFromFloats (_egbdc .BBox [:]),ItalicAngle :_cda .MakeFloat (_egbdc .ItalicAngle ),Ascent :_cda .MakeFloat (_egbdc .Ascent ),Descent :_cda .MakeFloat (_egbdc .Descent ),CapHeight :_cda .MakeFloat (_egbdc .CapHeight ),XHeight :_cda .MakeFloat (_egbdc .XHeight ),StemV :_cda .MakeFloat (_egbdc .StemV ),StemH :_cda .MakeFloat (_egbdc .StemH )},_afee :_eebeg .Encoder ()};
};func (_bcde *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _bcde ._bedag ==nil &&_bcde .DescendantFont !=nil {return _bcde .DescendantFont .FontDescriptor ();};return _bcde ._bedag ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_eaaa *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_aecbg :=RC4_128bit ;if options !=nil {_aecbg =options .Algorithm ;};_dgdadg :=_dd .PermOwner ;if options !=nil {_dgdadg =options .Permissions ;};var _fefdeg _ag .Filter ;
switch _aecbg {case RC4_128bit :_fefdeg =_ag .NewFilterV2 (16);case AES_128bit :_fefdeg =_ag .NewFilterAESV2 ();case AES_256bit :_fefdeg =_ag .NewFilterAESV3 ();default:return _c .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_gddee ,_fafcc ,_gaeda :=_cda .PdfCryptNewEncrypt (_fefdeg ,userPass ,ownerPass ,_dgdadg );if _gaeda !=nil {return _gaeda ;};_eaaa ._babdb =_gddee ;if _fafcc .Major !=0{_eaaa .SetVersion (_fafcc .Major ,_fafcc .Minor );};_eaaa ._eacd =_fafcc .Encrypt ;
_eaaa ._dbfde =_cda .MakeArray (_cda .MakeHexString (_fafcc .ID0 ),_cda .MakeHexString (_fafcc .ID1 ));_bfdge :=_cda .MakeIndirectObject (_fafcc .Encrypt );_eaaa ._dbcfe =_bfdge ;_eaaa .addObject (_bfdge );return nil ;};func (_dcb *PdfReader )newPdfActionLaunchFromDict (_ffda *_cda .PdfObjectDictionary )(*PdfActionLaunch ,error ){_aefb ,_gcfd :=_gef (_ffda .Get ("\u0046"));
if _gcfd !=nil {return nil ,_gcfd ;};return &PdfActionLaunch {Win :_ffda .Get ("\u0057\u0069\u006e"),Mac :_ffda .Get ("\u004d\u0061\u0063"),Unix :_ffda .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_ffda .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_aefb },nil ;
};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_ddga :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_ddga ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_ebb :=NewPdfAnnotation ();_acgbb :=&PdfAnnotationCircle {};_acgbb .PdfAnnotation =_ebb ;_acgbb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebb .SetContext (_acgbb );return _acgbb ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_cda .PdfObjectInteger ;BitsPerComponent *_cda .PdfObjectInteger ;BitsPerFlag *_cda .PdfObjectInteger ;Decode *_cda .PdfObjectArray ;Function []PdfFunction ;};func (_afbfe *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _afbfe ._gaedg .GetCrypter ()!=nil &&!_afbfe ._gaedg .IsAuthenticated (){return nil ,_c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_debec :=_afbfe ._ggef ;_acbfe :=_debec .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _acbfe ==nil {return nil ,nil ;};_ffeffa ,_ :=_cda .GetIndirect (_acbfe );_acbfe =_cda .TraceToDirectObject (_acbfe );if _cda .IsNullObject (_acbfe ){_ae .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_dcbfa ,_gbbde :=_cda .GetDict (_acbfe );if !_gbbde {_ae .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_acbfe );_ae .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_acbfe );};_ae .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_ae .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_afbfe ._fdgef {_degg :=_afbfe .traverseObjectData (_dcbfa );
if _degg !=nil {_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_degg );
return nil ,_degg ;};};_dcaac ,_dbggb :=_afbfe .newPdfAcroFormFromDict (_ffeffa ,_dcbfa );if _dbggb !=nil {return nil ,_dbggb ;};return _dcaac ,nil ;};func _babc (_bbddb *_cda .PdfIndirectObject )(*PdfOutline ,error ){_cbaec ,_acea :=_bbddb .PdfObject .(*_cda .PdfObjectDictionary );
if !_acea {return nil ,_c .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_gfcdb :=NewPdfOutline ();if _caff :=_cbaec .Get ("\u0054\u0079\u0070\u0065");
_caff !=nil {_acbc ,_adafc :=_caff .(*_cda .PdfObjectName );if _adafc {if *_acbc !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_acbc );
};};};if _cbgab :=_cbaec .Get ("\u0043\u006f\u0075n\u0074");_cbgab !=nil {_abecce ,_addff :=_cda .GetNumberAsInt64 (_cbgab );if _addff !=nil {return nil ,_addff ;};_gfcdb .Count =&_abecce ;};return _gfcdb ,nil ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_gebc :=&PdfColorspaceSpecialSeparation {};return _gebc ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_gacge *PdfPageResources )GetExtGState (keyName _cda .PdfObjectName )(_cda .PdfObject ,bool ){if _gacge .ExtGState ==nil {return nil ,false ;};_faecd ,_bgeff :=_cda .TraceToDirectObject (_gacge .ExtGState ).(*_cda .PdfObjectDictionary );if !_bgeff {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gacge .ExtGState );
return nil ,false ;};if _bgcac :=_faecd .Get (keyName );_bgcac !=nil {return _bgcac ,true ;};return nil ,false ;};func _fcdf ()string {_aafcc .Lock ();defer _aafcc .Unlock ();return _ddbffg };func (_cadad *PdfSignature )extractChainFromPKCS7 ()([]*_ff .Certificate ,error ){_bdgaf ,_bfbfc :=_ab .Parse (_cadad .Contents .Bytes ());
if _bfbfc !=nil {return nil ,_bfbfc ;};return _bdgaf .Certificates ,nil ;};func (_gcaba *PdfReader )newPdfAnnotationCircleFromDict (_dad *_cda .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_gfd :=PdfAnnotationCircle {};_gafc ,_cdg :=_gcaba .newPdfAnnotationMarkupFromDict (_dad );
if _cdg !=nil {return nil ,_cdg ;};_gfd .PdfAnnotationMarkup =_gafc ;_gfd .BS =_dad .Get ("\u0042\u0053");_gfd .IC =_dad .Get ("\u0049\u0043");_gfd .BE =_dad .Get ("\u0042\u0045");_gfd .RD =_dad .Get ("\u0052\u0044");return &_gfd ,nil ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_dbfe *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};func _dfec (_badbf _cda .PdfObject )(*PdfShading ,error ){_bdgab :=&PdfShading {};var _ceage *_cda .PdfObjectDictionary ;if _efgcg ,_dagaa :=_cda .GetIndirect (_badbf );_dagaa {_bdgab ._bfddc =_efgcg ;
_dcafb ,_dgffed :=_efgcg .PdfObject .(*_cda .PdfObjectDictionary );if !_dgffed {_ae .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_cda .ErrTypeError ;
};_ceage =_dcafb ;}else if _ggbde ,_dfgf :=_cda .GetStream (_badbf );_dfgf {_bdgab ._bfddc =_ggbde ;_ceage =_ggbde .PdfObjectDictionary ;}else if _faade ,_ffaf :=_cda .GetDict (_badbf );_ffaf {_bdgab ._bfddc =_faade ;_ceage =_faade ;}else {_ae .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_badbf );
return nil ,_cda .ErrTypeError ;};if _ceage ==nil {_ae .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_ea .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_badbf =_ceage .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _badbf ==nil {_ae .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_badbf =_cda .TraceToDirectObject (_badbf );_decaab ,_fgfa :=_badbf .(*_cda .PdfObjectInteger );if !_fgfa {_ae .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_badbf );
return nil ,_cda .ErrTypeError ;};if *_decaab < 1||*_decaab > 7{_ae .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_decaab );
return nil ,_cda .ErrTypeError ;};_bdgab .ShadingType =_decaab ;_badbf =_ceage .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _badbf ==nil {_ae .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cgdag ,_fdfdb :=NewPdfColorspaceFromPdfObject (_badbf );if _fdfdb !=nil {_ae .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_fdfdb );
return nil ,_fdfdb ;};_bdgab .ColorSpace =_cgdag ;_badbf =_ceage .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _badbf !=nil {_badbf =_cda .TraceToDirectObject (_badbf );_beedg ,_eabbag :=_badbf .(*_cda .PdfObjectArray );if !_eabbag {_ae .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_badbf );
return nil ,_cda .ErrTypeError ;};_bdgab .Background =_beedg ;};_badbf =_ceage .Get ("\u0042\u0042\u006f\u0078");if _badbf !=nil {_badbf =_cda .TraceToDirectObject (_badbf );_cdcbfa ,_ffbef :=_badbf .(*_cda .PdfObjectArray );if !_ffbef {_ae .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_badbf );
return nil ,_cda .ErrTypeError ;};_bdaeaf ,_gbgdb :=NewPdfRectangle (*_cdcbfa );if _gbgdb !=nil {_ae .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_gbgdb );return nil ,_gbgdb ;};_bdgab .BBox =_bdaeaf ;};
_badbf =_ceage .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");if _badbf !=nil {_badbf =_cda .TraceToDirectObject (_badbf );_dacbe ,_bfcd :=_badbf .(*_cda .PdfObjectBool );if !_bfcd {_ae .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_badbf );
return nil ,_cda .ErrTypeError ;};_bdgab .AntiAlias =_dacbe ;};switch *_decaab {case 1:_cdcac ,_bgdbf :=_fbcg (_ceage );if _bgdbf !=nil {return nil ,_bgdbf ;};_cdcac .PdfShading =_bdgab ;_bdgab ._gbee =_cdcac ;return _bdgab ,nil ;case 2:_ccbce ,_agbad :=_gdbcd (_ceage );
if _agbad !=nil {return nil ,_agbad ;};_ccbce .PdfShading =_bdgab ;_bdgab ._gbee =_ccbce ;return _bdgab ,nil ;case 3:_ggfdf ,_cbaae :=_debad (_ceage );if _cbaae !=nil {return nil ,_cbaae ;};_ggfdf .PdfShading =_bdgab ;_bdgab ._gbee =_ggfdf ;return _bdgab ,nil ;
case 4:_baac ,_aaebb :=_eeaca (_ceage );if _aaebb !=nil {return nil ,_aaebb ;};_baac .PdfShading =_bdgab ;_bdgab ._gbee =_baac ;return _bdgab ,nil ;case 5:_aaede ,_cbabfg :=_adeeg (_ceage );if _cbabfg !=nil {return nil ,_cbabfg ;};_aaede .PdfShading =_bdgab ;
_bdgab ._gbee =_aaede ;return _bdgab ,nil ;case 6:_dfecf ,_affbd :=_ggcd (_ceage );if _affbd !=nil {return nil ,_affbd ;};_dfecf .PdfShading =_bdgab ;_bdgab ._gbee =_dfecf ;return _bdgab ,nil ;case 7:_aadefd ,_acfg :=_beae (_ceage );if _acfg !=nil {return nil ,_acfg ;
};_aadefd .PdfShading =_bdgab ;_bdgab ._gbee =_aadefd ;return _bdgab ,nil ;};return nil ,_ea .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_abcbg ,_deag :=NewStandard14Font (basefont );if _deag !=nil {panic (_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _abcbg ;};

// SetForms sets the Acroform for a PDF file.
func (_cggcd *PdfWriter )SetForms (form *PdfAcroForm )error {_cggcd ._faebc =form ;return nil };func (_eacg *LTV )buildCertChain (_ebfea ,_bcffca []*_ff .Certificate )([]*_ff .Certificate ,map[string ]*_ff .Certificate ,error ){_cecdg :=map[string ]*_ff .Certificate {};
for _ ,_geagb :=range _ebfea {_cecdg [_geagb .Subject .CommonName ]=_geagb ;};_abaff :=_ebfea ;for _ ,_dfdbf :=range _bcffca {_edbg :=_dfdbf .Subject .CommonName ;if _ ,_eceb :=_cecdg [_edbg ];_eceb {continue ;};_cecdg [_edbg ]=_dfdbf ;_abaff =append (_abaff ,_dfdbf );
};if len (_abaff )==0{return nil ,nil ,ErrSignNoCertificates ;};var _fega error ;for _adeee :=_abaff [0];_adeee !=nil &&!_eacg .CertClient .IsCA (_adeee );{_effg ,_bbfed :=_cecdg [_adeee .Issuer .CommonName ];if !_bbfed {if _effg ,_fega =_eacg .CertClient .GetIssuer (_adeee );
_fega !=nil {_ae .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_fega );
break ;};_cecdg [_adeee .Issuer .CommonName ]=_effg ;_abaff =append (_abaff ,_effg );};_adeee =_effg ;};return _abaff ,_cecdg ,nil ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _cda .PdfObject )(PdfColorspace ,error ){var _fefd *_cda .PdfIndirectObject ;var _edfa *_cda .PdfObjectName ;var _dcff *_cda .PdfObjectArray ;if _dcee ,_cgfc :=obj .(*_cda .PdfIndirectObject );_cgfc {_fefd =_dcee ;
};obj =_cda .TraceToDirectObject (obj );switch _cfgb :=obj .(type ){case *_cda .PdfObjectArray :_dcff =_cfgb ;case *_cda .PdfObjectName :_edfa =_cfgb ;};if _edfa !=nil {switch *_edfa {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_ae .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_edfa );return nil ,_fbac ;};};if _dcff !=nil &&_dcff .Len ()> 0{var _egc _cda .PdfObject =_fefd ;
if _fefd ==nil {_egc =_dcff ;};if _eadf ,_fece :=_cda .GetName (_dcff .Get (0));_fece {switch _eadf .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _dcff .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _dcff .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _dcff .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _feeg (_egc );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _eegc (_egc );
case "\u004c\u0061\u0062":return _geda (_egc );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _bcfd (_egc );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _ggfg (_egc );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _dcca (_egc );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _affd (_egc );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _becbb (_egc );default:_ae .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_eadf );
};};};_ae .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};func _bfdgb (_eadgeb string )map[string ]string {_gabg :=_faef .Split (_eadgeb ,-1);_efbbda :=map[string ]string {};for _ ,_bdbce :=range _gabg {_ccdae :=_bfaea .FindStringSubmatch (_bdbce );if _ccdae ==nil {continue ;};_ceadd ,_bgaf :=_ccdae [1],_ccdae [2];
_efbbda [_ceadd ]=_bgaf ;};return _efbbda ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_dde *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_cafce :=range pages {_cafce =_cafce .Duplicate ();_agdef (_cafce );_dde ._cafc =append (_dde ._cafc ,_cafce );};};

// ToPdfObject implements interface PdfModel.
func (_eef *PdfActionGoToE )ToPdfObject ()_cda .PdfObject {_eef .PdfAction .ToPdfObject ();_fg :=_eef ._dcg ;_bg :=_fg .PdfObject .(*_cda .PdfObjectDictionary );_bg .SetIfNotNil ("\u0053",_cda .MakeName (string (ActionTypeGoToE )));if _eef .F !=nil {_bg .Set ("\u0046",_eef .F .ToPdfObject ());
};_bg .SetIfNotNil ("\u0044",_eef .D );_bg .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_eef .NewWindow );_bg .SetIfNotNil ("\u0054",_eef .T );return _fg ;};func _facff (_abbe _cda .PdfObject )(PdfFunction ,error ){_abbe =_cda .ResolveReference (_abbe );
if _ggffg ,_ccbaa :=_abbe .(*_cda .PdfObjectStream );_ccbaa {_aaaga :=_ggffg .PdfObjectDictionary ;_aecae ,_efcfc :=_aaaga .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_cda .PdfObjectInteger );if !_efcfc {_ae .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ea .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_aecae ==0{return _cdfeg (_ggffg );}else if *_aecae ==4{return _fegbb (_ggffg );
}else {return nil ,_ea .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _bdaf ,_gaded :=_abbe .(*_cda .PdfIndirectObject );_gaded {_dbaa ,_adfcb :=_bdaf .PdfObject .(*_cda .PdfObjectDictionary );
if !_adfcb {_ae .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_ea .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_aaccb ,_adfcb :=_dbaa .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_cda .PdfObjectInteger );
if !_adfcb {_ae .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ea .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_aaccb ==2{return _fegb (_bdaf );}else if *_aaccb ==3{return _bagge (_bdaf );}else {return nil ,_ea .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _gfec ,_ddcgd :=_abbe .(*_cda .PdfObjectDictionary );
_ddcgd {_facag ,_geacg :=_gfec .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_cda .PdfObjectInteger );if !_geacg {_ae .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ea .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_facag ==2{return _fegb (_gfec );}else if *_facag ==3{return _bagge (_gfec );
}else {return nil ,_ea .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_ae .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_abbe );
return nil ,_ea .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// ToPdfObject returns the PDF representation of the pattern.
func (_fcdcg *PdfPattern )ToPdfObject ()_cda .PdfObject {_dcea :=_fcdcg .getDict ();_dcea .Set ("\u0054\u0079\u0070\u0065",_cda .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_dcea .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_cda .MakeInteger (_fcdcg .PatternType ));
return _fcdcg ._eaedcg ;};

// GetSubFilter returns SubFilter value or empty string.
func (_cgaac *pdfSignDictionary )GetSubFilter ()string {_fbacga :=_cgaac .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _fbacga ==nil {return "";};if _bgfag ,_ebfgbb :=_cda .GetNameVal (_fbacga );_ebfgbb {return _bgfag ;};return "";};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_dbgf *PdfFieldButton )IsCheckbox ()bool {return _dbgf .GetType ()==ButtonTypeCheckbox };

// Subtype returns the font's "Subtype" field.
func (_gcag *PdfFont )Subtype ()string {_aafa :=_gcag .baseFields ()._fceb ;if _acefc ,_ddbee :=_gcag ._aecg .(*pdfFontType0 );_ddbee {_aafa =_aafa +"\u003a"+_acefc .DescendantFont .Subtype ();};return _aafa ;};

// String returns the name of the colorspace (DeviceN).
func (_bcee *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _be .Time ){_aafcc .Lock ();defer _aafcc .Unlock ();_ddffe =creationDate ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_cbdf *PdfColorspaceDeviceN )GetNumComponents ()int {return _cbdf .ColorantNames .Len ()};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// PartialName returns the partial name of the field.
func (_eeed *PdfField )PartialName ()string {_eabba :="";if _eeed .T !=nil {_eabba =_eeed .T .Decoded ();}else {_ae .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _eabba ;};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _cd .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _ggaad ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _dagae (rs ,opts ,true ,_ggaad );
};func (_ebeff Image )getBase ()_eee .ImageBase {return _eee .NewImageBase (int (_ebeff .Width ),int (_ebeff .Height ),int (_ebeff .BitsPerComponent ),_ebeff .ColorComponents ,_ebeff .Data ,_ebeff ._eeeg ,_ebeff ._eabad );};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_bgbc *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bgbc .Alternate ==nil {_ae .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _bgbc .N ==1{_ae .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_aefeg :=NewPdfColorspaceDeviceGray ();return _aefeg .ColorToRGB (color );}else if _bgbc .N ==3{_ae .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _bgbc .N ==4{_ae .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_ecca :=NewPdfColorspaceDeviceCMYK ();return _ecca .ColorToRGB (color );}else {return nil ,_ea .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_ae .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_bgbc );
return _bgbc .Alternate .ColorToRGB (color );};func _egafd (_dgfda []*_cda .PdfObjectStream )*_cda .PdfObjectArray {if len (_dgfda )==0{return nil ;};_adba :=make ([]_cda .PdfObject ,0,len (_dgfda ));for _ ,_fefcf :=range _dgfda {_adba =append (_adba ,_fefcf );
};return _cda .MakeArray (_adba ...);};func (_caeaf *pdfFontType0 )baseFields ()*fontCommon {return &_caeaf .fontCommon };

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _cd .ReadSeeker )(*PdfFont ,error ){_abbb ,_bbefb :=_fb .ReadAll (r );if _bbefb !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_bbefb );
return nil ,_bbefb ;};_eeddab ,_bbefb :=_fd .TtfParse (_dc .NewReader (_abbb ));if _bbefb !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_bbefb );
return nil ,_bbefb ;};_ffbaa :=&pdfCIDFontType2 {fontCommon :fontCommon {_fceb :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_cda .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_eeddab .Widths )<=0{return nil ,_ea .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_cbefe :=1000.0/float64 (_eeddab .UnitsPerEm );_fbdca :=_cbefe *float64 (_eeddab .Widths [0]);_ebdaf :=make (map[rune ]int );_bbbd :=make (map[_fd .GID ]int );_cgfa :=_fd .GID (len (_eeddab .Widths ));for _efccf ,_bbgb :=range _eeddab .Chars {if _bbgb > _cgfa -1{continue ;
};_gfbbg :=int (_cbefe *float64 (_eeddab .Widths [_bbgb ]));_ebdaf [_efccf ]=_gfbbg ;_bbbd [_bbgb ]=_gfbbg ;};_ffbaa ._abed =_ebdaf ;_ffbaa .DW =_cda .MakeInteger (int64 (_fbdca ));_fafgg :=_dgdd (_bbbd ,uint16 (_cgfa ));_ffbaa .W =_cda .MakeIndirectObject (_fafgg );
_degfc :=_cda .MakeDict ();_degfc .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_cda .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_degfc .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_cda .MakeString ("\u0041\u0064\u006fb\u0065"));
_degfc .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_cda .MakeInteger (0));_ffbaa .CIDSystemInfo =_degfc ;_agga :=&PdfFontDescriptor {FontName :_cda .MakeName (_eeddab .PostScriptName ),Ascent :_cda .MakeFloat (_cbefe *float64 (_eeddab .TypoAscender )),Descent :_cda .MakeFloat (_cbefe *float64 (_eeddab .TypoDescender )),CapHeight :_cda .MakeFloat (_cbefe *float64 (_eeddab .CapHeight )),FontBBox :_cda .MakeArrayFromFloats ([]float64 {_cbefe *float64 (_eeddab .Xmin ),_cbefe *float64 (_eeddab .Ymin ),_cbefe *float64 (_eeddab .Xmax ),_cbefe *float64 (_eeddab .Ymax )}),ItalicAngle :_cda .MakeFloat (_eeddab .ItalicAngle ),MissingWidth :_cda .MakeFloat (_fbdca )};
_efgbe ,_bbefb :=_cda .MakeStream (_abbb ,_cda .NewFlateEncoder ());if _bbefb !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_bbefb );
return nil ,_bbefb ;};_efgbe .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cda .MakeInteger (int64 (len (_abbb ))));_agga .FontFile2 =_efgbe ;if _eeddab .Bold {_agga .StemV =_cda .MakeInteger (120);}else {_agga .StemV =_cda .MakeInteger (70);
};_bgef :=_egdd ;if _eeddab .IsFixedPitch {_bgef |=_fdaf ;};if _eeddab .ItalicAngle !=0{_bgef |=_ddegf ;};_agga .Flags =_cda .MakeInteger (int64 (_bgef ));_ffbaa ._gedd =_eeddab .PostScriptName ;_ffbaa ._bedag =_agga ;_cbgga :=pdfFontType0 {fontCommon :fontCommon {_fceb :"\u0054\u0079\u0070e\u0030",_gedd :_eeddab .PostScriptName },DescendantFont :&PdfFont {_aecg :_ffbaa },Encoding :_cda .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_fbbce :_eeddab .NewEncoder ()};
if len (_eeddab .Chars )> 0{_ggbab :=make (map[_db .CharCode ]rune ,len (_eeddab .Chars ));for _egdde ,_cbcc :=range _eeddab .Chars {_aggf :=_db .CharCode (_cbcc );if _aafbg ,_edgb :=_ggbab [_aggf ];!_edgb ||(_edgb &&_aafbg > _egdde ){_ggbab [_aggf ]=_egdde ;
};};_cbgga ._bfdgd =_db .NewToUnicodeCMap (_ggbab );};_beefa :=PdfFont {_aecg :&_cbgga };return &_beefa ,nil ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_ffbad *PdfColorspaceDeviceN )ToPdfObject ()_cda .PdfObject {_gfbge :=_cda .MakeArray (_cda .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_gfbge .Append (_ffbad .ColorantNames );_gfbge .Append (_ffbad .AlternateSpace .ToPdfObject ());_gfbge .Append (_ffbad .TintTransform .ToPdfObject ());
if _ffbad .Attributes !=nil {_gfbge .Append (_ffbad .Attributes .ToPdfObject ());};if _ffbad ._cdfe !=nil {_ffbad ._cdfe .PdfObject =_gfbge ;return _ffbad ._cdfe ;};return _gfbge ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _cda .PdfObject ;ColorSpace _cda .PdfObject ;Pattern _cda .PdfObject ;Shading _cda .PdfObject ;XObject _cda .PdfObject ;Font _cda .PdfObject ;ProcSet _cda .PdfObject ;Properties _cda .PdfObject ;_feedd *_cda .PdfObjectDictionary ;
_ccbbf *PdfPageResourcesColorspaces ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_bbddc *PdfPage )GetPageAsIndirectObject ()*_cda .PdfIndirectObject {return _bbddc ._bcadb };func (_efbac *PdfReader )newPdfSignatureFromIndirect (_bcfda *_cda .PdfIndirectObject )(*PdfSignature ,error ){_efadc ,_gcgb :=_bcfda .PdfObject .(*_cda .PdfObjectDictionary );
if !_gcgb {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _cafdbg ,_dacbg :=_efbac ._bbgffg .GetModelFromPrimitive (_bcfda ).(*PdfSignature );_dacbg {return _cafdbg ,nil ;};_ffdd :=&PdfSignature {};_ffdd ._gaec =_bcfda ;_ffdd .Type ,_ =_cda .GetName (_efadc .Get ("\u0054\u0079\u0070\u0065"));
_ffdd .Filter ,_gcgb =_cda .GetName (_efadc .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_gcgb {_ae .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_ffdd .SubFilter ,_ =_cda .GetName (_efadc .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_ffdd .Contents ,_gcgb =_cda .GetString (_efadc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_gcgb {_ae .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_ffdd .Cert =_efadc .Get ("\u0043\u0065\u0072\u0074");_ffdd .ByteRange ,_ =_cda .GetArray (_efadc .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_ffdd .Reference ,_ =_cda .GetArray (_efadc .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));
_ffdd .Changes ,_ =_cda .GetArray (_efadc .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_ffdd .Name ,_ =_cda .GetString (_efadc .Get ("\u004e\u0061\u006d\u0065"));_ffdd .M ,_ =_cda .GetString (_efadc .Get ("\u004d"));_ffdd .Location ,_ =_cda .GetString (_efadc .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_ffdd .Reason ,_ =_cda .GetString (_efadc .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_ffdd .ContactInfo ,_ =_cda .GetString (_efadc .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_ffdd .R ,_ =_cda .GetInt (_efadc .Get ("\u0052"));
_ffdd .V ,_ =_cda .GetInt (_efadc .Get ("\u0056"));_ffdd .PropBuild ,_ =_cda .GetDict (_efadc .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_ffdd .PropAuthTime ,_ =_cda .GetInt (_efadc .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_ffdd .PropAuthType ,_ =_cda .GetName (_efadc .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _ffdd ,nil ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_cfbd *_cda .PdfIndirectObject ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_acfdg *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_cda .StreamEncoder ,error ){_cfdf ,_eeef :=_acfdg ._eaedcg .(*_cda .PdfObjectStream );if !_eeef {_ae .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_acfdg ._eaedcg );
return nil ,nil ,_cda .ErrTypeError ;};_fdgab ,_dbed :=_cda .DecodeStream (_cfdf );if _dbed !=nil {_ae .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_dbed );
return nil ,nil ,_dbed ;};_acgcd ,_dbed :=_cda .NewEncoderFromStream (_cfdf );if _dbed !=nil {_ae .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_dbed );
return nil ,nil ,_dbed ;};return _fdgab ,_acgcd ,nil ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_aagbe *PdfReader )PageFromIndirectObject (ind *_cda .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_aagbe .PageList )!=len (_aagbe ._gbdee ){return nil ,0,_ea .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _bbdfa ,_dcegf :=range _aagbe ._gbdee {if _dcegf ==ind {return _aagbe .PageList [_bbdfa ],_bbdfa +1,nil ;};};return nil ,0,_ea .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};var (ErrRequiredAttributeMissing =_ea .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_ea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_ea .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_fbac =_ea .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_ea .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_ea .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_ac .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_cda .ErrNotSupported );ErrType1CFontNotSupported =_ac .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_cda .ErrNotSupported );
ErrType3FontNotSupported =_ac .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_cda .ErrNotSupported );
ErrTTCmapNotSupported =_ac .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_cda .ErrNotSupported );
ErrSignNotEnoughSpace =_ac .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_ac .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// AllFields returns a flattened list of all fields in the form.
func (_eagcd *PdfAcroForm )AllFields ()[]*PdfField {if _eagcd ==nil {return nil ;};var _fcgad []*PdfField ;if _eagcd .Fields !=nil {for _ ,_cdaed :=range *_eagcd .Fields {_fcgad =append (_fcgad ,_caegf (_cdaed )...);};};return _fcgad ;};

// B returns the value of the blue component of the color.
func (_gcga *PdfColorDeviceRGB )B ()float64 {return _gcga [2]};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_eegaf *PdfWriter )SetPageLabels (pageLabels _cda .PdfObject )error {if pageLabels ==nil {return nil ;};_ae .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_eegaf ._bgafe .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _eegaf .addObjects (pageLabels );};func _cddae (_aadgb *_cda .PdfObjectDictionary )(*PdfTilingPattern ,error ){_fdcefd :=&PdfTilingPattern {};_afaa :=_aadgb .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");
if _afaa ==nil {_ae .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_fbffg ,_fffg :=_afaa .(*_cda .PdfObjectInteger );if !_fffg {_ae .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_afaa );
return nil ,_cda .ErrTypeError ;};_fdcefd .PaintType =_fbffg ;_afaa =_aadgb .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _afaa ==nil {_ae .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_acdef ,_fffg :=_afaa .(*_cda .PdfObjectInteger );if !_fffg {_ae .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_afaa );
return nil ,_cda .ErrTypeError ;};_fdcefd .TilingType =_acdef ;_afaa =_aadgb .Get ("\u0042\u0042\u006f\u0078");if _afaa ==nil {_ae .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_afaa =_cda .TraceToDirectObject (_afaa );_edgcf ,_fffg :=_afaa .(*_cda .PdfObjectArray );if !_fffg {_ae .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_afaa );
return nil ,_cda .ErrTypeError ;};_gdca ,_befbac :=NewPdfRectangle (*_edgcf );if _befbac !=nil {_ae .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_befbac );return nil ,_befbac ;};_fdcefd .BBox =_gdca ;_afaa =_aadgb .Get ("\u0058\u0053\u0074e\u0070");
if _afaa ==nil {_ae .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cdfb ,_befbac :=_cda .GetNumberAsFloat (_afaa );if _befbac !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_cdfb );
return nil ,_befbac ;};_fdcefd .XStep =_cda .MakeFloat (_cdfb );_afaa =_aadgb .Get ("\u0059\u0053\u0074e\u0070");if _afaa ==nil {_ae .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_bgac ,_befbac :=_cda .GetNumberAsFloat (_afaa );if _befbac !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_bgac );
return nil ,_befbac ;};_fdcefd .YStep =_cda .MakeFloat (_bgac );_afaa =_aadgb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _afaa ==nil {_ae .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_aadgb ,_fffg =_cda .TraceToDirectObject (_afaa ).(*_cda .PdfObjectDictionary );if !_fffg {return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_afaa );
};_fcabf ,_befbac :=NewPdfPageResourcesFromDict (_aadgb );if _befbac !=nil {return nil ,_befbac ;};_fdcefd .Resources =_fcabf ;if _bded :=_aadgb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_bded !=nil {_bgcf ,_gfcaaa :=_bded .(*_cda .PdfObjectArray );
if !_gfcaaa {_ae .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bded );return nil ,_cda .ErrTypeError ;};_fdcefd .Matrix =_bgcf ;};return _fdcefd ,nil ;
};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_dfbg *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_cfea ,_dgedc :=color .(*PdfColorPattern );if !_dgedc {_ae .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _cfea .Color ==nil {return color ,nil ;};if _dfbg .UnderlyingCS ==nil {return nil ,_ea .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _dfbg .UnderlyingCS .ColorToRGB (_cfea .Color );
};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};func _debad (_bggde *_cda .PdfObjectDictionary )(*PdfShadingType3 ,error ){_acdad :=PdfShadingType3 {};_fgcgd :=_bggde .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _fgcgd ==nil {_ae .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_cdfega ,_fefc :=_fgcgd .(*_cda .PdfObjectArray );if !_fefc {_ae .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fgcgd );
return nil ,_cda .ErrTypeError ;};if _cdfega .Len ()!=6{_ae .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cdfega .Len ());return nil ,ErrInvalidAttribute ;
};_acdad .Coords =_cdfega ;if _bcgbg :=_bggde .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bcgbg !=nil {_bcgbg =_cda .TraceToDirectObject (_bcgbg );_bfacg ,_dadaf :=_bcgbg .(*_cda .PdfObjectArray );if !_dadaf {_ae .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bcgbg );
return nil ,_cda .ErrTypeError ;};_acdad .Domain =_bfacg ;};_fgcgd =_bggde .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fgcgd ==nil {_ae .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_acdad .Function =[]PdfFunction {};if _ggdacg ,_beaad :=_fgcgd .(*_cda .PdfObjectArray );_beaad {for _ ,_caab :=range _ggdacg .Elements (){_bafce ,_dadgd :=_facff (_caab );if _dadgd !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dadgd );
return nil ,_dadgd ;};_acdad .Function =append (_acdad .Function ,_bafce );};}else {_cbcaa ,_ccbfb :=_facff (_fgcgd );if _ccbfb !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ccbfb );
return nil ,_ccbfb ;};_acdad .Function =append (_acdad .Function ,_cbcaa );};if _fcedg :=_bggde .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_fcedg !=nil {_fcedg =_cda .TraceToDirectObject (_fcedg );_baadg ,_degca :=_fcedg .(*_cda .PdfObjectArray );if !_degca {_ae .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fcedg );
return nil ,_cda .ErrTypeError ;};if _baadg .Len ()!=2{_ae .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_baadg .Len ());return nil ,ErrInvalidAttribute ;
};_acdad .Extend =_baadg ;};return &_acdad ,nil ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_dcfec *PdfPage )AddExtGState (name _cda .PdfObjectName ,egs *_cda .PdfObjectDictionary )error {if _dcfec .Resources ==nil {_dcfec .Resources =NewPdfPageResources ();};if _dcfec .Resources .ExtGState ==nil {_dcfec .Resources .ExtGState =_cda .MakeDict ();
};_dfbcf ,_abgfa :=_cda .TraceToDirectObject (_dcfec .Resources .ExtGState ).(*_cda .PdfObjectDictionary );if !_abgfa {_ae .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_cda .TraceToDirectObject (_dcfec .Resources .ExtGState ));
return _ea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dfbcf .Set (name ,egs );return nil ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_dfea *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_dfea .GetNumComponents (){return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afab ,_gecc :=_dfea .TintTransform .Evaluate (vals );
if _gecc !=nil {return nil ,_gecc ;};_gdgc ,_gecc :=_dfea .AlternateSpace .ColorFromFloats (_afab );if _gecc !=nil {return nil ,_gecc ;};return _gdgc ,nil ;};func (_fcg *PdfReader )newPdfActionGotoFromDict (_ccd *_cda .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_ccd .Get ("\u0044")},nil ;
};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_deae *PdfColorspaceDeviceNAttributes )ToPdfObject ()_cda .PdfObject {_bfac :=_cda .MakeDict ();if _deae .Subtype !=nil {_bfac .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_deae .Subtype );};_bfac .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_deae .Colorants );
_bfac .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_deae .Process );_bfac .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_deae .MixingHints );if _deae ._gadb !=nil {_deae ._gadb .PdfObject =_bfac ;return _deae ._gadb ;
};return _bfac ;};

// Initialize initializes the PdfSignature.
func (_gaba *PdfSignature )Initialize ()error {if _gaba .Handler ==nil {return _ea .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _gaba .Handler .InitSignature (_gaba );};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_ffgae *PdfOutlineTreeNode )ToPdfObject ()_cda .PdfObject {return _ffgae .GetContext ().ToPdfObject ();};

// ToPdfObject implements interface PdfModel.
func (_ffga *PdfAnnotationProjection )ToPdfObject ()_cda .PdfObject {_ffga .PdfAnnotation .ToPdfObject ();_eecc :=_ffga ._afd ;_bgcgf :=_eecc .PdfObject .(*_cda .PdfObjectDictionary );_ffga .PdfAnnotationMarkup .appendToPdfDictionary (_bgcgf );return _eecc ;
};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_abcf pdfFontType0 )GetRuneMetrics (r rune )(_fd .CharMetrics ,bool ){if _abcf .DescendantFont ==nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_abcf );
return _fd .CharMetrics {},false ;};return _abcf .DescendantFont .GetRuneMetrics (r );};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cda .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_defc *PdfActionResetForm )ToPdfObject ()_cda .PdfObject {_defc .PdfAction .ToPdfObject ();_efb :=_defc ._dcg ;_ffd :=_efb .PdfObject .(*_cda .PdfObjectDictionary );_ffd .SetIfNotNil ("\u0053",_cda .MakeName (string (ActionTypeResetForm )));_ffd .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_defc .Fields );
_ffd .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_defc .Flags );return _efb ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _cd .ReadSeeker )(*PdfReader ,error ){const _afcaa ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _dagae (rs ,&ReaderOpts {},false ,_afcaa );};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_dbbf *BorderStyle )GetPdfName ()string {switch *_dbbf {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};func (_ggfcc *PdfFunctionType0 )processSamples ()error {_ddbdf :=_bed .ResampleBytes (_ggfcc ._gabbf ,_ggfcc .BitsPerSample );_ggfcc ._fdaag =_ddbdf ;return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_aegd *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _aegd .Alternate ==nil {if _aegd .N ==1{_ebbdg :=NewPdfColorspaceDeviceGray ();return _ebbdg .ColorFromFloats (vals );}else if _aegd .N ==3{_ccgb :=NewPdfColorspaceDeviceRGB ();
return _ccgb .ColorFromFloats (vals );}else if _aegd .N ==4{_gffg :=NewPdfColorspaceDeviceCMYK ();return _gffg .ColorFromFloats (vals );}else {return nil ,_ea .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _aegd .Alternate .ColorFromFloats (vals );};

// GetCharMetrics returns the char metrics for character code `code`.
func (_agaad pdfFontType0 )GetCharMetrics (code _aef .CharCode )(_fd .CharMetrics ,bool ){if _agaad .DescendantFont ==nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_agaad );
return _fd .CharMetrics {},false ;};return _agaad .DescendantFont .GetCharMetrics (code );};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_dbga *PdfFieldChoice )ToPdfObject ()_cda .PdfObject {_dbga .PdfField .ToPdfObject ();_faba :=_dbga ._geab ;_eeba :=_faba .PdfObject .(*_cda .PdfObjectDictionary );_eeba .Set ("\u0046\u0054",_cda .MakeName ("\u0043\u0068"));if _dbga .Opt !=nil {_eeba .Set ("\u004f\u0070\u0074",_dbga .Opt );
};if _dbga .TI !=nil {_eeba .Set ("\u0054\u0049",_dbga .TI );};if _dbga .I !=nil {_eeba .Set ("\u0049",_dbga .I );};return _faba ;};func _bagge (_dfacb _cda .PdfObject )(*PdfFunctionType3 ,error ){_ddgad :=&PdfFunctionType3 {};var _fbgg *_cda .PdfObjectDictionary ;
if _dcedg ,_bgbg :=_dfacb .(*_cda .PdfIndirectObject );_bgbg {_fdcef ,_gdafc :=_dcedg .PdfObject .(*_cda .PdfObjectDictionary );if !_gdafc {return nil ,_ea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_ddgad ._eadcc =_dcedg ;_fbgg =_fdcef ;}else if _gccgc ,_edfde :=_dfacb .(*_cda .PdfObjectDictionary );_edfde {_fbgg =_gccgc ;}else {return nil ,_ea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bedfd ,_fgaaf :=_cda .TraceToDirectObject (_fbgg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cda .PdfObjectArray );
if !_fgaaf {_ae .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ea .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bedfd .Len ()!=2{_ae .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ea .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_adaac ,_badbd :=_bedfd .ToFloat64Array ();
if _badbd !=nil {return nil ,_badbd ;};_ddgad .Domain =_adaac ;_bedfd ,_fgaaf =_cda .TraceToDirectObject (_fbgg .Get ("\u0052\u0061\u006eg\u0065")).(*_cda .PdfObjectArray );if _fgaaf {if _bedfd .Len ()< 0||_bedfd .Len ()%2!=0{return nil ,_ea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_caafa ,_dfdac :=_bedfd .ToFloat64Array ();if _dfdac !=nil {return nil ,_dfdac ;};_ddgad .Range =_caafa ;};_bedfd ,_fgaaf =_cda .TraceToDirectObject (_fbgg .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_cda .PdfObjectArray );if !_fgaaf {_ae .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ea .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ddgad .Functions =[]PdfFunction {};
for _ ,_eafa :=range _bedfd .Elements (){_bebdd ,_aebc :=_facff (_eafa );if _aebc !=nil {return nil ,_aebc ;};_ddgad .Functions =append (_ddgad .Functions ,_bebdd );};_bedfd ,_fgaaf =_cda .TraceToDirectObject (_fbgg .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_cda .PdfObjectArray );
if !_fgaaf {_ae .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ea .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_ddfc ,_badbd :=_bedfd .ToFloat64Array ();if _badbd !=nil {return nil ,_badbd ;};_ddgad .Bounds =_ddfc ;if len (_ddgad .Bounds )!=len (_ddgad .Functions )-1{_ae .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_ddgad .Bounds ),len (_ddgad .Functions ));
return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bedfd ,_fgaaf =_cda .TraceToDirectObject (_fbgg .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_cda .PdfObjectArray );if !_fgaaf {_ae .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ea .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_addae ,_badbd :=_bedfd .ToFloat64Array ();
if _badbd !=nil {return nil ,_badbd ;};_ddgad .Encode =_addae ;if len (_ddgad .Encode )!=2*len (_ddgad .Functions ){_ae .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_ddgad .Encode ),len (_ddgad .Functions ));
return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _ddgad ,nil ;};

// IsColored specifies if the pattern is colored.
func (_gbbdg *PdfTilingPattern )IsColored ()bool {if _gbbdg .PaintType !=nil &&*_gbbdg .PaintType ==1{return true ;};return false ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_gcgea *PdfPage )AddContentStreamByString (contentStr string )error {_eged ,_daed :=_cda .MakeStream ([]byte (contentStr ),_cda .NewFlateEncoder ());if _daed !=nil {return _daed ;};if _gcgea .Contents ==nil {_gcgea .Contents =_eged ;}else {_fbgcg :=_cda .TraceToDirectObject (_gcgea .Contents );
_affab ,_bcgf :=_fbgcg .(*_cda .PdfObjectArray );if !_bcgf {_affab =_cda .MakeArray (_fbgcg );};_affab .Append (_eged );_gcgea .Contents =_affab ;};return nil ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _be .Time ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_bfce *_cda .PdfObjectDictionary ;_dfcee *_cda .PdfIndirectObject ;};func (_cfcf *PdfReader )newPdfAnnotationFreeTextFromDict (_caad *_cda .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_beaa :=PdfAnnotationFreeText {};
_afa ,_agcf :=_cfcf .newPdfAnnotationMarkupFromDict (_caad );if _agcf !=nil {return nil ,_agcf ;};_beaa .PdfAnnotationMarkup =_afa ;_beaa .DA =_caad .Get ("\u0044\u0041");_beaa .Q =_caad .Get ("\u0051");_beaa .RC =_caad .Get ("\u0052\u0043");_beaa .DS =_caad .Get ("\u0044\u0053");
_beaa .CL =_caad .Get ("\u0043\u004c");_beaa .IT =_caad .Get ("\u0049\u0054");_beaa .BE =_caad .Get ("\u0042\u0045");_beaa .RD =_caad .Get ("\u0052\u0044");_beaa .BS =_caad .Get ("\u0042\u0053");_beaa .LE =_caad .Get ("\u004c\u0045");return &_beaa ,nil ;
};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_gecde :=PdfColorDeviceGray (grayVal );return &_gecde ;};

// GetContainingPdfObject implements interface PdfModel.
func (_efafe *PdfSignature )GetContainingPdfObject ()_cda .PdfObject {return _efafe ._gaec };func _aaedc (_fgafc []byte )[]byte {const _facc =52845;const _beegd =22719;_febbg :=55665;for _ ,_cdbd :=range _fgafc [:4]{_febbg =(int (_cdbd )+_febbg )*_facc +_beegd ;
};_dbfc :=make ([]byte ,len (_fgafc )-4);for _cbfa ,_cbfg :=range _fgafc [4:]{_dbfc [_cbfa ]=byte (int (_cbfg )^_febbg >>8);_febbg =(int (_cbfg )+_febbg )*_facc +_beegd ;};return _dbfc ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;
);func (_fefb *DSS )generateHashMap (_eedda []*_cda .PdfObjectStream )(map[string ]*_cda .PdfObjectStream ,error ){_daagb :=map[string ]*_cda .PdfObjectStream {};for _ ,_ddbfe :=range _eedda {_cgbc ,_fbbb :=_cda .DecodeStream (_ddbfe );if _fbbb !=nil {return nil ,_fbbb ;
};_dfcde ,_fbbb :=_agedc (_cgbc );if _fbbb !=nil {return nil ,_fbbb ;};_daagb [string (_dfcde )]=_ddbfe ;};return _daagb ,nil ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_ffeff *PdfColorLab )GetNumComponents ()int {return 3};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_fbdc *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_fbdc .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_fbdc ._degb =acroForm ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _cda .PdfObject ;IC _cda .PdfObject ;BE _cda .PdfObject ;RD _cda .PdfObject ;};func (_aab *PdfReader )newPdfAnnotationScreenFromDict (_agabg *_cda .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_agea :=PdfAnnotationScreen {};
_agea .T =_agabg .Get ("\u0054");_agea .MK =_agabg .Get ("\u004d\u004b");_agea .A =_agabg .Get ("\u0041");_agea .AA =_agabg .Get ("\u0041\u0041");return &_agea ,nil ;};func _eeaca (_gagbc *_cda .PdfObjectDictionary )(*PdfShadingType4 ,error ){_dccbf :=PdfShadingType4 {};
_gedff :=_gagbc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _gedff ==nil {_ae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_aafad ,_fgbc :=_gedff .(*_cda .PdfObjectInteger );if !_fgbc {_ae .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gedff );
return nil ,_cda .ErrTypeError ;};_dccbf .BitsPerCoordinate =_aafad ;_gedff =_gagbc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gedff ==nil {_ae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_aafad ,_fgbc =_gedff .(*_cda .PdfObjectInteger );if !_fgbc {_ae .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gedff );
return nil ,_cda .ErrTypeError ;};_dccbf .BitsPerComponent =_aafad ;_gedff =_gagbc .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _gedff ==nil {_ae .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_aafad ,_fgbc =_gedff .(*_cda .PdfObjectInteger );if !_fgbc {_ae .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gedff );
return nil ,_cda .ErrTypeError ;};_dccbf .BitsPerComponent =_aafad ;_gedff =_gagbc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gedff ==nil {_ae .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cbbgd ,_fgbc :=_gedff .(*_cda .PdfObjectArray );if !_fgbc {_ae .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gedff );
return nil ,_cda .ErrTypeError ;};_dccbf .Decode =_cbbgd ;_gedff =_gagbc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gedff ==nil {_ae .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_dccbf .Function =[]PdfFunction {};if _cedba ,_bbfgg :=_gedff .(*_cda .PdfObjectArray );_bbfgg {for _ ,_cbaea :=range _cedba .Elements (){_cdegad ,_cgeca :=_facff (_cbaea );if _cgeca !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cgeca );
return nil ,_cgeca ;};_dccbf .Function =append (_dccbf .Function ,_cdegad );};}else {_eafgb ,_baffb :=_facff (_gedff );if _baffb !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_baffb );
return nil ,_baffb ;};_dccbf .Function =append (_dccbf .Function ,_eafgb );};return &_dccbf ,nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_aeffg pdfCIDFontType2 )GetRuneMetrics (r rune )(_fd .CharMetrics ,bool ){_fegca ,_abfb :=_aeffg ._abed [r ];if !_abfb {_eccg ,_baccd :=_cda .GetInt (_aeffg .DW );if !_baccd {return _fd .CharMetrics {},false ;};_fegca =int (*_eccg );};return _fd .CharMetrics {Wx :float64 (_fegca )},true ;
};func (_aecd *PdfReader )loadAnnotations (_abgf _cda .PdfObject )([]*PdfAnnotation ,error ){_adcga ,_eggc :=_cda .GetArray (_abgf );if !_eggc {return nil ,_c .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _fbbge []*PdfAnnotation ;for _ ,_affed :=range _adcga .Elements (){_affed =_cda .ResolveReference (_affed );if _ ,_eebde :=_affed .(*_cda .PdfObjectNull );_eebde {continue ;};_efdd ,_cbccg :=_affed .(*_cda .PdfObjectDictionary );_abcbd ,_gcagab :=_affed .(*_cda .PdfIndirectObject );
if _cbccg {_abcbd =&_cda .PdfIndirectObject {};_abcbd .PdfObject =_efdd ;}else {if !_gcagab {return nil ,_c .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_gegac ,_dace :=_aecd .newPdfAnnotationFromIndirectObject (_abcbd );if _dace !=nil {return nil ,_dace ;};switch _beed :=_gegac .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_aagbd :=range _aecd .AcroForm .AllFields (){if _aagbd ._geab ==_beed .Parent {_beed ._cba =_aagbd ;
break ;};};};if _gegac !=nil {_fbbge =append (_fbbge ,_gegac );};};return _fbbge ,nil ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_cbbb *PdfFont )CharcodesToStrings (charcodes []_aef .CharCode )([]string ,int ,int ){_dbgab :=_cbbb .baseFields ();_adff :=make ([]string ,0,len (charcodes ));_bcge :=0;_cgda :=_cbbb .Encoder ();if _cgda !=nil {switch _gedga :=_cgda .(type ){case _aef .SimpleEncoder :_deaec :=_gedga .BaseName ();
if _ ,_ecgae :=_eaeac [_deaec ];_ecgae {for _ ,_bbafb :=range charcodes {if _fadg ,_cgacc :=_cgda .CharcodeToRune (_bbafb );_cgacc {_adff =append (_adff ,string (_fadg ));}else {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_bbafb ,charcodes ,_dbgab .isCIDFont (),_cbbb ,_cgda );
_bcge ++;_adff =append (_adff ,_db .MissingCodeString );};};return _adff ,len (_adff ),_bcge ;};};};for _ ,_dfcb :=range charcodes {if _dbgab ._bfdgd !=nil {if _bfeg ,_gadfg :=_dbgab ._bfdgd .CharcodeToUnicode (_db .CharCode (_dfcb ));_gadfg {_adff =append (_adff ,_bfeg );
continue ;};};if _cgda !=nil {if _fcdc ,_facf :=_cgda .CharcodeToRune (_dfcb );_facf {_adff =append (_adff ,string (_fcdc ));continue ;};};_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_dfcb ,charcodes ,_dbgab .isCIDFont (),_cbbb ,_cgda );
_bcge ++;_adff =append (_adff ,_db .MissingCodeString );};if _bcge !=0{_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_bcge ,_cbbb );
};return _adff ,len (_adff ),_bcge ;};func _caegf (_ddea *PdfField )[]*PdfField {_aada :=[]*PdfField {_ddea };for _ ,_befb :=range _ddea .Kids {_aada =append (_aada ,_caegf (_befb )...);};return _aada ;};func _fbcg (_addgc *_cda .PdfObjectDictionary )(*PdfShadingType1 ,error ){_gbcbg :=PdfShadingType1 {};
if _fedgd :=_addgc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_fedgd !=nil {_fedgd =_cda .TraceToDirectObject (_fedgd );_agbcg ,_dcfeb :=_fedgd .(*_cda .PdfObjectArray );if !_dcfeb {_ae .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fedgd );
return nil ,_ea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gbcbg .Domain =_agbcg ;};if _dfbcfa :=_addgc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dfbcfa !=nil {_dfbcfa =_cda .TraceToDirectObject (_dfbcfa );
_accbaa ,_eaedea :=_dfbcfa .(*_cda .PdfObjectArray );if !_eaedea {_ae .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dfbcfa );return nil ,_ea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_gbcbg .Matrix =_accbaa ;};_ebafd :=_addgc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ebafd ==nil {_ae .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gbcbg .Function =[]PdfFunction {};if _defag ,_ccaca :=_ebafd .(*_cda .PdfObjectArray );_ccaca {for _ ,_egfa :=range _defag .Elements (){_cdaf ,_gcfbe :=_facff (_egfa );if _gcfbe !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gcfbe );
return nil ,_gcfbe ;};_gbcbg .Function =append (_gbcbg .Function ,_cdaf );};}else {_ebbf ,_acebc :=_facff (_ebafd );if _acebc !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_acebc );
return nil ,_acebc ;};_gbcbg .Function =append (_gbcbg .Function ,_ebbf );};return &_gbcbg ,nil ;};func (_daaf *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _daaf ._bedag };

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_ccdee *PdfWriter )AddPage (page *PdfPage )error {const _eggcb ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_agdef (page );_aeagd :=page .ToPdfObject ();_ae .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_ae .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_aeagd );_bacgbb ,_cfacg :=_cda .GetIndirect (_aeagd );if !_cfacg {return _ea .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_ae .Log .Trace ("\u0025\u0073",_bacgbb );_ae .Log .Trace ("\u0025\u0073",_bacgbb .PdfObject );_egdb ,_cfacg :=_cda .GetDict (_bacgbb .PdfObject );if !_cfacg {return _ea .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dgge ,_cfacg :=_cda .GetName (_egdb .Get ("\u0054\u0079\u0070\u0065"));if !_cfacg {return _c .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_egdb .Get ("\u0054\u0079\u0070\u0065"));
};if _dgge .String ()!="\u0050\u0061\u0067\u0065"{return _ea .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_abbbbc :=[]_cda .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_cfagd ,_ccgbc :=_cda .GetIndirect (_egdb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_ae .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_egdb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_ccgbc );
for _ccgbc {_ae .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_cfagd );_bbcb ,_efbag :=_cda .GetDict (_cfagd .PdfObject );if !_efbag {return _ea .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_cddfa :=range _abbbbc {_ae .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cddfa );if _egdb .Get (_cddfa )!=nil {_ae .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _bbebdg :=_bbcb .Get (_cddfa );_bbebdg !=nil {_ae .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_cddfa );_egdb .Set (_cddfa ,_bbebdg );};};_cfagd ,_ccgbc =_cda .GetIndirect (_bbcb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_ae .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_bbcb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_ae .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_egdb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ccdee ._bacdc );_bacgbb .PdfObject =_egdb ;_gecdg ,_cfacg :=_cda .GetDict (_ccdee ._bacdc .PdfObject );if !_cfacg {return _ea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_fffd ,_cfacg :=_cda .GetArray (_gecdg .Get ("\u004b\u0069\u0064\u0073"));if !_cfacg {return _ea .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_fffd .Append (_bacgbb );_ccdee ._baegb [_egdb ]=struct{}{};_agecb ,_cfacg :=_cda .GetInt (_gecdg .Get ("\u0043\u006f\u0075n\u0074"));if !_cfacg {return _ea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_agecb =*_agecb +1;if page ._abadcg ==nil {_caadg :=_ffc .Track (_ccdee ._gdbaa ,_eggcb );if _caadg !=nil {return _caadg ;};}else {_eadfe :=_ffc .Track (page ._abadcg ._aaddf ,_eggcb );if _eadfe !=nil {return _eadfe ;};};_ccdee .addObject (_bacgbb );
_egaeb :=_ccdee .addObjects (_egdb );if _egaeb !=nil {return _egaeb ;};return nil ;};func _beae (_dbfgc *_cda .PdfObjectDictionary )(*PdfShadingType7 ,error ){_ecedf :=PdfShadingType7 {};_geeec :=_dbfgc .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _geeec ==nil {_ae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ecgaec ,_cggfe :=_geeec .(*_cda .PdfObjectInteger );if !_cggfe {_ae .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_geeec );
return nil ,_cda .ErrTypeError ;};_ecedf .BitsPerCoordinate =_ecgaec ;_geeec =_dbfgc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _geeec ==nil {_ae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ecgaec ,_cggfe =_geeec .(*_cda .PdfObjectInteger );if !_cggfe {_ae .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_geeec );
return nil ,_cda .ErrTypeError ;};_ecedf .BitsPerComponent =_ecgaec ;_geeec =_dbfgc .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _geeec ==nil {_ae .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ecgaec ,_cggfe =_geeec .(*_cda .PdfObjectInteger );if !_cggfe {_ae .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_geeec );
return nil ,_cda .ErrTypeError ;};_ecedf .BitsPerComponent =_ecgaec ;_geeec =_dbfgc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _geeec ==nil {_ae .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_begfd ,_cggfe :=_geeec .(*_cda .PdfObjectArray );if !_cggfe {_ae .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_geeec );
return nil ,_cda .ErrTypeError ;};_ecedf .Decode =_begfd ;if _bfcad :=_dbfgc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_bfcad !=nil {_ecedf .Function =[]PdfFunction {};if _edgbc ,_gfbdd :=_bfcad .(*_cda .PdfObjectArray );_gfbdd {for _ ,_dcfff :=range _edgbc .Elements (){_aggbb ,_ddbgf :=_facff (_dcfff );
if _ddbgf !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ddbgf );return nil ,_ddbgf ;};_ecedf .Function =append (_ecedf .Function ,_aggbb );
};}else {_ccgf ,_fffec :=_facff (_bfcad );if _fffec !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fffec );return nil ,_fffec ;
};_ecedf .Function =append (_ecedf .Function ,_ccgf );};};return &_ecedf ,nil ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_adae *PdfFieldText )ToPdfObject ()_cda .PdfObject {_adae .PdfField .ToPdfObject ();_fdfg :=_adae ._geab ;_effb :=_fdfg .PdfObject .(*_cda .PdfObjectDictionary );_effb .Set ("\u0046\u0054",_cda .MakeName ("\u0054\u0078"));if _adae .DA !=nil {_effb .Set ("\u0044\u0041",_adae .DA );
};if _adae .Q !=nil {_effb .Set ("\u0051",_adae .Q );};if _adae .DS !=nil {_effb .Set ("\u0044\u0053",_adae .DS );};if _adae .RV !=nil {_effb .Set ("\u0052\u0056",_adae .RV );};if _adae .MaxLen !=nil {_effb .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_adae .MaxLen );
};return _fdfg ;};

// ToPdfObject implements interface PdfModel.
func (_gcdd *PdfAnnotationCircle )ToPdfObject ()_cda .PdfObject {_gcdd .PdfAnnotation .ToPdfObject ();_aca :=_gcdd ._afd ;_ded :=_aca .PdfObject .(*_cda .PdfObjectDictionary );_gcdd .PdfAnnotationMarkup .appendToPdfDictionary (_ded );_ded .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_ded .SetIfNotNil ("\u0042\u0053",_gcdd .BS );_ded .SetIfNotNil ("\u0049\u0043",_gcdd .IC );_ded .SetIfNotNil ("\u0042\u0045",_gcdd .BE );_ded .SetIfNotNil ("\u0052\u0044",_gcdd .RD );return _aca ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_dbca *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_ggbg ,_ddef :=color .(*PdfColorCalRGB );if !_ddef {_ae .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_ea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dea :=_ggbg .A ();_efbd :=_ggbg .B ();_fgac :=_ggbg .C ();X :=_dbca .Matrix [0]*_ba .Pow (_dea ,_dbca .Gamma [0])+_dbca .Matrix [3]*_ba .Pow (_efbd ,_dbca .Gamma [1])+_dbca .Matrix [6]*_ba .Pow (_fgac ,_dbca .Gamma [2]);
Y :=_dbca .Matrix [1]*_ba .Pow (_dea ,_dbca .Gamma [0])+_dbca .Matrix [4]*_ba .Pow (_efbd ,_dbca .Gamma [1])+_dbca .Matrix [7]*_ba .Pow (_fgac ,_dbca .Gamma [2]);Z :=_dbca .Matrix [2]*_ba .Pow (_dea ,_dbca .Gamma [0])+_dbca .Matrix [5]*_ba .Pow (_efbd ,_dbca .Gamma [1])+_dbca .Matrix [8]*_ba .Pow (_fgac ,_dbca .Gamma [2]);
_bcaf :=3.240479*X +-1.537150*Y +-0.498535*Z ;_efg :=-0.969256*X +1.875992*Y +0.041556*Z ;_bdcg :=0.055648*X +-0.204043*Y +1.057311*Z ;_bcaf =_ba .Min (_ba .Max (_bcaf ,0),1.0);_efg =_ba .Min (_ba .Max (_efg ,0),1.0);_bdcg =_ba .Min (_ba .Max (_bdcg ,0),1.0);
return NewPdfColorDeviceRGB (_bcaf ,_efg ,_bdcg ),nil ;};

// SetAction sets the PDF action for the annotation link.
func (_afg *PdfAnnotationLink )SetAction (action *PdfAction ){_afg ._ecf =action ;if action ==nil {_afg .A =nil ;};};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_eac :=NewPdfAnnotation ();_gff :=&PdfAnnotationSquare {};_gff .PdfAnnotation =_eac ;_gff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eac .SetContext (_gff );return _gff ;};func _geda (_gdaf _cda .PdfObject )(*PdfColorspaceLab ,error ){_bag :=NewPdfColorspaceLab ();
if _gcbb ,_bbge :=_gdaf .(*_cda .PdfIndirectObject );_bbge {_bag ._eafff =_gcbb ;};_gdaf =_cda .TraceToDirectObject (_gdaf );_deab ,_geee :=_gdaf .(*_cda .PdfObjectArray );if !_geee {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _deab .Len ()!=2{return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_gdaf =_cda .TraceToDirectObject (_deab .Get (0));_edae ,_geee :=_gdaf .(*_cda .PdfObjectName );
if !_geee {return nil ,_c .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_edae !="\u004c\u0061\u0062"{return nil ,_c .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");
};_gdaf =_cda .TraceToDirectObject (_deab .Get (1));_cdgfa ,_geee :=_gdaf .(*_cda .PdfObjectDictionary );if !_geee {return nil ,_c .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");
};_gdaf =_cdgfa .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_gdaf =_cda .TraceToDirectObject (_gdaf );_ecgaf ,_geee :=_gdaf .(*_cda .PdfObjectArray );if !_geee {return nil ,_c .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");
};if _ecgaf .Len ()!=3{return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_bdcea ,_dced :=_ecgaf .GetAsFloat64Slice ();
if _dced !=nil {return nil ,_dced ;};_bag .WhitePoint =_bdcea ;_gdaf =_cdgfa .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gdaf !=nil {_gdaf =_cda .TraceToDirectObject (_gdaf );_abgc ,_agef :=_gdaf .(*_cda .PdfObjectArray );
if !_agef {return nil ,_c .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _abgc .Len ()!=3{return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_efgf ,_cdab :=_abgc .GetAsFloat64Slice ();if _cdab !=nil {return nil ,_cdab ;};_bag .BlackPoint =_efgf ;};_gdaf =_cdgfa .Get ("\u0052\u0061\u006eg\u0065");if _gdaf !=nil {_gdaf =_cda .TraceToDirectObject (_gdaf );_gdbbf ,_gbda :=_gdaf .(*_cda .PdfObjectArray );
if !_gbda {_ae .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_c .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _gdbbf .Len ()!=4{_ae .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_c .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_abfe ,_bbbc :=_gdbbf .GetAsFloat64Slice ();if _bbbc !=nil {return nil ,_bbbc ;};_bag .Range =_abfe ;};return _bag ,nil ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_edbe PdfModel ;Rect _cda .PdfObject ;Contents _cda .PdfObject ;P _cda .PdfObject ;NM _cda .PdfObject ;M _cda .PdfObject ;F _cda .PdfObject ;AP _cda .PdfObject ;AS _cda .PdfObject ;Border _cda .PdfObject ;C _cda .PdfObject ;StructParent _cda .PdfObject ;
OC _cda .PdfObject ;_afd *_cda .PdfIndirectObject ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_aafcc .Lock ();defer _aafcc .Unlock ();_afcga =author };

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_dcd :=NewPdfAnnotation ();_ddb :=&PdfAnnotationUnderline {};_ddb .PdfAnnotation =_dcd ;_ddb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dcd .SetContext (_ddb );return _ddb ;};func (_beac *PdfReader )newPdfAnnotationMovieFromDict (_dgfbb *_cda .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_ceg :=PdfAnnotationMovie {};
_ceg .T =_dgfbb .Get ("\u0054");_ceg .Movie =_dgfbb .Get ("\u004d\u006f\u0076i\u0065");_ceg .A =_dgfbb .Get ("\u0041");return &_ceg ,nil ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_fgbebb *Image )ColorAt (x ,y int )(_de .Color ,error ){_beada :=_eee .BytesPerLine (int (_fgbebb .Width ),int (_fgbebb .BitsPerComponent ),_fgbebb .ColorComponents );switch _fgbebb .ColorComponents {case 1:return _eee .ColorAtGrayscale (x ,y ,int (_fgbebb .BitsPerComponent ),_beada ,_fgbebb .Data ,_fgbebb ._eabad );
case 3:return _eee .ColorAtNRGBA (x ,y ,int (_fgbebb .Width ),_beada ,int (_fgbebb .BitsPerComponent ),_fgbebb .Data ,_fgbebb ._eeeg ,_fgbebb ._eabad );case 4:return _eee .ColorAtCMYK (x ,y ,int (_fgbebb .Width ),_fgbebb .Data ,_fgbebb ._eabad );};_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fgbebb .ColorComponents ,_fgbebb .BitsPerComponent );
return nil ,_ea .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_fbbec *PdfReader )GetNameDictionary ()(_cda .PdfObject ,error ){_fabdf :=_cda .ResolveReference (_fbbec ._ggef .Get ("\u004e\u0061\u006de\u0073"));if _fabdf ==nil {return nil ,nil ;};if !_fbbec ._fdgef {_cdcc :=_fbbec .traverseObjectData (_fabdf );
if _cdcc !=nil {return nil ,_cdcc ;};};return _fabdf ,nil ;};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_gaec *_cda .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_cda .PdfObjectName ;Filter *_cda .PdfObjectName ;SubFilter *_cda .PdfObjectName ;Contents *_cda .PdfObjectString ;Cert _cda .PdfObject ;ByteRange *_cda .PdfObjectArray ;Reference *_cda .PdfObjectArray ;Changes *_cda .PdfObjectArray ;Name *_cda .PdfObjectString ;
M *_cda .PdfObjectString ;Location *_cda .PdfObjectString ;Reason *_cda .PdfObjectString ;ContactInfo *_cda .PdfObjectString ;R *_cda .PdfObjectInteger ;V *_cda .PdfObjectInteger ;PropBuild *_cda .PdfObjectDictionary ;PropAuthTime *_cda .PdfObjectInteger ;
PropAuthType *_cda .PdfObjectName ;};

// Add appends a top level outline item to the outline.
func (_dadae *Outline )Add (item *OutlineItem ){_dadae .Entries =append (_dadae .Entries ,item )};func (_gdbb *PdfReader )newPdfAnnotationInkFromDict (_bcdab *_cda .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_aaf :=PdfAnnotationInk {};_afcc ,_fbbe :=_gdbb .newPdfAnnotationMarkupFromDict (_bcdab );
if _fbbe !=nil {return nil ,_fbbe ;};_aaf .PdfAnnotationMarkup =_afcc ;_aaf .InkList =_bcdab .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_aaf .BS =_bcdab .Get ("\u0042\u0053");return &_aaf ,nil ;};func (_gafabe *PdfWriter )addObjects (_fabbe _cda .PdfObject )error {_ae .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _dbdga ,_dcabc :=_fabbe .(*_cda .PdfIndirectObject );_dcabc {_ae .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_ae .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_fabbe ,_dbdga );_ae .Log .Trace ("\u002d\u0020\u0025\u0073",_dbdga .PdfObject );
if _gafabe .addObject (_dbdga ){_gbebf :=_gafabe .addObjects (_dbdga .PdfObject );if _gbebf !=nil {return _gbebf ;};};return nil ;};if _afeff ,_bfgcb :=_fabbe .(*_cda .PdfObjectStream );_bfgcb {_ae .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_ae .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_fabbe ,_fabbe );
if _gafabe .addObject (_afeff ){_gdge :=_gafabe .addObjects (_afeff .PdfObjectDictionary );if _gdge !=nil {return _gdge ;};};return nil ;};if _ccfc ,_aafbgd :=_fabbe .(*_cda .PdfObjectDictionary );_aafbgd {_ae .Log .Trace ("\u0044\u0069\u0063\u0074");_ae .Log .Trace ("\u002d\u0020\u0025\u0073",_fabbe );
for _ ,_facbg :=range _ccfc .Keys (){_bace :=_ccfc .Get (_facbg );if _gdeeg ,_decgfe :=_bace .(*_cda .PdfObjectReference );_decgfe {_bace =_gdeeg .Resolve ();_ccfc .Set (_facbg ,_bace );};if _facbg !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _geggf :=_gafabe .addObjects (_bace );
_geggf !=nil {return _geggf ;};}else {if _ ,_fabgc :=_bace .(*_cda .PdfObjectNull );_fabgc {continue ;};if _aadgbc :=_gafabe .hasObject (_bace );!_aadgbc {_ae .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_bace ,_bace ,_bace );
_gafabe ._caada [_bace ]=append (_gafabe ._caada [_bace ],_ccfc );};};};return nil ;};if _badeg ,_debbc :=_fabbe .(*_cda .PdfObjectArray );_debbc {_ae .Log .Trace ("\u0041\u0072\u0072a\u0079");_ae .Log .Trace ("\u002d\u0020\u0025\u0073",_fabbe );if _badeg ==nil {return _ea .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _bdead ,_cbcg :=range _badeg .Elements (){if _ebaee ,_fdgad :=_cbcg .(*_cda .PdfObjectReference );_fdgad {_cbcg =_ebaee .Resolve ();_badeg .Set (_bdead ,_cbcg );};if _ggfb :=_gafabe .addObjects (_cbcg );_ggfb !=nil {return _ggfb ;};};return nil ;
};if _ ,_efcdbc :=_fabbe .(*_cda .PdfObjectReference );_efcdbc {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_fabbe );
return _ea .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};func (_eabed *XObjectImage )getParamsDict ()*_cda .PdfObjectDictionary {_bbadc :=_cda .MakeDict ();_bbadc .Set ("\u0057\u0069\u0064t\u0068",_cda .MakeInteger (*_eabed .Width ));
_bbadc .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_cda .MakeInteger (*_eabed .Height ));_bbadc .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_cda .MakeInteger (int64 (_eabed .ColorSpace .GetNumComponents ())));
_bbadc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cda .MakeInteger (*_eabed .BitsPerComponent ));return _bbadc ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_cddad *PdfPageResources )HasColorspaceByName (keyName _cda .PdfObjectName )bool {_fcdae ,_gdgff :=_cddad .GetColorspaces ();if _gdgff !=nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_gdgff );
return false ;};if _fcdae ==nil {return false ;};_ ,_cdfc :=_fcdae .Colorspaces [string (keyName )];return _cdfc ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_cfad *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_cfad .ToPdfOutline ().PdfOutlineTreeNode ;};

// ToPdfObject implements interface PdfModel.
func (_acdd *PdfActionRendition )ToPdfObject ()_cda .PdfObject {_acdd .PdfAction .ToPdfObject ();_abc :=_acdd ._dcg ;_fea :=_abc .PdfObject .(*_cda .PdfObjectDictionary );_fea .SetIfNotNil ("\u0053",_cda .MakeName (string (ActionTypeRendition )));_fea .SetIfNotNil ("\u0052",_acdd .R );
_fea .SetIfNotNil ("\u0041\u004e",_acdd .AN );_fea .SetIfNotNil ("\u004f\u0050",_acdd .OP );_fea .SetIfNotNil ("\u004a\u0053",_acdd .JS );return _abc ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_dgagd *PdfReader )GetOCProperties ()(_cda .PdfObject ,error ){_defad :=_dgagd ._ggef ;_egccc :=_defad .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_egccc =_cda .ResolveReference (_egccc );if !_dgagd ._fdgef {_cdbaf :=_dgagd .traverseObjectData (_egccc );
if _cdbaf !=nil {return nil ,_cdbaf ;};};return _egccc ,nil ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_cda .PdfObjectInteger ;BitsPerComponent *_cda .PdfObjectInteger ;BitsPerFlag *_cda .PdfObjectInteger ;Decode *_cda .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject implements interface PdfModel.
func (_beaf *PdfAnnotationLink )ToPdfObject ()_cda .PdfObject {_beaf .PdfAnnotation .ToPdfObject ();_abafg :=_beaf ._afd ;_agg :=_abafg .PdfObject .(*_cda .PdfObjectDictionary );_agg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u004c\u0069\u006e\u006b"));
if _beaf ._ecf !=nil &&_beaf ._ecf ._gd !=nil {_agg .Set ("\u0041",_beaf ._ecf ._gd .ToPdfObject ());}else if _beaf .A !=nil {_agg .Set ("\u0041",_beaf .A );};_agg .SetIfNotNil ("\u0044\u0065\u0073\u0074",_beaf .Dest );_agg .SetIfNotNil ("\u0048",_beaf .H );
_agg .SetIfNotNil ("\u0050\u0041",_beaf .PA );_agg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_beaf .QuadPoints );_agg .SetIfNotNil ("\u0042\u0053",_beaf .BS );return _abafg ;};func _fgegb (_edaf *_cda .PdfObjectDictionary ,_adaaf *fontCommon ,_bcdca _aef .TextEncoder )(*pdfFontSimple ,error ){_bffggg :=_bbfb (_adaaf );
_bffggg ._afee =_bcdca ;if _bcdca ==nil {_egeb :=_edaf .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _egeb ==nil {_egeb =_cda .MakeInteger (0);};_bffggg .FirstChar =_egeb ;_ffbdf ,_edbed :=_cda .GetIntVal (_egeb );if !_edbed {_ae .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_egeb );
return nil ,_cda .ErrTypeError ;};_aaad :=_aef .CharCode (_ffbdf );_egeb =_edaf .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _egeb ==nil {_egeb =_cda .MakeInteger (255);};_bffggg .LastChar =_egeb ;_ffbdf ,_edbed =_cda .GetIntVal (_egeb );
if !_edbed {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_egeb );return nil ,_cda .ErrTypeError ;
};_fbdd :=_aef .CharCode (_ffbdf );_bffggg ._fbgce =make (map[_aef .CharCode ]float64 );_egeb =_edaf .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _egeb !=nil {_bffggg .Widths =_egeb ;_bfff ,_gfcaad :=_cda .GetArray (_egeb );if !_gfcaad {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_egeb );
return nil ,_cda .ErrTypeError ;};_beefg ,_edee :=_bfff .ToFloat64Array ();if _edee !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_edee ;};if len (_beefg )!=int (_fbdd -_aaad +1){_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_fbdd -_aaad +1,len (_beefg ));
return nil ,_cda .ErrRangeError ;};for _gdaba ,_cgaaa :=range _beefg {_bffggg ._fbgce [_aaad +_aef .CharCode (_gdaba )]=_cgaaa ;};};};_bffggg .Encoding =_cda .TraceToDirectObject (_edaf .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _bffggg ,nil ;
};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_fdff *PdfField )GetContainingPdfObject ()_cda .PdfObject {return _fdff ._geab };func (_cfd *PdfReader )newPdfActionResetFormFromDict (_dab *_cda .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_dab .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_dab .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// ToPdfObject implements interface PdfModel.
func (_geb *PdfActionTrans )ToPdfObject ()_cda .PdfObject {_geb .PdfAction .ToPdfObject ();_bfg :=_geb ._dcg ;_adg :=_bfg .PdfObject .(*_cda .PdfObjectDictionary );_adg .SetIfNotNil ("\u0053",_cda .MakeName (string (ActionTypeTrans )));_adg .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_geb .Trans );
return _bfg ;};

// ToPdfObject implements interface PdfModel.
func (_gfe *PdfActionMovie )ToPdfObject ()_cda .PdfObject {_gfe .PdfAction .ToPdfObject ();_gab :=_gfe ._dcg ;_cgc :=_gab .PdfObject .(*_cda .PdfObjectDictionary );_cgc .SetIfNotNil ("\u0053",_cda .MakeName (string (ActionTypeMovie )));_cgc .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_gfe .Annotation );
_cgc .SetIfNotNil ("\u0054",_gfe .T );_cgc .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_gfe .Operation );return _gab ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_cdcbg *OutlineItem )Insert (index uint ,item *OutlineItem ){_cbefg :=uint (len (_cdcbg .Entries ));if index > _cbefg {index =_cbefg ;};_cdcbg .Entries =append (_cdcbg .Entries [:index ],append ([]*OutlineItem {item },_cdcbg .Entries [index :]...)...);
};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_fbbd *PdfColorspaceLab )GetNumComponents ()int {return 3};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_bcead *PdfReader )GetNamedDestinations ()(_cda .PdfObject ,error ){_cccfa :=_cda .ResolveReference (_bcead ._ggef .Get ("\u0044\u0065\u0073t\u0073"));if _cccfa ==nil {return nil ,nil ;};if !_bcead ._fdgef {_cdgfd :=_bcead .traverseObjectData (_cccfa );
if _cdgfd !=nil {return nil ,_cdgfd ;};};return _cccfa ,nil ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_agfc pdfFontSimple )GetCharMetrics (code _aef .CharCode )(_fd .CharMetrics ,bool ){if _caec ,_cgad :=_agfc ._fbgce [code ];_cgad {return _fd .CharMetrics {Wx :_caec },true ;};if _fd .IsStdFont (_fd .StdFontName (_agfc ._gedd )){return _fd .CharMetrics {Wx :250},true ;
};return _fd .CharMetrics {},false ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_cda .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _cda .PdfObject ;A _cda .PdfObject ;SE _cda .PdfObject ;C _cda .PdfObject ;F _cda .PdfObject ;
_cggef *_cda .PdfIndirectObject ;};func _gef (_fgd _cda .PdfObject )(*PdfFilespec ,error ){if _fgd ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_fgd );};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_bdbf *PdfPageResources )GetXObjectImageByName (keyName _cda .PdfObjectName )(*XObjectImage ,error ){_gaada ,_gdfc :=_bdbf .GetXObjectByName (keyName );if _gaada ==nil {return nil ,nil ;};if _gdfc !=XObjectTypeImage {return nil ,_ea .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_adccf ,_cadg :=NewXObjectImageFromStream (_gaada );if _cadg !=nil {return nil ,_cadg ;};return _adccf ,nil ;};

// ToInteger convert to an integer format.
func (_fcab *PdfColorLab )ToInteger (bits int )[3]uint32 {_gfbba :=_ba .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gfbba *_fcab .L ()),uint32 (_gfbba *_fcab .A ()),uint32 (_gfbba *_fcab .B ())};};func (_caeff *PdfSignature )extractChainFromCert ()([]*_ff .Certificate ,error ){var _gbdda *_cda .PdfObjectArray ;
switch _cdaded :=_caeff .Cert .(type ){case *_cda .PdfObjectString :_gbdda =_cda .MakeArray (_cdaded );case *_cda .PdfObjectArray :_gbdda =_cdaded ;default:return nil ,_c .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_cdaded );
};var _abcgg _dc .Buffer ;for _ ,_eaefb :=range _gbdda .Elements (){_babad ,_eefcb :=_cda .GetString (_eaefb );if !_eefcb {return nil ,_c .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_eaefb );
};if _ ,_bdebf :=_abcgg .Write (_babad .Bytes ());_bdebf !=nil {return nil ,_bdebf ;};};return _ff .ParseCertificates (_abcgg .Bytes ());};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_ebdd *PdfWriter )SetOpenAction (dest _cda .PdfObject )error {if dest ==nil ||_cda .IsNullObject (dest ){return nil ;};_ebdd ._bgafe .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _ebdd .addObjects (dest );};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_gegbb *PdfFieldButton )GetType ()ButtonType {_fcaaa :=ButtonTypeCheckbox ;if _gegbb .Ff !=nil {if (uint32 (*_gegbb .Ff )&FieldFlagPushbutton .Mask ())> 0{_fcaaa =ButtonTypePush ;}else if (uint32 (*_gegbb .Ff )&FieldFlagRadio .Mask ())> 0{_fcaaa =ButtonTypeRadio ;
};};return _fcaaa ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_fceg *PdfField )FullName ()(string ,error ){var _eaffa _dc .Buffer ;_fafe :=[]string {};if _fceg .T !=nil {_fafe =append (_fafe ,_fceg .T .Decoded ());};_eegdg :=map[*PdfField ]bool {};_eegdg [_fceg ]=true ;_egage :=_fceg .Parent ;for _egage !=nil {if _ ,_gaggd :=_eegdg [_egage ];
_gaggd {return _eaffa .String (),_ea .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _egage .T ==nil {return _eaffa .String (),_ea .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_fafe =append (_fafe ,_egage .T .Decoded ());_eegdg [_egage ]=true ;_egage =_egage .Parent ;};for _edgcc :=len (_fafe )-1;_edgcc >=0;_edgcc --{_eaffa .WriteString (_fafe [_edgcc ]);if _edgcc > 0{_eaffa .WriteString ("\u002e");};};return _eaffa .String (),nil ;
};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_cda .PdfObjectInteger ;TilingType *_cda .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_cda .PdfObjectFloat ;YStep *_cda .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_cda .PdfObjectArray ;};


// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_cda .PdfObjectString ;Q *_cda .PdfObjectInteger ;DS *_cda .PdfObjectString ;RV _cda .PdfObject ;MaxLen *_cda .PdfObjectInteger ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_dgea :=&PdfColorspaceLab {};_dgea .BlackPoint =[]float64 {0.0,0.0,0.0};_dgea .Range =[]float64 {-100,100,-100,100};return _dgea ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_dbggc *PdfPageResources )SetColorspaceByName (keyName _cda .PdfObjectName ,cs PdfColorspace )error {_cede ,_dccfe :=_dbggc .GetColorspaces ();if _dccfe !=nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_dccfe );
return _dccfe ;};if _cede ==nil {_cede =NewPdfPageResourcesColorspaces ();_dbggc .SetColorSpace (_cede );};_cede .Set (keyName ,cs );return nil ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// A returns the value of the A component of the color.
func (_faec *PdfColorCalRGB )A ()float64 {return _faec [0]};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_dffff :=&PdfSignature {Type :_cda .MakeName ("\u0053\u0069\u0067"),Handler :handler };_caggd :=&pdfSignDictionary {PdfObjectDictionary :_cda .MakeDict (),_ebeec :&handler ,_efeaeb :_dffff };
_dffff ._gaec =_cda .MakeIndirectObject (_caggd );return _dffff ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_cafd byte )byte ;

// SetAlpha sets the alpha layer for the image.
func (_abfad *Image )SetAlpha (alpha []byte ){_abfad ._eeeg =alpha };

// SetContext set the sub annotation (context).
func (_eebee *PdfShading )SetContext (ctx PdfModel ){_eebee ._gbee =ctx };func _ggfg (_dacb _cda .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_ae .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_dacb .String (),_dacb );
_cffd :=NewPdfColorspaceSpecialPattern ();if _eeae ,_abec :=_dacb .(*_cda .PdfIndirectObject );_abec {_cffd ._aeee =_eeae ;};_dacb =_cda .TraceToDirectObject (_dacb );if _geef ,_efgb :=_dacb .(*_cda .PdfObjectName );_efgb {if *_geef !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_c .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _cffd ,nil ;};_afgdg ,_efgc :=_dacb .(*_cda .PdfObjectArray );if !_efgc {_ae .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_dacb );
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _afgdg .Len ()!=1&&_afgdg .Len ()!=2{_ae .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_afgdg );
return nil ,_c .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_dacb =_afgdg .Get (0);if _ceee ,_ggagd :=_dacb .(*_cda .PdfObjectName );_ggagd {if *_ceee !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ae .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_ceee );
return nil ,_c .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _afgdg .Len ()> 1{_dacb =_afgdg .Get (1);_dacb =_cda .TraceToDirectObject (_dacb );_feadc ,_fecga :=NewPdfColorspaceFromPdfObject (_dacb );if _fecga !=nil {return nil ,_fecga ;
};_cffd .UnderlyingCS =_feadc ;};_ae .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_cffd .UnderlyingCS );
return _cffd ,nil ;};func _agcac (_feca _cda .PdfObject )(*fontFile ,error ){_ae .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_feca );
_fcedd :=&fontFile {};_feca =_cda .TraceToDirectObject (_feca );_aacba ,_dabg :=_feca .(*_cda .PdfObjectStream );if !_dabg {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_feca );
return nil ,_cda .ErrTypeError ;};_gbbg :=_aacba .PdfObjectDictionary ;_adaf ,_efbec :=_cda .DecodeStream (_aacba );if _efbec !=nil {return nil ,_efbec ;};_abfff ,_dabg :=_cda .GetNameVal (_gbbg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_dabg {_fcedd ._eebf =_abfff ;
if _abfff =="\u0054\u0079\u0070\u0065\u0031\u0043"{_ae .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_acfc ,_ :=_cda .GetIntVal (_gbbg .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_cfaea ,_ :=_cda .GetIntVal (_gbbg .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _acfc > len (_adaf ){_acfc =len (_adaf );
};if _acfc +_cfaea > len (_adaf ){_cfaea =len (_adaf )-_acfc ;};_dfadc :=_adaf [:_acfc ];var _deadb []byte ;if _cfaea > 0{_deadb =_adaf [_acfc :_acfc +_cfaea ];};if _acfc > 0&&_cfaea > 0{_eaefg :=_fcedd .loadFromSegments (_dfadc ,_deadb );if _eaefg !=nil {return nil ,_eaefg ;
};};return _fcedd ,nil ;};func _cedbf (_beafff *_cda .PdfObjectArray )(float64 ,error ){_agace ,_ecfd :=_beafff .ToFloat64Array ();if _ecfd !=nil {_ae .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_beafff ,_ecfd );
};switch len (_agace ){case 1:return _agace [0],nil ;case 3:_aceda :=PdfColorspaceDeviceRGB {};_fffac ,_agage :=_aceda .ColorFromFloats (_agace );if _agage !=nil {return 0.0,_agage ;};return _fffac .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_becbg :=PdfColorspaceDeviceCMYK {};
_ggeeg ,_geaed :=_becbg .ColorFromFloats (_agace );if _geaed !=nil {return 0.0,_geaed ;};_dgdf ,_geaed :=_becbg .ColorToRGB (_ggeeg .(*PdfColorDeviceCMYK ));if _geaed !=nil {return 0.0,_geaed ;};return _dgdf .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;
};_ecfd =_ea .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_ae .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_beafff ,_ecfd );
return 0.0,_ecfd ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_gggafb []_cda .PdfObject )([]_cda .PdfObject ,error );};func (_feeff *PdfReader )loadStructure ()error {if _feeff ._gaedg .GetCrypter ()!=nil &&!_feeff ._gaedg .IsAuthenticated (){return _c .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_facdb :=_feeff ._gaedg .GetTrailer ();if _facdb ==nil {return _c .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_gdfae ,_eagdf :=_facdb .Get ("\u0052\u006f\u006f\u0074").(*_cda .PdfObjectReference );if !_eagdf {return _c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_facdb );
};_deeg ,_cgaae :=_feeff ._gaedg .LookupByReference (*_gdfae );if _cgaae !=nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_cgaae );
return _cgaae ;};_ccaba ,_eagdf :=_deeg .(*_cda .PdfIndirectObject );if !_eagdf {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_deeg ,*_facdb );
return _ea .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_dedd ,_eagdf :=(*_ccaba ).PdfObject .(*_cda .PdfObjectDictionary );if !_eagdf {_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_ccaba .PdfObject );
return _ea .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_ae .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_dedd );_adeec ,_eagdf :=_dedd .Get ("\u0050\u0061\u0067e\u0073").(*_cda .PdfObjectReference );
if !_eagdf {return _ea .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_ebacd ,_cgaae :=_feeff ._gaedg .LookupByReference (*_adeec );
if _cgaae !=nil {_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _cgaae ;};_ggaaf ,_eagdf :=_ebacd .(*_cda .PdfIndirectObject );if !_eagdf {_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_ae .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_ggaaf );return _ea .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_gdfee ,_eagdf :=_ggaaf .PdfObject .(*_cda .PdfObjectDictionary );if !_eagdf {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_ggaaf );
return _ea .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_gfaaa ,_eagdf :=_cda .GetInt (_gdfee .Get ("\u0043\u006f\u0075n\u0074"));if !_eagdf {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _ea .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_eagdf =_cda .GetName (_gdfee .Get ("\u0054\u0079\u0070\u0065"));!_eagdf {_ae .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_gdfee .Set ("\u0054\u0079\u0070\u0065",_cda .MakeName ("\u0050\u0061\u0067e\u0073"));};if _baadf ,_ddbcd :=_cda .GetInt (_gdfee .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_ddbcd {_bcbcf :=int64 (*_baadf );_feeff .Rotate =&_bcbcf ;};_feeff ._gcfed =_gdfae ;
_feeff ._ggef =_dedd ;_feeff ._gdeg =_gdfee ;_feeff ._caceb =_ggaaf ;_feeff ._dddd =int (*_gfaaa );_feeff ._gbdee =[]*_cda .PdfIndirectObject {};_fbebg :=map[_cda .PdfObject ]struct{}{};_cgaae =_feeff .buildPageList (_ggaaf ,nil ,_fbebg );if _cgaae !=nil {return _cgaae ;
};_ae .Log .Trace ("\u002d\u002d\u002d");_ae .Log .Trace ("\u0054\u004f\u0043");_ae .Log .Trace ("\u0050\u0061\u0067e\u0073");_ae .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_feeff ._gbdee ),_feeff ._gbdee );_feeff ._gdaed ,_cgaae =_feeff .loadOutlines ();
if _cgaae !=nil {_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_cgaae );
return _cgaae ;};_feeff .AcroForm ,_cgaae =_feeff .loadForms ();if _cgaae !=nil {return _cgaae ;};_feeff .DSS ,_cgaae =_feeff .loadDSS ();if _cgaae !=nil {return _cgaae ;};return nil ;};func (_gcbg *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";
};func _ggcd (_ddee *_cda .PdfObjectDictionary )(*PdfShadingType6 ,error ){_ceffb :=PdfShadingType6 {};_ffgfa :=_ddee .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _ffgfa ==nil {_ae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_feaeb ,_aagde :=_ffgfa .(*_cda .PdfObjectInteger );if !_aagde {_ae .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ffgfa );
return nil ,_cda .ErrTypeError ;};_ceffb .BitsPerCoordinate =_feaeb ;_ffgfa =_ddee .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ffgfa ==nil {_ae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_feaeb ,_aagde =_ffgfa .(*_cda .PdfObjectInteger );if !_aagde {_ae .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ffgfa );
return nil ,_cda .ErrTypeError ;};_ceffb .BitsPerComponent =_feaeb ;_ffgfa =_ddee .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _ffgfa ==nil {_ae .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_feaeb ,_aagde =_ffgfa .(*_cda .PdfObjectInteger );if !_aagde {_ae .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ffgfa );
return nil ,_cda .ErrTypeError ;};_ceffb .BitsPerComponent =_feaeb ;_ffgfa =_ddee .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ffgfa ==nil {_ae .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bdda ,_aagde :=_ffgfa .(*_cda .PdfObjectArray );if !_aagde {_ae .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ffgfa );
return nil ,_cda .ErrTypeError ;};_ceffb .Decode =_bdda ;if _ddfd :=_ddee .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ddfd !=nil {_ceffb .Function =[]PdfFunction {};if _dbdaeg ,_gfgfd :=_ddfd .(*_cda .PdfObjectArray );_gfgfd {for _ ,_ebeeb :=range _dbdaeg .Elements (){_edfgf ,_efdg :=_facff (_ebeeb );
if _efdg !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_efdg );return nil ,_efdg ;};_ceffb .Function =append (_ceffb .Function ,_edfgf );
};}else {_gdgcg ,_fgcgda :=_facff (_ddfd );if _fgcgda !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fgcgda );return nil ,_fgcgda ;
};_ceffb .Function =append (_ceffb .Function ,_gdgcg );};};return &_ceffb ,nil ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_aafcc .Lock ();defer _aafcc .Unlock ();_feeag =creator };type pdfFont interface{_fd .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_cda .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// SetLocation sets the `Location` field of the signature.
func (_efdda *PdfSignature )SetLocation (location string ){_efdda .Location =_cda .MakeString (location )};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_fbfa _cda .PdfObject ;};var _ pdfFont =(*pdfFontSimple )(nil );

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// SetImage updates XObject Image with new image data.
func (_fdca *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_fdca .Filter .UpdateParams (img .GetParamsDict ());_eaeebe ,_ceafe :=_fdca .Filter .EncodeBytes (img .Data );if _ceafe !=nil {return _ceafe ;};_fdca .Stream =_eaeebe ;_gcbef :=img .Width ;
_fdca .Width =&_gcbef ;_abcd :=img .Height ;_fdca .Height =&_abcd ;_ggbb :=img .BitsPerComponent ;_fdca .BitsPerComponent =&_ggbb ;if cs ==nil {if img .ColorComponents ==1{_fdca .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_fdca .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_fdca .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _ea .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_fdca .ColorSpace =cs ;};return nil ;
};

// Encoder returns the font's text encoder.
func (_gdag pdfFontType3 )Encoder ()_aef .TextEncoder {return _gdag ._bdgf };

// HasFontByName checks whether a font is defined by the specified keyName.
func (_eebfg *PdfPageResources )HasFontByName (keyName _cda .PdfObjectName )bool {_ ,_ecce :=_eebfg .GetFontByName (keyName );return _ecce ;};func (_gfge *PdfFilespec )getDict ()*_cda .PdfObjectDictionary {if _bfcec ,_acdb :=_gfge ._gfcf .(*_cda .PdfIndirectObject );
_acdb {_ccgd ,_ebca :=_bfcec .PdfObject .(*_cda .PdfObjectDictionary );if !_ebca {return nil ;};return _ccgd ;}else if _efeae ,_bfbg :=_gfge ._gfcf .(*_cda .PdfObjectDictionary );_bfbg {return _efeae ;}else {_ae .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_gfge ._gfcf );
return nil ;};};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_caca *PdfTilingPattern )ToPdfObject ()_cda .PdfObject {_caca .PdfPattern .ToPdfObject ();_cgdba :=_caca .getDict ();if _caca .PaintType !=nil {_cgdba .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_caca .PaintType );};if _caca .TilingType !=nil {_cgdba .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_caca .TilingType );
};if _caca .BBox !=nil {_cgdba .Set ("\u0042\u0042\u006f\u0078",_caca .BBox .ToPdfObject ());};if _caca .XStep !=nil {_cgdba .Set ("\u0058\u0053\u0074e\u0070",_caca .XStep );};if _caca .YStep !=nil {_cgdba .Set ("\u0059\u0053\u0074e\u0070",_caca .YStep );
};if _caca .Resources !=nil {_cgdba .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_caca .Resources .ToPdfObject ());};if _caca .Matrix !=nil {_cgdba .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_caca .Matrix );};return _caca ._eaedcg ;};

// PdfVersion returns version of the PDF file.
func (_eagaf *PdfReader )PdfVersion ()_cda .Version {return _eagaf ._gaedg .PdfVersion ()};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _cda .PdfObject ;NewWindow _cda .PdfObject ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _cda .PdfObject ;Sy _cda .PdfObject ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_fceee *LTV )Enable (sig *PdfSignature ,extraCerts []*_ff .Certificate )error {if _cdcbff :=_fceee .validateSig (sig );_cdcbff !=nil {return _cdcbff ;};_ebcgb ,_gcgdd :=_fceee .generateVRIKey (sig );if _gcgdd !=nil {return _gcgdd ;};if _ ,_aegba :=_fceee ._bfddf .VRI [_ebcgb ];
_aegba &&_fceee .SkipExisting {return nil ;};_bfcbc ,_gcgdd :=sig .GetCerts ();if _gcgdd !=nil {return _gcgdd ;};return _fceee .enable (_bfcbc ,extraCerts ,_ebcgb );};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _cda .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _cda .PdfObject ;Contents _cda .PdfObject ;
Rotate *int64 ;Group _cda .PdfObject ;Thumb _cda .PdfObject ;B _cda .PdfObject ;Dur _cda .PdfObject ;Trans _cda .PdfObject ;AA _cda .PdfObject ;Metadata _cda .PdfObject ;PieceInfo _cda .PdfObject ;StructParents _cda .PdfObject ;ID _cda .PdfObject ;PZ _cda .PdfObject ;
SeparationInfo _cda .PdfObject ;Tabs _cda .PdfObject ;TemplateInstantiated _cda .PdfObject ;PresSteps _cda .PdfObject ;UserUnit _cda .PdfObject ;VP _cda .PdfObject ;Annots _cda .PdfObject ;_ceeaa []*PdfAnnotation ;_edefc *_cda .PdfObjectDictionary ;_bcadb *_cda .PdfIndirectObject ;
_abadcg *PdfReader ;};

// String returns a string representation of what flags are set.
func (_ffaa FieldFlag )String ()string {_eacce :="";if _ffaa ==FieldFlagClear {_eacce ="\u0043\u006c\u0065a\u0072";return _eacce ;};if _ffaa &FieldFlagReadOnly > 0{_eacce +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _ffaa &FieldFlagRequired > 0{_eacce +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";
};if _ffaa &FieldFlagNoExport > 0{_eacce +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _ffaa &FieldFlagNoToggleToOff > 0{_eacce +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _ffaa &FieldFlagRadio > 0{_eacce +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _ffaa &FieldFlagPushbutton > 0{_eacce +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _ffaa &FieldFlagRadiosInUnision > 0{_eacce +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _ffaa &FieldFlagMultiline > 0{_eacce +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _ffaa &FieldFlagPassword > 0{_eacce +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _ffaa &FieldFlagFileSelect > 0{_eacce +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _ffaa &FieldFlagDoNotScroll > 0{_eacce +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _ffaa &FieldFlagComb > 0{_eacce +="\u007c\u0043\u006fm\u0062";};if _ffaa &FieldFlagRichText > 0{_eacce +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _ffaa &FieldFlagDoNotSpellCheck > 0{_eacce +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _ffaa &FieldFlagCombo > 0{_eacce +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _ffaa &FieldFlagEdit > 0{_eacce +="\u007c\u0045\u0064i\u0074";};if _ffaa &FieldFlagSort > 0{_eacce +="\u007c\u0053\u006fr\u0074";};if _ffaa &FieldFlagMultiSelect > 0{_eacce +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _ffaa &FieldFlagCommitOnSelChange > 0{_eacce +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _bb .Trim (_eacce ,"\u007c");};func _caced (_cafb *_cda .PdfIndirectObject ,_cedf *_cda .PdfObjectDictionary )(*DSS ,error ){if _cafb ==nil {_cafb =_cda .MakeIndirectObject (nil );
};_cafb .PdfObject =_cda .MakeDict ();_fagb :=map[string ]*VRI {};if _afae ,_feff :=_cda .GetDict (_cedf .Get ("\u0056\u0052\u0049"));_feff {for _ ,_gdfa :=range _afae .Keys (){if _aabf ,_bafa :=_cda .GetDict (_afae .Get (_gdfa ));_bafa {_fagb [_bb .ToUpper (_gdfa .String ())]=_cacf (_aabf );
};};};return &DSS {Certs :_edebd (_cedf .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_edebd (_cedf .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_edebd (_cedf .Get ("\u0043\u0052\u004c\u0073")),VRI :_fagb ,_cabgd :_cafb },nil ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_ddabb *PdfField )GetContext ()PdfModel {return _ddabb ._dccg };

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_cda .PdfObjectArray ;Domain *_cda .PdfObjectArray ;Function []PdfFunction ;Extend *_cda .PdfObjectArray ;};func (_dadaa fontCommon )fontFlags ()int {if _dadaa ._bedag ==nil {return 0;};return _dadaa ._bedag ._eebe ;
};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_acec *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// String returns a string representation of the field.
func (_cecd *PdfField )String ()string {if _ggac ,_aafbac :=_cecd .ToPdfObject ().(*_cda .PdfIndirectObject );_aafbac {return _c .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_cecd ._dccg ,_ggac .PdfObject .String ());};return "";};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_bgcb *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _bgcb .AlternateSpace ==nil {return nil ,_ea .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _bgcb .AlternateSpace .ColorToRGB (color );};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_cada *_cda .PdfIndirectObject ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _cda .PdfObject ;Dest _cda .PdfObject ;H _cda .PdfObject ;PA _cda .PdfObject ;QuadPoints _cda .PdfObject ;BS _cda .PdfObject ;_ecf *PdfAction ;_fecf *PdfReader ;};type modelManager struct{_facdc map[PdfModel ]_cda .PdfObject ;
_affb map[_cda .PdfObject ]PdfModel ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_ffece *PdfPageResources )SetShadingByName (keyName _cda .PdfObjectName ,shadingObj _cda .PdfObject )error {if _ffece .Shading ==nil {_ffece .Shading =_cda .MakeDict ();};_caef ,_fgdcf :=_ffece .Shading .(*_cda .PdfObjectDictionary );if !_fgdcf {return _cda .ErrTypeError ;
};_caef .Set (keyName ,shadingObj );return nil ;};func (_efbdg *pdfFontType0 )subsetRegistered ()error {_ggbc ,_fgcae :=_efbdg .DescendantFont ._aecg .(*pdfCIDFontType2 );if !_fgcae {_ae .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_efbdg .DescendantFont );
return nil ;};if _ggbc ==nil {return nil ;};if _ggbc ._bedag ==nil {_ae .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _efbdg ._fbbce ==nil {_ae .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_cgdad ,_fgcae :=_cda .GetStream (_ggbc ._bedag .FontFile2 );if !_fgcae {_ae .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _ea .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_ebed ,_dbfg :=_cda .DecodeStream (_cgdad );if _dbfg !=nil {_ae .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_dbfg );
return _dbfg ;};_ccdd ,_dbfg :=_ad .Parse (_dc .NewReader (_ebed ));if _dbfg !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_cgdad .Stream ));
return _dbfg ;};var _gebg []rune ;var _gface *_ad .Font ;switch _dfaag :=_efbdg ._fbbce .(type ){case *_aef .TrueTypeFontEncoder :_gebg =_dfaag .RegisteredRunes ();_gface ,_dbfg =_ccdd .SubsetKeepRunes (_gebg );if _dbfg !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbfg );
return _dbfg ;};_dfaag .SubsetRegistered ();case *_aef .IdentityEncoder :_gebg =_dfaag .RegisteredRunes ();_fbfg :=make ([]_ad .GlyphIndex ,len (_gebg ));for _bbbab ,_ecdc :=range _gebg {_fbfg [_bbbab ]=_ad .GlyphIndex (_ecdc );};_gface ,_dbfg =_ccdd .SubsetKeepIndices (_fbfg );
if _dbfg !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbfg );return _dbfg ;};case _aef .SimpleEncoder :_beaae :=_dfaag .Charcodes ();for _ ,_ggfeg :=range _beaae {_gcdec ,_fbfdd :=_dfaag .CharcodeToRune (_ggfeg );if !_fbfdd {_ae .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_ggfeg );
continue ;};_gebg =append (_gebg ,_gcdec );};default:return _c .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_efbdg ._fbbce );
};var _fefde _dc .Buffer ;_dbfg =_gface .Write (&_fefde );if _dbfg !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbfg );return _dbfg ;};if _efbdg ._bfdgd !=nil {_bbdg :=make (map[_db .CharCode ]rune ,len (_gebg ));for _ ,_ggcfb :=range _gebg {_fdcd ,_efcdb :=_efbdg ._fbbce .RuneToCharcode (_ggcfb );
if !_efcdb {continue ;};_bbdg [_db .CharCode (_fdcd )]=_ggcfb ;};_efbdg ._bfdgd =_db .NewToUnicodeCMap (_bbdg );};_cgdad ,_dbfg =_cda .MakeStream (_fefde .Bytes (),_cda .NewFlateEncoder ());if _dbfg !=nil {_ae .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbfg );
return _dbfg ;};_cgdad .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cda .MakeInteger (int64 (_fefde .Len ())));if _bfacb ,_ffae :=_cda .GetStream (_ggbc ._bedag .FontFile2 );_ffae {*_bfacb =*_cgdad ;}else {_ggbc ._bedag .FontFile2 =_cgdad ;};_acaee :=_afcac ();
if len (_efbdg ._gedd )> 0{_efbdg ._gedd =_eefc (_efbdg ._gedd ,_acaee );};if len (_ggbc ._gedd )> 0{_ggbc ._gedd =_eefc (_ggbc ._gedd ,_acaee );};if len (_efbdg ._abgeg )> 0{_efbdg ._abgeg =_eefc (_efbdg ._abgeg ,_acaee );};if _ggbc ._bedag !=nil {_geea ,_gcaef :=_cda .GetName (_ggbc ._bedag .FontName );
if _gcaef &&len (_geea .String ())> 0{_ceeg :=_eefc (_geea .String (),_acaee );_ggbc ._bedag .FontName =_cda .MakeName (_ceeg );};};return nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gafab *PdfShadingType7 )ToPdfObject ()_cda .PdfObject {_gafab .PdfShading .ToPdfObject ();_aeag ,_gfdf :=_gafab .getShadingDict ();if _gfdf !=nil {_ae .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gafab .BitsPerCoordinate !=nil {_aeag .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gafab .BitsPerCoordinate );};if _gafab .BitsPerComponent !=nil {_aeag .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gafab .BitsPerComponent );
};if _gafab .BitsPerFlag !=nil {_aeag .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gafab .BitsPerFlag );};if _gafab .Decode !=nil {_aeag .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gafab .Decode );};if _gafab .Function !=nil {if len (_gafab .Function )==1{_aeag .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gafab .Function [0].ToPdfObject ());
}else {_abedg :=_cda .MakeArray ();for _ ,_agaacg :=range _gafab .Function {_abedg .Append (_agaacg .ToPdfObject ());};_aeag .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_abedg );};};return _gafab ._bfddc ;};

// ToInteger convert to an integer format.
func (_bbfg *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_deeb :=_ba .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_deeb *_bbfg .A ()),uint32 (_deeb *_bbfg .B ()),uint32 (_deeb *_bbfg .C ())};};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _cda .PdfObject )(*PdfFont ,error ){return _fcacf (fontObj ,true )};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_dbbb :=&PdfColorspaceCalGray {};_dbbb .BlackPoint =[]float64 {0.0,0.0,0.0};_dbbb .Gamma =1;return _dbbb ;};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_eeag *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddec :=vals [0];if _ddec < 0.0||_ddec > 1.0{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_gecdb :=NewPdfColorCalGray (_ddec );return _gecdb ,nil ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _cda .PdfObject ;};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_fbg *PdfAction )GetContext ()PdfModel {if _fbg ==nil {return nil ;};return _fbg ._gd ;};

// ToInteger convert to an integer format.
func (_cbac *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_bffc :=_ba .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_bffc *_cbac .R ()),uint32 (_bffc *_cbac .G ()),uint32 (_bffc *_cbac .B ())};};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _cda .PdfObject ;PreserveRB _cda .PdfObject ;};

// GetOptimizer returns current PDF optimizer.
func (_ccabf *PdfWriter )GetOptimizer ()Optimizer {return _ccabf ._bdcf };func (_efaaf *pdfCIDFontType0 )baseFields ()*fontCommon {return &_efaaf .fontCommon };

// GetCharMetrics returns the char metrics for character code `code`.
func (_cfag pdfCIDFontType2 )GetCharMetrics (code _aef .CharCode )(_fd .CharMetrics ,bool ){if _fefe ,_bfdce :=_cfag ._geag [code ];_bfdce {return _fd .CharMetrics {Wx :_fefe },true ;};_beafg :=rune (code );_cbabf ,_dffcg :=_cfag ._abed [_beafg ];if !_dffcg {_cbabf =int (_cfag ._cfde );
};return _fd .CharMetrics {Wx :float64 (_cbabf )},true ;};

// ToPdfObject implements interface PdfModel.
func (_gee *PdfActionGoTo )ToPdfObject ()_cda .PdfObject {_gee .PdfAction .ToPdfObject ();_fa :=_gee ._dcg ;_af :=_fa .PdfObject .(*_cda .PdfObjectDictionary );_af .SetIfNotNil ("\u0053",_cda .MakeName (string (ActionTypeGoTo )));_af .SetIfNotNil ("\u0044",_gee .D );
return _fa ;};var _ pdfFont =(*pdfFontType3 )(nil );

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_cbg :=NewPdfAnnotation ();_eaea :=&PdfAnnotationStrikeOut {};_eaea .PdfAnnotation =_cbg ;_eaea .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cbg .SetContext (_eaea );return _eaea ;};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_befd *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_gfdbcf :=_bed .NewReader (img .getBase ());_gddc :=_eee .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_befd .AlternateSpace .GetNumComponents (),nil ,img ._eeeg ,nil );
_afccb :=_bed .NewWriter (_gddc );_abdg :=_ba .Pow (2,float64 (img .BitsPerComponent ))-1;_ae .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_ae .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_befd .TintTransform );_acefd :=_befd .AlternateSpace .DecodeArray ();var (_efca uint32 ;_bbbfba error ;);for {_efca ,_bbbfba =_gfdbcf .ReadSample ();
if _bbbfba ==_cd .EOF {break ;};if _bbbfba !=nil {return img ,_bbbfba ;};_gegb :=float64 (_efca )/_abdg ;_ggad ,_cabgf :=_befd .TintTransform .Evaluate ([]float64 {_gegb });if _cabgf !=nil {return img ,_cabgf ;};for _aacb ,_abdae :=range _ggad {_dfdc :=_eee .LinearInterpolate (_abdae ,_acefd [_aacb *2],_acefd [_aacb *2+1],0,1);
if _cabgf =_afccb .WriteSample (uint32 (_dfdc *_abdg ));_cabgf !=nil {return img ,_cabgf ;};};};return _befd .AlternateSpace .ImageToRGB (_fdaad (&_gddc ));};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_eeedg *modelManager )GetPrimitiveFromModel (model PdfModel )_cda .PdfObject {_fgbee ,_bgeeb :=_eeedg ._facdc [model ];if !_bgeeb {return nil ;};return _fgbee ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_fbbcef *pdfCIDFontType0 )ToPdfObject ()_cda .PdfObject {return _cda .MakeNull ()};func _gedf (_afag *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_afag }};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_bbgff *Image )Resample (targetBitsPerComponent int64 ){if _bbgff .BitsPerComponent ==targetBitsPerComponent {return ;};_beea :=_bbgff .GetSamples ();if targetBitsPerComponent < _bbgff .BitsPerComponent {_egggd :=_bbgff .BitsPerComponent -targetBitsPerComponent ;
for _bdab :=range _beea {_beea [_bdab ]>>=uint (_egggd );};}else if targetBitsPerComponent > _bbgff .BitsPerComponent {_dede :=targetBitsPerComponent -_bbgff .BitsPerComponent ;for _agbdd :=range _beea {_beea [_agbdd ]<<=uint (_dede );};};_bbgff .BitsPerComponent =targetBitsPerComponent ;
if _bbgff .BitsPerComponent < 8{_bbgff .resampleLowBits (_beea );return ;};_fdee :=_eee .BytesPerLine (int (_bbgff .Width ),int (_bbgff .BitsPerComponent ),_bbgff .ColorComponents );_fgfcc :=make ([]byte ,_fdee *int (_bbgff .Height ));var (_dffg ,_dedaa ,_gddg ,_accf int ;
_egegcb uint32 ;);for _gddg =0;_gddg < int (_bbgff .Height );_gddg ++{_dffg =_gddg *_fdee ;_dedaa =(_gddg +1)*_fdee -1;_fagf :=_bed .ResampleUint32 (_beea [_dffg :_dedaa ],int (targetBitsPerComponent ),8);for _accf ,_egegcb =range _fagf {_fgfcc [_accf +_dffg ]=byte (_egegcb );
};};_bbgff .Data =_fgfcc ;};func _deada (_debd _cda .PdfObject )(map[_aef .CharCode ]float64 ,error ){if _debd ==nil {return nil ,nil ;};_fdade ,_ceeaf :=_cda .GetArray (_debd );if !_ceeaf {return nil ,nil ;};_dggf :=map[_aef .CharCode ]float64 {};_cdcbb :=_fdade .Len ();
for _aeec :=0;_aeec < _cdcbb -1;_aeec ++{_fbda :=_cda .TraceToDirectObject (_fdade .Get (_aeec ));_bead ,_ddeda :=_cda .GetIntVal (_fbda );if !_ddeda {return nil ,_c .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_aeec ,_fbda );
};_aeec ++;if _aeec > _cdcbb -1{return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_fdade );};_bagd :=_cda .TraceToDirectObject (_fdade .Get (_aeec ));
switch _bagd .(type ){case *_cda .PdfObjectArray :_ebcde ,_ :=_cda .GetArray (_bagd );if _feegf ,_afffc :=_ebcde .ToFloat64Array ();_afffc ==nil {for _ccffe :=0;_ccffe < len (_feegf );_ccffe ++{_dggf [_aef .CharCode (_bead +_ccffe )]=_feegf [_ccffe ];};
}else {return nil ,_c .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_aeec ,_bagd );};case *_cda .PdfObjectInteger :_bbfe ,_acagb :=_cda .GetIntVal (_bagd );
if !_acagb {return nil ,_c .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_aeec ,_bagd );};_aeec ++;if _aeec > _cdcbb -1{return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_fdade );
};_aebb :=_fdade .Get (_aeec );_cccc ,_ccbgc :=_cda .GetNumberAsFloat (_aebb );if _ccbgc !=nil {return nil ,_c .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_aeec ,_aebb );
};for _beagc :=_bead ;_beagc <=_bbfe ;_beagc ++{_dggf [_aef .CharCode (_beagc )]=_cccc ;};default:return nil ,_c .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_aeec ,_bagd );
};};return _dggf ,nil ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_gcbf *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_gfca :=func (_gefeg float64 )float64 {if _gefeg >=6.0/29{return _gefeg *_gefeg *_gefeg ;};return 108.0/841*(_gefeg -4/29);};_facb ,_dbee :=color .(*PdfColorLab );if !_dbee {_ae .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_ea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_facb .L ();AStar :=_facb .A ();BStar :=_facb .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_gcbf .WhitePoint [0]*_gfca (L );Y :=_gcbf .WhitePoint [1]*_gfca (M );Z :=_gcbf .WhitePoint [2]*_gfca (N );_cabe :=3.240479*X +-1.537150*Y +-0.498535*Z ;_afbb :=-0.969256*X +1.875992*Y +0.041556*Z ;_gccc :=0.055648*X +-0.204043*Y +1.057311*Z ;_cabe =_ba .Min (_ba .Max (_cabe ,0),1.0);
_afbb =_ba .Min (_ba .Max (_afbb ,0),1.0);_gccc =_ba .Min (_ba .Max (_gccc ,0),1.0);return NewPdfColorDeviceRGB (_cabe ,_afbb ,_gccc ),nil ;};func (_fdg *PdfReader )newPdfAnnotationSoundFromDict (_fbea *_cda .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_gcaf :=PdfAnnotationSound {};
_cceb ,_ddg :=_fdg .newPdfAnnotationMarkupFromDict (_fbea );if _ddg !=nil {return nil ,_ddg ;};_gcaf .PdfAnnotationMarkup =_cceb ;_gcaf .Name =_fbea .Get ("\u004e\u0061\u006d\u0065");_gcaf .Sound =_fbea .Get ("\u0053\u006f\u0075n\u0064");return &_gcaf ,nil ;
};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_eddc *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_cda .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_ea .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_agafb :=&PdfColorPattern {};_baafe ,_bbbac :=objects [len (objects )-1].(*_cda .PdfObjectName );if !_bbbac {_ae .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_agafb .PatternName =*_baafe ;if len (objects )> 1{_ccefa :=objects [0:len (objects )-1];if _eddc .UnderlyingCS ==nil {_ae .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_ea .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_bgeba ,_deaa :=_eddc .UnderlyingCS .ColorFromPdfObjects (_ccefa );if _deaa !=nil {_ae .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_deaa );
return nil ,_deaa ;};_agafb .Color =_bgeba ;};return _agafb ,nil ;};func _abffe ()string {_aafcc .Lock ();defer _aafcc .Unlock ();return _cabag };func _gbcg (_agaac *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_agaac }};type pdfCIDFontType2 struct{fontCommon ;
_bfdcf *_cda .PdfIndirectObject ;_dbbc _aef .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_cda .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _cda .PdfObject ;W _cda .PdfObject ;DW2 _cda .PdfObject ;W2 _cda .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _cda .PdfObject ;_geag map[_aef .CharCode ]float64 ;_cfde float64 ;_abed map[rune ]int ;};

// SetContentStream sets the pattern cell's content stream.
func (_ebdfec *PdfTilingPattern )SetContentStream (content []byte ,encoder _cda .StreamEncoder )error {_acaa ,_fgea :=_ebdfec ._eaedcg .(*_cda .PdfObjectStream );if !_fgea {_ae .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ebdfec ._eaedcg );
return _cda .ErrTypeError ;};if encoder ==nil {encoder =_cda .NewRawEncoder ();};_acafe :=_acaa .PdfObjectDictionary ;_fcggb :=encoder .MakeStreamDict ();_acafe .Merge (_fcggb );_gfea ,_bcce :=encoder .EncodeBytes (content );if _bcce !=nil {return _bcce ;
};_acafe .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cda .MakeInteger (int64 (len (_gfea ))));_acaa .Stream =_gfea ;return nil ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_gaf *PdfAnnotationWidget )Field ()*PdfField {return _gaf ._cba };var _ pdfFont =(*pdfCIDFontType0 )(nil );var (CourierName =_fd .CourierName ;CourierBoldName =_fd .CourierBoldName ;CourierObliqueName =_fd .CourierObliqueName ;CourierBoldObliqueName =_fd .CourierBoldObliqueName ;
HelveticaName =_fd .HelveticaName ;HelveticaBoldName =_fd .HelveticaBoldName ;HelveticaObliqueName =_fd .HelveticaObliqueName ;HelveticaBoldObliqueName =_fd .HelveticaBoldObliqueName ;SymbolName =_fd .SymbolName ;ZapfDingbatsName =_fd .ZapfDingbatsName ;
TimesRomanName =_fd .TimesRomanName ;TimesBoldName =_fd .TimesBoldName ;TimesItalicName =_fd .TimesItalicName ;TimesBoldItalicName =_fd .TimesBoldItalicName ;);func _gfabe ()_be .Time {_aafcc .Lock ();defer _aafcc .Unlock ();return _ddffe };func (_fbacg *DSS )addCerts (_gfcbb [][]byte )([]*_cda .PdfObjectStream ,error ){return _fbacg .add (&_fbacg .Certs ,_fbacg ._abad ,_gfcbb );
};

// HasXObjectByName checks if has XObject resource by name.
func (_fbgceb *PdfPage )HasXObjectByName (name _cda .PdfObjectName )bool {_efddd ,_aedgg :=_fbgceb .Resources .XObject .(*_cda .PdfObjectDictionary );if !_aedgg {return false ;};if _aace :=_efddd .Get (name );_aace !=nil {return true ;};return false ;};


// ToPdfObject converts the font to a PDF representation.
func (_bgfb *pdfFontType3 )ToPdfObject ()_cda .PdfObject {if _bgfb ._eedg ==nil {_bgfb ._eedg =&_cda .PdfIndirectObject {};};_fdgb :=_bgfb .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_bgfb ._eedg .PdfObject =_fdgb ;if _bgfb .FirstChar !=nil {_fdgb .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_bgfb .FirstChar );
};if _bgfb .LastChar !=nil {_fdgb .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_bgfb .LastChar );};if _bgfb .Widths !=nil {_fdgb .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_bgfb .Widths );};if _bgfb .Encoding !=nil {_fdgb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bgfb .Encoding );
}else if _bgfb ._bdgf !=nil {_dadga :=_bgfb ._bdgf .ToPdfObject ();if _dadga !=nil {_fdgb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dadga );};};if _bgfb .FontBBox !=nil {_fdgb .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_bgfb .FontBBox );
};if _bgfb .FontMatrix !=nil {_fdgb .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_bgfb .FontMatrix );};if _bgfb .CharProcs !=nil {_fdgb .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_bgfb .CharProcs );};if _bgfb .Resources !=nil {_fdgb .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_bgfb .Resources );
};return _bgfb ._eedg ;};

// SetName sets the `Name` field of the signature.
func (_dbgag *PdfSignature )SetName (name string ){_dbgag .Name =_cda .MakeString (name )};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_cda .PdfObjectName ;Colorants _cda .PdfObject ;Process _cda .PdfObject ;MixingHints _cda .PdfObject ;_gadb *_cda .PdfIndirectObject ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_bcdbe :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_bcdbe .N =N ;return _bcdbe ,nil ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_ccad *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// String returns a human readable description of `fontfile`.
func (_eegg *fontFile )String ()string {_egdee :="\u005b\u004e\u006f\u006e\u0065\u005d";if _eegg ._ggff !=nil {_egdee =_eegg ._ggff .String ();};return _c .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_eegg ._bafcg ,_egdee );
};func _eefc (_dbggg ,_fbedc string )string {if _bb .Contains (_dbggg ,"\u002b"){_dgaf :=_bb .Split (_dbggg ,"\u002b");if len (_dgaf )==2{_dbggg =_dgaf [1];};};return _fbedc +"\u002b"+_dbggg ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_daeg *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_beca :=_bed .NewReader (img .getBase ());_fdba :=_eee .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_edbc :=_bed .NewWriter (_fdba );
_gbdb :=_ba .Pow (2,float64 (img .BitsPerComponent ))-1;_efbe :=make ([]uint32 ,3);var (_dggd uint32 ;ANorm ,X ,Y ,Z ,_daca ,_gcc ,_ceef float64 ;_cdba error ;);for {_dggd ,_cdba =_beca .ReadSample ();if _cdba ==_cd .EOF {break ;}else if _cdba !=nil {return img ,_cdba ;
};ANorm =float64 (_dggd )/_gbdb ;X =_daeg .WhitePoint [0]*_ba .Pow (ANorm ,_daeg .Gamma );Y =_daeg .WhitePoint [1]*_ba .Pow (ANorm ,_daeg .Gamma );Z =_daeg .WhitePoint [2]*_ba .Pow (ANorm ,_daeg .Gamma );_daca =3.240479*X +-1.537150*Y +-0.498535*Z ;_gcc =-0.969256*X +1.875992*Y +0.041556*Z ;
_ceef =0.055648*X +-0.204043*Y +1.057311*Z ;_daca =_ba .Min (_ba .Max (_daca ,0),1.0);_gcc =_ba .Min (_ba .Max (_gcc ,0),1.0);_ceef =_ba .Min (_ba .Max (_ceef ,0),1.0);_efbe [0]=uint32 (_daca *_gbdb );_efbe [1]=uint32 (_gcc *_gbdb );_efbe [2]=uint32 (_ceef *_gbdb );
if _cdba =_edbc .WriteSamples (_efbe );_cdba !=nil {return img ,_cdba ;};};return _fdaad (&_fdba ),nil ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_cda .PdfObjectInteger ;BitsPerComponent *_cda .PdfObjectInteger ;BitsPerFlag *_cda .PdfObjectInteger ;Decode *_cda .PdfObjectArray ;Function []PdfFunction ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_adefd *PdfReader )IsEncrypted ()(bool ,error ){return _adefd ._gaedg .IsEncrypted ()};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_dbfge *PdfPage )Size ()(float64 ,float64 ,error ){_cdgcc ,_ecbcb :=_dbfge .GetMediaBox ();if _ecbcb !=nil {return 0,0,_ecbcb ;};_cbdfa ,_aegdeb :=_cdgcc .Width (),_cdgcc .Height ();if _fbfeg :=_dbfge .Rotate ;_fbfeg !=nil &&*_fbfeg %360!=0&&*_fbfeg %90==0{if _fbgcc :=(360+*_fbfeg %360)%360;
_fbgcc ==90||_fbgcc ==270{_cbdfa ,_aegdeb =_aegdeb ,_cbdfa ;};};return _cbdfa ,_aegdeb ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_aacg *PdfColorspaceDeviceRGB )ToPdfObject ()_cda .PdfObject {return _cda .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_fgfb *PdfPattern )SetContext (ctx PdfModel ){_fgfb ._edbec =ctx };

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_gdf :=NewPdfAction ();_gca :=&PdfActionImportData {};_gca .PdfAction =_gdf ;_gdf .SetContext (_gca );return _gca ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_fccc *Outline )Insert (index uint ,item *OutlineItem ){_aaafc :=uint (len (_fccc .Entries ));if index > _aaafc {index =_aaafc ;};_fccc .Entries =append (_fccc .Entries [:index ],append ([]*OutlineItem {item },_fccc .Entries [index :]...)...);};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_edf :=NewPdfAnnotation ();_fae :=&PdfAnnotationWidget {};_fae .PdfAnnotation =_edf ;_edf .SetContext (_fae );return _fae ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_feag pdfCIDFontType0 )GetCharMetrics (code _aef .CharCode )(_fd .CharMetrics ,bool ){_dafef :=_feag ._bafac ;if _aefdd ,_eaffd :=_feag ._edcf [code ];_eaffd {_dafef =_aefdd ;};return _fd .CharMetrics {Wx :_dafef },true ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_dfacg FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_dfacg .Mask ()&^fl .Mask ())};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_gfcdf *PdfFont )CharcodesToUnicode (charcodes []_aef .CharCode )[]rune {_bbcc ,_ ,_ :=_gfcdf .CharcodesToUnicodeWithStats (charcodes );return _bbcc ;};

// Height returns the height of `rect`.
func (_abdcc *PdfRectangle )Height ()float64 {return _ba .Abs (_abdcc .Ury -_abdcc .Lly )};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_geab :_cda .MakeIndirectObject (_cda .MakeDict ())}};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_ffggc *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_ea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_bffeg *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fdga :=vals [0];if _fdga < 0.0||_fdga > 1.0{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_fgdd :=vals [1];if _fgdd < 0.0||_fgdd > 1.0{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_baec :=vals [2];if _baec < 0.0||_baec > 1.0{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_dfcda :=NewPdfColorDeviceRGB (_fdga ,_fgdd ,_baec );return _dfcda ,nil ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_fbd .PSProgram ;_babfg *_fbd .PSExecutor ;_bfgcd []byte ;_cfbb *_cda .PdfObjectStream ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_edage *PdfPattern )IsTiling ()bool {return _edage .PatternType ==1};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_fbbg *_cda .PdfIndirectObject ;};

// HasFontByName checks if has font resource by name.
func (_gfebf *PdfPage )HasFontByName (name _cda .PdfObjectName )bool {_fecbb ,_dbbcd :=_gfebf .Resources .Font .(*_cda .PdfObjectDictionary );if !_dbbcd {return false ;};if _cdca :=_fecbb .Get (name );_cdca !=nil {return true ;};return false ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_gegge *PdfPageResources )AddExtGState (gsName _cda .PdfObjectName ,gsDict _cda .PdfObject )error {if _gegge .ExtGState ==nil {_gegge .ExtGState =_cda .MakeDict ();};_dgebe :=_gegge .ExtGState ;_ggbgg ,_dabaf :=_cda .TraceToDirectObject (_dgebe ).(*_cda .PdfObjectDictionary );
if !_dabaf {_ae .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_dgebe ,_cda .TraceToDirectObject (_dgebe ));
return _cda .ErrTypeError ;};_ggbgg .Set (gsName ,gsDict );return nil ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_ceec ,_affg :=_fd .NewStdFontByName (HelveticaName );if !_affg {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_dbeb :=_cgaee (_ceec );return &PdfFont {_aecg :&_dbeb };};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_cbbc *modelManager )GetModelFromPrimitive (primitive _cda .PdfObject )PdfModel {model ,_abeac :=_cbbc ._affb [primitive ];if !_abeac {return nil ;};return model ;};func (_ebfbg *PdfReader )newPdfAnnotationPrinterMarkFromDict (_dabf *_cda .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_ggf :=PdfAnnotationPrinterMark {};
_ggf .MN =_dabf .Get ("\u004d\u004e");return &_ggf ,nil ;};func (_egcea *pdfFontSimple )updateStandard14Font (){_ffefg ,_badg :=_egcea .Encoder ().(_aef .SimpleEncoder );if !_badg {_ae .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_egcea .Encoder (),_egcea );
return ;};_befa :=_ffefg .Charcodes ();_egcea ._fbgce =make (map[_aef .CharCode ]float64 ,len (_befa ));for _ ,_fadd :=range _befa {_adbba ,_ :=_ffefg .CharcodeToRune (_fadd );_babeb ,_ :=_egcea ._aefg .Read (_adbba );_egcea ._fbgce [_fadd ]=_babeb .Wx ;
};};

// ToPdfObject implements interface PdfModel.
func (_edd *PdfAnnotationTrapNet )ToPdfObject ()_cda .PdfObject {_edd .PdfAnnotation .ToPdfObject ();_cace :=_edd ._afd ;_bebg :=_cace .PdfObject .(*_cda .PdfObjectDictionary );_bebg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _cace ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_ebcc *PdfColorspaceLab )ToPdfObject ()_cda .PdfObject {_bgdfg :=_cda .MakeArray ();_bgdfg .Append (_cda .MakeName ("\u004c\u0061\u0062"));_bdea :=_cda .MakeDict ();if _ebcc .WhitePoint !=nil {_dcddc :=_cda .MakeArray (_cda .MakeFloat (_ebcc .WhitePoint [0]),_cda .MakeFloat (_ebcc .WhitePoint [1]),_cda .MakeFloat (_ebcc .WhitePoint [2]));
_bdea .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_dcddc );}else {_ae .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _ebcc .BlackPoint !=nil {_aebe :=_cda .MakeArray (_cda .MakeFloat (_ebcc .BlackPoint [0]),_cda .MakeFloat (_ebcc .BlackPoint [1]),_cda .MakeFloat (_ebcc .BlackPoint [2]));_bdea .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_aebe );
};if _ebcc .Range !=nil {_cbca :=_cda .MakeArray (_cda .MakeFloat (_ebcc .Range [0]),_cda .MakeFloat (_ebcc .Range [1]),_cda .MakeFloat (_ebcc .Range [2]),_cda .MakeFloat (_ebcc .Range [3]));_bdea .Set ("\u0052\u0061\u006eg\u0065",_cbca );};_bgdfg .Append (_bdea );
if _ebcc ._eafff !=nil {_ebcc ._eafff .PdfObject =_bgdfg ;return _ebcc ._eafff ;};return _bgdfg ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_ffgd *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _ffgd .RunesToCharcodeBytes ([]rune (str ));};func (_acbcb *PdfPage )setContainer (_dabbb *_cda .PdfIndirectObject ){_dabbb .PdfObject =_acbcb ._edefc ;_acbcb ._bcadb =_dabbb ;
};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _cda .PdfObject ;BS _cda .PdfObject ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_addb *PdfPattern )GetContainingPdfObject ()_cda .PdfObject {return _addb ._eaedcg };

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _cda .PdfObject ;Mac _cda .PdfObject ;Unix _cda .PdfObject ;NewWindow _cda .PdfObject ;};func (_ebdg *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};func (_dbac *PdfReader )newPdfAnnotationFileAttachmentFromDict (_cdc *_cda .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_bffe :=PdfAnnotationFileAttachment {};_abbf ,_ffdc :=_dbac .newPdfAnnotationMarkupFromDict (_cdc );if _ffdc !=nil {return nil ,_ffdc ;
};_bffe .PdfAnnotationMarkup =_abbf ;_bffe .FS =_cdc .Get ("\u0046\u0053");_bffe .Name =_cdc .Get ("\u004e\u0061\u006d\u0065");return &_bffe ,nil ;};func (_edfe *PdfReader )newPdfAnnotationTrapNetFromDict (_cecc *_cda .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_ecff :=PdfAnnotationTrapNet {};
return &_ecff ,nil ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_fgffe *PdfPattern )GetContext ()PdfModel {return _fgffe ._edbec };func (_eefa *PdfReader )newPdfAnnotationRedactFromDict (_cbgg *_cda .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_gfcb :=PdfAnnotationRedact {};_cfeg ,_dee :=_eefa .newPdfAnnotationMarkupFromDict (_cbgg );
if _dee !=nil {return nil ,_dee ;};_gfcb .PdfAnnotationMarkup =_cfeg ;_gfcb .QuadPoints =_cbgg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_gfcb .IC =_cbgg .Get ("\u0049\u0043");_gfcb .RO =_cbgg .Get ("\u0052\u004f");_gfcb .OverlayText =_cbgg .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_gfcb .Repeat =_cbgg .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_gfcb .DA =_cbgg .Get ("\u0044\u0041");_gfcb .Q =_cbgg .Get ("\u0051");return &_gfcb ,nil ;};func _febbgc ()*modelManager {_ggdbd :=modelManager {};_ggdbd ._facdc =map[PdfModel ]_cda .PdfObject {};
_ggdbd ._affb =map[_cda .PdfObject ]PdfModel {};return &_ggdbd ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_afebc *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abfeb :=vals [0];if _abfeb < 0.0||_abfeb > 100.0{_ae .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_abfeb );
return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcfec :=vals [1];_febce :=float64 (-100);_agfg :=float64 (100);if len (_afebc .Range )> 1{_febce =_afebc .Range [0];_agfg =_afebc .Range [1];};if _fcfec < _febce ||_fcfec > _agfg {_ae .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_fcfec ,_febce ,_agfg );
return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_feae :=vals [2];_dgedb :=float64 (-100);_abab :=float64 (100);if len (_afebc .Range )> 3{_dgedb =_afebc .Range [2];_abab =_afebc .Range [3];};if _feae < _dgedb ||_feae > _abab {_ae .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_feae ,_dgedb ,_abab );
return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_affa :=NewPdfColorLab (_abfeb ,_fcfec ,_feae );return _affa ,nil ;};var _fafb =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};
func (_fagg *LTV )getCerts (_fbae []*_ff .Certificate )([][]byte ,error ){_dbfed :=make ([][]byte ,0,len (_fbae ));for _ ,_afbbb :=range _fbae {_dbfed =append (_dbfed ,_afbbb .Raw );};return _dbfed ,nil ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_egbe *PdfOutlineTreeNode )GetContainingPdfObject ()_cda .PdfObject {return _egbe .GetContext ().GetContainingPdfObject ();};func (_gfcbd *PdfAnnotationMarkup )appendToPdfDictionary (_cee *_cda .PdfObjectDictionary ){_cee .SetIfNotNil ("\u0054",_gfcbd .T );
if _gfcbd .Popup !=nil {_cee .Set ("\u0050\u006f\u0070u\u0070",_gfcbd .Popup .ToPdfObject ());};_cee .SetIfNotNil ("\u0043\u0041",_gfcbd .CA );_cee .SetIfNotNil ("\u0052\u0043",_gfcbd .RC );_cee .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_gfcbd .CreationDate );
_cee .SetIfNotNil ("\u0049\u0052\u0054",_gfcbd .IRT );_cee .SetIfNotNil ("\u0053\u0075\u0062\u006a",_gfcbd .Subj );_cee .SetIfNotNil ("\u0052\u0054",_gfcbd .RT );_cee .SetIfNotNil ("\u0049\u0054",_gfcbd .IT );_cee .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_gfcbd .ExData );
};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_ffba :=NewPdfAnnotation ();_cbb :=&PdfAnnotationProjection {};_cbb .PdfAnnotation =_ffba ;_cbb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffba .SetContext (_cbb );return _cbb ;};func (_bbef *PdfReader )newPdfAnnotationHighlightFromDict (_gbfd *_cda .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_agb :=PdfAnnotationHighlight {};
_fbef ,_cddg :=_bbef .newPdfAnnotationMarkupFromDict (_gbfd );if _cddg !=nil {return nil ,_cddg ;};_agb .PdfAnnotationMarkup =_fbef ;_agb .QuadPoints =_gbfd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_agb ,nil ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _cda .PdfObject )(*PdfFilespec ,error ){_dcfd :=&PdfFilespec {};var _caac *_cda .PdfObjectDictionary ;if _gfcaa ,_dcae :=_cda .GetIndirect (obj );_dcae {_dcfd ._gfcf =_gfcaa ;_dgceb ,_ccbg :=_cda .GetDict (_gfcaa .PdfObject );
if !_ccbg {_ae .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_cda .ErrTypeError ;};_caac =_dgceb ;}else if _fafab ,_gedac :=_cda .GetDict (obj );
_gedac {_dcfd ._gfcf =_fafab ;_caac =_fafab ;}else {_ae .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_cda .ErrTypeError ;};if _caac ==nil {_ae .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_ea .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _ffede :=_caac .Get ("\u0054\u0079\u0070\u0065");_ffede !=nil {_dbbgd ,_agdcc :=_ffede .(*_cda .PdfObjectName );if !_agdcc {_ae .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ffede );
}else {if *_dbbgd !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_ae .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_dbbgd );
};};};if _feed :=_caac .Get ("\u0046\u0053");_feed !=nil {_dcfd .FS =_feed ;};if _bbacd :=_caac .Get ("\u0046");_bbacd !=nil {_dcfd .F =_bbacd ;};if _dddb :=_caac .Get ("\u0055\u0046");_dddb !=nil {_dcfd .UF =_dddb ;};if _dbbdb :=_caac .Get ("\u0044\u004f\u0053");
_dbbdb !=nil {_dcfd .DOS =_dbbdb ;};if _eedc :=_caac .Get ("\u004d\u0061\u0063");_eedc !=nil {_dcfd .Mac =_eedc ;};if _fefge :=_caac .Get ("\u0055\u006e\u0069\u0078");_fefge !=nil {_dcfd .Unix =_fefge ;};if _bgdg :=_caac .Get ("\u0049\u0044");_bgdg !=nil {_dcfd .ID =_bgdg ;
};if _geeg :=_caac .Get ("\u0056");_geeg !=nil {_dcfd .V =_geeg ;};if _cdcg :=_caac .Get ("\u0045\u0046");_cdcg !=nil {_dcfd .EF =_cdcg ;};if _gccf :=_caac .Get ("\u0052\u0046");_gccf !=nil {_dcfd .RF =_gccf ;};if _caed :=_caac .Get ("\u0044\u0065\u0073\u0063");
_caed !=nil {_dcfd .Desc =_caed ;};if _dgae :=_caac .Get ("\u0043\u0049");_dgae !=nil {_dcfd .CI =_dgae ;};return _dcfd ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_gabdd *PdfAnnotation )GetContainingPdfObject ()_cda .PdfObject {return _gabdd ._afd };

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_egb :=NewPdfAnnotation ();_gbg :=&PdfAnnotationTrapNet {};_gbg .PdfAnnotation =_egb ;_egb .SetContext (_gbg );return _gbg ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_cda .PdfObject ;GetContainingPdfObject ()_cda .PdfObject ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_ffdbc *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _abceg []_aef .TextEncoder ;var _eaab _aef .CMapEncoder ;if _bbgfg :=_ffdbc .baseFields ()._bfdgd ;_bbgfg !=nil {_eaab =_aef .NewCMapEncoder ("",nil ,_bbgfg );};_gdgca :=_ffdbc .Encoder ();
if _gdgca !=nil {switch _dbdd :=_gdgca .(type ){case _aef .SimpleEncoder :_bgad :=_dbdd .BaseName ();if _ ,_agbd :=_eaeac [_bgad ];_agbd {_abceg =append (_abceg ,_gdgca );};};};if len (_abceg )==0{if _ffdbc .baseFields ()._bfdgd !=nil {_abceg =append (_abceg ,_eaab );
};if _gdgca !=nil {_abceg =append (_abceg ,_gdgca );};};var _gccfd _dc .Buffer ;var _dagdf int ;for _ ,_daea :=range data {var _dbeg bool ;for _ ,_cgeb :=range _abceg {if _gccb :=_cgeb .Encode (string (_daea ));len (_gccb )> 0{_gccfd .Write (_gccb );_dbeg =true ;
break ;};};if !_dbeg {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_daea );
_dagdf ++;};};if _dagdf !=0{_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_dagdf ,_ffdbc ,_abceg );
};return _gccfd .Bytes (),_dagdf ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// ColorToRGB converts a CalGray color to an RGB color.
func (_gdda *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_edc ,_affe :=color .(*PdfColorCalGray );if !_affe {_ae .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_ea .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_edc .Val ();X :=_gdda .WhitePoint [0]*_ba .Pow (ANorm ,_gdda .Gamma );Y :=_gdda .WhitePoint [1]*_ba .Pow (ANorm ,_gdda .Gamma );Z :=_gdda .WhitePoint [2]*_ba .Pow (ANorm ,_gdda .Gamma );
_ddgg :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dacdb :=-0.969256*X +1.875992*Y +0.041556*Z ;_gadeg :=0.055648*X +-0.204043*Y +1.057311*Z ;_ddgg =_ba .Min (_ba .Max (_ddgg ,0),1.0);_dacdb =_ba .Min (_ba .Max (_dacdb ,0),1.0);_gadeg =_ba .Min (_ba .Max (_gadeg ,0),1.0);
return NewPdfColorDeviceRGB (_ddgg ,_dacdb ,_gadeg ),nil ;};func _fegbb (_beaaa *_cda .PdfObjectStream )(*PdfFunctionType4 ,error ){_bbgg :=&PdfFunctionType4 {};_bbgg ._cfbb =_beaaa ;_bggec :=_beaaa .PdfObjectDictionary ;_gabgc ,_bebeb :=_cda .TraceToDirectObject (_bggec .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_cda .PdfObjectArray );
if !_bebeb {_ae .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ea .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _gabgc .Len ()%2!=0{_ae .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ea .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_gfacea ,_bgcag :=_gabgc .ToFloat64Array ();
if _bgcag !=nil {return nil ,_bgcag ;};_bbgg .Domain =_gfacea ;_gabgc ,_bebeb =_cda .TraceToDirectObject (_bggec .Get ("\u0052\u0061\u006eg\u0065")).(*_cda .PdfObjectArray );if _bebeb {if _gabgc .Len ()< 0||_gabgc .Len ()%2!=0{return nil ,_ea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_ceaag ,_daegd :=_gabgc .ToFloat64Array ();if _daegd !=nil {return nil ,_daegd ;};_bbgg .Range =_ceaag ;};_cfgae ,_bgcag :=_cda .DecodeStream (_beaaa );if _bgcag !=nil {return nil ,_bgcag ;};_bbgg ._bfgcd =_cfgae ;_cfbeb :=_fbd .NewPSParser (_cfgae );
_cgcg ,_bgcag :=_cfbeb .Parse ();if _bgcag !=nil {return nil ,_bgcag ;};_bbgg .Program =_cgcg ;return _bbgg ,nil ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_gcad *PdfPage )GetContainingPdfObject ()_cda .PdfObject {return _gcad ._bcadb };

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_aa :=NewPdfAction ();_gf :=&PdfActionURI {};_gf .PdfAction =_aa ;_aa .SetContext (_gf );return _gf ;};

// ToPdfObject implements interface PdfModel.
func (_dbdf *PdfAnnotationSquiggly )ToPdfObject ()_cda .PdfObject {_dbdf .PdfAnnotation .ToPdfObject ();_ggdac :=_dbdf ._afd ;_aeba :=_ggdac .PdfObject .(*_cda .PdfObjectDictionary );_dbdf .PdfAnnotationMarkup .appendToPdfDictionary (_aeba );_aeba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_aeba .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dbdf .QuadPoints );return _ggdac ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_fageg *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _fageg ._ccbbf !=nil {return _fageg ._ccbbf ,nil ;};if _fageg .ColorSpace ==nil {return nil ,nil ;};_bgfae ,_bcfg :=_cecge (_fageg .ColorSpace );if _bcfg !=nil {return nil ,_bcfg ;
};_fageg ._ccbbf =_bgfae ;return _fageg ._ccbbf ,nil ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_acedf *DSS )GetContainingPdfObject ()_cda .PdfObject {return _acedf ._cabgd };

// Evaluate runs the function on the passed in slice and returns the results.
func (_egae *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ae .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_ea .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;PageProcessCallback PageProcessCallback ;

// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};func (_ccde *PdfReader )newPdfActionJavaScriptFromDict (_bce *_cda .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_bce .Get ("\u004a\u0053")},nil ;};func (_bdcgc *PdfReader )traverseObjectData (_adbgf _cda .PdfObject )error {return _cda .ResolveReferencesDeep (_adbgf ,_bdcgc ._abffb );
};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_gaadf *PdfPageResources )SetXObjectFormByName (keyName _cda .PdfObjectName ,xform *XObjectForm )error {_ebfedg :=xform .ToPdfObject ().(*_cda .PdfObjectStream );_gbfc :=_gaadf .SetXObjectByName (keyName ,_ebfedg );return _gbfc ;};

// ToPdfObject implements interface PdfModel.
func (_gdcg *PdfAnnotationFreeText )ToPdfObject ()_cda .PdfObject {_gdcg .PdfAnnotation .ToPdfObject ();_eadb :=_gdcg ._afd ;_afgd :=_eadb .PdfObject .(*_cda .PdfObjectDictionary );_gdcg .PdfAnnotationMarkup .appendToPdfDictionary (_afgd );_afgd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_afgd .SetIfNotNil ("\u0044\u0041",_gdcg .DA );_afgd .SetIfNotNil ("\u0051",_gdcg .Q );_afgd .SetIfNotNil ("\u0052\u0043",_gdcg .RC );_afgd .SetIfNotNil ("\u0044\u0053",_gdcg .DS );_afgd .SetIfNotNil ("\u0043\u004c",_gdcg .CL );_afgd .SetIfNotNil ("\u0049\u0054",_gdcg .IT );
_afgd .SetIfNotNil ("\u0042\u0045",_gdcg .BE );_afgd .SetIfNotNil ("\u0052\u0044",_gdcg .RD );_afgd .SetIfNotNil ("\u0042\u0053",_gdcg .BS );_afgd .SetIfNotNil ("\u004c\u0045",_gdcg .LE );return _eadb ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_bega *PdfPageResources )ToPdfObject ()_cda .PdfObject {_bffgfa :=_bega ._feedd ;_bffgfa .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bega .ExtGState );if _bega ._ccbbf !=nil {_bega .ColorSpace =_bega ._ccbbf .ToPdfObject ();};_bffgfa .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_bega .ColorSpace );
_bffgfa .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_bega .Pattern );_bffgfa .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bega .Shading );_bffgfa .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_bega .XObject );_bffgfa .SetIfNotNil ("\u0046\u006f\u006e\u0074",_bega .Font );
_bffgfa .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_bega .ProcSet );_bffgfa .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_bega .Properties );return _bffgfa ;};func (_dccgb *PdfAcroForm )fill (_fecb FieldValueProvider ,_caacc FieldAppearanceGenerator )error {if _dccgb ==nil {return nil ;
};_gfdc ,_badcc :=_fecb .FieldValues ();if _badcc !=nil {return _badcc ;};for _ ,_ababg :=range _dccgb .AllFields (){_gebb :=_ababg .PartialName ();_bdgbe ,_agbgc :=_gfdc [_gebb ];if !_agbgc {if _gggd ,_ccegf :=_ababg .FullName ();_ccegf ==nil {_bdgbe ,_agbgc =_gfdc [_gggd ];
};};if !_agbgc {_ae .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_gebb );
continue ;};if _agfdg :=_efff (_ababg ,_bdgbe );_agfdg !=nil {return _agfdg ;};if _caacc ==nil {continue ;};for _ ,_bccc :=range _ababg .Annotations {_adgge ,_gfcdd :=_caacc .GenerateAppearanceDict (_dccgb ,_ababg ,_bccc );if _gfcdd !=nil {return _gfcdd ;
};_bccc .AP =_adgge ;_bccc .ToPdfObject ();};};return nil ;};var _ pdfFont =(*pdfFontType0 )(nil );

// AddOutlineTree adds outlines to a PDF file.
func (_gfbe *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_gfbe ._cadab =outlineTree };

// ToPdfObject returns a stream object.
func (_abfccf *XObjectForm )ToPdfObject ()_cda .PdfObject {_efcda :=_abfccf ._edcbb ;_edegf :=_efcda .PdfObjectDictionary ;if _abfccf .Filter !=nil {_edegf =_abfccf .Filter .MakeStreamDict ();_efcda .PdfObjectDictionary =_edegf ;};_edegf .Set ("\u0054\u0079\u0070\u0065",_cda .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_edegf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0046\u006f\u0072\u006d"));_edegf .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_abfccf .FormType );_edegf .SetIfNotNil ("\u0042\u0042\u006f\u0078",_abfccf .BBox );
_edegf .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_abfccf .Matrix );if _abfccf .Resources !=nil {_edegf .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_abfccf .Resources .ToPdfObject ());};_edegf .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_abfccf .Group );
_edegf .SetIfNotNil ("\u0052\u0065\u0066",_abfccf .Ref );_edegf .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_abfccf .MetaData );_edegf .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_abfccf .PieceInfo );_edegf .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_abfccf .LastModified );
_edegf .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_abfccf .StructParent );_edegf .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_abfccf .StructParents );_edegf .SetIfNotNil ("\u004f\u0050\u0049",_abfccf .OPI );
_edegf .SetIfNotNil ("\u004f\u0043",_abfccf .OC );_edegf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_abfccf .Name );_edegf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_cda .MakeInteger (int64 (len (_abfccf .Stream ))));_efcda .Stream =_abfccf .Stream ;return _efcda ;
};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// ToPdfObject implements interface PdfModel.
func (_gcab *PdfActionGoToR )ToPdfObject ()_cda .PdfObject {_gcab .PdfAction .ToPdfObject ();_dbc :=_gcab ._dcg ;_aeff :=_dbc .PdfObject .(*_cda .PdfObjectDictionary );_aeff .SetIfNotNil ("\u0053",_cda .MakeName (string (ActionTypeGoToR )));if _gcab .F !=nil {_aeff .Set ("\u0046",_gcab .F .ToPdfObject ());
};_aeff .SetIfNotNil ("\u0044",_gcab .D );_aeff .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_gcab .NewWindow );return _dbc ;};func (_cbfc *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";
};

// SetFontByName sets the font specified by keyName to the given object.
func (_afdf *PdfPageResources )SetFontByName (keyName _cda .PdfObjectName ,obj _cda .PdfObject )error {if _afdf .Font ==nil {_afdf .Font =_cda .MakeDict ();};_ecbae ,_gbbb :=_cda .TraceToDirectObject (_afdf .Font ).(*_cda .PdfObjectDictionary );if !_gbbb {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cda .TraceToDirectObject (_afdf .Font ));
return _cda .ErrTypeError ;};_ecbae .Set (keyName ,obj );return nil ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_fac :=NewPdfAnnotation ();_gfb :=&PdfAnnotationWatermark {};_gfb .PdfAnnotation =_fac ;_fac .SetContext (_gfb );return _gfb ;};

// RemovePage removes a page by number.
func (_becb *PdfAppender )RemovePage (pageNum int ){_dae :=pageNum -1;_becb ._cafc =append (_becb ._cafc [0:_dae ],_becb ._cafc [pageNum :]...);};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _cd .ReadSeeker )(*PdfFont ,error ){const _fddd =_aef .CharCode (32);const _fgadd =_aef .CharCode (255);_dbbfa ,_cgeeb :=_fb .ReadAll (r );if _cgeeb !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_cgeeb );
return nil ,_cgeeb ;};_ceddc ,_cgeeb :=_fd .TtfParse (_dc .NewReader (_dbbfa ));if _cgeeb !=nil {_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_cgeeb );
return nil ,_cgeeb ;};_bbdaa :=&pdfFontSimple {_fbgce :make (map[_aef .CharCode ]float64 ),fontCommon :fontCommon {_fceb :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_bbdaa ._dcag =_aef .NewWinAnsiEncoder ();_bbdaa ._gedd =_ceddc .PostScriptName ;
_bbdaa .FirstChar =_cda .MakeInteger (int64 (_fddd ));_bbdaa .LastChar =_cda .MakeInteger (int64 (_fgadd ));_baffa :=1000.0/float64 (_ceddc .UnitsPerEm );if len (_ceddc .Widths )<=0{return nil ,_ea .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_gcgcb :=_baffa *float64 (_ceddc .Widths [0]);_agad :=make ([]float64 ,0,_fgadd -_fddd +1);for _eeacc :=_fddd ;_eeacc <=_fgadd ;_eeacc ++{_bceac ,_aaedb :=_bbdaa .Encoder ().CharcodeToRune (_eeacc );if !_aaedb {_ae .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_eeacc );
_agad =append (_agad ,_gcgcb );continue ;};_gbgge ,_fdgce :=_ceddc .Chars [_bceac ];if !_fdgce {_ae .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_agad =append (_agad ,_gcgcb );continue ;
};_dddf :=_baffa *float64 (_ceddc .Widths [_gbgge ]);_agad =append (_agad ,_dddf );};_bbdaa .Widths =_cda .MakeIndirectObject (_cda .MakeArrayFromFloats (_agad ));if len (_agad )< int (_fgadd -_fddd +1){_ae .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_agad ),255-32+1);
return nil ,_cda .ErrRangeError ;};for _gggga :=_fddd ;_gggga <=_fgadd ;_gggga ++{_bbdaa ._fbgce [_gggga ]=_agad [_gggga -_fddd ];};_bbdaa .Encoding =_cda .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_egfb :=&PdfFontDescriptor {};
_egfb .FontName =_cda .MakeName (_ceddc .PostScriptName );_egfb .Ascent =_cda .MakeFloat (_baffa *float64 (_ceddc .TypoAscender ));_egfb .Descent =_cda .MakeFloat (_baffa *float64 (_ceddc .TypoDescender ));_egfb .CapHeight =_cda .MakeFloat (_baffa *float64 (_ceddc .CapHeight ));
_egfb .FontBBox =_cda .MakeArrayFromFloats ([]float64 {_baffa *float64 (_ceddc .Xmin ),_baffa *float64 (_ceddc .Ymin ),_baffa *float64 (_ceddc .Xmax ),_baffa *float64 (_ceddc .Ymax )});_egfb .ItalicAngle =_cda .MakeFloat (_ceddc .ItalicAngle );_egfb .MissingWidth =_cda .MakeFloat (_baffa *float64 (_ceddc .Widths [0]));
_gaad ,_cgeeb :=_cda .MakeStream (_dbbfa ,_cda .NewFlateEncoder ());if _cgeeb !=nil {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_cgeeb );
return nil ,_cgeeb ;};_gaad .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_cda .MakeInteger (int64 (len (_dbbfa ))));_egfb .FontFile2 =_gaad ;if _ceddc .Bold {_egfb .StemV =_cda .MakeInteger (120);}else {_egfb .StemV =_cda .MakeInteger (70);
};_agag :=_aadf ;if _ceddc .IsFixedPitch {_agag |=_fdaf ;};if _ceddc .ItalicAngle !=0{_agag |=_ddegf ;};_egfb .Flags =_cda .MakeInteger (int64 (_agag ));_bbdaa ._bedag =_egfb ;_faabf :=&PdfFont {_aecg :_bbdaa };return _faabf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gdae *PdfAnnotationHighlight )ToPdfObject ()_cda .PdfObject {_gdae .PdfAnnotation .ToPdfObject ();_gdbg :=_gdae ._afd ;_fdgg :=_gdbg .PdfObject .(*_cda .PdfObjectDictionary );_gdae .PdfAnnotationMarkup .appendToPdfDictionary (_fdgg );_fdgg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_cda .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_fdgg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_gdae .QuadPoints );return _gdbg ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_ecag *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_cda .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ea .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abdf ,_eaff :=_cda .GetNumbersAsFloat (objects );
if _eaff !=nil {return nil ,_eaff ;};return _ecag .ColorFromFloats (_abdf );};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_edabb *PdfReader )CheckAccessRights (password []byte )(bool ,_dd .Permissions ,error ){return _edabb ._gaedg .CheckAccessRights (password );};

// ToInteger convert to an integer format.
func (_gbffd *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_fccdg :=_ba .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_fccdg *_gbffd .C ()),uint32 (_fccdg *_gbffd .M ()),uint32 (_fccdg *_gbffd .Y ()),uint32 (_fccdg *_gbffd .K ())};};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_dfeg *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_agda :=_dfeg .GetContentStreamObjs ();wrapContents =wrapContents &&len (_agda )> 0;_aaccgc :=_cda .NewFlateEncoder ();_agaade :=_cda .MakeArray ();if wrapContents {_abdc ,_geeb :=_cda .MakeStream ([]byte ("\u0071\u000a"),_aaccgc );
if _geeb !=nil {return _geeb ;};_agaade .Append (_abdc );};_agaade .Append (_agda ...);if wrapContents {_fgfe ,_degae :=_cda .MakeStream ([]byte ("\u000a\u0051\u000a"),_aaccgc );if _degae !=nil {return _degae ;};_agaade .Append (_fgfe );};_dcdde ,_ddbdg :=_cda .MakeStream (cs ,_aaccgc );
if _ddbdg !=nil {return _ddbdg ;};_agaade .Append (_dcdde );_dfeg .Contents =_agaade ;return nil ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_fcbeg :=&PdfOutline {_cfbd :_cda .MakeIndirectObject (_cda .MakeDict ())};_fcbeg ._debg =_fcbeg ;return _fcbeg ;};

// ToPdfObject converts the font to a PDF representation.
func (_ceaa *pdfFontType0 )ToPdfObject ()_cda .PdfObject {if _ceaa ._dbfa ==nil {_ceaa ._dbfa =&_cda .PdfIndirectObject {};};_bagg :=_ceaa .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_ceaa ._dbfa .PdfObject =_bagg ;if _ceaa .Encoding !=nil {_bagg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ceaa .Encoding );
}else if _ceaa ._fbbce !=nil {_bagg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ceaa ._fbbce .ToPdfObject ());};if _ceaa .DescendantFont !=nil {_bagg .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_cda .MakeArray (_ceaa .DescendantFont .ToPdfObject ()));
};return _ceaa ._dbfa ;};

// GetContentStream returns the pattern cell's content stream
func (_abece *PdfTilingPattern )GetContentStream ()([]byte ,error ){_gadcf ,_ ,_efbfa :=_abece .GetContentStreamWithEncoder ();return _gadcf ,_efbfa ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;func _adeeg (_adada *_cda .PdfObjectDictionary )(*PdfShadingType5 ,error ){_gacac :=PdfShadingType5 {};_dfeb :=_adada .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _dfeb ==nil {_ae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_acebb ,_edgceg :=_dfeb .(*_cda .PdfObjectInteger );if !_edgceg {_ae .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dfeb );
return nil ,_cda .ErrTypeError ;};_gacac .BitsPerCoordinate =_acebb ;_dfeb =_adada .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _dfeb ==nil {_ae .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_acebb ,_edgceg =_dfeb .(*_cda .PdfObjectInteger );if !_edgceg {_ae .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_dfeb );
return nil ,_cda .ErrTypeError ;};_gacac .BitsPerComponent =_acebb ;_dfeb =_adada .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _dfeb ==nil {_ae .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_acebb ,_edgceg =_dfeb .(*_cda .PdfObjectInteger );if !_edgceg {_ae .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_dfeb );
return nil ,_cda .ErrTypeError ;};_gacac .VerticesPerRow =_acebb ;_dfeb =_adada .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _dfeb ==nil {_ae .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ebdcd ,_edgceg :=_dfeb .(*_cda .PdfObjectArray );if !_edgceg {_ae .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dfeb );
return nil ,_cda .ErrTypeError ;};_gacac .Decode =_ebdcd ;if _ggggc :=_adada .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ggggc !=nil {_gacac .Function =[]PdfFunction {};if _babdd ,_ecdgb :=_ggggc .(*_cda .PdfObjectArray );_ecdgb {for _ ,_eacef :=range _babdd .Elements (){_fdda ,_gcadc :=_facff (_eacef );
if _gcadc !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gcadc );return nil ,_gcadc ;};_gacac .Function =append (_gacac .Function ,_fdda );
};}else {_agece ,_fcbegd :=_facff (_ggggc );if _fcbegd !=nil {_ae .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fcbegd );return nil ,_fcbegd ;
};_gacac .Function =append (_gacac .Function ,_agece );};};return &_gacac ,nil ;};func (_cece *PdfField )inherit (_fedca func (*PdfField )bool )(bool ,error ){_cgecb :=map[*PdfField ]bool {};_egbd :=false ;_dcaae :=_cece ;for _dcaae !=nil {if _ ,_fcgc :=_cgecb [_dcaae ];
_fcgc {return false ,_ea .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_cfbc :=_fedca (_dcaae );if _cfbc {_egbd =true ;break ;};_cgecb [_dcaae ]=true ;_dcaae =_dcaae .Parent ;};return _egbd ,nil ;
};var _eaeac =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};
func (_bgde *PdfReader )newPdfActionImportDataFromDict (_bbbf *_cda .PdfObjectDictionary )(*PdfActionImportData ,error ){_ged ,_edb :=_gef (_bbbf .Get ("\u0046"));if _edb !=nil {return nil ,_edb ;};return &PdfActionImportData {F :_ged },nil ;};func (_cecce *PdfWriter )writeObject (_cbfdf int ,_bcddf _cda .PdfObject ){_ae .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_cbfdf );
if _fgce ,_dccbfb :=_bcddf .(*_cda .PdfIndirectObject );_dccbfb {_cecce ._aaddc [_cbfdf ]=crossReference {Type :1,Offset :_cecce ._gdbec ,Generation :_fgce .GenerationNumber };_eage :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cbfdf );
if _ceeefg ,_gedffe :=_fgce .PdfObject .(*pdfSignDictionary );_gedffe {_ceeefg ._adgga =_cecce ._gdbec +int64 (len (_eage ));};if _fgce .PdfObject ==nil {_ae .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_fgce .PdfObject =_cda .MakeNull ();};_eage +=_fgce .PdfObject .WriteString ();_eage +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_cecce .writeString (_eage );return ;};if _ccddb ,_feedaa :=_bcddf .(*_cda .PdfObjectStream );_feedaa {_cecce ._aaddc [_cbfdf ]=crossReference {Type :1,Offset :_cecce ._gdbec ,Generation :_ccddb .GenerationNumber };
_geaeg :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cbfdf );_geaeg +=_ccddb .PdfObjectDictionary .WriteString ();_geaeg +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_cecce .writeString (_geaeg );_cecce .writeBytes (_ccddb .Stream );
_cecce .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _ggea ,_gabag :=_bcddf .(*_cda .PdfObjectStreams );_gabag {_cecce ._aaddc [_cbfdf ]=crossReference {Type :1,Offset :_cecce ._gdbec ,Generation :_ggea .GenerationNumber };
_bdcaa :=_c .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_cbfdf );var _ddbada []string ;var _eabag string ;var _baacc int64 ;for _aabcf ,_fgdce :=range _ggea .Elements (){_afaec ,_cecgc :=_fgdce .(*_cda .PdfIndirectObject );if !_cecgc {_ae .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_cbfdf ,_fgdce );
continue ;};_fcdce :=_afaec .PdfObject .WriteString ()+"\u0020";_eabag =_eabag +_fcdce ;_ddbada =append (_ddbada ,_c .Sprintf ("\u0025\u0064\u0020%\u0064",_afaec .ObjectNumber ,_baacc ));_cecce ._aaddc [int (_afaec .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_cbfdf ,Index :_aabcf };
_baacc =_baacc +int64 (len ([]byte (_fcdce )));};_feccd :=_bb .Join (_ddbada ,"\u0020")+"\u0020";_cgccb :=_cda .NewFlateEncoder ();_dcadg :=_cgccb .MakeStreamDict ();_dcadg .Set (_cda .PdfObjectName ("\u0054\u0079\u0070\u0065"),_cda .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_gfbbf :=int64 (_ggea .Len ());_dcadg .Set (_cda .PdfObjectName ("\u004e"),_cda .MakeInteger (_gfbbf ));_dccdg :=int64 (len (_feccd ));_dcadg .Set (_cda .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_cda .MakeInteger (_dccdg ));_aeagf ,_ :=_cgccb .EncodeBytes ([]byte (_feccd +_eabag ));
_cacfg :=int64 (len (_aeagf ));_dcadg .Set (_cda .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_cda .MakeInteger (_cacfg ));_bdcaa +=_dcadg .WriteString ();_bdcaa +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_cecce .writeString (_bdcaa );
_cecce .writeBytes (_aeagf );_cecce .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_cecce .writeString (_bcddf .WriteString ());};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";
TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// ToPdfObject implements interface PdfModel.
func (_ffgf *PdfActionURI )ToPdfObject ()_cda .PdfObject {_ffgf .PdfAction .ToPdfObject ();_gfa :=_ffgf ._dcg ;_afc :=_gfa .PdfObject .(*_cda .PdfObjectDictionary );_afc .SetIfNotNil ("\u0053",_cda .MakeName (string (ActionTypeURI )));_afc .SetIfNotNil ("\u0055\u0052\u0049",_ffgf .URI );
_afc .SetIfNotNil ("\u0049\u0073\u004da\u0070",_ffgf .IsMap );return _gfa ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_ebga *PdfWriter )SetOptimizer (optimizer Optimizer ){_ebga ._bdcf =optimizer };func (_gdea *PdfReader )resolveReference (_efcad *_cda .PdfObjectReference )(_cda .PdfObject ,bool ,error ){_feade ,_cebd :=_gdea ._gaedg .ObjCache [int (_efcad .ObjectNumber )];
if !_cebd {_ae .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_efcad );_cggcb ,_deced :=_gdea ._gaedg .LookupByReference (*_efcad );if _deced !=nil {return nil ,false ,_deced ;};_gdea ._gaedg .ObjCache [int (_efcad .ObjectNumber )]=_cggcb ;
return _cggcb ,false ,nil ;};return _feade ,true ,nil ;};

// SetContext sets the sub action (context).
func (_dfa *PdfAction )SetContext (ctx PdfModel ){_dfa ._gd =ctx };

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_aafcc .Lock ();defer _aafcc .Unlock ();_cabag =title };func (_fcd *PdfReader )newPdfActionSetOCGStateFromDict (_ffe *_cda .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_ffe .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_ffe .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _cda .StreamEncoder ;Intent _cda .PdfObject ;ImageMask _cda .PdfObject ;Mask _cda .PdfObject ;Matte _cda .PdfObject ;Decode _cda .PdfObject ;Interpolate _cda .PdfObject ;
Alternatives _cda .PdfObject ;SMask _cda .PdfObject ;SMaskInData _cda .PdfObject ;Name _cda .PdfObject ;StructParent _cda .PdfObject ;ID _cda .PdfObject ;OPI _cda .PdfObject ;Metadata _cda .PdfObject ;OC _cda .PdfObject ;Stream []byte ;_dbdfb *_cda .PdfObjectStream ;
};var ImageHandling ImageHandler =DefaultImageHandler {};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_agba :=&PdfBorderStyle {};return _agba };

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_babe pdfFontSimple )GetRuneMetrics (r rune )(_fd .CharMetrics ,bool ){if _babe ._aefg !=nil {_ffea ,_effa :=_babe ._aefg .Read (r );if _effa {return _ffea ,true ;};};_acaff :=_babe .Encoder ();if _acaff ==nil {_ae .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_babe );
return _fd .CharMetrics {},false ;};_dccd ,_ebcg :=_acaff .RuneToCharcode (r );if !_ebcg {if r !=' '{_ae .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_babe );
};return _fd .CharMetrics {},false ;};_eggff ,_bggd :=_babe .GetCharMetrics (_dccd );return _eggff ,_bggd ;};

// GetContainingPdfObject implements interface PdfModel.
func (_agddc *PdfFilespec )GetContainingPdfObject ()_cda .PdfObject {return _agddc ._gfcf };

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _cda .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_cda .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_bfaga ,_dafea :=encoder .EncodeBytes (img .Data );
if _dafea !=nil {_ae .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_dafea );return nil ,_dafea ;};_ccge :=NewXObjectImage ();_fgfbc :=img .Width ;_eaccec :=img .Height ;
_ccge .Width =&_fgfbc ;_ccge .Height =&_eaccec ;_ffgeba :=img .BitsPerComponent ;_ccge .BitsPerComponent =&_ffgeba ;_ccge .Filter =encoder ;_ccge .Stream =_bfaga ;if cs ==nil {if img .ColorComponents ==1{_ccge .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_ccge .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_ccge .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_ea .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_ccge .ColorSpace =cs ;};if len (img ._eeeg )!=0{_ffgab :=NewXObjectImage ();_ffgab .Filter =encoder ;_abbede ,_ccfdf :=encoder .EncodeBytes (img ._eeeg );if _ccfdf !=nil {_ae .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_ccfdf );
return nil ,_ccfdf ;};_ffgab .Stream =_abbede ;_ffgab .BitsPerComponent =_ccge .BitsPerComponent ;_ffgab .Width =&img .Width ;_ffgab .Height =&img .Height ;_ffgab .ColorSpace =NewPdfColorspaceDeviceGray ();_ccge .SMask =_ffgab .ToPdfObject ();}else {_ccge .SMask =xobjIn .SMask ;
_ccge .ImageMask =xobjIn .ImageMask ;if _ccge .ColorSpace .GetNumComponents ()==1{_bbfdg (_ccge );};};return _ccge ,nil ;};func _bbfdg (_gcebf *XObjectImage )error {if _gcebf .SMask ==nil {return nil ;};_dfgc ,_bbafa :=_gcebf .SMask .(*_cda .PdfObjectStream );
if !_bbafa {_ae .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _cda .ErrTypeError ;};_bacbe :=_dfgc .PdfObjectDictionary ;
_gcdba :=_bacbe .Get ("\u004d\u0061\u0074t\u0065");if _gcdba ==nil {return nil ;};_ebffe ,_gbeg :=_cedbf (_gcdba .(*_cda .PdfObjectArray ));if _gbeg !=nil {return _gbeg ;};_ecegg :=_cda .MakeArrayFromFloats ([]float64 {_ebffe });_bacbe .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_ecegg );
return nil ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_cda .PdfObjectStream ;Data []byte ;_bcebb *_cda .PdfIndirectObject ;_dfff *_cda .PdfObjectStream ;};func _dgdd (_eddg map[_fd .GID ]int ,_ccbffe uint16 )*_cda .PdfObjectArray {_bbgd :=&_cda .PdfObjectArray {};_gefdb :=_fd .GID (_ccbffe );
for _fced :=_fd .GID (0);_fced < _gefdb ;{_bgga ,_dcdc :=_eddg [_fced ];if !_dcdc {_fced ++;continue ;};_afcdd :=_fced ;for _bedfgb :=_afcdd +1;_bedfgb < _gefdb ;_bedfgb ++{if _bbae ,_bedac :=_eddg [_bedfgb ];!_bedac ||_bgga !=_bbae {break ;};_afcdd =_bedfgb ;
};_bbgd .Append (_cda .MakeInteger (int64 (_fced )));_bbgd .Append (_cda .MakeInteger (int64 (_afcdd )));_bbgd .Append (_cda .MakeInteger (int64 (_bgga )));_fced =_afcdd +1;};return _bbgd ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _cda .PdfObject ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_bacg *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _bacg .flattenFieldsWithOpts (false ,appgen ,opts );};var _agbc =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};
func _fcafe (_eeddac StdFontName )(pdfFontSimple ,error ){_dbgg ,_dfdf :=_fd .NewStdFontByName (_eeddac );if !_dfdf {return pdfFontSimple {},ErrFontNotSupported ;};_gfade :=_cgaee (_dbgg );return _gfade ,nil ;};type fontCommon struct{_gedd string ;_fceb string ;
_abgeg string ;_fbee _cda .PdfObject ;_bfdgd *_db .CMap ;_bedag *PdfFontDescriptor ;_dbdae int64 ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_fcgb :=NewPdfAnnotation ();_cef :=&PdfAnnotationRichMedia {};_cef .PdfAnnotation =_fcgb ;_fcgb .SetContext (_cef );return _cef ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};func _bcfd (_bfbe _cda .PdfObject )(*PdfColorspaceICCBased ,error ){_egce :=&PdfColorspaceICCBased {};if _aafe ,_gacb :=_bfbe .(*_cda .PdfIndirectObject );
_gacb {_egce ._bcebb =_aafe ;};_bfbe =_cda .TraceToDirectObject (_bfbe );_acfd ,_fadb :=_bfbe .(*_cda .PdfObjectArray );if !_fadb {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _acfd .Len ()!=2{return nil ,_c .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_bfbe =_cda .TraceToDirectObject (_acfd .Get (0));_ebbaa ,_fadb :=_bfbe .(*_cda .PdfObjectName );if !_fadb {return nil ,_c .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_ebbaa !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_c .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_bfbe =_acfd .Get (1);
_cedb ,_fadb :=_cda .GetStream (_bfbe );if !_fadb {_ae .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_bfbe );
return nil ,_c .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_gecdeb :=_cedb .PdfObjectDictionary ;_ggdd ,_fadb :=_gecdeb .Get ("\u004e").(*_cda .PdfObjectInteger );
if !_fadb {return nil ,_c .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_ggdd !=1&&*_ggdd !=3&&*_ggdd !=4{return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_egce .N =int (*_ggdd );if _ffag :=_gecdeb .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_ffag !=nil {_fecgc ,_egfd :=NewPdfColorspaceFromPdfObject (_ffag );if _egfd !=nil {return nil ,_egfd ;};_egce .Alternate =_fecgc ;};if _agaa :=_gecdeb .Get ("\u0052\u0061\u006eg\u0065");
_agaa !=nil {_agaa =_cda .TraceToDirectObject (_agaa );_baffg ,_cabg :=_agaa .(*_cda .PdfObjectArray );if !_cabg {return nil ,_c .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _baffg .Len ()!=2*_egce .N {return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_fcaf ,_bffg :=_baffg .GetAsFloat64Slice ();if _bffg !=nil {return nil ,_bffg ;};_egce .Range =_fcaf ;}else {_egce .Range =make ([]float64 ,2*_egce .N );for _ddbff :=0;_ddbff < _egce .N ;_ddbff ++{_egce .Range [2*_ddbff ]=0.0;_egce .Range [2*_ddbff +1]=1.0;
};};if _dceed :=_gecdeb .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_dceed !=nil {_ccef ,_bceaf :=_dceed .(*_cda .PdfObjectStream );if !_bceaf {return nil ,_c .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_egce .Metadata =_ccef ;};_agaf ,_efea :=_cda .DecodeStream (_cedb );if _efea !=nil {return nil ,_efea ;};_egce .Data =_agaf ;_egce ._dfff =_cedb ;return _egce ,nil ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_gcgd *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_fdce :=_bed .NewReader (img .getBase ());_cgae :=_eee .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_aaddb :=_bed .NewWriter (_cgae );
_bcb :=_ba .Pow (2,float64 (img .BitsPerComponent ))-1;_fgeg :=make ([]uint32 ,3);var (_cded error ;_adfe ,_caea ,_bbaf ,_ceda ,_badc ,_gefe float64 ;);for {_cded =_fdce .ReadSamples (_fgeg );if _cded ==_cd .EOF {break ;}else if _cded !=nil {return img ,_cded ;
};_adfe =float64 (_fgeg [0])/_bcb ;_caea =float64 (_fgeg [1])/_bcb ;_bbaf =float64 (_fgeg [2])/_bcb ;_ceda =_gcgd .Matrix [0]*_ba .Pow (_adfe ,_gcgd .Gamma [0])+_gcgd .Matrix [3]*_ba .Pow (_caea ,_gcgd .Gamma [1])+_gcgd .Matrix [6]*_ba .Pow (_bbaf ,_gcgd .Gamma [2]);
_badc =_gcgd .Matrix [1]*_ba .Pow (_adfe ,_gcgd .Gamma [0])+_gcgd .Matrix [4]*_ba .Pow (_caea ,_gcgd .Gamma [1])+_gcgd .Matrix [7]*_ba .Pow (_bbaf ,_gcgd .Gamma [2]);_gefe =_gcgd .Matrix [2]*_ba .Pow (_adfe ,_gcgd .Gamma [0])+_gcgd .Matrix [5]*_ba .Pow (_caea ,_gcgd .Gamma [1])+_gcgd .Matrix [8]*_ba .Pow (_bbaf ,_gcgd .Gamma [2]);
_adfe =3.240479*_ceda +-1.537150*_badc +-0.498535*_gefe ;_caea =-0.969256*_ceda +1.875992*_badc +0.041556*_gefe ;_bbaf =0.055648*_ceda +-0.204043*_badc +1.057311*_gefe ;_adfe =_ba .Min (_ba .Max (_adfe ,0),1.0);_caea =_ba .Min (_ba .Max (_caea ,0),1.0);
_bbaf =_ba .Min (_ba .Max (_bbaf ,0),1.0);_fgeg [0]=uint32 (_adfe *_bcb );_fgeg [1]=uint32 (_caea *_bcb );_fgeg [2]=uint32 (_bbaf *_bcb );if _cded =_aaddb .WriteSamples (_fgeg );_cded !=nil {return img ,_cded ;};};return _fdaad (&_cgae ),nil ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_deb _cd .ReadSeeker ;_gbdg *_cda .PdfParser ;_ddaff *PdfReader ;Reader *PdfReader ;_cafc []*PdfPage ;_degb *PdfAcroForm ;_eeee *DSS ;_aage _cda .XrefTable ;_gfdd int64 ;_ggeb int ;_faae []_cda .PdfObject ;_dece map[_cda .PdfObject ]struct{};
_cebg map[_cda .PdfObject ]int64 ;_bca map[_cda .PdfObject ]struct{};_fgeb map[_cda .PdfObject ]struct{};_gbe int64 ;_eeff bool ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_bf .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_bf .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_bf .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_gefbg *PdfAppender ;_bfddf *DSS ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;