//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_ae "bufio";_cbg "bytes";_bd "crypto/md5";_aa "crypto/rand";_cd "crypto/sha1";_c "crypto/x509";_b "encoding/binary";_g "encoding/hex";_ged "errors";_d "fmt";_bff "github.com/unidoc/pkcs7";_ef "github.com/unidoc/unipdf/v3/common";
_fb "github.com/unidoc/unipdf/v3/core";_ag "github.com/unidoc/unipdf/v3/core/security";_fac "github.com/unidoc/unipdf/v3/core/security/crypt";_bde "github.com/unidoc/unipdf/v3/internal/cmap";_cg "github.com/unidoc/unipdf/v3/internal/imageutil";_fde "github.com/unidoc/unipdf/v3/internal/license";
_faf "github.com/unidoc/unipdf/v3/internal/sampling";_ff "github.com/unidoc/unipdf/v3/internal/textencoding";_fd "github.com/unidoc/unipdf/v3/internal/timeutils";_ea "github.com/unidoc/unipdf/v3/internal/transform";_ad "github.com/unidoc/unipdf/v3/model/internal/docutil";
_bb "github.com/unidoc/unipdf/v3/model/internal/fonts";_gc "github.com/unidoc/unipdf/v3/model/mdp";_af "github.com/unidoc/unipdf/v3/model/sigutil";_dc "github.com/unidoc/unipdf/v3/ps";_bffe "github.com/unidoc/unitype";_bg "golang.org/x/xerrors";_a "hash";
_gb "image";_df "image/color";_ "image/gif";_ "image/png";_fe "io";_ga "io/ioutil";_cb "math";_de "math/rand";_bab "os";_ca "regexp";_fa "sort";_fge "strconv";_ba "strings";_f "sync";_fg "time";_eeg "unicode";_ge "unicode/utf8";);func (_abbab *LTV )generateVRIKey (_efggb *PdfSignature )(string ,error ){_acbe ,_gedbb :=_cgbgd (_efggb .Contents .Bytes ());
if _gedbb !=nil {return "",_gedbb ;};return _ba .ToUpper (_g .EncodeToString (_acbe )),nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_cgddc *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fdbf :=vals [0];if _fdbf < 0.0||_fdbf > 1.0{_ef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fdbf );
return nil ,ErrColorOutOfRange ;};_bebb :=vals [1];if _bebb < 0.0||_bebb > 1.0{_ef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fdbf );return nil ,ErrColorOutOfRange ;
};_edgg :=vals [2];if _edgg < 0.0||_edgg > 1.0{_ef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fdbf );return nil ,ErrColorOutOfRange ;};_bcdc :=NewPdfColorDeviceRGB (_fdbf ,_bebb ,_edgg );
return _bcdc ,nil ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_fb .PdfObjectInteger ;BitsPerComponent *_fb .PdfObjectInteger ;BitsPerFlag *_fb .PdfObjectInteger ;Decode *_fb .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_eebcf :=&PdfPageResources {};_eebcf ._cdgfd =_fb .MakeDict ();return _eebcf ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_gegde *Image )GetParamsDict ()*_fb .PdfObjectDictionary {_gbecg :=_fb .MakeDict ();_gbecg .Set ("\u0057\u0069\u0064t\u0068",_fb .MakeInteger (_gegde .Width ));_gbecg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fb .MakeInteger (_gegde .Height ));
_gbecg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fb .MakeInteger (int64 (_gegde .ColorComponents )));_gbecg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fb .MakeInteger (_gegde .BitsPerComponent ));
return _gbecg ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_acgg interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};func (_eeb *PdfReader )newPdfActionFromIndirectObject (_be *_fb .PdfIndirectObject )(*PdfAction ,error ){_bfd ,_abf :=_be .PdfObject .(*_fb .PdfObjectDictionary );
if !_abf {return nil ,_d .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_eeb ._bcbaa .GetModelFromPrimitive (_bfd );model !=nil {_cce ,_dfa :=model .(*PdfAction );if !_dfa {return nil ,_d .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _cce ,nil ;};_fbaf :=&PdfAction {};_fbaf ._db =_be ;_eeb ._bcbaa .Register (_bfd ,_fbaf );if _fad :=_bfd .Get ("\u0054\u0079\u0070\u0065");_fad !=nil {_gggf ,_cde :=_fad .(*_fb .PdfObjectName );if !_cde {_ef .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_fad );
}else {if *_gggf !="\u0041\u0063\u0074\u0069\u006f\u006e"{_ef .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_gggf );
};_fbaf .Type =_gggf ;};};if _adgf :=_bfd .Get ("\u004e\u0065\u0078\u0074");_adgf !=nil {_fbaf .Next =_adgf ;};if _dbg :=_bfd .Get ("\u0053");_dbg !=nil {_fbaf .S =_dbg ;};_efd ,_eefb :=_fbaf .S .(*_fb .PdfObjectName );if !_eefb {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fbaf .S );
return nil ,_d .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_fbaf .S );};_eg :=PdfActionType (_efd .String ());
switch _eg {case ActionTypeGoTo :_bdg ,_fdf :=_eeb .newPdfActionGotoFromDict (_bfd );if _fdf !=nil {return nil ,_fdf ;};_bdg .PdfAction =_fbaf ;_fbaf ._gae =_bdg ;return _fbaf ,nil ;case ActionTypeGoToR :_bbe ,_baba :=_eeb .newPdfActionGotoRFromDict (_bfd );
if _baba !=nil {return nil ,_baba ;};_bbe .PdfAction =_fbaf ;_fbaf ._gae =_bbe ;return _fbaf ,nil ;case ActionTypeGoToE :_dae ,_cbbc :=_eeb .newPdfActionGotoEFromDict (_bfd );if _cbbc !=nil {return nil ,_cbbc ;};_dae .PdfAction =_fbaf ;_fbaf ._gae =_dae ;
return _fbaf ,nil ;case ActionTypeLaunch :_feb ,_ebe :=_eeb .newPdfActionLaunchFromDict (_bfd );if _ebe !=nil {return nil ,_ebe ;};_feb .PdfAction =_fbaf ;_fbaf ._gae =_feb ;return _fbaf ,nil ;case ActionTypeThread :_fdfd ,_dca :=_eeb .newPdfActionThreadFromDict (_bfd );
if _dca !=nil {return nil ,_dca ;};_fdfd .PdfAction =_fbaf ;_fbaf ._gae =_fdfd ;return _fbaf ,nil ;case ActionTypeURI :_bge ,_gag :=_eeb .newPdfActionURIFromDict (_bfd );if _gag !=nil {return nil ,_gag ;};_bge .PdfAction =_fbaf ;_fbaf ._gae =_bge ;return _fbaf ,nil ;
case ActionTypeSound :_fbaa ,_ace :=_eeb .newPdfActionSoundFromDict (_bfd );if _ace !=nil {return nil ,_ace ;};_fbaa .PdfAction =_fbaf ;_fbaf ._gae =_fbaa ;return _fbaf ,nil ;case ActionTypeMovie :_eeaa ,_fgda :=_eeb .newPdfActionMovieFromDict (_bfd );
if _fgda !=nil {return nil ,_fgda ;};_eeaa .PdfAction =_fbaf ;_fbaf ._gae =_eeaa ;return _fbaf ,nil ;case ActionTypeHide :_bbc ,_gbe :=_eeb .newPdfActionHideFromDict (_bfd );if _gbe !=nil {return nil ,_gbe ;};_bbc .PdfAction =_fbaf ;_fbaf ._gae =_bbc ;
return _fbaf ,nil ;case ActionTypeNamed :_bgc ,_cgd :=_eeb .newPdfActionNamedFromDict (_bfd );if _cgd !=nil {return nil ,_cgd ;};_bgc .PdfAction =_fbaf ;_fbaf ._gae =_bgc ;return _fbaf ,nil ;case ActionTypeSubmitForm :_dgc ,_fbc :=_eeb .newPdfActionSubmitFormFromDict (_bfd );
if _fbc !=nil {return nil ,_fbc ;};_dgc .PdfAction =_fbaf ;_fbaf ._gae =_dgc ;return _fbaf ,nil ;case ActionTypeResetForm :_ddg ,_ebb :=_eeb .newPdfActionResetFormFromDict (_bfd );if _ebb !=nil {return nil ,_ebb ;};_ddg .PdfAction =_fbaf ;_fbaf ._gae =_ddg ;
return _fbaf ,nil ;case ActionTypeImportData :_cef ,_bag :=_eeb .newPdfActionImportDataFromDict (_bfd );if _bag !=nil {return nil ,_bag ;};_cef .PdfAction =_fbaf ;_fbaf ._gae =_cef ;return _fbaf ,nil ;case ActionTypeSetOCGState :_bbcf ,_ecbb :=_eeb .newPdfActionSetOCGStateFromDict (_bfd );
if _ecbb !=nil {return nil ,_ecbb ;};_bbcf .PdfAction =_fbaf ;_fbaf ._gae =_bbcf ;return _fbaf ,nil ;case ActionTypeRendition :_abfa ,_aee :=_eeb .newPdfActionRenditionFromDict (_bfd );if _aee !=nil {return nil ,_aee ;};_abfa .PdfAction =_fbaf ;_fbaf ._gae =_abfa ;
return _fbaf ,nil ;case ActionTypeTrans :_agag ,_fc :=_eeb .newPdfActionTransFromDict (_bfd );if _fc !=nil {return nil ,_fc ;};_agag .PdfAction =_fbaf ;_fbaf ._gae =_agag ;return _fbaf ,nil ;case ActionTypeGoTo3DView :_bbd ,_bda :=_eeb .newPdfActionGoTo3DViewFromDict (_bfd );
if _bda !=nil {return nil ,_bda ;};_bbd .PdfAction =_fbaf ;_fbaf ._gae =_bbd ;return _fbaf ,nil ;case ActionTypeJavaScript :_ccd ,_bbdb :=_eeb .newPdfActionJavaScriptFromDict (_bfd );if _bbdb !=nil {return nil ,_bbdb ;};_ccd .PdfAction =_fbaf ;_fbaf ._gae =_ccd ;
return _fbaf ,nil ;};_ef .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_eg );return nil ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_gdba *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_fb .PdfObject )(PdfColor ,error ){if len (objects )!=_gdba .GetNumComponents (){return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_begeb ,_bgeb :=_fb .GetNumbersAsFloat (objects );
if _bgeb !=nil {return nil ,_bgeb ;};return _gdba .ColorFromFloats (_begeb );};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_fb .PdfObjectBool ;SigFlags *_fb .PdfObjectInteger ;CO *_fb .PdfObjectArray ;DR *PdfPageResources ;DA *_fb .PdfObjectString ;Q *_fb .PdfObjectInteger ;XFA _fb .PdfObject ;_gcada *_fb .PdfIndirectObject ;
};func (_cgbbe *PdfReader )buildPageList (_cdbcd *_fb .PdfIndirectObject ,_agddc *_fb .PdfIndirectObject ,_adda map[_fb .PdfObject ]struct{})error {if _cdbcd ==nil {return nil ;};if _ ,_gebbd :=_adda [_cdbcd ];_gebbd {_ef .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_cdbcd .ObjectNumber );
return nil ;};_adda [_cdbcd ]=struct{}{};_gcfg ,_adbgd :=_cdbcd .PdfObject .(*_fb .PdfObjectDictionary );if !_adbgd {return _ged .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_feba ,_adbgd :=(*_gcfg ).Get ("\u0054\u0079\u0070\u0065").(*_fb .PdfObjectName );
if !_adbgd {if _gcfg .Get ("\u004b\u0069\u0064\u0073")==nil {return _ged .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_ef .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_feba =_fb .MakeName ("\u0050\u0061\u0067e\u0073");_gcfg .Set ("\u0054\u0079\u0070\u0065",_feba );};_ef .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_feba ,_cdbcd );
if *_feba =="\u0050\u0061\u0067\u0065"{_ggbac ,_dbdg :=_cgbbe .newPdfPageFromDict (_gcfg );if _dbdg !=nil {return _dbdg ;};_ggbac .setContainer (_cdbcd );if _agddc !=nil {_gcfg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_agddc );};_cgbbe ._gcbf =append (_cgbbe ._gcbf ,_cdbcd );
_cgbbe .PageList =append (_cgbbe .PageList ,_ggbac );return nil ;};if *_feba !="\u0050\u0061\u0067e\u0073"{_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_feba );
return _ged .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _agddc !=nil {_gcfg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_agddc );};if !_cgbbe ._abae {_afad :=_cgbbe .traverseObjectData (_cdbcd );if _afad !=nil {return _afad ;};};_baebg ,_ebee :=_cgbbe ._gfcg .Resolve (_gcfg .Get ("\u004b\u0069\u0064\u0073"));
if _ebee !=nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _ebee ;};var _bebf *_fb .PdfObjectArray ;
_bebf ,_adbgd =_baebg .(*_fb .PdfObjectArray );if !_adbgd {_ccee ,_eccde :=_baebg .(*_fb .PdfIndirectObject );if !_eccde {return _ged .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bebf ,_adbgd =_ccee .PdfObject .(*_fb .PdfObjectArray );
if !_adbgd {return _ged .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_ef .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_bebf );
for _cfffe ,_ggafa :=range _bebf .Elements (){_cefeb ,_bcbcb :=_fb .GetIndirect (_ggafa );if !_bcbcb {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_cefeb );
return _ged .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_bebf .Set (_cfffe ,_cefeb );_ebee =_cgbbe .buildPageList (_cefeb ,_cdbcd ,_adda );if _ebee !=nil {return _ebee ;
};};return nil ;};func (_ggacb *DSS )addCRLs (_afdgb [][]byte )([]*_fb .PdfObjectStream ,error ){return _ggacb .add (&_ggacb .CRLs ,_ggacb ._gaggea ,_afdgb );};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_bdebe *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _bdebe ._dgcfa !=nil {return _bdebe ._dgcfa ,nil ;};if _bdebe .Annots ==nil {_bdebe ._dgcfa =[]*PdfAnnotation {};return nil ,nil ;};if _bdebe ._bgaaa ==nil {_bdebe ._dgcfa =[]*PdfAnnotation {};
return nil ,nil ;};_fcadf ,_accfgb :=_bdebe ._bgaaa .loadAnnotations (_bdebe .Annots );if _accfgb !=nil {return nil ,_accfgb ;};if _fcadf ==nil {_bdebe ._dgcfa =[]*PdfAnnotation {};};_bdebe ._dgcfa =_fcadf ;return _bdebe ._dgcfa ,nil ;};func (_cdba *PdfReader )newPdfActionSetOCGStateFromDict (_edg *_fb .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_edg .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_edg .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _fg .Time )(PdfDate ,error ){_aeedb :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_fbbcf ,_ :=_fge .ParseInt (_aeedb [1:3],10,32);_geaf ,_ :=_fge .ParseInt (_aeedb [4:6],10,32);return PdfDate {_bccgd :int64 (timeObj .Year ()),_ecccc :int64 (timeObj .Month ()),_bcgga :int64 (timeObj .Day ()),_gbfad :int64 (timeObj .Hour ()),_gaffc :int64 (timeObj .Minute ()),_cbbgca :int64 (timeObj .Second ()),_aadde :_aeedb [0],_cdedf :_fbbcf ,_dbdge :_geaf },nil ;
};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_dddb PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_fb .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_fbfb []_fb .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_bfdgg []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cfbe *PdfPageResourcesColorspaces )ToPdfObject ()_fb .PdfObject {_acefa :=_fb .MakeDict ();for _ ,_dbfed :=range _cfbe .Names {_acefa .Set (_fb .PdfObjectName (_dbfed ),_cfbe .Colorspaces [_dbfed ].ToPdfObject ());};if _cfbe ._cfcab !=nil {_cfbe ._cfcab .PdfObject =_acefa ;
return _cfbe ._cfcab ;};return _acefa ;};

// GetOptimizer returns current PDF optimizer.
func (_eegbc *PdfWriter )GetOptimizer ()Optimizer {return _eegbc ._bfcfb };

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_caaba *PdfPageResources )GetExtGState (keyName _fb .PdfObjectName )(_fb .PdfObject ,bool ){if _caaba .ExtGState ==nil {return nil ,false ;};_eedaf ,_dfeeg :=_fb .TraceToDirectObject (_caaba .ExtGState ).(*_fb .PdfObjectDictionary );if !_dfeeg {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_caaba .ExtGState );
return nil ,false ;};if _efcb :=_eedaf .Get (keyName );_efcb !=nil {return _efcb ,true ;};return nil ,false ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_defdb *_fb .PdfIndirectObject ;};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _fb .PdfObject )(*PdfOutputIntent ,error ){_dddaf :=&PdfOutputIntent {};if _gebc :=_dddaf .ParsePdfObject (object );_gebc !=nil {return nil ,_gebc ;};return _dddaf ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eaed *PdfAnnotationCircle )ToPdfObject ()_fb .PdfObject {_eaed .PdfAnnotation .ToPdfObject ();_ebbbc :=_eaed ._fcf ;_fdc :=_ebbbc .PdfObject .(*_fb .PdfObjectDictionary );_eaed .PdfAnnotationMarkup .appendToPdfDictionary (_fdc );_fdc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_fdc .SetIfNotNil ("\u0042\u0053",_eaed .BS );_fdc .SetIfNotNil ("\u0049\u0043",_eaed .IC );_fdc .SetIfNotNil ("\u0042\u0045",_eaed .BE );_fdc .SetIfNotNil ("\u0052\u0044",_eaed .RD );return _ebbbc ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_gfbfb *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_cfbca :=_gfbfb .actualFont ();if _cfbca ==nil {_ef .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_gfbfb ._gccg );
return _bb .CharMetrics {},false ;};if _dfcfg ,_aaadf :=_cfbca .GetRuneMetrics (r );_aaadf {return _dfcfg ,true ;};if _cabce ,_edag :=_gfbfb .GetFontDescriptor ();_edag ==nil &&_cabce !=nil {return _bb .CharMetrics {Wx :_cabce ._cdggf },true ;};_ef .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gfbfb );
return _bb .CharMetrics {},false ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_egf :=NewPdfAnnotation ();_ddff :=&PdfAnnotationWatermark {};_ddff .PdfAnnotation =_egf ;_egf .SetContext (_ddff );return _ddff ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_ffb :=NewPdfAction ();_cdc :=&PdfActionImportData {};_cdc .PdfAction =_ffb ;_ffb .SetContext (_cdc );return _cdc ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_dbag *PdfField )ToPdfObject ()_fb .PdfObject {_geacb :=_dbag ._ecgg ;_eacf :=_geacb .PdfObject .(*_fb .PdfObjectDictionary );_gdfgb :=_fb .MakeArray ();for _ ,_cdeaa :=range _dbag .Kids {_gdfgb .Append (_cdeaa .ToPdfObject ());};for _ ,_bfcaf :=range _dbag .Annotations {if _bfcaf ._fcf !=_dbag ._ecgg {_gdfgb .Append (_bfcaf .GetContext ().ToPdfObject ());
};};if _dbag .Parent !=nil {_eacf .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dbag .Parent .GetContainingPdfObject ());};if _gdfgb .Len ()> 0{_eacf .Set ("\u004b\u0069\u0064\u0073",_gdfgb );};_eacf .SetIfNotNil ("\u0046\u0054",_dbag .FT );_eacf .SetIfNotNil ("\u0054",_dbag .T );
_eacf .SetIfNotNil ("\u0054\u0055",_dbag .TU );_eacf .SetIfNotNil ("\u0054\u004d",_dbag .TM );_eacf .SetIfNotNil ("\u0046\u0066",_dbag .Ff );_eacf .SetIfNotNil ("\u0056",_dbag .V );_eacf .SetIfNotNil ("\u0044\u0056",_dbag .DV );_eacf .SetIfNotNil ("\u0041\u0041",_dbag .AA );
if _dbag .VariableText !=nil {_eacf .SetIfNotNil ("\u0044\u0041",_dbag .VariableText .DA );_eacf .SetIfNotNil ("\u0051",_dbag .VariableText .Q );_eacf .SetIfNotNil ("\u0044\u0053",_dbag .VariableText .DS );_eacf .SetIfNotNil ("\u0052\u0056",_dbag .VariableText .RV );
};return _geacb ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_fgdcda ,_fcceg :=_bab .Open (filePath );if _fcceg !=nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_fcceg );
return nil ,_fcceg ;};defer _fgdcda .Close ();return NewPdfFontFromTTF (_fgdcda );};

// GetRevisionNumber returns the version of the current Pdf document
func (_ebbf *PdfReader )GetRevisionNumber ()int {return _ebbf ._gfcg .GetRevisionNumber ()};func _cgbgd (_aebcg []byte )([]byte ,error ){_edecg :=_cd .New ();if _ ,_adcfe :=_fe .Copy (_edecg ,_cbg .NewReader (_aebcg ));_adcfe !=nil {return nil ,_adcfe ;
};return _edecg .Sum (nil ),nil ;};func (_ebdec *LTV )getCerts (_edgeeg []*_c .Certificate )([][]byte ,error ){_gada :=make ([][]byte ,0,len (_edgeeg ));for _ ,_begcg :=range _edgeeg {_gada =append (_gada ,_begcg .Raw );};return _gada ,nil ;};func _geffe (_babf *_fb .PdfObjectDictionary )(*PdfFieldText ,error ){_adea :=&PdfFieldText {};
_adea .DA ,_ =_fb .GetString (_babf .Get ("\u0044\u0041"));_adea .Q ,_ =_fb .GetInt (_babf .Get ("\u0051"));_adea .DS ,_ =_fb .GetString (_babf .Get ("\u0044\u0053"));_adea .RV =_babf .Get ("\u0052\u0056");_adea .MaxLen ,_ =_fb .GetInt (_babf .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));
return _adea ,nil ;};

// B returns the value of the B component of the color.
func (_gfdc *PdfColorCalRGB )B ()float64 {return _gfdc [1]};

// C returns the value of the cyan component of the color.
func (_afcd *PdfColorDeviceCMYK )C ()float64 {return _afcd [0]};

// ToPdfObject implements model.PdfModel interface.
func (_eaef *PdfOutputIntent )ToPdfObject ()_fb .PdfObject {if _eaef ._ffea ==nil {_eaef ._ffea =_fb .MakeDict ();};_eccgf :=_eaef ._ffea ;if _eaef .Type !=""{_eccgf .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName (_eaef .Type ));};_eccgf .Set ("\u0053",_fb .MakeName (_eaef .S .String ()));
if _eaef .OutputCondition !=""{_eccgf .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_fb .MakeString (_eaef .OutputCondition ));};_eccgf .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_fb .MakeString (_eaef .OutputConditionIdentifier ));
_eccgf .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_fb .MakeString (_eaef .RegistryName ));if _eaef .Info !=""{_eccgf .Set ("\u0049\u006e\u0066\u006f",_fb .MakeString (_eaef .Info ));};if len (_eaef .DestOutputProfile )!=0{_gbbd ,_cfdda :=_fb .MakeStream (_eaef .DestOutputProfile ,_fb .NewFlateEncoder ());
if _cfdda !=nil {_ef .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_cfdda );
};_gbbd .PdfObjectDictionary .Set ("\u004e",_fb .MakeInteger (int64 (_eaef .ColorComponents )));_ceacd :=make ([]float64 ,_eaef .ColorComponents *2);for _fccd :=0;_fccd < _eaef .ColorComponents *2;_fccd ++{_ffcg :=0.0;if _fccd %2!=0{_ffcg =1.0;};_ceacd [_fccd ]=_ffcg ;
};_gbbd .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_fb .MakeArrayFromFloats (_ceacd ));_eccgf .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_gbbd );};return _eccgf ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _fb .PdfObject ;Mac _fb .PdfObject ;Unix _fb .PdfObject ;NewWindow _fb .PdfObject ;};func (_abeg fontCommon )fontFlags ()int {if _abeg ._gcge ==nil {return 0;};return _abeg ._gcge ._ccaaf ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };func _agad (_agc _fb .PdfObject )(*PdfFilespec ,error ){if _agc ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_agc );};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_cffe *PdfWriter )SetRotation (rotate int64 )error {_dggee ,_fgfbcb :=_fb .GetDict (_cffe ._ebfee );if !_fgfbcb {return ErrTypeCheck ;};_dggee .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_fb .MakeInteger (rotate ));return nil ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_ffddd *XObjectForm )GetContainingPdfObject ()_fb .PdfObject {return _ffddd ._cabgcd };

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _fb .PdfObject ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_dddd :=&PdfColorspaceSpecialSeparation {};return _dddd ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_dcf :=NewPdfAction ();_cbb :=&PdfActionMovie {};_cbb .PdfAction =_dcf ;_dcf .SetContext (_cbb );return _cbb ;};type fontCommon struct{_ecaae string ;_ccbfd string ;_bdfg string ;_cccfe _fb .PdfObject ;_fadd *_bde .CMap ;
_gcge *PdfFontDescriptor ;_dceeg int64 ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_dcfa PdfModel ;_ecgg *_fb .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_fb .PdfObjectName ;T *_fb .PdfObjectString ;TU *_fb .PdfObjectString ;TM *_fb .PdfObjectString ;Ff *_fb .PdfObjectInteger ;
V _fb .PdfObject ;DV _fb .PdfObject ;AA _fb .PdfObject ;VariableText *VariableText ;};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_bafa :=NewPdfAnnotation ();_bgg :=&PdfAnnotation3D {};_bgg .PdfAnnotation =_bafa ;_bafa .SetContext (_bgg );return _bgg ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _fb .PdfObject ;MK _fb .PdfObject ;A _fb .PdfObject ;AA _fb .PdfObject ;};func _adgg (_ecgaa ,_eafcf string )string {if _ba .Contains (_ecgaa ,"\u002b"){_dcde :=_ba .Split (_ecgaa ,"\u002b");if len (_dcde )==2{_ecgaa =_dcde [1];
};};return _eafcf +"\u002b"+_ecgaa ;};

// ToPdfObject implements interface PdfModel.
func (_caeee *PdfFilespec )ToPdfObject ()_fb .PdfObject {_badaa :=_caeee .getDict ();_badaa .Clear ();_badaa .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_badaa .SetIfNotNil ("\u0046\u0053",_caeee .FS );
_badaa .SetIfNotNil ("\u0046",_caeee .F );_badaa .SetIfNotNil ("\u0055\u0046",_caeee .UF );_badaa .SetIfNotNil ("\u0044\u004f\u0053",_caeee .DOS );_badaa .SetIfNotNil ("\u004d\u0061\u0063",_caeee .Mac );_badaa .SetIfNotNil ("\u0055\u006e\u0069\u0078",_caeee .Unix );
_badaa .SetIfNotNil ("\u0049\u0044",_caeee .ID );_badaa .SetIfNotNil ("\u0056",_caeee .V );_badaa .SetIfNotNil ("\u0045\u0046",_caeee .EF );_badaa .SetIfNotNil ("\u0052\u0046",_caeee .RF );_badaa .SetIfNotNil ("\u0044\u0065\u0073\u0063",_caeee .Desc );
_badaa .SetIfNotNil ("\u0043\u0049",_caeee .CI );return _caeee ._caee ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_afeee *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_afeee .GetNumComponents (){return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cecag ,_efaa :=_afeee .TintTransform .Evaluate (vals );
if _efaa !=nil {return nil ,_efaa ;};_bfbc ,_efaa :=_afeee .AlternateSpace .ColorFromFloats (_cecag );if _efaa !=nil {return nil ,_efaa ;};return _bfbc ,nil ;};func _cdae (_cacfg _fb .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_gacc :=&PdfColorspaceDeviceNAttributes {};
var _dffa *_fb .PdfObjectDictionary ;switch _aegf :=_cacfg .(type ){case *_fb .PdfIndirectObject :_gacc ._ecbd =_aegf ;var _gabg bool ;_dffa ,_gabg =_aegf .PdfObject .(*_fb .PdfObjectDictionary );if !_gabg {_ef .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ged .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_fb .PdfObjectDictionary :_dffa =_aegf ;case *_fb .PdfObjectReference :_dfabe :=_aegf .Resolve ();return _cdae (_dfabe );default:_ef .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ged .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fgae :=_dffa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_fgae !=nil {_dfff ,_cdfg :=_fb .TraceToDirectObject (_fgae ).(*_fb .PdfObjectName );if !_cdfg {_ef .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_ged .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_gacc .Subtype =_dfff ;};if _cegdg :=_dffa .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_cegdg !=nil {_gacc .Colorants =_cegdg ;};if _gdaa :=_dffa .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_gdaa !=nil {_gacc .Process =_gdaa ;};if _cgeef :=_dffa .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_cgeef !=nil {_gacc .MixingHints =_cgeef ;};return _gacc ,nil ;};type pdfFontType0 struct{fontCommon ;_acfaf *_fb .PdfIndirectObject ;
_eeaeg _ff .TextEncoder ;Encoding _fb .PdfObject ;DescendantFont *PdfFont ;_dcfg *_bde .CMap ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_afgf *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_fb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdbe ,_gagge :=_fb .GetNumbersAsFloat (objects );
if _gagge !=nil {return nil ,_gagge ;};return _afgf .ColorFromFloats (_gdbe );};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _fe .ReadSeeker )(*PdfReader ,error ){const _bfcda ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _gfdgb (rs ,&ReaderOpts {LazyLoad :true },false ,_bfcda );
};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_eeac *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcgc :=vals [0];if _dcgc < 0.0||_dcgc > 1.0{_ef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dcgc );
return nil ,ErrColorOutOfRange ;};_gfbd :=NewPdfColorCalGray (_dcgc );return _gfbd ,nil ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_ddgfe *Outline )ToPdfObject ()_fb .PdfObject {return _ddgfe .ToPdfOutline ().ToPdfObject ()};

// ToPdfObject implements interface PdfModel.
func (_ac *PdfActionSubmitForm )ToPdfObject ()_fb .PdfObject {_ac .PdfAction .ToPdfObject ();_fgea :=_ac ._db ;_gg :=_fgea .PdfObject .(*_fb .PdfObjectDictionary );_gg .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeSubmitForm )));if _ac .F !=nil {_gg .Set ("\u0046",_ac .F .ToPdfObject ());
};_gg .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_ac .Fields );_gg .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_ac .Flags );return _fgea ;};

// ToPdfObject implements interface PdfModel.
func (_cec *PdfActionTrans )ToPdfObject ()_fb .PdfObject {_cec .PdfAction .ToPdfObject ();_cgc :=_cec ._db ;_ade :=_cgc .PdfObject .(*_fb .PdfObjectDictionary );_ade .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeTrans )));_ade .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_cec .Trans );
return _cgc ;};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_faga :=NewPdfAnnotation ();_ccg :=&PdfAnnotationRichMedia {};_ccg .PdfAnnotation =_faga ;_faga .SetContext (_ccg );return _ccg ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _fb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fcdg *PdfAnnotation3D )ToPdfObject ()_fb .PdfObject {_fcdg .PdfAnnotation .ToPdfObject ();_dafff :=_fcdg ._fcf ;_fbad :=_dafff .PdfObject .(*_fb .PdfObjectDictionary );_fbad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0033\u0044"));
_fbad .SetIfNotNil ("\u0033\u0044\u0044",_fcdg .T3DD );_fbad .SetIfNotNil ("\u0033\u0044\u0056",_fcdg .T3DV );_fbad .SetIfNotNil ("\u0033\u0044\u0041",_fcdg .T3DA );_fbad .SetIfNotNil ("\u0033\u0044\u0049",_fcdg .T3DI );_fbad .SetIfNotNil ("\u0033\u0044\u0042",_fcdg .T3DB );
return _dafff ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_dfaf *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_afcfg *PdfFont )CharcodesToStrings (charcodes []_ff .CharCode )([]string ,int ,int ){_cbedg :=_afcfg .baseFields ();_ebbcg :=make ([]string ,0,len (charcodes ));_gdbd :=0;_adca :=_afcfg .Encoder ();_geffa :=_cbedg ._fadd !=nil &&_afcfg .IsSimple ()&&_afcfg .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_ba .Contains (_cbedg ._fadd .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_geffa &&_adca !=nil {switch _gcedf :=_adca .(type ){case _ff .SimpleEncoder :_cdgd :=_gcedf .BaseName ();if _ ,_caafd :=_fddc [_cdgd ];_caafd {for _ ,_fgdga :=range charcodes {if _gcggb ,_fccab :=_adca .CharcodeToRune (_fgdga );_fccab {_ebbcg =append (_ebbcg ,string (_gcggb ));
}else {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_fgdga ,charcodes ,_cbedg .isCIDFont (),_afcfg ,_adca );
_gdbd ++;_ebbcg =append (_ebbcg ,_bde .MissingCodeString );};};return _ebbcg ,len (_ebbcg ),_gdbd ;};};};for _ ,_gdbg :=range charcodes {if _cbedg ._fadd !=nil {if _aacbb ,_deaf :=_cbedg ._fadd .CharcodeToUnicode (_bde .CharCode (_gdbg ));_deaf {_ebbcg =append (_ebbcg ,_aacbb );
continue ;};};if _adca !=nil {if _ddeg ,_feca :=_adca .CharcodeToRune (_gdbg );_feca {_ebbcg =append (_ebbcg ,string (_ddeg ));continue ;};};_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_gdbg ,charcodes ,_cbedg .isCIDFont (),_afcfg ,_adca );
_gdbd ++;_ebbcg =append (_ebbcg ,_bde .MissingCodeString );};if _gdbd !=0{_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_gdbd ,_afcfg );
};return _ebbcg ,len (_ebbcg ),_gdbd ;};var _fagad =_ca .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// SetAction sets the PDF action for the annotation link.
func (_beg *PdfAnnotationLink )SetAction (action *PdfAction ){_beg ._cfcc =action ;if action ==nil {_beg .A =nil ;};};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_ddaee *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ddaee .AlternateSpace ==nil {return nil ,_ged .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _ddaee .AlternateSpace .ColorToRGB (color );};

// String returns a string representation of what flags are set.
func (_gdfg FieldFlag )String ()string {_fbgc :="";if _gdfg ==FieldFlagClear {_fbgc ="\u0043\u006c\u0065a\u0072";return _fbgc ;};if _gdfg &FieldFlagReadOnly > 0{_fbgc +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _gdfg &FieldFlagRequired > 0{_fbgc +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";
};if _gdfg &FieldFlagNoExport > 0{_fbgc +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _gdfg &FieldFlagNoToggleToOff > 0{_fbgc +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _gdfg &FieldFlagRadio > 0{_fbgc +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _gdfg &FieldFlagPushbutton > 0{_fbgc +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _gdfg &FieldFlagRadiosInUnision > 0{_fbgc +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _gdfg &FieldFlagMultiline > 0{_fbgc +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _gdfg &FieldFlagPassword > 0{_fbgc +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _gdfg &FieldFlagFileSelect > 0{_fbgc +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _gdfg &FieldFlagDoNotScroll > 0{_fbgc +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _gdfg &FieldFlagComb > 0{_fbgc +="\u007c\u0043\u006fm\u0062";};if _gdfg &FieldFlagRichText > 0{_fbgc +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _gdfg &FieldFlagDoNotSpellCheck > 0{_fbgc +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _gdfg &FieldFlagCombo > 0{_fbgc +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _gdfg &FieldFlagEdit > 0{_fbgc +="\u007c\u0045\u0064i\u0074";};if _gdfg &FieldFlagSort > 0{_fbgc +="\u007c\u0053\u006fr\u0074";};if _gdfg &FieldFlagMultiSelect > 0{_fbgc +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _gdfg &FieldFlagCommitOnSelChange > 0{_fbgc +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _ba .Trim (_fbgc ,"\u007c");};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_ggdb *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_fcca :=_faf .NewReader (img .getBase ());_aebd :=_cg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_agea :=_faf .NewWriter (_aebd );
_cdgf :=_cb .Pow (2,float64 (img .BitsPerComponent ))-1;_afda :=make ([]uint32 ,3);var (_dcbcc uint32 ;ANorm ,X ,Y ,Z ,_eeeb ,_edba ,_abaf float64 ;_bceca error ;);for {_dcbcc ,_bceca =_fcca .ReadSample ();if _bceca ==_fe .EOF {break ;}else if _bceca !=nil {return img ,_bceca ;
};ANorm =float64 (_dcbcc )/_cdgf ;X =_ggdb .WhitePoint [0]*_cb .Pow (ANorm ,_ggdb .Gamma );Y =_ggdb .WhitePoint [1]*_cb .Pow (ANorm ,_ggdb .Gamma );Z =_ggdb .WhitePoint [2]*_cb .Pow (ANorm ,_ggdb .Gamma );_eeeb =3.240479*X +-1.537150*Y +-0.498535*Z ;_edba =-0.969256*X +1.875992*Y +0.041556*Z ;
_abaf =0.055648*X +-0.204043*Y +1.057311*Z ;_eeeb =_cb .Min (_cb .Max (_eeeb ,0),1.0);_edba =_cb .Min (_cb .Max (_edba ,0),1.0);_abaf =_cb .Min (_cb .Max (_abaf ,0),1.0);_afda [0]=uint32 (_eeeb *_cdgf );_afda [1]=uint32 (_edba *_cdgf );_afda [2]=uint32 (_abaf *_cdgf );
if _bceca =_agea .WriteSamples (_afda );_bceca !=nil {return img ,_bceca ;};};return _dbge (&_aebd ),nil ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_aabf *PdfFieldText )ToPdfObject ()_fb .PdfObject {_aabf .PdfField .ToPdfObject ();_fefef :=_aabf ._ecgg ;_fcbg :=_fefef .PdfObject .(*_fb .PdfObjectDictionary );_fcbg .Set ("\u0046\u0054",_fb .MakeName ("\u0054\u0078"));if _aabf .DA !=nil {_fcbg .Set ("\u0044\u0041",_aabf .DA );
};if _aabf .Q !=nil {_fcbg .Set ("\u0051",_aabf .Q );};if _aabf .DS !=nil {_fcbg .Set ("\u0044\u0053",_aabf .DS );};if _aabf .RV !=nil {_fcbg .Set ("\u0052\u0056",_aabf .RV );};if _aabf .MaxLen !=nil {_fcbg .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_aabf .MaxLen );
};return _fefef ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_ccdf :=&PdfColorspaceCalGray {};_ccdf .BlackPoint =[]float64 {0.0,0.0,0.0};_ccdf .Gamma =1;return _ccdf ;};type pdfCIDFontType2 struct{fontCommon ;_ddfg *_fb .PdfIndirectObject ;_bebbc _ff .TextEncoder ;


// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_fb .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _fb .PdfObject ;W _fb .PdfObject ;DW2 _fb .PdfObject ;W2 _fb .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _fb .PdfObject ;_gdgefc map[_ff .CharCode ]float64 ;_ddgfa float64 ;_dbeg map[rune ]int ;};func (_fdec *PdfReader )newPdfAnnotationUnderlineFromDict (_ccba *_fb .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_cea :=PdfAnnotationUnderline {};
_febb ,_cfgca :=_fdec .newPdfAnnotationMarkupFromDict (_ccba );if _cfgca !=nil {return nil ,_cfgca ;};_cea .PdfAnnotationMarkup =_febb ;_cea .QuadPoints =_ccba .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_cea ,nil ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_dfecb *PdfShading )GetContainingPdfObject ()_fb .PdfObject {return _dfecb ._fcfag };

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_ff .SimpleEncoder ,error ){_fdcdb ,_ceaf :=_eaebbg (basefont );if _ceaf !=nil {return nil ,nil ,_ceaf ;};_fffc ,_cbgae :=_fdcdb .Encoder ().(_ff .SimpleEncoder );
if !_cbgae {return nil ,nil ,_d .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_fdcdb .Encoder ());
};_dddeg :=make (map[rune ]_ff .GlyphName );for _ddcb :=range alphabet {if _ ,_daca :=_fffc .RuneToCharcode (_ddcb );!_daca {_ ,_fbed :=_fdcdb ._caafde .Read (_ddcb );if !_fbed {_ef .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_ddcb ,_ddcb );
continue ;};_aeca ,_fbed :=_ff .RuneToGlyph (_ddcb );if !_fbed {_ef .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_ddcb ,_ddcb );continue ;};if len (_dddeg )>=255{return nil ,nil ,_ged .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_dddeg [_ddcb ]=_aeca ;};};var (_dafffc []_ff .CharCode ;_dccd []_ff .CharCode ;);for _fgdcd :=_ff .CharCode (1);_fgdcd <=0xff;_fgdcd ++{_ffcf ,_bcdd :=_fffc .CharcodeToRune (_fgdcd );if !_bcdd {_dafffc =append (_dafffc ,_fgdcd );continue ;};if _ ,_bcdd =alphabet [_ffcf ];
!_bcdd {_dccd =append (_dccd ,_fgdcd );};};_agbf :=append (_dafffc ,_dccd ...);if len (_agbf )< len (_dddeg ){return nil ,nil ,_d .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_dddeg ),len (_agbf ));
};_aegfb :=make ([]rune ,0,len (_dddeg ));for _acaa :=range _dddeg {_aegfb =append (_aegfb ,_acaa );};_fa .Slice (_aegfb ,func (_dcfaa ,_cfaeb int )bool {return _aegfb [_dcfaa ]< _aegfb [_cfaeb ]});_ecce :=make (map[_ff .CharCode ]_ff .GlyphName ,len (_aegfb ));
for _ ,_dbagf :=range _aegfb {_dbbb :=_agbf [0];_agbf =_agbf [1:];_ecce [_dbbb ]=_dddeg [_dbagf ];};_fffc =_ff .ApplyDifferences (_fffc ,_ecce );_fdcdb .SetEncoder (_fffc );return &PdfFont {_gccg :&_fdcdb },_fffc ,nil ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_ebbae *PdfFieldSignature )ToPdfObject ()_fb .PdfObject {if _ebbae .PdfAnnotationWidget !=nil {_ebbae .PdfAnnotationWidget .ToPdfObject ();};_ebbae .PdfField .ToPdfObject ();_aaedc :=_ebbae ._ecgg ;_abcc :=_aaedc .PdfObject .(*_fb .PdfObjectDictionary );
_abcc .SetIfNotNil ("\u0046\u0054",_fb .MakeName ("\u0053\u0069\u0067"));_abcc .SetIfNotNil ("\u004c\u006f\u0063\u006b",_ebbae .Lock );_abcc .SetIfNotNil ("\u0053\u0056",_ebbae .SV );if _ebbae .V !=nil {_abcc .SetIfNotNil ("\u0056",_ebbae .V .ToPdfObject ());
};return _aaedc ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_fgcf *PdfAcroForm ,_egfg *PdfField ,_gcdgg *PdfAnnotationWidget )(*_fb .PdfObjectDictionary ,error );};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_bce :=NewPdfAnnotation ();_bceb :=&PdfAnnotationSound {};_bceb .PdfAnnotation =_bce ;_bceb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bce .SetContext (_bceb );return _bceb ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _fb .PdfObject ;BS _fb .PdfObject ;LE _fb .PdfObject ;IC _fb .PdfObject ;LL _fb .PdfObject ;LLE _fb .PdfObject ;Cap _fb .PdfObject ;IT _fb .PdfObject ;LLO _fb .PdfObject ;CP _fb .PdfObject ;
Measure _fb .PdfObject ;CO _fb .PdfObject ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_afcdg *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _dcgf []_ff .TextEncoder ;var _eecc _ff .CMapEncoder ;if _ebgf :=_afcdg .baseFields ()._fadd ;_ebgf !=nil {_eecc =_ff .NewCMapEncoder ("",nil ,_ebgf );};_febea :=_afcdg .Encoder ();
if _febea !=nil {switch _bdec :=_febea .(type ){case _ff .SimpleEncoder :_badd :=_bdec .BaseName ();if _ ,_dabbe :=_fddc [_badd ];_dabbe {_dcgf =append (_dcgf ,_febea );};};};if len (_dcgf )==0{if _afcdg .baseFields ()._fadd !=nil {_dcgf =append (_dcgf ,_eecc );
};if _febea !=nil {_dcgf =append (_dcgf ,_febea );};};var _deeeb _cbg .Buffer ;var _bbbae int ;for _ ,_afag :=range data {var _eage bool ;for _ ,_cbbdfb :=range _dcgf {if _aeeef :=_cbbdfb .Encode (string (_afag ));len (_aeeef )> 0{_deeeb .Write (_aeeef );
_eage =true ;break ;};};if !_eage {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_afag );
_bbbae ++;};};if _bbbae !=0{_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_bbbae ,_afcdg ,_dcgf );
};return _deeeb .Bytes (),_bbbae ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_fbdf *PdfPageResources )GetXObjectImageByName (keyName _fb .PdfObjectName )(*XObjectImage ,error ){_eddba ,_ecedg :=_fbdf .GetXObjectByName (keyName );if _eddba ==nil {return nil ,nil ;};if _ecedg !=XObjectTypeImage {return nil ,_ged .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_abdaf ,_ebbcgd :=NewXObjectImageFromStream (_eddba );if _ebbcgd !=nil {return nil ,_ebbcgd ;};return _abdaf ,nil ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_fb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_age *PdfAnnotationSound )ToPdfObject ()_fb .PdfObject {_age .PdfAnnotation .ToPdfObject ();_caecd :=_age ._fcf ;_fggb :=_caecd .PdfObject .(*_fb .PdfObjectDictionary );_age .PdfAnnotationMarkup .appendToPdfDictionary (_fggb );_fggb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0053\u006f\u0075n\u0064"));
_fggb .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_age .Sound );_fggb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_age .Name );return _caecd ;};func (_bfdb *PdfAppender )mergeResources (_ggfa ,_ggfg _fb .PdfObject ,_abbe map[_fb .PdfObjectName ]_fb .PdfObjectName )_fb .PdfObject {if _ggfg ==nil &&_ggfa ==nil {return nil ;
};if _ggfg ==nil {return _ggfa ;};_bcae ,_fced :=_fb .GetDict (_ggfg );if !_fced {return _ggfa ;};if _ggfa ==nil {_abbf :=_fb .MakeDict ();_abbf .Merge (_bcae );return _ggfg ;};_cbf ,_fced :=_fb .GetDict (_ggfa );if !_fced {_ef .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_cbf =_fb .MakeDict ();};for _ ,_aff :=range _bcae .Keys (){if _ffdd ,_dggf :=_abbe [_aff ];_dggf {_cbf .Set (_ffdd ,_bcae .Get (_aff ));}else {_cbf .Set (_aff ,_bcae .Get (_aff ));};};return _cbf ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_fdcb *PdfColorspaceLab )DecodeArray ()[]float64 {_ffbf :=[]float64 {0,100};if _fdcb .Range !=nil &&len (_fdcb .Range )==4{_ffbf =append (_ffbf ,_fdcb .Range ...);}else {_ffbf =append (_ffbf ,-100,100,-100,100);};return _ffbf ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_ggfea *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _fb .GetNumberAsFloat (_ggfea .CapHeight );};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_dcae *PdfColorCalGray )GetNumComponents ()int {return 1};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_addf *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_fb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dabc ,_face :=_fb .GetNumbersAsFloat (objects );
if _face !=nil {return nil ,_face ;};return _addf .ColorFromFloats (_dabc );};

// String returns a string representation of the field.
func (_gdcgf *PdfField )String ()string {if _eccd ,_caaf :=_gdcgf .ToPdfObject ().(*_fb .PdfIndirectObject );_caaf {return _d .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_gdcgf ._dcfa ,_eccd .PdfObject .String ());};return "";};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_fgfa *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_ged .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_degac ,_eaae :=_cg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._feec ,img ._fcgee );if _eaae !=nil {return img ,_eaae ;};_adfc ,_eaae :=_cg .NRGBAConverter .Convert (_degac );if _eaae !=nil {return img ,_eaae ;
};_ggbe :=_dbge (_adfc .Base ());_ef .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_ef .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_ef .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_ggbe .Data );
_ef .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_ggbe );return _ggbe ,nil ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_fcbe *PdfShadingPattern )ToPdfObject ()_fb .PdfObject {_fcbe .PdfPattern .ToPdfObject ();_dfbc :=_fcbe .getDict ();if _fcbe .Shading !=nil {_dfbc .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_fcbe .Shading .ToPdfObject ());};if _fcbe .Matrix !=nil {_dfbc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fcbe .Matrix );
};if _fcbe .ExtGState !=nil {_dfbc .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_fcbe .ExtGState );};return _fcbe ._bfgge ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gdabf *PdfShading )ToPdfObject ()_fb .PdfObject {_aefd :=_gdabf ._fcfag ;_adeef ,_ddgea :=_gdabf .getShadingDict ();if _ddgea !=nil {_ef .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gdabf .ShadingType !=nil {_adeef .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_gdabf .ShadingType );};if _gdabf .ColorSpace !=nil {_adeef .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_gdabf .ColorSpace .ToPdfObject ());
};if _gdabf .Background !=nil {_adeef .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_gdabf .Background );};if _gdabf .BBox !=nil {_adeef .Set ("\u0042\u0042\u006f\u0078",_gdabf .BBox .ToPdfObject ());};if _gdabf .AntiAlias !=nil {_adeef .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_gdabf .AntiAlias );
};return _aefd ;};func (_cgdd *PdfReader )newPdfActionRenditionFromDict (_fca *_fb .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_fca .Get ("\u0052"),AN :_fca .Get ("\u0041\u004e"),OP :_fca .Get ("\u004f\u0050"),JS :_fca .Get ("\u004a\u0053")},nil ;
};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_dbce *PdfPageResources )SetXObjectByName (keyName _fb .PdfObjectName ,stream *_fb .PdfObjectStream )error {if _dbce .XObject ==nil {_dbce .XObject =_fb .MakeDict ();};_dcbdga :=_fb .TraceToDirectObject (_dbce .XObject );_gfccc ,_gbdgeb :=_dcbdga .(*_fb .PdfObjectDictionary );
if !_gbdgeb {_ef .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_dbce .XObject ,_dcbdga );return _ged .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_gfccc .Set (keyName ,stream );return nil ;};func _afcfc (_bdcba *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_gdeae ,_ggca :=_fb .GetDict (_bdcba .AP );if !_ggca {return nil ,nil ,_ged .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");
};if _gdeae ==nil {return nil ,nil ,nil ;};_dfgfa ,_ggca :=_fb .GetArray (_bdcba .Rect );if !_ggca ||_dfgfa .Len ()!=4{return nil ,nil ,_ged .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_ceegc ,_agbd :=NewPdfRectangle (*_dfgfa );
if _agbd !=nil {return nil ,nil ,_agbd ;};_bcdbg :=_fb .TraceToDirectObject (_gdeae .Get ("\u004e"));switch _fcecb :=_bcdbg .(type ){case *_fb .PdfObjectStream :_gfgd :=_fcecb ;_cgdb ,_ddcfb :=NewXObjectFormFromStream (_gfgd );return _cgdb ,_ceegc ,_ddcfb ;
case *_fb .PdfObjectDictionary :_bffcf :=_fcecb ;_dadfg ,_aaae :=_fb .GetName (_bdcba .AS );if !_aaae {return nil ,nil ,nil ;};if _bffcf .Get (*_dadfg )==nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_gbaf ,_aaae :=_fb .GetStream (_bffcf .Get (*_dadfg ));if !_aaae {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_dadfg );
return nil ,nil ,_ged .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_cdbe ,_cbff :=NewXObjectFormFromStream (_gbaf );return _cdbe ,_ceegc ,_cbff ;};_ef .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_bcdbg );
return nil ,nil ,_ged .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};func (_bdc *PdfReader )newPdfActionSubmitFormFromDict (_cfbc *_fb .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_egg ,_bcf :=_agad (_cfbc .Get ("\u0046"));
if _bcf !=nil {return nil ,_bcf ;};return &PdfActionSubmitForm {F :_egg ,Fields :_cfbc .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_cfbc .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// String returns a string describing the font descriptor.
func (_eeded *PdfFontDescriptor )String ()string {var _cbac []string ;if _eeded .FontName !=nil {_cbac =append (_cbac ,_eeded .FontName .String ());};if _eeded .FontFamily !=nil {_cbac =append (_cbac ,_eeded .FontFamily .String ());};if _eeded .fontFile !=nil {_cbac =append (_cbac ,_eeded .fontFile .String ());
};if _eeded ._gbdd !=nil {_cbac =append (_cbac ,_eeded ._gbdd .String ());};_cbac =append (_cbac ,_d .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_eeded .FontFile3 !=nil ));return _d .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_ba .Join (_cbac ,"\u002c\u0020"));
};func (_afe *PdfReader )newPdfAnnotationSoundFromDict (_bcgbb *_fb .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_cbge :=PdfAnnotationSound {};_ecgf ,_fdgf :=_afe .newPdfAnnotationMarkupFromDict (_bcgbb );if _fdgf !=nil {return nil ,_fdgf ;};_cbge .PdfAnnotationMarkup =_ecgf ;
_cbge .Name =_bcgbb .Get ("\u004e\u0061\u006d\u0065");_cbge .Sound =_bcgbb .Get ("\u0053\u006f\u0075n\u0064");return &_cbge ,nil ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _fb .PdfObject ;LE _fb .PdfObject ;BS _fb .PdfObject ;IC _fb .PdfObject ;BE _fb .PdfObject ;IT _fb .PdfObject ;Measure _fb .PdfObject ;};func (_deg *PdfReader )newPdfAnnotationPopupFromDict (_fgde *_fb .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_acc :=PdfAnnotationPopup {};
_acc .Parent =_fgde .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_acc .Open =_fgde .Get ("\u004f\u0070\u0065\u006e");return &_acc ,nil ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_feed :=NewPdfAnnotation ();_ebg :=&PdfAnnotationCircle {};_ebg .PdfAnnotation =_feed ;_ebg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_feed .SetContext (_ebg );return _ebg ;};

// ToPdfObject implements interface PdfModel.
func (_bfdeb *PdfSignature )ToPdfObject ()_fb .PdfObject {_dgge :=_bfdeb ._bdccg ;var _defge *_fb .PdfObjectDictionary ;if _ddgb ,_ffffb :=_dgge .PdfObject .(*pdfSignDictionary );_ffffb {_defge =_ddgb .PdfObjectDictionary ;}else {_defge =_dgge .PdfObject .(*_fb .PdfObjectDictionary );
};_defge .SetIfNotNil ("\u0054\u0079\u0070\u0065",_bfdeb .Type );_defge .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_bfdeb .Filter );_defge .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_bfdeb .SubFilter );_defge .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_bfdeb .ByteRange );
_defge .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bfdeb .Contents );_defge .SetIfNotNil ("\u0043\u0065\u0072\u0074",_bfdeb .Cert );_defge .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bfdeb .Name );_defge .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_bfdeb .Reason );
_defge .SetIfNotNil ("\u004d",_bfdeb .M );_defge .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_bfdeb .Reference );_defge .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_bfdeb .Changes );_defge .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_bfdeb .ContactInfo );
return _dgge ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_bcdg *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_dfbgeg *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_addc :=NewPdfOutlineItem ();_addc .Title =_fb .MakeEncodedString (_dfbgeg .Title ,true );_addc .Dest =_dfbgeg .Dest .ToPdfObject ();var _gbfeb []*PdfOutlineItem ;var _bcagb int64 ;
var _gdgac *PdfOutlineItem ;for _ ,_cegfd :=range _dfbgeg .Entries {_bfffa ,_gbcdc :=_cegfd .ToPdfOutlineItem ();_bfffa .Parent =&_addc .PdfOutlineTreeNode ;if _gdgac !=nil {_gdgac .Next =&_bfffa .PdfOutlineTreeNode ;_bfffa .Prev =&_gdgac .PdfOutlineTreeNode ;
};_gbfeb =append (_gbfeb ,_bfffa );_bcagb +=_gbcdc ;_gdgac =_bfffa ;};_bfgc :=len (_gbfeb );_bcagb +=int64 (_bfgc );if _bfgc > 0{_addc .First =&_gbfeb [0].PdfOutlineTreeNode ;_addc .Last =&_gbfeb [_bfgc -1].PdfOutlineTreeNode ;_addc .Count =&_bcagb ;};
return _addc ,_bcagb ;};func (_efdd *PdfReader )newPdfActionSoundFromDict (_ccaa *_fb .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_ccaa .Get ("\u0053\u006f\u0075n\u0064"),Volume :_ccaa .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_ccaa .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_ccaa .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_ccaa .Get ("\u004d\u0069\u0078")},nil ;
};

// Encrypt encrypts the output file with a specified user/owner password.
func (_fedf *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_gfeff :=RC4_128bit ;if options !=nil {_gfeff =options .Algorithm ;};_ecfdg :=_ag .PermOwner ;if options !=nil {_ecfdg =options .Permissions ;};var _bdfeb _fac .Filter ;
switch _gfeff {case RC4_128bit :_bdfeb =_fac .NewFilterV2 (16);case AES_128bit :_bdfeb =_fac .NewFilterAESV2 ();case AES_256bit :_bdfeb =_fac .NewFilterAESV3 ();default:return _d .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_fgdac ,_bgecg ,_eddec :=_fb .PdfCryptNewEncrypt (_bdfeb ,userPass ,ownerPass ,_ecfdg );if _eddec !=nil {return _eddec ;};_fedf ._fafcg =_fgdac ;if _bgecg .Major !=0{_fedf .SetVersion (_bgecg .Major ,_bgecg .Minor );};_fedf ._faddf =_bgecg .Encrypt ;
_fedf ._gcdff ,_fedf ._cfggc =_bgecg .ID0 ,_bgecg .ID1 ;_ebgdf :=_fb .MakeIndirectObject (_bgecg .Encrypt );_fedf ._dedec =_ebgdf ;_fedf .addObject (_ebgdf );return nil ;};func (_aca *PdfAnnotation )String ()string {_cecg :="";_abbbb ,_dcdc :=_aca .ToPdfObject ().(*_fb .PdfIndirectObject );
if _dcdc {_cecg =_d .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_aca ._dfdg ,_abbbb .PdfObject .String ());};return _cecg ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_fccg ,_bbcc :=_bb .NewStdFontByName (HelveticaName );if !_bbcc {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_gdgef :=_ffefb (_fccg );return &PdfFont {_gccg :&_gdgef };};

// ToPdfObject implements interface PdfModel.
func (_gcfd *PdfAnnotationInk )ToPdfObject ()_fb .PdfObject {_gcfd .PdfAnnotation .ToPdfObject ();_cdbc :=_gcfd ._fcf ;_adgbe :=_cdbc .PdfObject .(*_fb .PdfObjectDictionary );_gcfd .PdfAnnotationMarkup .appendToPdfDictionary (_adgbe );_adgbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0049\u006e\u006b"));
_adgbe .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_gcfd .InkList );_adgbe .SetIfNotNil ("\u0042\u0053",_gcfd .BS );return _cdbc ;};

// ToPdfObject implements interface PdfModel.
func (_cba *PdfActionSetOCGState )ToPdfObject ()_fb .PdfObject {_cba .PdfAction .ToPdfObject ();_agd :=_cba ._db ;_bdb :=_agd .PdfObject .(*_fb .PdfObjectDictionary );_bdb .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeSetOCGState )));_bdb .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_cba .State );
_bdb .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_cba .PreserveRB );return _agd ;};

// SetForms sets the Acroform for a PDF file.
func (_deceb *PdfWriter )SetForms (form *PdfAcroForm )error {_deceb ._dbbg =form ;return nil };

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// GetCustomInfo returns a custom info value for the specified name.
func (_cfbg *PdfInfo )GetCustomInfo (name string )*_fb .PdfObjectString {var _bedd *_fb .PdfObjectString ;if _cfbg ._fgfad ==nil {return _bedd ;};if _gbfe ,_cdcb :=_cfbg ._fgfad .Get (*_fb .MakeName (name )).(*_fb .PdfObjectString );_cdcb {_bedd =_gbfe ;
};return _bedd ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_dfbae *PdfFont )SubsetRegistered ()error {switch _bffeg :=_dfbae ._gccg .(type ){case *pdfFontType0 :_gfeb :=_bffeg .subsetRegistered ();if _gfeb !=nil {_ef .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_gfeb );
return _gfeb ;};if _bffeg ._acfaf !=nil {if _bffeg ._eeaeg !=nil {_bffeg ._eeaeg .ToPdfObject ();};_bffeg .ToPdfObject ();};default:_ef .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_bffeg );
};return nil ;};func (_bceg *PdfReader )newPdfAnnotationTrapNetFromDict (_gcef *_fb .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_cbcdf :=PdfAnnotationTrapNet {};return &_cbcdf ,nil ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_cddae *_fb .PdfIndirectObject ;};func (_aacc *DSS )generateHashMaps ()error {_feeed ,_acabd :=_aacc .generateHashMap (_aacc .Certs );if _acabd !=nil {return _acabd ;
};_eggg ,_acabd :=_aacc .generateHashMap (_aacc .OCSPs );if _acabd !=nil {return _acabd ;};_fdbd ,_acabd :=_aacc .generateHashMap (_aacc .CRLs );if _acabd !=nil {return _acabd ;};_aacc ._gcdc =_feeed ;_aacc ._gcaag =_eggg ;_aacc ._gaggea =_fdbd ;return nil ;
};func (_bgccea *PdfWriter )checkPendingObjects (){for _feege ,_abfae :=range _bgccea ._cbbdb {if !_bgccea .hasObject (_feege ){_ef .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_feege ,_feege ,_feege );
for _ ,_edeaag :=range _abfae {for _ ,_fafae :=range _edeaag .Keys (){_edeab :=_edeaag .Get (_fafae );if _edeab ==_feege {_ef .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_edeaag .Set (_fafae ,_fb .MakeNull ());break ;};};};};};};

// Add appends a top level outline item to the outline.
func (_bdebb *Outline )Add (item *OutlineItem ){_bdebb .Entries =append (_bdebb .Entries ,item )};func (_gegda *PdfWriter )writeBytes (_bcaecf []byte ){if _gegda ._efdba !=nil {return ;};_adddb ,_bbbbb :=_gegda ._cafc .Write (_bcaecf );_gegda ._cbeba +=int64 (_adddb );
_gegda ._efdba =_bbbbb ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_bgce *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _bgce ._cabgd .(*PdfTilingPattern );};func (_gdfec *PdfReader )loadStructure ()error {if _gdfec ._gfcg .GetCrypter ()!=nil &&!_gdfec ._gfcg .IsAuthenticated (){return _d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_bfceb :=_gdfec ._gfcg .GetTrailer ();if _bfceb ==nil {return _d .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_gdebc ,_cfbged :=_bfceb .Get ("\u0052\u006f\u006f\u0074").(*_fb .PdfObjectReference );if !_cfbged {return _d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_bfceb );
};_eeagd ,_adeb :=_gdfec ._gfcg .LookupByReference (*_gdebc );if _adeb !=nil {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_adeb );
return _adeb ;};_defbba ,_cfbged :=_eeagd .(*_fb .PdfIndirectObject );if !_cfbged {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_eeagd ,*_bfceb );
return _ged .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_fega ,_cfbged :=(*_defbba ).PdfObject .(*_fb .PdfObjectDictionary );if !_cfbged {_ef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_defbba .PdfObject );
return _ged .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_ef .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_fega );_cgbaa ,_cfbged :=_fega .Get ("\u0050\u0061\u0067e\u0073").(*_fb .PdfObjectReference );
if !_cfbged {return _ged .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_fceda ,_adeb :=_gdfec ._gfcg .LookupByReference (*_cgbaa );
if _adeb !=nil {_ef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _adeb ;};_faggg ,_cfbged :=_fceda .(*_fb .PdfIndirectObject );if !_cfbged {_ef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_ef .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_faggg );return _ged .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_dfage ,_cfbged :=_faggg .PdfObject .(*_fb .PdfObjectDictionary );if !_cfbged {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_faggg );
return _ged .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_cdede ,_cfbged :=_fb .GetInt (_dfage .Get ("\u0043\u006f\u0075n\u0074"));if !_cfbged {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _ged .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_cfbged =_fb .GetName (_dfage .Get ("\u0054\u0079\u0070\u0065"));!_cfbged {_ef .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_dfage .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0050\u0061\u0067e\u0073"));};if _bcdbe ,_dbeea :=_fb .GetInt (_dfage .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_dbeea {_ffecg :=int64 (*_bcdbe );_gdfec .Rotate =&_ffecg ;};_gdfec ._ebbcd =_gdebc ;
_gdfec ._babag =_fega ;_gdfec ._gbcfc =_dfage ;_gdfec ._ebgba =_faggg ;_gdfec ._cfcfe =int (*_cdede );_gdfec ._gcbf =[]*_fb .PdfIndirectObject {};_fcgeg :=map[_fb .PdfObject ]struct{}{};_adeb =_gdfec .buildPageList (_faggg ,nil ,_fcgeg );if _adeb !=nil {return _adeb ;
};_ef .Log .Trace ("\u002d\u002d\u002d");_ef .Log .Trace ("\u0054\u004f\u0043");_ef .Log .Trace ("\u0050\u0061\u0067e\u0073");_ef .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_gdfec ._gcbf ),_gdfec ._gcbf );_gdfec ._acbd ,_adeb =_gdfec .loadOutlines ();
if _adeb !=nil {_ef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_adeb );
return _adeb ;};_gdfec .AcroForm ,_adeb =_gdfec .loadForms ();if _adeb !=nil {return _adeb ;};_gdfec .DSS ,_adeb =_gdfec .loadDSS ();if _adeb !=nil {return _adeb ;};_gdfec ._fgaa ,_adeb =_gdfec .loadPerms ();if _adeb !=nil {return _adeb ;};return nil ;
};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_gcda *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _gcda .RunesToCharcodeBytes ([]rune (str ));};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _fb .PdfObject ;Name _fb .PdfObject ;};func (_bcddb *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _bcddb ._gcge };

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_efg :=NewPdfAction ();_fdgc :=&PdfActionURI {};_fdgc .PdfAction =_efg ;_efg .SetContext (_fdgc );return _fdgc ;};func (_bbbdb *fontFile )loadFromSegments (_eedg ,_fgcag []byte )error {_ef .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_eedg ),len (_fgcag ));
_cgfg :=_bbbdb .parseASCIIPart (_eedg );if _cgfg !=nil {return _cgfg ;};_ef .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_bbbdb );if len (_fgcag )==0{return nil ;};_ef .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_bbbdb );
return nil ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_gab :=NewPdfAnnotation ();_egd :=&PdfAnnotationMovie {};_egd .PdfAnnotation =_gab ;_gab .SetContext (_egd );return _egd ;};func (_afead *PdfWriter )copyObject (_cefebc _fb .PdfObject ,_gdfgc map[_fb .PdfObject ]_fb .PdfObject ,_dffg map[_fb .PdfObject ]struct{},_aecad bool )_fb .PdfObject {_agda :=!_afead ._gdagb &&_dffg !=nil ;
if _afbab ,_cgcf :=_gdfgc [_cefebc ];_cgcf {if _agda &&!_aecad {delete (_dffg ,_cefebc );};return _afbab ;};_aeaac :=_cefebc ;switch _afff :=_cefebc .(type ){case *_fb .PdfObjectArray :_cgddf :=_fb .MakeArray ();_aeaac =_cgddf ;_gdfgc [_cefebc ]=_aeaac ;
for _ ,_dgfe :=range _afff .Elements (){_cgddf .Append (_afead .copyObject (_dgfe ,_gdfgc ,_dffg ,_aecad ));};case *_fb .PdfObjectStreams :_ddcbg :=&_fb .PdfObjectStreams {PdfObjectReference :_afff .PdfObjectReference };_aeaac =_ddcbg ;_gdfgc [_cefebc ]=_aeaac ;
for _ ,_aacfb :=range _afff .Elements (){_ddcbg .Append (_afead .copyObject (_aacfb ,_gdfgc ,_dffg ,_aecad ));};case *_fb .PdfObjectStream :_cbce :=&_fb .PdfObjectStream {Stream :_afff .Stream ,PdfObjectReference :_afff .PdfObjectReference };_aeaac =_cbce ;
_gdfgc [_cefebc ]=_aeaac ;_cbce .PdfObjectDictionary =_afead .copyObject (_afff .PdfObjectDictionary ,_gdfgc ,_dffg ,_aecad ).(*_fb .PdfObjectDictionary );case *_fb .PdfObjectDictionary :var _abfac bool ;if _agda &&!_aecad {if _bbaae ,_ :=_fb .GetNameVal (_afff .Get ("\u0054\u0079\u0070\u0065"));
_bbaae =="\u0050\u0061\u0067\u0065"{_ ,_fgbfag :=_afead ._gabbc [_afff ];_aecad =!_fgbfag ;_abfac =_aecad ;};};_fbcdb :=_fb .MakeDict ();_aeaac =_fbcdb ;_gdfgc [_cefebc ]=_aeaac ;for _ ,_agebf :=range _afff .Keys (){_fbcdb .Set (_agebf ,_afead .copyObject (_afff .Get (_agebf ),_gdfgc ,_dffg ,_aecad ));
};if _abfac {_aeaac =_fb .MakeNull ();_aecad =false ;};case *_fb .PdfIndirectObject :_fgbg :=&_fb .PdfIndirectObject {PdfObjectReference :_afff .PdfObjectReference };_aeaac =_fgbg ;_gdfgc [_cefebc ]=_aeaac ;_fgbg .PdfObject =_afead .copyObject (_afff .PdfObject ,_gdfgc ,_dffg ,_aecad );
case *_fb .PdfObjectString :_dedafb :=*_afff ;_aeaac =&_dedafb ;_gdfgc [_cefebc ]=_aeaac ;case *_fb .PdfObjectName :_dfbfe :=*_afff ;_aeaac =&_dfbfe ;_gdfgc [_cefebc ]=_aeaac ;case *_fb .PdfObjectNull :_aeaac =_fb .MakeNull ();_gdfgc [_cefebc ]=_aeaac ;
case *_fb .PdfObjectInteger :_agabe :=*_afff ;_aeaac =&_agabe ;_gdfgc [_cefebc ]=_aeaac ;case *_fb .PdfObjectReference :_adcaab :=*_afff ;_aeaac =&_adcaab ;_gdfgc [_cefebc ]=_aeaac ;case *_fb .PdfObjectFloat :_dbccc :=*_afff ;_aeaac =&_dbccc ;_gdfgc [_cefebc ]=_aeaac ;
case *_fb .PdfObjectBool :_fdgbf :=*_afff ;_aeaac =&_fdgbf ;_gdfgc [_cefebc ]=_aeaac ;case *pdfSignDictionary :_gfagc :=&pdfSignDictionary {PdfObjectDictionary :_fb .MakeDict (),_eegeeg :_afff ._eegeeg ,_bbcec :_afff ._bbcec };_aeaac =_gfagc ;_gdfgc [_cefebc ]=_aeaac ;
for _ ,_fecad :=range _afff .Keys (){_gfagc .Set (_fecad ,_afead .copyObject (_afff .Get (_fecad ),_gdfgc ,_dffg ,_aecad ));};default:_ef .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_cefebc );
};if _agda &&_aecad {_dffg [_cefebc ]=struct{}{};};return _aeaac ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_egbd *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddba :=vals [0];if _ddba < 0.0||_ddba > 1.0{_ef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ddba );
return nil ,ErrColorOutOfRange ;};_ceaa :=vals [1];if _ceaa < 0.0||_ceaa > 1.0{_ef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_ceaa );return nil ,ErrColorOutOfRange ;
};_edfa :=vals [2];if _edfa < 0.0||_edfa > 1.0{_ef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_edfa );return nil ,ErrColorOutOfRange ;};_adcgg :=NewPdfColorCalRGB (_ddba ,_ceaa ,_edfa );
return _adcgg ,nil ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_decd *Image )ToJBIG2Image ()(*_fb .JBIG2Image ,error ){_dbeb ,_dfdad :=_decd .ToGoImage ();if _dfdad !=nil {return nil ,_dfdad ;};return _fb .GoImageToJBIG2 (_dbeb ,_fb .JB2ImageAutoThreshold );};

// Width returns the width of `rect`.
func (_bbbab *PdfRectangle )Width ()float64 {return _cb .Abs (_bbbab .Urx -_bbbab .Llx )};func (_bffb *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};func _agbfe (_ggdd string )(map[_ff .CharCode ]_ff .GlyphName ,error ){_ffga :=_ba .Split (_ggdd ,"\u000a");
_eaff :=make (map[_ff .CharCode ]_ff .GlyphName );for _ ,_cfdc :=range _ffga {_aecf :=_dadb .FindStringSubmatch (_cfdc );if _aecf ==nil {continue ;};_gefea ,_abgc :=_aecf [1],_aecf [2];_bfcce ,_fgeec :=_fge .Atoi (_gefea );if _fgeec !=nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_cfdc );
return nil ,_fb .ErrTypeError ;};_eaff [_ff .CharCode (_bfcce )]=_ff .GlyphName (_abgc );};_ef .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_eaff );
return _eaff ,nil ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_efgb :=PdfPage {};_efgb ._ggafg =_fb .MakeDict ();_efgb .Resources =NewPdfPageResources ();_aggg :=_fb .PdfIndirectObject {};_aggg .PdfObject =_efgb ._ggafg ;_efgb ._bgbgb =&_aggg ;return &_efgb ;};func _gdae (_ffad *_fb .PdfObjectDictionary )(*PdfFieldChoice ,error ){_dbfade :=&PdfFieldChoice {};
_dbfade .Opt ,_ =_fb .GetArray (_ffad .Get ("\u004f\u0070\u0074"));_dbfade .TI ,_ =_fb .GetInt (_ffad .Get ("\u0054\u0049"));_dbfade .I ,_ =_fb .GetArray (_ffad .Get ("\u0049"));return _dbfade ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eb *PdfActionHide )ToPdfObject ()_fb .PdfObject {_eb .PdfAction .ToPdfObject ();_gaef :=_eb ._db ;_afdg :=_gaef .PdfObject .(*_fb .PdfObjectDictionary );_afdg .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeHide )));_afdg .SetIfNotNil ("\u0054",_eb .T );
_afdg .SetIfNotNil ("\u0048",_eb .H );return _gaef ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_fb .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_fb .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_fb .PdfObjectBool ;_efda PdfModel ;_fcfag _fb .PdfObject ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_fgbfa *OutlineItem )Insert (index uint ,item *OutlineItem ){_dcfdg :=uint (len (_fgbfa .Entries ));if index > _dcfdg {index =_dcfdg ;};_fgbfa .Entries =append (_fgbfa .Entries [:index ],append ([]*OutlineItem {item },_fgbfa .Entries [index :]...)...);
};func _cadd (_eddg *_fb .PdfObjectDictionary ){_ecde ,_daaa :=_fb .GetArray (_eddg .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));_efeg ,_fcae :=_fb .GetIntVal (_eddg .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));_eddge ,_ccgad :=_fb .GetIntVal (_eddg .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));
if _daaa &&_fcae &&_ccgad {_gdfca :=_ecde .Len ();if _gdfca !=_eddge -_efeg +1{_ef .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_gdfca ,_eddge );
_faeb :=_fb .PdfObjectInteger (_efeg +_gdfca -1);_eddg .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_faeb );};};};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_ecbbe *PdfPageResources )HasColorspaceByName (keyName _fb .PdfObjectName )bool {_cbfc ,_bceac :=_ecbbe .GetColorspaces ();if _bceac !=nil {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bceac );
return false ;};if _cbfc ==nil {return false ;};_ ,_aedba :=_cbfc .Colorspaces [string (keyName )];return _aedba ;};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// ToPdfObject implements interface PdfModel.
func (_acga *PdfAnnotationStamp )ToPdfObject ()_fb .PdfObject {_acga .PdfAnnotation .ToPdfObject ();_dade :=_acga ._fcf ;_gggb :=_dade .PdfObject .(*_fb .PdfObjectDictionary );_acga .PdfAnnotationMarkup .appendToPdfDictionary (_gggb );_gggb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0053\u0074\u0061m\u0070"));
_gggb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_acga .Name );return _dade ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_edbd *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _edbd .Alternate ==nil {_ef .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _edbd .N ==1{_ef .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_efaeg :=NewPdfColorspaceDeviceGray ();return _efaeg .ColorToRGB (color );}else if _edbd .N ==3{_ef .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _edbd .N ==4{_ef .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_cdbcc :=NewPdfColorspaceDeviceCMYK ();return _cdbcc .ColorToRGB (color );}else {return nil ,_ged .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_ef .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_edbd );
return _edbd .Alternate .ColorToRGB (color );};func _dcgd (_fcge *_fb .PdfObjectDictionary ,_bdac *fontCommon )(*pdfFontType3 ,error ){_ebddb :=_cbbda (_bdac );_ddfgb :=_fcge .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _ddfgb ==nil {_ddfgb =_fb .MakeInteger (0);
};_ebddb .FirstChar =_ddfgb ;_ddbc ,_bbea :=_fb .GetIntVal (_ddfgb );if !_bbea {_ef .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_ddfgb );
return nil ,_fb .ErrTypeError ;};_dfaec :=_ff .CharCode (_ddbc );_ddfgb =_fcge .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _ddfgb ==nil {_ddfgb =_fb .MakeInteger (255);};_ebddb .LastChar =_ddfgb ;_ddbc ,_bbea =_fb .GetIntVal (_ddfgb );
if !_bbea {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_ddfgb );return nil ,_fb .ErrTypeError ;
};_fgbeb :=_ff .CharCode (_ddbc );_ddfgb =_fcge .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _ddfgb !=nil {_ebddb .Resources =_ddfgb ;};_ddfgb =_fcge .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _ddfgb ==nil {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_ddfgb );
return nil ,_fb .ErrNotSupported ;};_ebddb .CharProcs =_ddfgb ;_ddfgb =_fcge .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _ddfgb ==nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_ddfgb );
return nil ,_fb .ErrNotSupported ;};_ebddb .FontMatrix =_ddfgb ;_ebddb ._ddfgd =make (map[_ff .CharCode ]float64 );_ddfgb =_fcge .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _ddfgb !=nil {_ebddb .Widths =_ddfgb ;_daeed ,_abgdg :=_fb .GetArray (_ddfgb );
if !_abgdg {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_ddfgb );return nil ,_fb .ErrTypeError ;
};_bagec ,_bfdfa :=_daeed .ToFloat64Array ();if _bfdfa !=nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_bfdfa ;};if len (_bagec )!=int (_fgbeb -_dfaec +1){_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_fgbeb -_dfaec +1,len (_bagec ));
return nil ,_fb .ErrRangeError ;};_acag ,_abgdg :=_fb .GetArray (_ebddb .FontMatrix );if !_abgdg {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_acag );
return nil ,_bfdfa ;};_bafgg ,_bfdfa :=_acag .ToFloat64Array ();if _bfdfa !=nil {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_bfdfa ;};_ecafb :=_ea .NewMatrix (_bafgg [0],_bafgg [1],_bafgg [2],_bafgg [3],_bafgg [4],_bafgg [5]);for _aega ,_daaae :=range _bagec {_dageg ,_ :=_ecafb .Transform (_daaae ,_daaae );_ebddb ._ddfgd [_dfaec +_ff .CharCode (_aega )]=_dageg ;
};};_ebddb .Encoding =_fb .TraceToDirectObject (_fcge .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));_aeggg :=_fcge .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _aeggg !=nil {_ebddb ._cccfe =_fb .TraceToDirectObject (_aeggg );_cdaf ,_fgad :=_baac (_ebddb ._cccfe ,&_ebddb .fontCommon );
if _fgad !=nil {return nil ,_fgad ;};_ebddb ._fadd =_cdaf ;};if _cdeae :=_ebddb ._fadd ;_cdeae !=nil {_ebddb ._abgda =_ff .NewCMapEncoder ("",nil ,_cdeae );}else {_ebddb ._abgda =_ff .NewPdfDocEncoder ();};return _ebddb ,nil ;};func _effd (_bfbgc *_fb .PdfObjectArray )(float64 ,error ){_bgfdcc ,_efbdd :=_bfbgc .ToFloat64Array ();
if _efbdd !=nil {_ef .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bfbgc ,_efbdd );};switch len (_bgfdcc ){case 1:return _bgfdcc [0],nil ;
case 3:_bcfga :=PdfColorspaceDeviceRGB {};_edbde ,_agdfc :=_bcfga .ColorFromFloats (_bgfdcc );if _agdfc !=nil {return 0.0,_agdfc ;};return _edbde .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_eacg :=PdfColorspaceDeviceCMYK {};_adadb ,_edbga :=_eacg .ColorFromFloats (_bgfdcc );
if _edbga !=nil {return 0.0,_edbga ;};_bdfcac ,_edbga :=_eacg .ColorToRGB (_adadb .(*PdfColorDeviceCMYK ));if _edbga !=nil {return 0.0,_edbga ;};return _bdfcac .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_efbdd =_ged .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");
_ef .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_bfbgc ,_efbdd );return 0.0,_efbdd ;};func _feefa ()_fg .Time {_cdccb .Lock ();defer _cdccb .Unlock ();return _fdeb };
func (_edbf *PdfReader )newPdfAnnotationStrikeOut (_gdad *_fb .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_abab :=PdfAnnotationStrikeOut {};_bcgb ,_cbe :=_edbf .newPdfAnnotationMarkupFromDict (_gdad );if _cbe !=nil {return nil ,_cbe ;};_abab .PdfAnnotationMarkup =_bcgb ;
_abab .QuadPoints =_gdad .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_abab ,nil ;};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_edda :=NewPdfAnnotation ();_ded :=&PdfAnnotationUnderline {};_ded .PdfAnnotation =_edda ;_ded .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_edda .SetContext (_ded );return _ded ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_dfae :=NewPdfAnnotation ();_dda :=&PdfAnnotationStrikeOut {};_dda .PdfAnnotation =_dfae ;_dda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dfae .SetContext (_dda );return _dda ;};func (_bacc *PdfReader )newPdfAnnotationWidgetFromDict (_gddb *_fb .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_cbbd :=PdfAnnotationWidget {};
_cbbd .H =_gddb .Get ("\u0048");_cbbd .MK =_gddb .Get ("\u004d\u004b");_cbbd .A =_gddb .Get ("\u0041");_cbbd .AA =_gddb .Get ("\u0041\u0041");_cbbd .BS =_gddb .Get ("\u0042\u0053");_cbbd .Parent =_gddb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_cbbd ,nil ;
};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_cgf :=NewPdfAnnotation ();_dea :=&PdfAnnotationProjection {};_dea .PdfAnnotation =_cgf ;_dea .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgf .SetContext (_dea );return _dea ;};

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_fb .PdfObjectInteger ;BitsPerComponent *_fb .PdfObjectInteger ;BitsPerFlag *_fb .PdfObjectInteger ;Decode *_fb .PdfObjectArray ;Function []PdfFunction ;};func (_efbf *PdfReader )newPdfAnnotationCircleFromDict (_edb *_fb .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_eaeb :=PdfAnnotationCircle {};
_fbbb ,_eac :=_efbf .newPdfAnnotationMarkupFromDict (_edb );if _eac !=nil {return nil ,_eac ;};_eaeb .PdfAnnotationMarkup =_fbbb ;_eaeb .BS =_edb .Get ("\u0042\u0053");_eaeb .IC =_edb .Get ("\u0049\u0043");_eaeb .BE =_edb .Get ("\u0042\u0045");_eaeb .RD =_edb .Get ("\u0052\u0044");
return &_eaeb ,nil ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// AddOutlineTree adds outlines to a PDF file.
func (_bagd *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_bagd ._ebgea =outlineTree };

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_gfege _fe .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_fccfg _gb .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_bdbdg _gb .Image )(*Image ,error );

// Compress an image.
Compress (_eeggb *Image ,_fgecg int64 )(*Image ,error );};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_gfcd :=NewPdfAnnotation ();_efac :=&PdfAnnotationText {};_efac .PdfAnnotation =_gfcd ;_efac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gfcd .SetContext (_efac );return _efac ;};

// ParserMetadata gets the parser  metadata.
func (_gecf *CompliancePdfReader )ParserMetadata ()_fb .ParserMetadata {if _gecf ._fbabg ==(_fb .ParserMetadata {}){_gecf ._fbabg ,_ =_gecf ._gfcg .ParserMetadata ();};return _gecf ._fbabg ;};

// ToPdfObject implements interface PdfModel.
func (_ffef *PdfActionGoTo3DView )ToPdfObject ()_fb .PdfObject {_ffef .PdfAction .ToPdfObject ();_agdb :=_ffef ._db ;_baa :=_agdb .PdfObject .(*_fb .PdfObjectDictionary );_baa .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeGoTo3DView )));_baa .SetIfNotNil ("\u0054\u0041",_ffef .TA );
_baa .SetIfNotNil ("\u0056",_ffef .V );return _agdb ;};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_ffea :_fb .MakeDict (),ColorComponents :colorComponents };
};func (_gdedf *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _gdedf ._gcge ==nil &&_gdedf .DescendantFont !=nil {return _gdedf .DescendantFont .FontDescriptor ();};return _gdedf ._gcge ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_ccgea *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _gcdge []*PdfField ;_aeecbb :=map[*_fb .PdfIndirectObject ]struct{}{};for _ ,_fegb :=range _ccgea .PageList {_cdbbd ,_ebfcgf :=_fegb .GetAnnotations ();if _ebfcgf !=nil {return _ebfcgf ;
};for _ ,_bbfc :=range _cdbbd {var _eabfd *PdfField ;switch _ccdgb :=_bbfc .GetContext ().(type ){case *PdfAnnotationWidget :if _ccdgb ._fcc !=nil {_eabfd =_ccdgb ._fcc ;break ;};if _ebced ,_bgbd :=_fb .GetIndirect (_ccdgb .Parent );_bgbd {_eabfd ,_ebfcgf =_ccgea .newPdfFieldFromIndirectObject (_ebced ,nil );
if _ebfcgf ==nil {break ;};_ef .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ebced ,_ebfcgf );
};if _ccdgb ._fcf !=nil {_eabfd ,_ebfcgf =_ccgea .newPdfFieldFromIndirectObject (_ccdgb ._fcf ,nil );if _ebfcgf ==nil {break ;};_ef .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_ccdgb ._fcf ,_ebfcgf );
};};if _eabfd ==nil {continue ;};if _ ,_dbcf :=_aeecbb [_eabfd ._ecgg ];_dbcf {continue ;};_aeecbb [_eabfd ._ecgg ]=struct{}{};_gcdge =append (_gcdge ,_eabfd );};};if len (_gcdge )==0{return nil ;};if _ccgea .AcroForm ==nil {_ccgea .AcroForm =NewPdfAcroForm ();
};_ccgea .AcroForm .Fields =&_gcdge ;return nil ;};

// ImageToRGB convert an indexed image to RGB.
func (_gcbg *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_gcbg .Base .GetNumComponents ();if N < 1{return Image {},_d .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_fcdb :=_cg .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._feec ,img ._fcgee );_gcbe :=_faf .NewReader (img .getBase ());_eafdg :=_faf .NewWriter (_fcdb );var (_aecb uint32 ;_gdgf int ;_gcdf error ;);for {_aecb ,_gcdf =_gcbe .ReadSample ();
if _gcdf ==_fe .EOF {break ;}else if _gcdf !=nil {return img ,_gcdf ;};_gdgf =int (_aecb );_ef .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_gdgf ,N ,len (_gcbg ._bfec ));
if (_gdgf +1)*N > len (_gcbg ._bfec ){_gdgf =len (_gcbg ._bfec )/N -1;_ef .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_gdgf );if _gdgf < 0{_ef .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _gdca :=_gdgf *N ;_gdca < (_gdgf +1)*N ;_gdca ++{if _gcdf =_eafdg .WriteSample (uint32 (_gcbg ._bfec [_gdca ]));_gcdf !=nil {return img ,_gcdf ;};};};return _gcbg .Base .ImageToRGB (_dbge (&_fcdb ));};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_ceec *BorderStyle )GetPdfName ()string {switch *_ceec {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_gadg *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _gadg .UnderlyingCS .GetNumComponents ();};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_efcg :=&PdfBorderStyle {};return _efcg };

// WriteToFile writes the Appender output to file specified by path.
func (_dfcf *PdfAppender )WriteToFile (outputPath string )error {_badag ,_begf :=_bab .Create (outputPath );if _begf !=nil {return _begf ;};defer _badag .Close ();return _dfcf .Write (_badag );};func _fegc (_gbcdg *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_gbcdg }};


// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_geab *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_fb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbcag ,_abggb :=_fb .GetNumbersAsFloat (objects );
if _abggb !=nil {return nil ,_abggb ;};return _geab .ColorFromFloats (_cbcag );};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_cgdcd byte )byte ;

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_gcad *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_bafce :=_faf .NewReader (img .getBase ());_afgc :=_cg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_gcad .AlternateSpace .GetNumComponents (),nil ,img ._feec ,nil );
_badaf :=_faf .NewWriter (_afgc );_adcd :=_cb .Pow (2,float64 (img .BitsPerComponent ))-1;_ef .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_ef .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_gcad .TintTransform );_cbcg :=_gcad .AlternateSpace .DecodeArray ();var (_egdbdd uint32 ;_ddde error ;);for {_egdbdd ,_ddde =_bafce .ReadSample ();
if _ddde ==_fe .EOF {break ;};if _ddde !=nil {return img ,_ddde ;};_baeb :=float64 (_egdbdd )/_adcd ;_fccac ,_gggba :=_gcad .TintTransform .Evaluate ([]float64 {_baeb });if _gggba !=nil {return img ,_gggba ;};for _aeeed ,_ddbg :=range _fccac {_bfab :=_cg .LinearInterpolate (_ddbg ,_cbcg [_aeeed *2],_cbcg [_aeeed *2+1],0,1);
if _gggba =_badaf .WriteSample (uint32 (_bfab *_adcd ));_gggba !=nil {return img ,_gggba ;};};};return _gcad .AlternateSpace .ImageToRGB (_dbge (&_afgc ));};func (_dcc *PdfReader )newPdfAnnotationScreenFromDict (_aeeg *_fb .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_caff :=PdfAnnotationScreen {};
_caff .T =_aeeg .Get ("\u0054");_caff .MK =_aeeg .Get ("\u004d\u004b");_caff .A =_aeeg .Get ("\u0041");_caff .AA =_aeeg .Get ("\u0041\u0041");return &_caff ,nil ;};func _gdgg (_gcafa *_fb .PdfIndirectObject )(*PdfOutline ,error ){_afedd ,_acea :=_gcafa .PdfObject .(*_fb .PdfObjectDictionary );
if !_acea {return nil ,_d .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_ggeff :=NewPdfOutline ();if _cfeg :=_afedd .Get ("\u0054\u0079\u0070\u0065");
_cfeg !=nil {_faegf ,_cbgaf :=_cfeg .(*_fb .PdfObjectName );if _cbgaf {if *_faegf !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_ef .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_faegf );
};};};if _baebd :=_afedd .Get ("\u0043\u006f\u0075n\u0074");_baebd !=nil {_dbgc ,_fbbbe :=_fb .GetNumberAsInt64 (_baebd );if _fbbbe !=nil {return nil ,_fbbbe ;};_ggeff .Count =&_dbgc ;};return _ggeff ,nil ;};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _fe .ReadSeeker )(*CompliancePdfReader ,error ){const _fdfbf ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_baad ,_aebeg :=_gfdgb (rs ,&ReaderOpts {ComplianceMode :true },false ,_fdfbf );
if _aebeg !=nil {return nil ,_aebeg ;};return &CompliancePdfReader {PdfReader :_baad },nil ;};func (_cgce *PdfReader )newPdfActionNamedFromDict (_gcg *_fb .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_gcg .Get ("\u004e")},nil ;
};

// ToInteger convert to an integer format.
func (_dfba *PdfColorCalGray )ToInteger (bits int )uint32 {_eefg :=_cb .Pow (2,float64 (bits ))-1;return uint32 (_eefg *_dfba .Val ());};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_gcfff *PdfReader )GetOutlines ()(*Outline ,error ){if _gcfff ==nil {return nil ,_ged .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_cfee :=_gcfff .GetOutlineTree ();if _cfee ==nil {return nil ,_ged .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _dadba func (_cdbb *PdfOutlineTreeNode ,_febec *[]*OutlineItem );_dadba =func (_fdba *PdfOutlineTreeNode ,_baaegc *[]*OutlineItem ){if _fdba ==nil {return ;};if _fdba ._acgg ==nil {_ef .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _ggcag *OutlineItem ;if _ccddaa ,_aebfe :=_fdba ._acgg .(*PdfOutlineItem );_aebfe {_becfc :=_ccddaa .Dest ;if (_becfc ==nil ||_fb .IsNullObject (_becfc ))&&_ccddaa .A !=nil {if _eccdc ,_gfdde :=_fb .GetDict (_ccddaa .A );_gfdde {_becfc ,_ =_fb .GetArray (_eccdc .Get ("\u0044"));
};};var _fdcec OutlineDest ;if _becfc !=nil &&!_fb .IsNullObject (_becfc ){if _gdcee ,_gedggd :=_bbbf (_becfc ,_gcfff );_gedggd ==nil {_fdcec =*_gdcee ;}else {_ef .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_becfc ,_gedggd );
};};_ggcag =NewOutlineItem (_ccddaa .Title .Decoded (),_fdcec );*_baaegc =append (*_baaegc ,_ggcag );if _ccddaa .Next !=nil {_dadba (_ccddaa .Next ,_baaegc );};};if _fdba .First !=nil {if _ggcag !=nil {_baaegc =&_ggcag .Entries ;};_dadba (_fdba .First ,_baaegc );
};};_ggacc :=NewOutline ();_dadba (_cfee ,&_ggacc .Entries );return _ggacc ,nil ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _fb .PdfObject ;ColorSpace _fb .PdfObject ;Pattern _fb .PdfObject ;Shading _fb .PdfObject ;XObject _fb .PdfObject ;Font _fb .PdfObject ;ProcSet _fb .PdfObject ;Properties _fb .PdfObject ;_cdgfd *_fb .PdfObjectDictionary ;
_cbedge *PdfPageResourcesColorspaces ;};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_febf *PdfTilingPattern )ToPdfObject ()_fb .PdfObject {_febf .PdfPattern .ToPdfObject ();_bdbbdf :=_febf .getDict ();if _febf .PaintType !=nil {_bdbbdf .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_febf .PaintType );};if _febf .TilingType !=nil {_bdbbdf .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_febf .TilingType );
};if _febf .BBox !=nil {_bdbbdf .Set ("\u0042\u0042\u006f\u0078",_febf .BBox .ToPdfObject ());};if _febf .XStep !=nil {_bdbbdf .Set ("\u0058\u0053\u0074e\u0070",_febf .XStep );};if _febf .YStep !=nil {_bdbbdf .Set ("\u0059\u0053\u0074e\u0070",_febf .YStep );
};if _febf .Resources !=nil {_bdbbdf .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_febf .Resources .ToPdfObject ());};if _febf .Matrix !=nil {_bdbbdf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_febf .Matrix );};return _febf ._bfgge ;};

// R returns the value of the red component of the color.
func (_cffad *PdfColorDeviceRGB )R ()float64 {return _cffad [0]};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _fg .Time ){_cdccb .Lock ();defer _cdccb .Unlock ();_fdeb =modifiedDate ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_fgdc :=PdfColorDeviceGray (grayVal );return &_fgdc ;};func _gedf (_bea _fb .PdfObject )(*PdfBorderStyle ,error ){_eefd :=&PdfBorderStyle {};_eefd ._fafb =_bea ;var _dab *_fb .PdfObjectDictionary ;
_bea =_fb .TraceToDirectObject (_bea );_dab ,_bgbe :=_bea .(*_fb .PdfObjectDictionary );if !_bgbe {return nil ,_ged .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _gfdd :=_dab .Get ("\u0054\u0079\u0070\u0065");_gfdd !=nil {_cbbg ,_gddc :=_gfdd .(*_fb .PdfObjectName );
if !_gddc {_ef .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_gfdd );
}else {if *_cbbg !="\u0042\u006f\u0072\u0064\u0065\u0072"{_ef .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_cbbg );};};};if _bedf :=_dab .Get ("\u0057");
_bedf !=nil {_abfd ,_gagf :=_fb .GetNumberAsFloat (_bedf );if _gagf !=nil {_ef .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_gagf );return nil ,_gagf ;};_eefd .W =&_abfd ;
};if _gggcb :=_dab .Get ("\u0053");_gggcb !=nil {_cgcg ,_gebf :=_gggcb .(*_fb .PdfObjectName );if !_gebf {return nil ,_ged .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _cdbg BorderStyle ;switch *_cgcg {case "\u0053":_cdbg =BorderStyleSolid ;case "\u0044":_cdbg =BorderStyleDashed ;case "\u0042":_cdbg =BorderStyleBeveled ;case "\u0049":_cdbg =BorderStyleInset ;case "\u0055":_cdbg =BorderStyleUnderline ;default:_ef .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_cgcg );
return nil ,_ged .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_eefd .S =&_cdbg ;};if _ebca :=_dab .Get ("\u0044");_ebca !=nil {_dceg ,_accc :=_ebca .(*_fb .PdfObjectArray );
if !_accc {_ef .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_ebca );return nil ,_ged .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_dgcb ,_efdf :=_dceg .ToIntegerArray ();if _efdf !=nil {_ef .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_efdf );
return nil ,_efdf ;};_eefd .D =&_dgcb ;};return _eefd ,nil ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_gbfed *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _gbfed ._aeff ==nil {_gbfed ._aeff =_dc .NewPSExecutor (_gbfed .Program );};var _bggg []_dc .PSObject ;for _ ,_dcbff :=range xVec {_bggg =append (_bggg ,_dc .MakeReal (_dcbff ));
};_cgfbf ,_gebad :=_gbfed ._aeff .Execute (_bggg );if _gebad !=nil {return nil ,_gebad ;};_cfef ,_gebad :=_dc .PSObjectArrayToFloat64Array (_cgfbf );if _gebad !=nil {return nil ,_gebad ;};return _cfef ,nil ;};

// G returns the value of the green component of the color.
func (_ccea *PdfColorDeviceRGB )G ()float64 {return _ccea [1]};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_eaf :=NewPdfAnnotation ();_bcg :=&PdfAnnotationCaret {};_bcg .PdfAnnotation =_eaf ;_bcg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eaf .SetContext (_bcg );return _bcg ;};

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_gecd *_fb .PdfObjectDictionary ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_befbe *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_edbae :=_befbe .GetContentStreamObjs ();wrapContents =wrapContents &&len (_edbae )> 0;_fdfae :=_fb .NewFlateEncoder ();_dabeg :=_fb .MakeArray ();if wrapContents {_debc ,_cecb :=_fb .MakeStream ([]byte ("\u0071\u000a"),_fdfae );
if _cecb !=nil {return _cecb ;};_dabeg .Append (_debc );};_dabeg .Append (_edbae ...);if wrapContents {_adcac ,_dffeb :=_fb .MakeStream ([]byte ("\u000a\u0051\u000a"),_fdfae );if _dffeb !=nil {return _dffeb ;};_dabeg .Append (_adcac );};_egdbdf ,_fggdc :=_fb .MakeStream (cs ,_fdfae );
if _fggdc !=nil {return _fggdc ;};_dabeg .Append (_egdbdf );_befbe .Contents =_dabeg ;return nil ;};type pdfFontSimple struct{fontCommon ;_fgcbf *_fb .PdfIndirectObject ;_fbacg map[_ff .CharCode ]float64 ;_fgfg _ff .TextEncoder ;_fgbba _ff .TextEncoder ;
_cefb *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _fb .PdfObject ;LastChar _fb .PdfObject ;Widths _fb .PdfObject ;Encoding _fb .PdfObject ;_caafde *_bb .RuneCharSafeMap ;};

// L returns the value of the L component of the color.
func (_ddgf *PdfColorLab )L ()float64 {return _ddgf [0]};

// Evaluate runs the function on the passed in slice and returns the results.
func (_efgec *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ef .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_acbfb :=[]float64 {0.0};if _efgec .C0 !=nil {_acbfb =_efgec .C0 ;};_dfbge :=[]float64 {1.0};if _efgec .C1 !=nil {_dfbge =_efgec .C1 ;};var _bgee []float64 ;for _cabfa :=0;_cabfa < len (_acbfb );_cabfa ++{_fbaab :=_acbfb [_cabfa ]+_cb .Pow (x [0],_efgec .N )*(_dfbge [_cabfa ]-_acbfb [_cabfa ]);
_bgee =append (_bgee ,_fbaab );};return _bgee ,nil ;};var _fdeef =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// Mask returns the uin32 bitmask for the specific flag.
func (_abba FieldFlag )Mask ()uint32 {return uint32 (_abba )};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_fgd :=NewPdfAction ();_caf :=&PdfActionRendition {};_caf .PdfAction =_fgd ;_fgd .SetContext (_caf );return _caf ;};func (_dcca *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _dcca ._gcge };


// AddCustomInfo adds a custom info into document info dictionary.
func (_cefc *PdfInfo )AddCustomInfo (name string ,value string )error {if _cefc ._fgfad ==nil {_cefc ._fgfad =_fb .MakeDict ();};if _ ,_fcef :=_fdeef [name ];_fcef {return _d .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_cefc ._fgfad .SetIfNotNil (*_fb .MakeName (name ),_fb .MakeString (value ));return nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bfca *PdfColorspaceDeviceGray )ToPdfObject ()_fb .PdfObject {return _fb .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_ggdeb *PdfOutlineTreeNode )ToPdfObject ()_fb .PdfObject {return _ggdeb .GetContext ().ToPdfObject ();};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_ffdab *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_cgda :=_faf .NewReader (img .getBase ());_effg :=_cg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_fdbc :=_faf .NewWriter (_effg );
_fbd :=_cb .Pow (2,float64 (img .BitsPerComponent ))-1;_egce :=make ([]uint32 ,3);var (_dgef error ;_fafbd ,_facc ,_bcge ,_efdc ,_bcgfa ,_cecdb float64 ;);for {_dgef =_cgda .ReadSamples (_egce );if _dgef ==_fe .EOF {break ;}else if _dgef !=nil {return img ,_dgef ;
};_fafbd =float64 (_egce [0])/_fbd ;_facc =float64 (_egce [1])/_fbd ;_bcge =float64 (_egce [2])/_fbd ;_efdc =_ffdab .Matrix [0]*_cb .Pow (_fafbd ,_ffdab .Gamma [0])+_ffdab .Matrix [3]*_cb .Pow (_facc ,_ffdab .Gamma [1])+_ffdab .Matrix [6]*_cb .Pow (_bcge ,_ffdab .Gamma [2]);
_bcgfa =_ffdab .Matrix [1]*_cb .Pow (_fafbd ,_ffdab .Gamma [0])+_ffdab .Matrix [4]*_cb .Pow (_facc ,_ffdab .Gamma [1])+_ffdab .Matrix [7]*_cb .Pow (_bcge ,_ffdab .Gamma [2]);_cecdb =_ffdab .Matrix [2]*_cb .Pow (_fafbd ,_ffdab .Gamma [0])+_ffdab .Matrix [5]*_cb .Pow (_facc ,_ffdab .Gamma [1])+_ffdab .Matrix [8]*_cb .Pow (_bcge ,_ffdab .Gamma [2]);
_fafbd =3.240479*_efdc +-1.537150*_bcgfa +-0.498535*_cecdb ;_facc =-0.969256*_efdc +1.875992*_bcgfa +0.041556*_cecdb ;_bcge =0.055648*_efdc +-0.204043*_bcgfa +1.057311*_cecdb ;_fafbd =_cb .Min (_cb .Max (_fafbd ,0),1.0);_facc =_cb .Min (_cb .Max (_facc ,0),1.0);
_bcge =_cb .Min (_cb .Max (_bcge ,0),1.0);_egce [0]=uint32 (_fafbd *_fbd );_egce [1]=uint32 (_facc *_fbd );_egce [2]=uint32 (_bcge *_fbd );if _dgef =_fdbc .WriteSamples (_egce );_dgef !=nil {return img ,_dgef ;};};return _dbge (&_effg ),nil ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _fb .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _fb .PdfObject ;Contents _fb .PdfObject ;
Rotate *int64 ;Group _fb .PdfObject ;Thumb _fb .PdfObject ;B _fb .PdfObject ;Dur _fb .PdfObject ;Trans _fb .PdfObject ;AA _fb .PdfObject ;Metadata _fb .PdfObject ;PieceInfo _fb .PdfObject ;StructParents _fb .PdfObject ;ID _fb .PdfObject ;PZ _fb .PdfObject ;
SeparationInfo _fb .PdfObject ;Tabs _fb .PdfObject ;TemplateInstantiated _fb .PdfObject ;PresSteps _fb .PdfObject ;UserUnit _fb .PdfObject ;VP _fb .PdfObject ;Annots _fb .PdfObject ;_dgcfa []*PdfAnnotation ;_ggafg *_fb .PdfObjectDictionary ;_bgbgb *_fb .PdfIndirectObject ;
_bgaaa *PdfReader ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_acbfc *Image )GetSamples ()[]uint32 {_acdg :=_faf .ResampleBytes (_acbfc .Data ,int (_acbfc .BitsPerComponent ));if _acbfc .BitsPerComponent < 8{_acdg =_acbfc .samplesTrimPadding (_acdg );};_degfb :=int (_acbfc .Width )*int (_acbfc .Height )*_acbfc .ColorComponents ;
if len (_acdg )< _degfb {_ef .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_acdg ),_degfb );
return _acdg ;}else if len (_acdg )> _degfb {_ef .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_acdg ),_degfb );
_acdg =_acdg [:_degfb ];};return _acdg ;};func (_ddeb *DSS )add (_agfe *[]*_fb .PdfObjectStream ,_cfe map[string ]*_fb .PdfObjectStream ,_acfa [][]byte )([]*_fb .PdfObjectStream ,error ){_cabg :=make ([]*_fb .PdfObjectStream ,0,len (_acfa ));for _ ,_fcgbf :=range _acfa {_ebdfa ,_fdff :=_cgbgd (_fcgbf );
if _fdff !=nil {return nil ,_fdff ;};_afeb ,_cdcdf :=_cfe [string (_ebdfa )];if !_cdcdf {_afeb ,_fdff =_fb .MakeStream (_fcgbf ,_fb .NewRawEncoder ());if _fdff !=nil {return nil ,_fdff ;};_cfe [string (_ebdfa )]=_afeb ;*_agfe =append (*_agfe ,_afeb );};
_cabg =append (_cabg ,_afeb );};return _cabg ,nil ;};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _fb .StreamEncoder )(*XObjectImage ,error ){_feacd :=NewXObjectImage ();return UpdateXObjectImageFromImage (_feacd ,img ,cs ,encoder );};

// Evaluate runs the function on the passed in slice and returns the results.
func (_ggae *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_ef .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_ged .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_cccac *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_fb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbdb ,_aebe :=_fb .GetNumbersAsFloat (objects );
if _aebe !=nil {return nil ,_aebe ;};return _cccac .ColorFromFloats (_cbdb );};

// GetContainingPdfObject implements model.PdfModel interface.
func (_bgaeb *PdfOutputIntent )GetContainingPdfObject ()_fb .PdfObject {return _bgaeb ._ffea };

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_gbca *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _gedb []float64 ;for _ccfc :=0;_ccfc < _gbca .GetNumComponents ();_ccfc ++{_gedb =append (_gedb ,0.0,1.0);};return _gedb ;};

// StdFontName represents name of a standard font.
type StdFontName =_bb .StdFontName ;const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);func (_ebccg *LTV )buildCertChain (_gfcbf ,_gafe []*_c .Certificate )([]*_c .Certificate ,map[string ]*_c .Certificate ,error ){_cdbgf :=map[string ]*_c .Certificate {};
for _ ,_aeae :=range _gfcbf {_cdbgf [_aeae .Subject .CommonName ]=_aeae ;};_fagf :=_gfcbf ;for _ ,_bbegd :=range _gafe {_abef :=_bbegd .Subject .CommonName ;if _ ,_eabf :=_cdbgf [_abef ];_eabf {continue ;};_cdbgf [_abef ]=_bbegd ;_fagf =append (_fagf ,_bbegd );
};if len (_fagf )==0{return nil ,nil ,ErrSignNoCertificates ;};var _bfdga error ;for _cagba :=_fagf [0];_cagba !=nil &&!_ebccg .CertClient .IsCA (_cagba );{_bbgd ,_dfaebf :=_cdbgf [_cagba .Issuer .CommonName ];if !_dfaebf {if _bbgd ,_bfdga =_ebccg .CertClient .GetIssuer (_cagba );
_bfdga !=nil {_ef .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_bfdga );
break ;};_cdbgf [_cagba .Issuer .CommonName ]=_bbgd ;_fagf =append (_fagf ,_bbgd );};_cagba =_bbgd ;};return _fagf ,_cdbgf ,nil ;};func (_dbaf *PdfReader )newPdfActionTransFromDict (_gfca *_fb .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_gfca .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};func (_cgacf *PdfWriter )adjustXRefAffectedVersion (_fdbgg bool ){if _fdbgg &&_cgacf ._befbee .Major ==1&&_cgacf ._befbee .Minor < 5{_cgacf ._befbee .Minor =5;};};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_fggc *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _ged .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_fggc .S =subtype ;return nil ;};func _befa (_fafg _fb .PdfObject )(*PdfFunctionType3 ,error ){_bdge :=&PdfFunctionType3 {};var _fadac *_fb .PdfObjectDictionary ;if _dfdgg ,_ceab :=_fafg .(*_fb .PdfIndirectObject );_ceab {_gegcf ,_adbc :=_dfdgg .PdfObject .(*_fb .PdfObjectDictionary );
if !_adbc {return nil ,_ged .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bdge ._fedg =_dfdgg ;_fadac =_gegcf ;}else if _adbfe ,_ecdda :=_fafg .(*_fb .PdfObjectDictionary );_ecdda {_fadac =_adbfe ;}else {return nil ,_ged .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bebgc ,_dgbfg :=_fb .TraceToDirectObject (_fadac .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fb .PdfObjectArray );if !_dgbfg {_ef .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ged .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bebgc .Len ()!=2{_ef .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ged .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_dacca ,_cfacd :=_bebgc .ToFloat64Array ();
if _cfacd !=nil {return nil ,_cfacd ;};_bdge .Domain =_dacca ;_bebgc ,_dgbfg =_fb .TraceToDirectObject (_fadac .Get ("\u0052\u0061\u006eg\u0065")).(*_fb .PdfObjectArray );if _dgbfg {if _bebgc .Len ()< 0||_bebgc .Len ()%2!=0{return nil ,_ged .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_egaag ,_gege :=_bebgc .ToFloat64Array ();if _gege !=nil {return nil ,_gege ;};_bdge .Range =_egaag ;};_bebgc ,_dgbfg =_fb .TraceToDirectObject (_fadac .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_fb .PdfObjectArray );if !_dgbfg {_ef .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ged .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bdge .Functions =[]PdfFunction {};
for _ ,_fafdb :=range _bebgc .Elements (){_gedgg ,_deda :=_ecae (_fafdb );if _deda !=nil {return nil ,_deda ;};_bdge .Functions =append (_bdge .Functions ,_gedgg );};_bebgc ,_dgbfg =_fb .TraceToDirectObject (_fadac .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_fb .PdfObjectArray );
if !_dgbfg {_ef .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ged .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_dcdcc ,_cfacd :=_bebgc .ToFloat64Array ();if _cfacd !=nil {return nil ,_cfacd ;};_bdge .Bounds =_dcdcc ;if len (_bdge .Bounds )!=len (_bdge .Functions )-1{_ef .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_bdge .Bounds ),len (_bdge .Functions ));
return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bebgc ,_dgbfg =_fb .TraceToDirectObject (_fadac .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_fb .PdfObjectArray );if !_dgbfg {_ef .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ged .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_afbd ,_cfacd :=_bebgc .ToFloat64Array ();
if _cfacd !=nil {return nil ,_cfacd ;};_bdge .Encode =_afbd ;if len (_bdge .Encode )!=2*len (_bdge .Functions ){_ef .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_bdge .Encode ),len (_bdge .Functions ));
return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _bdge ,nil ;};func _cegd (_fbce _fb .PdfObject )(*PdfColorspaceICCBased ,error ){_ccfb :=&PdfColorspaceICCBased {};if _fbcb ,_eafca :=_fbce .(*_fb .PdfIndirectObject );
_eafca {_ccfb ._gbce =_fbcb ;};_fbce =_fb .TraceToDirectObject (_fbce );_geda ,_fbcf :=_fbce .(*_fb .PdfObjectArray );if !_fbcf {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _geda .Len ()!=2{return nil ,_d .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");
};_fbce =_fb .TraceToDirectObject (_geda .Get (0));_edgee ,_fbcf :=_fbce .(*_fb .PdfObjectName );if !_fbcf {return nil ,_d .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_edgee !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_d .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_fbce =_geda .Get (1);
_dfge ,_fbcf :=_fb .GetStream (_fbce );if !_fbcf {_ef .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_fbce );
return nil ,_d .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_ffbg :=_dfge .PdfObjectDictionary ;_dedd ,_fbcf :=_ffbg .Get ("\u004e").(*_fb .PdfObjectInteger );
if !_fbcf {return nil ,_d .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_dedd !=1&&*_dedd !=3&&*_dedd !=4{return nil ,_d .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_ccfb .N =int (*_dedd );if _egab :=_ffbg .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_egab !=nil {_fgdf ,_geac :=NewPdfColorspaceFromPdfObject (_egab );if _geac !=nil {return nil ,_geac ;};_ccfb .Alternate =_fgdf ;};if _cedd :=_ffbg .Get ("\u0052\u0061\u006eg\u0065");
_cedd !=nil {_cedd =_fb .TraceToDirectObject (_cedd );_gdab ,_ccab :=_cedd .(*_fb .PdfObjectArray );if !_ccab {return nil ,_d .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _gdab .Len ()!=2*_ccfb .N {return nil ,_d .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_aade ,_daeg :=_gdab .GetAsFloat64Slice ();if _daeg !=nil {return nil ,_daeg ;};_ccfb .Range =_aade ;}else {_ccfb .Range =make ([]float64 ,2*_ccfb .N );for _ggff :=0;_ggff < _ccfb .N ;_ggff ++{_ccfb .Range [2*_ggff ]=0.0;_ccfb .Range [2*_ggff +1]=1.0;
};};if _dacc :=_ffbg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_dacc !=nil {_egbebd ,_bded :=_dacc .(*_fb .PdfObjectStream );if !_bded {return nil ,_d .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_ccfb .Metadata =_egbebd ;};_baae ,_baee :=_fb .DecodeStream (_dfge );if _baee !=nil {return nil ,_baee ;};_ccfb .Data =_baae ;_ccfb ._fafd =_dfge ;return _ccfb ,nil ;};

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_bab .File ,error ){const _efba ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_fbabb ,_dagc :=_bab .Open (pdfFile );if _dagc !=nil {return nil ,nil ,_dagc ;};_adacb ,_dagc :=_gfdgb (_fbabb ,opts ,true ,_efba );if _dagc !=nil {_fbabb .Close ();return nil ,nil ,_dagc ;};return _adacb ,_fbabb ,nil ;};func (_eege *PdfReader )newPdfAnnotationFromIndirectObject (_efb *_fb .PdfIndirectObject )(*PdfAnnotation ,error ){_fgbc ,_gaff :=_efb .PdfObject .(*_fb .PdfObjectDictionary );
if !_gaff {return nil ,_d .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_eege ._bcbaa .GetModelFromPrimitive (_fgbc );model !=nil {_eggc ,_dcg :=model .(*PdfAnnotation );if !_dcg {return nil ,_d .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _eggc ,nil ;};_bec :=&PdfAnnotation {};_bec ._fcf =_efb ;_eege ._bcbaa .Register (_fgbc ,_bec );if _fed :=_fgbc .Get ("\u0054\u0079\u0070\u0065");_fed !=nil {_gefe ,_bbg :=_fed .(*_fb .PdfObjectName );if !_bbg {_ef .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_fed );
}else {if *_gefe !="\u0041\u006e\u006eo\u0074"{_ef .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_gefe );};};};
if _cfgf :=_fgbc .Get ("\u0052\u0065\u0063\u0074");_cfgf !=nil {_bec .Rect =_cfgf ;};if _bagb :=_fgbc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_bagb !=nil {_bec .Contents =_bagb ;};if _beef :=_fgbc .Get ("\u0050");_beef !=nil {_bec .P =_beef ;
};if _faad :=_fgbc .Get ("\u004e\u004d");_faad !=nil {_bec .NM =_faad ;};if _fcg :=_fgbc .Get ("\u004d");_fcg !=nil {_bec .M =_fcg ;};if _bedg :=_fgbc .Get ("\u0046");_bedg !=nil {_bec .F =_bedg ;};if _ddd :=_fgbc .Get ("\u0041\u0050");_ddd !=nil {_bec .AP =_ddd ;
};if _deab :=_fgbc .Get ("\u0041\u0053");_deab !=nil {_bec .AS =_deab ;};if _ffd :=_fgbc .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_ffd !=nil {_bec .Border =_ffd ;};if _efc :=_fgbc .Get ("\u0043");_efc !=nil {_bec .C =_efc ;};if _gga :=_fgbc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_gga !=nil {_bec .StructParent =_gga ;};if _dcgg :=_fgbc .Get ("\u004f\u0043");_dcgg !=nil {_bec .OC =_dcgg ;};_eebe :=_fgbc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _eebe ==nil {_ef .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_bec ._dfdg =nil ;return _bec ,nil ;};_deaa ,_ggfe :=_eebe .(*_fb .PdfObjectName );if !_ggfe {_ef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_eebe );
return nil ,_d .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_eebe );};switch *_deaa {case "\u0054\u0065\u0078\u0074":_gaed ,_bagf :=_eege .newPdfAnnotationTextFromDict (_fgbc );
if _bagf !=nil {return nil ,_bagf ;};_gaed .PdfAnnotation =_bec ;_bec ._dfdg =_gaed ;return _bec ,nil ;case "\u004c\u0069\u006e\u006b":_bedc ,_cfd :=_eege .newPdfAnnotationLinkFromDict (_fgbc );if _cfd !=nil {return nil ,_cfd ;};_bedc .PdfAnnotation =_bec ;
_bec ._dfdg =_bedc ;return _bec ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_bafb ,_fgec :=_eege .newPdfAnnotationFreeTextFromDict (_fgbc );if _fgec !=nil {return nil ,_fgec ;};_bafb .PdfAnnotation =_bec ;_bec ._dfdg =_bafb ;return _bec ,nil ;
case "\u004c\u0069\u006e\u0065":_efgc ,_geg :=_eege .newPdfAnnotationLineFromDict (_fgbc );if _geg !=nil {return nil ,_geg ;};_efgc .PdfAnnotation =_bec ;_bec ._dfdg =_efgc ;_ef .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_bec ,_bec );
_ef .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_efgc ,_efgc );_ef .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_efgc .PdfAnnotationMarkup ,_efgc .PdfAnnotationMarkup );
return _bec ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_dafa ,_abd :=_eege .newPdfAnnotationSquareFromDict (_fgbc );if _abd !=nil {return nil ,_abd ;};_dafa .PdfAnnotation =_bec ;_bec ._dfdg =_dafa ;return _bec ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_badg ,_gda :=_eege .newPdfAnnotationCircleFromDict (_fgbc );
if _gda !=nil {return nil ,_gda ;};_badg .PdfAnnotation =_bec ;_bec ._dfdg =_badg ;return _bec ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_abfad ,_dedg :=_eege .newPdfAnnotationPolygonFromDict (_fgbc );if _dedg !=nil {return nil ,_dedg ;};_abfad .PdfAnnotation =_bec ;
_bec ._dfdg =_abfad ;return _bec ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_bedb ,_gcf :=_eege .newPdfAnnotationPolyLineFromDict (_fgbc );if _gcf !=nil {return nil ,_gcf ;};_bedb .PdfAnnotation =_bec ;_bec ._dfdg =_bedb ;return _bec ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_bcda ,_facb :=_eege .newPdfAnnotationHighlightFromDict (_fgbc );if _facb !=nil {return nil ,_facb ;};_bcda .PdfAnnotation =_bec ;_bec ._dfdg =_bcda ;return _bec ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_aaeg ,_ccgg :=_eege .newPdfAnnotationUnderlineFromDict (_fgbc );
if _ccgg !=nil {return nil ,_ccgg ;};_aaeg .PdfAnnotation =_bec ;_bec ._dfdg =_aaeg ;return _bec ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_cac ,_gec :=_eege .newPdfAnnotationSquigglyFromDict (_fgbc );if _gec !=nil {return nil ,_gec ;
};_cac .PdfAnnotation =_bec ;_bec ._dfdg =_cac ;return _bec ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_cfca ,_bgcgg :=_eege .newPdfAnnotationStrikeOut (_fgbc );if _bgcgg !=nil {return nil ,_bgcgg ;};_cfca .PdfAnnotation =_bec ;_bec ._dfdg =_cfca ;
return _bec ,nil ;case "\u0043\u0061\u0072e\u0074":_gabe ,_cff :=_eege .newPdfAnnotationCaretFromDict (_fgbc );if _cff !=nil {return nil ,_cff ;};_gabe .PdfAnnotation =_bec ;_bec ._dfdg =_gabe ;return _bec ,nil ;case "\u0053\u0074\u0061m\u0070":_dbc ,_eae :=_eege .newPdfAnnotationStampFromDict (_fgbc );
if _eae !=nil {return nil ,_eae ;};_dbc .PdfAnnotation =_bec ;_bec ._dfdg =_dbc ;return _bec ,nil ;case "\u0049\u006e\u006b":_dcba ,_cacg :=_eege .newPdfAnnotationInkFromDict (_fgbc );if _cacg !=nil {return nil ,_cacg ;};_dcba .PdfAnnotation =_bec ;_bec ._dfdg =_dcba ;
return _bec ,nil ;case "\u0050\u006f\u0070u\u0070":_gbf ,_cdca :=_eege .newPdfAnnotationPopupFromDict (_fgbc );if _cdca !=nil {return nil ,_cdca ;};_gbf .PdfAnnotation =_bec ;_bec ._dfdg =_gbf ;return _bec ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_bdbe ,_gfa :=_eege .newPdfAnnotationFileAttachmentFromDict (_fgbc );
if _gfa !=nil {return nil ,_gfa ;};_bdbe .PdfAnnotation =_bec ;_bec ._dfdg =_bdbe ;return _bec ,nil ;case "\u0053\u006f\u0075n\u0064":_dbf ,_dcad :=_eege .newPdfAnnotationSoundFromDict (_fgbc );if _dcad !=nil {return nil ,_dcad ;};_dbf .PdfAnnotation =_bec ;
_bec ._dfdg =_dbf ;return _bec ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_cafd ,_gcc :=_eege .newPdfAnnotationRichMediaFromDict (_fgbc );if _gcc !=nil {return nil ,_gcc ;};_cafd .PdfAnnotation =_bec ;_bec ._dfdg =_cafd ;return _bec ,nil ;
case "\u004d\u006f\u0076i\u0065":_faea ,_daa :=_eege .newPdfAnnotationMovieFromDict (_fgbc );if _daa !=nil {return nil ,_daa ;};_faea .PdfAnnotation =_bec ;_bec ._dfdg =_faea ;return _bec ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_afde ,_fbafe :=_eege .newPdfAnnotationScreenFromDict (_fgbc );
if _fbafe !=nil {return nil ,_fbafe ;};_afde .PdfAnnotation =_bec ;_bec ._dfdg =_afde ;return _bec ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_cacge ,_eda :=_eege .newPdfAnnotationWidgetFromDict (_fgbc );if _eda !=nil {return nil ,_eda ;};_cacge .PdfAnnotation =_bec ;
_bec ._dfdg =_cacge ;return _bec ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_bgbgd ,_gefb :=_eege .newPdfAnnotationPrinterMarkFromDict (_fgbc );if _gefb !=nil {return nil ,_gefb ;};_bgbgd .PdfAnnotation =_bec ;_bec ._dfdg =_bgbgd ;
return _bec ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_bef ,_bged :=_eege .newPdfAnnotationTrapNetFromDict (_fgbc );if _bged !=nil {return nil ,_bged ;};_bef .PdfAnnotation =_bec ;_bec ._dfdg =_bef ;return _bec ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_ecba ,_ccag :=_eege .newPdfAnnotationWatermarkFromDict (_fgbc );
if _ccag !=nil {return nil ,_ccag ;};_ecba .PdfAnnotation =_bec ;_bec ._dfdg =_ecba ;return _bec ,nil ;case "\u0033\u0044":_cfba ,_bfa :=_eege .newPdfAnnotation3DFromDict (_fgbc );if _bfa !=nil {return nil ,_bfa ;};_cfba .PdfAnnotation =_bec ;_bec ._dfdg =_cfba ;
return _bec ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_dgb ,_fccb :=_eege .newPdfAnnotationProjectionFromDict (_fgbc );if _fccb !=nil {return nil ,_fccb ;};_dgb .PdfAnnotation =_bec ;_bec ._dfdg =_dgb ;return _bec ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_bgda ,_gce :=_eege .newPdfAnnotationRedactFromDict (_fgbc );if _gce !=nil {return nil ,_gce ;};_bgda .PdfAnnotation =_bec ;_bec ._dfdg =_bgda ;return _bec ,nil ;};_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_deaa );
return nil ,nil ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_aeec *PdfField )SetContext (ctx PdfModel ){_aeec ._dcfa =ctx };

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_feec []byte ;_fcgee []float64 ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_gfdfe *PdfPageResources )GetFontByName (keyName _fb .PdfObjectName )(_fb .PdfObject ,bool ){if _gfdfe .Font ==nil {return nil ,false ;};_efccf ,_dbagcf :=_fb .TraceToDirectObject (_gfdfe .Font ).(*_fb .PdfObjectDictionary );if !_dbagcf {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_fb .TraceToDirectObject (_gfdfe .Font ));
return nil ,false ;};if _dgcge :=_efccf .Get (keyName );_dgcge !=nil {return _dgcge ,true ;};return nil ,false ;};func (_gebacf *PdfWriter )setDocumentIDs (_cffba ,_gccgf string ){_gebacf ._feffc =_fb .MakeArray (_fb .MakeHexString (_cffba ),_fb .MakeHexString (_gccgf ));
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_edec *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_fb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bcebf ,_addfgc :=_fb .GetNumbersAsFloat (objects );
if _addfgc !=nil {return nil ,_addfgc ;};return _edec .ColorFromFloats (_bcebf );};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_eaedc :=NewPdfOutline ();_eaedc ._acgg =&_eaedc ;return _eaedc ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_cggbg *LTV )EnableByName (name string ,extraCerts []*_c .Certificate )error {_bdeef :=_cggbg ._ccff ._efge .AcroForm ;for _ ,_gabc :=range _bdeef .AllFields (){_bdfgfc ,_ :=_gabc .GetContext ().(*PdfFieldSignature );if _bdfgfc ==nil {continue ;};
if _gbcaa :=_bdfgfc .PartialName ();_gbcaa !=name {continue ;};return _cggbg .Enable (_bdfgfc .V ,extraCerts );};return nil ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_eebc *_fb .PdfIndirectObject ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_befcgd PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _befcgd ._gccg .getFontDescriptor (),nil ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_adee *PdfPageResources )SetFontByName (keyName _fb .PdfObjectName ,obj _fb .PdfObject )error {if _adee .Font ==nil {_adee .Font =_fb .MakeDict ();};_ecceee ,_gbbgd :=_fb .TraceToDirectObject (_adee .Font ).(*_fb .PdfObjectDictionary );if !_gbbgd {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_fb .TraceToDirectObject (_adee .Font ));
return _fb .ErrTypeError ;};_ecceee .Set (keyName ,obj );return nil ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _fb .PdfObject ;Movie _fb .PdfObject ;A _fb .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ebbg *PdfColorspaceDeviceCMYK )ToPdfObject ()_fb .PdfObject {return _fb .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fb .PdfObject ;};func _cbbda (_ebff *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_ebff }};

// ToPdfObject implements interface PdfModel.
func (_defg *PdfAnnotationStrikeOut )ToPdfObject ()_fb .PdfObject {_defg .PdfAnnotation .ToPdfObject ();_fgga :=_defg ._fcf ;_cfbfa :=_fgga .PdfObject .(*_fb .PdfObjectDictionary );_defg .PdfAnnotationMarkup .appendToPdfDictionary (_cfbfa );_cfbfa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_cfbfa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_defg .QuadPoints );return _fgga ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_deae *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_babd :=vals [0];if _babd < 0.0||_babd > 1.0{_ef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_babd );
return nil ,ErrColorOutOfRange ;};_febd :=vals [1];if _febd < 0.0||_febd > 1.0{_ef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_febd );return nil ,ErrColorOutOfRange ;
};_acacg :=vals [2];if _acacg < 0.0||_acacg > 1.0{_ef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_acacg );return nil ,ErrColorOutOfRange ;};_cbeb :=vals [3];
if _cbeb < 0.0||_cbeb > 1.0{_ef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cbeb );return nil ,ErrColorOutOfRange ;};_bfbg :=NewPdfColorDeviceCMYK (_babd ,_febd ,_acacg ,_cbeb );
return _bfbg ,nil ;};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_aagfb *PdfField )GetContainingPdfObject ()_fb .PdfObject {return _aagfb ._ecgg };

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_eef :=NewPdfAction ();_cfb :=&PdfActionNamed {};_cfb .PdfAction =_eef ;_eef .SetContext (_cfb );return _cfb ;};func (_abadb *PdfReader )loadDSS ()(*DSS ,error ){if _abadb ._gfcg .GetCrypter ()!=nil &&!_abadb ._gfcg .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_dece :=_abadb ._babag .Get ("\u0044\u0053\u0053");if _dece ==nil {return nil ,nil ;};_ffcef ,_ :=_fb .GetIndirect (_dece );_dece =_fb .TraceToDirectObject (_dece );switch _ggcfd :=_dece .(type ){case *_fb .PdfObjectNull :return nil ,nil ;case *_fb .PdfObjectDictionary :return _fbaaa (_ffcef ,_ggcfd );
};return nil ,_d .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_dece );};func (_deegc *PdfWriter )writeOutputIntents ()error {if len (_deegc ._ccafa )==0{return nil ;};_fdcdg :=make ([]_fb .PdfObject ,len (_deegc ._ccafa ));
for _agcgc ,_gafdc :=range _deegc ._ccafa {_caddb :=_gafdc .ToPdfObject ();_fdcdg [_agcgc ]=_fb .MakeIndirectObject (_caddb );};_dcgca :=_fb .MakeIndirectObject (_fb .MakeArray (_fdcdg ...));_deegc ._cgegde .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_dcgca );
if _adeacf :=_deegc .addObjects (_dcgca );_adeacf !=nil {return _adeacf ;};return nil ;};

// GetAction returns the PDF action for the annotation link.
func (_gfcf *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _gfcf ._cfcc !=nil {return _gfcf ._cfcc ,nil ;};if _gfcf .A ==nil {return nil ,nil ;};if _gfcf ._feab ==nil {return nil ,nil ;};_aad ,_dcb :=_gfcf ._feab .loadAction (_gfcf .A );if _dcb !=nil {return nil ,_dcb ;
};_gfcf ._cfcc =_aad ;return _gfcf ._cfcc ,nil ;};func (_ddf *PdfReader )newPdfActionLaunchFromDict (_cae *_fb .PdfObjectDictionary )(*PdfActionLaunch ,error ){_fbf ,_gdfc :=_agad (_cae .Get ("\u0046"));if _gdfc !=nil {return nil ,_gdfc ;};return &PdfActionLaunch {Win :_cae .Get ("\u0057\u0069\u006e"),Mac :_cae .Get ("\u004d\u0061\u0063"),Unix :_cae .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_cae .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_fbf },nil ;
};func (_dbae *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_fb .PdfObjectArray ;Domain *_fb .PdfObjectArray ;Function []PdfFunction ;Extend *_fb .PdfObjectArray ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _fb .PdfObject ;IC _fb .PdfObject ;BE _fb .PdfObject ;RD _fb .PdfObject ;};func _faaee (_aaebg *_fb .PdfObjectDictionary ,_cccfa *fontCommon )(*pdfCIDFontType0 ,error ){if _cccfa ._ccbfd !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_ef .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_cccfa );
return nil ,_fb .ErrRangeError ;};_ggbd :=_fdecb (_cccfa );_eggef ,_eccc :=_fb .GetDict (_aaebg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_eccc {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_cccfa );
return nil ,ErrRequiredAttributeMissing ;};_ggbd .CIDSystemInfo =_eggef ;_ggbd .DW =_aaebg .Get ("\u0044\u0057");_ggbd .W =_aaebg .Get ("\u0057");_ggbd .DW2 =_aaebg .Get ("\u0044\u0057\u0032");_ggbd .W2 =_aaebg .Get ("\u0057\u0032");_ggbd ._addfb =1000.0;
if _dagg ,_fgedf :=_fb .GetNumberAsFloat (_ggbd .DW );_fgedf ==nil {_ggbd ._addfb =_dagg ;};_ecaf ,_cace :=_cbad (_ggbd .W );if _cace !=nil {return nil ,_cace ;};if _ecaf ==nil {_ecaf =map[_ff .CharCode ]float64 {};};_ggbd ._gbde =_ecaf ;return _ggbd ,nil ;
};func (_ebcffd *PdfReader )buildOutlineTree (_acbbd _fb .PdfObject ,_egdee *PdfOutlineTreeNode ,_abbg *PdfOutlineTreeNode ,_bbeee map[_fb .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _bbeee ==nil {_bbeee =map[_fb .PdfObject ]struct{}{};
};_bbeee [_acbbd ]=struct{}{};_cfdg ,_baafd :=_acbbd .(*_fb .PdfIndirectObject );if !_baafd {return nil ,nil ,_d .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_acbbd );
};_edabae ,_ebfaa :=_cfdg .PdfObject .(*_fb .PdfObjectDictionary );if !_ebfaa {return nil ,nil ,_ged .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_ef .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_edabae ,_cfdg ,_cfdg );
if _eggab :=_edabae .Get ("\u0054\u0069\u0074l\u0065");_eggab !=nil {_beecg ,_bdgdd :=_ebcffd .newPdfOutlineItemFromIndirectObject (_cfdg );if _bdgdd !=nil {return nil ,nil ,_bdgdd ;};_beecg .Parent =_egdee ;_beecg .Prev =_abbg ;_gdcgd :=_fb .ResolveReference (_edabae .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_bedge :=_bbeee [_gdcgd ];_gdcgd !=nil &&_gdcgd !=_cfdg &&!_bedge {if !_fb .IsNullObject (_gdcgd ){_acae ,_cgacc ,_gaded :=_ebcffd .buildOutlineTree (_gdcgd ,&_beecg .PdfOutlineTreeNode ,nil ,_bbeee );if _gaded !=nil {_ef .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_gaded );
}else {_beecg .First =_acae ;_beecg .Last =_cgacc ;};};};_cafbb :=_fb .ResolveReference (_edabae .Get ("\u004e\u0065\u0078\u0074"));if _ ,_caebf :=_bbeee [_cafbb ];_cafbb !=nil &&_cafbb !=_cfdg &&!_caebf {if !_fb .IsNullObject (_cafbb ){_bdeg ,_bcaa ,_cbfdc :=_ebcffd .buildOutlineTree (_cafbb ,_egdee ,&_beecg .PdfOutlineTreeNode ,_bbeee );
if _cbfdc !=nil {_ef .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_cbfdc );
}else {_beecg .Next =_bdeg ;return &_beecg .PdfOutlineTreeNode ,_bcaa ,nil ;};};};return &_beecg .PdfOutlineTreeNode ,&_beecg .PdfOutlineTreeNode ,nil ;};_baadc ,_bedgc :=_gdgg (_cfdg );if _bedgc !=nil {return nil ,nil ,_bedgc ;};_baadc .Parent =_egdee ;
if _begcae :=_edabae .Get ("\u0046\u0069\u0072s\u0074");_begcae !=nil {_begcae =_fb .ResolveReference (_begcae );if _ ,_agdde :=_bbeee [_begcae ];_begcae !=nil &&_begcae !=_cfdg &&!_agdde {_gacea :=_fb .TraceToDirectObject (_begcae );if _ ,_cbagc :=_gacea .(*_fb .PdfObjectNull );
!_cbagc &&_gacea !=nil {_gdfgbc ,_bgcgb ,_afgfb :=_ebcffd .buildOutlineTree (_begcae ,&_baadc .PdfOutlineTreeNode ,nil ,_bbeee );if _afgfb !=nil {_ef .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_afgfb );
}else {_baadc .First =_gdfgbc ;_baadc .Last =_bgcgb ;};};};};return &_baadc .PdfOutlineTreeNode ,&_baadc .PdfOutlineTreeNode ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bfb *PdfActionNamed )ToPdfObject ()_fb .PdfObject {_bfb .PdfAction .ToPdfObject ();_bac :=_bfb ._db ;_fgba :=_bac .PdfObject .(*_fb .PdfObjectDictionary );_fgba .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeNamed )));_fgba .SetIfNotNil ("\u004e",_bfb .N );
return _bac ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_bdbbd []_fb .PdfObject )([]_fb .PdfObject ,error );};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _fb .PdfObject ;};func _eeeef (_cgcgb *_fb .PdfObjectDictionary )(*PdfShadingType6 ,error ){_fbcfd :=PdfShadingType6 {};_eabea :=_cgcgb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _eabea ==nil {_ef .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fabc ,_dbgef :=_eabea .(*_fb .PdfObjectInteger );if !_dbgef {_ef .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eabea );
return nil ,_fb .ErrTypeError ;};_fbcfd .BitsPerCoordinate =_fabc ;_eabea =_cgcgb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _eabea ==nil {_ef .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_fabc ,_dbgef =_eabea .(*_fb .PdfObjectInteger );if !_dbgef {_ef .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_eabea );
return nil ,_fb .ErrTypeError ;};_fbcfd .BitsPerComponent =_fabc ;_eabea =_cgcgb .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _eabea ==nil {_ef .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fabc ,_dbgef =_eabea .(*_fb .PdfObjectInteger );if !_dbgef {_ef .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_eabea );
return nil ,_fb .ErrTypeError ;};_fbcfd .BitsPerComponent =_fabc ;_eabea =_cgcgb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _eabea ==nil {_ef .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_debb ,_dbgef :=_eabea .(*_fb .PdfObjectArray );if !_dbgef {_ef .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eabea );
return nil ,_fb .ErrTypeError ;};_fbcfd .Decode =_debb ;if _bfbgbe :=_cgcgb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_bfbgbe !=nil {_fbcfd .Function =[]PdfFunction {};if _ddcbd ,_bdafe :=_bfbgbe .(*_fb .PdfObjectArray );_bdafe {for _ ,_gdfce :=range _ddcbd .Elements (){_gdfga ,_cgdba :=_ecae (_gdfce );
if _cgdba !=nil {_ef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cgdba );return nil ,_cgdba ;};_fbcfd .Function =append (_fbcfd .Function ,_gdfga );
};}else {_afcgd ,_fbgcd :=_ecae (_bfbgbe );if _fbgcd !=nil {_ef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fbgcd );return nil ,_fbgcd ;
};_fbcfd .Function =append (_fbcfd .Function ,_afcgd );};};return &_fbcfd ,nil ;};func _aagb (_adfeb _fb .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_ef .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_adfeb .String (),_adfeb );
_agdf :=NewPdfColorspaceSpecialPattern ();if _aabc ,_ecdf :=_adfeb .(*_fb .PdfIndirectObject );_ecdf {_agdf ._faae =_aabc ;};_adfeb =_fb .TraceToDirectObject (_adfeb );if _gabd ,_ccddd :=_adfeb .(*_fb .PdfObjectName );_ccddd {if *_gabd !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_d .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _agdf ,nil ;};_dde ,_aacd :=_adfeb .(*_fb .PdfObjectArray );if !_aacd {_ef .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_adfeb );
return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _dde .Len ()!=1&&_dde .Len ()!=2{_ef .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_dde );
return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_adfeb =_dde .Get (0);if _aec ,_ebae :=_adfeb .(*_fb .PdfObjectName );_ebae {if *_aec !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ef .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_aec );
return nil ,_d .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _dde .Len ()> 1{_adfeb =_dde .Get (1);_adfeb =_fb .TraceToDirectObject (_adfeb );_acgaa ,_gddbb :=NewPdfColorspaceFromPdfObject (_adfeb );if _gddbb !=nil {return nil ,_gddbb ;
};_agdf .UnderlyingCS =_acgaa ;};_ef .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_agdf .UnderlyingCS );
return _agdf ,nil ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _fb .PdfObject ;NewWindow _fb .PdfObject ;};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;func (_gfbfc *PdfWriter )getPdfVersion ()string {return _d .Sprintf ("\u0025\u0064\u002e%\u0064",_gfbfc ._befbee .Major ,_gfbfc ._befbee .Minor );};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;func (_bcbg *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _fb .PdfObject ;Dest _fb .PdfObject ;H _fb .PdfObject ;PA _fb .PdfObject ;QuadPoints _fb .PdfObject ;BS _fb .PdfObject ;_cfcc *PdfAction ;_feab *PdfReader ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_dgg *PdfAnnotation )ToPdfObject ()_fb .PdfObject {_ddda :=_dgg ._fcf ;_bdfc :=_ddda .PdfObject .(*_fb .PdfObjectDictionary );_bdfc .Clear ();_bdfc .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0041\u006e\u006eo\u0074"));_bdfc .SetIfNotNil ("\u0052\u0065\u0063\u0074",_dgg .Rect );
_bdfc .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_dgg .Contents );_bdfc .SetIfNotNil ("\u0050",_dgg .P );_bdfc .SetIfNotNil ("\u004e\u004d",_dgg .NM );_bdfc .SetIfNotNil ("\u004d",_dgg .M );_bdfc .SetIfNotNil ("\u0046",_dgg .F );_bdfc .SetIfNotNil ("\u0041\u0050",_dgg .AP );
_bdfc .SetIfNotNil ("\u0041\u0053",_dgg .AS );_bdfc .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_dgg .Border );_bdfc .SetIfNotNil ("\u0043",_dgg .C );_bdfc .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_dgg .StructParent );
_bdfc .SetIfNotNil ("\u004f\u0043",_dgg .OC );return _ddda ;};func _afcaa (_cdgggg *_fb .PdfObjectDictionary ,_agbb *fontCommon ,_edbbe _ff .TextEncoder )(*pdfFontSimple ,error ){_ecfgg :=_fdfdg (_agbb );_ecfgg ._fgbba =_edbbe ;if _edbbe ==nil {_bdee :=_cdgggg .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _bdee ==nil {_bdee =_fb .MakeInteger (0);};_ecfgg .FirstChar =_bdee ;_eegcg ,_bfcb :=_fb .GetIntVal (_bdee );if !_bfcb {_ef .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_bdee );
return nil ,_fb .ErrTypeError ;};_dbcdb :=_ff .CharCode (_eegcg );_bdee =_cdgggg .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _bdee ==nil {_bdee =_fb .MakeInteger (255);};_ecfgg .LastChar =_bdee ;_eegcg ,_bfcb =_fb .GetIntVal (_bdee );if !_bfcb {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_bdee );
return nil ,_fb .ErrTypeError ;};_eaaf :=_ff .CharCode (_eegcg );_ecfgg ._fbacg =make (map[_ff .CharCode ]float64 );_bdee =_cdgggg .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _bdee !=nil {_ecfgg .Widths =_bdee ;_feedg ,_cfgfd :=_fb .GetArray (_bdee );
if !_cfgfd {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_bdee );return nil ,_fb .ErrTypeError ;
};_begab ,_bfgd :=_feedg .ToFloat64Array ();if _bfgd !=nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_bfgd ;};if len (_begab )!=int (_eaaf -_dbcdb +1){_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_eaaf -_dbcdb +1,len (_begab ));
return nil ,_fb .ErrRangeError ;};for _agba ,_cbccd :=range _begab {_ecfgg ._fbacg [_dbcdb +_ff .CharCode (_agba )]=_cbccd ;};};};_ecfgg .Encoding =_fb .TraceToDirectObject (_cdgggg .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _ecfgg ,nil ;
};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_efbd *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_aagf ,_degd :=color .(*PdfColorCalRGB );if !_degd {_ef .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_ged .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aacb :=_aagf .A ();_dcge :=_aagf .B ();_befca :=_aagf .C ();X :=_efbd .Matrix [0]*_cb .Pow (_aacb ,_efbd .Gamma [0])+_efbd .Matrix [3]*_cb .Pow (_dcge ,_efbd .Gamma [1])+_efbd .Matrix [6]*_cb .Pow (_befca ,_efbd .Gamma [2]);
Y :=_efbd .Matrix [1]*_cb .Pow (_aacb ,_efbd .Gamma [0])+_efbd .Matrix [4]*_cb .Pow (_dcge ,_efbd .Gamma [1])+_efbd .Matrix [7]*_cb .Pow (_befca ,_efbd .Gamma [2]);Z :=_efbd .Matrix [2]*_cb .Pow (_aacb ,_efbd .Gamma [0])+_efbd .Matrix [5]*_cb .Pow (_dcge ,_efbd .Gamma [1])+_efbd .Matrix [8]*_cb .Pow (_befca ,_efbd .Gamma [2]);
_gfdf :=3.240479*X +-1.537150*Y +-0.498535*Z ;_gffd :=-0.969256*X +1.875992*Y +0.041556*Z ;_dbcg :=0.055648*X +-0.204043*Y +1.057311*Z ;_gfdf =_cb .Min (_cb .Max (_gfdf ,0),1.0);_gffd =_cb .Min (_cb .Max (_gffd ,0),1.0);_dbcg =_cb .Min (_cb .Max (_dbcg ,0),1.0);
return NewPdfColorDeviceRGB (_gfdf ,_gffd ,_dbcg ),nil ;};

// IsShading specifies if the pattern is a shading pattern.
func (_ffbd *PdfPattern )IsShading ()bool {return _ffbd .PatternType ==2};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_becd *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_ebfc ,_dbfe :=color .(*PdfColorPattern );if !_dbfe {_ef .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _ebfc .Color ==nil {return color ,nil ;};if _becd .UnderlyingCS ==nil {return nil ,_ged .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _becd .UnderlyingCS .ColorToRGB (_ebfc .Color );
};func (_agada *PdfReader )loadPerms ()(*Permissions ,error ){if _dfdf :=_agada ._babag .Get ("\u0050\u0065\u0072m\u0073");_dfdf !=nil {if _aafb ,_aaceg :=_fb .GetDict (_dfdf );_aaceg {_ddbcb :=_aafb .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");if _ddbcb ==nil {return nil ,nil ;
};if _abed ,_cedg :=_fb .GetIndirect (_ddbcb );_cedg {_egaf ,_bcbcf :=_agada .newPdfSignatureFromIndirect (_abed );if _bcbcf !=nil {return nil ,_bcbcf ;};return NewPermissions (_egaf ),nil ;};return nil ,_d .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");
};return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");};return nil ,nil ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_ccga *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_bdca *PdfFieldButton )IsPush ()bool {return _bdca .GetType ()==ButtonTypePush };

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_bcbga *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_ef .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_ef .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_ef .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_ef .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_feaf ,_fffe :=_cg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._feec ,img ._fcgee );if _fffe !=nil {return Image {},_fffe ;};_afgg ,_fffe :=_cg .NRGBAConverter .Convert (_feaf );if _fffe !=nil {return Image {},_fffe ;
};return _dbge (_afgg .Base ()),nil ;};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_cgbg *PdfReader )GetCatalogMetadata ()(_fb .PdfObject ,bool ){if _cgbg ._babag ==nil {return nil ,false ;};_fdae :=_cgbg ._babag .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _fdae ,_fdae !=nil ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_dc .PSProgram ;_aeff *_dc .PSExecutor ;_begca []byte ;_fbcdf *_fb .PdfObjectStream ;};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_cdccb .Lock ();defer _cdccb .Unlock ();_bbcb =producer };

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _fb .PdfObject )(*PdfInfo ,error ){var _eede PdfInfo ;_dgdf ,_eaga :=obj .(*_fb .PdfObjectDictionary );if !_eaga {return nil ,_d .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_dcab :=range _dgdf .Keys (){switch _dcab {case "\u0054\u0069\u0074l\u0065":_eede .Title ,_ =_fb .GetString (_dgdf .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_eede .Author ,_ =_fb .GetString (_dgdf .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_eede .Subject ,_ =_fb .GetString (_dgdf .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_eede .Keywords ,_ =_fb .GetString (_dgdf .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_eede .Creator ,_ =_fb .GetString (_dgdf .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_eede .Producer ,_ =_fb .GetString (_dgdf .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_eede .Trapped ,_ =_fb .GetName (_dgdf .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _edcf ,_afefd :=_fb .GetString (_dgdf .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_afefd &&_edcf .String ()!=""{_defd ,_fbfa :=NewPdfDate (_edcf .String ());if _fbfa !=nil {return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_fbfa );
};_eede .CreationDate =&_defd ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _ffg ,_cecf :=_fb .GetString (_dgdf .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_cecf &&_ffg .String ()!=""{_cddb ,_gfg :=NewPdfDate (_ffg .String ());if _gfg !=nil {return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_gfg );
};_eede .ModifiedDate =&_cddb ;};default:_aabg ,_ :=_fb .GetString (_dgdf .Get (_dcab ));if _eede ._fgfad ==nil {_eede ._fgfad =_fb .MakeDict ();};_eede ._fgfad .Set (_dcab ,_aabg );};};return &_eede ,nil ;};func (_fgfea *DSS )addOCSPs (_abeb [][]byte )([]*_fb .PdfObjectStream ,error ){return _fgfea .add (&_fgfea .OCSPs ,_fgfea ._gcaag ,_abeb );
};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_cbgd []byte ;_cbdg []uint32 ;_cafb *_fb .PdfObjectStream ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_fgff :=NewPdfAnnotation ();_bbf :=&PdfAnnotationLine {};_bbf .PdfAnnotation =_fgff ;_bbf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fgff .SetContext (_bbf );return _bbf ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_gdgb *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_agcg ,_ ,_faeae :=_gdgb .CharcodesToUnicodeWithStats (_gdgb .BytesToCharcodes (data ));_faagc :=_ff .ExpandLigatures (_agcg );return _faagc ,_ge .RuneCountInString (_faagc ),_faeae ;
};

// ToPdfObject implements interface PdfModel.
func (_ccbc *PdfAnnotationWatermark )ToPdfObject ()_fb .PdfObject {_ccbc .PdfAnnotation .ToPdfObject ();_fdbg :=_ccbc ._fcf ;_adff :=_fdbg .PdfObject .(*_fb .PdfObjectDictionary );_adff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_adff .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_ccbc .FixedPrint );return _fdbg ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_adecd :=appender .Reader .DSS ;if _adecd ==nil {_adecd =NewDSS ();};if _bddd :=_adecd .generateHashMaps ();_bddd !=nil {return nil ,_bddd ;};return &LTV {CertClient :_af .NewCertClient (),OCSPClient :_af .NewOCSPClient (),CRLClient :_af .NewCRLClient (),SkipExisting :true ,_ccff :appender ,_bdgd :_adecd },nil ;
};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_ggbf *_fb .PdfIndirectObject ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_faa :=NewPdfAction ();_bgbg :=&PdfActionTrans {};_bgbg .PdfAction =_faa ;_faa .SetContext (_bgbg );return _bgbg ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_fb .PdfObjectStream ;OCSP []*_fb .PdfObjectStream ;CRL []*_fb .PdfObjectStream ;TU *_fb .PdfObjectString ;TS *_fb .PdfObjectString ;};

// String returns a string that describes `font`.
func (_ddbgb *PdfFont )String ()string {_abbfd :="";if _ddbgb ._gccg .Encoder ()!=nil {_abbfd =_ddbgb ._gccg .Encoder ().String ();};return _d .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_ddbgb ._gccg ,_ddbgb .baseFields ().coreString (),_abbfd );
};func (_bee *PdfReader )newPdfActionGoTo3DViewFromDict (_bcb *_fb .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_bcb .Get ("\u0054\u0041"),V :_bcb .Get ("\u0056")},nil ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_gbdge *LTV )EnableAll (extraCerts []*_c .Certificate )error {_dbbaa :=_gbdge ._ccff ._efge .AcroForm ;for _ ,_bbdab :=range _dbbaa .AllFields (){_gfdfc ,_ :=_bbdab .GetContext ().(*PdfFieldSignature );if _gfdfc ==nil {continue ;};_ebfcd :=_gfdfc .V ;
if _gcde :=_gbdge .validateSig (_ebfcd );_gcde !=nil {_ef .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_gcde );
};if _bdde :=_gbdge .Enable (_ebfcd ,extraCerts );_bdde !=nil {return _bdde ;};};return nil ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _fb .PdfObject ;Popup *PdfAnnotationPopup ;CA _fb .PdfObject ;RC _fb .PdfObject ;CreationDate _fb .PdfObject ;IRT _fb .PdfObject ;Subj _fb .PdfObject ;RT _fb .PdfObject ;IT _fb .PdfObject ;ExData _fb .PdfObject ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_fb .PdfObjectInteger ;BitsPerComponent *_fb .PdfObjectInteger ;VerticesPerRow *_fb .PdfObjectInteger ;Decode *_fb .PdfObjectArray ;Function []PdfFunction ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_aaegg :=&PdfFilespec {};_aaegg ._caee =_fb .MakeIndirectObject (_fb .MakeDict ());return _aaegg ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_ddggb *PdfWriter )SetDocInfo (info *PdfInfo ){_ddggb .setDocInfo (info .ToPdfObject ())};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_aae :=NewPdfAction ();_ce :=&PdfActionJavaScript {};_ce .PdfAction =_aae ;_aae .SetContext (_ce );return _ce ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_dgdb *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_cgbcc *_fb .PdfIndirectObject ;Certs []*_fb .PdfObjectStream ;OCSPs []*_fb .PdfObjectStream ;CRLs []*_fb .PdfObjectStream ;VRI map[string ]*VRI ;_gcdc map[string ]*_fb .PdfObjectStream ;_gcaag map[string ]*_fb .PdfObjectStream ;_gaggea map[string ]*_fb .PdfObjectStream ;
};func _gdeffd ()string {_cdccb .Lock ();defer _cdccb .Unlock ();if len (_dcfdc )> 0{return _dcfdc ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_fcac *PdfFont )GetCharMetrics (code _ff .CharCode )(CharMetrics ,bool ){var _degbe _bb .CharMetrics ;switch _ecfa :=_fcac ._gccg .(type ){case *pdfFontSimple :if _cgg ,_gede :=_ecfa .GetCharMetrics (code );_gede {return _cgg ,_gede ;};case *pdfFontType0 :if _gbaga ,_fgbf :=_ecfa .GetCharMetrics (code );
_fgbf {return _gbaga ,_fgbf ;};case *pdfCIDFontType0 :if _ffaf ,_gebb :=_ecfa .GetCharMetrics (code );_gebb {return _ffaf ,_gebb ;};case *pdfCIDFontType2 :if _gbadf ,_dfdda :=_ecfa .GetCharMetrics (code );_dfdda {return _gbadf ,_dfdda ;};case *pdfFontType3 :if _dbddd ,_dbgge :=_ecfa .GetCharMetrics (code );
_dbgge {return _dbddd ,_dbgge ;};default:_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_fcac ._gccg );
return _degbe ,false ;};if _fgefe ,_ddfd :=_fcac .GetFontDescriptor ();_ddfd ==nil &&_fgefe !=nil {return _bb .CharMetrics {Wx :_fgefe ._cdggf },true ;};_ef .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_fcac );
return _degbe ,false ;};

// GetPerms returns the Permissions dictionary
func (_egcaf *PdfReader )GetPerms ()*Permissions {return _egcaf ._fgaa };func (_bgaec *XObjectImage )getParamsDict ()*_fb .PdfObjectDictionary {_cdegd :=_fb .MakeDict ();_cdegd .Set ("\u0057\u0069\u0064t\u0068",_fb .MakeInteger (*_bgaec .Width ));_cdegd .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fb .MakeInteger (*_bgaec .Height ));
_cdegd .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fb .MakeInteger (int64 (_bgaec .ColorSpace .GetNumComponents ())));_cdegd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fb .MakeInteger (*_bgaec .BitsPerComponent ));
return _cdegd ;};var (_cdccb _f .Mutex ;_ebgg ="";_fcbce _fg .Time ;_dcfdc ="";_fdafc ="";_fdeb _fg .Time ;_bbcb ="";_afdge ="";_gbeeg ="";);

// IsTiling specifies if the pattern is a tiling pattern.
func (_ccge *PdfPattern )IsTiling ()bool {return _ccge .PatternType ==1};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_bcaeg *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func _gcaddd (_agcbc _fb .PdfObject ){_ef .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_agcbc ,_agcbc .String ());if _fcfaga ,_gcfaf :=_agcbc .(*_fb .PdfObjectStream );
_gcfaf {_adcgbe ,_fgedb :=_fb .DecodeStream (_fcfaga );if _fgedb !=nil {_ef .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_fgedb );return ;};_ef .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_adcgbe );}else if _ddgac ,_bbgfc :=_agcbc .(*_fb .PdfIndirectObject );
_bbgfc {_ef .Log .Debug ("\u0025\u0054\u0020%\u0076",_ddgac .PdfObject ,_ddgac .PdfObject );_ef .Log .Debug ("\u0025\u0073",_ddgac .PdfObject .String ());};};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_gdeg :=PdfColorCalRGB {a ,b ,c };return &_gdeg ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_fb .PdfObjectArray ;Matrix *_fb .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_ecc *PdfColorspaceICCBased )ToPdfObject ()_fb .PdfObject {_gdfeg :=&_fb .PdfObjectArray {};_gdfeg .Append (_fb .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _fgfc *_fb .PdfObjectStream ;if _ecc ._fafd !=nil {_fgfc =_ecc ._fafd ;
}else {_fgfc =&_fb .PdfObjectStream {};};_dedfb :=_fb .MakeDict ();_dedfb .Set ("\u004e",_fb .MakeInteger (int64 (_ecc .N )));if _ecc .Alternate !=nil {_dedfb .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_ecc .Alternate .ToPdfObject ());};if _ecc .Metadata !=nil {_dedfb .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_ecc .Metadata );
};if _ecc .Range !=nil {var _dgcd []_fb .PdfObject ;for _ ,_fggf :=range _ecc .Range {_dgcd =append (_dgcd ,_fb .MakeFloat (_fggf ));};_dedfb .Set ("\u0052\u0061\u006eg\u0065",_fb .MakeArray (_dgcd ...));};_dedfb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fb .MakeInteger (int64 (len (_ecc .Data ))));
_fgfc .Stream =_ecc .Data ;_fgfc .PdfObjectDictionary =_dedfb ;_gdfeg .Append (_fgfc );if _ecc ._gbce !=nil {_ecc ._gbce .PdfObject =_gdfeg ;return _ecc ._gbce ;};return _gdfeg ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_geb *PdfAnnotationWidget )Field ()*PdfField {return _geb ._fcc };

// Encoder returns the font's text encoder.
func (_ceagf pdfCIDFontType2 )Encoder ()_ff .TextEncoder {return _ceagf ._bebbc };

// GetCharMetrics returns the char metrics for character code `code`.
func (_eabcf pdfFontType0 )GetCharMetrics (code _ff .CharCode )(_bb .CharMetrics ,bool ){if _eabcf .DescendantFont ==nil {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_eabcf );
return _bb .CharMetrics {},false ;};return _eabcf .DescendantFont .GetCharMetrics (code );};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_bfaff *pdfFontSimple )ToPdfObject ()_fb .PdfObject {if _bfaff ._fgcbf ==nil {_bfaff ._fgcbf =&_fb .PdfIndirectObject {};};_afdca :=_bfaff .baseFields ().asPdfObjectDictionary ("");_bfaff ._fgcbf .PdfObject =_afdca ;if _bfaff .FirstChar !=nil {_afdca .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_bfaff .FirstChar );
};if _bfaff .LastChar !=nil {_afdca .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_bfaff .LastChar );};if _bfaff .Widths !=nil {_afdca .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_bfaff .Widths );};if _bfaff .Encoding !=nil {_afdca .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bfaff .Encoding );
}else if _bfaff ._fgfg !=nil {_bcbgf :=_bfaff ._fgfg .ToPdfObject ();if _bcbgf !=nil {_afdca .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bcbgf );};};return _bfaff ._fgcbf ;};func (_eeage *PdfWriter )seekByName (_bdfdgg _fb .PdfObject ,_gbbdc []string ,_efcdb string )([]_fb .PdfObject ,error ){_ef .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_bdfdgg );
var _gbgd []_fb .PdfObject ;if _gbfaa ,_ddcaf :=_bdfdgg .(*_fb .PdfIndirectObject );_ddcaf {return _eeage .seekByName (_gbfaa .PdfObject ,_gbbdc ,_efcdb );};if _afebb ,_cgdab :=_bdfdgg .(*_fb .PdfObjectStream );_cgdab {return _eeage .seekByName (_afebb .PdfObjectDictionary ,_gbbdc ,_efcdb );
};if _fbeff ,_bbcdd :=_bdfdgg .(*_fb .PdfObjectDictionary );_bbcdd {_ef .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_cbbe :=range _fbeff .Keys (){_fadaf :=_fbeff .Get (_cbbe );if string (_cbbe )==_efcdb {_gbgd =append (_gbgd ,_fadaf );};for _ ,_ddee :=range _gbbdc {if string (_cbbe )==_ddee {_ef .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_ddee );
_bgccg ,_dadfgg :=_eeage .seekByName (_fadaf ,_gbbdc ,_efcdb );if _dadfgg !=nil {return _gbgd ,_dadfgg ;};_gbgd =append (_gbgd ,_bgccg ...);break ;};};};return _gbgd ,nil ;};return _gbgd ,nil ;};

// ToPdfObject returns a PDF object representation of the outline item.
func (_ccbace *OutlineItem )ToPdfObject ()_fb .PdfObject {_edegc ,_ :=_ccbace .ToPdfOutlineItem ();return _edegc .ToPdfObject ();};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_ecfg *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_ebfg :=_faf .NewReader (img .getBase ());_dcfd :=_cg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._feec ,img ._fcgee );
_deaga :=_faf .NewWriter (_dcfd );_babdg :=_cb .Pow (2,float64 (img .BitsPerComponent ))-1;_gadc :=_ecfg .GetNumComponents ();_cabee :=make ([]uint32 ,_gadc );_bbba :=make ([]float64 ,_gadc );for {_eeag :=_ebfg .ReadSamples (_cabee );if _eeag ==_fe .EOF {break ;
}else if _eeag !=nil {return img ,_eeag ;};for _bedca :=0;_bedca < _gadc ;_bedca ++{_cacfa :=float64 (_cabee [_bedca ])/_babdg ;_bbba [_bedca ]=_cacfa ;};_ddab ,_eeag :=_ecfg .TintTransform .Evaluate (_bbba );if _eeag !=nil {return img ,_eeag ;};for _ ,_faed :=range _ddab {_faed =_cb .Min (_cb .Max (0,_faed ),1.0);
if _eeag =_deaga .WriteSample (uint32 (_faed *_babdg ));_eeag !=nil {return img ,_eeag ;};};};return _ecfg .AlternateSpace .ImageToRGB (_dbge (&_dcfd ));};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fbfc *PdfColorspaceSpecialPattern )ToPdfObject ()_fb .PdfObject {if _fbfc .UnderlyingCS ==nil {return _fb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_dced :=_fb .MakeArray (_fb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_dced .Append (_fbfc .UnderlyingCS .ToPdfObject ());
if _fbfc ._faae !=nil {_fbfc ._faae .PdfObject =_dced ;return _fbfc ._faae ;};return _dced ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_fb .PdfObjectArray ;_ceff *Image ;};func (_baed *pdfCIDFontType0 )baseFields ()*fontCommon {return &_baed .fontCommon };func (_deef *LTV )getCRLs (_ecca []*_c .Certificate )([][]byte ,error ){_bebgb :=make ([][]byte ,0,len (_ecca ));
for _ ,_ccef :=range _ecca {for _ ,_dcdfg :=range _ccef .CRLDistributionPoints {if _deef .CertClient .IsCA (_ccef ){continue ;};_deff ,_dddda :=_deef .CRLClient .MakeRequest (_dcdfg ,_ccef );if _dddda !=nil {_ef .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_dddda );
continue ;};_bebgb =append (_bebgb ,_deff );};};return _bebgb ,nil ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_gccg pdfFont };

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_aada :=NewPdfAnnotation ();_abfe :=&PdfAnnotationRedact {};_abfe .PdfAnnotation =_aada ;_abfe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aada .SetContext (_abfe );return _abfe ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_ebbe ,_faef :=_eaebbg (basefont );if _faef !=nil {return nil ,_faef ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_ebbe ._fgfg =_ff .NewWinAnsiEncoder ();};return &PdfFont {_gccg :&_ebbe },nil ;
};func _fgfec (_dgbe _fb .PdfObject ,_egabg bool )(*PdfFont ,error ){_ggbg ,_fgca ,_bebg :=_daece (_dgbe );if _ggbg !=nil {_cadd (_ggbg );};if _bebg !=nil {if _bebg ==ErrType1CFontNotSupported {_gfbf ,_bageg :=_afcaa (_ggbg ,_fgca ,nil );if _bageg !=nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_fgca ,_bageg );
return nil ,_bebg ;};return &PdfFont {_gccg :_gfbf },_bebg ;};return nil ,_bebg ;};_gcfb :=&PdfFont {};switch _fgca ._ccbfd {case "\u0054\u0079\u0070e\u0030":if !_egabg {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fgca );
return nil ,_ged .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_bbfd ,_edfge :=_adbgf (_ggbg ,_fgca );if _edfge !=nil {_ef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fgca ,_edfge );
return nil ,_edfge ;};_gcfb ._gccg =_bbfd ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _dga *pdfFontSimple ;_dggfd ,_dbgaa :=_bb .NewStdFontByName (_bb .StdFontName (_fgca ._ecaae ));
if _dbgaa {_bgab :=_ffefb (_dggfd );_gcfb ._gccg =&_bgab ;_adfgdf :=_fb .TraceToDirectObject (_bgab .ToPdfObject ());_dddga ,_gbfde ,_abdff :=_daece (_adfgdf );if _abdff !=nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_fgca ,_bgab );
return nil ,_abdff ;};for _ ,_gaafa :=range _ggbg .Keys (){_dddga .Set (_gaafa ,_ggbg .Get (_gaafa ));};_dga ,_abdff =_afcaa (_dddga ,_gbfde ,_bgab ._fgbba );if _abdff !=nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_fgca ,_bgab );
return nil ,_abdff ;};_dga ._fbacg =_bgab ._fbacg ;_dga ._caafde =_bgab ._caafde ;if _dga ._cefb ==nil {_dga ._cefb =_bgab ._cefb ;};}else {_dga ,_bebg =_afcaa (_ggbg ,_fgca ,nil );if _bebg !=nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_fgca ,_bebg );
return nil ,_bebg ;};};_bebg =_dga .addEncoding ();if _bebg !=nil {return nil ,_bebg ;};if _dbgaa {_dga .updateStandard14Font ();};if _dbgaa &&_dga ._fgfg ==nil &&_dga ._fgbba ==nil {_ef .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dga );
_ef .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_dggfd );};if len (_dga ._fbacg )==0{_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_dga );};_gcfb ._gccg =_dga ;
case "\u0054\u0079\u0070e\u0033":_fgbe ,_cfcdf :=_dcgd (_ggbg ,_fgca );if _cfcdf !=nil {_ef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_cfcdf );
return nil ,_cfcdf ;};_gcfb ._gccg =_fgbe ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_cebga ,_bcab :=_faaee (_ggbg ,_fgca );if _bcab !=nil {_ef .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_bcab );
return nil ,_bcab ;};_gcfb ._gccg =_cebga ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_afeff ,_agagf :=_acadc (_ggbg ,_fgca );if _agagf !=nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fgca ,_agagf );
return nil ,_agagf ;};_gcfb ._gccg =_afeff ;default:_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_fgca );
return nil ,_d .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fgca );};return _gcfb ,nil ;};func (_dgbcd *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _cgfda []*PdfFieldSignature ;
for _ ,_cfag :=range _dgbcd .AllFields (){switch _aebg :=_cfag .GetContext ().(type ){case *PdfFieldSignature :_cbaea :=_aebg ;_cgfda =append (_cgfda ,_cbaea );};};return _cgfda ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_bfde *PdfPage )GetAllContentStreams ()(string ,error ){_dbea ,_gcadd :=_bfde .GetContentStreams ();if _gcadd !=nil {return "",_gcadd ;};return _ba .Join (_dbea ,"\u0020"),nil ;};func _edea (_efgcc _fb .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_dddbb :=NewPdfColorspaceSpecialIndexed ();
if _ebdf ,_aef :=_efgcc .(*_fb .PdfIndirectObject );_aef {_dddbb ._bdfce =_ebdf ;};_efgcc =_fb .TraceToDirectObject (_efgcc );_dbdbe ,_egec :=_efgcc .(*_fb .PdfObjectArray );if !_egec {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _dbdbe .Len ()!=4{return nil ,_d .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_efgcc =_dbdbe .Get (0);
_caa ,_egec :=_efgcc .(*_fb .PdfObjectName );if !_egec {return nil ,_d .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_caa !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_d .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_efgcc =_dbdbe .Get (1);_fafbf ,_dgea :=DetermineColorspaceNameFromPdfObject (_efgcc );if _dgea !=nil {return nil ,_dgea ;};if _fafbf =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_fafbf =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_ef .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_fafbf );
return nil ,_aagec ;};_gbbf ,_dgea :=NewPdfColorspaceFromPdfObject (_efgcc );if _dgea !=nil {return nil ,_dgea ;};_dddbb .Base =_gbbf ;_efgcc =_dbdbe .Get (2);_gceb ,_dgea :=_fb .GetNumberAsInt64 (_efgcc );if _dgea !=nil {return nil ,_dgea ;};if _gceb > 255{return nil ,_d .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_dddbb .HiVal =int (_gceb );_efgcc =_dbdbe .Get (3);_dddbb .Lookup =_efgcc ;_efgcc =_fb .TraceToDirectObject (_efgcc );var _bfbf []byte ;if _feea ,_afba :=_efgcc .(*_fb .PdfObjectString );_afba {_bfbf =_feea .Bytes ();_ef .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_bfbf );
}else if _fdee ,_gaag :=_efgcc .(*_fb .PdfObjectStream );_gaag {_ef .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_efgcc .String ());_ef .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_fdee .Stream ),_fdee .Stream );
_acf ,_efbgf :=_fb .DecodeStream (_fdee );if _efbgf !=nil {return nil ,_efbgf ;};_ef .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_acf ),_acf );_bfbf =_acf ;}else {_ef .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_efgcc );
return nil ,_d .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_bfbf )< _dddbb .Base .GetNumComponents ()*(_dddbb .HiVal +1){_ef .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_ef .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_bfbf ),_dddbb .Base .GetNumComponents (),_dddbb .HiVal );
}else {_bfbf =_bfbf [:_dddbb .Base .GetNumComponents ()*(_dddbb .HiVal +1)];};_dddbb ._bfec =_bfbf ;return _dddbb ,nil ;};func (_aed *PdfReader )newPdfActionGotoRFromDict (_bdad *_fb .PdfObjectDictionary )(*PdfActionGoToR ,error ){_ddb ,_dfgc :=_agad (_bdad .Get ("\u0046"));
if _dfgc !=nil {return nil ,_dfgc ;};return &PdfActionGoToR {D :_bdad .Get ("\u0044"),NewWindow :_bdad .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_ddb },nil ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_edcd *DSS )GetContainingPdfObject ()_fb .PdfObject {return _edcd ._cgbcc };

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_gced :=&PdfFieldSignature {};_gced .PdfField =NewPdfField ();_gced .PdfField .SetContext (_gced );_gced .PdfAnnotationWidget =NewPdfAnnotationWidget ();_gced .PdfAnnotationWidget .SetContext (_gced );
_gced .PdfAnnotationWidget ._fcf =_gced .PdfField ._ecgg ;_gced .T =_fb .MakeString ("");_gced .F =_fb .MakeInteger (132);_gced .V =signature ;return _gced ;};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_cfceb *PdfReader )GetCatalogStructTreeRoot ()(_fb .PdfObject ,bool ){if _cfceb ._babag ==nil {return nil ,false ;};_ecade :=_cfceb ._babag .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return _ecade ,_ecade !=nil ;
};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bggc *PdfShadingType4 )ToPdfObject ()_fb .PdfObject {_bggc .PdfShading .ToPdfObject ();_gaceaa ,_gccde :=_bggc .getShadingDict ();if _gccde !=nil {_ef .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _bggc .BitsPerCoordinate !=nil {_gaceaa .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bggc .BitsPerCoordinate );};if _bggc .BitsPerComponent !=nil {_gaceaa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bggc .BitsPerComponent );
};if _bggc .BitsPerFlag !=nil {_gaceaa .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bggc .BitsPerFlag );};if _bggc .Decode !=nil {_gaceaa .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bggc .Decode );};if _bggc .Function !=nil {if len (_bggc .Function )==1{_gaceaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bggc .Function [0].ToPdfObject ());
}else {_gbedf :=_fb .MakeArray ();for _ ,_cgfdd :=range _bggc .Function {_gbedf .Append (_cgfdd .ToPdfObject ());};_gaceaa .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gbedf );};};return _bggc ._fcfag ;};

// ToPdfObject implements interface PdfModel.
func (_dfb *PdfAnnotationHighlight )ToPdfObject ()_fb .PdfObject {_dfb .PdfAnnotation .ToPdfObject ();_gagd :=_dfb ._fcf ;_gfag :=_gagd .PdfObject .(*_fb .PdfObjectDictionary );_dfb .PdfAnnotationMarkup .appendToPdfDictionary (_gfag );_gfag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_gfag .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dfb .QuadPoints );return _gagd ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_efgg *PdfFieldButton )GetType ()ButtonType {_cfda :=ButtonTypeCheckbox ;if _efgg .Ff !=nil {if (uint32 (*_efgg .Ff )&FieldFlagPushbutton .Mask ())> 0{_cfda =ButtonTypePush ;}else if (uint32 (*_efgg .Ff )&FieldFlagRadio .Mask ())> 0{_cfda =ButtonTypeRadio ;
};};return _cfda ;};

// SetFlag sets the flag for the field.
func (_dead *PdfField )SetFlag (flag FieldFlag ){_dead .Ff =_fb .MakeInteger (int64 (flag ))};func (_fcaca *PdfReader )resolveReference (_aacbff *_fb .PdfObjectReference )(_fb .PdfObject ,bool ,error ){_dfbggb ,_aegbc :=_fcaca ._gfcg .ObjCache [int (_aacbff .ObjectNumber )];
if !_aegbc {_ef .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_aacbff );_beaf ,_cdgggf :=_fcaca ._gfcg .LookupByReference (*_aacbff );if _cdgggf !=nil {return nil ,false ,_cdgggf ;};
_fcaca ._gfcg .ObjCache [int (_aacbff .ObjectNumber )]=_beaf ;return _beaf ,false ,nil ;};return _dfbggb ,true ,nil ;};func _cdbge (_bdfgf *_fb .PdfObjectStream )(*PdfFunctionType4 ,error ){_egcfb :=&PdfFunctionType4 {};_egcfb ._fbcdf =_bdfgf ;_cecad :=_bdfgf .PdfObjectDictionary ;
_fdcff ,_aageg :=_fb .TraceToDirectObject (_cecad .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fb .PdfObjectArray );if !_aageg {_ef .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ged .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _fdcff .Len ()%2!=0{_ef .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ged .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_dbccg ,_ccgfc :=_fdcff .ToFloat64Array ();
if _ccgfc !=nil {return nil ,_ccgfc ;};_egcfb .Domain =_dbccg ;_fdcff ,_aageg =_fb .TraceToDirectObject (_cecad .Get ("\u0052\u0061\u006eg\u0065")).(*_fb .PdfObjectArray );if _aageg {if _fdcff .Len ()< 0||_fdcff .Len ()%2!=0{return nil ,_ged .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_abfec ,_accf :=_fdcff .ToFloat64Array ();if _accf !=nil {return nil ,_accf ;};_egcfb .Range =_abfec ;};_gbba ,_ccgfc :=_fb .DecodeStream (_bdfgf );if _ccgfc !=nil {return nil ,_ccgfc ;};_egcfb ._begca =_gbba ;_ggada :=_dc .NewPSParser (_gbba );_dddde ,_ccgfc :=_ggada .Parse ();
if _ccgfc !=nil {return nil ,_ccgfc ;};_egcfb .Program =_dddde ;return _egcfb ,nil ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// Encoder returns the font's text encoder.
func (_egca pdfFontType0 )Encoder ()_ff .TextEncoder {return _egca ._eeaeg };

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_baeg *PdfFont )BytesToCharcodes (data []byte )[]_ff .CharCode {_ef .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _dffff ,_fbgaee :=_baeg ._gccg .(*pdfFontType0 );_fbgaee &&_dffff ._dcfg !=nil {if _gfbfe ,_gfba :=_dffff .bytesToCharcodes (data );_gfba {return _gfbfe ;};};var (_aacca =make ([]_ff .CharCode ,0,len (data )+len (data )%2);_edfga =_baeg .baseFields ();
);if _edfga ._fadd !=nil {if _ddcbb ,_cgac :=_edfga ._fadd .BytesToCharcodes (data );_cgac {for _ ,_ddbd :=range _ddcbb {_aacca =append (_aacca ,_ff .CharCode (_ddbd ));};return _aacca ;};};if _edfga .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _bgbec :=0;_bgbec < len (data );_bgbec +=2{_eadaa :=uint16 (data [_bgbec ])<<8|uint16 (data [_bgbec +1]);_aacca =append (_aacca ,_ff .CharCode (_eadaa ));};}else {for _ ,_dgbfc :=range data {_aacca =append (_aacca ,_ff .CharCode (_dgbfc ));
};};return _aacca ;};func (_dgce *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _ddca :=_dgce ._gcge ;_ddca !=nil {return _ddca ;};return _dgce ._cefb ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_deee :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_deee ;};

// AllFields returns a flattened list of all fields in the form.
func (_ddbag *PdfAcroForm )AllFields ()[]*PdfField {if _ddbag ==nil {return nil ;};var _dddgc []*PdfField ;if _ddbag .Fields !=nil {for _ ,_fcfa :=range *_ddbag .Fields {_dddgc =append (_dddgc ,_ecfd (_fcfa )...);};};return _dddgc ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_gabdb *PdfField )FullName ()(string ,error ){var _baec _cbg .Buffer ;_dafd :=[]string {};if _gabdb .T !=nil {_dafd =append (_dafd ,_gabdb .T .Decoded ());};_bfdf :=map[*PdfField ]bool {};_bfdf [_gabdb ]=true ;_dfag :=_gabdb .Parent ;for _dfag !=nil {if _ ,_dgbc :=_bfdf [_dfag ];
_dgbc {return _baec .String (),_ged .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _dfag .T ==nil {return _baec .String (),_ged .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_dafd =append (_dafd ,_dfag .T .Decoded ());_bfdf [_dfag ]=true ;_dfag =_dfag .Parent ;};for _cded :=len (_dafd )-1;_cded >=0;_cded --{_baec .WriteString (_dafd [_cded ]);if _cded > 0{_baec .WriteString ("\u002e");};};return _baec .String (),nil ;};

// String returns a human readable description of `fontfile`.
func (_cbebd *fontFile )String ()string {_agcgd :="\u005b\u004e\u006f\u006e\u0065\u005d";if _cbebd ._bcee !=nil {_agcgd =_cbebd ._bcee .String ();};return _d .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_cbebd ._cacb ,_agcgd );
};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_ddebe *PdfPage )Size ()(float64 ,float64 ,error ){_gaffa ,_bfgga :=_ddebe .GetMediaBox ();if _bfgga !=nil {return 0,0,_bfgga ;};_adgcbf ,_gcgeb :=_gaffa .Width (),_gaffa .Height ();_dbecee ,_bfgga :=_ddebe .GetRotate ();if _bfgga !=nil {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_bfgga .Error ());
};if _begec :=_dbecee ;_begec %360!=0&&_begec %90==0{if _caagg :=(360+_begec %360)%360;_caagg ==90||_caagg ==270{_adgcbf ,_gcgeb =_gcgeb ,_adgcbf ;};};return _adgcbf ,_gcgeb ,nil ;};func (_cadgg *PdfReader )newPdfAcroFormFromDict (_ceffgb *_fb .PdfIndirectObject ,_aacg *_fb .PdfObjectDictionary )(*PdfAcroForm ,error ){_fdabe :=NewPdfAcroForm ();
if _ceffgb !=nil {_fdabe ._gcada =_ceffgb ;_ceffgb .PdfObject =_fb .MakeDict ();};if _dgffc :=_aacg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_dgffc !=nil &&!_fb .IsNullObject (_dgffc ){_cgcd ,_cefda :=_fb .GetArray (_dgffc );if !_cefda {return nil ,_d .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_dgffc );
};var _beebd []*PdfField ;for _ ,_deba :=range _cgcd .Elements (){_bfafg ,_eaadd :=_fb .GetIndirect (_deba );if !_eaadd {if _ ,_afafc :=_deba .(*_fb .PdfObjectNull );_afafc {_ef .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_ef .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_deba );
return nil ,_d .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fegf ,_bccfg :=_cadgg .newPdfFieldFromIndirectObject (_bfafg ,nil );
if _bccfg !=nil {return nil ,_bccfg ;};_ef .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_fegf );_beebd =append (_beebd ,_fegf );};_fdabe .Fields =&_beebd ;};if _ecfec :=_aacg .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_ecfec !=nil {_agddg ,_cdffb :=_fb .GetBool (_ecfec );if _cdffb {_fdabe .NeedAppearances =_agddg ;}else {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_ecfec );
};};if _bbaa :=_aacg .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_bbaa !=nil {_gbcfd ,_efcaf :=_fb .GetInt (_bbaa );if _efcaf {_fdabe .SigFlags =_gbcfd ;}else {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bbaa );
};};if _edagd :=_aacg .Get ("\u0043\u004f");_edagd !=nil {_ffebb ,_bdaf :=_fb .GetArray (_edagd );if _bdaf {_fdabe .CO =_ffebb ;}else {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_edagd );
};};if _gfgda :=_aacg .Get ("\u0044\u0052");_gfgda !=nil {if _gaba ,_degca :=_fb .GetDict (_gfgda );_degca {_egged ,_fabdc :=NewPdfPageResourcesFromDict (_gaba );if _fabdc !=nil {_ef .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_fabdc );
return nil ,_fabdc ;};_fdabe .DR =_egged ;}else {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_gfgda );};};if _eeaae :=_aacg .Get ("\u0044\u0041");
_eeaae !=nil {_gagdb ,_cecde :=_fb .GetString (_eeaae );if _cecde {_fdabe .DA =_gagdb ;}else {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_eeaae );
};};if _edbe :=_aacg .Get ("\u0051");_edbe !=nil {_cbgb ,_ecgeb :=_fb .GetInt (_edbe );if _ecgeb {_fdabe .Q =_cbgb ;}else {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_edbe );
};};if _aagad :=_aacg .Get ("\u0058\u0046\u0041");_aagad !=nil {_fdabe .XFA =_aagad ;};_fdabe .ToPdfObject ();return _fdabe ,nil ;};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _fb .PdfObject ;NewWindow _fb .PdfObject ;T _fb .PdfObject ;};type pdfFontType3 struct{fontCommon ;_ddafa *_fb .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _fb .PdfObject ;Encoding _fb .PdfObject ;FontBBox _fb .PdfObject ;FontMatrix _fb .PdfObject ;FirstChar _fb .PdfObject ;LastChar _fb .PdfObject ;Widths _fb .PdfObject ;Resources _fb .PdfObject ;_ddfgd map[_ff .CharCode ]float64 ;_abgda _ff .TextEncoder ;
};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_adf :=NewPdfAction ();_gd :=&PdfActionThread {};_gd .PdfAction =_adf ;_adf .SetContext (_gd );return _gd ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_aeg :=NewPdfAnnotation ();_abc :=&PdfAnnotationInk {};_abc .PdfAnnotation =_aeg ;_abc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aeg .SetContext (_abc );return _abc ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_dbdd *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bafg :=vals [0];if _bafg < 0.0||_bafg > 100.0{_ef .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_bafg );
return nil ,ErrColorOutOfRange ;};_ebcad :=vals [1];_agf :=float64 (-100);_cbbdg :=float64 (100);if len (_dbdd .Range )> 1{_agf =_dbdd .Range [0];_cbbdg =_dbdd .Range [1];};if _ebcad < _agf ||_ebcad > _cbbdg {_ef .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_ebcad ,_agf ,_cbbdg );
return nil ,ErrColorOutOfRange ;};_begb :=vals [2];_dgbf :=float64 (-100);_fbgae :=float64 (100);if len (_dbdd .Range )> 3{_dgbf =_dbdd .Range [2];_fbgae =_dbdd .Range [3];};if _begb < _dgbf ||_begb > _fbgae {_ef .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_begb ,_dgbf ,_fbgae );
return nil ,ErrColorOutOfRange ;};_egbeb :=NewPdfColorLab (_bafg ,_ebcad ,_begb );return _egbeb ,nil ;};func _dbbbg (_eagfg _fb .PdfObject )(*PdfShading ,error ){_ebcca :=&PdfShading {};var _caba *_fb .PdfObjectDictionary ;if _bcaec ,_bgced :=_fb .GetIndirect (_eagfg );
_bgced {_ebcca ._fcfag =_bcaec ;_dgcae ,_aaca :=_bcaec .PdfObject .(*_fb .PdfObjectDictionary );if !_aaca {_ef .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");
return nil ,_fb .ErrTypeError ;};_caba =_dgcae ;}else if _gabcb ,_dddc :=_fb .GetStream (_eagfg );_dddc {_ebcca ._fcfag =_gabcb ;_caba =_gabcb .PdfObjectDictionary ;}else if _dcgfe ,_aabcg :=_fb .GetDict (_eagfg );_aabcg {_ebcca ._fcfag =_dcgfe ;_caba =_dcgfe ;
}else {_ef .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_eagfg );return nil ,_fb .ErrTypeError ;};if _caba ==nil {_ef .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_ged .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_eagfg =_caba .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _eagfg ==nil {_ef .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_eagfg =_fb .TraceToDirectObject (_eagfg );_aefbd ,_cega :=_eagfg .(*_fb .PdfObjectInteger );if !_cega {_ef .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_eagfg );
return nil ,_fb .ErrTypeError ;};if *_aefbd < 1||*_aefbd > 7{_ef .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_aefbd );
return nil ,_fb .ErrTypeError ;};_ebcca .ShadingType =_aefbd ;_eagfg =_caba .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _eagfg ==nil {_ef .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cbaded ,_adace :=NewPdfColorspaceFromPdfObject (_eagfg );if _adace !=nil {_ef .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_adace );
return nil ,_adace ;};_ebcca .ColorSpace =_cbaded ;_eagfg =_caba .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _eagfg !=nil {_eagfg =_fb .TraceToDirectObject (_eagfg );_dbeec ,_bfcfe :=_eagfg .(*_fb .PdfObjectArray );if !_bfcfe {_ef .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_eagfg );
return nil ,_fb .ErrTypeError ;};_ebcca .Background =_dbeec ;};_eagfg =_caba .Get ("\u0042\u0042\u006f\u0078");if _eagfg !=nil {_eagfg =_fb .TraceToDirectObject (_eagfg );_bcfca ,_eefgg :=_eagfg .(*_fb .PdfObjectArray );if !_eefgg {_ef .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_eagfg );
return nil ,_fb .ErrTypeError ;};_ffgaae ,_bbccf :=NewPdfRectangle (*_bcfca );if _bbccf !=nil {_ef .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_bbccf );return nil ,_bbccf ;};_ebcca .BBox =_ffgaae ;};_eagfg =_caba .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _eagfg !=nil {_eagfg =_fb .TraceToDirectObject (_eagfg );_aabd ,_fagacd :=_eagfg .(*_fb .PdfObjectBool );if !_fagacd {_ef .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eagfg );
return nil ,_fb .ErrTypeError ;};_ebcca .AntiAlias =_aabd ;};switch *_aefbd {case 1:_efbbc ,_febdc :=_bebfb (_caba );if _febdc !=nil {return nil ,_febdc ;};_efbbc .PdfShading =_ebcca ;_ebcca ._efda =_efbbc ;return _ebcca ,nil ;case 2:_caffg ,_fgggb :=_feac (_caba );
if _fgggb !=nil {return nil ,_fgggb ;};_caffg .PdfShading =_ebcca ;_ebcca ._efda =_caffg ;return _ebcca ,nil ;case 3:_ecafa ,_adcacf :=_gebab (_caba );if _adcacf !=nil {return nil ,_adcacf ;};_ecafa .PdfShading =_ebcca ;_ebcca ._efda =_ecafa ;return _ebcca ,nil ;
case 4:_fegea ,_eeccf :=_dedad (_caba );if _eeccf !=nil {return nil ,_eeccf ;};_fegea .PdfShading =_ebcca ;_ebcca ._efda =_fegea ;return _ebcca ,nil ;case 5:_fffbg ,_edeef :=_cdfgg (_caba );if _edeef !=nil {return nil ,_edeef ;};_fffbg .PdfShading =_ebcca ;
_ebcca ._efda =_fffbg ;return _ebcca ,nil ;case 6:_ccead ,_fdfbb :=_eeeef (_caba );if _fdfbb !=nil {return nil ,_fdfbb ;};_ccead .PdfShading =_ebcca ;_ebcca ._efda =_ccead ;return _ebcca ,nil ;case 7:_bddg ,_agbbg :=_agecd (_caba );if _agbbg !=nil {return nil ,_agbbg ;
};_bddg .PdfShading =_ebcca ;_ebcca ._efda =_bddg ;return _ebcca ,nil ;};return nil ,_ged .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _fb .PdfObject ;MK _fb .PdfObject ;A _fb .PdfObject ;AA _fb .PdfObject ;BS _fb .PdfObject ;Parent _fb .PdfObject ;_fcc *PdfField ;_ece bool ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_aedac *PdfPageResources )GetShadingByName (keyName _fb .PdfObjectName )(*PdfShading ,bool ){if _aedac .Shading ==nil {return nil ,false ;};_baaa ,_cafbc :=_fb .TraceToDirectObject (_aedac .Shading ).(*_fb .PdfObjectDictionary );if !_cafbc {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aedac .Shading );
return nil ,false ;};if _dgdda :=_baaa .Get (keyName );_dgdda !=nil {_cadgf ,_fccfc :=_dbbbg (_dgdda );if _fccfc !=nil {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_fccfc );
return nil ,false ;};return _cadgf ,true ;};return nil ,false ;};func (_bacfa *PdfWriter )addObjects (_faagg _fb .PdfObject )error {_ef .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _ffdcb ,_bgfgc :=_faagg .(*_fb .PdfIndirectObject );
_bgfgc {_ef .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_ef .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_faagg ,_ffdcb );_ef .Log .Trace ("\u002d\u0020\u0025\u0073",_ffdcb .PdfObject );if _bacfa .addObject (_ffdcb ){_cegea :=_bacfa .addObjects (_ffdcb .PdfObject );
if _cegea !=nil {return _cegea ;};};return nil ;};if _ccbb ,_bcaga :=_faagg .(*_fb .PdfObjectStream );_bcaga {_ef .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_ef .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_faagg ,_faagg );if _bacfa .addObject (_ccbb ){_deafg :=_bacfa .addObjects (_ccbb .PdfObjectDictionary );
if _deafg !=nil {return _deafg ;};};return nil ;};if _bdfca ,_agfgb :=_faagg .(*_fb .PdfObjectDictionary );_agfgb {_ef .Log .Trace ("\u0044\u0069\u0063\u0074");_ef .Log .Trace ("\u002d\u0020\u0025\u0073",_faagg );for _ ,_gebadd :=range _bdfca .Keys (){_bgedf :=_bdfca .Get (_gebadd );
if _bbdgdb ,_gbccd :=_bgedf .(*_fb .PdfObjectReference );_gbccd {_bgedf =_bbdgdb .Resolve ();_bdfca .Set (_gebadd ,_bgedf );};if _gebadd !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _defeg :=_bacfa .addObjects (_bgedf );_defeg !=nil {return _defeg ;};}else {if _ ,_eabgc :=_bgedf .(*_fb .PdfObjectNull );
_eabgc {continue ;};if _bfecd :=_bacfa .hasObject (_bgedf );!_bfecd {_ef .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_bgedf ,_bgedf ,_bgedf );
_bacfa ._cbbdb [_bgedf ]=append (_bacfa ._cbbdb [_bgedf ],_bdfca );};};};return nil ;};if _dfcab ,_efgf :=_faagg .(*_fb .PdfObjectArray );_efgf {_ef .Log .Trace ("\u0041\u0072\u0072a\u0079");_ef .Log .Trace ("\u002d\u0020\u0025\u0073",_faagg );if _dfcab ==nil {return _ged .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _edce ,_fdadg :=range _dfcab .Elements (){if _cafdd ,_fgcage :=_fdadg .(*_fb .PdfObjectReference );_fgcage {_fdadg =_cafdd .Resolve ();_dfcab .Set (_edce ,_fdadg );};if _bgcedf :=_bacfa .addObjects (_fdadg );_bgcedf !=nil {return _bgcedf ;};};return nil ;
};if _ ,_gaacd :=_faagg .(*_fb .PdfObjectReference );_gaacd {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_faagg );
return _ged .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// Encoder returns the font's text encoder.
func (_aggf *pdfFontSimple )Encoder ()_ff .TextEncoder {if _aggf ._fgfg !=nil {return _aggf ._fgfg ;};if _aggf ._fgbba !=nil {return _aggf ._fgbba ;};_agfa ,_ :=_ff .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _agfa ;};func _ageb (_ccbca *PdfField ,_daggg _fb .PdfObject )error {switch _ccbca .GetContext ().(type ){case *PdfFieldText :switch _egae :=_daggg .(type ){case *_fb .PdfObjectName :_gaeca :=_egae ;_ef .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_gaeca .String ());
_ccbca .V =_fb .MakeEncodedString (_egae .String (),true );case *_fb .PdfObjectString :_ccbca .V =_fb .MakeEncodedString (_egae .String (),true );default:_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_egae ,_egae );
};case *PdfFieldButton :switch _daggg .(type ){case *_fb .PdfObjectName :if len (_daggg .String ())> 0{_ccbca .V =_daggg ;_fbgf (_ccbca ,_daggg );};case *_fb .PdfObjectString :if len (_daggg .String ())> 0{_ccbca .V =_fb .MakeName (_daggg .String ());_fbgf (_ccbca ,_ccbca .V );
};default:_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_ccbca .PartialName (),_daggg );_ccbca .V =_daggg ;};case *PdfFieldChoice :switch _daggg .(type ){case *_fb .PdfObjectName :if len (_daggg .String ())> 0{_ccbca .V =_fb .MakeString (_daggg .String ());
_fbgf (_ccbca ,_daggg );};case *_fb .PdfObjectString :if len (_daggg .String ())> 0{_ccbca .V =_daggg ;_fbgf (_ccbca ,_fb .MakeName (_daggg .String ()));};default:_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_ccbca .PartialName (),_daggg );
_ccbca .V =_daggg ;};case *PdfFieldSignature :_ef .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_ccbca .PartialName (),_daggg );
};return nil ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_fabd *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_afgef *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_eceeb ,_cggd :=_fb .GetDict (_afgef ._cgegde .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_cggd {_eceeb =_fb .MakeDict ();_afgef ._cgegde .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_eceeb );
};_gbcad ,_cggd :=_fb .GetDict (_eceeb .Get (_fb .PdfObjectName (extName )));if !_cggd {_gbcad =_fb .MakeDict ();_eceeb .Set (_fb .PdfObjectName (extName ),_gbcad );};if _ffged ,_ :=_fb .GetNameVal (_gbcad .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_ffged !=baseVersion {_gbcad .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_fb .MakeName (baseVersion ));};if _caeffe ,_ :=_fb .GetIntVal (_gbcad .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_caeffe !=extLevel {_gbcad .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_fb .MakeInteger (int64 (extLevel )));};};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_baege *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _baege ._gfcg .GetRevisionNumber ()==0{return nil ,_ged .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _dgee ,_fdbff :=_baege ._gcga [_baege ];_fdbff {return _dgee ,nil ;};_fgfgg ,_debac :=_baege ._gfcg .GetPreviousRevisionReadSeeker ();if _debac !=nil {return nil ,_debac ;};_baffe ,_debac :=_gfdgb (_fgfgg ,_baege ._egcfc ,_baege ._dccae ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _debac !=nil {return nil ,_debac ;};_baege ._aeabd [_baege ._gfcg .GetRevisionNumber ()-1]=_baffe ;_baege ._gcga [_baege ]=_baffe ;_baffe ._gcga =_baege ._gcga ;return _baffe ,nil ;};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_abbdf *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_efbg ,_gccd :=color .(*PdfColorDeviceCMYK );if !_gccd {_ef .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_ged .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eaad :=_efbg .C ();_fcbdc :=_efbg .M ();_fabe :=_efbg .Y ();_bbag :=_efbg .K ();_eaad =_eaad *(1-_bbag )+_bbag ;_fcbdc =_fcbdc *(1-_bbag )+_bbag ;
_fabe =_fabe *(1-_bbag )+_bbag ;_fcgba :=1-_eaad ;_cdff :=1-_fcbdc ;_dgca :=1-_fabe ;return NewPdfColorDeviceRGB (_fcgba ,_cdff ,_dgca ),nil ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_gfff *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_ged .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_ffdc ,_egbe :=_cg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._feec ,img ._fcgee );if _egbe !=nil {return img ,_egbe ;};_gcac ,_egbe :=_cg .GrayConverter .Convert (_ffdc );if _egbe !=nil {return img ,_egbe ;
};return _dbge (_gcac .Base ()),nil ;};func (_aaeb *PdfReader )newPdfAnnotation3DFromDict (_dcef *_fb .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_fbe :=PdfAnnotation3D {};_fbe .T3DD =_dcef .Get ("\u0033\u0044\u0044");_fbe .T3DV =_dcef .Get ("\u0033\u0044\u0056");
_fbe .T3DA =_dcef .Get ("\u0033\u0044\u0041");_fbe .T3DI =_dcef .Get ("\u0033\u0044\u0049");_fbe .T3DB =_dcef .Get ("\u0033\u0044\u0042");return &_fbe ,nil ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_cccf *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _cccf .flattenFieldsWithOpts (false ,appgen ,opts );};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_cdccb .Lock ();defer _cdccb .Unlock ();_afdge =subject };

// Fill populates `form` with values provided by `provider`.
func (_daaba *PdfAcroForm )Fill (provider FieldValueProvider )error {return _daaba .fill (provider ,nil )};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _fb .PdfObject ;Sy _fb .PdfObject ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_aaab *PdfFont )CharcodesToUnicode (charcodes []_ff .CharCode )[]rune {_dgcde ,_ ,_ :=_aaab .CharcodesToUnicodeWithStats (charcodes );return _dgcde ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_gceg *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _fb .GetNumberAsFloat (_gceg .Ascent );};func (_afgb *PdfReader )lookupPageByObject (_agcbe _fb .PdfObject )(*PdfPage ,error ){return nil ,_ged .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_ggbb *PdfPage )GetRotate ()(int64 ,error ){if _ggbb .Rotate !=nil {return *_ggbb .Rotate ,nil ;};_bcebb :=_ggbb .Parent ;for _bcebb !=nil {_aegdb ,_ebfbe :=_fb .GetDict (_bcebb );if !_ebfbe {return 0,_ged .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _dgbcdc :=_aegdb .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_dgbcdc !=nil {_eaabfd ,_eeabf :=_fb .GetInt (_dgbcdc );if !_eeabf {return 0,_ged .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");
};if _eaabfd !=nil {return int64 (*_eaabfd ),nil ;};return 0,_ged .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_bcebb =_aegdb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_ged .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_cdccb .Lock ();defer _cdccb .Unlock ();_gbeeg =title };

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_abgd :=PdfColorCalGray (grayVal );return &_abgd ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_dfc :=NewPdfAction ();_ecg :=&PdfActionGoTo3DView {};_ecg .PdfAction =_dfc ;_dfc .SetContext (_ecg );return _ecg ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_fgddc DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// GetFillImage get attached model.Image in push button.
func (_cgdg *PdfFieldButton )GetFillImage ()*Image {if _cgdg .IsPush (){return _cgdg ._ceff ;};return nil ;};func (_ccb *PdfReader )newPdfActionImportDataFromDict (_gee *_fb .PdfObjectDictionary )(*PdfActionImportData ,error ){_dfe ,_fab :=_agad (_gee .Get ("\u0046"));
if _fab !=nil {return nil ,_fab ;};return &PdfActionImportData {F :_dfe },nil ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _ag .Permissions ;Algorithm EncryptionAlgorithm ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_ecaag *PdfReader )Inspect ()(map[string ]int ,error ){return _ecaag ._gfcg .Inspect ()};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_cdccb .Lock ();defer _cdccb .Unlock ();_dcfdc =creator };

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_dfgeed *PdfReader )GetObjectNums ()[]int {return _dfgeed ._gfcg .GetObjectNums ()};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fb .PdfObject ;IC _fb .PdfObject ;RO _fb .PdfObject ;OverlayText _fb .PdfObject ;Repeat _fb .PdfObject ;DA _fb .PdfObject ;Q _fb .PdfObject ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_afdf *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_fff :=range pages {_fff =_fff .Duplicate ();_abdfge (_fff );_afdf ._bage =append (_afdf ._bage ,_fff );};};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_aaagf *PdfColorspaceLab )ColorFromPdfObjects (objects []_fb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfbbf ,_cede :=_fb .GetNumbersAsFloat (objects );
if _cede !=nil {return nil ,_cede ;};return _aaagf .ColorFromFloats (_bfbbf );};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_gbfdec :=&XObjectForm {};_ccebf :=&_fb .PdfObjectStream {};_ccebf .PdfObjectDictionary =_fb .MakeDict ();_gbfdec ._cabgcd =_ccebf ;return _gbfdec ;};func _gfdgb (_fbdd _fe .ReadSeeker ,_dgfc *ReaderOpts ,_cfgb bool ,_ddge string )(*PdfReader ,error ){if _dgfc ==nil {_dgfc =NewReaderOpts ();
};_dbabd :=*_dgfc ;_ddgeb :=&PdfReader {_ebgad :_fbdd ,_fbgdb :map[_fb .PdfObject ]struct{}{},_bcbaa :_fgdaa (),_abae :_dgfc .LazyLoad ,_babdgf :_dgfc .ComplianceMode ,_dccae :_cfgb ,_egcfc :&_dbabd };_ddec ,_dcbce :=_abece ("\u0072");if _dcbce !=nil {return nil ,_dcbce ;
};_dcbce =_fde .Track (_ddec ,_ddge );if _dcbce !=nil {return nil ,_dcbce ;};_ddgeb ._bdgec =_ddec ;var _afbfge *_fb .PdfParser ;if !_ddgeb ._babdgf {_afbfge ,_dcbce =_fb .NewParser (_fbdd );}else {_afbfge ,_dcbce =_fb .NewCompliancePdfParser (_fbdd );
};if _dcbce !=nil {return nil ,_dcbce ;};_ddgeb ._gfcg =_afbfge ;_afaab ,_dcbce :=_ddgeb .IsEncrypted ();if _dcbce !=nil {return nil ,_dcbce ;};if !_afaab {_dcbce =_ddgeb .loadStructure ();if _dcbce !=nil {return nil ,_dcbce ;};}else if _cfgb {_ebab ,_gebg :=_ddgeb .Decrypt ([]byte (_dgfc .Password ));
if _gebg !=nil {return nil ,_gebg ;};if !_ebab {return nil ,_ged .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_ddgeb ._gcga =make (map[*PdfReader ]*PdfReader );_ddgeb ._aeabd =make ([]*PdfReader ,_afbfge .GetRevisionNumber ());return _ddgeb ,nil ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_fbcg *PdfPage )AppendContentStream (contentStr string )error {_cdge ,_aggfc :=_fbcg .GetContentStreams ();if _aggfc !=nil {return _aggfc ;};if len (_cdge )==0{_cdge =[]string {contentStr };return _fbcg .SetContentStreams (_cdge ,_fb .NewFlateEncoder ());
};var _eggga _cbg .Buffer ;_eggga .WriteString (_cdge [len (_cdge )-1]);_eggga .WriteString ("\u000a");_eggga .WriteString (contentStr );_cdge [len (_cdge )-1]=_eggga .String ();return _fbcg .SetContentStreams (_cdge ,_fb .NewFlateEncoder ());};

// M returns the value of the magenta component of the color.
func (_cgbc *PdfColorDeviceCMYK )M ()float64 {return _cgbc [1]};func (_cfa *PdfReader )newPdfAnnotationFileAttachmentFromDict (_bfc *_fb .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_dec :=PdfAnnotationFileAttachment {};_deaaf ,_agcc :=_cfa .newPdfAnnotationMarkupFromDict (_bfc );
if _agcc !=nil {return nil ,_agcc ;};_dec .PdfAnnotationMarkup =_deaaf ;_dec .FS =_bfc .Get ("\u0046\u0053");_dec .Name =_bfc .Get ("\u004e\u0061\u006d\u0065");return &_dec ,nil ;};func (_fagac *PdfFilespec )getDict ()*_fb .PdfObjectDictionary {if _efe ,_fddeg :=_fagac ._caee .(*_fb .PdfIndirectObject );
_fddeg {_bgdc ,_dccb :=_efe .PdfObject .(*_fb .PdfObjectDictionary );if !_dccb {return nil ;};return _bgdc ;}else if _afegb ,_abdf :=_fagac ._caee .(*_fb .PdfObjectDictionary );_abdf {return _afegb ;}else {_ef .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_fagac ._caee );
return nil ;};};func _aaegd (_dfbfa _fb .PdfObject )(*fontFile ,error ){_ef .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_dfbfa );
_gddee :=&fontFile {};_dfbfa =_fb .TraceToDirectObject (_dfbfa );_efbc ,_efbga :=_dfbfa .(*_fb .PdfObjectStream );if !_efbga {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_dfbfa );
return nil ,_fb .ErrTypeError ;};_aebf :=_efbc .PdfObjectDictionary ;_fccgg ,_eddea :=_fb .DecodeStream (_efbc );if _eddea !=nil {return nil ,_eddea ;};_baadf ,_efbga :=_fb .GetNameVal (_aebf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_efbga {_gddee ._dceec =_baadf ;
if _baadf =="\u0054\u0079\u0070\u0065\u0031\u0043"{_ef .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_gdbcc ,_ :=_fb .GetIntVal (_aebf .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_abbec ,_ :=_fb .GetIntVal (_aebf .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _gdbcc > len (_fccgg ){_gdbcc =len (_fccgg );
};if _gdbcc +_abbec > len (_fccgg ){_abbec =len (_fccgg )-_gdbcc ;};_dafb :=_fccgg [:_gdbcc ];var _agaf []byte ;if _abbec > 0{_agaf =_fccgg [_gdbcc :_gdbcc +_abbec ];};if _gdbcc > 0&&_abbec > 0{_dgcg :=_gddee .loadFromSegments (_dafb ,_agaf );if _dgcg !=nil {return nil ,_dgcg ;
};};return _gddee ,nil ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_ebbcc *PdfOutlineTreeNode )GetContext ()PdfModel {if _cgfcf ,_bccdb :=_ebbcc ._acgg .(*PdfOutline );_bccdb {return _cgfcf ;};if _daccga ,_gadf :=_ebbcc ._acgg .(*PdfOutlineItem );_gadf {return _daccga ;};_ef .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_gdec *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_bdbff :=_gdec .fill (provider ,appGen );if _bdbff !=nil {return _bdbff ;};if _ ,_acgeg :=provider .(FieldImageProvider );_acgeg {_bdbff =_gdec .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _bdbff ;};func _fdfdg (_gbfea *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_gbfea }};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_febef *PdfReader )GetNameDictionary ()(_fb .PdfObject ,error ){_edbeb :=_fb .ResolveReference (_febef ._babag .Get ("\u004e\u0061\u006de\u0073"));if _edbeb ==nil {return nil ,nil ;};if !_febef ._abae {_aabfg :=_febef .traverseObjectData (_edbeb );
if _aabfg !=nil {return nil ,_aabfg ;};};return _edbeb ,nil ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_gacgd ,_bgag :=NewStandard14Font (basefont );if _bgag !=nil {panic (_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _gacgd ;};

// Encoder returns the font's text encoder.
func (_dage pdfFontType3 )Encoder ()_ff .TextEncoder {return _dage ._abgda };

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_gebe :=NewPdfAnnotation ();_cad :=&PdfAnnotationStamp {};_cad .PdfAnnotation =_gebe ;_cad .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gebe .SetContext (_cad );return _cad ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_ebde *Image )AlphaMap (mapFunc AlphaMapFunc ){for _eagfd ,_aaabe :=range _ebde ._feec {_ebde ._feec [_eagfd ]=mapFunc (_aaabe );};};func (_degb *PdfReader )newPdfAnnotationWatermarkFromDict (_gecg *_fb .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_ddc :=PdfAnnotationWatermark {};
_ddc .FixedPrint =_gecg .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_ddc ,nil ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_gaaaa :=&PdfOutlineItem {_daae :_fb .MakeIndirectObject (_fb .MakeDict ())};_gaaaa ._acgg =_gaaaa ;return _gaaaa ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_dbde *PdfPage )GetPageDict ()*_fb .PdfObjectDictionary {_abfdb :=_dbde ._ggafg ;_abfdb .Clear ();_abfdb .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0050\u0061\u0067\u0065"));_abfdb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dbde .Parent );
if _dbde .LastModified !=nil {_abfdb .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_dbde .LastModified .ToPdfObject ());};if _dbde .Resources !=nil {_abfdb .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_dbde .Resources .ToPdfObject ());
};if _dbde .CropBox !=nil {_abfdb .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_dbde .CropBox .ToPdfObject ());};if _dbde .MediaBox !=nil {_abfdb .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_dbde .MediaBox .ToPdfObject ());};if _dbde .BleedBox !=nil {_abfdb .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_dbde .BleedBox .ToPdfObject ());
};if _dbde .TrimBox !=nil {_abfdb .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_dbde .TrimBox .ToPdfObject ());};if _dbde .ArtBox !=nil {_abfdb .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_dbde .ArtBox .ToPdfObject ());};_abfdb .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_dbde .BoxColorInfo );
_abfdb .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_dbde .Contents );if _dbde .Rotate !=nil {_abfdb .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_fb .MakeInteger (*_dbde .Rotate ));};_abfdb .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_dbde .Group );
_abfdb .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_dbde .Thumb );_abfdb .SetIfNotNil ("\u0042",_dbde .B );_abfdb .SetIfNotNil ("\u0044\u0075\u0072",_dbde .Dur );_abfdb .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_dbde .Trans );_abfdb .SetIfNotNil ("\u0041\u0041",_dbde .AA );
_abfdb .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_dbde .Metadata );_abfdb .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_dbde .PieceInfo );_abfdb .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_dbde .StructParents );
_abfdb .SetIfNotNil ("\u0049\u0044",_dbde .ID );_abfdb .SetIfNotNil ("\u0050\u005a",_dbde .PZ );_abfdb .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_dbde .SeparationInfo );_abfdb .SetIfNotNil ("\u0054\u0061\u0062\u0073",_dbde .Tabs );
_abfdb .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_dbde .TemplateInstantiated );_abfdb .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_dbde .PresSteps );_abfdb .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_dbde .UserUnit );
_abfdb .SetIfNotNil ("\u0056\u0050",_dbde .VP );if _dbde ._dgcfa !=nil {_acccf :=_fb .MakeArray ();for _ ,_ecbg :=range _dbde ._dgcfa {if _afbfg :=_ecbg .GetContext ();_afbfg !=nil {_acccf .Append (_afbfg .ToPdfObject ());}else {_acccf .Append (_ecbg .ToPdfObject ());
};};if _acccf .Len ()> 0{_abfdb .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_acccf );};}else if _dbde .Annots !=nil {_abfdb .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_dbde .Annots );};return _abfdb ;};

// ToInteger convert to an integer format.
func (_cffd *PdfColorDeviceGray )ToInteger (bits int )uint32 {_bfaf :=_cb .Pow (2,float64 (bits ))-1;return uint32 (_bfaf *_cffd .Val ());};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_efcc *Outline )Insert (index uint ,item *OutlineItem ){_afacf :=uint (len (_efcc .Entries ));if index > _afacf {index =_afacf ;};_efcc .Entries =append (_efcc .Entries [:index ],append ([]*OutlineItem {item },_efcc .Entries [index :]...)...);};

// GetNumComponents returns the number of color components.
func (_gdbc *PdfColorspaceICCBased )GetNumComponents ()int {return _gdbc .N };func (_bgec *PdfAcroForm )filteredFields (_eagg FieldFilterFunc ,_bbfdc bool )[]*PdfField {if _bgec ==nil {return nil ;};return _dfea (_bgec .Fields ,_eagg ,_bbfdc );};func (_dabb *PdfReader )flattenFieldsWithOpts (_adece bool ,_bgcd FieldAppearanceGenerator ,_fdfa *FieldFlattenOpts )error {if _fdfa ==nil {_fdfa =&FieldFlattenOpts {};
};var _aadb bool ;_dadc :=map[*PdfAnnotation ]bool {};{var _gacd []*PdfField ;_edddb :=_dabb .AcroForm ;if _edddb !=nil {if _fdfa .FilterFunc !=nil {_gacd =_edddb .filteredFields (_fdfa .FilterFunc ,true );_aadb =_edddb .Fields !=nil &&len (*_edddb .Fields )> 0;
}else {_gacd =_edddb .AllFields ();};};for _ ,_fabb :=range _gacd {for _ ,_ecggc :=range _fabb .Annotations {_dadc [_ecggc .PdfAnnotation ]=_fabb .V !=nil ;if _bgcd !=nil {_cfbge ,_gefba :=_bgcd .GenerateAppearanceDict (_edddb ,_fabb ,_ecggc );if _gefba !=nil {return _gefba ;
};_ecggc .AP =_cfbge ;};};};};if _adece {for _ ,_bgege :=range _dabb .PageList {_gaccc ,_bgac :=_bgege .GetAnnotations ();if _bgac !=nil {return _bgac ;};for _ ,_ggfac :=range _gaccc {_dadc [_ggfac ]=true ;};};};for _ ,_gfdb :=range _dabb .PageList {var _fbcbg []*PdfAnnotation ;
if _bgcd !=nil {if _cgfb :=_bgcd .WrapContentStream (_gfdb );_cgfb !=nil {return _cgfb ;};};_addb ,_ecdc :=_gfdb .GetAnnotations ();if _ecdc !=nil {return _ecdc ;};for _ ,_cgbb :=range _addb {_bbgf ,_ggdef :=_dadc [_cgbb ];if !_ggdef &&_fdfa .AnnotFilterFunc !=nil {if _ ,_afgfa :=_cgbb .GetContext ().(*PdfAnnotationWidget );
!_afgfa {_ggdef =_fdfa .AnnotFilterFunc (_cgbb );};};if !_ggdef {_fbcbg =append (_fbcbg ,_cgbb );continue ;};switch _cgbb .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_gedab ,_eeeg ,_cgca :=_afcfc (_cgbb );if _cgca !=nil {if !_bbgf {_ef .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_cgca );
continue ;};if _gedab ==nil {continue ;};_bafbc :=_gfdb .Resources .GenerateXObjectName ();_gfdb .Resources .SetXObjectFormByName (_bafbc ,_gedab );_baaf :=_cb .Min (_eeeg .Llx ,_eeeg .Urx );_acec :=_cb .Min (_eeeg .Lly ,_eeeg .Ury );var _decgc []string ;
_decgc =append (_decgc ,"\u0071");_decgc =append (_decgc ,_d .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_baaf ,_acec ));
_decgc =append (_decgc ,_d .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_bafbc .String ()));_decgc =append (_decgc ,"\u0051");_eegg :=_ba .Join (_decgc ,"\u000a");_cgca =_gfdb .AppendContentStream (_eegg );if _cgca !=nil {return _cgca ;};if _gedab .Resources !=nil {_cfeb ,_gagb :=_fb .GetDict (_gedab .Resources .Font );
if _gagb {for _ ,_ccfd :=range _cfeb .Keys (){if !_gfdb .Resources .HasFontByName (_ccfd ){_gfdb .Resources .SetFontByName (_ccfd ,_cfeb .Get (_ccfd ));};};};};};if len (_fbcbg )> 0{_gfdb ._dgcfa =_fbcbg ;}else {_gfdb ._dgcfa =[]*PdfAnnotation {};};};if !_aadb {_dabb .AcroForm =nil ;
};return nil ;};

// K returns the value of the key component of the color.
func (_eecd *PdfColorDeviceCMYK )K ()float64 {return _eecd [3]};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_gfbdc *PdfPageResources )SetColorspaceByName (keyName _fb .PdfObjectName ,cs PdfColorspace )error {_dfefg ,_fbfdb :=_gfbdc .GetColorspaces ();if _fbfdb !=nil {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_fbfdb );
return _fbfdb ;};if _dfefg ==nil {_dfefg =NewPdfPageResourcesColorspaces ();_gfbdc .SetColorSpace (_dfefg );};_dfefg .Set (keyName ,cs );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_dfd *PdfActionLaunch )ToPdfObject ()_fb .PdfObject {_dfd .PdfAction .ToPdfObject ();_bbb :=_dfd ._db ;_ed :=_bbb .PdfObject .(*_fb .PdfObjectDictionary );_ed .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeLaunch )));if _dfd .F !=nil {_ed .Set ("\u0046",_dfd .F .ToPdfObject ());
};_ed .SetIfNotNil ("\u0057\u0069\u006e",_dfd .Win );_ed .SetIfNotNil ("\u004d\u0061\u0063",_dfd .Mac );_ed .SetIfNotNil ("\u0055\u006e\u0069\u0078",_dfd .Unix );_ed .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_dfd .NewWindow );return _bbb ;
};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_egcb *PdfColorspaceDeviceN )ToPdfObject ()_fb .PdfObject {_gaae :=_fb .MakeArray (_fb .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_gaae .Append (_egcb .ColorantNames );_gaae .Append (_egcb .AlternateSpace .ToPdfObject ());_gaae .Append (_egcb .TintTransform .ToPdfObject ());
if _egcb .Attributes !=nil {_gaae .Append (_egcb .Attributes .ToPdfObject ());};if _egcb ._egefd !=nil {_egcb ._egefd .PdfObject =_gaae ;return _egcb ._egefd ;};return _gaae ;};func (_bbdcd *PdfWriter )copyObjects (){_cgaf :=make (map[_fb .PdfObject ]_fb .PdfObject );
_gdada :=make ([]_fb .PdfObject ,0,len (_bbdcd ._dbdgd ));_dfbe :=make (map[_fb .PdfObject ]struct{},len (_bbdcd ._dbdgd ));_fdccbb :=make (map[_fb .PdfObject ]struct{});for _ ,_bcbb :=range _bbdcd ._dbdgd {_dacac :=_bbdcd .copyObject (_bcbb ,_cgaf ,_fdccbb ,false );
if _ ,_eagee :=_fdccbb [_bcbb ];_eagee {continue ;};_gdada =append (_gdada ,_dacac );_dfbe [_dacac ]=struct{}{};};_bbdcd ._dbdgd =_gdada ;_bbdcd ._cggbd =_dfbe ;_bbdcd ._acfd =_bbdcd .copyObject (_bbdcd ._acfd ,_cgaf ,nil ,false ).(*_fb .PdfIndirectObject );
_bbdcd ._dfcc =_bbdcd .copyObject (_bbdcd ._dfcc ,_cgaf ,nil ,false ).(*_fb .PdfIndirectObject );if _bbdcd ._dedec !=nil {_bbdcd ._dedec =_bbdcd .copyObject (_bbdcd ._dedec ,_cgaf ,nil ,false ).(*_fb .PdfIndirectObject );};if _bbdcd ._gdagb {_bfgfe :=make (map[_fb .PdfObject ]int64 );
for _ggbdb ,_gbddb :=range _bbdcd ._adcaa {if _effga ,_bbcac :=_cgaf [_ggbdb ];_bbcac {_bfgfe [_effga ]=_gbddb ;}else {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_bbdcd ._adcaa =_bfgfe ;};};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_eed *PdfAction )GetContext ()PdfModel {if _eed ==nil {return nil ;};return _eed ._gae ;};func (_gdgd PdfFont )actualFont ()pdfFont {if _gdgd ._gccg ==nil {_ef .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gdgd );
};return _gdgd ._gccg ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _fb .PdfObject )(_fb .PdfObjectName ,error ){var _becba *_fb .PdfObjectName ;var _ggad *_fb .PdfObjectArray ;if _dgeb ,_cegc :=obj .(*_fb .PdfIndirectObject );_cegc {if _afdc ,_afdb :=_dgeb .PdfObject .(*_fb .PdfObjectArray );
_afdb {_ggad =_afdc ;}else if _fege ,_bccf :=_dgeb .PdfObject .(*_fb .PdfObjectName );_bccf {_becba =_fege ;};}else if _cecda ,_ggaf :=obj .(*_fb .PdfObjectArray );_ggaf {_ggad =_cecda ;}else if _bbaf ,_ebf :=obj .(*_fb .PdfObjectName );_ebf {_becba =_bbaf ;
};if _becba !=nil {switch *_becba {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_becba ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_becba ,nil ;
};};if _ggad !=nil &&_ggad .Len ()> 0{if _gggfc ,_gafg :=_ggad .Get (0).(*_fb .PdfObjectName );_gafg {switch *_gggfc {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _ggad .Len ()==1{return *_gggfc ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_gggfc ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_gggfc ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_gggfc ,nil ;};};};return "",nil ;};func (_ggcge *pdfFontSimple )getFontEncoding ()(_geae string ,_agagd map[_ff .CharCode ]_ff .GlyphName ,_ggadb error ){_geae ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _caefd ,_gabf :=_dgcad [_ggcge ._ecaae ];_gabf {_geae =_caefd ;}else if _ggcge .fontFlags ()&_bfda !=0{for _baecf ,_ecgeg :=range _dgcad {if _ba .Contains (_ggcge ._ecaae ,_baecf ){_geae =_ecgeg ;break ;};};};if _ggcge .Encoding ==nil {return _geae ,nil ,nil ;
};switch _fcfbg :=_ggcge .Encoding .(type ){case *_fb .PdfObjectName :return string (*_fcfbg ),nil ,nil ;case *_fb .PdfObjectDictionary :_cagaf ,_acfe :=_fb .GetName (_fcfbg .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
if _acfe {_geae =_cagaf .String ();};if _ceaac :=_fcfbg .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_ceaac !=nil {_ffeb ,_gffac :=_fb .GetArray (_ceaac );if !_gffac {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_fcfbg ,_fcfbg .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_fb .ErrTypeError ;};_agagd ,_ggadb =_ff .FromFontDifferences (_ffeb );};return _geae ,_agagd ,_ggadb ;default:_ef .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_ggcge .Encoding ,_ggcge .Encoding );
return "",nil ,_fb .ErrTypeError ;};};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_fbcee *PdfField )Flags ()FieldFlag {var _eaca FieldFlag ;_dbec ,_dedbd :=_fbcee .inherit (func (_cefcd *PdfField )bool {if _cefcd .Ff !=nil {_eaca =FieldFlag (*_cefcd .Ff );return true ;};return false ;});if _dedbd !=nil {_ef .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_dedbd );
};if !_dbec {_ef .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _eaca ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_ggea pdfCIDFontType0 )GetCharMetrics (code _ff .CharCode )(_bb .CharMetrics ,bool ){_edbbb :=_ggea ._addfb ;if _efacf ,_cgae :=_ggea ._gbde [code ];_cgae {_edbbb =_efacf ;};return _bb .CharMetrics {Wx :_edbbb },true ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// HasExtGState checks whether a font is defined by the specified keyName.
func (_ccebc *PdfPageResources )HasExtGState (keyName _fb .PdfObjectName )bool {_ ,_egbb :=_ccebc .GetFontByName (keyName );return _egbb ;};

// ValidateSignatures validates digital signatures in the document.
func (_eebafd *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _eebafd .AcroForm ==nil {return nil ,nil ;};if _eebafd .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_caffdf *PdfSignature ;
_aagab *PdfField ;_debea SignatureHandler ;};var _abaec []*sigFieldPair ;for _ ,_eeca :=range _eebafd .AcroForm .AllFields (){if _eeca .V ==nil {continue ;};if _efbfa ,_afgab :=_fb .GetDict (_eeca .V );_afgab {if _gafad ,_cgfa :=_fb .GetNameVal (_efbfa .Get ("\u0054\u0079\u0070\u0065"));
_cgfa &&_gafad =="\u0053\u0069\u0067"{_ccgfg ,_ceaad :=_fb .GetIndirect (_eeca .V );if !_ceaad {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_aaff ,_ffaff :=_eebafd .newPdfSignatureFromIndirect (_ccgfg );if _ffaff !=nil {return nil ,_ffaff ;};var _ccdgc SignatureHandler ;for _ ,_dcgbc :=range handlers {if _dcgbc .IsApplicable (_aaff ){_ccdgc =_dcgbc ;break ;};};_abaec =append (_abaec ,&sigFieldPair {_caffdf :_aaff ,_aagab :_eeca ,_debea :_ccdgc });
};};};var _dfgcb []SignatureValidationResult ;for _ ,_babed :=range _abaec {_eacbf :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_babed ._aagab }};if _babed ._debea ==nil {_eacbf .Errors =append (_eacbf .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_dfgcb =append (_dfgcb ,_eacbf );continue ;};_baefa ,_aegbg :=_babed ._debea .NewDigest (_babed ._caffdf );if _aegbg !=nil {_eacbf .Errors =append (_eacbf .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_aegbg .Error ());
_dfgcb =append (_dfgcb ,_eacbf );continue ;};_dfefc :=_babed ._caffdf .ByteRange ;if _dfefc ==nil {_eacbf .Errors =append (_eacbf .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_dfgcb =append (_dfgcb ,_eacbf );
continue ;};for _gbfae :=0;_gbfae < _dfefc .Len ();_gbfae =_gbfae +2{_cbcdfd ,_ :=_fb .GetNumberAsInt64 (_dfefc .Get (_gbfae ));_ddcad ,_ :=_fb .GetIntVal (_dfefc .Get (_gbfae +1));if _ ,_cecbd :=_eebafd ._ebgad .Seek (_cbcdfd ,_fe .SeekStart );_cecbd !=nil {return nil ,_cecbd ;
};_dfgbb :=make ([]byte ,_ddcad );if _ ,_gfdce :=_eebafd ._ebgad .Read (_dfgbb );_gfdce !=nil {return nil ,_gfdce ;};_baefa .Write (_dfgbb );};var _bcfdf SignatureValidationResult ;if _ffbb ,_gggce :=_babed ._debea .(SignatureHandlerDocMDP );_gggce {_bcfdf ,_aegbg =_ffbb .ValidateWithOpts (_babed ._caffdf ,_baefa ,SignatureHandlerDocMDPParams {Parser :_eebafd ._gfcg });
}else {_bcfdf ,_aegbg =_babed ._debea .Validate (_babed ._caffdf ,_baefa );};if _aegbg !=nil {_ef .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_aegbg ,_babed ._debea );_bcfdf .Errors =append (_bcfdf .Errors ,_aegbg .Error ());
};_bcfdf .Name =_babed ._caffdf .Name .Decoded ();_bcfdf .Reason =_babed ._caffdf .Reason .Decoded ();if _babed ._caffdf .M !=nil {_bgdbd ,_dbgad :=NewPdfDate (_babed ._caffdf .M .String ());if _dbgad !=nil {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dbgad );
_bcfdf .Errors =append (_bcfdf .Errors ,_dbgad .Error ());continue ;};_bcfdf .Date =_bgdbd ;};_bcfdf .ContactInfo =_babed ._caffdf .ContactInfo .Decoded ();_bcfdf .Location =_babed ._caffdf .Location .Decoded ();_bcfdf .Fields =_eacbf .Fields ;_dfgcb =append (_dfgcb ,_bcfdf );
};return _dfgcb ,nil ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _fb .PdfObject ;PreserveRB _fb .PdfObject ;};func (_cgde *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// RemovePage removes a page by number.
func (_dbef *PdfAppender )RemovePage (pageNum int ){_bcfc :=pageNum -1;_dbef ._bage =append (_dbef ._bage [0:_bcfc ],_dbef ._bage [pageNum :]...);};

// GetContentStreams returns the content stream as an array of strings.
func (_debd *PdfPage )GetContentStreams ()([]string ,error ){_aggd :=_debd .GetContentStreamObjs ();var _fcggf []string ;for _ ,_geeec :=range _aggd {_befe ,_cgaeb :=_gbedc (_geeec );if _cgaeb !=nil {return nil ,_cgaeb ;};_fcggf =append (_fcggf ,_befe );
};return _fcggf ,nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_fagd *PdfFilespec )GetContainingPdfObject ()_fb .PdfObject {return _fagd ._caee };func (_agaca *Image )resampleLowBits (_eccf []uint32 ){_fbfcf :=_cg .BytesPerLine (int (_agaca .Width ),int (_agaca .BitsPerComponent ),_agaca .ColorComponents );_ecdfb :=make ([]byte ,_agaca .ColorComponents *_fbfcf *int (_agaca .Height ));
_cbafg :=int (_agaca .BitsPerComponent )*_agaca .ColorComponents *int (_agaca .Width );_dgdc :=uint8 (8);var (_afged ,_fecb int ;_baegc uint32 ;);for _aeag :=0;_aeag < int (_agaca .Height );_aeag ++{_fecb =_aeag *_fbfcf ;for _bdbfd :=0;_bdbfd < _cbafg ;
_bdbfd ++{_baegc =_eccf [_afged ];_dgdc -=uint8 (_agaca .BitsPerComponent );_ecdfb [_fecb ]|=byte (_baegc )<<_dgdc ;if _dgdc ==0{_dgdc =8;_fecb ++;};_afged ++;};};_agaca .Data =_ecdfb ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _fb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_aegef *PdfTransformParamsDocMDP )ToPdfObject ()_fb .PdfObject {_ddcff :=_fb .MakeDict ();_ddcff .SetIfNotNil ("\u0054\u0079\u0070\u0065",_aegef .Type );_ddcff .SetIfNotNil ("\u0056",_aegef .V );_ddcff .SetIfNotNil ("\u0050",_aegef .P );return _ddcff ;
};func (_bgad *DSS )generateHashMap (_eaba []*_fb .PdfObjectStream )(map[string ]*_fb .PdfObjectStream ,error ){_bfaa :=map[string ]*_fb .PdfObjectStream {};for _ ,_cfae :=range _eaba {_decba ,_fadg :=_fb .DecodeStream (_cfae );if _fadg !=nil {return nil ,_fadg ;
};_baga ,_fadg :=_cgbgd (_decba );if _fadg !=nil {return nil ,_fadg ;};_bfaa [string (_baga )]=_cfae ;};return _bfaa ,nil ;};func (_dcadd *PdfReader )newPdfAnnotationCaretFromDict (_adgb *_fb .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_efcd :=PdfAnnotationCaret {};
_dfde ,_efddc :=_dcadd .newPdfAnnotationMarkupFromDict (_adgb );if _efddc !=nil {return nil ,_efddc ;};_efcd .PdfAnnotationMarkup =_dfde ;_efcd .RD =_adgb .Get ("\u0052\u0044");_efcd .Sy =_adgb .Get ("\u0053\u0079");return &_efcd ,nil ;};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_fb .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_fb .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};

// SetReason sets the `Reason` field of the signature.
func (_dcdea *PdfSignature )SetReason (reason string ){_dcdea .Reason =_fb .MakeString (reason )};func (_gfcaf *PdfReader )newPdfAnnotationInkFromDict (_cdee *_fb .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_adfa :=PdfAnnotationInk {};_bfdg ,_aab :=_gfcaf .newPdfAnnotationMarkupFromDict (_cdee );
if _aab !=nil {return nil ,_aab ;};_adfa .PdfAnnotationMarkup =_bfdg ;_adfa .InkList =_cdee .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_adfa .BS =_cdee .Get ("\u0042\u0053");return &_adfa ,nil ;};func _fcedg (_ccdfe *_fb .PdfObjectDictionary )bool {for _ ,_cgcc :=range _ccdfe .Keys (){if _ ,_bgfd :=_fedc [_cgcc .String ()];
_bgfd {return true ;};};return false ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_facbe *PdfAcroForm )ToPdfObject ()_fb .PdfObject {_bbbe :=_facbe ._gcada ;_fdadd :=_bbbe .PdfObject .(*_fb .PdfObjectDictionary );if _facbe .Fields !=nil {_gfab :=_fb .PdfObjectArray {};for _ ,_adgcb :=range *_facbe .Fields {_gfbbc :=_adgcb .GetContext ();
if _gfbbc !=nil {_gfab .Append (_gfbbc .ToPdfObject ());}else {_gfab .Append (_adgcb .ToPdfObject ());};};_fdadd .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_gfab );};if _facbe .NeedAppearances !=nil {_fdadd .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_facbe .NeedAppearances );
};if _facbe .SigFlags !=nil {_fdadd .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_facbe .SigFlags );};if _facbe .CO !=nil {_fdadd .Set ("\u0043\u004f",_facbe .CO );};if _facbe .DR !=nil {_fdadd .Set ("\u0044\u0052",_facbe .DR .ToPdfObject ());
};if _facbe .DA !=nil {_fdadd .Set ("\u0044\u0041",_facbe .DA );};if _facbe .Q !=nil {_fdadd .Set ("\u0051",_facbe .Q );};if _facbe .XFA !=nil {_fdadd .Set ("\u0058\u0046\u0041",_facbe .XFA );};return _bbbe ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_gcff *PdfField )IsTerminal ()bool {return len (_gcff .Kids )==0};

// WriteToFile writes the output PDF to file.
func (_abbcc *PdfWriter )WriteToFile (outputFilePath string )error {_gcdfgb ,_adga :=_bab .Create (outputFilePath );if _adga !=nil {return _adga ;};defer _gcdfgb .Close ();return _abbcc .Write (_gcdfgb );};func (_fdafa *pdfFontSimple )baseFields ()*fontCommon {return &_fdafa .fontCommon };


// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_fgfe *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _ged .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_gfe :=field .V ;if _gfe ==nil {return _ged .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_aafg :=pageNum -1;if _aafg < 0||_aafg > len (_fgfe ._bage )-1{return _d .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );
};_ggfc :=_fgfe .Reader .PageList [_aafg ];field .P =_ggfc .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_fb .MakeString (_d .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_ggfc .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );
if _fgfe ._bcc ==_fgfe ._efge .AcroForm {_fgfe ._bcc =_fgfe .Reader .AcroForm ;};_bada :=_fgfe ._bcc ;if _bada ==nil {_bada =NewPdfAcroForm ();};_bada .SigFlags =_fb .MakeInteger (3);_fggd :=append (_bada .AllFields (),field .PdfField );_bada .Fields =&_fggd ;
_fgfe .ReplaceAcroForm (_bada );_fgfe .UpdatePage (_ggfc );_fgfe ._bage [_aafg ]=_ggfc ;if _ ,_gefa :=field .V .GetDocMDPPermission ();_gefa {_fgfe ._eafc =NewPermissions (field .V );};return nil ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _fb .PdfObject ;B _fb .PdfObject ;};

// SetFillImage attach a model.Image to push button.
func (_aggc *PdfFieldButton )SetFillImage (image *Image ){if _aggc .IsPush (){_aggc ._ceff =image ;};};

// ToPdfObject returns the PDF representation of the pattern.
func (_deeea *PdfPattern )ToPdfObject ()_fb .PdfObject {_fcba :=_deeea .getDict ();_fcba .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_fcba .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_fb .MakeInteger (_deeea .PatternType ));
return _deeea ._bfgge ;};

// PartialName returns the partial name of the field.
func (_dggg *PdfField )PartialName ()string {_adaf :="";if _dggg .T !=nil {_adaf =_dggg .T .Decoded ();}else {_ef .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _adaf ;};type modelManager struct{_cfabc map[PdfModel ]_fb .PdfObject ;_ebfdf map[_fb .PdfObject ]PdfModel ;};

// Y returns the value of the yellow component of the color.
func (_ggac *PdfColorDeviceCMYK )Y ()float64 {return _ggac [2]};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_gaf *PdfAnnotation )GetContext ()PdfModel {if _gaf ==nil {return nil ;};return _gaf ._dfdg ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_fbga :=&PdfColorspaceLab {};_fbga .BlackPoint =[]float64 {0.0,0.0,0.0};_fbga .Range =[]float64 {-100,100,-100,100};return _fbga ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_adgdd pdfCIDFontType0 )GetRuneMetrics (r rune )(_bb .CharMetrics ,bool ){return _bb .CharMetrics {Wx :_adgdd ._addfb },true ;};func (_bffd *PdfReader )newPdfFieldSignatureFromDict (_abda *_fb .PdfObjectDictionary )(*PdfFieldSignature ,error ){_gcggc :=&PdfFieldSignature {};
_ceea ,_bdfb :=_fb .GetIndirect (_abda .Get ("\u0056"));if _bdfb {var _cfbb error ;_gcggc .V ,_cfbb =_bffd .newPdfSignatureFromIndirect (_ceea );if _cfbb !=nil {return nil ,_cfbb ;};};_gcggc .Lock ,_ =_fb .GetIndirect (_abda .Get ("\u004c\u006f\u0063\u006b"));
_gcggc .SV ,_ =_fb .GetIndirect (_abda .Get ("\u0053\u0056"));return _gcggc ,nil ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_fdaf :=NewPdfAction ();_fae :=&PdfActionGoToE {};_fae .PdfAction =_fdaf ;_fdaf .SetContext (_fae );return _fae ;};func (_decc *PdfReader )newPdfAnnotationMovieFromDict (_fcd *_fb .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_bfcf :=PdfAnnotationMovie {};
_bfcf .T =_fcd .Get ("\u0054");_bfcf .Movie =_fcd .Get ("\u004d\u006f\u0076i\u0065");_bfcf .A =_fcd .Get ("\u0041");return &_bfcf ,nil ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_afgeb *PdfFont )ToPdfObject ()_fb .PdfObject {if _afgeb ._gccg ==nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _fb .MakeNull ();
};return _afgeb ._gccg .ToPdfObject ();};

// ToPdfObject implements interface PdfModel.
func (_fbb *PdfActionGoToR )ToPdfObject ()_fb .PdfObject {_fbb .PdfAction .ToPdfObject ();_dcd :=_fbb ._db ;_aea :=_dcd .PdfObject .(*_fb .PdfObjectDictionary );_aea .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeGoToR )));if _fbb .F !=nil {_aea .Set ("\u0046",_fbb .F .ToPdfObject ());
};_aea .SetIfNotNil ("\u0044",_fbb .D );_aea .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_fbb .NewWindow );return _dcd ;};func (_dgbca *PdfWriter )makeOffSetReference (_ecbdc int64 ){_agaggd :=_d .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_ecbdc );
_dgbca .writeString (_agaggd );_dgbca .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};

// ToPdfObject convert PdfInfo to pdf object.
func (_baeaf *PdfInfo )ToPdfObject ()_fb .PdfObject {_egdc :=_fb .MakeDict ();_egdc .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_baeaf .Title );_egdc .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_baeaf .Author );_egdc .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_baeaf .Subject );
_egdc .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_baeaf .Keywords );_egdc .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_baeaf .Creator );_egdc .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_baeaf .Producer );
_egdc .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_baeaf .Trapped );if _baeaf .CreationDate !=nil {_egdc .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_baeaf .CreationDate .ToPdfObject ());};if _baeaf .ModifiedDate !=nil {_egdc .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_baeaf .ModifiedDate .ToPdfObject ());
};for _ ,_cgdf :=range _baeaf ._fgfad .Keys (){_egdc .SetIfNotNil (_cgdf ,_baeaf ._fgfad .Get (_cgdf ));};return _egdc ;};

// SetImage updates XObject Image with new image data.
func (_agdac *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_agdac .Filter .UpdateParams (img .GetParamsDict ());_fggdd ,_ddcadd :=_agdac .Filter .EncodeBytes (img .Data );if _ddcadd !=nil {return _ddcadd ;};_agdac .Stream =_fggdd ;_dgfff :=img .Width ;
_agdac .Width =&_dgfff ;_cafbf :=img .Height ;_agdac .Height =&_cafbf ;_fdafaa :=img .BitsPerComponent ;_agdac .BitsPerComponent =&_fdafaa ;if cs ==nil {if img .ColorComponents ==1{_agdac .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_agdac .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_agdac .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _ged .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_agdac .ColorSpace =cs ;};return nil ;
};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_acbc *DSS )ToPdfObject ()_fb .PdfObject {_cdaed :=_acbc ._cgbcc .PdfObject .(*_fb .PdfObjectDictionary );_cdaed .Clear ();_fbfbd :=_fb .MakeDict ();for _cagb ,_becg :=range _acbc .VRI {_fbfbd .Set (*_fb .MakeName (_cagb ),_becg .ToPdfObject ());
};_cdaed .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_gdbee (_acbc .Certs ));_cdaed .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_gdbee (_acbc .OCSPs ));_cdaed .SetIfNotNil ("\u0043\u0052\u004c\u0073",_gdbee (_acbc .CRLs ));_cdaed .Set ("\u0056\u0052\u0049",_fbfbd );
return _acbc ._cgbcc ;};func (_edf *PdfReader )newPdfActionJavaScriptFromDict (_geff *_fb .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_geff .Get ("\u004a\u0053")},nil ;};func _eefga ()string {_cdccb .Lock ();defer _cdccb .Unlock ();
_bcdab :=_fde .GetLicenseKey ();if len (_bbcb )> 0&&(_bcdab .IsLicensed ()||_bdedd ){return _bbcb ;};return _d .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_agdfe (),_bcdab .TypeToString ());
};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_dgcadc *PdfPattern )SetContext (ctx PdfModel ){_dgcadc ._cabgd =ctx };

// ToPdfObject returns a PDF object representation of the outline destination.
func (_dgeaa OutlineDest )ToPdfObject ()_fb .PdfObject {if (_dgeaa .PageObj ==nil &&_dgeaa .Page < 0)||_dgeaa .Mode ==""{return _fb .MakeNull ();};_geaea :=_fb .MakeArray ();if _dgeaa .PageObj !=nil {_geaea .Append (_dgeaa .PageObj );}else {_geaea .Append (_fb .MakeInteger (_dgeaa .Page ));
};_geaea .Append (_fb .MakeName (_dgeaa .Mode ));switch _dgeaa .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_geaea .Append (_fb .MakeFloat (_dgeaa .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_geaea .Append (_fb .MakeFloat (_dgeaa .X ));
case "\u0058\u0059\u005a":_geaea .Append (_fb .MakeFloat (_dgeaa .X ));_geaea .Append (_fb .MakeFloat (_dgeaa .Y ));_geaea .Append (_fb .MakeFloat (_dgeaa .Zoom ));default:_geaea .Set (1,_fb .MakeName ("\u0046\u0069\u0074"));};return _geaea ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fb .PdfObject ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_fdce *PdfColorspaceCalRGB )ToPdfObject ()_fb .PdfObject {_geeef :=&_fb .PdfObjectArray {};_geeef .Append (_fb .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_deeeg :=_fb .MakeDict ();if _fdce .WhitePoint !=nil {_egfe :=_fb .MakeArray (_fb .MakeFloat (_fdce .WhitePoint [0]),_fb .MakeFloat (_fdce .WhitePoint [1]),_fb .MakeFloat (_fdce .WhitePoint [2]));
_deeeg .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_egfe );}else {_ef .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _fdce .BlackPoint !=nil {_agab :=_fb .MakeArray (_fb .MakeFloat (_fdce .BlackPoint [0]),_fb .MakeFloat (_fdce .BlackPoint [1]),_fb .MakeFloat (_fdce .BlackPoint [2]));_deeeg .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_agab );
};if _fdce .Gamma !=nil {_bfge :=_fb .MakeArray (_fb .MakeFloat (_fdce .Gamma [0]),_fb .MakeFloat (_fdce .Gamma [1]),_fb .MakeFloat (_fdce .Gamma [2]));_deeeg .Set ("\u0047\u0061\u006dm\u0061",_bfge );};if _fdce .Matrix !=nil {_eafea :=_fb .MakeArray (_fb .MakeFloat (_fdce .Matrix [0]),_fb .MakeFloat (_fdce .Matrix [1]),_fb .MakeFloat (_fdce .Matrix [2]),_fb .MakeFloat (_fdce .Matrix [3]),_fb .MakeFloat (_fdce .Matrix [4]),_fb .MakeFloat (_fdce .Matrix [5]),_fb .MakeFloat (_fdce .Matrix [6]),_fb .MakeFloat (_fdce .Matrix [7]),_fb .MakeFloat (_fdce .Matrix [8]));
_deeeg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_eafea );};_geeef .Append (_deeeg );if _fdce ._efgeg !=nil {_fdce ._efgeg .PdfObject =_geeef ;return _fdce ._efgeg ;};return _geeef ;};

// ToPdfObject implements interface PdfModel.
func (_dac *PdfActionMovie )ToPdfObject ()_fb .PdfObject {_dac .PdfAction .ToPdfObject ();_gbc :=_dac ._db ;_abb :=_gbc .PdfObject .(*_fb .PdfObjectDictionary );_abb .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeMovie )));_abb .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_dac .Annotation );
_abb .SetIfNotNil ("\u0054",_dac .T );_abb .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_dac .Operation );return _gbc ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_acca *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_agbg ,_afef :=color .(*PdfColorCalGray );if !_afef {_ef .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_ged .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_agbg .Val ();X :=_acca .WhitePoint [0]*_cb .Pow (ANorm ,_acca .Gamma );Y :=_acca .WhitePoint [1]*_cb .Pow (ANorm ,_acca .Gamma );
Z :=_acca .WhitePoint [2]*_cb .Pow (ANorm ,_acca .Gamma );_adgda :=3.240479*X +-1.537150*Y +-0.498535*Z ;_gded :=-0.969256*X +1.875992*Y +0.041556*Z ;_daec :=0.055648*X +-0.204043*Y +1.057311*Z ;_adgda =_cb .Min (_cb .Max (_adgda ,0),1.0);_gded =_cb .Min (_cb .Max (_gded ,0),1.0);
_daec =_cb .Min (_cb .Max (_daec ,0),1.0);return NewPdfColorDeviceRGB (_adgda ,_gded ,_daec ),nil ;};

// GetSubFilter returns SubFilter value or empty string.
func (_dbabe *pdfSignDictionary )GetSubFilter ()string {_dcedf :=_dbabe .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _dcedf ==nil {return "";};if _ccaf ,_egdcg :=_fb .GetNameVal (_dcedf );_egdcg {return _ccaf ;};return "";};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_ggb :=NewPdfAnnotation ();_fgc :=&PdfAnnotationTrapNet {};_fgc .PdfAnnotation =_ggb ;_ggb .SetContext (_fgc );return _fgc ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _fb .PdfObject ;Flags _fb .PdfObject ;};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_aagecg *CompliancePdfReader )error ;};func _aefb (_bgff *_fb .PdfObjectDictionary )(*PdfFieldButton ,error ){_daee :=&PdfFieldButton {};_daee .PdfField =NewPdfField ();_daee .PdfField .SetContext (_daee );_daee .Opt ,_ =_fb .GetArray (_bgff .Get ("\u004f\u0070\u0074"));
_agagb :=NewPdfAnnotationWidget ();_agagb .A ,_ =_fb .GetDict (_bgff .Get ("\u0041"));_agagb .AP ,_ =_fb .GetDict (_bgff .Get ("\u0041\u0050"));_agagb .SetContext (_daee );_daee .PdfField .Annotations =append (_daee .PdfField .Annotations ,_agagb );return _daee ,nil ;
};

// ToGoTime returns the date in time.Time format.
func (_feeab PdfDate )ToGoTime ()_fg .Time {_cddbe :=int (_feeab ._cdedf *60*60+_feeab ._dbdge *60);switch _feeab ._aadde {case '-':_cddbe =-_cddbe ;case 'Z':_cddbe =0;};_eagb :=_d .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_feeab ._aadde ,_feeab ._cdedf ,_feeab ._dbdge );
_ggdc :=_fg .FixedZone (_eagb ,_cddbe );return _fg .Date (int (_feeab ._bccgd ),_fg .Month (_feeab ._ecccc ),int (_feeab ._bcgga ),int (_feeab ._gbfad ),int (_feeab ._gaffc ),int (_feeab ._cbbgca ),0,_ggdc );};func (_gebfg *Image )samplesAddPadding (_fbbg []uint32 )[]uint32 {_degcd :=_cg .BytesPerLine (int (_gebfg .Width ),int (_gebfg .BitsPerComponent ),_gebfg .ColorComponents )*(8/int (_gebfg .BitsPerComponent ));
_dgcfc :=_degcd *int (_gebfg .Height );if len (_fbbg )==_dgcfc {return _fbbg ;};_ffcc :=make ([]uint32 ,_dgcfc );_fgcd :=int (_gebfg .Width )*_gebfg .ColorComponents ;for _bcged :=0;_bcged < int (_gebfg .Height );_bcged ++{_edeae :=_bcged *int (_gebfg .Width );
_ebfdb :=_bcged *_degcd ;for _bbfad :=0;_bbfad < _fgcd ;_bbfad ++{_ffcc [_ebfdb +_bbfad ]=_fbbg [_edeae +_bbfad ];};};return _ffcc ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);func _fbaaa (_dgcc *_fb .PdfIndirectObject ,_bfffc *_fb .PdfObjectDictionary )(*DSS ,error ){if _dgcc ==nil {_dgcc =_fb .MakeIndirectObject (nil );
};_dgcc .PdfObject =_fb .MakeDict ();_cdaef :=map[string ]*VRI {};if _eccg ,_agfg :=_fb .GetDict (_bfffc .Get ("\u0056\u0052\u0049"));_agfg {for _ ,_aafa :=range _eccg .Keys (){if _ebce ,_cagg :=_fb .GetDict (_eccg .Get (_aafa ));_cagg {_cdaef [_ba .ToUpper (_aafa .String ())]=_dbb (_ebce );
};};};return &DSS {Certs :_edbg (_bfffc .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_edbg (_bfffc .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_edbg (_bfffc .Get ("\u0043\u0052\u004c\u0073")),VRI :_cdaef ,_cgbcc :_dgcc },nil ;};func (_cfdgg *PdfWriter )addObject (_gaebf _fb .PdfObject )bool {_cdece :=_cfdgg .hasObject (_gaebf );
if !_cdece {_bdedg :=_fb .ResolveReferencesDeep (_gaebf ,_cfdgg ._gfcgc );if _bdedg !=nil {_ef .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_bdedg );};_cfdgg ._dbdgd =append (_cfdgg ._dbdgd ,_gaebf );
_cfdgg ._cggbd [_gaebf ]=struct{}{};return true ;};return false ;};func (_cfegc *PdfWriter )writeString (_dddge string ){if _cfegc ._efdba !=nil {return ;};_bfacb ,_fbacb :=_cfegc ._cafc .WriteString (_dddge );_cfegc ._cbeba +=int64 (_bfacb );_cfegc ._efdba =_fbacb ;
};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_bfbcb *PdfFieldButton )IsRadio ()bool {return _bfbcb .GetType ()==ButtonTypeRadio };var (ErrRequiredAttributeMissing =_ged .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_ged .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_ged .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_aagec =_ged .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_ged .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_ged .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_bg .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_fb .ErrNotSupported );ErrType1CFontNotSupported =_bg .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_fb .ErrNotSupported );
ErrType3FontNotSupported =_bg .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_fb .ErrNotSupported );
ErrTTCmapNotSupported =_bg .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_fb .ErrNotSupported );
ErrSignNotEnoughSpace =_bg .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_bg .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _fb .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_fb .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_bgca ,_eaaba :=encoder .EncodeBytes (img .Data );
if _eaaba !=nil {_ef .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_eaaba );return nil ,_eaaba ;};_dddab :=NewXObjectImage ();_ggefc :=img .Width ;_fafac :=img .Height ;
_dddab .Width =&_ggefc ;_dddab .Height =&_fafac ;_bfbed :=img .BitsPerComponent ;_dddab .BitsPerComponent =&_bfbed ;_dddab .Filter =encoder ;_dddab .Stream =_bgca ;if cs ==nil {if img .ColorComponents ==1{_dddab .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_dddab .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_dddab .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_ged .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_dddab .ColorSpace =cs ;};if len (img ._feec )!=0{_agbfa :=NewXObjectImage ();_agbfa .Filter =encoder ;_bgffb ,_efcae :=encoder .EncodeBytes (img ._feec );if _efcae !=nil {_ef .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_efcae );
return nil ,_efcae ;};_agbfa .Stream =_bgffb ;_agbfa .BitsPerComponent =_dddab .BitsPerComponent ;_agbfa .Width =&img .Width ;_agbfa .Height =&img .Height ;_agbfa .ColorSpace =NewPdfColorspaceDeviceGray ();_dddab .SMask =_agbfa .ToPdfObject ();}else {_dddab .SMask =xobjIn .SMask ;
_dddab .ImageMask =xobjIn .ImageMask ;if _dddab .ColorSpace .GetNumComponents ()==1{_fcaf (_dddab );};};return _dddab ,nil ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_bcfb *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_bdccg *_fb .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_fb .PdfObjectName ;Filter *_fb .PdfObjectName ;SubFilter *_fb .PdfObjectName ;Contents *_fb .PdfObjectString ;Cert _fb .PdfObject ;ByteRange *_fb .PdfObjectArray ;Reference *_fb .PdfObjectArray ;Changes *_fb .PdfObjectArray ;Name *_fb .PdfObjectString ;
M *_fb .PdfObjectString ;Location *_fb .PdfObjectString ;Reason *_fb .PdfObjectString ;ContactInfo *_fb .PdfObjectString ;R *_fb .PdfObjectInteger ;V *_fb .PdfObjectInteger ;PropBuild *_fb .PdfObjectDictionary ;PropAuthTime *_fb .PdfObjectInteger ;PropAuthType *_fb .PdfObjectName ;
};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _fb .PdfObject ;LE _fb .PdfObject ;BS _fb .PdfObject ;IC _fb .PdfObject ;BE _fb .PdfObject ;IT _fb .PdfObject ;Measure _fb .PdfObject ;};

// GetCerts returns the signature certificate chain.
func (_eefbb *PdfSignature )GetCerts ()([]*_c .Certificate ,error ){var _gbdag []func ()([]*_c .Certificate ,error );switch _cbgaa ,_ :=_fb .GetNameVal (_eefbb .SubFilter );_cbgaa {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_gbdag =append (_gbdag ,_eefbb .extractChainFromPKCS7 ,_eefbb .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_gbdag =append (_gbdag ,_eefbb .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_gbdag =append (_gbdag ,_eefbb .extractChainFromPKCS7 );
default:return nil ,_d .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_cbgaa );};for _ ,_cfbgc :=range _gbdag {_beaff ,_dggd :=_cfbgc ();if _dggd !=nil {return nil ,_dggd ;
};if len (_beaff )> 0{return _beaff ,nil ;};};return nil ,ErrSignNoCertificates ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;func (_fdffa *PdfShading )getShadingDict ()(*_fb .PdfObjectDictionary ,error ){_abgb :=_fdffa ._fcfag ;if _ggcb ,_afga :=_abgb .(*_fb .PdfIndirectObject );_afga {_ddcd ,_faccc :=_ggcb .PdfObject .(*_fb .PdfObjectDictionary );
if !_faccc {return nil ,_fb .ErrTypeError ;};return _ddcd ,nil ;}else if _bdfdb ,_edcda :=_abgb .(*_fb .PdfObjectStream );_edcda {return _bdfdb .PdfObjectDictionary ,nil ;}else if _edgad ,_gddca :=_abgb .(*_fb .PdfObjectDictionary );_gddca {return _edgad ,nil ;
}else {_ef .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_fb .ErrTypeError ;};};func (_badge *PdfReader )newPdfAnnotationMarkupFromDict (_gega *_fb .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_daaf :=&PdfAnnotationMarkup {};
if _fded :=_gega .Get ("\u0054");_fded !=nil {_daaf .T =_fded ;};if _bafc :=_gega .Get ("\u0050\u006f\u0070u\u0070");_bafc !=nil {_bbdf ,_egge :=_bafc .(*_fb .PdfIndirectObject );if !_egge {if _ ,_gdd :=_bafc .(*_fb .PdfObjectNull );!_gdd {return nil ,_ged .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_ecf ,_deb :=_badge .newPdfAnnotationFromIndirectObject (_bbdf );if _deb !=nil {return nil ,_deb ;};if _ecf !=nil {_cdf ,_fcgg :=_ecf ._dfdg .(*PdfAnnotationPopup );if !_fcgg {return nil ,_ged .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_daaf .Popup =_cdf ;};};};if _cfgc :=_gega .Get ("\u0043\u0041");_cfgc !=nil {_daaf .CA =_cfgc ;};if _acef :=_gega .Get ("\u0052\u0043");_acef !=nil {_daaf .RC =_acef ;};if _cacgc :=_gega .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_cacgc !=nil {_daaf .CreationDate =_cacgc ;};if _bfff :=_gega .Get ("\u0049\u0052\u0054");_bfff !=nil {_daaf .IRT =_bfff ;};if _fec :=_gega .Get ("\u0053\u0075\u0062\u006a");_fec !=nil {_daaf .Subj =_fec ;};if _abg :=_gega .Get ("\u0052\u0054");_abg !=nil {_daaf .RT =_abg ;
};if _feeb :=_gega .Get ("\u0049\u0054");_feeb !=nil {_daaf .IT =_feeb ;};if _cbcd :=_gega .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_cbcd !=nil {_daaf .ExData =_cbcd ;};return _daaf ,nil ;};

// String implements interface PdfObject.
func (_bgd *PdfAction )String ()string {_gac ,_bc :=_bgd .ToPdfObject ().(*_fb .PdfIndirectObject );if _bc {return _d .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_bgd ._gae ,_gac .PdfObject .String ());};return "";};func (_afafe *PdfPage )getParentResources ()(*PdfPageResources ,error ){_cbaec :=_afafe .Parent ;
for _cbaec !=nil {_fgbd ,_acgd :=_fb .GetDict (_cbaec );if !_acgd {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_ged .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};if _facge :=_fgbd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_facge !=nil {_effc ,_aaebc :=_fb .GetDict (_facge );if !_aaebc {return nil ,_ged .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");
};_gfgdb ,_fagc :=NewPdfPageResourcesFromDict (_effc );if _fagc !=nil {return nil ,_fagc ;};return _gfgdb ,nil ;};_cbaec =_fgbd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_ecgg :_fb .MakeIndirectObject (_fb .MakeDict ())}};func _ecaa (_gbfdc _fb .PdfObject )(*PdfColorspaceCalGray ,error ){_ebbc :=NewPdfColorspaceCalGray ();if _degc ,_agaga :=_gbfdc .(*_fb .PdfIndirectObject );
_agaga {_ebbc ._ggbf =_degc ;};_gbfdc =_fb .TraceToDirectObject (_gbfdc );_ddgg ,_eafe :=_gbfdc .(*_fb .PdfObjectArray );if !_eafe {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ddgg .Len ()!=2{return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_gbfdc =_fb .TraceToDirectObject (_ddgg .Get (0));_dgeg ,_eafe :=_gbfdc .(*_fb .PdfObjectName );if !_eafe {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_dgeg !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_d .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_gbfdc =_fb .TraceToDirectObject (_ddgg .Get (1));
_egef ,_eafe :=_gbfdc .(*_fb .PdfObjectDictionary );if !_eafe {return nil ,_d .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_gbfdc =_egef .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_gbfdc =_fb .TraceToDirectObject (_gbfdc );_eefgd ,_eafe :=_gbfdc .(*_fb .PdfObjectArray );if !_eafe {return nil ,_d .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _eefgd .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_cebg ,_eaab :=_eefgd .GetAsFloat64Slice ();
if _eaab !=nil {return nil ,_eaab ;};_ebbc .WhitePoint =_cebg ;_gbfdc =_egef .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gbfdc !=nil {_gbfdc =_fb .TraceToDirectObject (_gbfdc );_cefd ,_dafea :=_gbfdc .(*_fb .PdfObjectArray );
if !_dafea {return nil ,_d .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _cefd .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_ecbba ,_eaebb :=_cefd .GetAsFloat64Slice ();if _eaebb !=nil {return nil ,_eaebb ;};_ebbc .BlackPoint =_ecbba ;};_gbfdc =_egef .Get ("\u0047\u0061\u006dm\u0061");if _gbfdc !=nil {_gbfdc =_fb .TraceToDirectObject (_gbfdc );_gaaf ,_bcfd :=_fb .GetNumberAsFloat (_gbfdc );
if _bcfd !=nil {return nil ,_d .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_ebbc .Gamma =_gaaf ;};return _ebbc ,nil ;};func _ecae (_bbee _fb .PdfObject )(PdfFunction ,error ){_bbee =_fb .ResolveReference (_bbee );
if _geabb ,_ecdddg :=_bbee .(*_fb .PdfObjectStream );_ecdddg {_eccee :=_geabb .PdfObjectDictionary ;_bfeeb ,_eafg :=_eccee .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fb .PdfObjectInteger );if !_eafg {_ef .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ged .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_bfeeb ==0{return _dgag (_geabb );}else if *_bfeeb ==4{return _cdbge (_geabb );
}else {return nil ,_ged .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _gfgbb ,_bffg :=_bbee .(*_fb .PdfIndirectObject );_bffg {_eeee ,_abad :=_gfgbb .PdfObject .(*_fb .PdfObjectDictionary );
if !_abad {_ef .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_ged .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_eeafa ,_abad :=_eeee .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fb .PdfObjectInteger );
if !_abad {_ef .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ged .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_eeafa ==2{return _eebfd (_gfgbb );}else if *_eeafa ==3{return _befa (_gfgbb );}else {return nil ,_ged .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _afed ,_dfafc :=_bbee .(*_fb .PdfObjectDictionary );
_dfafc {_bdff ,_bbdd :=_afed .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_fb .PdfObjectInteger );if !_bbdd {_ef .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ged .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_bdff ==2{return _eebfd (_afed );}else if *_bdff ==3{return _befa (_afed );
}else {return nil ,_ged .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_ef .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_bbee );
return nil ,_ged .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};func _fdecb (_afbg *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_afbg }};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_adbd *PdfPageResources )SetXObjectFormByName (keyName _fb .PdfObjectName ,xform *XObjectForm )error {_effca :=xform .ToPdfObject ().(*_fb .PdfObjectStream );_begfc :=_adbd .SetXObjectByName (keyName ,_effca );return _begfc ;};

// ToPdfObject returns the PDF representation of the function.
func (_dadg *PdfFunctionType0 )ToPdfObject ()_fb .PdfObject {if _dadg ._cafb ==nil {_dadg ._cafb =&_fb .PdfObjectStream {};};_fffg :=_fb .MakeDict ();_fffg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fb .MakeInteger (0));
_gffee :=&_fb .PdfObjectArray {};for _ ,_bfdba :=range _dadg .Domain {_gffee .Append (_fb .MakeFloat (_bfdba ));};_fffg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gffee );_caab :=&_fb .PdfObjectArray {};for _ ,_gggcac :=range _dadg .Range {_caab .Append (_fb .MakeFloat (_gggcac ));
};_fffg .Set ("\u0052\u0061\u006eg\u0065",_caab );_beda :=&_fb .PdfObjectArray {};for _ ,_ebaac :=range _dadg .Size {_beda .Append (_fb .MakeInteger (int64 (_ebaac )));};_fffg .Set ("\u0053\u0069\u007a\u0065",_beda );_fffg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_fb .MakeInteger (int64 (_dadg .BitsPerSample )));
if _dadg .Order !=1{_fffg .Set ("\u004f\u0072\u0064e\u0072",_fb .MakeInteger (int64 (_dadg .Order )));};_fffg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fb .MakeInteger (int64 (len (_dadg ._cbgd ))));_dadg ._cafb .Stream =_dadg ._cbgd ;_dadg ._cafb .PdfObjectDictionary =_fffg ;
return _dadg ._cafb ;};func _begecf ()_fg .Time {_cdccb .Lock ();defer _cdccb .Unlock ();return _fcbce };

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _fb .PdfObject )(*PdfFont ,error ){return _fgfec (fontObj ,true )};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_dfdg PdfModel ;Rect _fb .PdfObject ;Contents _fb .PdfObject ;P _fb .PdfObject ;NM _fb .PdfObject ;M _fb .PdfObject ;F _fb .PdfObject ;AP _fb .PdfObject ;AS _fb .PdfObject ;Border _fb .PdfObject ;C _fb .PdfObject ;StructParent _fb .PdfObject ;
OC _fb .PdfObject ;_fcf *_fb .PdfIndirectObject ;};func (_febe *PdfReader )newPdfAnnotationHighlightFromDict (_dddg *_fb .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_ggfb :=PdfAnnotationHighlight {};_bdgg ,_bfee :=_febe .newPdfAnnotationMarkupFromDict (_dddg );
if _bfee !=nil {return nil ,_bfee ;};_ggfb .PdfAnnotationMarkup =_bdgg ;_ggfb .QuadPoints =_dddg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_ggfb ,nil ;};func (_cbgc *PdfWriter )updateObjectNumbers (){_aebga :=_cbgc .ObjNumOffset ;
_ggbdd :=0;for _ ,_egfgc :=range _cbgc ._dbdgd {_efbgg :=int64 (_ggbdd +1+_aebga );_dggfc :=true ;if _cbgc ._gdagb {if _aedbbf ,_beefd :=_cbgc ._adcaa [_egfgc ];_beefd {_efbgg =_aedbbf ;_dggfc =false ;};};switch _bgffc :=_egfgc .(type ){case *_fb .PdfIndirectObject :_bgffc .ObjectNumber =_efbgg ;
_bgffc .GenerationNumber =0;case *_fb .PdfObjectStream :_bgffc .ObjectNumber =_efbgg ;_bgffc .GenerationNumber =0;case *_fb .PdfObjectStreams :_bgffc .ObjectNumber =_efbgg ;_bgffc .GenerationNumber =0;default:_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_bgffc );
continue ;};if _dggfc {_ggbdd ++;};};_efef :=func (_edcdaf _fb .PdfObject )int64 {switch _bfbdc :=_edcdaf .(type ){case *_fb .PdfIndirectObject :return _bfbdc .ObjectNumber ;case *_fb .PdfObjectStream :return _bfbdc .ObjectNumber ;case *_fb .PdfObjectStreams :return _bfbdc .ObjectNumber ;
};return 0;};_fa .SliceStable (_cbgc ._dbdgd ,func (_bgdgd ,_dddbf int )bool {return _efef (_cbgc ._dbdgd [_bgdgd ])< _efef (_cbgc ._dbdgd [_dddbf ])});};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_baeea *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _baeea .UnderlyingCS ==nil {return nil ,_ged .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _baeea .UnderlyingCS .ColorFromFloats (vals );};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_af .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_af .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_af .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_ccff *PdfAppender ;_bdgd *DSS ;};

// GetContainingPdfObject implements interface PdfModel.
func (_cfcdfg *PdfSignatureReference )GetContainingPdfObject ()_fb .PdfObject {return _cfcdfg ._gaagg };func _eabd (_dgeae _fb .PdfObject )(*PdfPattern ,error ){_eeeea :=&PdfPattern {};var _dedaf *_fb .PdfObjectDictionary ;if _dcfga ,_dbeeb :=_fb .GetIndirect (_dgeae );
_dbeeb {_eeeea ._bfgge =_dcfga ;_eccgg ,_cfbgf :=_dcfga .PdfObject .(*_fb .PdfObjectDictionary );if !_cfbgf {_ef .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_dcfga .PdfObject );
return nil ,_fb .ErrTypeError ;};_dedaf =_eccgg ;}else if _gfcba ,_fffd :=_fb .GetStream (_dgeae );_fffd {_eeeea ._bfgge =_gfcba ;_dedaf =_gfcba .PdfObjectDictionary ;}else {_ef .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_dgeae );
return nil ,_fb .ErrTypeError ;};_ddbee :=_dedaf .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _ddbee ==nil {_ef .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gcbaf ,_bbbfg :=_ddbee .(*_fb .PdfObjectInteger );if !_bbbfg {_ef .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ddbee );
return nil ,_fb .ErrTypeError ;};if *_gcbaf !=1&&*_gcbaf !=2{_ef .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_gcbaf );return nil ,_fb .ErrRangeError ;
};_eeeea .PatternType =int64 (*_gcbaf );switch *_gcbaf {case 1:_fdgdf ,_dgfa :=_bfgb (_dedaf );if _dgfa !=nil {return nil ,_dgfa ;};_fdgdf .PdfPattern =_eeeea ;_eeeea ._cabgd =_fdgdf ;return _eeeea ,nil ;case 2:_bgccb ,_fgfb :=_degee (_dedaf );if _fgfb !=nil {return nil ,_fgfb ;
};_bgccb .PdfPattern =_eeeea ;_eeeea ._cabgd =_bgccb ;return _eeeea ,nil ;};return nil ,_ged .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};type pdfSignDictionary struct{*_fb .PdfObjectDictionary ;_eegeeg *SignatureHandler ;
_bbcec *PdfSignature ;_acccg int64 ;_dabbba int ;_bgebc int ;_cefdg int ;_ecfge int ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_fggec *LTV )EnableChain (chain []*_c .Certificate )error {return _fggec .enable (nil ,chain ,"")};

// Items returns all children outline items.
func (_ggfcgf *OutlineItem )Items ()[]*OutlineItem {return _ggfcgf .Entries };

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_ec :=NewPdfAction ();_fba :=&PdfActionLaunch {};_fba .PdfAction =_ec ;_ec .SetContext (_fba );return _fba ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_egeb *PdfReader )GetNamedDestinations ()(_fb .PdfObject ,error ){_eceeg :=_fb .ResolveReference (_egeb ._babag .Get ("\u0044\u0065\u0073t\u0073"));if _eceeg ==nil {return nil ,nil ;};if !_egeb ._abae {_cdgfe :=_egeb .traverseObjectData (_eceeg );
if _cdgfe !=nil {return nil ,_cdgfe ;};};return _eceeg ,nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_cbade *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_cbade .NumInputs {_ef .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_ged .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _cbade ._cbdg ==nil {_ebea :=_cbade .processSamples ();if _ebea !=nil {return nil ,_ebea ;};};_afbb :=_cbade .Encode ;if _afbb ==nil {_afbb =[]float64 {};
for _cbcgg :=0;_cbcgg < len (_cbade .Size );_cbcgg ++{_afbb =append (_afbb ,0);_afbb =append (_afbb ,float64 (_cbade .Size [_cbcgg ]-1));};};_eddc :=_cbade .Decode ;if _eddc ==nil {_eddc =_cbade .Range ;};_fdabf :=make ([]int ,len (x ));for _fecd :=0;_fecd < len (x );
_fecd ++{_dedgd :=x [_fecd ];_eadae :=_cb .Min (_cb .Max (_dedgd ,_cbade .Domain [2*_fecd ]),_cbade .Domain [2*_fecd +1]);_gdcab :=_cg .LinearInterpolate (_eadae ,_cbade .Domain [2*_fecd ],_cbade .Domain [2*_fecd +1],_afbb [2*_fecd ],_afbb [2*_fecd +1]);
_cbde :=_cb .Min (_cb .Max (_gdcab ,0),float64 (_cbade .Size [_fecd ]-1));_cbfa :=int (_cb .Floor (_cbde +0.5));if _cbfa < 0{_cbfa =0;}else if _cbfa > _cbade .Size [_fecd ]{_cbfa =_cbade .Size [_fecd ]-1;};_fdabf [_fecd ]=_cbfa ;};_dccee :=_fdabf [0];for _ggcd :=1;
_ggcd < _cbade .NumInputs ;_ggcd ++{_dceecg :=_fdabf [_ggcd ];for _adfce :=0;_adfce < _ggcd ;_adfce ++{_dceecg *=_cbade .Size [_adfce ];};_dccee +=_dceecg ;};_dccee *=_cbade .NumOutputs ;var _cdgdb []float64 ;for _eggd :=0;_eggd < _cbade .NumOutputs ;_eggd ++{_cdeba :=_dccee +_eggd ;
if _cdeba >=len (_cbade ._cbdg ){_ef .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_fage :=_cbade ._cbdg [_cdeba ];_cbgge :=_cg .LinearInterpolate (float64 (_fage ),0,_cb .Pow (2,float64 (_cbade .BitsPerSample )),_eddc [2*_eggd ],_eddc [2*_eggd +1]);_edadd :=_cb .Min (_cb .Max (_cbgge ,_cbade .Range [2*_eggd ]),_cbade .Range [2*_eggd +1]);
_cdgdb =append (_cdgdb ,_edadd );};return _cdgdb ,nil ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_cgeba *Image )ColorAt (x ,y int )(_df .Color ,error ){_gfcc :=_cg .BytesPerLine (int (_cgeba .Width ),int (_cgeba .BitsPerComponent ),_cgeba .ColorComponents );switch _cgeba .ColorComponents {case 1:return _cg .ColorAtGrayscale (x ,y ,int (_cgeba .BitsPerComponent ),_gfcc ,_cgeba .Data ,_cgeba ._fcgee );
case 3:return _cg .ColorAtNRGBA (x ,y ,int (_cgeba .Width ),_gfcc ,int (_cgeba .BitsPerComponent ),_cgeba .Data ,_cgeba ._feec ,_cgeba ._fcgee );case 4:return _cg .ColorAtCMYK (x ,y ,int (_cgeba .Width ),_cgeba .Data ,_cgeba ._fcgee );};_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cgeba .ColorComponents ,_cgeba .BitsPerComponent );
return nil ,_ged .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};func (_bggca *PdfWriter )writeDocumentVersion (){if _bggca ._gdagb {_bggca .writeString ("\u000a");
}else {_bggca .writeString (_d .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_bggca ._befbee .Major ,_bggca ._befbee .Minor ));_bggca .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};type pdfCIDFontType0 struct{fontCommon ;
_cgdbd *_fb .PdfIndirectObject ;_egaa _ff .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_fb .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _fb .PdfObject ;W _fb .PdfObject ;DW2 _fb .PdfObject ;W2 _fb .PdfObject ;_gbde map[_ff .CharCode ]float64 ;_addfb float64 ;};

// BaseFont returns the font's "BaseFont" field.
func (_gbec *PdfFont )BaseFont ()string {return _gbec .baseFields ()._ecaae };func (_bbae *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_dgbab *PdfOutlineItem )GetContainingPdfObject ()_fb .PdfObject {return _dgbab ._daae };

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_edca *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_edca ._cbedge =colorspace ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_fgedg :=&PdfColorspaceCalRGB {};_fgedg .BlackPoint =[]float64 {0.0,0.0,0.0};_fgedg .Gamma =[]float64 {1.0,1.0,1.0};_fgedg .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _fgedg ;};

// Val returns the value of the color.
func (_bcdb *PdfColorCalGray )Val ()float64 {return float64 (*_bcdb )};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _fb .PdfObject ;RichMediaContent _fb .PdfObject ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;PageProcessCallback PageProcessCallback ;


// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// ToPdfObject implements interface PdfModel.
func (_acac *PdfAnnotationLink )ToPdfObject ()_fb .PdfObject {_acac .PdfAnnotation .ToPdfObject ();_cfga :=_acac ._fcf ;_ccdg :=_cfga .PdfObject .(*_fb .PdfObjectDictionary );_ccdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u004c\u0069\u006e\u006b"));
if _acac ._cfcc !=nil &&_acac ._cfcc ._gae !=nil {_ccdg .Set ("\u0041",_acac ._cfcc ._gae .ToPdfObject ());}else if _acac .A !=nil {_ccdg .Set ("\u0041",_acac .A );};_ccdg .SetIfNotNil ("\u0044\u0065\u0073\u0074",_acac .Dest );_ccdg .SetIfNotNil ("\u0048",_acac .H );
_ccdg .SetIfNotNil ("\u0050\u0041",_acac .PA );_ccdg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_acac .QuadPoints );_ccdg .SetIfNotNil ("\u0042\u0053",_acac .BS );return _cfga ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _fb .StreamEncoder ;FormType _fb .PdfObject ;BBox _fb .PdfObject ;Matrix _fb .PdfObject ;Resources *PdfPageResources ;Group _fb .PdfObject ;Ref _fb .PdfObject ;MetaData _fb .PdfObject ;PieceInfo _fb .PdfObject ;LastModified _fb .PdfObject ;
StructParent _fb .PdfObject ;StructParents _fb .PdfObject ;OPI _fb .PdfObject ;OC _fb .PdfObject ;Name _fb .PdfObject ;

// Stream data.
Stream []byte ;_cabgcd *_fb .PdfObjectStream ;};func _baac (_cfcf _fb .PdfObject ,_bfaba *fontCommon )(*_bde .CMap ,error ){_daccb ,_agee :=_fb .GetStream (_cfcf );if !_agee {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_cfcf );
return nil ,_fb .ErrTypeError ;};_acbb ,_daafa :=_fb .DecodeStream (_daccb );if _daafa !=nil {return nil ,_daafa ;};_cefe ,_daafa :=_bde .LoadCmapFromData (_acbb ,!_bfaba .isCIDFont ());if _daafa !=nil {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_daccb .ObjectNumber ,_daafa );
};return _cefe ,_daafa ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_fb .PdfIndirectObject ;SV *_fb .PdfIndirectObject ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _fb .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _ceeg *_fb .PdfIndirectObject ;var _bgfb *_fb .PdfObjectName ;var _bdba *_fb .PdfObjectArray ;if _aafe ,_gafb :=obj .(*_fb .PdfIndirectObject );
_gafb {_ceeg =_aafe ;};obj =_fb .TraceToDirectObject (obj );switch _fecg :=obj .(type ){case *_fb .PdfObjectArray :_bdba =_fecg ;case *_fb .PdfObjectName :_bgfb =_fecg ;};if _bgfb !=nil {switch *_bgfb {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_ef .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_bgfb );return nil ,_aagec ;};};if _bdba !=nil &&_bdba .Len ()> 0{var _bbbd _fb .PdfObject =_ceeg ;
if _ceeg ==nil {_bbbd =_bdba ;};if _bbda ,_fbg :=_fb .GetName (_bdba .Get (0));_fbg {switch _bbda .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _bdba .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _bdba .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _bdba .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _ecaa (_bbbd );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _adfe (_bbbd );
case "\u004c\u0061\u0062":return _ccfe (_bbbd );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _cegd (_bbbd );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _aagb (_bbbd );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _edea (_bbbd );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _egdbd (_bbbd );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _ffefg (_bbbd );default:_ef .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_bbda );
};};};_ef .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// String returns a string that describes `base`.
func (_ebaa fontCommon )String ()string {return _d .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_ebaa .coreString ());};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_gefc *PdfFieldButton )ToPdfObject ()_fb .PdfObject {_gefc .PdfField .ToPdfObject ();_aaaa :=_gefc ._ecgg ;_ecgb :=_aaaa .PdfObject .(*_fb .PdfObjectDictionary );_ecgb .Set ("\u0046\u0054",_fb .MakeName ("\u0042\u0074\u006e"));if _gefc .Opt !=nil {_ecgb .Set ("\u004f\u0070\u0074",_gefc .Opt );
};return _aaaa ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_fgfgfe DefaultImageHandler )NewImageFromGoImage (goimg _gb .Image )(*Image ,error ){_bfgfg ,_ecag :=_cg .FromGoImage (goimg );if _ecag !=nil {return nil ,_ecag ;};_acdeg :=_dbge (_bfgfg .Base ());return &_acdeg ,nil ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_aaabed *PdfPageResources )SetXObjectImageByName (keyName _fb .PdfObjectName ,ximg *XObjectImage )error {_aeaab :=ximg .ToPdfObject ().(*_fb .PdfObjectStream );_cafgg :=_aaabed .SetXObjectByName (keyName ,_aeaab );return _cafgg ;};

// ToPdfObject implements interface PdfModel.
func (_ead *PdfAnnotationFreeText )ToPdfObject ()_fb .PdfObject {_ead .PdfAnnotation .ToPdfObject ();_fdgcc :=_ead ._fcf ;_bggd :=_fdgcc .PdfObject .(*_fb .PdfObjectDictionary );_ead .PdfAnnotationMarkup .appendToPdfDictionary (_bggd );_bggd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_bggd .SetIfNotNil ("\u0044\u0041",_ead .DA );_bggd .SetIfNotNil ("\u0051",_ead .Q );_bggd .SetIfNotNil ("\u0052\u0043",_ead .RC );_bggd .SetIfNotNil ("\u0044\u0053",_ead .DS );_bggd .SetIfNotNil ("\u0043\u004c",_ead .CL );_bggd .SetIfNotNil ("\u0049\u0054",_ead .IT );
_bggd .SetIfNotNil ("\u0042\u0045",_ead .BE );_bggd .SetIfNotNil ("\u0052\u0044",_ead .RD );_bggd .SetIfNotNil ("\u0042\u0053",_ead .BS );_bggd .SetIfNotNil ("\u004c\u0045",_ead .LE );return _fdgcc ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_cafe *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_ef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_ged .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};func (_fccbf *pdfFontSimple )addEncoding ()error {var (_cccaf string ;
_bffdf map[_ff .CharCode ]_ff .GlyphName ;_bgfdg _ff .SimpleEncoder ;);if _fccbf .Encoder ()!=nil {_gece ,_gbcde :=_fccbf .Encoder ().(_ff .SimpleEncoder );if _gbcde &&_gece !=nil {_cccaf =_gece .BaseName ();};};if _fccbf .Encoding !=nil {_aageca ,_gegc ,_aadda :=_fccbf .getFontEncoding ();
if _aadda !=nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fccbf ._ecaae ,_fccbf ._ccbfd ,_fccbf .Encoding ,_fccbf .Encoding ,_aadda );
return _aadda ;};if _aageca !=""{_cccaf =_aageca ;};_bffdf =_gegc ;_bgfdg ,_aadda =_ff .NewSimpleTextEncoder (_cccaf ,_bffdf );if _aadda !=nil {return _aadda ;};};if _bgfdg ==nil {_aecdg :=_fccbf ._gcge ;if _aecdg !=nil {switch _fccbf ._ccbfd {case "\u0054\u0079\u0070e\u0031":if _aecdg .fontFile !=nil &&_aecdg .fontFile ._bcee !=nil {_ef .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_bgfdg =_aecdg .fontFile ._bcee ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _aecdg ._gbdd !=nil {_ef .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_adafag ,_gfeeb :=_aecdg ._gbdd .MakeEncoder ();
if _gfeeb ==nil {_bgfdg =_adafag ;};};};};};if _bgfdg !=nil {if _bffdf !=nil {_ef .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bffdf ,_fccbf .baseFields ());
_bgfdg =_ff .ApplyDifferences (_bgfdg ,_bffdf );};_fccbf .SetEncoder (_bgfdg );};return nil ;};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_egdcc :=&PdfPageResourcesColorspaces {};_egdcc .Names =[]string {};_egdcc .Colorspaces =map[string ]PdfColorspace {};_egdcc ._cfcab =&_fb .PdfIndirectObject {};return _egdcc ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _fg .Time ){_cdccb .Lock ();defer _cdccb .Unlock ();_fcbce =creationDate ;};func (_dbgac *pdfFontType0 )bytesToCharcodes (_bfdcc []byte )([]_ff .CharCode ,bool ){if _dbgac ._dcfg ==nil {return nil ,false ;};_bbbgd ,_bagbda :=_dbgac ._dcfg .BytesToCharcodes (_bfdcc );
if !_bagbda {return nil ,false ;};_cffc :=make ([]_ff .CharCode ,len (_bbbgd ));for _fafaa ,_gaega :=range _bbbgd {_cffc [_fafaa ]=_ff .CharCode (_gaega );};return _cffc ,true ;};func _feac (_ebdcc *_fb .PdfObjectDictionary )(*PdfShadingType2 ,error ){_egad :=PdfShadingType2 {};
_cgec :=_ebdcc .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _cgec ==nil {_ef .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_bfaaa ,_aefbe :=_cgec .(*_fb .PdfObjectArray );if !_aefbe {_ef .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cgec );
return nil ,_ged .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _bfaaa .Len ()!=4{_ef .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bfaaa .Len ());
return nil ,_ged .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_egad .Coords =_bfaaa ;if _eagea :=_ebdcc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_eagea !=nil {_eagea =_fb .TraceToDirectObject (_eagea );
_bcebbg ,_cbgbg :=_eagea .(*_fb .PdfObjectArray );if !_cbgbg {_ef .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eagea );return nil ,_ged .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_egad .Domain =_bcebbg ;};_cgec =_ebdcc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cgec ==nil {_ef .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_egad .Function =[]PdfFunction {};if _efga ,_aacfg :=_cgec .(*_fb .PdfObjectArray );_aacfg {for _ ,_cdbd :=range _efga .Elements (){_cbedf ,_gbfef :=_ecae (_cdbd );if _gbfef !=nil {_ef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbfef );
return nil ,_gbfef ;};_egad .Function =append (_egad .Function ,_cbedf );};}else {_fefbf ,_agbaa :=_ecae (_cgec );if _agbaa !=nil {_ef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_agbaa );
return nil ,_agbaa ;};_egad .Function =append (_egad .Function ,_fefbf );};if _gdcfg :=_ebdcc .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_gdcfg !=nil {_gdcfg =_fb .TraceToDirectObject (_gdcfg );_agaa ,_ebeeb :=_gdcfg .(*_fb .PdfObjectArray );if !_ebeeb {_ef .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gdcfg );
return nil ,_fb .ErrTypeError ;};if _agaa .Len ()!=2{_ef .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_agaa .Len ());return nil ,ErrInvalidAttribute ;
};_egad .Extend =_agaa ;};return &_egad ,nil ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_fcbda *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _fcbda .Range };

// ToPdfObject implements interface PdfModel.
func (_adgfa *PdfAnnotationTrapNet )ToPdfObject ()_fb .PdfObject {_adgfa .PdfAnnotation .ToPdfObject ();_adb :=_adgfa ._fcf ;_feg :=_adb .PdfObject .(*_fb .PdfObjectDictionary );_feg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _adb ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_ggce *PdfPageResourcesColorspaces )Set (key _fb .PdfObjectName ,val PdfColorspace ){if _ ,_fcff :=_ggce .Colorspaces [string (key )];!_fcff {_ggce .Names =append (_ggce .Names ,string (key ));};_ggce .Colorspaces [string (key )]=val ;};func (_dfdd *PdfAppender )updateObjectsDeep (_efae _fb .PdfObject ,_adgd map[_fb .PdfObject ]struct{}){if _adgd ==nil {_adgd =map[_fb .PdfObject ]struct{}{};
};if _ ,_edga :=_adgd [_efae ];_edga ||_efae ==nil {return ;};_adgd [_efae ]=struct{}{};_fcdc :=_fb .ResolveReferencesDeep (_efae ,_dfdd ._bccd );if _fcdc !=nil {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcdc );};switch _gbbe :=_efae .(type ){case *_fb .PdfIndirectObject :switch {case _gbbe .GetParser ()==_dfdd ._efge ._gfcg :return ;
case _gbbe .GetParser ()==_dfdd .Reader ._gfcg :_bgdg ,_ :=_dfdd ._efge .GetIndirectObjectByNumber (int (_gbbe .ObjectNumber ));_dabgc ,_fdcc :=_bgdg .(*_fb .PdfIndirectObject );if _fdcc &&_dabgc !=nil {if _dabgc .PdfObject !=_gbbe .PdfObject &&_dabgc .PdfObject .WriteString ()!=_gbbe .PdfObject .WriteString (){_dfdd .addNewObject (_efae );
_dfdd ._cacf [_efae ]=_gbbe .ObjectNumber ;};};default:_dfdd .addNewObject (_efae );};_dfdd .updateObjectsDeep (_gbbe .PdfObject ,_adgd );case *_fb .PdfObjectArray :for _ ,_bcba :=range _gbbe .Elements (){_dfdd .updateObjectsDeep (_bcba ,_adgd );};case *_fb .PdfObjectDictionary :for _ ,_fede :=range _gbbe .Keys (){_dfdd .updateObjectsDeep (_gbbe .Get (_fede ),_adgd );
};case *_fb .PdfObjectStreams :if _gbbe .GetParser ()!=_dfdd ._efge ._gfcg {for _ ,_ebge :=range _gbbe .Elements (){_dfdd .updateObjectsDeep (_ebge ,_adgd );};};case *_fb .PdfObjectStream :switch {case _gbbe .GetParser ()==_dfdd ._efge ._gfcg :return ;
case _gbbe .GetParser ()==_dfdd .Reader ._gfcg :if _dbd ,_dffd :=_dfdd ._efge ._gfcg .LookupByReference (_gbbe .PdfObjectReference );_dffd ==nil {var _cdd bool ;if _afgd ,_egdf :=_fb .GetStream (_dbd );_egdf &&_cbg .Equal (_afgd .Stream ,_gbbe .Stream ){_cdd =true ;
};if _fce ,_fgcb :=_fb .GetDict (_dbd );_cdd &&_fgcb {_cdd =_fce .WriteString ()==_gbbe .PdfObjectDictionary .WriteString ();};if _cdd {return ;};};if _gbbe .ObjectNumber !=0{_dfdd ._cacf [_efae ]=_gbbe .ObjectNumber ;};default:if _ ,_gebed :=_dfdd ._fcb [_efae ];
!_gebed {_dfdd .addNewObject (_efae );};};_dfdd .updateObjectsDeep (_gbbe .PdfObjectDictionary ,_adgd );};};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_badf *PdfPageResources )GenerateXObjectName ()_fb .PdfObjectName {_fgbdg :=1;for {_ecdbf :=_fb .MakeName (_d .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_fgbdg ));if !_badf .HasXObjectByName (*_ecdbf ){return *_ecdbf ;};_fgbdg ++;};};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_afd :=NewPdfAction ();_dd :=&PdfActionResetForm {};_dd .PdfAction =_afd ;_afd .SetContext (_dd );return _dd ;};func (_bgcce fontCommon )asPdfObjectDictionary (_ddbb string )*_fb .PdfObjectDictionary {if _ddbb !=""&&_bgcce ._ccbfd !=""&&_ddbb !=_bgcce ._ccbfd {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_ddbb ,_bgcce );
}else if _ddbb ==""&&_bgcce ._ccbfd ==""{_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_bgcce );
}else if _bgcce ._ccbfd ==""{_bgcce ._ccbfd =_ddbb ;};_cdbca :=_fb .MakeDict ();_cdbca .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0046\u006f\u006e\u0074"));_cdbca .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_fb .MakeName (_bgcce ._ecaae ));
_cdbca .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName (_bgcce ._ccbfd ));if _bgcce ._gcge !=nil {_cdbca .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_bgcce ._gcge .ToPdfObject ());};if _bgcce ._cccfe !=nil {_cdbca .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_bgcce ._cccfe );
}else if _bgcce ._fadd !=nil {_eddb ,_cdbf :=_bgcce ._fadd .Stream ();if _cdbf !=nil {_ef .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_cdbf );
}else {_cdbca .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_eddb );};};return _cdbca ;};func (_fbeea *fontFile )parseASCIIPart (_gabee []byte )error {if len (_gabee )< 2||string (_gabee [:2])!="\u0025\u0021"{return _ged .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_baef ,_gace ,_gdbde :=_bgga (_gabee );if _gdbde !=nil {return _gdbde ;};_abee :=_bdaca (_baef );_fbeea ._cacb =_abee ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _fbeea ._cacb ==""{_ef .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _gace !=""{_cfac ,_fgfgf :=_agbfe (_gace );if _fgfgf !=nil {return _fgfgf ;};_dcabd ,_fgfgf :=_ff .NewCustomSimpleTextEncoder (_cfac ,nil );if _fgfgf !=nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_fgfgf );
return nil ;};_fbeea ._bcee =_dcabd ;};return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_dcff *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggef :=vals [0];if _ggef < 0.0||_ggef > 1.0{_ef .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _ggef < 0.0{_ggef =0.0;}else if _ggef > 1.0{_ggef =1.0;};return NewPdfColorDeviceGray (_ggef ),nil ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _fb .PdfObject ;FontFamily _fb .PdfObject ;FontStretch _fb .PdfObject ;FontWeight _fb .PdfObject ;Flags _fb .PdfObject ;FontBBox _fb .PdfObject ;ItalicAngle _fb .PdfObject ;Ascent _fb .PdfObject ;Descent _fb .PdfObject ;
Leading _fb .PdfObject ;CapHeight _fb .PdfObject ;XHeight _fb .PdfObject ;StemV _fb .PdfObject ;StemH _fb .PdfObject ;AvgWidth _fb .PdfObject ;MaxWidth _fb .PdfObject ;MissingWidth _fb .PdfObject ;FontFile _fb .PdfObject ;FontFile2 _fb .PdfObject ;FontFile3 _fb .PdfObject ;
CharSet _fb .PdfObject ;_ccaaf int ;_cdggf float64 ;*fontFile ;_gbdd *_bb .TtfType ;

// Additional entries for CIDFonts
Style _fb .PdfObject ;Lang _fb .PdfObject ;FD _fb .PdfObject ;CIDSet _fb .PdfObject ;_cegce *_fb .PdfIndirectObject ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_ebeg *PdfColorspaceLab )GetNumComponents ()int {return 3};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_fggg *PdfPageResources )GetColorspaceByName (keyName _fb .PdfObjectName )(PdfColorspace ,bool ){_gbcbc ,_eadc :=_fggg .GetColorspaces ();if _eadc !=nil {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_eadc );
return nil ,false ;};if _gbcbc ==nil {return nil ,false ;};_afdbb ,_gfbac :=_gbcbc .Colorspaces [string (keyName )];if !_gfbac {return nil ,false ;};return _afdbb ,true ;};

// GetPdfVersion gets the version of the PDF used within this document.
func (_fdafb *PdfWriter )GetPdfVersion ()string {return _fdafb .getPdfVersion ()};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_ecegc *PdfColorspaceDeviceNAttributes )ToPdfObject ()_fb .PdfObject {_cbbgc :=_fb .MakeDict ();if _ecegc .Subtype !=nil {_cbbgc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ecegc .Subtype );};_cbbgc .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_ecegc .Colorants );
_cbbgc .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_ecegc .Process );_cbbgc .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_ecegc .MixingHints );if _ecegc ._ecbd !=nil {_ecegc ._ecbd .PdfObject =_cbbgc ;return _ecegc ._ecbd ;
};return _cbbgc ;};func _fbea (_fcgc []byte )[]byte {const _gcaf =52845;const _bbecb =22719;_afafd :=55665;for _ ,_dcdcg :=range _fcgc [:4]{_afafd =(int (_dcdcg )+_afafd )*_gcaf +_bbecb ;};_fdbce :=make ([]byte ,len (_fcgc )-4);for _adggc ,_ecdea :=range _fcgc [4:]{_fdbce [_adggc ]=byte (int (_ecdea )^_afafd >>8);
_afafd =(int (_ecdea )+_afafd )*_gcaf +_bbecb ;};return _fdbce ;};func (_bcce *Image )samplesTrimPadding (_aegac []uint32 )[]uint32 {_cgdeg :=_bcce .ColorComponents *int (_bcce .Width )*int (_bcce .Height );if len (_aegac )==_cgdeg {return _aegac ;};_ecdeb :=make ([]uint32 ,_cgdeg );
_fgege :=int (_bcce .Width )*_bcce .ColorComponents ;var _gcaea ,_acbaa ,_gbdac ,_abebb int ;_cebac :=_cg .BytesPerLine (int (_bcce .Width ),int (_bcce .BitsPerComponent ),_bcce .ColorComponents );for _gcaea =0;_gcaea < int (_bcce .Height );_gcaea ++{_acbaa =_gcaea *int (_bcce .Width );
_gbdac =_gcaea *_cebac ;for _abebb =0;_abebb < _fgege ;_abebb ++{_ecdeb [_acbaa +_abebb ]=_aegac [_gbdac +_abebb ];};};return _ecdeb ;};

// GetContainingPdfObject implements interface PdfModel.
func (_fdg *PdfAction )GetContainingPdfObject ()_fb .PdfObject {return _fdg ._db };

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_dace *PdfColorCalRGB )GetNumComponents ()int {return 3};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_cfdeb *PdfField )GetContext ()PdfModel {return _cfdeb ._dcfa };

// ToPdfObject returns a stream object.
func (_gbea *XObjectImage )ToPdfObject ()_fb .PdfObject {_cedb :=_gbea ._dfdfb ;_ccagc :=_cedb .PdfObjectDictionary ;if _gbea .Filter !=nil {_ccagc =_gbea .Filter .MakeStreamDict ();_cedb .PdfObjectDictionary =_ccagc ;};_ccagc .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_ccagc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0049\u006d\u0061g\u0065"));_ccagc .Set ("\u0057\u0069\u0064t\u0068",_fb .MakeInteger (*(_gbea .Width )));_ccagc .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_fb .MakeInteger (*(_gbea .Height )));
if _gbea .BitsPerComponent !=nil {_ccagc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fb .MakeInteger (*(_gbea .BitsPerComponent )));};if _gbea .ColorSpace !=nil {_ccagc .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_gbea .ColorSpace .ToPdfObject ());
};_ccagc .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_gbea .Intent );_ccagc .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_gbea .ImageMask );_ccagc .SetIfNotNil ("\u004d\u0061\u0073\u006b",_gbea .Mask );_fccda :=_ccagc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _gbea .Decode ==nil &&_fccda {_ccagc .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _gbea .Decode !=nil {_ccagc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gbea .Decode );};_ccagc .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_gbea .Interpolate );
_ccagc .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_gbea .Alternatives );_ccagc .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_gbea .SMask );_ccagc .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_gbea .SMaskInData );
_ccagc .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_gbea .Matte );_ccagc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gbea .Name );_ccagc .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gbea .StructParent );_ccagc .SetIfNotNil ("\u0049\u0044",_gbea .ID );
_ccagc .SetIfNotNil ("\u004f\u0050\u0049",_gbea .OPI );_ccagc .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gbea .Metadata );_ccagc .SetIfNotNil ("\u004f\u0043",_gbea .OC );_ccagc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fb .MakeInteger (int64 (len (_gbea .Stream ))));
_cedb .Stream =_gbea .Stream ;return _cedb ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// ToPdfObject implements interface PdfModel.
func (_adg *PdfAction )ToPdfObject ()_fb .PdfObject {_fged :=_adg ._db ;_da :=_fged .PdfObject .(*_fb .PdfObjectDictionary );_da .Clear ();_da .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_da .SetIfNotNil ("\u0053",_adg .S );
_da .SetIfNotNil ("\u004e\u0065\u0078\u0074",_adg .Next );return _fged ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_ddfdf *PdfReader )GetCatalogMarkInfo ()(_fb .PdfObject ,bool ){if _ddfdf ._babag ==nil {return nil ,false ;};_abdfg :=_ddfdf ._babag .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _abdfg ,_abdfg !=nil ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_feeg :=NewPdfAnnotation ();_dfgf :=&PdfAnnotationPopup {};_dfgf .PdfAnnotation =_feeg ;_feeg .SetContext (_dfgf );return _dfgf ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;func _fgdaa ()*modelManager {_cfbgb :=modelManager {};_cfbgb ._cfabc =map[PdfModel ]_fb .PdfObject {};_cfbgb ._ebfdf =map[_fb .PdfObject ]PdfModel {};return &_cfbgb ;};func _edbg (_geeee _fb .PdfObject )[]*_fb .PdfObjectStream {if _geeee ==nil {return nil ;
};_cbcfg ,_efec :=_fb .GetArray (_geeee );if !_efec ||_cbcfg .Len ()==0{return nil ;};_fabcd :=make ([]*_fb .PdfObjectStream ,0,_cbcfg .Len ());for _ ,_feaeb :=range _cbcfg .Elements (){if _efeeb ,_ebfe :=_fb .GetStream (_feaeb );_ebfe {_fabcd =append (_fabcd ,_efeeb );
};};return _fabcd ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_bafgf ,_ebebf :=_fd .ParsePdfTime (dateStr );if _ebebf !=nil {return PdfDate {},_ebebf ;};return NewPdfDateFromTime (_bafgf );};

// ToPdfObject implements interface PdfModel.
func (_dede *PdfBorderStyle )ToPdfObject ()_fb .PdfObject {_bace :=_fb .MakeDict ();if _dede ._fafb !=nil {if _becb ,_gcdg :=_dede ._fafb .(*_fb .PdfIndirectObject );_gcdg {_becb .PdfObject =_bace ;};};_bace .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _dede .W !=nil {_bace .Set ("\u0057",_fb .MakeFloat (*_dede .W ));};if _dede .S !=nil {_bace .Set ("\u0053",_fb .MakeName (_dede .S .GetPdfName ()));};if _dede .D !=nil {_bace .Set ("\u0044",_fb .MakeArrayFromIntegers (*_dede .D ));};if _dede ._fafb !=nil {return _dede ._fafb ;
};return _bace ;};

// SetName sets the `Name` field of the signature.
func (_edbfg *PdfSignature )SetName (name string ){_edbfg .Name =_fb .MakeString (name )};

// SetDate sets the `M` field of the signature.
func (_dagdf *PdfSignature )SetDate (date _fg .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_dagdf .M =_fb .MakeString (date .Format (format ));
};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_cbdad *_ad .Document )error ;};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _fb .PdfObject ;T3DV _fb .PdfObject ;T3DA _fb .PdfObject ;T3DI _fb .PdfObject ;T3DB _fb .PdfObject ;};func (_ddfa *PdfReader )newPdfActionResetFormFromDict (_gefg *_fb .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_gefg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_gefg .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _fb .PdfObject ;Name _fb .PdfObject ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_aeacf *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_dccf :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_bdcaa ,_dfbgc :=_aeacf .GetNumPages ();if _dfbgc !=nil {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dfbgc );
return nil ,_dfbgc ;};for _aadee :=1;_aadee <=_bdcaa ;_aadee ++{_dfcfag ,_cegdge :=_aeacf .GetPage (_aadee );if _cegdge !=nil {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cegdge );return nil ,_cegdge ;};if opts .PageProcessCallback !=nil {_cegdge =opts .PageProcessCallback (_aadee ,_dfcfag );
if _cegdge !=nil {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cegdge );return nil ,_cegdge ;};}else if opts .PageCallback !=nil {opts .PageCallback (_aadee ,_dfcfag );};_cegdge =_dccf .AddPage (_dfcfag );if _cegdge !=nil {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cegdge );
return nil ,_cegdge ;};};_dccf ._befbee =_aeacf .PdfVersion ();if !opts .SkipInfo {_aeaa ,_fabde :=_aeacf .GetPdfInfo ();if _fabde !=nil {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fabde );}else {_dccf ._acfd .PdfObject =_aeaa .ToPdfObject ();
};};if !opts .SkipMetadata {if _affd :=_aeacf ._babag .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_affd !=nil {if _aagc :=_dccf .SetCatalogMetadata (_affd );_aagc !=nil {return nil ,_aagc ;};};};if !opts .SkipAcroForm {_cdbeb :=_dccf .SetForms (_aeacf .AcroForm );
if _cdbeb !=nil {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cdbeb );return nil ,_cdbeb ;};};if !opts .SkipOutlines {_dccf .AddOutlineTree (_aeacf .GetOutlineTree ());};if !opts .SkipOCProperties {_aacdd ,_bfce :=_aeacf .GetOCProperties ();
if _bfce !=nil {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bfce );}else {_bfce =_dccf .SetOCProperties (_aacdd );if _bfce !=nil {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bfce );};};};if !opts .SkipPageLabels {_bbbca ,_bddcg :=_aeacf .GetPageLabels ();
if _bddcg !=nil {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bddcg );}else {_bddcg =_dccf .SetPageLabels (_bbbca );if _bddcg !=nil {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bddcg );};};};if !opts .SkipNamedDests {_dgcbd ,_adeac :=_aeacf .GetNamedDestinations ();
if _adeac !=nil {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adeac );}else {_adeac =_dccf .SetNamedDestinations (_dgcbd );if _adeac !=nil {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adeac );};};};if !opts .SkipNameDictionary {_bcgc ,_adccf :=_aeacf .GetNameDictionary ();
if _adccf !=nil {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adccf );}else {_adccf =_dccf .SetNameDictionary (_bcgc );if _adccf !=nil {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adccf );};};};if !opts .SkipRotation &&_aeacf .Rotate !=nil {if _cgbac :=_dccf .SetRotation (*_aeacf .Rotate );
_cgbac !=nil {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgbac );};};return &_dccf ,nil ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_bbfe *PdfPageResources )GetPatternByName (keyName _fb .PdfObjectName )(*PdfPattern ,bool ){if _bbfe .Pattern ==nil {return nil ,false ;};_bbedca ,_bedac :=_fb .TraceToDirectObject (_bbfe .Pattern ).(*_fb .PdfObjectDictionary );if !_bedac {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bbfe .Pattern );
return nil ,false ;};if _gcggf :=_bbedca .Get (keyName );_gcggf !=nil {_debe ,_gffcd :=_eabd (_gcggf );if _gffcd !=nil {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_gffcd );
return nil ,false ;};return _debe ,true ;};return nil ,false ;};func _ccfe (_bege _fb .PdfObject )(*PdfColorspaceLab ,error ){_eebf :=NewPdfColorspaceLab ();if _cbebf ,_agcf :=_bege .(*_fb .PdfIndirectObject );_agcf {_eebf ._eebc =_cbebf ;};_bege =_fb .TraceToDirectObject (_bege );
_bdce ,_bdbf :=_bege .(*_fb .PdfObjectArray );if !_bdbf {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bdce .Len ()!=2{return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_bege =_fb .TraceToDirectObject (_bdce .Get (0));_adgbf ,_bdbf :=_bege .(*_fb .PdfObjectName );if !_bdbf {return nil ,_d .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_adgbf !="\u004c\u0061\u0062"{return nil ,_d .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_bege =_fb .TraceToDirectObject (_bdce .Get (1));_geccb ,_bdbf :=_bege .(*_fb .PdfObjectDictionary );
if !_bdbf {return nil ,_d .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_bege =_geccb .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_bege =_fb .TraceToDirectObject (_bege );_afaf ,_bdbf :=_bege .(*_fb .PdfObjectArray );if !_bdbf {return nil ,_d .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _afaf .Len ()!=3{return nil ,_d .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_ccbg ,_cead :=_afaf .GetAsFloat64Slice ();if _cead !=nil {return nil ,_cead ;};_eebf .WhitePoint =_ccbg ;_bege =_geccb .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _bege !=nil {_bege =_fb .TraceToDirectObject (_bege );_cbdd ,_fcfdd :=_bege .(*_fb .PdfObjectArray );
if !_fcfdd {return nil ,_d .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _cbdd .Len ()!=3{return nil ,_d .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_adbgb ,_aead :=_cbdd .GetAsFloat64Slice ();if _aead !=nil {return nil ,_aead ;};_eebf .BlackPoint =_adbgb ;};_bege =_geccb .Get ("\u0052\u0061\u006eg\u0065");if _bege !=nil {_bege =_fb .TraceToDirectObject (_bege );_dcefa ,_fdecf :=_bege .(*_fb .PdfObjectArray );
if !_fdecf {_ef .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_d .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dcefa .Len ()!=4{_ef .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_d .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_ecdb ,_aeab :=_dcefa .GetAsFloat64Slice ();if _aeab !=nil {return nil ,_aeab ;};_eebf .Range =_ecdb ;};return _eebf ,nil ;};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_aceee *PdfWriter )SetNamedDestinations (dests _fb .PdfObject )error {if dests ==nil {return nil ;};_ef .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_aceee ._cgegde .Set ("\u0044\u0065\u0073t\u0073",dests );return _aceee .addObjects (dests );};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_bgcg :=NewPdfAnnotation ();_eegb :=&PdfAnnotationHighlight {};_eegb .PdfAnnotation =_bgcg ;_eegb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bgcg .SetContext (_eegb );return _eegb ;};

// ReplacePage replaces the original page to a new page.
func (_aege *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_cdeg :=pageNum -1;for _ggcg :=range _aege ._bage {if _ggcg ==_cdeg {_gfdg :=page .Duplicate ();_abdfge (_gfdg );_aege ._bage [_ggcg ]=_gfdg ;};};};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_gfaga *PdfFont )ToUnicode ()string {if _gfaga .baseFields ()._fadd ==nil {return "";};return _gfaga .baseFields ()._fadd .Name ();};

// MergePageWith appends page content to source Pdf file page content.
func (_cge *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_fgef :=pageNum -1;var _abea *PdfPage ;for _ceag ,_ccc :=range _cge ._bage {if _ceag ==_fgef {_abea =_ccc ;};};if _abea ==nil {return _d .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _abea ._bgbgb !=nil &&_abea ._bgbgb .GetParser ()==_cge ._efge ._gfcg {_abea =_abea .Duplicate ();_cge ._bage [_fgef ]=_abea ;};page =page .Duplicate ();_abdfge (page );_beccg :=_dff (_abea );_cfgcaf :=_dff (page );_eca :=make (map[_fb .PdfObjectName ]_fb .PdfObjectName );
for _dgba :=range _cfgcaf {if _ ,_cdcd :=_beccg [_dgba ];_cdcd {for _fgge :=1;true ;_fgge ++{_dega :=_fb .PdfObjectName (string (_dgba )+_fge .Itoa (_fgge ));if _ ,_efcdg :=_beccg [_dega ];!_efcdg {_eca [_dgba ]=_dega ;break ;};};};};_afa ,_dadeg :=page .GetContentStreams ();
if _dadeg !=nil {return _dadeg ;};_eacc ,_dadeg :=_abea .GetContentStreams ();if _dadeg !=nil {return _dadeg ;};for _bcgf ,_fcgd :=range _afa {for _bgfe ,_aded :=range _eca {_fcgd =_ba .Replace (_fcgd ,"\u002f"+string (_bgfe ),"\u002f"+string (_aded ),-1);
};_afa [_bcgf ]=_fcgd ;};_eacc =append (_eacc ,_afa ...);if _bbdgd :=_abea .SetContentStreams (_eacc ,_fb .NewFlateEncoder ());_bbdgd !=nil {return _bbdgd ;};_abea ._dgcfa =append (_abea ._dgcfa ,page ._dgcfa ...);if _abea .Resources ==nil {_abea .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_abea .Resources .Font =_cge .mergeResources (_abea .Resources .Font ,page .Resources .Font ,_eca );_abea .Resources .XObject =_cge .mergeResources (_abea .Resources .XObject ,page .Resources .XObject ,_eca );_abea .Resources .Properties =_cge .mergeResources (_abea .Resources .Properties ,page .Resources .Properties ,_eca );
if _abea .Resources .ProcSet ==nil {_abea .Resources .ProcSet =page .Resources .ProcSet ;};_abea .Resources .Shading =_cge .mergeResources (_abea .Resources .Shading ,page .Resources .Shading ,_eca );_abea .Resources .ExtGState =_cge .mergeResources (_abea .Resources .ExtGState ,page .Resources .ExtGState ,_eca );
};_fccc ,_dadeg :=_abea .GetMediaBox ();if _dadeg !=nil {return _dadeg ;};_edab ,_dadeg :=page .GetMediaBox ();if _dadeg !=nil {return _dadeg ;};var _fefe bool ;if _fccc .Llx > _edab .Llx {_fccc .Llx =_edab .Llx ;_fefe =true ;};if _fccc .Lly > _edab .Lly {_fccc .Lly =_edab .Lly ;
_fefe =true ;};if _fccc .Urx < _edab .Urx {_fccc .Urx =_edab .Urx ;_fefe =true ;};if _fccc .Ury < _edab .Ury {_fccc .Ury =_edab .Ury ;_fefe =true ;};if _fefe {_abea .MediaBox =_fccc ;};return nil ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_gabb *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_bffec ,_adba :=color .(*PdfColorDeviceGray );if !_adba {_ef .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_ged .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_bffec ),float64 (*_bffec ),float64 (*_bffec )),nil ;};func (_dbeff *PdfWriter )setWriter (_bedfb _fe .Writer ){_dbeff ._cbeba =_dbeff ._dbcbd ;
_dbeff ._cafc =_ae .NewWriter (_bedfb );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_aaadc *PdfShadingType5 )ToPdfObject ()_fb .PdfObject {_aaadc .PdfShading .ToPdfObject ();_ggefe ,_ebaag :=_aaadc .getShadingDict ();if _ebaag !=nil {_ef .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _aaadc .BitsPerCoordinate !=nil {_ggefe .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_aaadc .BitsPerCoordinate );};if _aaadc .BitsPerComponent !=nil {_ggefe .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aaadc .BitsPerComponent );
};if _aaadc .VerticesPerRow !=nil {_ggefe .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_aaadc .VerticesPerRow );};if _aaadc .Decode !=nil {_ggefe .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_aaadc .Decode );};
if _aaadc .Function !=nil {if len (_aaadc .Function )==1{_ggefe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aaadc .Function [0].ToPdfObject ());}else {_debce :=_fb .MakeArray ();for _ ,_gbbec :=range _aaadc .Function {_debce .Append (_gbbec .ToPdfObject ());
};_ggefe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_debce );};};return _aaadc ._fcfag ;};func (_ede *PdfReader )newPdfAnnotationStampFromDict (_dcdd *_fb .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_fgg :=PdfAnnotationStamp {};_abbd ,_fgbae :=_ede .newPdfAnnotationMarkupFromDict (_dcdd );
if _fgbae !=nil {return nil ,_fgbae ;};_fgg .PdfAnnotationMarkup =_abbd ;_fgg .Name =_dcdd .Get ("\u004e\u0061\u006d\u0065");return &_fgg ,nil ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_bdea :=&PdfAction {};_bdea ._db =_fb .MakeIndirectObject (_fb .MakeDict ());return _bdea ;};func (_eefe *PdfReader )newPdfAnnotationRichMediaFromDict (_def *_fb .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_gaeg :=&PdfAnnotationRichMedia {};
_gaeg .RichMediaSettings =_def .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_gaeg .RichMediaContent =_def .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _gaeg ,nil ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_fb .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_egefd *_fb .PdfIndirectObject ;};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_afca *PdfColorspaceICCBased )GetContainingPdfObject ()_fb .PdfObject {return _afca ._fafd };

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_eeba *Outline )ToPdfOutline ()*PdfOutline {_ecad :=NewPdfOutline ();var _gcaab []*PdfOutlineItem ;var _gcaff int64 ;var _bfbe *PdfOutlineItem ;for _ ,_agcba :=range _eeba .Entries {_eedd ,_dgcgf :=_agcba .ToPdfOutlineItem ();_eedd .Parent =&_ecad .PdfOutlineTreeNode ;
if _bfbe !=nil {_bfbe .Next =&_eedd .PdfOutlineTreeNode ;_eedd .Prev =&_bfbe .PdfOutlineTreeNode ;};_gcaab =append (_gcaab ,_eedd );_gcaff +=_dgcgf ;_bfbe =_eedd ;};_bafdd :=int64 (len (_gcaab ));_gcaff +=_bafdd ;if _bafdd > 0{_ecad .First =&_gcaab [0].PdfOutlineTreeNode ;
_ecad .Last =&_gcaab [_bafdd -1].PdfOutlineTreeNode ;_ecad .Count =&_gcaff ;};return _ecad ;};

// C returns the value of the C component of the color.
func (_bbcfg *PdfColorCalRGB )C ()float64 {return _bbcfg [2]};func (_fbca *PdfReader )newPdfActionThreadFromDict (_facg *_fb .PdfObjectDictionary )(*PdfActionThread ,error ){_dba ,_eba :=_agad (_facg .Get ("\u0046"));if _eba !=nil {return nil ,_eba ;};
return &PdfActionThread {D :_facg .Get ("\u0044"),B :_facg .Get ("\u0042"),F :_dba },nil ;};func _degee (_fecbc *_fb .PdfObjectDictionary )(*PdfShadingPattern ,error ){_dgdca :=&PdfShadingPattern {};_fabgg :=_fecbc .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");
if _fabgg ==nil {_ef .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_bedea ,_bfbgg :=_dbbbg (_fabgg );if _bfbgg !=nil {_ef .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_bfbgg );
return nil ,_bfbgg ;};_dgdca .Shading =_bedea ;if _dfacc :=_fecbc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dfacc !=nil {_afdbc ,_abdc :=_dfacc .(*_fb .PdfObjectArray );if !_abdc {_ef .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dfacc );
return nil ,_fb .ErrTypeError ;};_dgdca .Matrix =_afdbc ;};if _gbcb :=_fecbc .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_gbcb !=nil {_dgdca .ExtGState =_gbcb ;};return _dgdca ,nil ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_fda :=NewPdfAction ();_bcd :=&PdfActionGoTo {};_bcd .PdfAction =_fda ;_fda .SetContext (_bcd );return _bcd ;};func _dbge (_edfd *_cg .ImageBase )(_fbadb Image ){_fbadb .Width =int64 (_edfd .Width );_fbadb .Height =int64 (_edfd .Height );
_fbadb .BitsPerComponent =int64 (_edfd .BitsPerComponent );_fbadb .ColorComponents =_edfd .ColorComponents ;_fbadb .Data =_edfd .Data ;_fbadb ._fcgee =_edfd .Decode ;_fbadb ._feec =_edfd .Alpha ;return _fbadb ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_fgecge *PdfReader )GetOCProperties ()(_fb .PdfObject ,error ){_dcec :=_fgecge ._babag ;_dcag :=_dcec .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_dcag =_fb .ResolveReference (_dcag );if !_fgecge ._abae {_fgcca :=_fgecge .traverseObjectData (_dcag );
if _fgcca !=nil {return nil ,_fgcca ;};};return _dcag ,nil ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_gbdcbf *PdfReader )GetPageLabels ()(_fb .PdfObject ,error ){_aadfg :=_fb .ResolveReference (_gbdcbf ._babag .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _aadfg ==nil {return nil ,nil ;};if !_gbdcbf ._abae {_cbbf :=_gbdcbf .traverseObjectData (_aadfg );
if _cbbf !=nil {return nil ,_cbbf ;};};return _aadfg ,nil ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);
func _cbad (_eafda _fb .PdfObject )(map[_ff .CharCode ]float64 ,error ){if _eafda ==nil {return nil ,nil ;};_gbced ,_cacef :=_fb .GetArray (_eafda );if !_cacef {return nil ,nil ;};_dbcac :=map[_ff .CharCode ]float64 {};_bcbc :=_gbced .Len ();for _fcad :=0;
_fcad < _bcbc -1;_fcad ++{_cecab :=_fb .TraceToDirectObject (_gbced .Get (_fcad ));_gcgb ,_bcfa :=_fb .GetIntVal (_cecab );if !_bcfa {return nil ,_d .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_fcad ,_cecab );
};_fcad ++;if _fcad > _bcbc -1{return nil ,_d .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_gbced );};_aeac :=_fb .TraceToDirectObject (_gbced .Get (_fcad ));
switch _aeac .(type ){case *_fb .PdfObjectArray :_ggbc ,_ :=_fb .GetArray (_aeac );if _bdbb ,_dfee :=_ggbc .ToFloat64Array ();_dfee ==nil {for _gccb :=0;_gccb < len (_bdbb );_gccb ++{_dbcac [_ff .CharCode (_gcgb +_gccb )]=_bdbb [_gccb ];};}else {return nil ,_d .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_fcad ,_aeac );
};case *_fb .PdfObjectInteger :_acee ,_cgeb :=_fb .GetIntVal (_aeac );if !_cgeb {return nil ,_d .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_fcad ,_aeac );
};_fcad ++;if _fcad > _bcbc -1{return nil ,_d .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_gbced );};_aecd :=_gbced .Get (_fcad );_dgbfa ,_afegf :=_fb .GetNumberAsFloat (_aecd );
if _afegf !=nil {return nil ,_d .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_fcad ,_aecd );};for _dbab :=_gcgb ;_dbab <=_acee ;
_dbab ++{_dbcac [_ff .CharCode (_dbab )]=_dgbfa ;};default:return nil ,_d .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_fcad ,_aeac );
};};return _dbcac ,nil ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_fbda *XObjectForm )SetContentStream (content []byte ,encoder _fb .StreamEncoder )error {_dccde :=content ;if encoder ==nil {if _fbda .Filter !=nil {encoder =_fbda .Filter ;}else {encoder =_fb .NewRawEncoder ();};};_efebd ,_efacg :=encoder .EncodeBytes (_dccde );
if _efacg !=nil {return _efacg ;};_dccde =_efebd ;_fbda .Stream =_dccde ;_fbda .Filter =encoder ;return nil ;};

// GetPdfInfo returns the PDF info dictionary.
func (_ccffc *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_cebb ,_acbeb :=_ccffc .GetTrailer ();if _acbeb !=nil {return nil ,_acbeb ;};var _edfbe *_fb .PdfObjectDictionary ;_gfde :=_cebb .Get ("\u0049\u006e\u0066\u006f");switch _aadgae :=_gfde .(type ){case *_fb .PdfObjectReference :_efeb :=_aadgae ;
_gfde ,_acbeb =_ccffc .GetIndirectObjectByNumber (int (_efeb .ObjectNumber ));_gfde =_fb .TraceToDirectObject (_gfde );if _acbeb !=nil {return nil ,_acbeb ;};_edfbe ,_ =_gfde .(*_fb .PdfObjectDictionary );case *_fb .PdfObjectDictionary :_edfbe =_aadgae ;
};if _edfbe ==nil {return nil ,_ged .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_ccgeac ,_acbeb :=NewPdfInfoFromObject (_edfbe );if _acbeb !=nil {return nil ,_acbeb ;
};return _ccgeac ,nil ;};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_cdbea *PdfOutlineTreeNode )GetContainingPdfObject ()_fb .PdfObject {return _cdbea .GetContext ().GetContainingPdfObject ();};

// ToPdfObject returns the PDF representation of the function.
func (_caea *PdfFunctionType3 )ToPdfObject ()_fb .PdfObject {_dcbfa :=_fb .MakeDict ();_dcbfa .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fb .MakeInteger (3));_fdfdge :=&_fb .PdfObjectArray {};for _ ,_dafg :=range _caea .Domain {_fdfdge .Append (_fb .MakeFloat (_dafg ));
};_dcbfa .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fdfdge );if _caea .Range !=nil {_eadaae :=&_fb .PdfObjectArray {};for _ ,_gggad :=range _caea .Range {_eadaae .Append (_fb .MakeFloat (_gggad ));};_dcbfa .Set ("\u0052\u0061\u006eg\u0065",_eadaae );
};if _caea .Functions !=nil {_cbfb :=&_fb .PdfObjectArray {};for _ ,_fdgd :=range _caea .Functions {_cbfb .Append (_fdgd .ToPdfObject ());};_dcbfa .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_cbfb );};if _caea .Bounds !=nil {_fcgae :=&_fb .PdfObjectArray {};
for _ ,_abcd :=range _caea .Bounds {_fcgae .Append (_fb .MakeFloat (_abcd ));};_dcbfa .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_fcgae );};if _caea .Encode !=nil {_gdecg :=&_fb .PdfObjectArray {};for _ ,_bbdce :=range _caea .Encode {_gdecg .Append (_fb .MakeFloat (_bbdce ));
};_dcbfa .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_gdecg );};if _caea ._fedg !=nil {_caea ._fedg .PdfObject =_dcbfa ;return _caea ._fedg ;};return _dcbfa ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_ebdga *PdfPageResources )HasFontByName (keyName _fb .PdfObjectName )bool {_ ,_fbdcg :=_ebdga .GetFontByName (keyName );return _fbdcg ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_ffcfe *PdfOutline )ToPdfObject ()_fb .PdfObject {_bedgg :=_ffcfe ._defdb ;_eafcfc :=_bedgg .PdfObject .(*_fb .PdfObjectDictionary );_eafcfc .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _ffcfe .First !=nil {_eafcfc .Set ("\u0046\u0069\u0072s\u0074",_ffcfe .First .ToPdfObject ());
};if _ffcfe .Last !=nil {_eafcfc .Set ("\u004c\u0061\u0073\u0074",_ffcfe .Last .GetContext ().GetContainingPdfObject ());};if _ffcfe .Parent !=nil {_eafcfc .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ffcfe .Parent .GetContext ().GetContainingPdfObject ());
};if _ffcfe .Count !=nil {_eafcfc .Set ("\u0043\u006f\u0075n\u0074",_fb .MakeInteger (*_ffcfe .Count ));};return _bedgg ;};func (_fcdcc *PdfWriter )writeXRefStreams (_facf int ,_feaa int64 )error {_ddfaba :=_facf +1;_fcdcc ._agcfd [_ddfaba ]=crossReference {Type :1,ObjectNumber :_ddfaba ,Offset :_feaa };
_bgcb :=_cbg .NewBuffer (nil );_adbba :=_fb .MakeArray ();for _ecfgef :=0;_ecfgef <=_facf ;{for ;_ecfgef <=_facf ;_ecfgef ++{_egecb ,_ebdcg :=_fcdcc ._agcfd [_ecfgef ];if _ebdcg &&(!_fcdcc ._gdagb ||_fcdcc ._gdagb &&(_egecb .Type ==1&&_egecb .Offset >=_fcdcc ._bgbc ||_egecb .Type ==0)){break ;
};};var _eggeb int ;for _eggeb =_ecfgef +1;_eggeb <=_facf ;_eggeb ++{_beae ,_bbddc :=_fcdcc ._agcfd [_eggeb ];if _bbddc &&(!_fcdcc ._gdagb ||_fcdcc ._gdagb &&(_beae .Type ==1&&_beae .Offset > _fcdcc ._bgbc )){continue ;};break ;};_adbba .Append (_fb .MakeInteger (int64 (_ecfgef )),_fb .MakeInteger (int64 (_eggeb -_ecfgef )));
for _bgdbg :=_ecfgef ;_bgdbg < _eggeb ;_bgdbg ++{_fecde :=_fcdcc ._agcfd [_bgdbg ];switch _fecde .Type {case 0:_b .Write (_bgcb ,_b .BigEndian ,byte (0));_b .Write (_bgcb ,_b .BigEndian ,uint32 (0));_b .Write (_bgcb ,_b .BigEndian ,uint16 (0xFFFF));case 1:_b .Write (_bgcb ,_b .BigEndian ,byte (1));
_b .Write (_bgcb ,_b .BigEndian ,uint32 (_fecde .Offset ));_b .Write (_bgcb ,_b .BigEndian ,uint16 (_fecde .Generation ));case 2:_b .Write (_bgcb ,_b .BigEndian ,byte (2));_b .Write (_bgcb ,_b .BigEndian ,uint32 (_fecde .ObjectNumber ));_b .Write (_bgcb ,_b .BigEndian ,uint16 (_fecde .Index ));
};};_ecfgef =_eggeb +1;};_defba ,_bfdaf :=_fb .MakeStream (_bgcb .Bytes (),_fb .NewFlateEncoder ());if _bfdaf !=nil {return _bfdaf ;};_defba .ObjectNumber =int64 (_ddfaba );_defba .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0058\u0052\u0065\u0066"));
_defba .PdfObjectDictionary .Set ("\u0057",_fb .MakeArray (_fb .MakeInteger (1),_fb .MakeInteger (4),_fb .MakeInteger (2)));_defba .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_adbba );_defba .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_fb .MakeInteger (int64 (_ddfaba +1)));
_defba .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_fcdcc ._acfd );_defba .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_fcdcc ._dfcc );if _fcdcc ._gdagb &&_fcdcc ._aeeefd > 0{_defba .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_fb .MakeInteger (_fcdcc ._aeeefd ));
};if _fcdcc ._fafcg !=nil {_defba .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_fcdcc ._dedec );};if _fcdcc ._feffc ==nil &&_fcdcc ._gcdff !=""&&_fcdcc ._cfggc !=""{_fcdcc ._feffc =_fb .MakeArray (_fb .MakeHexString (_fcdcc ._gcdff ),_fb .MakeHexString (_fcdcc ._cfggc ));
};if _fcdcc ._feffc !=nil {_ef .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_fcdcc ._feffc );_defba .Set ("\u0049\u0044",_fcdcc ._feffc );};_fcdcc .writeObject (int (_defba .ObjectNumber ),_defba );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_gggca *PdfAnnotationPopup )ToPdfObject ()_fb .PdfObject {_gggca .PdfAnnotation .ToPdfObject ();_cag :=_gggca ._fcf ;_cgddb :=_cag .PdfObject .(*_fb .PdfObjectDictionary );_cgddb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0050\u006f\u0070u\u0070"));
_cgddb .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_gggca .Parent );_cgddb .SetIfNotNil ("\u004f\u0070\u0065\u006e",_gggca .Open );return _cag ;};

// ColorToRGB converts a Lab color to an RGB color.
func (_fddf *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_befcg :=func (_eaaa float64 )float64 {if _eaaa >=6.0/29{return _eaaa *_eaaa *_eaaa ;};return 108.0/841*(_eaaa -4/29);};_dfdde ,_dfgg :=color .(*PdfColorLab );if !_dfgg {_ef .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_ged .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_dfdde .L ();AStar :=_dfdde .A ();BStar :=_dfdde .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_fddf .WhitePoint [0]*_befcg (L );Y :=_fddf .WhitePoint [1]*_befcg (M );Z :=_fddf .WhitePoint [2]*_befcg (N );_agge :=3.240479*X +-1.537150*Y +-0.498535*Z ;_fgdcg :=-0.969256*X +1.875992*Y +0.041556*Z ;_cbcf :=0.055648*X +-0.204043*Y +1.057311*Z ;_agge =_cb .Min (_cb .Max (_agge ,0),1.0);
_fgdcg =_cb .Min (_cb .Max (_fgdcg ,0),1.0);_cbcf =_cb .Min (_cb .Max (_cbcf ,0),1.0);return NewPdfColorDeviceRGB (_agge ,_fgdcg ,_cbcf ),nil ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _fb .PdfObject ;Q _fb .PdfObject ;RC _fb .PdfObject ;DS _fb .PdfObject ;CL _fb .PdfObject ;IT _fb .PdfObject ;BE _fb .PdfObject ;RD _fb .PdfObject ;BS _fb .PdfObject ;LE _fb .PdfObject ;
};func (_feaff *PdfPage )setContainer (_bgef *_fb .PdfIndirectObject ){_bgef .PdfObject =_feaff ._ggafg ;_feaff ._bgbgb =_bgef ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_ebba :=NewPdfAnnotation ();_agb :=&PdfAnnotationScreen {};_agb .PdfAnnotation =_ebba ;_ebba .SetContext (_agb );return _agb ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_fbabg _fb .ParserMetadata ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_effba *PdfPageResources )AddExtGState (gsName _fb .PdfObjectName ,gsDict _fb .PdfObject )error {if _effba .ExtGState ==nil {_effba .ExtGState =_fb .MakeDict ();};_bgbfg :=_effba .ExtGState ;_ddfga ,_agcdb :=_fb .TraceToDirectObject (_bgbfg ).(*_fb .PdfObjectDictionary );
if !_agcdb {_ef .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_bgbfg ,_fb .TraceToDirectObject (_bgbfg ));
return _fb .ErrTypeError ;};_ddfga .Set (gsName ,gsDict );return nil ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_fb .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_gfce *_fb .PdfIndirectObject ;};func _bgfdc (_gbbb []byte )bool {if len (_gbbb )< 4{return true ;};for _afaa :=range _gbbb [:4]{_aceca :=rune (_afaa );
if !_eeg .Is (_eeg .ASCII_Hex_Digit ,_aceca )&&!_eeg .IsSpace (_aceca ){return true ;};};return false ;};func (_fgbed *PdfReader )newPdfOutlineItemFromIndirectObject (_gebac *_fb .PdfIndirectObject )(*PdfOutlineItem ,error ){_ddgcb ,_agdede :=_gebac .PdfObject .(*_fb .PdfObjectDictionary );
if !_agdede {return nil ,_d .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_ebccc :=NewPdfOutlineItem ();_agdbda :=_ddgcb .Get ("\u0054\u0069\u0074l\u0065");
if _agdbda ==nil {return nil ,_d .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_ccbea ,_bgfg :=_fb .GetString (_agdbda );if !_bgfg {return nil ,_d .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_agdbda );};_ebccc .Title =_ccbea ;if _fcgef :=_ddgcb .Get ("\u0043\u006f\u0075n\u0074");
_fcgef !=nil {_ccde ,_cfgaf :=_fcgef .(*_fb .PdfObjectInteger );if !_cfgaf {return nil ,_d .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_fcgef );};_bafaff :=int64 (*_ccde );
_ebccc .Count =&_bafaff ;};if _ccgd :=_ddgcb .Get ("\u0044\u0065\u0073\u0074");_ccgd !=nil {_ebccc .Dest =_fb .ResolveReference (_ccgd );if !_fgbed ._abae {_ddebd :=_fgbed .traverseObjectData (_ebccc .Dest );if _ddebd !=nil {return nil ,_ddebd ;};};};if _dgcbg :=_ddgcb .Get ("\u0041");
_dgcbg !=nil {_ebccc .A =_fb .ResolveReference (_dgcbg );if !_fgbed ._abae {_efaeb :=_fgbed .traverseObjectData (_ebccc .A );if _efaeb !=nil {return nil ,_efaeb ;};};};if _dgac :=_ddgcb .Get ("\u0053\u0045");_dgac !=nil {_ebccc .SE =nil ;};if _abfb :=_ddgcb .Get ("\u0043");
_abfb !=nil {_ebccc .C =_fb .ResolveReference (_abfb );};if _cdeaf :=_ddgcb .Get ("\u0046");_cdeaf !=nil {_ebccc .F =_fb .ResolveReference (_cdeaf );};return _ebccc ,nil ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_fb .PdfObjectString ;Q *_fb .PdfObjectInteger ;DS *_fb .PdfObjectString ;RV _fb .PdfObject ;MaxLen *_fb .PdfObjectInteger ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _fe .ReadSeeker )(*PdfReader ,error ){const _ddad ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _gfdgb (rs ,&ReaderOpts {},false ,_ddad );};

// ToPdfObject implements interface PdfModel.
func (_cgfd *PdfAnnotationFileAttachment )ToPdfObject ()_fb .PdfObject {_cgfd .PdfAnnotation .ToPdfObject ();_fccf :=_cgfd ._fcf ;_cfde :=_fccf .PdfObject .(*_fb .PdfObjectDictionary );_cgfd .PdfAnnotationMarkup .appendToPdfDictionary (_cfde );_cfde .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_cfde .SetIfNotNil ("\u0046\u0053",_cgfd .FS );_cfde .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cgfd .Name );return _fccf ;};var ImageHandling ImageHandler =DefaultImageHandler {};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_fb .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _fb .PdfObject ;A _fb .PdfObject ;SE _fb .PdfObject ;C _fb .PdfObject ;F _fb .PdfObject ;
_daae *_fb .PdfIndirectObject ;};

// ToPdfObject returns the PDF representation of the function.
func (_dfda *PdfFunctionType2 )ToPdfObject ()_fb .PdfObject {_dgab :=_fb .MakeDict ();_dgab .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fb .MakeInteger (2));_fbaaf :=&_fb .PdfObjectArray {};for _ ,_ecbec :=range _dfda .Domain {_fbaaf .Append (_fb .MakeFloat (_ecbec ));
};_dgab .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fbaaf );if _dfda .Range !=nil {_afgea :=&_fb .PdfObjectArray {};for _ ,_agdfg :=range _dfda .Range {_afgea .Append (_fb .MakeFloat (_agdfg ));};_dgab .Set ("\u0052\u0061\u006eg\u0065",_afgea );};if _dfda .C0 !=nil {_feeag :=&_fb .PdfObjectArray {};
for _ ,_efag :=range _dfda .C0 {_feeag .Append (_fb .MakeFloat (_efag ));};_dgab .Set ("\u0043\u0030",_feeag );};if _dfda .C1 !=nil {_cbbcg :=&_fb .PdfObjectArray {};for _ ,_cfagg :=range _dfda .C1 {_cbbcg .Append (_fb .MakeFloat (_cfagg ));};_dgab .Set ("\u0043\u0031",_cbbcg );
};_dgab .Set ("\u004e",_fb .MakeFloat (_dfda .N ));if _dfda ._cddae !=nil {_dfda ._cddae .PdfObject =_dgab ;return _dfda ._cddae ;};return _dgab ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_ecfecg *PdfPageResources )GetXObjectFormByName (keyName _fb .PdfObjectName )(*XObjectForm ,error ){_efdfb ,_acfbb :=_ecfecg .GetXObjectByName (keyName );if _efdfb ==nil {return nil ,nil ;};if _acfbb !=XObjectTypeForm {return nil ,_ged .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_decdd ,_ffbdc :=NewXObjectFormFromStream (_efdfb );if _ffbdc !=nil {return nil ,_ffbdc ;};return _decdd ,nil ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fb .PdfObject ;};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_fb .PdfObjectName ;P *_fb .PdfObjectInteger ;V *_fb .PdfObjectName ;};func (_cabgc *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _cabgc ._gfcg .GetCrypter ()!=nil &&!_cabgc ._gfcg .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_fcfe :=_cabgc ._babag ;_afbbf :=_fcfe .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _afbbf ==nil {return nil ,nil ;};_ef .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_aegbe :=_fb .ResolveReference (_afbbf );
_ef .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_aegbe );if _adaa :=_fb .IsNullObject (_aegbe );_adaa {_ef .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_bdecb ,_eegeea :=_aegbe .(*_fb .PdfIndirectObject );if !_eegeea {if _ ,_fdca :=_fb .GetDict (_aegbe );!_fdca {_ef .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_ef .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_bdecb =_fb .MakeIndirectObject (_aegbe );};_cggbe ,_eegeea :=_bdecb .PdfObject .(*_fb .PdfObjectDictionary );if !_eegeea {return nil ,_ged .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_ef .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_cggbe );_ggfbb ,_ ,_cdfd :=_cabgc .buildOutlineTree (_bdecb ,nil ,nil ,nil );if _cdfd !=nil {return nil ,_cdfd ;};_ef .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_ggfbb );
return _ggfbb ,nil ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_afdd *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _afdd .AlternateSpace ==nil {return nil ,_ged .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _afdd .AlternateSpace .ColorToRGB (color );};

// ToInteger convert to an integer format.
func (_aedd *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_cfab :=_cb .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_cfab *_aedd .R ()),uint32 (_cfab *_aedd .G ()),uint32 (_cfab *_aedd .B ())};};func (_aacea *PdfWriter )writeAcroFormFields ()error {if _aacea ._dbbg ==nil {return nil ;
};_ef .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_edfaf :=_aacea ._dbbg .ToPdfObject ();_ef .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_edfaf );
_aacea ._cgegde .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_edfaf );_ddfdfb :=_aacea .addObjects (_edfaf );if _ddfdfb !=nil {return _ddfdfb ;};return nil ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_gae PdfModel ;Type _fb .PdfObject ;S _fb .PdfObject ;Next _fb .PdfObject ;_db *_fb .PdfIndirectObject ;};

// GetVersion gets the document version.
func (_cdfbc *PdfWriter )GetVersion ()_fb .Version {return _cdfbc ._befbee };func (_fccbe *PdfWriter )flushWriter ()error {if _fccbe ._efdba ==nil {_fccbe ._efdba =_fccbe ._cafc .Flush ();};return _fccbe ._efdba ;};func (_ccae *LTV )validateSig (_ddbe *PdfSignature )error {if _ddbe ==nil ||_ddbe .Contents ==nil ||len (_ddbe .Contents .Bytes ())==0{return _d .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_ddbe );
};return nil ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_dgaa *Image )ConvertToBinary ()error {if _dgaa .ColorComponents ==1&&_dgaa .BitsPerComponent ==1{return nil ;};_aeecf ,_bcfdd :=_dgaa .ToGoImage ();if _bcfdd !=nil {return _bcfdd ;};_bbedc ,_bcfdd :=_cg .MonochromeConverter .Convert (_aeecf );if _bcfdd !=nil {return _bcfdd ;
};_dgaa .Data =_bbedc .Base ().Data ;_dgaa ._feec ,_bcfdd =_cg .ScaleAlphaToMonochrome (_dgaa ._feec ,int (_dgaa .Width ),int (_dgaa .Height ));if _bcfdd !=nil {return _bcfdd ;};_dgaa .BitsPerComponent =1;_dgaa .ColorComponents =1;_dgaa ._fcgee =nil ;return nil ;
};func (_cddbb *PdfFunctionType0 )processSamples ()error {_cgba :=_faf .ResampleBytes (_cddbb ._cbgd ,_cddbb .BitsPerSample );_cddbb ._cbdg =_cgba ;return nil ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_abge FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_abge .Mask ()&^fl .Mask ())};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_ddffa *PdfReader )GetIndirectObjectByNumber (number int )(_fb .PdfObject ,error ){_aacbc ,_gcdb :=_ddffa ._gfcg .LookupByNumber (number );return _aacbc ,_gcdb ;};

// ToPdfObject returns the PDF representation of the function.
func (_fdbgb *PdfFunctionType4 )ToPdfObject ()_fb .PdfObject {_begbcg :=_fdbgb ._fbcdf ;if _begbcg ==nil {_fdbgb ._fbcdf =&_fb .PdfObjectStream {};_begbcg =_fdbgb ._fbcdf ;};_bdbfc :=_fb .MakeDict ();_bdbfc .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_fb .MakeInteger (4));
_ddbf :=&_fb .PdfObjectArray {};for _ ,_cegbc :=range _fdbgb .Domain {_ddbf .Append (_fb .MakeFloat (_cegbc ));};_bdbfc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ddbf );_gcffd :=&_fb .PdfObjectArray {};for _ ,_caeae :=range _fdbgb .Range {_gcffd .Append (_fb .MakeFloat (_caeae ));
};_bdbfc .Set ("\u0052\u0061\u006eg\u0065",_gcffd );if _fdbgb ._begca ==nil &&_fdbgb .Program !=nil {_fdbgb ._begca =[]byte (_fdbgb .Program .String ());};_bdbfc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fb .MakeInteger (int64 (len (_fdbgb ._begca ))));
_begbcg .Stream =_fdbgb ._begca ;_begbcg .PdfObjectDictionary =_bdbfc ;return _begbcg ;};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_ebbd *PdfSignature )GetDocMDPPermission ()(_gc .DocMDPPermission ,bool ){for _ ,_bcfcg :=range _ebbd .Reference .Elements (){if _afeedb ,_caac :=_fb .GetDict (_bcfcg );_caac {if _afada ,_gfbfd :=_fb .GetNameVal (_afeedb .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_gfbfd &&_afada =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _ffadc ,_adbb :=_fb .GetDict (_afeedb .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_adbb {if P ,_gdeff :=_fb .GetIntVal (_ffadc .Get ("\u0050"));_gdeff {return _gc .DocMDPPermission (P ),true ;
};};};};};return 0,false ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_gc .DiffResults ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _fg .Time ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_gfdcd *PdfWriter )AddPage (page *PdfPage )error {const _fbced ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_abdfge (page );_bcceb :=page .ToPdfObject ();_ef .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_ef .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_bcceb );_aggac ,_efea :=_fb .GetIndirect (_bcceb );if !_efea {return _ged .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_ef .Log .Trace ("\u0025\u0073",_aggac );_ef .Log .Trace ("\u0025\u0073",_aggac .PdfObject );_fefg ,_efea :=_fb .GetDict (_aggac .PdfObject );if !_efea {return _ged .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bacec ,_efea :=_fb .GetName (_fefg .Get ("\u0054\u0079\u0070\u0065"));if !_efea {return _d .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_fefg .Get ("\u0054\u0079\u0070\u0065"));
};if _bacec .String ()!="\u0050\u0061\u0067\u0065"{return _ged .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_febcf :=[]_fb .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_bcfdg ,_beba :=_fb .GetIndirect (_fefg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_ef .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_fefg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_beba );
for _beba {_ef .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_bcfdg );_ccaec ,_gagc :=_fb .GetDict (_bcfdg .PdfObject );if !_gagc {return _ged .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_egcc :=range _febcf {_ef .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_egcc );if _fefg .Get (_egcc )!=nil {_ef .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _gceee :=_ccaec .Get (_egcc );_gceee !=nil {_ef .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_egcc );_fefg .Set (_egcc ,_gceee );};};_bcfdg ,_beba =_fb .GetIndirect (_ccaec .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_ef .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ccaec .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_ef .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_fefg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gfdcd ._ebfee );_aggac .PdfObject =_fefg ;_cgfgg ,_efea :=_fb .GetDict (_gfdcd ._ebfee .PdfObject );if !_efea {return _ged .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_dcbfd ,_efea :=_fb .GetArray (_cgfgg .Get ("\u004b\u0069\u0064\u0073"));if !_efea {return _ged .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_dcbfd .Append (_aggac );_gfdcd ._gabbc [_fefg ]=struct{}{};_feafa ,_efea :=_fb .GetInt (_cgfgg .Get ("\u0043\u006f\u0075n\u0074"));if !_efea {return _ged .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_feafa =*_feafa +1;if page ._bgaaa ==nil {_eaeed :=_fde .Track (_gfdcd ._ceacdg ,_fbced );if _eaeed !=nil {return _eaeed ;};}else {_gaeec :=_fde .Track (page ._bgaaa ._bdgec ,_fbced );if _gaeec !=nil {return _gaeec ;};};_gfdcd .addObject (_aggac );_ddaag :=_gfdcd .addObjects (_fefg );
if _ddaag !=nil {return _ddaag ;};return nil ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);
FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);
FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26);
);

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _fb .PdfObject ;IsMap _fb .PdfObject ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_gbbeb *PdfPage )SetContentStreams (cStreams []string ,encoder _fb .StreamEncoder )error {if len (cStreams )==0{_gbbeb .Contents =nil ;return nil ;};if encoder ==nil {encoder =_fb .NewRawEncoder ();};var _cfabg []*_fb .PdfObjectStream ;for _ ,_deca :=range cStreams {_gafc :=&_fb .PdfObjectStream {};
_bbece :=encoder .MakeStreamDict ();_gabge ,_gdfgd :=encoder .EncodeBytes ([]byte (_deca ));if _gdfgd !=nil {return _gdfgd ;};_bbece .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fb .MakeInteger (int64 (len (_gabge ))));_gafc .PdfObjectDictionary =_bbece ;
_gafc .Stream =_gabge ;_cfabg =append (_cfabg ,_gafc );};if len (_cfabg )==1{_gbbeb .Contents =_cfabg [0];}else {_dedca :=_fb .MakeArray ();for _ ,_dabcg :=range _cfabg {_dedca .Append (_dabcg );};_gbbeb .Contents =_dedca ;};return nil ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_fbgdb :map[_fb .PdfObject ]struct{}{},_bcbaa :_fgdaa (),_gfcg :_fb .NewParserFromString (txt )};};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;func (_acbg *pdfFontType0 )subsetRegistered ()error {_edae ,_dfed :=_acbg .DescendantFont ._gccg .(*pdfCIDFontType2 );if !_dfed {_ef .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_acbg .DescendantFont );
return nil ;};if _edae ==nil {return nil ;};if _edae ._gcge ==nil {_ef .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _acbg ._eeaeg ==nil {_ef .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_afcfa ,_dfed :=_fb .GetStream (_edae ._gcge .FontFile2 );if !_dfed {_ef .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _ged .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_ffcfd ,_aacbf :=_fb .DecodeStream (_afcfa );if _aacbf !=nil {_ef .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_aacbf );
return _aacbf ;};_bdbfb ,_aacbf :=_bffe .Parse (_cbg .NewReader (_ffcfd ));if _aacbf !=nil {_ef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_afcfa .Stream ));
return _aacbf ;};var _efbgc []rune ;var _feaef *_bffe .Font ;switch _dgcbc :=_acbg ._eeaeg .(type ){case *_ff .TrueTypeFontEncoder :_efbgc =_dgcbc .RegisteredRunes ();_feaef ,_aacbf =_bdbfb .SubsetKeepRunes (_efbgc );if _aacbf !=nil {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aacbf );
return _aacbf ;};_dgcbc .SubsetRegistered ();case *_ff .IdentityEncoder :_efbgc =_dgcbc .RegisteredRunes ();_fcaaf :=make ([]_bffe .GlyphIndex ,len (_efbgc ));for _gafaf ,_fceg :=range _efbgc {_fcaaf [_gafaf ]=_bffe .GlyphIndex (_fceg );};_feaef ,_aacbf =_bdbfb .SubsetKeepIndices (_fcaaf );
if _aacbf !=nil {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aacbf );return _aacbf ;};case _ff .SimpleEncoder :_fead :=_dgcbc .Charcodes ();for _ ,_bcea :=range _fead {_bdbd ,_bcggg :=_dgcbc .CharcodeToRune (_bcea );if !_bcggg {_ef .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_bcea );
continue ;};_efbgc =append (_efbgc ,_bdbd );};default:return _d .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_acbg ._eeaeg );
};var _ccdda _cbg .Buffer ;_aacbf =_feaef .Write (&_ccdda );if _aacbf !=nil {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aacbf );return _aacbf ;};if _acbg ._fadd !=nil {_gacca :=make (map[_bde .CharCode ]rune ,len (_efbgc ));for _ ,_cebfb :=range _efbgc {_fddb ,_cccaa :=_acbg ._eeaeg .RuneToCharcode (_cebfb );
if !_cccaa {continue ;};_gacca [_bde .CharCode (_fddb )]=_cebfb ;};_acbg ._fadd =_bde .NewToUnicodeCMap (_gacca );};_afcfa ,_aacbf =_fb .MakeStream (_ccdda .Bytes (),_fb .NewFlateEncoder ());if _aacbf !=nil {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aacbf );
return _aacbf ;};_afcfa .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fb .MakeInteger (int64 (_ccdda .Len ())));if _gfcfb ,_ceeag :=_fb .GetStream (_edae ._gcge .FontFile2 );_ceeag {*_gfcfb =*_afcfa ;}else {_edae ._gcge .FontFile2 =_afcfa ;};_ceeac :=_fcaa ();
if len (_acbg ._ecaae )> 0{_acbg ._ecaae =_adgg (_acbg ._ecaae ,_ceeac );};if len (_edae ._ecaae )> 0{_edae ._ecaae =_adgg (_edae ._ecaae ,_ceeac );};if len (_acbg ._bdfg )> 0{_acbg ._bdfg =_adgg (_acbg ._bdfg ,_ceeac );};if _edae ._gcge !=nil {_ffdf ,_ebcff :=_fb .GetName (_edae ._gcge .FontName );
if _ebcff &&len (_ffdf .String ())> 0{_fbbc :=_adgg (_ffdf .String (),_ceeac );_edae ._gcge .FontName =_fb .MakeName (_fbbc );};};return nil ;};func _egbf (_bfef _fb .PdfObject )(*PdfPageResourcesColorspaces ,error ){_gedfb :=&PdfPageResourcesColorspaces {};
if _bgadb ,_bfedg :=_bfef .(*_fb .PdfIndirectObject );_bfedg {_gedfb ._cfcab =_bgadb ;_bfef =_bgadb .PdfObject ;};_dcadf ,_eeccc :=_fb .GetDict (_bfef );if !_eeccc {return nil ,_ged .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_gedfb .Names =[]string {};_gedfb .Colorspaces =map[string ]PdfColorspace {};for _ ,_dbeef :=range _dcadf .Keys (){_agagdd :=_dcadf .Get (_dbeef );_gedfb .Names =append (_gedfb .Names ,string (_dbeef ));_dcacf ,_bbge :=NewPdfColorspaceFromPdfObject (_agagdd );
if _bbge !=nil {return nil ,_bbge ;};_gedfb .Colorspaces [string (_dbeef )]=_dcacf ;};return _gedfb ,nil ;};var ErrColorOutOfRange =_ged .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_faggb *PdfPage )GetContainingPdfObject ()_fb .PdfObject {return _faggb ._bgbgb };var _ pdfFont =(*pdfCIDFontType2 )(nil );

// GetNumComponents returns the number of color components (3 for RGB).
func (_gdea *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_bdf :=NewPdfAnnotation ();_daff :=&PdfAnnotationFreeText {};_daff .PdfAnnotation =_bdf ;_daff .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bdf .SetContext (_daff );return _daff ;};const (_cgffe =0x00001;
_efadf =0x00002;_bfda =0x00004;_ffgb =0x00008;_ecegce =0x00020;_efca =0x00040;_bedfe =0x10000;_cffb =0x20000;_cacde =0x40000;);func (_ffcdd *pdfFontType0 )baseFields ()*fontCommon {return &_ffcdd .fontCommon };

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_faae *_fb .PdfIndirectObject ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_ecddd *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_efdg :=func (_cgee float64 )float64 {if _cgee >=6.0/29{return _cgee *_cgee *_cgee ;};return 108.0/841*(_cgee -4/29);};_cdda :=img ._fcgee ;if len (_cdda )!=6{_ef .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_cdda =_ecddd .DecodeArray ();};_dedf :=_faf .NewReader (img .getBase ());_abfadc :=_cg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._feec ,img ._fcgee );_efad :=_faf .NewWriter (_abfadc );_bbcd :=_cb .Pow (2,float64 (img .BitsPerComponent ))-1;
_cffdc :=make ([]uint32 ,3);var (_fcec error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_dffdc ,_fgdcge ,_eedb float64 ;);for {_fcec =_dedf .ReadSamples (_cffdc );if _fcec ==_fe .EOF {break ;}else if _fcec !=nil {return img ,_fcec ;};Ls =float64 (_cffdc [0])/_bbcd ;
As =float64 (_cffdc [1])/_bbcd ;Bs =float64 (_cffdc [2])/_bbcd ;Ls =_cg .LinearInterpolate (Ls ,0.0,1.0,_cdda [0],_cdda [1]);As =_cg .LinearInterpolate (As ,0.0,1.0,_cdda [2],_cdda [3]);Bs =_cg .LinearInterpolate (Bs ,0.0,1.0,_cdda [4],_cdda [5]);L =(Ls +16)/116+As /500;
M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_ecddd .WhitePoint [0]*_efdg (L );Y =_ecddd .WhitePoint [1]*_efdg (M );Z =_ecddd .WhitePoint [2]*_efdg (N );_dffdc =3.240479*X +-1.537150*Y +-0.498535*Z ;_fgdcge =-0.969256*X +1.875992*Y +0.041556*Z ;_eedb =0.055648*X +-0.204043*Y +1.057311*Z ;
_dffdc =_cb .Min (_cb .Max (_dffdc ,0),1.0);_fgdcge =_cb .Min (_cb .Max (_fgdcge ,0),1.0);_eedb =_cb .Min (_cb .Max (_eedb ,0),1.0);_cffdc [0]=uint32 (_dffdc *_bbcd );_cffdc [1]=uint32 (_fgdcge *_bbcd );_cffdc [2]=uint32 (_eedb *_bbcd );if _fcec =_efad .WriteSamples (_cffdc );
_fcec !=nil {return img ,_fcec ;};};return _dbge (&_abfadc ),nil ;};

// PdfVersion returns version of the PDF file.
func (_fdga *PdfReader )PdfVersion ()_fb .Version {return _fdga ._gfcg .PdfVersion ()};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_gbfce *PdfSignature ,_fedb Hasher ,_ecgcc SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};func (_baedd *PdfReader )newPdfSignatureFromIndirect (_dcgbb *_fb .PdfIndirectObject )(*PdfSignature ,error ){_fcbdd ,_bacb :=_dcgbb .PdfObject .(*_fb .PdfObjectDictionary );
if !_bacb {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _bdgf ,_geagf :=_baedd ._bcbaa .GetModelFromPrimitive (_dcgbb ).(*PdfSignature );_geagf {return _bdgf ,nil ;};_defdc :=&PdfSignature {};_defdc ._bdccg =_dcgbb ;_defdc .Type ,_ =_fb .GetName (_fcbdd .Get ("\u0054\u0079\u0070\u0065"));
_defdc .Filter ,_bacb =_fb .GetName (_fcbdd .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_bacb {_ef .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_defdc .SubFilter ,_ =_fb .GetName (_fcbdd .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_defdc .Contents ,_bacb =_fb .GetString (_fcbdd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_bacb {_ef .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _beddg ,_abafg :=_fb .GetArray (_fcbdd .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_abafg {_defdc .Reference =_fb .MakeArray ();for _ ,_gggada :=range _beddg .Elements (){_gdeeg ,_eaafg :=_fb .GetDict (_gggada );
if !_eaafg {_ef .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_baggb ,_gegaa :=_baedd .newPdfSignatureReferenceFromDict (_gdeeg );if _gegaa !=nil {return nil ,_gegaa ;};_defdc .Reference .Append (_baggb .ToPdfObject ());};};_defdc .Cert =_fcbdd .Get ("\u0043\u0065\u0072\u0074");_defdc .ByteRange ,_ =_fb .GetArray (_fcbdd .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_defdc .Changes ,_ =_fb .GetArray (_fcbdd .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_defdc .Name ,_ =_fb .GetString (_fcbdd .Get ("\u004e\u0061\u006d\u0065"));_defdc .M ,_ =_fb .GetString (_fcbdd .Get ("\u004d"));_defdc .Location ,_ =_fb .GetString (_fcbdd .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_defdc .Reason ,_ =_fb .GetString (_fcbdd .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_defdc .ContactInfo ,_ =_fb .GetString (_fcbdd .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_defdc .R ,_ =_fb .GetInt (_fcbdd .Get ("\u0052"));
_defdc .V ,_ =_fb .GetInt (_fcbdd .Get ("\u0056"));_defdc .PropBuild ,_ =_fb .GetDict (_fcbdd .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_defdc .PropAuthTime ,_ =_fb .GetInt (_fcbdd .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_defdc .PropAuthType ,_ =_fb .GetName (_fcbdd .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_baedd ._bcbaa .Register (_dcgbb ,_defdc );return _defdc ,nil ;};

// SetVersion sets the PDF version of the output file.
func (_gcgeba *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_gcgeba ._befbee .Major =majorVersion ;_gcgeba ._befbee .Minor =minorVersion ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_cbc :=NewPdfAnnotation ();_bed :=&PdfAnnotationPrinterMark {};_bed .PdfAnnotation =_cbc ;_cbc .SetContext (_bed );return _bed ;};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_bfbb *PdfAppender )SetDocInfo (info *PdfInfo ){_bfbb ._aadg =info };func _eecb ()string {_cdccb .Lock ();defer _cdccb .Unlock ();return _fdafc };

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_dbcag *Image )Resample (targetBitsPerComponent int64 ){if _dbcag .BitsPerComponent ==targetBitsPerComponent {return ;};_eefc :=_dbcag .GetSamples ();if targetBitsPerComponent < _dbcag .BitsPerComponent {_gffb :=_dbcag .BitsPerComponent -targetBitsPerComponent ;
for _abfea :=range _eefc {_eefc [_abfea ]>>=uint (_gffb );};}else if targetBitsPerComponent > _dbcag .BitsPerComponent {_gfbc :=targetBitsPerComponent -_dbcag .BitsPerComponent ;for _cegda :=range _eefc {_eefc [_cegda ]<<=uint (_gfbc );};};_dbcag .BitsPerComponent =targetBitsPerComponent ;
if _dbcag .BitsPerComponent < 8{_dbcag .resampleLowBits (_eefc );return ;};_ffgee :=_cg .BytesPerLine (int (_dbcag .Width ),int (_dbcag .BitsPerComponent ),_dbcag .ColorComponents );_cagee :=make ([]byte ,_ffgee *int (_dbcag .Height ));var (_ddfeb ,_gbafa ,_cgbf ,_afac int ;
_ffecd uint32 ;);for _cgbf =0;_cgbf < int (_dbcag .Height );_cgbf ++{_ddfeb =_cgbf *_ffgee ;_gbafa =(_cgbf +1)*_ffgee -1;_ccec :=_faf .ResampleUint32 (_eefc [_ddfeb :_gbafa ],int (targetBitsPerComponent ),8);for _afac ,_ffecd =range _ccec {_cagee [_afac +_ddfeb ]=byte (_ffecd );
};};_dbcag .Data =_cagee ;};

// GetNumPages returns the number of pages in the document.
func (_dbfd *PdfReader )GetNumPages ()(int ,error ){if _dbfd ._gfcg .GetCrypter ()!=nil &&!_dbfd ._gfcg .IsAuthenticated (){return 0,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_dbfd ._gcbf ),nil ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_adcb _fe .ReadSeeker ;_gagg *_fb .PdfParser ;_efge *PdfReader ;Reader *PdfReader ;_bage []*PdfPage ;_bcc *PdfAcroForm ;_gacg *DSS ;_eafc *Permissions ;_bbga _fb .XrefTable ;_aeb int64 ;_efab int ;_cfad []_fb .PdfObject ;_fcb map[_fb .PdfObject ]struct{};
_cacf map[_fb .PdfObject ]int64 ;_cbd map[_fb .PdfObject ]struct{};_bccd map[_fb .PdfObject ]struct{};_ffda int64 ;_bdeb bool ;_cab string ;_dcac *EncryptOptions ;_aadg *PdfInfo ;};func (_dfccd *PdfWriter )writeOutlines ()error {if _dfccd ._ebgea ==nil {return nil ;
};_ef .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_dfccd ._ebgea );_fdfdc :=_dfccd ._ebgea .ToPdfObject ();_ef .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_fdfdc ,_fdfdc ,_fdfdc );
_dfccd ._cgegde .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_fdfdc );_eegbf :=_dfccd .addObjects (_fdfdc );if _eegbf !=nil {return _eegbf ;};return nil ;};func (_geace *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _geace ._gcge };
func (_cfc *PdfReader )newPdfActionURIFromDict (_gggc *_fb .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_gggc .Get ("\u0055\u0052\u0049"),IsMap :_gggc .Get ("\u0049\u0073\u004da\u0070")},nil ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _fb .PdfObject ;T _fb .PdfObject ;Operation _fb .PdfObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_gecc *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_fb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fcag ,_ddfab :=_fb .GetNumbersAsFloat (objects );
if _ddfab !=nil {return nil ,_ddfab ;};return _gecc .ColorFromFloats (_fcag );};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_ffea *_fb .PdfObjectDictionary ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_gaffd *PdfPattern )GetContext ()PdfModel {return _gaffd ._cabgd };

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_cgbcc :_fb .MakeIndirectObject (_fb .MakeDict ()),VRI :map[string ]*VRI {}};};

// AddWatermarkImage adds a watermark to the page.
func (_gdac *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_gbfg ,_agddf :=_gdac .GetMediaBox ();if _agddf !=nil {return _agddf ;};_gbga :=_gbfg .Urx -_gbfg .Llx ;_daeb :=_gbfg .Ury -_gbfg .Lly ;_bdafc :=float64 (*ximg .Width );
_gcebc :=(_gbga -_bdafc )/2;if opt .FitToWidth {_bdafc =_gbga ;_gcebc =0;};_gegaf :=_daeb ;_faac :=float64 (0);if opt .PreserveAspectRatio {_gegaf =_bdafc *float64 (*ximg .Height )/float64 (*ximg .Width );_faac =(_daeb -_gegaf )/2;};if _gdac .Resources ==nil {_gdac .Resources =NewPdfPageResources ();
};_fdcbb :=0;_dcbdg :=_fb .PdfObjectName (_d .Sprintf ("\u0049\u006d\u0077%\u0064",_fdcbb ));for _gdac .Resources .HasXObjectByName (_dcbdg ){_fdcbb ++;_dcbdg =_fb .PdfObjectName (_d .Sprintf ("\u0049\u006d\u0077%\u0064",_fdcbb ));};_agddf =_gdac .AddImageResource (_dcbdg ,ximg );
if _agddf !=nil {return _agddf ;};_fdcbb =0;_dbdddf :=_fb .PdfObjectName (_d .Sprintf ("\u0047\u0053\u0025\u0064",_fdcbb ));for _gdac .HasExtGState (_dbdddf ){_fdcbb ++;_dbdddf =_fb .PdfObjectName (_d .Sprintf ("\u0047\u0053\u0025\u0064",_fdcbb ));};_ggcf :=_fb .MakeDict ();
_ggcf .Set ("\u0042\u004d",_fb .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_ggcf .Set ("\u0043\u0041",_fb .MakeFloat (opt .Alpha ));_ggcf .Set ("\u0063\u0061",_fb .MakeFloat (opt .Alpha ));_agddf =_gdac .AddExtGState (_dbdddf ,_ggcf );if _agddf !=nil {return _agddf ;
};_afeed :=_d .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_dbdddf ,_bdafc ,_gegaf ,_gcebc ,_faac ,_dcbdg );
_gdac .AddContentStreamByString (_afeed );return nil ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_cacbb DefaultImageHandler )Read (reader _fe .Reader )(*Image ,error ){_agcdd ,_ ,_edgae :=_gb .Decode (reader );if _edgae !=nil {_ef .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_edgae );
return nil ,_edgae ;};return _cacbb .NewImageFromGoImage (_agcdd );};func _abece (_affda string )(string ,error ){var _gaafc _cbg .Buffer ;_gaafc .WriteString (_affda );_ecfea :=make ([]byte ,8+16);_fagab :=_fg .Now ().UTC ().UnixNano ();_b .BigEndian .PutUint64 (_ecfea ,uint64 (_fagab ));
_ ,_gaace :=_aa .Read (_ecfea [8:]);if _gaace !=nil {return "",_gaace ;};_gaafc .WriteString (_g .EncodeToString (_ecfea ));return _gaafc .String (),nil ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _fb .PdfObject ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_gfcae *PdfPageResources )GetXObjectByName (keyName _fb .PdfObjectName )(*_fb .PdfObjectStream ,XObjectType ){if _gfcae .XObject ==nil {return nil ,XObjectTypeUndefined ;};_fcdf ,_ebdc :=_fb .TraceToDirectObject (_gfcae .XObject ).(*_fb .PdfObjectDictionary );
if !_ebdc {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fb .TraceToDirectObject (_gfcae .XObject ));
return nil ,XObjectTypeUndefined ;};if _affe :=_fcdf .Get (keyName );_affe !=nil {_cdgfg ,_fgfead :=_fb .GetStream (_affe );if !_fgfead {_ef .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_affe );
return nil ,XObjectTypeUndefined ;};_eabe :=_cdgfg .PdfObjectDictionary ;_dbbfc ,_fgfead :=_fb .TraceToDirectObject (_eabe .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_fb .PdfObjectName );if !_fgfead {_ef .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_eabe .String ());
return nil ,XObjectTypeUndefined ;};if *_dbbfc =="\u0049\u006d\u0061g\u0065"{return _cdgfg ,XObjectTypeImage ;}else if *_dbbfc =="\u0046\u006f\u0072\u006d"{return _cdgfg ,XObjectTypeForm ;}else if *_dbbfc =="\u0050\u0053"{return _cdgfg ,XObjectTypePS ;
}else {_ef .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_dbbfc );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;
};};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_degdb *pdfCIDFontType2 )ToPdfObject ()_fb .PdfObject {if _degdb ._ddfg ==nil {_degdb ._ddfg =&_fb .PdfIndirectObject {};};_adbf :=_degdb .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_degdb ._ddfg .PdfObject =_adbf ;if _degdb .CIDSystemInfo !=nil {_adbf .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_degdb .CIDSystemInfo );};if _degdb .DW !=nil {_adbf .Set ("\u0044\u0057",_degdb .DW );};if _degdb .DW2 !=nil {_adbf .Set ("\u0044\u0057\u0032",_degdb .DW2 );
};if _degdb .W !=nil {_adbf .Set ("\u0057",_degdb .W );};if _degdb .W2 !=nil {_adbf .Set ("\u0057\u0032",_degdb .W2 );};if _degdb .CIDToGIDMap !=nil {_adbf .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_degdb .CIDToGIDMap );};return _degdb ._ddfg ;
};

// ToPdfObject converts rectangle to a PDF object.
func (_agagbc *PdfRectangle )ToPdfObject ()_fb .PdfObject {return _fb .MakeArray (_fb .MakeFloat (_agagbc .Llx ),_fb .MakeFloat (_agagbc .Lly ),_fb .MakeFloat (_agagbc .Urx ),_fb .MakeFloat (_agagbc .Ury ));};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_gaagg *_fb .PdfObjectDictionary ;Type *_fb .PdfObjectName ;TransformMethod *_fb .PdfObjectName ;TransformParams _fb .PdfObject ;Data _fb .PdfObject ;DigestMethod *_fb .PdfObjectName ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_dbbd *XObjectImage )SetFilter (encoder _fb .StreamEncoder )error {_bdae :=_dbbd .Stream ;_abdfa ,_eeeab :=_dbbd .Filter .DecodeBytes (_bdae );if _eeeab !=nil {return _eeeab ;};_dbbd .Filter =encoder ;encoder .UpdateParams (_dbbd .getParamsDict ());
_bdae ,_eeeab =encoder .EncodeBytes (_abdfa );if _eeeab !=nil {return _eeeab ;};_dbbd .Stream =_bdae ;return nil ;};

// ToPdfObject implements interface PdfModel.
func (_ddgc *PdfAnnotationWidget )ToPdfObject ()_fb .PdfObject {_ddgc .PdfAnnotation .ToPdfObject ();_ccdc :=_ddgc ._fcf ;_bcbd :=_ccdc .PdfObject .(*_fb .PdfObjectDictionary );if _ddgc ._ece {return _ccdc ;};_ddgc ._ece =true ;_bcbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_bcbd .SetIfNotNil ("\u0048",_ddgc .H );_bcbd .SetIfNotNil ("\u004d\u004b",_ddgc .MK );_bcbd .SetIfNotNil ("\u0041",_ddgc .A );_bcbd .SetIfNotNil ("\u0041\u0041",_ddgc .AA );_bcbd .SetIfNotNil ("\u0042\u0053",_ddgc .BS );_fdad :=_ddgc .Parent ;if _ddgc ._fcc !=nil {if _ddgc ._fcc ._ecgg ==_ddgc ._fcf {_ddgc ._fcc .ToPdfObject ();
};_fdad =_ddgc ._fcc .GetContainingPdfObject ();};if _fdad !=_ccdc {_bcbd .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_fdad );};_ddgc ._ece =false ;return _ccdc ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_bdcb *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_bdcb .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_bdcb ._bcc =acroForm ;};func (_eafde *LTV )getOCSPs (_daace []*_c .Certificate ,_aeddf map[string ]*_c .Certificate )([][]byte ,error ){_bfbgb :=make ([][]byte ,0,len (_daace ));
for _ ,_abgcg :=range _daace {for _ ,_ebgd :=range _abgcg .OCSPServer {if _eafde .CertClient .IsCA (_abgcg ){continue ;};_fcgf ,_fbcag :=_aeddf [_abgcg .Issuer .CommonName ];if !_fbcag {_ef .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_eegec ,_begcgd :=_eafde .OCSPClient .MakeRequest (_ebgd ,_abgcg ,_fcgf );if _begcgd !=nil {_ef .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_begcgd );
continue ;};_bfbgb =append (_bfbgb ,_eegec );};};return _bfbgb ,nil ;};func (_dgceb *PdfSignature )extractChainFromPKCS7 ()([]*_c .Certificate ,error ){_abded ,_bdbcd :=_bff .Parse (_dgceb .Contents .Bytes ());if _bdbcd !=nil {return nil ,_bdbcd ;};return _abded .Certificates ,nil ;
};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_efdb *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_fb .StreamEncoder ,error ){_agaggf ,_cdaff :=_efdb ._bfgge .(*_fb .PdfObjectStream );if !_cdaff {_ef .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_efdb ._bfgge );
return nil ,nil ,_fb .ErrTypeError ;};_bcadc ,_gfdcg :=_fb .DecodeStream (_agaggf );if _gfdcg !=nil {_ef .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_gfdcg );
return nil ,nil ,_gfdcg ;};_ddcbf ,_gfdcg :=_fb .NewEncoderFromStream (_agaggf );if _gfdcg !=nil {_ef .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_gfdcg );
return nil ,nil ,_gfdcg ;};return _bcadc ,_ddcbf ,nil ;};func (_fbbeg *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// ToPdfObject implements interface PdfModel.
func (_fef *PdfActionURI )ToPdfObject ()_fb .PdfObject {_fef .PdfAction .ToPdfObject ();_fgb :=_fef ._db ;_cc :=_fgb .PdfObject .(*_fb .PdfObjectDictionary );_cc .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeURI )));_cc .SetIfNotNil ("\u0055\u0052\u0049",_fef .URI );
_cc .SetIfNotNil ("\u0049\u0073\u004da\u0070",_fef .IsMap );return _fgb ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _fb .PdfObject ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_fedg *_fb .PdfIndirectObject ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_cgfce *PdfWriter )SetNameDictionary (names _fb .PdfObject )error {if names ==nil {return nil ;};_ef .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_cgfce ._cgegde .Set ("\u004e\u0061\u006de\u0073",names );return _cgfce .addObjects (names );};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _fe .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _fdgg ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _gfdgb (rs ,opts ,true ,_fdgg );
};

// SetAnnotations sets the annotations list.
func (_afaad *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_afaad ._dgcfa =annotations };

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_dgf :=&PdfAppender {_adcb :reader ._ebgad ,Reader :reader ,_gagg :reader ._gfcg ,_bccd :reader ._fbgdb };_ega ,_cdag :=_dgf ._adcb .Seek (0,_fe .SeekEnd );if _cdag !=nil {return nil ,_cdag ;
};_dgf ._ffda =_ega ;if _ ,_cdag =_dgf ._adcb .Seek (0,_fe .SeekStart );_cdag !=nil {return nil ,_cdag ;};_dgf ._efge ,_cdag =NewPdfReader (_dgf ._adcb );if _cdag !=nil {return nil ,_cdag ;};for _ ,_deaae :=range _dgf .Reader .GetObjectNums (){if _dgf ._efab < _deaae {_dgf ._efab =_deaae ;
};};_dgf ._bbga =_dgf ._gagg .GetXrefTable ();_dgf ._aeb =_dgf ._gagg .GetXrefOffset ();_dgf ._bage =append (_dgf ._bage ,_dgf ._efge .PageList ...);_dgf ._fcb =make (map[_fb .PdfObject ]struct{});_dgf ._cacf =make (map[_fb .PdfObject ]int64 );_dgf ._cbd =make (map[_fb .PdfObject ]struct{});
_dgf ._bcc =_dgf ._efge .AcroForm ;_dgf ._gacg =_dgf ._efge .DSS ;return _dgf ,nil ;};func (_baaea *PdfReader )traverseObjectData (_gdgdg _fb .PdfObject )error {return _fb .ResolveReferencesDeep (_gdgdg ,_baaea ._fbgdb );};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_fb .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_fgceg *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _fgceg .Alternate ==nil {if _fgceg .N ==1{_edeg :=NewPdfColorspaceDeviceGray ();return _edeg .ColorFromFloats (vals );}else if _fgceg .N ==3{_dbcc :=NewPdfColorspaceDeviceRGB ();
return _dbcc .ColorFromFloats (vals );}else if _fgceg .N ==4{_edde :=NewPdfColorspaceDeviceCMYK ();return _edde .ColorFromFloats (vals );}else {return nil ,_ged .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _fgceg .Alternate .ColorFromFloats (vals );};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_fb .PdfObjectName ;Colorants _fb .PdfObject ;Process _fb .PdfObject ;MixingHints _fb .PdfObject ;_ecbd *_fb .PdfIndirectObject ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_dgbg *PdfReader )GetTrailer ()(*_fb .PdfObjectDictionary ,error ){_gffag :=_dgbg ._gfcg .GetTrailer ();if _gffag ==nil {return nil ,_ged .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _gffag ,nil ;
};func (_fffa *pdfCIDFontType2 )baseFields ()*fontCommon {return &_fffa .fontCommon };

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_cdccb .Lock ();defer _cdccb .Unlock ();_ebgg =author };

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_abce *_fb .PdfObjectDictionary ;_efgeg *_fb .PdfIndirectObject ;};func (_agbaf *pdfFontSimple )updateStandard14Font (){_fbfd ,_bfdac :=_agbaf .Encoder ().(_ff .SimpleEncoder );
if !_bfdac {_ef .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_agbaf .Encoder (),_agbaf );return ;};
_bfccd :=_fbfd .Charcodes ();_agbaf ._fbacg =make (map[_ff .CharCode ]float64 ,len (_bfccd ));for _ ,_fbec :=range _bfccd {_aggfd ,_ :=_fbfd .CharcodeToRune (_fbec );_feaba ,_ :=_agbaf ._caafde .Read (_aggfd );_agbaf ._fbacg [_fbec ]=_feaba .Wx ;};};

// GetContainingPdfObject implements interface PdfModel.
func (_fbecf *Permissions )GetContainingPdfObject ()_fb .PdfObject {return _fbecf ._gecd };

// SetContext set the sub annotation (context).
func (_cedge *PdfShading )SetContext (ctx PdfModel ){_cedge ._efda =ctx };func (_abgg *PdfAnnotationMarkup )appendToPdfDictionary (_gbb *_fb .PdfObjectDictionary ){_gbb .SetIfNotNil ("\u0054",_abgg .T );if _abgg .Popup !=nil {_gbb .Set ("\u0050\u006f\u0070u\u0070",_abgg .Popup .ToPdfObject ());
};_gbb .SetIfNotNil ("\u0043\u0041",_abgg .CA );_gbb .SetIfNotNil ("\u0052\u0043",_abgg .RC );_gbb .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_abgg .CreationDate );_gbb .SetIfNotNil ("\u0049\u0052\u0054",_abgg .IRT );
_gbb .SetIfNotNil ("\u0053\u0075\u0062\u006a",_abgg .Subj );_gbb .SetIfNotNil ("\u0052\u0054",_abgg .RT );_gbb .SetIfNotNil ("\u0049\u0054",_abgg .IT );_gbb .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_abgg .ExData );};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _fb .PdfObject ;H _fb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_abbb *PdfActionImportData )ToPdfObject ()_fb .PdfObject {_abbb .PdfAction .ToPdfObject ();_cca :=_abbb ._db ;_daf :=_cca .PdfObject .(*_fb .PdfObjectDictionary );_daf .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeImportData )));if _abbb .F !=nil {_daf .Set ("\u0046",_abbb .F .ToPdfObject ());
};return _cca ;};

// B returns the value of the B component of the color.
func (_cfcb *PdfColorLab )B ()float64 {return _cfcb [2]};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_caeff *PdfPageResources )HasXObjectByName (keyName _fb .PdfObjectName )bool {_ddfcf ,_ :=_caeff .GetXObjectByName (keyName );return _ddfcf !=nil ;};

// A returns the value of the A component of the color.
func (_abac *PdfColorLab )A ()float64 {return _abac [1]};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_dgcfd *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _dgcfd .baseFields ()._gcge !=nil {return _dgcfd .baseFields ()._gcge ;};if _ebcf :=_dgcfd ._gccg .getFontDescriptor ();_ebcf !=nil {return _ebcf ;};_ef .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_dgcfd );
return nil ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _fb .PdfObject ;Name _fb .PdfObject ;State _fb .PdfObject ;StateModel _fb .PdfObject ;};func (_gbff *PdfReader )newPdfAnnotationRedactFromDict (_aaf *_fb .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_fbef :=PdfAnnotationRedact {};
_baea ,_defc :=_gbff .newPdfAnnotationMarkupFromDict (_aaf );if _defc !=nil {return nil ,_defc ;};_fbef .PdfAnnotationMarkup =_baea ;_fbef .QuadPoints =_aaf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_fbef .IC =_aaf .Get ("\u0049\u0043");
_fbef .RO =_aaf .Get ("\u0052\u004f");_fbef .OverlayText =_aaf .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_fbef .Repeat =_aaf .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_fbef .DA =_aaf .Get ("\u0044\u0041");_fbef .Q =_aaf .Get ("\u0051");
return &_fbef ,nil ;};

// GetXObjectByName gets XObject by name.
func (_fefa *PdfPage )GetXObjectByName (name _fb .PdfObjectName )(_fb .PdfObject ,bool ){_faeed ,_bcebfb :=_fefa .Resources .XObject .(*_fb .PdfObjectDictionary );if !_bcebfb {return nil ,false ;};if _afcff :=_faeed .Get (name );_afcff !=nil {return _afcff ,true ;
};return nil ,false ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_faega *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _faega ._cbedge !=nil {return _faega ._cbedge ,nil ;};if _faega .ColorSpace ==nil {return nil ,nil ;};_cfdcf ,_cefdd :=_egbf (_faega .ColorSpace );if _cefdd !=nil {return nil ,_cefdd ;
};_faega ._cbedge =_cfdcf ;return _faega ._cbedge ,nil ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_afcad :=PdfWriter {};_afcad ._cggbd =map[_fb .PdfObject ]struct{}{};_afcad ._dbdgd =[]_fb .PdfObject {};_afcad ._cbbdb =map[_fb .PdfObject ][]*_fb .PdfObjectDictionary {};_afcad ._gfcgc =map[_fb .PdfObject ]struct{}{};_afcad ._befbee .Major =1;
_afcad ._befbee .Minor =3;_bbef :=_fb .MakeDict ();_gegec :=[]struct{_geddd _fb .PdfObjectName ;_bceaca string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_eefga ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_gdeffd ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_cadfb ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_beeea ()},{"\u0054\u0069\u0074l\u0065",_gdaba ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_eecb ()}};
for _ ,_beag :=range _gegec {if _beag ._bceaca !=""{_bbef .Set (_beag ._geddd ,_fb .MakeString (_beag ._bceaca ));};};if _dgbfaa :=_begecf ();!_dgbfaa .IsZero (){if _dggfg ,_edgf :=NewPdfDateFromTime (_dgbfaa );_edgf ==nil {_bbef .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_dggfg .ToPdfObject ());
};};if _cgfcfa :=_feefa ();!_cgfcfa .IsZero (){if _fecae ,_eacbfb :=NewPdfDateFromTime (_cgfcfa );_eacbfb ==nil {_bbef .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_fecae .ToPdfObject ());};};_dgfbb :=_fb .PdfIndirectObject {};_dgfbb .PdfObject =_bbef ;
_afcad ._acfd =&_dgfbb ;_afcad .addObject (&_dgfbb );_cgadc :=_fb .PdfIndirectObject {};_dcddc :=_fb .MakeDict ();_dcddc .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_cgadc .PdfObject =_dcddc ;_afcad ._dfcc =&_cgadc ;
_afcad .addObject (_afcad ._dfcc );_abbbf ,_ggcgf :=_abece ("\u0077");if _ggcgf !=nil {_ef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ggcgf );};_afcad ._ceacdg =_abbbf ;_feeff :=_fb .PdfIndirectObject {};_fbgfc :=_fb .MakeDict ();_fbgfc .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0050\u0061\u0067e\u0073"));
_befbd :=_fb .PdfObjectArray {};_fbgfc .Set ("\u004b\u0069\u0064\u0073",&_befbd );_fbgfc .Set ("\u0043\u006f\u0075n\u0074",_fb .MakeInteger (0));_feeff .PdfObject =_fbgfc ;_afcad ._ebfee =&_feeff ;_afcad ._gabbc =map[_fb .PdfObject ]struct{}{};_afcad .addObject (_afcad ._ebfee );
_dcddc .Set ("\u0050\u0061\u0067e\u0073",&_feeff );_afcad ._cgegde =_dcddc ;_ef .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_cgadc );return _afcad ;};

// SetContext sets the sub annotation (context).
func (_babe *PdfAnnotation )SetContext (ctx PdfModel ){_babe ._dfdg =ctx };

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_adfaa *PdfRectangle )Normalize (){if _adfaa .Llx > _adfaa .Urx {_adfaa .Llx ,_adfaa .Urx =_adfaa .Urx ,_adfaa .Llx ;};if _adfaa .Lly > _adfaa .Ury {_adfaa .Lly ,_adfaa .Ury =_adfaa .Ury ,_adfaa .Lly ;};};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_egdbdc *VRI )ToPdfObject ()*_fb .PdfObjectDictionary {_bgcc :=_fb .MakeDict ();_bgcc .SetIfNotNil (_fb .PdfObjectName ("\u0043\u0065\u0072\u0074"),_gdbee (_egdbdc .Cert ));_bgcc .SetIfNotNil (_fb .PdfObjectName ("\u004f\u0043\u0053\u0050"),_gdbee (_egdbdc .OCSP ));
_bgcc .SetIfNotNil (_fb .PdfObjectName ("\u0043\u0052\u004c"),_gdbee (_egdbdc .CRL ));_bgcc .SetIfNotNil ("\u0054\u0055",_egdbdc .TU );_bgcc .SetIfNotNil ("\u0054\u0053",_egdbdc .TS );return _bgcc ;};

// HasXObjectByName checks if has XObject resource by name.
func (_fcee *PdfPage )HasXObjectByName (name _fb .PdfObjectName )bool {_dffaa ,_faafa :=_fcee .Resources .XObject .(*_fb .PdfObjectDictionary );if !_faafa {return false ;};if _ebed :=_dffaa .Get (name );_ebed !=nil {return true ;};return false ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_gcada :_fb .MakeIndirectObject (_fb .MakeDict ())};};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_gabef *LTV )Enable (sig *PdfSignature ,extraCerts []*_c .Certificate )error {if _dfcag :=_gabef .validateSig (sig );_dfcag !=nil {return _dfcag ;};_dcbgb ,_ecfaa :=_gabef .generateVRIKey (sig );if _ecfaa !=nil {return _ecfaa ;};if _ ,_ccfg :=_gabef ._bdgd .VRI [_dcbgb ];
_ccfg &&_gabef .SkipExisting {return nil ;};_ggfbe ,_ecfaa :=sig .GetCerts ();if _ecfaa !=nil {return _ecfaa ;};return _gabef .enable (_ggfbe ,extraCerts ,_dcbgb );};func _eaebbg (_cbfe StdFontName )(pdfFontSimple ,error ){_gbdg ,_bbcfc :=_bb .NewStdFontByName (_cbfe );
if !_bbcfc {return pdfFontSimple {},ErrFontNotSupported ;};_fgeaa :=_ffefb (_gbdg );return _fgeaa ,nil ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_fb .PdfObjectStream )(*XObjectImage ,error ){_ebfdg :=&XObjectImage {};_ebfdg ._dfdfb =stream ;_becbc :=*(stream .PdfObjectDictionary );_bgedd ,_ffbga :=_fb .NewEncoderFromStream (stream );if _ffbga !=nil {return nil ,_ffbga ;
};_ebfdg .Filter =_bgedd ;if _gcfdc :=_fb .TraceToDirectObject (_becbc .Get ("\u0057\u0069\u0064t\u0068"));_gcfdc !=nil {_bbedbc ,_dgbaa :=_gcfdc .(*_fb .PdfObjectInteger );if !_dgbaa {return nil ,_ged .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_dbfgf :=int64 (*_bbedbc );_ebfdg .Width =&_dbfgf ;}else {return nil ,_ged .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _degcac :=_fb .TraceToDirectObject (_becbc .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_degcac !=nil {_ebaga ,_aedae :=_degcac .(*_fb .PdfObjectInteger );if !_aedae {return nil ,_ged .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_aecfa :=int64 (*_ebaga );
_ebfdg .Height =&_aecfa ;}else {return nil ,_ged .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _bcfbg :=_fb .TraceToDirectObject (_becbc .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_bcfbg !=nil {_cafeb ,_faaea :=NewPdfColorspaceFromPdfObject (_bcfbg );if _faaea !=nil {return nil ,_faaea ;};_ebfdg .ColorSpace =_cafeb ;}else {_ef .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_ebfdg .ColorSpace =NewPdfColorspaceDeviceGray ();};if _efcge :=_fb .TraceToDirectObject (_becbc .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_efcge !=nil {_gcbad ,_agcdbe :=_efcge .(*_fb .PdfObjectInteger );
if !_agcdbe {return nil ,_ged .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_aecdb :=int64 (*_gcbad );_ebfdg .BitsPerComponent =&_aecdb ;};_ebfdg .Intent =_becbc .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_ebfdg .ImageMask =_becbc .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_ebfdg .Mask =_becbc .Get ("\u004d\u0061\u0073\u006b");_ebfdg .Decode =_becbc .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_ebfdg .Interpolate =_becbc .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_ebfdg .Alternatives =_becbc .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_ebfdg .SMask =_becbc .Get ("\u0053\u004d\u0061s\u006b");_ebfdg .SMaskInData =_becbc .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_ebfdg .Matte =_becbc .Get ("\u004d\u0061\u0074t\u0065");_ebfdg .Name =_becbc .Get ("\u004e\u0061\u006d\u0065");_ebfdg .StructParent =_becbc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_ebfdg .ID =_becbc .Get ("\u0049\u0044");
_ebfdg .OPI =_becbc .Get ("\u004f\u0050\u0049");_ebfdg .Metadata =_becbc .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_ebfdg .OC =_becbc .Get ("\u004f\u0043");_ebfdg .Stream =stream .Stream ;return _ebfdg ,nil ;};

// SetContentStream sets the pattern cell's content stream.
func (_cccfd *PdfTilingPattern )SetContentStream (content []byte ,encoder _fb .StreamEncoder )error {_cbaff ,_abgad :=_cccfd ._bfgge .(*_fb .PdfObjectStream );if !_abgad {_ef .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cccfd ._bfgge );
return _fb .ErrTypeError ;};if encoder ==nil {encoder =_fb .NewRawEncoder ();};_feebg :=_cbaff .PdfObjectDictionary ;_geag :=encoder .MakeStreamDict ();_feebg .Merge (_geag );_bffgf ,_ceggb :=encoder .EncodeBytes (content );if _ceggb !=nil {return _ceggb ;
};_feebg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fb .MakeInteger (int64 (len (_bffgf ))));_cbaff .Stream =_bffgf ;return nil ;};func (_gde *PdfReader )newPdfAnnotationSquareFromDict (_begc *_fb .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_gddd :=PdfAnnotationSquare {};
_acg ,_cdg :=_gde .newPdfAnnotationMarkupFromDict (_begc );if _cdg !=nil {return nil ,_cdg ;};_gddd .PdfAnnotationMarkup =_acg ;_gddd .BS =_begc .Get ("\u0042\u0053");_gddd .IC =_begc .Get ("\u0049\u0043");_gddd .BE =_begc .Get ("\u0042\u0045");_gddd .RD =_begc .Get ("\u0052\u0044");
return &_gddd ,nil ;};var _ pdfFont =(*pdfFontType3 )(nil );

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_fb .PdfObject ;GetContainingPdfObject ()_fb .PdfObject ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_cefa DefaultImageHandler )NewGrayImageFromGoImage (goimg _gb .Image )(*Image ,error ){_agfgf :=goimg .Bounds ();_dgagg :=&Image {Width :int64 (_agfgf .Dx ()),Height :int64 (_agfgf .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _fbefb :=goimg .(type ){case *_gb .Gray :if len (_fbefb .Pix )!=_agfgf .Dx ()*_agfgf .Dy (){_ccacg ,_beaa :=_cg .GrayConverter .Convert (goimg );
if _beaa !=nil {return nil ,_beaa ;};_dgagg .Data =_ccacg .Pix ();}else {_dgagg .Data =_fbefb .Pix ;};case *_gb .Gray16 :_dgagg .BitsPerComponent =16;if len (_fbefb .Pix )!=_agfgf .Dx ()*_agfgf .Dy ()*2{_bccfd ,_eggf :=_cg .Gray16Converter .Convert (goimg );
if _eggf !=nil {return nil ,_eggf ;};_dgagg .Data =_bccfd .Pix ();}else {_dgagg .Data =_fbefb .Pix ;};case _cg .Image :_bcac :=_fbefb .Base ();if _bcac .ColorComponents ==1{_dgagg .BitsPerComponent =int64 (_bcac .BitsPerComponent );_dgagg .Data =_bcac .Data ;
return _dgagg ,nil ;};_ebbbf ,_fffag :=_cg .GrayConverter .Convert (goimg );if _fffag !=nil {return nil ,_fffag ;};_dgagg .Data =_ebbbf .Pix ();default:_gbdgg ,_fcda :=_cg .GrayConverter .Convert (goimg );if _fcda !=nil {return nil ,_fcda ;};_dgagg .Data =_gbdgg .Pix ();
};return _dgagg ,nil ;};

// ToInteger convert to an integer format.
func (_gfdgd *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_agdbd :=_cb .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_agdbd *_gfdgd .C ()),uint32 (_agdbd *_gfdgd .M ()),uint32 (_agdbd *_gfdgd .Y ()),uint32 (_agdbd *_gfdgd .K ())};};

// HasFontByName checks if has font resource by name.
func (_dcbb *PdfPage )HasFontByName (name _fb .PdfObjectName )bool {_eead ,_gaccg :=_dcbb .Resources .Font .(*_fb .PdfObjectDictionary );if !_gaccg {return false ;};if _cbda :=_eead .Get (name );_cbda !=nil {return true ;};return false ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _fb .PdfObject ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_ecb :=NewPdfAction ();_baf :=&PdfActionSubmitForm {};_baf .PdfAction =_ecb ;_ecb .SetContext (_baf );return _baf ;};func _beeea ()string {_cdccb .Lock ();defer _cdccb .Unlock ();return _afdge };const (ButtonTypeCheckbox ButtonType =iota ;
ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);func _egdbd (_abfg _fb .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_fbab :=NewPdfColorspaceSpecialSeparation ();if _bbca ,_abbc :=_abfg .(*_fb .PdfIndirectObject );_abbc {_fbab ._gfce =_bbca ;
};_abfg =_fb .TraceToDirectObject (_abfg );_cfadc ,_cbca :=_abfg .(*_fb .PdfObjectArray );if !_cbca {return nil ,_d .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _cfadc .Len ()!=4{return nil ,_d .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_abfg =_cfadc .Get (0);
_ggde ,_cbca :=_abfg .(*_fb .PdfObjectName );if !_cbca {return nil ,_d .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_ggde !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_d .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_abfg =_cfadc .Get (1);_ggde ,_cbca =_abfg .(*_fb .PdfObjectName );if !_cbca {return nil ,_d .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_fbab .ColorantName =_ggde ;_abfg =_cfadc .Get (2);_daccg ,_bcgg :=NewPdfColorspaceFromPdfObject (_abfg );if _bcgg !=nil {return nil ,_bcgg ;};_fbab .AlternateSpace =_daccg ;_adab ,_bcgg :=_ecae (_cfadc .Get (3));if _bcgg !=nil {return nil ,_bcgg ;};
_fbab .TintTransform =_adab ;return _fbab ,nil ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_cagc :=&PdfOutline {_defdb :_fb .MakeIndirectObject (_fb .MakeDict ())};_cagc ._acgg =_cagc ;return _cagc ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_afdbd :=&PdfSignature {Type :_fb .MakeName ("\u0053\u0069\u0067"),Handler :handler };_acefd :=&pdfSignDictionary {PdfObjectDictionary :_fb .MakeDict (),_eegeeg :&handler ,_bbcec :_afdbd };
_afdbd ._bdccg =_fb .MakeIndirectObject (_acefd );return _afdbd ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_gbbab *PdfReader )CheckAccessRights (password []byte )(bool ,_ag .Permissions ,error ){return _gbbab ._gfcg .CheckAccessRights (password );};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_adfcb *PdfAcroForm )GetContainingPdfObject ()_fb .PdfObject {return _adfcb ._gcada };

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _fb .PdfObject ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_efaf *PdfPattern )GetContainingPdfObject ()_fb .PdfObject {return _efaf ._bfgge };

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_bb .CharMetrics ;

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_agde pdfFontSimple )GetRuneMetrics (r rune )(_bb .CharMetrics ,bool ){if _agde ._caafde !=nil {_fbeb ,_gbdec :=_agde ._caafde .Read (r );if _gbdec {return _fbeb ,true ;};};_egfb :=_agde .Encoder ();if _egfb ==nil {_ef .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_agde );
return _bb .CharMetrics {},false ;};_fada ,_gggd :=_egfb .RuneToCharcode (r );if !_gggd {if r !=' '{_ef .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_agde );
};return _bb .CharMetrics {},false ;};_fdbdc ,_cegb :=_agde .GetCharMetrics (_fada );return _fdbdc ,_cegb ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_edaeb ,_dfca :=_bab .Open (filePath );if _dfca !=nil {_ef .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_dfca );
return nil ,_dfca ;};defer _edaeb .Close ();return NewCompositePdfFontFromTTF (_edaeb );};

// ToPdfObject implements interface PdfModel.
func (_ebac *PdfAnnotationRedact )ToPdfObject ()_fb .PdfObject {_ebac .PdfAnnotation .ToPdfObject ();_degf :=_ebac ._fcf ;_fgdg :=_degf .PdfObject .(*_fb .PdfObjectDictionary );_ebac .PdfAnnotationMarkup .appendToPdfDictionary (_fgdg );_fgdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_fgdg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_ebac .QuadPoints );_fgdg .SetIfNotNil ("\u0049\u0043",_ebac .IC );_fgdg .SetIfNotNil ("\u0052\u004f",_ebac .RO );_fgdg .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_ebac .OverlayText );
_fgdg .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_ebac .Repeat );_fgdg .SetIfNotNil ("\u0044\u0041",_ebac .DA );_fgdg .SetIfNotNil ("\u0051",_ebac .Q );return _degf ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_ddfcd :=PdfColorDeviceRGB {r ,g ,b };return &_ddfcd ;};

// Write writes out the PDF.
func (_egcd *PdfWriter )Write (writer _fe .Writer )error {_ef .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_bbfac :=_egcd .checkLicense ();if _bbfac !=nil {return _bbfac ;};if _bbfac =_egcd .writeOutlines ();_bbfac !=nil {return _bbfac ;};if _bbfac =_egcd .writeAcroFormFields ();
_bbfac !=nil {return _bbfac ;};_egcd .checkPendingObjects ();if _bbfac =_egcd .writeOutputIntents ();_bbfac !=nil {return _bbfac ;};_egcd .setCatalogVersion ();_egcd .copyObjects ();if _bbfac =_egcd .optimize ();_bbfac !=nil {return _bbfac ;};if _bbfac =_egcd .optimizeDocument ();
_bbfac !=nil {return _bbfac ;};var _fgbaf _a .Hash ;if _egcd ._bbdgb {_fgbaf =_bd .New ();writer =_fe .MultiWriter (_fgbaf ,writer );};_egcd .setWriter (writer );_dffebb :=_egcd .checkCrossReferenceStream ();_gafgg ,_dffebb :=_egcd .mapObjectStreams (_dffebb );
_egcd .adjustXRefAffectedVersion (_dffebb );_egcd .writeDocumentVersion ();_egcd .updateObjectNumbers ();_egcd .writeObjects ();if _bbfac =_egcd .writeObjectsInStreams (_gafgg );_bbfac !=nil {return _bbfac ;};_gfgag :=_egcd ._cbeba ;var _beddgc int ;for _cfcbd :=range _egcd ._agcfd {if _cfcbd > _beddgc {_beddgc =_cfcbd ;
};};if _egcd ._bbdgb {if _bbfac =_egcd .setHashIDs (_fgbaf );_bbfac !=nil {return _bbfac ;};};if _dffebb {if _bbfac =_egcd .writeXRefStreams (_beddgc ,_gfgag );_bbfac !=nil {return _bbfac ;};}else {_egcd .writeTrailer (_beddgc );};_egcd .makeOffSetReference (_gfgag );
if _bbfac =_egcd .flushWriter ();_bbfac !=nil {return _bbfac ;};return nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_aegee *PdfShadingType7 )ToPdfObject ()_fb .PdfObject {_aegee .PdfShading .ToPdfObject ();_cadcg ,_cabcg :=_aegee .getShadingDict ();if _cabcg !=nil {_ef .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _aegee .BitsPerCoordinate !=nil {_cadcg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_aegee .BitsPerCoordinate );};if _aegee .BitsPerComponent !=nil {_cadcg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aegee .BitsPerComponent );
};if _aegee .BitsPerFlag !=nil {_cadcg .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_aegee .BitsPerFlag );};if _aegee .Decode !=nil {_cadcg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_aegee .Decode );};if _aegee .Function !=nil {if len (_aegee .Function )==1{_cadcg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aegee .Function [0].ToPdfObject ());
}else {_dbgag :=_fb .MakeArray ();for _ ,_baeba :=range _aegee .Function {_dbgag .Append (_baeba .ToPdfObject ());};_cadcg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dbgag );};};return _aegee ._fcfag ;};

// CustomKeys returns all custom info keys as list.
func (_baccf *PdfInfo )CustomKeys ()[]string {if _baccf ._fgfad ==nil {return nil ;};_bagbd :=make ([]string ,len (_baccf ._fgfad .Keys ()));for _ ,_fccaf :=range _baccf ._fgfad .Keys (){_bagbd =append (_bagbd ,_fccaf .String ());};return _bagbd ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_fdffd *PdfFieldButton )SetType (btype ButtonType ){_aaed :=uint32 (0);if _fdffd .Ff !=nil {_aaed =uint32 (*_fdffd .Ff );};switch btype {case ButtonTypePush :_aaed |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_aaed |=FieldFlagRadio .Mask ();
};_fdffd .Ff =_fb .MakeInteger (int64 (_aaed ));};

// ToPdfObject returns the PDF representation of the page resources.
func (_agfb *PdfPageResources )ToPdfObject ()_fb .PdfObject {_afae :=_agfb ._cdgfd ;_afae .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_agfb .ExtGState );if _agfb ._cbedge !=nil {_agfb .ColorSpace =_agfb ._cbedge .ToPdfObject ();};_afae .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_agfb .ColorSpace );
_afae .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_agfb .Pattern );_afae .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_agfb .Shading );_afae .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_agfb .XObject );_afae .SetIfNotNil ("\u0046\u006f\u006e\u0074",_agfb .Font );
_afae .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_agfb .ProcSet );_afae .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_agfb .Properties );return _afae ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_abec FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_abec .Mask ()|fl .Mask ())};

// HasExtGState checks if ExtGState name is available.
func (_cfdac *PdfPage )HasExtGState (name _fb .PdfObjectName )bool {if _cfdac .Resources ==nil {return false ;};if _cfdac .Resources .ExtGState ==nil {return false ;};_gafge ,_fgadf :=_fb .TraceToDirectObject (_cfdac .Resources .ExtGState ).(*_fb .PdfObjectDictionary );
if !_fgadf {_ef .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_fb .TraceToDirectObject (_cfdac .Resources .ExtGState ));
return false ;};_eddcd :=_gafge .Get (name );_fagcf :=_eddcd !=nil ;return _fagcf ;};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_dfgge *PdfWriter )ApplyStandard (optimizer StandardApplier ){_dfgge ._gfgc =optimizer };func (_egdeg *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// DecodeArray returns the component range values for the Separation colorspace.
func (_ffdcc *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_feafd *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_feafd .HiVal )};};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _fb .PdfObject ;FS _fb .PdfObject ;F _fb .PdfObject ;UF _fb .PdfObject ;DOS _fb .PdfObject ;Mac _fb .PdfObject ;Unix _fb .PdfObject ;ID _fb .PdfObject ;V _fb .PdfObject ;EF _fb .PdfObject ;RF _fb .PdfObject ;Desc _fb .PdfObject ;
CI _fb .PdfObject ;_caee _fb .PdfObject ;};func _dedad (_eaacf *_fb .PdfObjectDictionary )(*PdfShadingType4 ,error ){_gggbb :=PdfShadingType4 {};_edeaa :=_eaacf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _edeaa ==nil {_ef .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_aabe ,_afcb :=_edeaa .(*_fb .PdfObjectInteger );if !_afcb {_ef .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_edeaa );
return nil ,_fb .ErrTypeError ;};_gggbb .BitsPerCoordinate =_aabe ;_edeaa =_eaacf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _edeaa ==nil {_ef .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_aabe ,_afcb =_edeaa .(*_fb .PdfObjectInteger );if !_afcb {_ef .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_edeaa );
return nil ,_fb .ErrTypeError ;};_gggbb .BitsPerComponent =_aabe ;_edeaa =_eaacf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _edeaa ==nil {_ef .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_aabe ,_afcb =_edeaa .(*_fb .PdfObjectInteger );if !_afcb {_ef .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_edeaa );
return nil ,_fb .ErrTypeError ;};_gggbb .BitsPerComponent =_aabe ;_edeaa =_eaacf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _edeaa ==nil {_ef .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gbac ,_afcb :=_edeaa .(*_fb .PdfObjectArray );if !_afcb {_ef .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_edeaa );
return nil ,_fb .ErrTypeError ;};_gggbb .Decode =_gbac ;_edeaa =_eaacf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _edeaa ==nil {_ef .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gggbb .Function =[]PdfFunction {};if _gbceg ,_bacfb :=_edeaa .(*_fb .PdfObjectArray );_bacfb {for _ ,_ddecf :=range _gbceg .Elements (){_bdafa ,_bbfb :=_ecae (_ddecf );if _bbfb !=nil {_ef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bbfb );
return nil ,_bbfb ;};_gggbb .Function =append (_gggbb .Function ,_bdafa );};}else {_gbdcf ,_afgeg :=_ecae (_edeaa );if _afgeg !=nil {_ef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_afgeg );
return nil ,_afgeg ;};_gggbb .Function =append (_gggbb .Function ,_gbdcf );};return &_gggbb ,nil ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_bgeae *PdfPage )Duplicate ()*PdfPage {_aeda :=*_bgeae ;_aeda ._ggafg =_fb .MakeDict ();_aeda ._bgbgb =_fb .MakeIndirectObject (_aeda ._ggafg );return &_aeda ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_gfcg *_fb .PdfParser ;_ebbcd _fb .PdfObject ;_ebgba *_fb .PdfIndirectObject ;_gbcfc *_fb .PdfObjectDictionary ;_gcbf []*_fb .PdfIndirectObject ;PageList []*PdfPage ;_cfcfe int ;_babag *_fb .PdfObjectDictionary ;_acbd *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_fgaa *Permissions ;_gcga map[*PdfReader ]*PdfReader ;_aeabd []*PdfReader ;_bcbaa *modelManager ;_abae bool ;_fbgdb map[_fb .PdfObject ]struct{};_ebgad _fe .ReadSeeker ;_bdgec string ;_babdgf bool ;_egcfc *ReaderOpts ;
_dccae bool ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_ebebg *PdfWriter )SetOptimizer (optimizer Optimizer ){_ebebg ._bfcfb =optimizer };

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_gdg :=&PdfAppender {_adcb :reader ._ebgad ,Reader :reader ,_gagg :reader ._gfcg ,_bccd :reader ._fbgdb };_cdea ,_edee :=_gdg ._adcb .Seek (0,_fe .SeekEnd );
if _edee !=nil {return nil ,_edee ;};_gdg ._ffda =_cdea ;if _ ,_edee =_gdg ._adcb .Seek (0,_fe .SeekStart );_edee !=nil {return nil ,_edee ;};_gdg ._efge ,_edee =NewPdfReaderWithOpts (_gdg ._adcb ,opts );if _edee !=nil {return nil ,_edee ;};for _ ,_ggc :=range _gdg .Reader .GetObjectNums (){if _gdg ._efab < _ggc {_gdg ._efab =_ggc ;
};};_gdg ._bbga =_gdg ._gagg .GetXrefTable ();_gdg ._aeb =_gdg ._gagg .GetXrefOffset ();_gdg ._bage =append (_gdg ._bage ,_gdg ._efge .PageList ...);_gdg ._fcb =make (map[_fb .PdfObject ]struct{});_gdg ._cacf =make (map[_fb .PdfObject ]int64 );_gdg ._cbd =make (map[_fb .PdfObject ]struct{});
_gdg ._bcc =_gdg ._efge .AcroForm ;_gdg ._gacg =_gdg ._efge .DSS ;if opts !=nil {_gdg ._cab =opts .Password ;};if encryptOptions !=nil {_gdg ._dcac =encryptOptions ;};return _gdg ,nil ;};

// SetDecode sets the decode image float slice.
func (_cdga *Image )SetDecode (decode []float64 ){_cdga ._fcgee =decode };

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _fb .StreamEncoder ;Intent _fb .PdfObject ;ImageMask _fb .PdfObject ;Mask _fb .PdfObject ;Matte _fb .PdfObject ;Decode _fb .PdfObject ;Interpolate _fb .PdfObject ;Alternatives _fb .PdfObject ;
SMask _fb .PdfObject ;SMaskInData _fb .PdfObject ;Name _fb .PdfObject ;StructParent _fb .PdfObject ;ID _fb .PdfObject ;OPI _fb .PdfObject ;Metadata _fb .PdfObject ;OC _fb .PdfObject ;Stream []byte ;_dfdfb *_fb .PdfObjectStream ;};func _agecd (_gefegg *_fb .PdfObjectDictionary )(*PdfShadingType7 ,error ){_bbce :=PdfShadingType7 {};
_aegeg :=_gefegg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _aegeg ==nil {_ef .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_debcb ,_bafae :=_aegeg .(*_fb .PdfObjectInteger );if !_bafae {_ef .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aegeg );
return nil ,_fb .ErrTypeError ;};_bbce .BitsPerCoordinate =_debcb ;_aegeg =_gefegg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _aegeg ==nil {_ef .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_debcb ,_bafae =_aegeg .(*_fb .PdfObjectInteger );if !_bafae {_ef .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_aegeg );
return nil ,_fb .ErrTypeError ;};_bbce .BitsPerComponent =_debcb ;_aegeg =_gefegg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _aegeg ==nil {_ef .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_debcb ,_bafae =_aegeg .(*_fb .PdfObjectInteger );if !_bafae {_ef .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aegeg );
return nil ,_fb .ErrTypeError ;};_bbce .BitsPerComponent =_debcb ;_aegeg =_gefegg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _aegeg ==nil {_ef .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gfef ,_bafae :=_aegeg .(*_fb .PdfObjectArray );if !_bafae {_ef .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aegeg );
return nil ,_fb .ErrTypeError ;};_bbce .Decode =_gfef ;if _dbdc :=_gefegg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_dbdc !=nil {_bbce .Function =[]PdfFunction {};if _ggfbg ,_agfc :=_dbdc .(*_fb .PdfObjectArray );_agfc {for _ ,_bdddd :=range _ggfbg .Elements (){_edbagf ,_aeege :=_ecae (_bdddd );
if _aeege !=nil {_ef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aeege );return nil ,_aeege ;};_bbce .Function =append (_bbce .Function ,_edbagf );
};}else {_gacdf ,_efadc :=_ecae (_dbdc );if _efadc !=nil {_ef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_efadc );return nil ,_efadc ;
};_bbce .Function =append (_bbce .Function ,_gacdf );};};return &_bbce ,nil ;};func _ffefg (_fdfb _fb .PdfObject )(*PdfColorspaceDeviceN ,error ){_acba :=NewPdfColorspaceDeviceN ();if _fcdea ,_cdbac :=_fdfb .(*_fb .PdfIndirectObject );_cdbac {_acba ._egefd =_fcdea ;
};_fdfb =_fb .TraceToDirectObject (_fdfb );_bbcfgc ,_bcad :=_fdfb .(*_fb .PdfObjectArray );if !_bcad {return nil ,_d .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _bbcfgc .Len ()!=4&&_bbcfgc .Len ()!=5{return nil ,_d .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_fdfb =_bbcfgc .Get (0);
_gba ,_bcad :=_fdfb .(*_fb .PdfObjectName );if !_bcad {return nil ,_d .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_gba !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_d .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_fdfb =_bbcfgc .Get (1);
_fdfb =_fb .TraceToDirectObject (_fdfb );_febg ,_bcad :=_fdfb .(*_fb .PdfObjectArray );if !_bcad {return nil ,_d .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_acba .ColorantNames =_febg ;_fdfb =_bbcfgc .Get (2);_fcce ,_gbcd :=NewPdfColorspaceFromPdfObject (_fdfb );if _gbcd !=nil {return nil ,_gbcd ;};_acba .AlternateSpace =_fcce ;_bafaf ,_gbcd :=_ecae (_bbcfgc .Get (3));if _gbcd !=nil {return nil ,_gbcd ;
};_acba .TintTransform =_bafaf ;if _bbcfgc .Len ()==5{_ddfe ,_bfcc :=_cdae (_bbcfgc .Get (4));if _bfcc !=nil {return nil ,_bfcc ;};_acba .Attributes =_ddfe ;};return _acba ,nil ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_fb .PdfObjectInteger ;BitsPerComponent *_fb .PdfObjectInteger ;BitsPerFlag *_fb .PdfObjectInteger ;Decode *_fb .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_egdd *PdfColorspaceCalGray )ToPdfObject ()_fb .PdfObject {_eaag :=&_fb .PdfObjectArray {};_eaag .Append (_fb .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_cffag :=_fb .MakeDict ();if _egdd .WhitePoint !=nil {_cffag .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fb .MakeArray (_fb .MakeFloat (_egdd .WhitePoint [0]),_fb .MakeFloat (_egdd .WhitePoint [1]),_fb .MakeFloat (_egdd .WhitePoint [2])));
}else {_ef .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _egdd .BlackPoint !=nil {_cffag .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_fb .MakeArray (_fb .MakeFloat (_egdd .BlackPoint [0]),_fb .MakeFloat (_egdd .BlackPoint [1]),_fb .MakeFloat (_egdd .BlackPoint [2])));
};_cffag .Set ("\u0047\u0061\u006dm\u0061",_fb .MakeFloat (_egdd .Gamma ));_eaag .Append (_cffag );if _egdd ._ggbf !=nil {_egdd ._ggbf .PdfObject =_eaag ;return _egdd ._ggbf ;};return _eaag ;};func (_gge *PdfReader )newPdfAnnotationPrinterMarkFromDict (_beb *_fb .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_eggee :=PdfAnnotationPrinterMark {};
_eggee .MN =_beb .Get ("\u004d\u004e");return &_eggee ,nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_bfedb *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _bfedb .MediaBox !=nil {return _bfedb .MediaBox ,nil ;};_edgab :=_bfedb .Parent ;for _edgab !=nil {_ggaa ,_ffebbg :=_fb .GetDict (_edgab );if !_ffebbg {return nil ,_ged .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _ebbgf :=_ggaa .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_ebbgf !=nil {_dfdef ,_cddf :=_fb .GetArray (_ebbgf );if !_cddf {return nil ,_ged .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_dgdde ,_dfgee :=NewPdfRectangle (*_dfdef );if _dfgee !=nil {return nil ,_dfgee ;};return _dgdde ,nil ;};_edgab =_ggaa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_ged .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};type pdfFont interface{_bb .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_fb .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// ToPdfObject implements interface PdfModel.
func (_beeb *PdfAnnotationSquare )ToPdfObject ()_fb .PdfObject {_beeb .PdfAnnotation .ToPdfObject ();_bba :=_beeb ._fcf ;_gbdcb :=_bba .PdfObject .(*_fb .PdfObjectDictionary );if _beeb .PdfAnnotationMarkup !=nil {_beeb .PdfAnnotationMarkup .appendToPdfDictionary (_gbdcb );
};_gbdcb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_gbdcb .SetIfNotNil ("\u0042\u0053",_beeb .BS );_gbdcb .SetIfNotNil ("\u0049\u0043",_beeb .IC );_gbdcb .SetIfNotNil ("\u0042\u0045",_beeb .BE );
_gbdcb .SetIfNotNil ("\u0052\u0044",_beeb .RD );return _bba ;};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_ggdbg *pdfFontSimple )SetEncoder (encoder _ff .TextEncoder ){_ggdbg ._fgfg =encoder };

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_fag :=&PdfAnnotation {};_fag ._fcf =_fb .MakeIndirectObject (_fb .MakeDict ());return _fag ;};

// GetContainingPdfObject implements interface PdfModel.
func (_aeacc *PdfSignature )GetContainingPdfObject ()_fb .PdfObject {return _aeacc ._bdccg };

// B returns the value of the blue component of the color.
func (_fcfb *PdfColorDeviceRGB )B ()float64 {return _fcfb [2]};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_bfafe *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_fegd *PdfAppender )UpdateObject (obj _fb .PdfObject ){_fegd .replaceObject (obj ,obj );if _ ,_fbcc :=_fegd ._fcb [obj ];!_fbcc {_fegd ._cfad =append (_fegd ._cfad ,obj );_fegd ._fcb [obj ]=struct{}{};};};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_ebdfb *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _ebdfb ._cabgd .(*PdfShadingPattern );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_bgaa *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_fb .PdfObject )(PdfColor ,error ){if _bgaa .Alternate ==nil {if _bgaa .N ==1{_gcaa :=NewPdfColorspaceDeviceGray ();return _gcaa .ColorFromPdfObjects (objects );}else if _bgaa .N ==3{_bcbe :=NewPdfColorspaceDeviceRGB ();
return _bcbe .ColorFromPdfObjects (objects );}else if _bgaa .N ==4{_cebd :=NewPdfColorspaceDeviceCMYK ();return _cebd .ColorFromPdfObjects (objects );}else {return nil ,_ged .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _bgaa .Alternate .ColorFromPdfObjects (objects );};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_fb .PdfObjectInteger ;TilingType *_fb .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_fb .PdfObjectFloat ;YStep *_fb .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_fb .PdfObjectArray ;};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_feff *PdfFont )CharcodesToUnicodeWithStats (charcodes []_ff .CharCode )(_cfcg []rune ,_adac ,_bgdcf int ){_dcbg ,_adac ,_bgdcf :=_feff .CharcodesToStrings (charcodes );return []rune (_ba .Join (_dcbg ,"")),_adac ,_bgdcf ;};

// GetOutlineTree returns the outline tree.
func (_aaddf *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _aaddf ._acbd };func (_dccc *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _dccc ._gfcg .GetCrypter ()!=nil &&!_dccc ._gfcg .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_efdfc :=_dccc ._babag ;_babcd :=_efdfc .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _babcd ==nil {return nil ,nil ;};_accaf ,_ :=_fb .GetIndirect (_babcd );_babcd =_fb .TraceToDirectObject (_babcd );if _fb .IsNullObject (_babcd ){_ef .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_eccfe ,_gffdc :=_fb .GetDict (_babcd );if !_gffdc {_ef .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_babcd );_ef .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_babcd );};_ef .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_ef .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_dccc ._abae {_accd :=_dccc .traverseObjectData (_eccfe );
if _accd !=nil {_ef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_accd );
return nil ,_accd ;};};_dbagc ,_gbbgg :=_dccc .newPdfAcroFormFromDict (_accaf ,_eccfe );if _gbbgg !=nil {return nil ,_gbbgg ;};return _dbagc ,nil ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// ToPdfObject converts the font to a PDF representation.
func (_bcfff *pdfFontType0 )ToPdfObject ()_fb .PdfObject {if _bcfff ._acfaf ==nil {_bcfff ._acfaf =&_fb .PdfIndirectObject {};};_egded :=_bcfff .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_bcfff ._acfaf .PdfObject =_egded ;if _bcfff .Encoding !=nil {_egded .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bcfff .Encoding );
}else if _bcfff ._eeaeg !=nil {_egded .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bcfff ._eeaeg .ToPdfObject ());};if _bcfff .DescendantFont !=nil {_egded .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_fb .MakeArray (_bcfff .DescendantFont .ToPdfObject ()));
};return _bcfff ._acfaf ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _fb .PdfObject ;V _fb .PdfObject ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_acb :=NewPdfAnnotation ();_bega :=&PdfAnnotationFileAttachment {};_bega .PdfAnnotation =_acb ;_bega .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_acb .SetContext (_bega );return _bega ;
};

// GetBorderWidth returns the border style's width.
func (_daac *PdfBorderStyle )GetBorderWidth ()float64 {if _daac .W ==nil {return 1;};return *_daac .W ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_fb .PdfObjectStream )(*XObjectForm ,error ){_ecadc :=&XObjectForm {};_ecadc ._cabgcd =stream ;_fegcd :=*(stream .PdfObjectDictionary );_fgcbfc ,_gafdce :=_fb .NewEncoderFromStream (stream );if _gafdce !=nil {return nil ,_gafdce ;
};_ecadc .Filter =_fgcbfc ;if _dgbabd :=_fegcd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_dgbabd !=nil {_dceda ,_abbbba :=_dgbabd .(*_fb .PdfObjectName );if !_abbbba {return nil ,_ged .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_dceda !="\u0046\u006f\u0072\u006d"{_ef .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_ged .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _edgfe :=_fegcd .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_edgfe !=nil {_ecadc .FormType =_edgfe ;};if _adfef :=_fegcd .Get ("\u0042\u0042\u006f\u0078");_adfef !=nil {_ecadc .BBox =_adfef ;};if _bdddea :=_fegcd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_bdddea !=nil {_ecadc .Matrix =_bdddea ;};if _gfafb :=_fegcd .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gfafb !=nil {_gfafb =_fb .TraceToDirectObject (_gfafb );_becbg ,_efceb :=_gfafb .(*_fb .PdfObjectDictionary );if !_efceb {_ef .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_fb .ErrTypeError ;};_aegfa ,_dbfab :=NewPdfPageResourcesFromDict (_becbg );if _dbfab !=nil {_ef .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_dbfab ;};_ecadc .Resources =_aegfa ;_ef .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_ecadc .Resources );};_ecadc .Group =_fegcd .Get ("\u0047\u0072\u006fu\u0070");
_ecadc .Ref =_fegcd .Get ("\u0052\u0065\u0066");_ecadc .MetaData =_fegcd .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_ecadc .PieceInfo =_fegcd .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_ecadc .LastModified =_fegcd .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_ecadc .StructParent =_fegcd .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_ecadc .StructParents =_fegcd .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_ecadc .OPI =_fegcd .Get ("\u004f\u0050\u0049");
_ecadc .OC =_fegcd .Get ("\u004f\u0043");_ecadc .Name =_fegcd .Get ("\u004e\u0061\u006d\u0065");_ecadc .Stream =stream .Stream ;return _ecadc ,nil ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_aebed *PdfFieldChoice )ToPdfObject ()_fb .PdfObject {_aebed .PdfField .ToPdfObject ();_agdd :=_aebed ._ecgg ;_ccda :=_agdd .PdfObject .(*_fb .PdfObjectDictionary );_ccda .Set ("\u0046\u0054",_fb .MakeName ("\u0043\u0068"));if _aebed .Opt !=nil {_ccda .Set ("\u004f\u0070\u0074",_aebed .Opt );
};if _aebed .TI !=nil {_ccda .Set ("\u0054\u0049",_aebed .TI );};if _aebed .I !=nil {_ccda .Set ("\u0049",_aebed .I );};return _agdd ;};func (_cagbf *PdfReader )newPdfPageFromDict (_ggacbb *_fb .PdfObjectDictionary )(*PdfPage ,error ){_abfbg :=NewPdfPage ();
_abfbg ._ggafg =_ggacbb ;_abfc :=*_ggacbb ;_fcgga ,_bfdce :=_abfc .Get ("\u0054\u0079\u0070\u0065").(*_fb .PdfObjectName );if !_bfdce {return nil ,_ged .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_fcgga !="\u0050\u0061\u0067\u0065"{return nil ,_ged .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _adef :=_abfc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_adef !=nil {_abfbg .Parent =_adef ;};if _eeab :=_abfc .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_eeab !=nil {_fcegd ,_cbegc :=_fb .GetString (_eeab );if !_cbegc {return nil ,_ged .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_gagfb ,_caad :=NewPdfDate (_fcegd .Str ());if _caad !=nil {return nil ,_caad ;};_abfbg .LastModified =&_gagfb ;};if _gcfda :=_abfc .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gcfda !=nil &&!_fb .IsNullObject (_gcfda ){_bgdb ,_fabbb :=_fb .GetDict (_gcfda );
if !_fabbb {return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gcfda );};var _cbcfd error ;_abfbg .Resources ,_cbcfd =NewPdfPageResourcesFromDict (_bgdb );
if _cbcfd !=nil {return nil ,_cbcfd ;};}else {_fafgc ,_fbafb :=_abfbg .getParentResources ();if _fbafb !=nil {return nil ,_fbafb ;};if _fafgc ==nil {_fafgc =NewPdfPageResources ();};_abfbg .Resources =_fafgc ;};if _cbba :=_abfc .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_cbba !=nil {_efabd ,_feafg :=_fb .GetArray (_cbba );if !_feafg {return nil ,_ged .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _dcbab error ;
_abfbg .MediaBox ,_dcbab =NewPdfRectangle (*_efabd );if _dcbab !=nil {return nil ,_dcbab ;};};if _fggbd :=_abfc .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_fggbd !=nil {_cbecc ,_dafffd :=_fb .GetArray (_fggbd );if !_dafffd {return nil ,_ged .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _bagac error ;_abfbg .CropBox ,_bagac =NewPdfRectangle (*_cbecc );if _bagac !=nil {return nil ,_bagac ;};};if _eaagf :=_abfc .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_eaagf !=nil {_dbecg ,_edege :=_fb .GetArray (_eaagf );if !_edege {return nil ,_ged .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _dedag error ;_abfbg .BleedBox ,_dedag =NewPdfRectangle (*_dbecg );if _dedag !=nil {return nil ,_dedag ;};};if _adecec :=_abfc .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_adecec !=nil {_agec ,_dgabc :=_fb .GetArray (_adecec );if !_dgabc {return nil ,_ged .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _gbdb error ;_abfbg .TrimBox ,_gbdb =NewPdfRectangle (*_agec );if _gbdb !=nil {return nil ,_gbdb ;};};if _aeea :=_abfc .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_aeea !=nil {_fbbaf ,_daeee :=_fb .GetArray (_aeea );if !_daeee {return nil ,_ged .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _becf error ;_abfbg .ArtBox ,_becf =NewPdfRectangle (*_fbbaf );if _becf !=nil {return nil ,_becf ;};};if _abcce :=_abfc .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_abcce !=nil {_abfbg .BoxColorInfo =_abcce ;};if _abdb :=_abfc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_abdb !=nil {_abfbg .Contents =_abdb ;};if _gbbc :=_abfc .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_gbbc !=nil {_cdgb ,_cfccg :=_fb .GetNumberAsInt64 (_gbbc );if _cfccg !=nil {return nil ,_ged .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_abfbg .Rotate =&_cdgb ;};if _gfbed :=_abfc .Get ("\u0047\u0072\u006fu\u0070");_gfbed !=nil {_abfbg .Group =_gfbed ;};if _ecda :=_abfc .Get ("\u0054\u0068\u0075m\u0062");_ecda !=nil {_abfbg .Thumb =_ecda ;};if _cgefg :=_abfc .Get ("\u0042");_cgefg !=nil {_abfbg .B =_cgefg ;
};if _afbf :=_abfc .Get ("\u0044\u0075\u0072");_afbf !=nil {_abfbg .Dur =_afbf ;};if _edfgb :=_abfc .Get ("\u0054\u0072\u0061n\u0073");_edfgb !=nil {_abfbg .Trans =_edfgb ;};if _faadc :=_abfc .Get ("\u0041\u0041");_faadc !=nil {_abfbg .AA =_faadc ;};if _dggbb :=_abfc .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");
_dggbb !=nil {_abfbg .Metadata =_dggbb ;};if _edfaad :=_abfc .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_edfaad !=nil {_abfbg .PieceInfo =_edfaad ;};if _ggfeg :=_abfc .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_ggfeg !=nil {_abfbg .StructParents =_ggfeg ;};if _cbebdb :=_abfc .Get ("\u0049\u0044");_cbebdb !=nil {_abfbg .ID =_cbebdb ;};if _edfe :=_abfc .Get ("\u0050\u005a");_edfe !=nil {_abfbg .PZ =_edfe ;};if _dadfd :=_abfc .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_dadfd !=nil {_abfbg .SeparationInfo =_dadfd ;};if _fgecgd :=_abfc .Get ("\u0054\u0061\u0062\u0073");_fgecgd !=nil {_abfbg .Tabs =_fgecgd ;};if _dgaaa :=_abfc .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_dgaaa !=nil {_abfbg .TemplateInstantiated =_dgaaa ;};if _bdgbd :=_abfc .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_bdgbd !=nil {_abfbg .PresSteps =_bdgbd ;};if _bdbcb :=_abfc .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_bdbcb !=nil {_abfbg .UserUnit =_bdbcb ;
};if _bgccf :=_abfc .Get ("\u0056\u0050");_bgccf !=nil {_abfbg .VP =_bgccf ;};if _dabbb :=_abfc .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_dabbb !=nil {_abfbg .Annots =_dabbb ;};_abfbg ._bgaaa =_cagbf ;return _abfbg ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_beee *PdfShadingType2 )ToPdfObject ()_fb .PdfObject {_beee .PdfShading .ToPdfObject ();_cfbd ,_cfadf :=_beee .getShadingDict ();if _cfadf !=nil {_ef .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cfbd ==nil {_ef .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _beee .Coords !=nil {_cfbd .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_beee .Coords );
};if _beee .Domain !=nil {_cfbd .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_beee .Domain );};if _beee .Function !=nil {if len (_beee .Function )==1{_cfbd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_beee .Function [0].ToPdfObject ());}else {_cecbb :=_fb .MakeArray ();
for _ ,_cdebf :=range _beee .Function {_cecbb .Append (_cdebf .ToPdfObject ());};_cfbd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cecbb );};};if _beee .Extend !=nil {_cfbd .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_beee .Extend );};return _beee ._fcfag ;
};func _agdfe ()string {return _ef .Version };

// ToPdfObject implements interface PdfModel.
func (_cda *PdfActionGoToE )ToPdfObject ()_fb .PdfObject {_cda .PdfAction .ToPdfObject ();_fea :=_cda ._db ;_ab :=_fea .PdfObject .(*_fb .PdfObjectDictionary );_ab .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeGoToE )));if _cda .F !=nil {_ab .Set ("\u0046",_cda .F .ToPdfObject ());
};_ab .SetIfNotNil ("\u0044",_cda .D );_ab .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_cda .NewWindow );_ab .SetIfNotNil ("\u0054",_cda .T );return _fea ;};func _fbgf (_ffgc *PdfField ,_eeda _fb .PdfObject ){for _ ,_gabab :=range _ffgc .Annotations {_gabab .AS =_eeda ;
_gabab .ToPdfObject ();};};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_eedag *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_cegfg *PdfSignature ,_dddbbc Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_ececc *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_gedgd *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_ddcc *PdfSignature ,_baeag Hasher )error ;};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_fb .PdfObjectString ;Q *_fb .PdfObjectInteger ;DS *_fb .PdfObjectString ;RV _fb .PdfObject ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_gaaa *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_bccgd int64 ;_ecccc int64 ;_bcgga int64 ;_gbfad int64 ;_gaffc int64 ;_cbbgca int64 ;_aadde byte ;_cdedf int64 ;_dbdge int64 ;};func (_fcbb *PdfWriter )checkLicense ()error {_bgbdd :=_fde .GetLicenseKey ();if (_bgbdd ==nil ||!_bgbdd .IsLicensed ())&&!_bdedd {_d .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_d .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _ged .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};

// SetLocation sets the `Location` field of the signature.
func (_bbdda *PdfSignature )SetLocation (location string ){_bbdda .Location =_fb .MakeString (location )};

// ToPdfObject implements interface PdfModel.
func (_faec *PdfAnnotationRichMedia )ToPdfObject ()_fb .PdfObject {_faec .PdfAnnotation .ToPdfObject ();_afge :=_faec ._fcf ;_dbe :=_afge .PdfObject .(*_fb .PdfObjectDictionary );_dbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_dbe .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_faec .RichMediaSettings );_dbe .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_faec .RichMediaContent );
return _afge ;};

// Encoder returns the font's text encoder.
func (_bgdac pdfCIDFontType0 )Encoder ()_ff .TextEncoder {return _bgdac ._egaa };

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_dgd :=NewPdfAnnotation ();_bbeg :=&PdfAnnotationPolygon {};_bbeg .PdfAnnotation =_dgd ;_bbeg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dgd .SetContext (_bbeg );return _bbeg ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_fb .PdfObjectDictionary )(*PdfPageResources ,error ){_gfbea :=NewPdfPageResources ();if _geca :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_geca !=nil {_gfbea .ExtGState =_geca ;};if _ffebc :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_ffebc !=nil &&!_fb .IsNullObject (_ffebc ){_gfbea .ColorSpace =_ffebc ;};if _dfgfc :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_dfgfc !=nil {_gfbea .Pattern =_dfgfc ;};if _fgaf :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_fgaf !=nil {_gfbea .Shading =_fgaf ;
};if _geacc :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_geacc !=nil {_gfbea .XObject =_geacc ;};if _acbdb :=_fb .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_acbdb !=nil {_gfbea .Font =_acbdb ;};if _fbdc :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_fbdc !=nil {_gfbea .ProcSet =_fbdc ;};if _dacb :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_dacb !=nil {_gfbea .Properties =_dacb ;};return _gfbea ,nil ;};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_bdead *PdfFieldButton )IsCheckbox ()bool {return _bdead .GetType ()==ButtonTypeCheckbox };func (_dfbba *PdfWriter )checkCrossReferenceStream ()bool {_ddgfc :=_dfbba ._befbee .Major > 1||(_dfbba ._befbee .Major ==1&&_dfbba ._befbee .Minor > 4);if _dfbba ._dcbcd !=nil {_ddgfc =*_dfbba ._dcbcd ;
};return _ddgfc ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;func _eebfd (_bebbg _fb .PdfObject )(*PdfFunctionType2 ,error ){_cdeea :=&PdfFunctionType2 {};var _ebgbc *_fb .PdfObjectDictionary ;if _bcffd ,_bagfc :=_bebbg .(*_fb .PdfIndirectObject );_bagfc {_feffd ,_bdccd :=_bcffd .PdfObject .(*_fb .PdfObjectDictionary );
if !_bdccd {return nil ,_ged .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cdeea ._cddae =_bcffd ;_ebgbc =_feffd ;}else if _caebc ,_eebge :=_bebbg .(*_fb .PdfObjectDictionary );_eebge {_ebgbc =_caebc ;
}else {return nil ,_ged .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ef .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_ebgbc .String ());_gdag ,_fggbfe :=_fb .TraceToDirectObject (_ebgbc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fb .PdfObjectArray );
if !_fggbfe {_ef .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ged .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _gdag .Len ()< 0||_gdag .Len ()%2!=0{_ef .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_ged .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_afbbg ,_gfabb :=_gdag .ToFloat64Array ();if _gfabb !=nil {return nil ,_gfabb ;};_cdeea .Domain =_afbbg ;_gdag ,_fggbfe =_fb .TraceToDirectObject (_ebgbc .Get ("\u0052\u0061\u006eg\u0065")).(*_fb .PdfObjectArray );if _fggbfe {if _gdag .Len ()< 0||_gdag .Len ()%2!=0{return nil ,_ged .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_gadd ,_ceegcb :=_gdag .ToFloat64Array ();if _ceegcb !=nil {return nil ,_ceegcb ;};_cdeea .Range =_gadd ;};_gdag ,_fggbfe =_fb .TraceToDirectObject (_ebgbc .Get ("\u0043\u0030")).(*_fb .PdfObjectArray );if _fggbfe {_aaba ,_caag :=_gdag .ToFloat64Array ();
if _caag !=nil {return nil ,_caag ;};_cdeea .C0 =_aaba ;};_gdag ,_fggbfe =_fb .TraceToDirectObject (_ebgbc .Get ("\u0043\u0031")).(*_fb .PdfObjectArray );if _fggbfe {_ccccc ,_cgea :=_gdag .ToFloat64Array ();if _cgea !=nil {return nil ,_cgea ;};_cdeea .C1 =_ccccc ;
};if len (_cdeea .C0 )!=len (_cdeea .C1 ){_ef .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_fb .ErrRangeError ;};N ,_gfabb :=_fb .GetNumberAsFloat (_fb .TraceToDirectObject (_ebgbc .Get ("\u004e")));
if _gfabb !=nil {_ef .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_ebgbc .String ());return nil ,_gfabb ;};_cdeea .N =N ;
return _cdeea ,nil ;};func _adfe (_facd _fb .PdfObject )(*PdfColorspaceCalRGB ,error ){_daab :=NewPdfColorspaceCalRGB ();if _cbae ,_fade :=_facd .(*_fb .PdfIndirectObject );_fade {_daab ._efgeg =_cbae ;};_facd =_fb .TraceToDirectObject (_facd );_bbff ,_fdcg :=_facd .(*_fb .PdfObjectArray );
if !_fdcg {return nil ,_d .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bbff .Len ()!=2{return nil ,_d .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_facd =_fb .TraceToDirectObject (_bbff .Get (0));_cfgad ,_fdcg :=_facd .(*_fb .PdfObjectName );if !_fdcg {return nil ,_d .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_cfgad !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_d .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_facd =_fb .TraceToDirectObject (_bbff .Get (1));
_fdaa ,_fdcg :=_facd .(*_fb .PdfObjectDictionary );if !_fdcg {return nil ,_d .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_facd =_fdaa .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");
_facd =_fb .TraceToDirectObject (_facd );_afeg ,_fdcg :=_facd .(*_fb .PdfObjectArray );if !_fdcg {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _afeg .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_affb ,_fagg :=_afeg .GetAsFloat64Slice ();
if _fagg !=nil {return nil ,_fagg ;};_daab .WhitePoint =_affb ;_facd =_fdaa .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _facd !=nil {_facd =_fb .TraceToDirectObject (_facd );_afee ,_cbaeg :=_facd .(*_fb .PdfObjectArray );if !_cbaeg {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");
};if _afee .Len ()!=3{return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_geba ,_ddcf :=_afee .GetAsFloat64Slice ();
if _ddcf !=nil {return nil ,_ddcf ;};_daab .BlackPoint =_geba ;};_facd =_fdaa .Get ("\u0047\u0061\u006dm\u0061");if _facd !=nil {_facd =_fb .TraceToDirectObject (_facd );_fcde ,_cacd :=_facd .(*_fb .PdfObjectArray );if !_cacd {return nil ,_d .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");
};if _fcde .Len ()!=3{return nil ,_d .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_ebgc ,_dbdb :=_fcde .GetAsFloat64Slice ();if _dbdb !=nil {return nil ,_dbdb ;
};_daab .Gamma =_ebgc ;};_facd =_fdaa .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _facd !=nil {_facd =_fb .TraceToDirectObject (_facd );_dcaac ,_dcee :=_facd .(*_fb .PdfObjectArray );if !_dcee {return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");
};if _dcaac .Len ()!=9{_ef .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_dcaac .String ());return nil ,_d .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");
};_fdda ,_aabb :=_dcaac .GetAsFloat64Slice ();if _aabb !=nil {return nil ,_aabb ;};_daab .Matrix =_fdda ;};return _daab ,nil ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_cfge *Image )ToGoImage ()(_gb .Image ,error ){_ef .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_gdddf ,_ccbe :=_cg .NewImage (int (_cfge .Width ),int (_cfge .Height ),int (_cfge .BitsPerComponent ),_cfge .ColorComponents ,_cfge .Data ,_cfge ._feec ,_cfge ._fcgee );
if _ccbe !=nil {return nil ,_ccbe ;};return _gdddf ,nil ;};func (_cacdf SignatureValidationResult )String ()string {var _ccgeaf _cbg .Buffer ;_ccgeaf .WriteString (_d .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_cacdf .Name ));if _cacdf .Date ._bccgd > 0{_ccgeaf .WriteString (_d .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_cacdf .Date .ToGoTime ().String ()));
}else {_ccgeaf .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_cacdf .Reason )> 0{_ccgeaf .WriteString (_d .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_cacdf .Reason ));
}else {_ccgeaf .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_cacdf .Location )> 0{_ccgeaf .WriteString (_d .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_cacdf .Location ));
}else {_ccgeaf .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_cacdf .ContactInfo )> 0{_ccgeaf .WriteString (_d .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_cacdf .ContactInfo ));
}else {_ccgeaf .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_ccgeaf .WriteString (_d .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_cacdf .Fields )));
if _cacdf .IsSigned {_ccgeaf .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_ccgeaf .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");
};if _cacdf .IsVerified {_ccgeaf .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_ccgeaf .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");
};if _cacdf .IsTrusted {_ccgeaf .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_ccgeaf .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");
};if !_cacdf .GeneralizedTime .IsZero (){_ccgeaf .WriteString (_d .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_cacdf .GeneralizedTime .String ()));};if _cacdf .DiffResults !=nil {_ccgeaf .WriteString (_d .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_cacdf .DiffResults .IsPermitted ()));
if len (_cacdf .DiffResults .Warnings )> 0{_ccgeaf .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");for _ ,_dbeba :=range _cacdf .DiffResults .Warnings {_ccgeaf .WriteString (_d .Sprintf ("\u0009\u0025\u0073\u000a",_dbeba ));
};};if len (_cacdf .DiffResults .Errors )> 0{_ccgeaf .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");for _ ,_aeaed :=range _cacdf .DiffResults .Errors {_ccgeaf .WriteString (_d .Sprintf ("\u0009\u0025\u0073\u000a",_aeaed ));
};};};return _ccgeaf .String ();};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dfcfa pdfFontType3 )GetCharMetrics (code _ff .CharCode )(_bb .CharMetrics ,bool ){if _fbgd ,_gdaab :=_dfcfa ._ddfgd [code ];_gdaab {return _bb .CharMetrics {Wx :_fbgd },true ;};if _bb .IsStdFont (_bb .StdFontName (_dfcfa ._ecaae )){return _bb .CharMetrics {Wx :250},true ;
};return _bb .CharMetrics {},false ;};

// ParsePdfObject parses input pdf object into given output intent.
func (_fgfgc *PdfOutputIntent )ParsePdfObject (object _fb .PdfObject )error {_cfdd ,_caca :=_fb .GetDict (object );if !_caca {_ef .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _ged .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_fgfgc ._ffea =_cfdd ;_fgfgc .Type ,_ =_cfdd .GetString ("\u0054\u0079\u0070\u0065");_ffaad ,_caca :=_cfdd .GetString ("\u0053");if _caca {switch _ffaad {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_fgfgc .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_fgfgc .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_fgfgc .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_fgfgc .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_fgfgc .S =PdfOutputIntentTypeX ;
};};_fgfgc .OutputCondition ,_ =_cfdd .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_fgfgc .OutputConditionIdentifier ,_ =_cfdd .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_fgfgc .RegistryName ,_ =_cfdd .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_fgfgc .Info ,_ =_cfdd .GetString ("\u0049\u006e\u0066\u006f");if _aadga ,_dfce :=_fb .GetStream (_cfdd .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_dfce {_fgfgc .ColorComponents ,_ =_fb .GetIntVal (_aadga .Get ("\u004e"));_aedbb ,_baaeg :=_fb .DecodeStream (_aadga );if _baaeg !=nil {return _baaeg ;};_fgfgc .DestOutputProfile =_aedbb ;};return nil ;};func (_ffae *PdfWriter )writeObjects (){_ef .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_ffae ._dbdgd ));
_ffae ._agcfd =make (map[int ]crossReference );_ffae ._agcfd [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _ffae ._bbcfff .ObjectMap !=nil {for _fcbgf ,_gfegc :=range _ffae ._bbcfff .ObjectMap {if _fcbgf ==0{continue ;};if _gfegc .XType ==_fb .XrefTypeObjectStream {_fbgaeeg :=crossReference {Type :2,ObjectNumber :_gfegc .OsObjNumber ,Index :_gfegc .OsObjIndex };
_ffae ._agcfd [_fcbgf ]=_fbgaeeg ;};if _gfegc .XType ==_fb .XrefTypeTableEntry {_gdged :=crossReference {Type :1,ObjectNumber :_gfegc .ObjectNumber ,Offset :_gfegc .Offset };_ffae ._agcfd [_fcbgf ]=_gdged ;};};};};func (_gcfa *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};


// IsCID returns true if the underlying font is CID.
func (_aece *PdfFont )IsCID ()bool {return _aece .baseFields ().isCIDFont ()};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_fabee *PdfOutlineItem )ToPdfObject ()_fb .PdfObject {_fbagf :=_fabee ._daae ;_beaac :=_fbagf .PdfObject .(*_fb .PdfObjectDictionary );_beaac .Set ("\u0054\u0069\u0074l\u0065",_fabee .Title );if _fabee .A !=nil {_beaac .Set ("\u0041",_fabee .A );
};if _cgaec :=_beaac .Get ("\u0053\u0045");_cgaec !=nil {_beaac .Remove ("\u0053\u0045");};if _fabee .C !=nil {_beaac .Set ("\u0043",_fabee .C );};if _fabee .Dest !=nil {_beaac .Set ("\u0044\u0065\u0073\u0074",_fabee .Dest );};if _fabee .F !=nil {_beaac .Set ("\u0046",_fabee .F );
};if _fabee .Count !=nil {_beaac .Set ("\u0043\u006f\u0075n\u0074",_fb .MakeInteger (*_fabee .Count ));};if _fabee .Next !=nil {_beaac .Set ("\u004e\u0065\u0078\u0074",_fabee .Next .ToPdfObject ());};if _fabee .First !=nil {_beaac .Set ("\u0046\u0069\u0072s\u0074",_fabee .First .ToPdfObject ());
};if _fabee .Prev !=nil {_beaac .Set ("\u0050\u0072\u0065\u0076",_fabee .Prev .GetContext ().GetContainingPdfObject ());};if _fabee .Last !=nil {_beaac .Set ("\u004c\u0061\u0073\u0074",_fabee .Last .GetContext ().GetContainingPdfObject ());};if _fabee .Parent !=nil {_beaac .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fabee .Parent .GetContext ().GetContainingPdfObject ());
};return _fbagf ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_gf :=NewPdfAction ();_bgb :=&PdfActionSound {};_bgb .PdfAction =_gf ;_gf .SetContext (_bgb );return _bgb ;};func _daece (_bcbee _fb .PdfObject )(*_fb .PdfObjectDictionary ,*fontCommon ,error ){_fffb :=&fontCommon {};
if _ddggg ,_ggga :=_bcbee .(*_fb .PdfIndirectObject );_ggga {_fffb ._dceeg =_ddggg .ObjectNumber ;};_aegd ,_fabdf :=_fb .GetDict (_bcbee );if !_fabdf {_ef .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_bcbee );
return nil ,nil ,ErrFontNotSupported ;};_fgaed ,_fabdf :=_fb .GetNameVal (_aegd .Get ("\u0054\u0079\u0070\u0065"));if !_fabdf {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _fgaed !="\u0046\u006f\u006e\u0074"{_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_fgaed ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_fb .ErrTypeError ;};_gbab ,_fabdf :=_fb .GetNameVal (_aegd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_fabdf {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_fffb ._ccbfd =_gbab ;_aeabc ,_fabdf :=_fb .GetNameVal (_aegd .Get ("\u004e\u0061\u006d\u0065"));if _fabdf {_fffb ._bdfg =_aeabc ;};_gbdae :=_aegd .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _gbdae !=nil {_fffb ._cccfe =_fb .TraceToDirectObject (_gbdae );
_ecge ,_abbea :=_baac (_fffb ._cccfe ,_fffb );if _abbea !=nil {return _aegd ,_fffb ,_abbea ;};_fffb ._fadd =_ecge ;}else if _gbab =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_gbab =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_gefeg ,_dcbf :=_bde .NewCIDSystemInfo (_aegd .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _dcbf !=nil {return _aegd ,_fffb ,_dcbf ;};_eega :=_d .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_gefeg .Registry ,_gefeg .Ordering );if _bde .IsPredefinedCMap (_eega ){_fffb ._fadd ,_dcbf =_bde .LoadPredefinedCMap (_eega );
if _dcbf !=nil {_ef .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_eega ,_dcbf );
};};};_cbebc :=_aegd .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _cbebc !=nil {_gdadbd ,_fbgb :=_gccea (_cbebc );if _fbgb !=nil {_ef .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fbgb );
return _aegd ,_fffb ,_fbgb ;};_fffb ._gcge =_gdadbd ;};if _gbab !="\u0054\u0079\u0070e\u0033"{_ffcd ,_dbda :=_fb .GetNameVal (_aegd .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_dbda {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _aegd ,_fffb ,ErrRequiredAttributeMissing ;};_fffb ._ecaae =_ffcd ;};return _aegd ,_fffb ,nil ;};func _gebab (_bfaad *_fb .PdfObjectDictionary )(*PdfShadingType3 ,error ){_dddec :=PdfShadingType3 {};_ebfdc :=_bfaad .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");
if _ebfdc ==nil {_ef .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;
};_efbgad ,_ddcac :=_ebfdc .(*_fb .PdfObjectArray );if !_ddcac {_ef .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ebfdc );return nil ,_fb .ErrTypeError ;
};if _efbgad .Len ()!=6{_ef .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_efbgad .Len ());return nil ,ErrInvalidAttribute ;};_dddec .Coords =_efbgad ;
if _cbbab :=_bfaad .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_cbbab !=nil {_cbbab =_fb .TraceToDirectObject (_cbbab );_ffed ,_bbbag :=_cbbab .(*_fb .PdfObjectArray );if !_bbbag {_ef .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cbbab );
return nil ,_fb .ErrTypeError ;};_dddec .Domain =_ffed ;};_ebfdc =_bfaad .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ebfdc ==nil {_ef .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_dddec .Function =[]PdfFunction {};if _gebaf ,_gffea :=_ebfdc .(*_fb .PdfObjectArray );_gffea {for _ ,_gebaa :=range _gebaf .Elements (){_faedc ,_dfgbf :=_ecae (_gebaa );if _dfgbf !=nil {_ef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dfgbf );
return nil ,_dfgbf ;};_dddec .Function =append (_dddec .Function ,_faedc );};}else {_fgbdd ,_aggad :=_ecae (_ebfdc );if _aggad !=nil {_ef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aggad );
return nil ,_aggad ;};_dddec .Function =append (_dddec .Function ,_fgbdd );};if _fcea :=_bfaad .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_fcea !=nil {_fcea =_fb .TraceToDirectObject (_fcea );_bgecd ,_fcabb :=_fcea .(*_fb .PdfObjectArray );if !_fcabb {_ef .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fcea );
return nil ,_fb .ErrTypeError ;};if _bgecd .Len ()!=2{_ef .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bgecd .Len ());return nil ,ErrInvalidAttribute ;
};_dddec .Extend =_bgecd ;};return &_dddec ,nil ;};

// WriteString outputs the object as it is to be written to file.
func (_aeeag *PdfTransformParamsDocMDP )WriteString ()string {return _aeeag .ToPdfObject ().WriteString ();};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bdcc pdfFontType3 )GetRuneMetrics (r rune )(_bb .CharMetrics ,bool ){_dgbfaf :=_bdcc .Encoder ();if _dgbfaf ==nil {_ef .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_bdcc );
return _bb .CharMetrics {},false ;};_afcc ,_fdbcg :=_dgbfaf .RuneToCharcode (r );if !_fdbcg {if r !=' '{_ef .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_bdcc );
};return _bb .CharMetrics {},false ;};_fbbcb ,_dgbfb :=_bdcc .GetCharMetrics (_afcc );return _fbbcb ,_dgbfb ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_efa :=NewPdfAction ();_ffa :=&PdfActionSetOCGState {};_ffa .PdfAction =_efa ;_efa .SetContext (_ffa );return _ffa ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cdce *PdfShadingType3 )ToPdfObject ()_fb .PdfObject {_cdce .PdfShading .ToPdfObject ();_abbcf ,_cbdee :=_cdce .getShadingDict ();if _cbdee !=nil {_ef .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cdce .Coords !=nil {_abbcf .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_cdce .Coords );};if _cdce .Domain !=nil {_abbcf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cdce .Domain );};if _cdce .Function !=nil {if len (_cdce .Function )==1{_abbcf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cdce .Function [0].ToPdfObject ());
}else {_dcgb :=_fb .MakeArray ();for _ ,_abca :=range _cdce .Function {_dcgb .Append (_abca .ToPdfObject ());};_abbcf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dcgb );};};if _cdce .Extend !=nil {_abbcf .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_cdce .Extend );
};return _cdce ._fcfag ;};func (_ecdff *PdfWriter )mapObjectStreams (_ddbff bool )(map[_fb .PdfObject ]bool ,bool ){_dafbb :=make (map[_fb .PdfObject ]bool );for _ ,_cffcf :=range _ecdff ._dbdgd {if _gecac ,_dcecf :=_cffcf .(*_fb .PdfObjectStreams );_dcecf {_ddbff =true ;
for _ ,_eacbc :=range _gecac .Elements (){_dafbb [_eacbc ]=true ;if _bagecc ,_aedacf :=_eacbc .(*_fb .PdfIndirectObject );_aedacf {_dafbb [_bagecc .PdfObject ]=true ;};};};};return _dafbb ,_ddbff ;};func _gdbee (_bgfgd []*_fb .PdfObjectStream )*_fb .PdfObjectArray {if len (_bgfgd )==0{return nil ;
};_ffgd :=make ([]_fb .PdfObject ,0,len (_bgfgd ));for _ ,_fdced :=range _bgfgd {_ffgd =append (_ffgd ,_fdced );};return _fb .MakeArray (_ffgd ...);};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_agcbg int ,_daag *PdfPage )error ;func _dgag (_agebg *_fb .PdfObjectStream )(*PdfFunctionType0 ,error ){_bfcd :=&PdfFunctionType0 {};_bfcd ._cafb =_agebg ;_cbgg :=_agebg .PdfObjectDictionary ;_gcfc ,_cfea :=_fb .TraceToDirectObject (_cbgg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_fb .PdfObjectArray );
if !_cfea {_ef .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ged .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _gcfc .Len ()< 0||_gcfc .Len ()%2!=0{_ef .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ged .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_bfcd .NumInputs =_gcfc .Len ()/2;_bcgd ,_bdacd :=_gcfc .ToFloat64Array ();if _bdacd !=nil {return nil ,_bdacd ;};_bfcd .Domain =_bcgd ;_gcfc ,_cfea =_fb .TraceToDirectObject (_cbgg .Get ("\u0052\u0061\u006eg\u0065")).(*_fb .PdfObjectArray );if !_cfea {_ef .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ged .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _gcfc .Len ()< 0||_gcfc .Len ()%2!=0{return nil ,_ged .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_bfcd .NumOutputs =_gcfc .Len ()/2;_bdecc ,_bdacd :=_gcfc .ToFloat64Array ();if _bdacd !=nil {return nil ,_bdacd ;};_bfcd .Range =_bdecc ;_gcfc ,_cfea =_fb .TraceToDirectObject (_cbgg .Get ("\u0053\u0069\u007a\u0065")).(*_fb .PdfObjectArray );if !_cfea {_ef .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_ged .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_gcceg ,_bdacd :=_gcfc .ToIntegerArray ();
if _bdacd !=nil {return nil ,_bdacd ;};if len (_gcceg )!=_bfcd .NumInputs {_ef .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfcd .Size =_gcceg ;_edggc ,_cfea :=_fb .TraceToDirectObject (_cbgg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_fb .PdfObjectInteger );
if !_cfea {_ef .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_ged .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_edggc !=1&&*_edggc !=2&&*_edggc !=4&&*_edggc !=8&&*_edggc !=12&&*_edggc !=16&&*_edggc !=24&&*_edggc !=32{_ef .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_edggc );
return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfcd .BitsPerSample =int (*_edggc );_bfcd .Order =1;_edaba ,_cfea :=_fb .TraceToDirectObject (_cbgg .Get ("\u004f\u0072\u0064e\u0072")).(*_fb .PdfObjectInteger );
if _cfea {if *_edaba !=1&&*_edaba !=3{_ef .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_edaba );return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfcd .Order =int (*_edaba );
};_gcfc ,_cfea =_fb .TraceToDirectObject (_cbgg .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_fb .PdfObjectArray );if _cfea {_gbee ,_dffef :=_gcfc .ToFloat64Array ();if _dffef !=nil {return nil ,_dffef ;};_bfcd .Encode =_gbee ;};_gcfc ,_cfea =_fb .TraceToDirectObject (_cbgg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_fb .PdfObjectArray );
if _cfea {_ggdab ,_dbdag :=_gcfc .ToFloat64Array ();if _dbdag !=nil {return nil ,_dbdag ;};_bfcd .Decode =_ggdab ;};_cggb ,_bdacd :=_fb .DecodeStream (_agebg );if _bdacd !=nil {return nil ,_bdacd ;};_bfcd ._cbgd =_cggb ;return _bfcd ,nil ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_bddc *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _bddc .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// Val returns the color value.
func (_fdccb *PdfColorDeviceGray )Val ()float64 {return float64 (*_fdccb )};

// Initialize initializes the PdfSignature.
func (_cegcd *PdfSignature )Initialize ()error {if _cegcd .Handler ==nil {return _ged .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _cegcd .Handler .InitSignature (_cegcd );};

// ToPdfObject returns a stream object.
func (_acgfff *XObjectForm )ToPdfObject ()_fb .PdfObject {_abcdc :=_acgfff ._cabgcd ;_egbea :=_abcdc .PdfObjectDictionary ;if _acgfff .Filter !=nil {_egbea =_acgfff .Filter .MakeStreamDict ();_abcdc .PdfObjectDictionary =_egbea ;};_egbea .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_egbea .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0046\u006f\u0072\u006d"));_egbea .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_acgfff .FormType );_egbea .SetIfNotNil ("\u0042\u0042\u006f\u0078",_acgfff .BBox );
_egbea .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_acgfff .Matrix );if _acgfff .Resources !=nil {_egbea .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_acgfff .Resources .ToPdfObject ());};_egbea .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_acgfff .Group );
_egbea .SetIfNotNil ("\u0052\u0065\u0066",_acgfff .Ref );_egbea .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_acgfff .MetaData );_egbea .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_acgfff .PieceInfo );_egbea .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_acgfff .LastModified );
_egbea .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_acgfff .StructParent );_egbea .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_acgfff .StructParents );_egbea .SetIfNotNil ("\u004f\u0050\u0049",_acgfff .OPI );
_egbea .SetIfNotNil ("\u004f\u0043",_acgfff .OC );_egbea .SetIfNotNil ("\u004e\u0061\u006d\u0065",_acgfff .Name );_egbea .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_fb .MakeInteger (int64 (len (_acgfff .Stream ))));_abcdc .Stream =_acgfff .Stream ;return _abcdc ;
};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_dafgc *PdfWriter )SetOpenAction (dest _fb .PdfObject )error {if dest ==nil ||_fb .IsNullObject (dest ){return nil ;};_dafgc ._cgegde .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _dafgc .addObjects (dest );};
func _cdfgg (_bcdac *_fb .PdfObjectDictionary )(*PdfShadingType5 ,error ){_eecf :=PdfShadingType5 {};_fggbfc :=_bcdac .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _fggbfc ==nil {_ef .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fgcdg ,_gbgg :=_fggbfc .(*_fb .PdfObjectInteger );if !_gbgg {_ef .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fggbfc );
return nil ,_fb .ErrTypeError ;};_eecf .BitsPerCoordinate =_fgcdg ;_fggbfc =_bcdac .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _fggbfc ==nil {_ef .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_fgcdg ,_gbgg =_fggbfc .(*_fb .PdfObjectInteger );if !_gbgg {_ef .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_fggbfc );
return nil ,_fb .ErrTypeError ;};_eecf .BitsPerComponent =_fgcdg ;_fggbfc =_bcdac .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _fggbfc ==nil {_ef .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_fgcdg ,_gbgg =_fggbfc .(*_fb .PdfObjectInteger );if !_gbgg {_ef .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_fggbfc );
return nil ,_fb .ErrTypeError ;};_eecf .VerticesPerRow =_fgcdg ;_fggbfc =_bcdac .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _fggbfc ==nil {_ef .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bbffc ,_gbgg :=_fggbfc .(*_fb .PdfObjectArray );if !_gbgg {_ef .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fggbfc );
return nil ,_fb .ErrTypeError ;};_eecf .Decode =_bbffc ;if _begad :=_bcdac .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_begad !=nil {_eecf .Function =[]PdfFunction {};if _agdcd ,_gefbae :=_begad .(*_fb .PdfObjectArray );_gefbae {for _ ,_gegeg :=range _agdcd .Elements (){_gbgbc ,_cfcaf :=_ecae (_gegeg );
if _cfcaf !=nil {_ef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cfcaf );return nil ,_cfcaf ;};_eecf .Function =append (_eecf .Function ,_gbgbc );
};}else {_baaeb ,_gged :=_ecae (_begad );if _gged !=nil {_ef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gged );return nil ,_gged ;};
_eecf .Function =append (_eecf .Function ,_baaeb );};};return &_eecf ,nil ;};func (_cbga *PdfReader )newPdfFieldFromIndirectObject (_cegf *_fb .PdfIndirectObject ,_fbag *PdfField )(*PdfField ,error ){if _afcf ,_ecga :=_cbga ._bcbaa .GetModelFromPrimitive (_cegf ).(*PdfField );
_ecga {return _afcf ,nil ;};_gbae ,_ggba :=_fb .GetDict (_cegf );if !_ggba {return nil ,_d .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_adafa :=NewPdfField ();_adafa ._ecgg =_cegf ;_adafa ._ecgg .PdfObject =_gbae ;if _bfcae ,_gdge :=_fb .GetName (_gbae .Get ("\u0046\u0054"));_gdge {_adafa .FT =_bfcae ;};if _fbag !=nil {_adafa .Parent =_fbag ;};_adafa .T ,_ =_gbae .Get ("\u0054").(*_fb .PdfObjectString );
_adafa .TU ,_ =_gbae .Get ("\u0054\u0055").(*_fb .PdfObjectString );_adafa .TM ,_ =_gbae .Get ("\u0054\u004d").(*_fb .PdfObjectString );_adafa .Ff ,_ =_gbae .Get ("\u0046\u0066").(*_fb .PdfObjectInteger );_adafa .V =_gbae .Get ("\u0056");_adafa .DV =_gbae .Get ("\u0044\u0056");
_adafa .AA =_gbae .Get ("\u0041\u0041");if DA :=_gbae .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_fb .GetString (DA );_adafa .VariableText =&VariableText {DA :DA };Q ,_ :=_gbae .Get ("\u0051").(*_fb .PdfObjectInteger );DS ,_ :=_gbae .Get ("\u0044\u0053").(*_fb .PdfObjectString );
RV :=_gbae .Get ("\u0052\u0056");_adafa .VariableText .Q =Q ;_adafa .VariableText .DS =DS ;_adafa .VariableText .RV =RV ;};_dagde :=_adafa .FT ;if _dagde ==nil &&_fbag !=nil {_dagde =_fbag .FT ;};if _dagde !=nil {switch *_dagde {case "\u0054\u0078":_gbag ,_dddba :=_geffe (_gbae );
if _dddba !=nil {return nil ,_dddba ;};_gbag .PdfField =_adafa ;_adafa ._dcfa =_gbag ;case "\u0043\u0068":_cgfe ,_bgcf :=_gdae (_gbae );if _bgcf !=nil {return nil ,_bgcf ;};_cgfe .PdfField =_adafa ;_adafa ._dcfa =_cgfe ;case "\u0042\u0074\u006e":_gcce ,_gbfa :=_aefb (_gbae );
if _gbfa !=nil {return nil ,_gbfa ;};_gcce .PdfField =_adafa ;_adafa ._dcfa =_gcce ;case "\u0053\u0069\u0067":_dfaeb ,_edbb :=_cbga .newPdfFieldSignatureFromDict (_gbae );if _edbb !=nil {return nil ,_edbb ;};_dfaeb .PdfField =_adafa ;_adafa ._dcfa =_dfaeb ;
default:_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_adafa .FT );return nil ,_ged .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _cgff ,_afcg :=_fb .GetName (_gbae .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_afcg {if *_cgff =="\u0057\u0069\u0064\u0067\u0065\u0074"{_efgd ,_babb :=_cbga .newPdfAnnotationFromIndirectObject (_cegf );if _babb !=nil {return nil ,_babb ;};_cdggg ,_faeaf :=_efgd .GetContext ().(*PdfAnnotationWidget );
if !_faeaf {return nil ,_ged .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_cdggg ._fcc =_adafa ;_cdggg .Parent =_adafa ._ecgg ;_adafa .Annotations =append (_adafa .Annotations ,_cdggg );
return _adafa ,nil ;};};_ccgga :=true ;if _bdbc ,_egefa :=_fb .GetArray (_gbae .Get ("\u004b\u0069\u0064\u0073"));_egefa {_fceb :=make ([]*_fb .PdfIndirectObject ,0,_bdbc .Len ());for _ ,_dgdef :=range _bdbc .Elements (){_faadb ,_bccg :=_fb .GetIndirect (_dgdef );
if !_bccg {_ccdcd ,_deadg :=_fb .GetStream (_dgdef );if _deadg &&_ccdcd .PdfObjectDictionary !=nil {_gddcf ,_adcgb :=_fb .GetNameVal (_ccdcd .Get ("\u0054\u0079\u0070\u0065"));if _adcgb &&_gddcf =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_ef .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_ged .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_ddaf ,_ccbf :=_fb .GetDict (_faadb );
if !_ccbf {return nil ,ErrTypeCheck ;};if _ccgga {_ccgga =!_fcedg (_ddaf );};_fceb =append (_fceb ,_faadb );};for _ ,_cdbae :=range _fceb {if _ccgga {_aceg ,_cebf :=_cbga .newPdfAnnotationFromIndirectObject (_cdbae );if _cebf !=nil {_ef .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_cebf );
return nil ,_cebf ;};_bccb ,_aafd :=_aceg ._dfdg .(*PdfAnnotationWidget );if !_aafd {return nil ,ErrTypeCheck ;};_bccb ._fcc =_adafa ;_adafa .Annotations =append (_adafa .Annotations ,_bccb );}else {_eada ,_afgdb :=_cbga .newPdfFieldFromIndirectObject (_cdbae ,_adafa );
if _afgdb !=nil {_ef .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_afgdb );return nil ,_afgdb ;};_adafa .Kids =append (_adafa .Kids ,_eada );
};};};return _adafa ,nil ;};func (_ggf *PdfReader )newPdfActionHideFromDict (_gef *_fb .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_gef .Get ("\u0054"),H :_gef .Get ("\u0048")},nil ;};func (_cdb *PdfReader )newPdfActionGotoFromDict (_gfc *_fb .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_gfc .Get ("\u0044")},nil ;
};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_fggdb *modelManager )GetModelFromPrimitive (primitive _fb .PdfObject )PdfModel {model ,_ddgaa :=_fggdb ._ebfdf [primitive ];if !_ddgaa {return nil ;};return model ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_ccaae *PdfPage )AddExtGState (name _fb .PdfObjectName ,egs *_fb .PdfObjectDictionary )error {if _ccaae .Resources ==nil {_ccaae .Resources =NewPdfPageResources ();};if _ccaae .Resources .ExtGState ==nil {_ccaae .Resources .ExtGState =_fb .MakeDict ();
};_gfgab ,_adbca :=_fb .TraceToDirectObject (_ccaae .Resources .ExtGState ).(*_fb .PdfObjectDictionary );if !_adbca {_ef .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_fb .TraceToDirectObject (_ccaae .Resources .ExtGState ));
return _ged .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gfgab .Set (name ,egs );return nil ;};func _bbbf (_ddagd _fb .PdfObject ,_bfdbc *PdfReader )(*OutlineDest ,error ){_agbeg ,_aeddg :=_fb .GetArray (_ddagd );
if !_aeddg {return nil ,_ged .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_addd :=_agbeg .Len ();if _addd < 2{return nil ,_d .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_addd );
};_dagge :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_deccd :=_agbeg .Get (0);if _dagec ,_acgff :=_fb .GetIndirect (_deccd );_acgff {if _ ,_feffb ,_accfg :=_bfdbc .PageFromIndirectObject (_dagec );_accfg ==nil {_dagge .Page =int64 (_feffb -1);}else {_ef .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_dagec );
};_dagge .PageObj =_dagec ;}else if _gdee ,_dcegg :=_fb .GetIntVal (_deccd );_dcegg {if _gdee >=0&&_gdee < len (_bfdbc .PageList ){_dagge .PageObj =_bfdbc .PageList [_gdee ].GetPageAsIndirectObject ();}else {_ef .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_gdee );
};_dagge .Page =int64 (_gdee );}else {return nil ,_d .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_deccd );};_deeg ,_aeddg :=_fb .GetNameVal (_agbeg .Get (1));
if !_aeddg {_ef .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_agbeg .Get (1));
return _dagge ,nil ;};switch _deeg {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _addd > 2{_dagge .Y ,_ =_fb .GetNumberAsFloat (_fb .TraceToDirectObject (_agbeg .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _addd > 2{_dagge .X ,_ =_fb .GetNumberAsFloat (_fb .TraceToDirectObject (_agbeg .Get (2)));
};case "\u0058\u0059\u005a":if _addd > 4{_dagge .X ,_ =_fb .GetNumberAsFloat (_fb .TraceToDirectObject (_agbeg .Get (2)));_dagge .Y ,_ =_fb .GetNumberAsFloat (_fb .TraceToDirectObject (_agbeg .Get (3)));_dagge .Zoom ,_ =_fb .GetNumberAsFloat (_fb .TraceToDirectObject (_agbeg .Get (4)));
};default:_deeg ="\u0046\u0069\u0074";};_dagge .Mode =_deeg ;return _dagge ,nil ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_cabgd PdfModel ;_bfgge _fb .PdfObject ;};

// A returns the value of the A component of the color.
func (_eaebg *PdfColorCalRGB )A ()float64 {return _eaebg [0]};

// SetBorderWidth sets the style's border width.
func (_gdc *PdfBorderStyle )SetBorderWidth (width float64 ){_gdc .W =&width };type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};func _dfea (_cadc *[]*PdfField ,_gfbe FieldFilterFunc ,_fggfc bool )[]*PdfField {if _cadc ==nil {return nil ;};_ffgbg :=*_cadc ;if len (*_cadc )==0{return nil ;};_adgbc :=_ffgbg [:0];if _gfbe ==nil {_gfbe =func (*PdfField )bool {return true };
};var _ffba []*PdfField ;for _ ,_dcgeg :=range _ffgbg {_ddac :=_gfbe (_dcgeg );if _ddac {_ffba =append (_ffba ,_dcgeg );if len (_dcgeg .Kids )> 0{_ffba =append (_ffba ,_dfea (&_dcgeg .Kids ,_gfbe ,_fggfc )...);};};if !_fggfc ||!_ddac ||len (_dcgeg .Kids )> 0{_adgbc =append (_adgbc ,_dcgeg );
};};*_cadc =_adgbc ;return _ffba ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_ffaag *PdfPage )AddContentStreamByString (contentStr string )error {_dfbab ,_fgega :=_fb .MakeStream ([]byte (contentStr ),_fb .NewFlateEncoder ());if _fgega !=nil {return _fgega ;};if _ffaag .Contents ==nil {_ffaag .Contents =_dfbab ;}else {_abcb :=_fb .TraceToDirectObject (_ffaag .Contents );
_deeed ,_fecge :=_abcb .(*_fb .PdfObjectArray );if !_fecge {_deeed =_fb .MakeArray (_abcb );};_deeed .Append (_dfbab );_ffaag .Contents =_deeed ;};return nil ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_acab :=&PdfColorspaceDeviceN {};return _acab };func (_bgf *PdfReader )newPdfAnnotationLinkFromDict (_dee *_fb .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_gdff :=PdfAnnotationLink {};_gdff .A =_dee .Get ("\u0041");
_gdff .Dest =_dee .Get ("\u0044\u0065\u0073\u0074");_gdff .H =_dee .Get ("\u0048");_gdff .PA =_dee .Get ("\u0050\u0041");_gdff .QuadPoints =_dee .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_gdff .BS =_dee .Get ("\u0042\u0053");
return &_gdff ,nil ;};func _gccea (_dbgaf _fb .PdfObject )(*PdfFontDescriptor ,error ){_gddda :=&PdfFontDescriptor {};_dbgaf =_fb .ResolveReference (_dbgaf );if _fadeb ,_dgbfce :=_dbgaf .(*_fb .PdfIndirectObject );_dgbfce {_gddda ._cegce =_fadeb ;_dbgaf =_fadeb .PdfObject ;
};_bbedb ,_dege :=_fb .GetDict (_dbgaf );if !_dege {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_dbgaf );
return nil ,_fb .ErrTypeError ;};if _ebfd :=_bbedb .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_ebfd !=nil {_gddda .FontName =_ebfd ;}else {_ef .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_baega ,_ :=_fb .GetName (_gddda .FontName );if _dffe :=_bbedb .Get ("\u0054\u0079\u0070\u0065");_dffe !=nil {_edbag ,_defb :=_dffe .(*_fb .PdfObjectName );if !_defb ||string (*_edbag )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_ef .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_dffe ,_baega ,_gddda .FontName );
};}else {_ef .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_baega ,_gddda .FontName );
};_gddda .FontFamily =_bbedb .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_gddda .FontStretch =_bbedb .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_gddda .FontWeight =_bbedb .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_gddda .Flags =_bbedb .Get ("\u0046\u006c\u0061g\u0073");_gddda .FontBBox =_bbedb .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_gddda .ItalicAngle =_bbedb .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_gddda .Ascent =_bbedb .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_gddda .Descent =_bbedb .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_gddda .Leading =_bbedb .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_gddda .CapHeight =_bbedb .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_gddda .XHeight =_bbedb .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_gddda .StemV =_bbedb .Get ("\u0053\u0074\u0065m\u0056");_gddda .StemH =_bbedb .Get ("\u0053\u0074\u0065m\u0048");_gddda .AvgWidth =_bbedb .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_gddda .MaxWidth =_bbedb .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_gddda .MissingWidth =_bbedb .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_gddda .FontFile =_bbedb .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_gddda .FontFile2 =_bbedb .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_gddda .FontFile3 =_bbedb .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_gddda .CharSet =_bbedb .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_gddda .Style =_bbedb .Get ("\u0053\u0074\u0079l\u0065");_gddda .Lang =_bbedb .Get ("\u004c\u0061\u006e\u0067");
_gddda .FD =_bbedb .Get ("\u0046\u0044");_gddda .CIDSet =_bbedb .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _gddda .Flags !=nil {if _ddag ,_fcab :=_fb .GetIntVal (_gddda .Flags );_fcab {_gddda ._ccaaf =_ddag ;};};if _gddda .MissingWidth !=nil {if _fcbde ,_dbggf :=_fb .GetNumberAsFloat (_gddda .MissingWidth );
_dbggf ==nil {_gddda ._cdggf =_fcbde ;};};if _gddda .FontFile !=nil {_gaeb ,_debg :=_aaegd (_gddda .FontFile );if _debg !=nil {return _gddda ,_debg ;};_ef .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_gaeb );_gddda .fontFile =_gaeb ;
};if _gddda .FontFile2 !=nil {_dbgd ,_bcgeb :=_bb .NewFontFile2FromPdfObject (_gddda .FontFile2 );if _bcgeb !=nil {return _gddda ,_bcgeb ;};_ef .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_dbgd .String ());_gddda ._gbdd =&_dbgd ;
};return _gddda ,nil ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _fb .PdfObjectArray )(*PdfRectangle ,error ){_gaaaf :=PdfRectangle {};if arr .Len ()!=4{return nil ,_ged .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _afce error ;_gaaaf .Llx ,_afce =_fb .GetNumberAsFloat (arr .Get (0));if _afce !=nil {return nil ,_afce ;};_gaaaf .Lly ,_afce =_fb .GetNumberAsFloat (arr .Get (1));if _afce !=nil {return nil ,_afce ;};_gaaaf .Urx ,_afce =_fb .GetNumberAsFloat (arr .Get (2));
if _afce !=nil {return nil ,_afce ;};_gaaaf .Ury ,_afce =_fb .GetNumberAsFloat (arr .Get (3));if _afce !=nil {return nil ,_afce ;};return &_gaaaf ,nil ;};

// ToInteger convert to an integer format.
func (_cbeg *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_eaeg :=_cb .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_eaeg *_cbeg .A ()),uint32 (_eaeg *_cbeg .B ()),uint32 (_eaeg *_cbeg .C ())};};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_cabc *PdfColorspaceDeviceN )GetNumComponents ()int {return _cabc .ColorantNames .Len ()};func (_afgcgd *PdfWriter )hasObject (_ebdfaf _fb .PdfObject )bool {_ ,_dfgbd :=_afgcgd ._cggbd [_ebdfaf ];return _dfgbd ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_caef pdfCIDFontType2 )GetCharMetrics (code _ff .CharCode )(_bb .CharMetrics ,bool ){if _cgfc ,_agagg :=_caef ._gdgefc [code ];_agagg {return _bb .CharMetrics {Wx :_cgfc },true ;};_fffcb :=rune (code );_ecffd ,_bcag :=_caef ._dbeg [_fffcb ];if !_bcag {_ecffd =int (_caef ._ddgfa );
};return _bb .CharMetrics {Wx :float64 (_ecffd )},true ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_fdab :=NewPdfAnnotation ();_edd :=&PdfAnnotationPolyLine {};_edd .PdfAnnotation =_fdab ;_edd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fdab .SetContext (_edd );return _edd ;};func (_eaac *DSS )addCerts (_fdde [][]byte )([]*_fb .PdfObjectStream ,error ){return _eaac .add (&_eaac .Certs ,_eaac ._gcdc ,_fdde );
};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ffeaa *PdfShadingType6 )ToPdfObject ()_fb .PdfObject {_ffeaa .PdfShading .ToPdfObject ();_cgcbc ,_cdde :=_ffeaa .getShadingDict ();if _cdde !=nil {_ef .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ffeaa .BitsPerCoordinate !=nil {_cgcbc .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ffeaa .BitsPerCoordinate );};if _ffeaa .BitsPerComponent !=nil {_cgcbc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ffeaa .BitsPerComponent );
};if _ffeaa .BitsPerFlag !=nil {_cgcbc .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ffeaa .BitsPerFlag );};if _ffeaa .Decode !=nil {_cgcbc .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ffeaa .Decode );};if _ffeaa .Function !=nil {if len (_ffeaa .Function )==1{_cgcbc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ffeaa .Function [0].ToPdfObject ());
}else {_cdagg :=_fb .MakeArray ();for _ ,_bdgdg :=range _ffeaa .Function {_cdagg .Append (_bdgdg .ToPdfObject ());};_cgcbc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cdagg );};};return _ffeaa ._fcfag ;};func (_afc *PdfReader )newPdfAnnotationFreeTextFromDict (_fdb *_fb .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_becc :=PdfAnnotationFreeText {};
_cdab ,_agbe :=_afc .newPdfAnnotationMarkupFromDict (_fdb );if _agbe !=nil {return nil ,_agbe ;};_becc .PdfAnnotationMarkup =_cdab ;_becc .DA =_fdb .Get ("\u0044\u0041");_becc .Q =_fdb .Get ("\u0051");_becc .RC =_fdb .Get ("\u0052\u0043");_becc .DS =_fdb .Get ("\u0044\u0053");
_becc .CL =_fdb .Get ("\u0043\u004c");_becc .IT =_fdb .Get ("\u0049\u0054");_becc .BE =_fdb .Get ("\u0042\u0045");_becc .RD =_fdb .Get ("\u0052\u0044");_becc .BS =_fdb .Get ("\u0042\u0053");_becc .LE =_fdb .Get ("\u004c\u0045");return &_becc ,nil ;};func _acadc (_adgc *_fb .PdfObjectDictionary ,_efabf *fontCommon )(*pdfCIDFontType2 ,error ){if _efabf ._ccbfd !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_ef .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_efabf );
return nil ,_fb .ErrRangeError ;};_gbbfe :=_fegc (_efabf );_edeca ,_ffcaf :=_fb .GetDict (_adgc .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_ffcaf {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_efabf );
return nil ,ErrRequiredAttributeMissing ;};_gbbfe .CIDSystemInfo =_edeca ;_gbbfe .DW =_adgc .Get ("\u0044\u0057");_gbbfe .W =_adgc .Get ("\u0057");_gbbfe .DW2 =_adgc .Get ("\u0044\u0057\u0032");_gbbfe .W2 =_adgc .Get ("\u0057\u0032");_gbbfe .CIDToGIDMap =_adgc .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_gbbfe ._ddgfa =1000.0;if _aefa ,_aggef :=_fb .GetNumberAsFloat (_gbbfe .DW );_aggef ==nil {_gbbfe ._ddgfa =_aefa ;};_adffa ,_cfcgb :=_cbad (_gbbfe .W );if _cfcgb !=nil {return nil ,_cfcgb ;};if _adffa ==nil {_adffa =map[_ff .CharCode ]float64 {};};_gbbfe ._gdgefc =_adffa ;
return _gbbfe ,nil ;};func _bebfb (_gfccb *_fb .PdfObjectDictionary )(*PdfShadingType1 ,error ){_cadgfa :=PdfShadingType1 {};if _bedee :=_gfccb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bedee !=nil {_bedee =_fb .TraceToDirectObject (_bedee );_ebgce ,_cgcdf :=_bedee .(*_fb .PdfObjectArray );
if !_cgcdf {_ef .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bedee );return nil ,_ged .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_cadgfa .Domain =_ebgce ;};if _eaee :=_gfccb .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_eaee !=nil {_eaee =_fb .TraceToDirectObject (_eaee );_afefdf ,_ccdcdb :=_eaee .(*_fb .PdfObjectArray );if !_ccdcdb {_ef .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eaee );
return nil ,_ged .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_cadgfa .Matrix =_afefdf ;};_gfdfd :=_gfccb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _gfdfd ==nil {_ef .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cadgfa .Function =[]PdfFunction {};if _cebda ,_aacge :=_gfdfd .(*_fb .PdfObjectArray );_aacge {for _ ,_abgdgf :=range _cebda .Elements (){_gcdga ,_efbbb :=_ecae (_abgdgf );if _efbbb !=nil {_ef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_efbbb );
return nil ,_efbbb ;};_cadgfa .Function =append (_cadgfa .Function ,_gcdga );};}else {_cfebb ,_gbbgb :=_ecae (_gfdfd );if _gbbgb !=nil {_ef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbbgb );
return nil ,_gbbgb ;};_cadgfa .Function =append (_cadgfa .Function ,_cfebb );};return &_cadgfa ,nil ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_agce *PdfAppender )Write (w _fe .Writer )error {if _agce ._bdeb {return _ged .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_ecfb :=NewPdfWriter ();_gfb ,_ccaag :=_fb .GetDict (_ecfb ._ebfee );if !_ccaag {return _ged .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_ggfec ,_ccaag :=_gfb .Get ("\u004b\u0069\u0064\u0073").(*_fb .PdfObjectArray );if !_ccaag {return _ged .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_afab ,_ccaag :=_gfb .Get ("\u0043\u006f\u0075n\u0074").(*_fb .PdfObjectInteger );if !_ccaag {return _ged .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_degba :=_agce ._efge ._gfcg ;_cdgg :=_degba .GetTrailer ();if _cdgg ==nil {return _ged .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_befb ,_ccaag :=_fb .GetIndirect (_cdgg .Get ("\u0052\u006f\u006f\u0074"));
if !_ccaag {return _ged .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_ccf ,_ccaag :=_fb .GetDict (_befb );if !_ccaag {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_befb ,*_cdgg );
return _ged .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_eadg :=range _ccf .Keys (){if _ecfb ._cgegde .Get (_eadg )==nil {_gaee :=_ccf .Get (_eadg );_ecfb ._cgegde .Set (_eadg ,_gaee );};};if _agce ._bcc !=nil {_ecfb ._cgegde .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_agce ._bcc .ToPdfObject ());
_agce .updateObjectsDeep (_agce ._bcc .ToPdfObject (),nil );};if _agce ._gacg !=nil {_agce .updateObjectsDeep (_agce ._gacg .ToPdfObject (),nil );_ecfb ._cgegde .Set ("\u0044\u0053\u0053",_agce ._gacg .GetContainingPdfObject ());};if _agce ._eafc !=nil {_ecfb ._cgegde .Set ("\u0050\u0065\u0072m\u0073",_agce ._eafc .ToPdfObject ());
_agce .updateObjectsDeep (_agce ._eafc .ToPdfObject (),nil );};if _ecfb ._befbee .Major < 2{_ecfb .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);_ecfb .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _gfcfa ,_fggbf :=_fb .GetDict (_cdgg .Get ("\u0049\u006e\u0066\u006f"));
_fggbf {if _cgb ,_ceca :=_fb .GetDict (_ecfb ._acfd );_ceca {for _ ,_gfda :=range _gfcfa .Keys (){if _cgb .Get (_gfda )==nil {_cgb .Set (_gfda ,_gfcfa .Get (_gfda ));};};};};if _agce ._aadg !=nil {_ecfb ._acfd =_fb .MakeIndirectObject (_agce ._aadg .ToPdfObject ());
};_agce .addNewObject (_ecfb ._acfd );_agce .addNewObject (_ecfb ._dfcc );_egeg :=false ;if len (_agce ._efge .PageList )!=len (_agce ._bage ){_egeg =true ;}else {for _cddd :=range _agce ._efge .PageList {switch {case _agce ._bage [_cddd ]==_agce ._efge .PageList [_cddd ]:case _agce ._bage [_cddd ]==_agce .Reader .PageList [_cddd ]:default:_egeg =true ;
};if _egeg {break ;};};};if _egeg {_agce .updateObjectsDeep (_ecfb ._ebfee ,nil );}else {_agce ._cbd [_ecfb ._ebfee ]=struct{}{};};_ecfb ._ebfee .ObjectNumber =_agce .Reader ._ebgba .ObjectNumber ;_agce ._cacf [_ecfb ._ebfee ]=_agce .Reader ._ebgba .ObjectNumber ;
_adec :=[]_fb .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_adedg :=range _agce ._bage {_bdfa :=_adedg .ToPdfObject ();
*_afab =*_afab +1;if _dgff ,_aaea :=_bdfa .(*_fb .PdfIndirectObject );_aaea &&_dgff .GetParser ()==_agce ._efge ._gfcg {_ggfec .Append (&_dgff .PdfObjectReference );continue ;};if _feef ,_cacc :=_fb .GetDict (_bdfa );_cacc {_caga ,_begaa :=_feef .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_fb .PdfIndirectObject );
for _begaa {_ef .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_caga );_ccgf ,_fbba :=_caga .PdfObject .(*_fb .PdfObjectDictionary );if !_fbba {return _ged .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_bfgf :=range _adec {_ef .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bfgf );if _feef .Get (_bfgf )!=nil {_ef .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _abag :=_ccgf .Get (_bfgf );_abag !=nil {_ef .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_bfgf );_feef .Set (_bfgf ,_abag );};};_caga ,_begaa =_ccgf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_fb .PdfIndirectObject );
_ef .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ccgf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_feef .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ecfb ._ebfee );};_agce .updateObjectsDeep (_bdfa ,nil );
_ggfec .Append (_bdfa );};if _ ,_ggd :=_agce ._adcb .Seek (0,_fe .SeekStart );_ggd !=nil {return _ggd ;};_bbec :=make (map[SignatureHandler ]_fe .Writer );_aaad :=_fb .MakeArray ();for _ ,_fbac :=range _agce ._cfad {if _cbcc ,_cece :=_fb .GetIndirect (_fbac );
_cece {if _eced ,_eagc :=_cbcc .PdfObject .(*pdfSignDictionary );_eagc {_dbfg :=*_eced ._eegeeg ;var _gffc error ;_bbec [_dbfg ],_gffc =_dbfg .NewDigest (_eced ._bbcec );if _gffc !=nil {return _gffc ;};_aaad .Append (_fb .MakeInteger (0xfffff),_fb .MakeInteger (0xfffff));
};};};if _aaad .Len ()> 0{_aaad .Append (_fb .MakeInteger (0xfffff),_fb .MakeInteger (0xfffff));};for _ ,_edgc :=range _agce ._cfad {if _deded ,_gaa :=_fb .GetIndirect (_edgc );_gaa {if _efff ,_fbbe :=_deded .PdfObject .(*pdfSignDictionary );_fbbe {_efff .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_aaad );
};};};_bbbg :=len (_bbec )> 0;var _aace _fe .Reader =_agce ._adcb ;if _bbbg {_edad :=make ([]_fe .Writer ,0,len (_bbec ));for _ ,_bcff :=range _bbec {_edad =append (_edad ,_bcff );};_aace =_fe .TeeReader (_agce ._adcb ,_fe .MultiWriter (_edad ...));};_cbbgg ,_cedc :=_fe .Copy (w ,_aace );
if _cedc !=nil {return _cedc ;};if len (_agce ._cfad )==0{return nil ;};_ecfb ._dbcbd =_cbbgg ;_ecfb .ObjNumOffset =_agce ._efab ;_ecfb ._gdagb =true ;_ecfb ._bbcfff =_agce ._bbga ;_ecfb ._aeeefd =_agce ._aeb ;_ecfb ._bgbc =_agce ._ffda ;_ecfb ._befbee =_agce ._efge .PdfVersion ();
_ecfb ._adcaa =_agce ._cacf ;_ecfb ._fafcg =_agce ._gagg .GetCrypter ();_ecfb ._dedec =_agce ._gagg .GetEncryptObj ();_ffff :=_agce ._gagg .GetXrefType ();if _ffff !=nil {_caeb :=*_ffff ==_fb .XrefTypeObjectStream ;_ecfb ._dcbcd =&_caeb ;};_ecfb ._cggbd =map[_fb .PdfObject ]struct{}{};
_ecfb ._dbdgd =[]_fb .PdfObject {};for _ ,_ceba :=range _agce ._cfad {if _ ,_dgde :=_agce ._cbd [_ceba ];_dgde {continue ;};_ecfb .addObject (_ceba );};_gbda :=w ;if _bbbg {_gbda =_cbg .NewBuffer (nil );};if _agce ._cab !=""&&_ecfb ._fafcg ==nil {_ecfb .Encrypt ([]byte (_agce ._cab ),[]byte (_agce ._cab ),_agce ._dcac );
};if _eddd :=_cdgg .Get ("\u0049\u0044");_eddd !=nil {if _fbbbg ,_bfdc :=_fb .GetArray (_eddd );_bfdc {_ecfb ._feffc =_fbbbg ;};};if _ccac :=_ecfb .Write (_gbda );_ccac !=nil {return _ccac ;};if _bbbg {_ecdd :=_gbda .(*_cbg .Buffer ).Bytes ();_fgce :=_fb .MakeArray ();
var _ceg []*pdfSignDictionary ;var _beec int64 ;for _ ,_caed :=range _ecfb ._dbdgd {if _fdcf ,_acad :=_fb .GetIndirect (_caed );_acad {if _dcaa ,_befg :=_fdcf .PdfObject .(*pdfSignDictionary );_befg {_ceg =append (_ceg ,_dcaa );_gaggf :=_dcaa ._acccg +int64 (_dcaa ._dabbba );
_fgce .Append (_fb .MakeInteger (_beec ),_fb .MakeInteger (_gaggf -_beec ));_beec =_dcaa ._acccg +int64 (_dcaa ._bgebc );};};};_fgce .Append (_fb .MakeInteger (_beec ),_fb .MakeInteger (_cbbgg +int64 (len (_ecdd ))-_beec ));_ecbe :=[]byte (_fgce .WriteString ());
for _ ,_dbfad :=range _ceg {_egde :=int (_dbfad ._acccg -_cbbgg );for _gdfe :=_dbfad ._cefdg ;_gdfe < _dbfad ._ecfge ;_gdfe ++{_ecdd [_egde +_gdfe ]=' ';};_ffec :=_ecdd [_egde +_dbfad ._cefdg :_egde +_dbfad ._ecfge ];copy (_ffec ,_ecbe );};var _gdb int ;
for _ ,_cdec :=range _ceg {_cbcca :=int (_cdec ._acccg -_cbbgg );_ffdae :=_ecdd [_gdb :_cbcca +_cdec ._dabbba ];_cabe :=*_cdec ._eegeeg ;_bbec [_cabe ].Write (_ffdae );_gdb =_cbcca +_cdec ._bgebc ;};for _ ,_eggce :=range _ceg {_effa :=_ecdd [_gdb :];_eegc :=*_eggce ._eegeeg ;
_bbec [_eegc ].Write (_effa );};for _ ,_becbb :=range _ceg {_dfbg :=int (_becbb ._acccg -_cbbgg );_fcga :=*_becbb ._eegeeg ;_fcgb :=_bbec [_fcga ];if _beab :=_fcga .Sign (_becbb ._bbcec ,_fcgb );_beab !=nil {return _beab ;};_becbb ._bbcec .ByteRange =_fgce ;
_egc :=[]byte (_becbb ._bbcec .Contents .WriteString ());for _edfb :=_becbb ._cefdg ;_edfb < _becbb ._ecfge ;_edfb ++{_ecdd [_dfbg +_edfb ]=' ';};for _bcec :=_becbb ._dabbba ;_bcec < _becbb ._bgebc ;_bcec ++{_ecdd [_dfbg +_bcec ]=' ';};_edfg :=_ecdd [_dfbg +_becbb ._cefdg :_dfbg +_becbb ._ecfge ];
copy (_edfg ,_ecbe );_edfg =_ecdd [_dfbg +_becbb ._dabbba :_dfbg +_becbb ._bgebc ];copy (_edfg ,_egc );};_defe :=_cbg .NewBuffer (_ecdd );_ ,_cedc =_fe .Copy (w ,_defe );if _cedc !=nil {return _cedc ;};};_agce ._bdeb =true ;return nil ;};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _gc .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_fb .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_fb .MakeInteger (int64 (permission )),V :_fb .MakeName ("\u0031\u002e\u0032")};
};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_ebegc *PdfWriter )SetCatalogMetadata (meta _fb .PdfObject )error {if meta ==nil {_ebegc ._cgegde .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_afgdba ,_cbfae :=_fb .GetStream (meta );if !_cbfae {return _ged .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_ebegc .addObject (_afgdba );_ebegc ._cgegde .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_afgdba );return nil ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_dggb *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _fb .GetNumberAsFloat (_dggb .Descent );};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _fe .ReadSeeker )(*PdfFont ,error ){_fadeg ,_cceb :=_ga .ReadAll (r );if _cceb !=nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_cceb );
return nil ,_cceb ;};_cgdgb ,_cceb :=_bb .TtfParse (_cbg .NewReader (_fadeg ));if _cceb !=nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_cceb );
return nil ,_cceb ;};_bbeba :=&pdfCIDFontType2 {fontCommon :fontCommon {_ccbfd :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_fb .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_cgdgb .Widths )<=0{return nil ,_ged .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_gafgd :=1000.0/float64 (_cgdgb .UnitsPerEm );_dbfadc :=_gafgd *float64 (_cgdgb .Widths [0]);_faee :=make (map[rune ]int );_efbb :=make (map[_bb .GID ]int );_gbgb :=_bb .GID (len (_cgdgb .Widths ));for _ggbee ,_bfeb :=range _cgdgb .Chars {if _bfeb > _gbgb -1{continue ;
};_faddc :=int (_gafgd *float64 (_cgdgb .Widths [_bfeb ]));_faee [_ggbee ]=_faddc ;_efbb [_bfeb ]=_faddc ;};_bbeba ._dbeg =_faee ;_bbeba .DW =_fb .MakeInteger (int64 (_dbfadc ));_dceb :=_bcdba (_efbb ,uint16 (_gbgb ));_bbeba .W =_fb .MakeIndirectObject (_dceb );
_fgeg :=_fb .MakeDict ();_fgeg .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_fb .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_fgeg .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_fb .MakeString ("\u0041\u0064\u006fb\u0065"));
_fgeg .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_fb .MakeInteger (0));_bbeba .CIDSystemInfo =_fgeg ;_gbef :=&PdfFontDescriptor {FontName :_fb .MakeName (_cgdgb .PostScriptName ),Ascent :_fb .MakeFloat (_gafgd *float64 (_cgdgb .TypoAscender )),Descent :_fb .MakeFloat (_gafgd *float64 (_cgdgb .TypoDescender )),CapHeight :_fb .MakeFloat (_gafgd *float64 (_cgdgb .CapHeight )),FontBBox :_fb .MakeArrayFromFloats ([]float64 {_gafgd *float64 (_cgdgb .Xmin ),_gafgd *float64 (_cgdgb .Ymin ),_gafgd *float64 (_cgdgb .Xmax ),_gafgd *float64 (_cgdgb .Ymax )}),ItalicAngle :_fb .MakeFloat (_cgdgb .ItalicAngle ),MissingWidth :_fb .MakeFloat (_dbfadc )};
_ddded ,_cceb :=_fb .MakeStream (_fadeg ,_fb .NewFlateEncoder ());if _cceb !=nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_cceb );
return nil ,_cceb ;};_ddded .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fb .MakeInteger (int64 (len (_fadeg ))));_gbef .FontFile2 =_ddded ;if _cgdgb .Bold {_gbef .StemV =_fb .MakeInteger (120);}else {_gbef .StemV =_fb .MakeInteger (70);
};_ceac :=_bfda ;if _cgdgb .IsFixedPitch {_ceac |=_cgffe ;};if _cgdgb .ItalicAngle !=0{_ceac |=_efca ;};_gbef .Flags =_fb .MakeInteger (int64 (_ceac ));_bbeba ._ecaae =_cgdgb .PostScriptName ;_bbeba ._gcge =_gbef ;_bdcg :=pdfFontType0 {fontCommon :fontCommon {_ccbfd :"\u0054\u0079\u0070e\u0030",_ecaae :_cgdgb .PostScriptName },DescendantFont :&PdfFont {_gccg :_bbeba },Encoding :_fb .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_eeaeg :_cgdgb .NewEncoder ()};
if len (_cgdgb .Chars )> 0{_deccf :=make (map[_bde .CharCode ]rune ,len (_cgdgb .Chars ));for _bcef ,_bbgc :=range _cgdgb .Chars {_cggc :=_bde .CharCode (_bbgc );if _efgcf ,_cfcbac :=_deccf [_cggc ];!_cfcbac ||(_cfcbac &&_efgcf > _bcef ){_deccf [_cggc ]=_bcef ;
};};_bdcg ._fadd =_bde .NewToUnicodeCMap (_deccf );};_dbece :=PdfFont {_gccg :&_bdcg };return &_dbece ,nil ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_adddg *PdfReader )Decrypt (password []byte )(bool ,error ){_gccbd ,_eedfb :=_adddg ._gfcg .Decrypt (password );if _eedfb !=nil {return false ,_eedfb ;};if !_gccbd {return false ,nil ;};_eedfb =_adddg .loadStructure ();if _eedfb !=nil {_ef .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_eedfb );
return false ,_eedfb ;};return true ,nil ;};func _dbb (_begbc *_fb .PdfObjectDictionary )*VRI {_dgdd ,_ :=_fb .GetString (_begbc .Get ("\u0054\u0055"));_gegag ,_ :=_fb .GetString (_begbc .Get ("\u0054\u0053"));return &VRI {Cert :_edbg (_begbc .Get ("\u0043\u0065\u0072\u0074")),OCSP :_edbg (_begbc .Get ("\u004f\u0043\u0053\u0050")),CRL :_edbg (_begbc .Get ("\u0043\u0052\u004c")),TU :_dgdd ,TS :_gegag };
};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_aceb *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_edfbc *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;
);

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_cf :=NewPdfAction ();_ffe :=&PdfActionHide {};_ffe .PdfAction =_cf ;_cf .SetContext (_ffe );return _ffe ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_dfcc *_fb .PdfIndirectObject ;_ebfee *_fb .PdfIndirectObject ;_gabbc map[_fb .PdfObject ]struct{};_dbdgd []_fb .PdfObject ;_cggbd map[_fb .PdfObject ]struct{};_ffecf []*_fb .PdfIndirectObject ;_ebgea *PdfOutlineTreeNode ;_cgegde *_fb .PdfObjectDictionary ;
_gadfd []_fb .PdfObject ;_acfd *_fb .PdfIndirectObject ;_cafc *_ae .Writer ;_cbeba int64 ;_efdba error ;_fafcg *_fb .PdfCrypt ;_faddf *_fb .PdfObjectDictionary ;_dedec *_fb .PdfIndirectObject ;_feffc *_fb .PdfObjectArray ;_befbee _fb .Version ;_dcbcd *bool ;
_cbbdb map[_fb .PdfObject ][]*_fb .PdfObjectDictionary ;_dbbg *PdfAcroForm ;_bfcfb Optimizer ;_gfgc StandardApplier ;_agcfd map[int ]crossReference ;_dbcbd int64 ;ObjNumOffset int ;_gdagb bool ;_bbcfff _fb .XrefTable ;_aeeefd int64 ;_bgbc int64 ;_adcaa map[_fb .PdfObject ]int64 ;
_gfcgc map[_fb .PdfObject ]struct{};_ceacdg string ;_ccafa []*PdfOutputIntent ;_bbdgb bool ;_gcdff ,_cfggc string ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_bdag :=map[rune ]int {};for _ ,_gfcde :=range text {_bdag [_gfcde ]++;};return _bdag ;};func _dff (_dbaa *PdfPage )map[_fb .PdfObjectName ]_fb .PdfObject {_adfg :=make (map[_fb .PdfObjectName ]_fb .PdfObject );
if _dbaa .Resources ==nil {return _adfg ;};if _dbaa .Resources .Font !=nil {if _adce ,_egb :=_fb .GetDict (_dbaa .Resources .Font );_egb {for _ ,_badc :=range _adce .Keys (){_adfg [_badc ]=_adce .Get (_badc );};};};if _dbaa .Resources .ExtGState !=nil {if _ecgfe ,_cdeb :=_fb .GetDict (_dbaa .Resources .ExtGState );
_cdeb {for _ ,_faaf :=range _ecgfe .Keys (){_adfg [_faaf ]=_ecgfe .Get (_faaf );};};};if _dbaa .Resources .XObject !=nil {if _dabg ,_gdeb :=_fb .GetDict (_dbaa .Resources .XObject );_gdeb {for _ ,_acdd :=range _dabg .Keys (){_adfg [_acdd ]=_dabg .Get (_acdd );
};};};if _dbaa .Resources .Pattern !=nil {if _ebd ,_decb :=_fb .GetDict (_dbaa .Resources .Pattern );_decb {for _ ,_facgd :=range _ebd .Keys (){_adfg [_facgd ]=_ebd .Get (_facgd );};};};if _dbaa .Resources .Shading !=nil {if _acbf ,_dged :=_fb .GetDict (_dbaa .Resources .Shading );
_dged {for _ ,_acgf :=range _acbf .Keys (){_adfg [_acgf ]=_acbf .Get (_acgf );};};};if _dbaa .Resources .ProcSet !=nil {if _afea ,_acge :=_fb .GetDict (_dbaa .Resources .ProcSet );_acge {for _ ,_eaa :=range _afea .Keys (){_adfg [_eaa ]=_afea .Get (_eaa );
};};};if _dbaa .Resources .Properties !=nil {if _adbg ,_gad :=_fb .GetDict (_dbaa .Resources .Properties );_gad {for _ ,_aegb :=range _adbg .Keys (){_adfg [_aegb ]=_adbg .Get (_aegb );};};};return _adfg ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_fb .PdfObjectArray ;Domain *_fb .PdfObjectArray ;Function []PdfFunction ;Extend *_fb .PdfObjectArray ;};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_bbcff :=NewPdfAnnotation ();_dce :=&PdfAnnotationWidget {};_dce .PdfAnnotation =_bbcff ;_bbcff .SetContext (_dce );return _dce ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_cdccb .Lock ();defer _cdccb .Unlock ();_fdafc =keywords };

// ToPdfObject implements interface PdfModel.
func (_cgad *PdfAnnotationPrinterMark )ToPdfObject ()_fb .PdfObject {_cgad .PdfAnnotation .ToPdfObject ();_gbfd :=_cgad ._fcf ;_eab :=_gbfd .PdfObject .(*_fb .PdfObjectDictionary );_eab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_eab .SetIfNotNil ("\u004d\u004e",_cgad .MN );return _gbfd ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_feee *PdfColorspaceSpecialIndexed )ToPdfObject ()_fb .PdfObject {_aadf :=_fb .MakeArray (_fb .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_aadf .Append (_feee .Base .ToPdfObject ());_aadf .Append (_fb .MakeInteger (int64 (_feee .HiVal )));
_aadf .Append (_feee .Lookup );if _feee ._bdfce !=nil {_feee ._bdfce .PdfObject =_aadf ;return _feee ._bdfce ;};return _aadf ;};func _cadfb ()string {_cdccb .Lock ();defer _cdccb .Unlock ();return _ebgg };

// AddImageResource adds an image to the XObject resources.
func (_bbfdb *PdfPage )AddImageResource (name _fb .PdfObjectName ,ximg *XObjectImage )error {var _eecg *_fb .PdfObjectDictionary ;if _bbfdb .Resources .XObject ==nil {_eecg =_fb .MakeDict ();_bbfdb .Resources .XObject =_eecg ;}else {var _feeagf bool ;_eecg ,_feeagf =(_bbfdb .Resources .XObject ).(*_fb .PdfObjectDictionary );
if !_feeagf {return _ged .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_eecg .Set (name ,ximg .ToPdfObject ());return nil ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_ddgad :=PdfColorLab {l ,a ,b };return &_ddgad };func _bcdba (_cabf map[_bb .GID ]int ,_febbb uint16 )*_fb .PdfObjectArray {_ggbcc :=&_fb .PdfObjectArray {};_gggbf :=_bb .GID (_febbb );for _bfbge :=_bb .GID (0);
_bfbge < _gggbf ;{_fddg ,_dcdf :=_cabf [_bfbge ];if !_dcdf {_bfbge ++;continue ;};_gfgb :=_bfbge ;for _cceba :=_gfgb +1;_cceba < _gggbf ;_cceba ++{if _dbaea ,_cgef :=_cabf [_cceba ];!_cgef ||_fddg !=_dbaea {break ;};_gfgb =_cceba ;};_ggbcc .Append (_fb .MakeInteger (int64 (_bfbge )));
_ggbcc .Append (_fb .MakeInteger (int64 (_gfgb )));_ggbcc .Append (_fb .MakeInteger (int64 (_fddg )));_bfbge =_gfgb +1;};return _ggbcc ;};func _bdaca (_aagbe string )map[string ]string {_bbbb :=_fagad .Split (_aagbe ,-1);_fgeaf :=map[string ]string {};
for _ ,_cgacg :=range _bbbb {_aedb :=_dfgcd .FindStringSubmatch (_cgacg );if _aedb ==nil {continue ;};_fcdbf ,_gcace :=_aedb [1],_aedb [2];_fgeaf [_fcdbf ]=_gcace ;};return _fgeaf ;};func _fcaf (_abfbe *XObjectImage )error {if _abfbe .SMask ==nil {return nil ;
};_ddcdg ,_eedab :=_abfbe .SMask .(*_fb .PdfObjectStream );if !_eedab {_ef .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _fb .ErrTypeError ;
};_dbgfg :=_ddcdg .PdfObjectDictionary ;_eaea :=_dbgfg .Get ("\u004d\u0061\u0074t\u0065");if _eaea ==nil {return nil ;};_ebbdg ,_bcfba :=_effd (_eaea .(*_fb .PdfObjectArray ));if _bcfba !=nil {return _bcfba ;};_fafbfe :=_fb .MakeArrayFromFloats ([]float64 {_ebbdg });
_dbgfg .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_fafbfe );return nil ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_egfc *PdfPage )GetPageAsIndirectObject ()*_fb .PdfIndirectObject {return _egfc ._bgbgb };

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _fb .PdfObject )(*PdfFilespec ,error ){_eegee :=&PdfFilespec {};var _decbe *_fb .PdfObjectDictionary ;if _aacf ,_dgcf :=_fb .GetIndirect (obj );_dgcf {_eegee ._caee =_aacf ;_eebfc ,_bffeb :=_fb .GetDict (_aacf .PdfObject );
if !_bffeb {_ef .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_fb .ErrTypeError ;};_decbe =_eebfc ;}else if _gffa ,_gbfeg :=_fb .GetDict (obj );
_gbfeg {_eegee ._caee =_gffa ;_decbe =_gffa ;}else {_ef .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_fb .ErrTypeError ;};if _decbe ==nil {_ef .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_ged .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _cgfdc :=_decbe .Get ("\u0054\u0079\u0070\u0065");_cgfdc !=nil {_ecff ,_eade :=_cgfdc .(*_fb .PdfObjectName );if !_eade {_ef .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_cgfdc );
}else {if *_ecff !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_ef .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_ecff );
};};};if _bgdeb :=_decbe .Get ("\u0046\u0053");_bgdeb !=nil {_eegee .FS =_bgdeb ;};if _fgdd :=_decbe .Get ("\u0046");_fgdd !=nil {_eegee .F =_fgdd ;};if _gdef :=_decbe .Get ("\u0055\u0046");_gdef !=nil {_eegee .UF =_gdef ;};if _eefbc :=_decbe .Get ("\u0044\u004f\u0053");
_eefbc !=nil {_eegee .DOS =_eefbc ;};if _eeae :=_decbe .Get ("\u004d\u0061\u0063");_eeae !=nil {_eegee .Mac =_eeae ;};if _gdcae :=_decbe .Get ("\u0055\u006e\u0069\u0078");_gdcae !=nil {_eegee .Unix =_gdcae ;};if _bcdfb :=_decbe .Get ("\u0049\u0044");_bcdfb !=nil {_eegee .ID =_bcdfb ;
};if _fdfgf :=_decbe .Get ("\u0056");_fdfgf !=nil {_eegee .V =_fdfgf ;};if _gafa :=_decbe .Get ("\u0045\u0046");_gafa !=nil {_eegee .EF =_gafa ;};if _fafbb :=_decbe .Get ("\u0052\u0046");_fafbb !=nil {_eegee .RF =_fafbb ;};if _gbg :=_decbe .Get ("\u0044\u0065\u0073\u0063");
_gbg !=nil {_eegee .Desc =_gbg ;};if _dfec :=_decbe .Get ("\u0043\u0049");_dfec !=nil {_eegee .CI =_dfec ;};return _eegee ,nil ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_fafgf *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _eeecb []*PdfField ;if _fafgf .AcroForm !=nil {_eeecb =_fafgf .AcroForm .AllFields ();};_edfgg :=make (map[*PdfField ]struct{},len (_eeecb ));for _ ,_faca :=range _eeecb {_edfgg [_faca ]=struct{}{};
};for _ ,_faece :=range _fafgf .PageList {_fcagf ,_dgeba :=_faece .GetAnnotations ();if _dgeba !=nil {return false ,_dgeba ;};for _ ,_fdcga :=range _fcagf {_gfaf ,_badbc :=_fdcga .GetContext ().(*PdfAnnotationWidget );if !_badbc {continue ;};_facca :=_gfaf .Field ();
if _facca ==nil {return true ,nil ;};if _ ,_gafef :=_edfgg [_facca ];!_gafef {return true ,nil ;};};};return false ,nil ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _fb .PdfObject ;AN _fb .PdfObject ;OP _fb .PdfObject ;JS _fb .PdfObject ;};func (_fcdbd *PdfField )inherit (_cage func (*PdfField )bool )(bool ,error ){_aafgc :=map[*PdfField ]bool {};_efbfg :=false ;_gcede :=_fcdbd ;
for _gcede !=nil {if _ ,_bfdfg :=_aafgc [_gcede ];_bfdfg {return false ,_ged .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_gbfc :=_cage (_gcede );if _gbfc {_efbfg =true ;break ;};_aafgc [_gcede ]=true ;
_gcede =_gcede .Parent ;};return _efbfg ,nil ;};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_ageee :=Permissions {};_ageee .DocMDP =docMdp ;_gcbgg :=_fb .MakeDict ();_gcbgg .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_ageee ._gecd =_gcbgg ;return &_ageee ;};

// ToPdfObject implements interface PdfModel.
func (_eegf *PdfAnnotationText )ToPdfObject ()_fb .PdfObject {_eegf .PdfAnnotation .ToPdfObject ();_gca :=_eegf ._fcf ;_ceb :=_gca .PdfObject .(*_fb .PdfObjectDictionary );if _eegf .PdfAnnotationMarkup !=nil {_eegf .PdfAnnotationMarkup .appendToPdfDictionary (_ceb );
};_ceb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0054\u0065\u0078\u0074"));_ceb .SetIfNotNil ("\u004f\u0070\u0065\u006e",_eegf .Open );_ceb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eegf .Name );_ceb .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_eegf .State );
_ceb .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_eegf .StateModel );return _gca ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bbfdg pdfFontType0 )GetRuneMetrics (r rune )(_bb .CharMetrics ,bool ){if _bbfdg .DescendantFont ==nil {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_bbfdg );
return _bb .CharMetrics {},false ;};return _bbfdg .DescendantFont .GetRuneMetrics (r );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_ddgfg *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_daacf :=vals [0];_ddae :=[]float64 {_daacf };
_abgdc ,_cbcfc :=_ddgfg .TintTransform .Evaluate (_ddae );if _cbcfc !=nil {_ef .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_cbcfc );
_ef .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_ddgfg .TintTransform );return nil ,_cbcfc ;};_ef .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_abgdc ,_ddgfg .AlternateSpace );
_ecec ,_cbcfc :=_ddgfg .AlternateSpace .ColorFromFloats (_abgdc );if _cbcfc !=nil {_ef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_cbcfc );
return nil ,_cbcfc ;};return _ecec ,nil ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_bbac *PdfOutline )GetContainingPdfObject ()_fb .PdfObject {return _bbac ._defdb };

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _fb .PdfObject ;Volume _fb .PdfObject ;Synchronous _fb .PdfObject ;Repeat _fb .PdfObject ;Mix _fb .PdfObject ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_cgebf *XObjectImage )GetContainingPdfObject ()_fb .PdfObject {return _cgebf ._dfdfb };

// Register registers (caches) a model to primitive object relationship.
func (_gfdgdf *modelManager )Register (primitive _fb .PdfObject ,model PdfModel ){_gfdgdf ._cfabc [model ]=primitive ;_gfdgdf ._ebfdf [primitive ]=model ;};func (_ddfc *PdfReader )newPdfActionMovieFromDict (_bae *_fb .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_bae .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_bae .Get ("\u0054"),Operation :_bae .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fcbd *PdfColorspaceDeviceRGB )ToPdfObject ()_fb .PdfObject {return _fb .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_ebcab *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};func (_fcgcc *PdfAcroForm )fill (_defbb FieldValueProvider ,_dafdg FieldAppearanceGenerator )error {if _fcgcc ==nil {return nil ;};_fdac ,_cfgg :=_defbb .FieldValues ();if _cfgg !=nil {return _cfgg ;
};for _ ,_aegeb :=range _fcgcc .AllFields (){_agcff :=_aegeb .PartialName ();_gdeba ,_abega :=_fdac [_agcff ];if !_abega {if _caffd ,_ebgef :=_aegeb .FullName ();_ebgef ==nil {_gdeba ,_abega =_fdac [_caffd ];};};if !_abega {_ef .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_agcff );
continue ;};if _dfabb :=_ageb (_aegeb ,_gdeba );_dfabb !=nil {return _dfabb ;};if _dafdg ==nil {continue ;};for _ ,_bfbfc :=range _aegeb .Annotations {_dceee ,_agdgf :=_dafdg .GenerateAppearanceDict (_fcgcc ,_aegeb ,_bfbfc );if _agdgf !=nil {return _agdgf ;
};_bfbfc .AP =_dceee ;_bfbfc .ToPdfObject ();};};return nil ;};func (_efcf *PdfWriter )optimize ()error {if _efcf ._bfcfb ==nil {return nil ;};var _bfbbb error ;_efcf ._dbdgd ,_bfbbb =_efcf ._bfcfb .Optimize (_efcf ._dbdgd );if _bfbbb !=nil {return _bfbbb ;
};_fdeec :=make (map[_fb .PdfObject ]struct{},len (_efcf ._dbdgd ));for _ ,_ebddg :=range _efcf ._dbdgd {_fdeec [_ebddg ]=struct{}{};};_efcf ._cggbd =_fdeec ;return nil ;};

// GetContentStream returns the XObject Form's content stream.
func (_begea *XObjectForm )GetContentStream ()([]byte ,error ){_cgab ,_ebace :=_fb .DecodeStream (_begea ._cabgcd );if _ebace !=nil {return nil ,_ebace ;};return _cgab ,nil ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_efbe :=&XObjectImage {};_dfdec :=&_fb .PdfObjectStream {};_dfdec .PdfObjectDictionary =_fb .MakeDict ();_efbe ._dfdfb =_dfdec ;return _efbe ;};func (_adbaa *PdfWriter )writeTrailer (_bebad int ){_adbaa .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");
for _fcdcb :=0;_fcdcb <=_bebad ;{for ;_fcdcb <=_bebad ;_fcdcb ++{_efce ,_gfcfg :=_adbaa ._agcfd [_fcdcb ];if _gfcfg &&(!_adbaa ._gdagb ||_adbaa ._gdagb &&(_efce .Type ==1&&_efce .Offset >=_adbaa ._bgbc ||_efce .Type ==0)){break ;};};var _beafc int ;for _beafc =_fcdcb +1;
_beafc <=_bebad ;_beafc ++{_dgbdc ,_ffbaa :=_adbaa ._agcfd [_beafc ];if _ffbaa &&(!_adbaa ._gdagb ||_adbaa ._gdagb &&(_dgbdc .Type ==1&&_dgbdc .Offset > _adbaa ._bgbc )){continue ;};break ;};_gafec :=_d .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_fcdcb ,_beafc -_fcdcb );
_adbaa .writeString (_gafec );for _ceeaf :=_fcdcb ;_ceeaf < _beafc ;_ceeaf ++{_gdfd :=_adbaa ._agcfd [_ceeaf ];switch _gdfd .Type {case 0:_gafec =_d .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_adbaa .writeString (_gafec );
case 1:_gafec =_d .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_gdfd .Offset ,0);_adbaa .writeString (_gafec );};};_fcdcb =_beafc +1;};_bacff :=_fb .MakeDict ();_bacff .Set ("\u0049\u006e\u0066\u006f",_adbaa ._acfd );
_bacff .Set ("\u0052\u006f\u006f\u0074",_adbaa ._dfcc );_bacff .Set ("\u0053\u0069\u007a\u0065",_fb .MakeInteger (int64 (_bebad +1)));if _adbaa ._gdagb &&_adbaa ._aeeefd > 0{_bacff .Set ("\u0050\u0072\u0065\u0076",_fb .MakeInteger (_adbaa ._aeeefd ));};
if _adbaa ._fafcg !=nil {_bacff .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_adbaa ._dedec );};if _adbaa ._feffc ==nil &&_adbaa ._gcdff !=""&&_adbaa ._cfggc !=""{_adbaa ._feffc =_fb .MakeArray (_fb .MakeHexString (_adbaa ._gcdff ),_fb .MakeHexString (_adbaa ._cfggc ));
};if _adbaa ._feffc !=nil {_bacff .Set ("\u0049\u0044",_adbaa ._feffc );_ef .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_adbaa ._feffc );};_adbaa .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_adbaa .writeString (_bacff .WriteString ());
_adbaa .writeString ("\u000a");};func (_egga Image )getBase ()_cg .ImageBase {return _cg .NewImageBase (int (_egga .Width ),int (_egga .Height ),int (_egga .BitsPerComponent ),_egga .ColorComponents ,_egga .Data ,_egga ._feec ,_egga ._fcgee );};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _fb .PdfObject ;_bfec []byte ;_bdfce *_fb .PdfIndirectObject ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fbbbc pdfCIDFontType2 )GetRuneMetrics (r rune )(_bb .CharMetrics ,bool ){_bgaae ,_afdfd :=_fbbbc ._dbeg [r ];if !_afdfd {_bdfd ,_dcege :=_fb .GetInt (_fbbbc .DW );if !_dcege {return _bb .CharMetrics {},false ;};_bgaae =int (*_bdfd );};return _bb .CharMetrics {Wx :float64 (_bgaae )},true ;
};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_gfeg *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_fb .PdfObjectString ;Author *_fb .PdfObjectString ;Subject *_fb .PdfObjectString ;Keywords *_fb .PdfObjectString ;Creator *_fb .PdfObjectString ;Producer *_fb .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_fb .PdfObjectName ;
_fgfad *_fb .PdfObjectDictionary ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_fefb *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _fefb .Base ==nil {return nil ,_ged .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _fefb .Base .ColorToRGB (color );};

// ToPdfObject implements interface PdfModel.
func (_bbcg *PdfAnnotationProjection )ToPdfObject ()_fb .PdfObject {_bbcg .PdfAnnotation .ToPdfObject ();_gcb :=_bbcg ._fcf ;_dge :=_gcb .PdfObject .(*_fb .PdfObjectDictionary );_bbcg .PdfAnnotationMarkup .appendToPdfDictionary (_dge );return _gcb ;};func _ffefb (_befcgc _bb .StdFont )pdfFontSimple {_ececd :=_befcgc .Descriptor ();
return pdfFontSimple {fontCommon :fontCommon {_ccbfd :"\u0054\u0079\u0070e\u0031",_ecaae :_befcgc .Name ()},_caafde :_befcgc .GetMetricsTable (),_cefb :&PdfFontDescriptor {FontName :_fb .MakeName (string (_ececd .Name )),FontFamily :_fb .MakeName (_ececd .Family ),FontWeight :_fb .MakeFloat (float64 (_ececd .Weight )),Flags :_fb .MakeInteger (int64 (_ececd .Flags )),FontBBox :_fb .MakeArrayFromFloats (_ececd .BBox [:]),ItalicAngle :_fb .MakeFloat (_ececd .ItalicAngle ),Ascent :_fb .MakeFloat (_ececd .Ascent ),Descent :_fb .MakeFloat (_ececd .Descent ),CapHeight :_fb .MakeFloat (_ececd .CapHeight ),XHeight :_fb .MakeFloat (_ececd .XHeight ),StemV :_fb .MakeFloat (_ececd .StemV ),StemH :_fb .MakeFloat (_ececd .StemH )},_fgbba :_befcgc .Encoder ()};
};var _bdedd =false ;func _fcaa ()string {_cefg :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _gdbcg _cbg .Buffer ;for _ffgbd :=0;_ffgbd < 6;_ffgbd ++{_gdbcg .WriteRune (rune (_cefg [_de .Intn (len (_cefg ))]));
};return _gdbcg .String ();};func (_agded *pdfFontType3 )baseFields ()*fontCommon {return &_agded .fontCommon };

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};func _gdaba ()string {_cdccb .Lock ();defer _cdccb .Unlock ();return _gbeeg };func (_bgeg *PdfReader )loadAction (_dad _fb .PdfObject )(*PdfAction ,error ){if _add ,_cfcd :=_fb .GetIndirect (_dad );
_cfcd {_aeed ,_dedb :=_bgeg .newPdfActionFromIndirectObject (_add );if _dedb !=nil {return nil ,_dedb ;};return _aeed ,nil ;}else if !_fb .IsNullObject (_dad ){return nil ,_ged .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ebga *PdfAnnotationPolygon )ToPdfObject ()_fb .PdfObject {_ebga .PdfAnnotation .ToPdfObject ();_bcfg :=_ebga ._fcf ;_adcc :=_bcfg .PdfObject .(*_fb .PdfObjectDictionary );_ebga .PdfAnnotationMarkup .appendToPdfDictionary (_adcc );_adcc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_adcc .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_ebga .Vertices );_adcc .SetIfNotNil ("\u004c\u0045",_ebga .LE );_adcc .SetIfNotNil ("\u0042\u0053",_ebga .BS );_adcc .SetIfNotNil ("\u0049\u0043",_ebga .IC );_adcc .SetIfNotNil ("\u0042\u0045",_ebga .BE );
_adcc .SetIfNotNil ("\u0049\u0054",_ebga .IT );_adcc .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_ebga .Measure );return _bcfg ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_bddb *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};func (_dgbce *LTV )enable (_cdfb ,_dgabe []*_c .Certificate ,_afcfe string )error {_dbee ,_dbcb ,_cbggc :=_dgbce .buildCertChain (_cdfb ,_dgabe );if _cbggc !=nil {return _cbggc ;
};_abga ,_cbggc :=_dgbce .getCerts (_dbee );if _cbggc !=nil {return _cbggc ;};_fcacd ,_cbggc :=_dgbce .getOCSPs (_dbee ,_dbcb );if _cbggc !=nil {return _cbggc ;};_agga ,_cbggc :=_dgbce .getCRLs (_dbee );if _cbggc !=nil {return _cbggc ;};_acfae :=_dgbce ._bdgd ;
_adcf ,_cbggc :=_acfae .addCerts (_abga );if _cbggc !=nil {return _cbggc ;};_acdde ,_cbggc :=_acfae .addOCSPs (_fcacd );if _cbggc !=nil {return _cbggc ;};_faccg ,_cbggc :=_acfae .addCRLs (_agga );if _cbggc !=nil {return _cbggc ;};if _afcfe !=""{_acfae .VRI [_afcfe ]=&VRI {Cert :_adcf ,OCSP :_acdde ,CRL :_faccg };
};_dgbce ._ccff .SetDSS (_acfae );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_dcged *Permissions )ToPdfObject ()_fb .PdfObject {return _dcged ._gecd };

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_ffgaa *PdfReader )GetEncryptionMethod ()string {_efdcf :=_ffgaa ._gfcg .GetCrypter ();return _efdcf .String ();};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_ffea :_fb .MakeDict ()};
};func (_agdg *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_ffac *XObjectImage )ToImage ()(*Image ,error ){_bedbg :=&Image {};if _ffac .Height ==nil {return nil ,_ged .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_bedbg .Height =*_ffac .Height ;if _ffac .Width ==nil {return nil ,_ged .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_bedbg .Width =*_ffac .Width ;if _ffac .BitsPerComponent ==nil {switch _ffac .Filter .(type ){case *_fb .CCITTFaxEncoder ,*_fb .JBIG2Encoder :_bedbg .BitsPerComponent =1;
case *_fb .LZWEncoder ,*_fb .RunLengthEncoder :_bedbg .BitsPerComponent =8;default:return nil ,_ged .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_bedbg .BitsPerComponent =*_ffac .BitsPerComponent ;};_bedbg .ColorComponents =_ffac .ColorSpace .GetNumComponents ();_ffac ._dfdfb .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_fb .MakeInteger (int64 (_bedbg .ColorComponents )));
_edbbd ,_edfae :=_fb .DecodeStream (_ffac ._dfdfb );if _edfae !=nil {return nil ,_edfae ;};_bedbg .Data =_edbbd ;if _ffac .Decode !=nil {_fegg ,_bdgdff :=_ffac .Decode .(*_fb .PdfObjectArray );if !_bdgdff {_ef .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_ged .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_efcbe ,_efcda :=_fegg .ToFloat64Array ();if _efcda !=nil {return nil ,_efcda ;};_bedbg ._fcgee =_efcbe ;};return _bedbg ,nil ;};func _abdfge (_bfccg *PdfPage ){_bggda :=_fde .GetLicenseKey ();
if _bggda !=nil &&_bggda .IsLicensed (){return ;};_efafe :=_fb .PdfObjectName ("\u0055\u0046\u0031");if !_bfccg .Resources .HasFontByName (_efafe ){_bfccg .Resources .SetFontByName (_efafe ,DefaultFont ().ToPdfObject ());};var _dcga []string ;_dcga =append (_dcga ,"\u0071");
_dcga =append (_dcga ,"\u0042\u0054");_dcga =append (_dcga ,_d .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_efafe .String ()));_dcga =append (_dcga ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_dcga =append (_dcga ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");
_gcdaf :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_dcga =append (_dcga ,_d .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_gcdaf ));_dcga =append (_dcga ,"\u0045\u0054");_dcga =append (_dcga ,"\u0051");_dbagff :=_ba .Join (_dcga ,"\u000a");_bfccg .AddContentStreamByString (_dbagff );_bfccg .ToPdfObject ();
};

// ToPdfObject implements interface PdfModel.
func (_decg *PdfAnnotationCaret )ToPdfObject ()_fb .PdfObject {_decg .PdfAnnotation .ToPdfObject ();_ffde :=_decg ._fcf ;_bede :=_ffde .PdfObject .(*_fb .PdfObjectDictionary );_decg .PdfAnnotationMarkup .appendToPdfDictionary (_bede );_bede .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0043\u0061\u0072e\u0074"));
_bede .SetIfNotNil ("\u0052\u0044",_decg .RD );_bede .SetIfNotNil ("\u0053\u0079",_decg .Sy );return _ffde ;};

// GetContainingPdfObject implements interface PdfModel.
func (_caec *PdfAnnotation )GetContainingPdfObject ()_fb .PdfObject {return _caec ._fcf };

// GetContentStream returns the pattern cell's content stream
func (_gbbge *PdfTilingPattern )GetContentStream ()([]byte ,error ){_gcaaea ,_ ,_bcbde :=_gbbge .GetContentStreamWithEncoder ();return _gcaaea ,_bcbde ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_cfcab *_fb .PdfIndirectObject ;};var (CourierName =_bb .CourierName ;CourierBoldName =_bb .CourierBoldName ;CourierObliqueName =_bb .CourierObliqueName ;CourierBoldObliqueName =_bb .CourierBoldObliqueName ;
HelveticaName =_bb .HelveticaName ;HelveticaBoldName =_bb .HelveticaBoldName ;HelveticaObliqueName =_bb .HelveticaObliqueName ;HelveticaBoldObliqueName =_bb .HelveticaBoldObliqueName ;SymbolName =_bb .SymbolName ;ZapfDingbatsName =_bb .ZapfDingbatsName ;
TimesRomanName =_bb .TimesRomanName ;TimesBoldName =_bb .TimesBoldName ;TimesItalicName =_bb .TimesItalicName ;TimesBoldItalicName =_bb .TimesBoldItalicName ;);

// ToPdfObject implements interface PdfModel.
func (_bcdf *PdfAnnotationScreen )ToPdfObject ()_fb .PdfObject {_bcdf .PdfAnnotation .ToPdfObject ();_ecd :=_bcdf ._fcf ;_dbga :=_ecd .PdfObject .(*_fb .PdfObjectDictionary );_dbga .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_dbga .SetIfNotNil ("\u0054",_bcdf .T );_dbga .SetIfNotNil ("\u004d\u004b",_bcdf .MK );_dbga .SetIfNotNil ("\u0041",_bcdf .A );_dbga .SetIfNotNil ("\u0041\u0041",_bcdf .AA );return _ecd ;};var _fddc =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// WriteString outputs the object as it is to be written to file.
func (_gaccab *pdfSignDictionary )WriteString ()string {_gaccab ._dabbba =0;_gaccab ._bgebc =0;_gaccab ._cefdg =0;_gaccab ._ecfge =0;_fbfbf :=_cbg .NewBuffer (nil );_fbfbf .WriteString ("\u003c\u003c");for _ ,_bbbgc :=range _gaccab .Keys (){_fabf :=_gaccab .Get (_bbbgc );
switch _bbbgc {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_fbfbf .WriteString (_bbbgc .WriteString ());_fbfbf .WriteString ("\u0020");_gaccab ._cefdg =_fbfbf .Len ();_fbfbf .WriteString (_fabf .WriteString ());_fbfbf .WriteString ("\u0020");_gaccab ._ecfge =_fbfbf .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_fbfbf .WriteString (_bbbgc .WriteString ());_fbfbf .WriteString ("\u0020");_gaccab ._dabbba =_fbfbf .Len ();_fbfbf .WriteString (_fabf .WriteString ());_fbfbf .WriteString ("\u0020");_gaccab ._bgebc =_fbfbf .Len ()-1;
default:_fbfbf .WriteString (_bbbgc .WriteString ());_fbfbf .WriteString ("\u0020");_fbfbf .WriteString (_fabf .WriteString ());};};_fbfbf .WriteString ("\u003e\u003e");return _fbfbf .String ();};func (_aecec PdfOutputIntentType )String ()string {switch _aecec {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413";case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";
default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};func (_bbdde *PdfWriter )optimizeDocument ()error {if _bbdde ._gfgc ==nil {return nil ;};_fdabc ,_bgbdc :=_fb .GetDict (_bbdde ._acfd );if !_bgbdc {return _ged .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_egfgd :=_ad .Document {ID :[2]string {_bbdde ._gcdff ,_bbdde ._cfggc },Version :_bbdde ._befbee ,Objects :_bbdde ._dbdgd ,Info :_fdabc ,Crypt :_bbdde ._fafcg ,UseHashBasedID :_bbdde ._bbdgb };if _gcega :=_bbdde ._gfgc .ApplyStandard (&_egfgd );_gcega !=nil {return _gcega ;
};_bbdde ._gcdff ,_bbdde ._cfggc =_egfgd .ID [0],_egfgd .ID [1];_bbdde ._befbee =_egfgd .Version ;_bbdde ._dbdgd =_egfgd .Objects ;_bbdde ._acfd .PdfObject =_egfgd .Info ;_bbdde ._bbdgb =_egfgd .UseHashBasedID ;_bbdde ._fafcg =_egfgd .Crypt ;_ggacf :=make (map[_fb .PdfObject ]struct{},len (_bbdde ._dbdgd ));
for _ ,_cacgg :=range _bbdde ._dbdgd {_ggacf [_cacgg ]=struct{}{};};_bbdde ._cggbd =_ggacf ;return nil ;};

// SetAlpha sets the alpha layer for the image.
func (_acde *Image )SetAlpha (alpha []byte ){_acde ._feec =alpha };

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_gacb :=NewPdfAnnotation ();_gff :=&PdfAnnotationLink {};_gff .PdfAnnotation =_gacb ;_gacb .SetContext (_gff );return _gff ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _fb .PdfObject ;Flags _fb .PdfObject ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_ebbb :=NewPdfAnnotation ();_gacf :=&PdfAnnotationSquiggly {};_gacf .PdfAnnotation =_ebbb ;_gacf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebbb .SetContext (_gacf );return _gacf ;};

// Subtype returns the font's "Subtype" field.
func (_ggffc *PdfFont )Subtype ()string {_bcecd :=_ggffc .baseFields ()._ccbfd ;if _eeagc ,_afeeb :=_ggffc ._gccg .(*pdfFontType0 );_afeeb {_bcecd =_bcecd +"\u003a"+_eeagc .DescendantFont .Subtype ();};return _bcecd ;};

// Items returns all children outline items.
func (_cdac *Outline )Items ()[]*OutlineItem {return _cdac .Entries };

// ToPdfObject implements interface PdfModel.
func (_gfd *PdfActionResetForm )ToPdfObject ()_fb .PdfObject {_gfd .PdfAction .ToPdfObject ();_cga :=_gfd ._db ;_gdf :=_cga .PdfObject .(*_fb .PdfObjectDictionary );_gdf .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeResetForm )));_gdf .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_gfd .Fields );
_gdf .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_gfd .Flags );return _cga ;};func _gbedc (_cgcb _fb .PdfObject )(string ,error ){_cgcb =_fb .TraceToDirectObject (_cgcb );switch _feabd :=_cgcb .(type ){case *_fb .PdfObjectString :return _feabd .Str (),nil ;
case *_fb .PdfObjectStream :_fbdg ,_dgfb :=_fb .DecodeStream (_feabd );if _dgfb !=nil {return "",_dgfb ;};return string (_fbdg ),nil ;};return "",_d .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_cgcb );
};

// SetPatternByName sets a pattern resource specified by keyName.
func (_gdfega *PdfPageResources )SetPatternByName (keyName _fb .PdfObjectName ,pattern _fb .PdfObject )error {if _gdfega .Pattern ==nil {_gdfega .Pattern =_fb .MakeDict ();};_fddbd ,_bacea :=_gdfega .Pattern .(*_fb .PdfObjectDictionary );if !_bacea {return _fb .ErrTypeError ;
};_fddbd .Set (keyName ,pattern );return nil ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_fbbef int ,_eebee *PdfPage );func (_bbdg *PdfReader )newPdfAnnotationLineFromDict (_cfbf *_fb .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_bdd :=PdfAnnotationLine {};_eebef ,_dfad :=_bbdg .newPdfAnnotationMarkupFromDict (_cfbf );
if _dfad !=nil {return nil ,_dfad ;};_bdd .PdfAnnotationMarkup =_eebef ;_bdd .L =_cfbf .Get ("\u004c");_bdd .BS =_cfbf .Get ("\u0042\u0053");_bdd .LE =_cfbf .Get ("\u004c\u0045");_bdd .IC =_cfbf .Get ("\u0049\u0043");_bdd .LL =_cfbf .Get ("\u004c\u004c");
_bdd .LLE =_cfbf .Get ("\u004c\u004c\u0045");_bdd .Cap =_cfbf .Get ("\u0043\u0061\u0070");_bdd .IT =_cfbf .Get ("\u0049\u0054");_bdd .LLO =_cfbf .Get ("\u004c\u004c\u004f");_bdd .CP =_cfbf .Get ("\u0043\u0050");_bdd .Measure =_cfbf .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");
_bdd .CO =_cfbf .Get ("\u0043\u004f");return &_bdd ,nil ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_bfbd *PdfAppender )UpdatePage (page *PdfPage ){_bfbd .updateObjectsDeep (page .ToPdfObject (),nil )};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_fb .PdfObjectArray ;ExtGState _fb .PdfObject ;};

// ToPdfObject converts the font to a PDF representation.
func (_bffa *pdfFontType3 )ToPdfObject ()_fb .PdfObject {if _bffa ._ddafa ==nil {_bffa ._ddafa =&_fb .PdfIndirectObject {};};_dcbd :=_bffa .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_bffa ._ddafa .PdfObject =_dcbd ;if _bffa .FirstChar !=nil {_dcbd .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_bffa .FirstChar );
};if _bffa .LastChar !=nil {_dcbd .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_bffa .LastChar );};if _bffa .Widths !=nil {_dcbd .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_bffa .Widths );};if _bffa .Encoding !=nil {_dcbd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bffa .Encoding );
}else if _bffa ._abgda !=nil {_bageb :=_bffa ._abgda .ToPdfObject ();if _bageb !=nil {_dcbd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bageb );};};if _bffa .FontBBox !=nil {_dcbd .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_bffa .FontBBox );
};if _bffa .FontMatrix !=nil {_dcbd .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_bffa .FontMatrix );};if _bffa .CharProcs !=nil {_dcbd .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_bffa .CharProcs );};if _bffa .Resources !=nil {_dcbd .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_bffa .Resources );
};return _bffa ._ddafa ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};func (_cdggc *PdfWriter )setDocInfo (_fcebg _fb .PdfObject ){if _cdggc .hasObject (_cdggc ._acfd ){delete (_cdggc ._cggbd ,_cdggc ._acfd );delete (_cdggc ._gfcgc ,_cdggc ._acfd );
for _gafde ,_adage :=range _cdggc ._dbdgd {if _adage ==_cdggc ._acfd {copy (_cdggc ._dbdgd [_gafde :],_cdggc ._dbdgd [_gafde +1:]);_cdggc ._dbdgd [len (_cdggc ._dbdgd )-1]=nil ;_cdggc ._dbdgd =_cdggc ._dbdgd [:len (_cdggc ._dbdgd )-1];break ;};};};_dcdfd :=_fb .PdfIndirectObject {};
_dcdfd .PdfObject =_fcebg ;_cdggc ._acfd =&_dcdfd ;_cdggc .addObject (&_dcdfd );};func _bfgb (_gbbdf *_fb .PdfObjectDictionary )(*PdfTilingPattern ,error ){_ebfbc :=&PdfTilingPattern {};_fgfbc :=_gbbdf .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");
if _fgfbc ==nil {_ef .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ceaed ,_bdgdf :=_fgfbc .(*_fb .PdfObjectInteger );if !_bdgdf {_ef .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_fgfbc );
return nil ,_fb .ErrTypeError ;};_ebfbc .PaintType =_ceaed ;_fgfbc =_gbbdf .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _fgfbc ==nil {_ef .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_acefg ,_bdgdf :=_fgfbc .(*_fb .PdfObjectInteger );if !_bdgdf {_ef .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fgfbc );
return nil ,_fb .ErrTypeError ;};_ebfbc .TilingType =_acefg ;_fgfbc =_gbbdf .Get ("\u0042\u0042\u006f\u0078");if _fgfbc ==nil {_ef .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_fgfbc =_fb .TraceToDirectObject (_fgfbc );_cgead ,_bdgdf :=_fgfbc .(*_fb .PdfObjectArray );if !_bdgdf {_ef .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fgfbc );
return nil ,_fb .ErrTypeError ;};_ebgfa ,_agcbae :=NewPdfRectangle (*_cgead );if _agcbae !=nil {_ef .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_agcbae );return nil ,_agcbae ;};_ebfbc .BBox =_ebgfa ;_fgfbc =_gbbdf .Get ("\u0058\u0053\u0074e\u0070");
if _fgfbc ==nil {_ef .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gaced ,_agcbae :=_fb .GetNumberAsFloat (_fgfbc );if _agcbae !=nil {_ef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_gaced );
return nil ,_agcbae ;};_ebfbc .XStep =_fb .MakeFloat (_gaced );_fgfbc =_gbbdf .Get ("\u0059\u0053\u0074e\u0070");if _fgfbc ==nil {_ef .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_ceegf ,_agcbae :=_fb .GetNumberAsFloat (_fgfbc );if _agcbae !=nil {_ef .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_ceegf );
return nil ,_agcbae ;};_ebfbc .YStep =_fb .MakeFloat (_ceegf );_fgfbc =_gbbdf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _fgfbc ==nil {_ef .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gbbdf ,_bdgdf =_fb .TraceToDirectObject (_fgfbc ).(*_fb .PdfObjectDictionary );if !_bdgdf {return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_fgfbc );
};_fdcba ,_agcbae :=NewPdfPageResourcesFromDict (_gbbdf );if _agcbae !=nil {return nil ,_agcbae ;};_ebfbc .Resources =_fdcba ;if _dfbad :=_gbbdf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_dfbad !=nil {_egdfd ,_egdfc :=_dfbad .(*_fb .PdfObjectArray );
if !_egdfc {_ef .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dfbad );return nil ,_fb .ErrTypeError ;};_ebfbc .Matrix =_egdfd ;};return _ebfbc ,nil ;
};func (_cabga *PdfWriter )writeObjectsInStreams (_aged map[_fb .PdfObject ]bool )error {for _ ,_daaag :=range _cabga ._dbdgd {if _aacddc :=_aged [_daaag ];_aacddc {continue ;};_fagabf :=int64 (0);switch _ccgbc :=_daaag .(type ){case *_fb .PdfIndirectObject :_fagabf =_ccgbc .ObjectNumber ;
case *_fb .PdfObjectStream :_fagabf =_ccgbc .ObjectNumber ;case *_fb .PdfObjectStreams :_fagabf =_ccgbc .ObjectNumber ;default:_ef .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_daaag );
return ErrTypeCheck ;};if _cabga ._fafcg !=nil &&_daaag !=_cabga ._dedec {_dceed :=_cabga ._fafcg .Encrypt (_daaag ,_fagabf ,0);if _dceed !=nil {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_dceed );
return _dceed ;};};_cabga .writeObject (int (_fagabf ),_daaag );};return nil ;};

// ToInteger convert to an integer format.
func (_febc *PdfColorLab )ToInteger (bits int )[3]uint32 {_gaac :=_cb .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gaac *_febc .L ()),uint32 (_gaac *_febc .A ()),uint32 (_gaac *_febc .B ())};};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_gedd :=NewPdfAction ();_fee :=&PdfActionGoToR {};_fee .PdfAction =_gedd ;_gedd .SetContext (_fee );return _fee ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _fb .PdfObject ;IC _fb .PdfObject ;BE _fb .PdfObject ;RD _fb .PdfObject ;};func (_fcgbaa *PdfFont )baseFields ()*fontCommon {if _fcgbaa ._gccg ==nil {_ef .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _fcgbaa ._gccg .baseFields ();};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_acecd *PdfShadingType1 )ToPdfObject ()_fb .PdfObject {_acecd .PdfShading .ToPdfObject ();_ecbbca ,_cbacb :=_acecd .getShadingDict ();if _cbacb !=nil {_ef .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _acecd .Domain !=nil {_ecbbca .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_acecd .Domain );};if _acecd .Matrix !=nil {_ecbbca .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_acecd .Matrix );};if _acecd .Function !=nil {if len (_acecd .Function )==1{_ecbbca .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_acecd .Function [0].ToPdfObject ());
}else {_cgecd :=_fb .MakeArray ();for _ ,_faegfd :=range _acecd .Function {_cgecd .Append (_faegfd .ToPdfObject ());};_ecbbca .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cgecd );};};return _acecd ._fcfag ;};func _adbgf (_fbee *_fb .PdfObjectDictionary ,_ecdce *fontCommon )(*pdfFontType0 ,error ){_gaea ,_dfada :=_fb .GetArray (_fbee .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_dfada {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_ecdce );
return nil ,_fb .ErrRangeError ;};if _gaea .Len ()!=1{_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_gaea .Len ());return nil ,_fb .ErrRangeError ;
};_ccbac ,_eegfg :=_fgfec (_gaea .Get (0),false );if _eegfg !=nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_eegfg ,_ecdce );
return nil ,_eegfg ;};_gfbb :=_dgdeb (_ecdce );_gfbb .DescendantFont =_ccbac ;_ecdg ,_dfada :=_fb .GetNameVal (_fbee .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _dfada {if _ecdg =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_ecdg =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_gfbb ._eeaeg =_ff .NewIdentityTextEncoder (_ecdg );
}else if _bde .IsPredefinedCMap (_ecdg ){_gfbb ._dcfg ,_eegfg =_bde .LoadPredefinedCMap (_ecdg );if _eegfg !=nil {_ef .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_ecdg ,_eegfg );
};}else {_ef .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_ecdg );};};if _eebcb :=_ccbac .baseFields ()._fadd ;_eebcb !=nil {if _cbgf :=_eebcb .Name ();_cbgf =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_cbgf =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_cbgf =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_cbgf =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_gfbb ._eeaeg =_ff .NewCMapEncoder (_ecdg ,_gfbb ._dcfg ,_eebcb );
};};return _gfbb ,nil ;};

// ToPdfObject converts date to a PDF string object.
func (_eddgf *PdfDate )ToPdfObject ()_fb .PdfObject {_cbgafb :=_d .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_eddgf ._bccgd ,_eddgf ._ecccc ,_eddgf ._bcgga ,_eddgf ._gbfad ,_eddgf ._gaffc ,_eddgf ._cbbgca ,_eddgf ._aadde ,_eddgf ._cdedf ,_eddgf ._dbdge );
return _fb .MakeString (_cbgafb );};func (_adeefe *PdfWriter )setCatalogVersion (){_adeefe ._cgegde .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_fb .MakeName (_d .Sprintf ("\u0025\u0064\u002e%\u0064",_adeefe ._befbee .Major ,_adeefe ._befbee .Minor )));
};

// ToPdfObject implements interface PdfModel.
func (_fgf *PdfActionRendition )ToPdfObject ()_fb .PdfObject {_fgf .PdfAction .ToPdfObject ();_bfe :=_fgf ._db ;_bga :=_bfe .PdfObject .(*_fb .PdfObjectDictionary );_bga .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeRendition )));_bga .SetIfNotNil ("\u0052",_fgf .R );
_bga .SetIfNotNil ("\u0041\u004e",_fgf .AN );_bga .SetIfNotNil ("\u004f\u0050",_fgf .OP );_bga .SetIfNotNil ("\u004a\u0053",_fgf .JS );return _bfe ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_bdceg *PdfWriter )SetPageLabels (pageLabels _fb .PdfObject )error {if pageLabels ==nil {return nil ;};_ef .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_bdceg ._cgegde .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _bdceg .addObjects (pageLabels );};func (_aaaec *PdfSignature )extractChainFromCert ()([]*_c .Certificate ,error ){var _aeedd *_fb .PdfObjectArray ;
switch _fcbef :=_aaaec .Cert .(type ){case *_fb .PdfObjectString :_aeedd =_fb .MakeArray (_fcbef );case *_fb .PdfObjectArray :_aeedd =_fcbef ;default:return nil ,_d .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_fcbef );
};var _eadd _cbg .Buffer ;for _ ,_fcbed :=range _aeedd .Elements (){_adag ,_abgcgf :=_fb .GetString (_fcbed );if !_abgcgf {return nil ,_d .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_fcbed );
};if _ ,_ffag :=_eadd .Write (_adag .Bytes ());_ffag !=nil {return nil ,_ffag ;};};return _c .ParseCertificates (_eadd .Bytes ());};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_ebcc *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_ebcc .updateObjectsDeep (dss .ToPdfObject (),nil );};_ebcc ._gacg =dss ;};func (_addfg *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// ToPdfObject implements interface PdfModel.
func (_cafg *PdfAnnotationLine )ToPdfObject ()_fb .PdfObject {_cafg .PdfAnnotation .ToPdfObject ();_gdde :=_cafg ._fcf ;_cecc :=_gdde .PdfObject .(*_fb .PdfObjectDictionary );_cafg .PdfAnnotationMarkup .appendToPdfDictionary (_cecc );_cecc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u004c\u0069\u006e\u0065"));
_cecc .SetIfNotNil ("\u004c",_cafg .L );_cecc .SetIfNotNil ("\u0042\u0053",_cafg .BS );_cecc .SetIfNotNil ("\u004c\u0045",_cafg .LE );_cecc .SetIfNotNil ("\u0049\u0043",_cafg .IC );_cecc .SetIfNotNil ("\u004c\u004c",_cafg .LL );_cecc .SetIfNotNil ("\u004c\u004c\u0045",_cafg .LLE );
_cecc .SetIfNotNil ("\u0043\u0061\u0070",_cafg .Cap );_cecc .SetIfNotNil ("\u0049\u0054",_cafg .IT );_cecc .SetIfNotNil ("\u004c\u004c\u004f",_cafg .LLO );_cecc .SetIfNotNil ("\u0043\u0050",_cafg .CP );_cecc .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cafg .Measure );
_cecc .SetIfNotNil ("\u0043\u004f",_cafg .CO );return _gdde ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_fb .PdfObjectArray ;TI *_fb .PdfObjectInteger ;I *_fb .PdfObjectArray ;};var (_ceeca =_ca .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_dfgcd =_ca .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_dadb =_ca .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_egabb ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_eaaeb ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_febeb ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_adge *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_fb .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_ged .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_gfee :=&PdfColorPattern {};_daad ,_fgccc :=objects [len (objects )-1].(*_fb .PdfObjectName );if !_fgccc {_ef .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_gfee .PatternName =*_daad ;if len (objects )> 1{_dbefb :=objects [0:len (objects )-1];if _adge .UnderlyingCS ==nil {_ef .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_ged .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_bfac ,_dcce :=_adge .UnderlyingCS .ColorFromPdfObjects (_dbefb );if _dcce !=nil {_ef .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_dcce );
return nil ,_dcce ;};_gfee .Color =_bfac ;};return _gfee ,nil ;};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _fb .PdfObject ;BS _fb .PdfObject ;};

// Height returns the height of `rect`.
func (_aggcb *PdfRectangle )Height ()float64 {return _cb .Abs (_aggcb .Ury -_aggcb .Lly )};func (_cgagg *PdfReader )newPdfSignatureReferenceFromDict (_cagfa *_fb .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _dccba ,_bcgda :=_cgagg ._bcbaa .GetModelFromPrimitive (_cagfa ).(*PdfSignatureReference );
_bcgda {return _dccba ,nil ;};_fdfba :=&PdfSignatureReference {_gaagg :_cagfa ,Data :_cagfa .Get ("\u0044\u0061\u0074\u0061")};var _fcefb bool ;_fdfba .Type ,_ =_fb .GetName (_cagfa .Get ("\u0054\u0079\u0070\u0065"));_fdfba .TransformMethod ,_fcefb =_fb .GetName (_cagfa .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_fcefb {_ef .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_fdfba .TransformParams ,_ =_fb .GetDict (_cagfa .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_fdfba .DigestMethod ,_ =_fb .GetName (_cagfa .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _fdfba ,nil ;};func (_dbfaa *PdfAcroForm )fillImageWithAppearance (_bdda FieldImageProvider ,_fbdb FieldAppearanceGenerator )error {if _dbfaa ==nil {return nil ;};_ffeg ,_ebgb :=_bdda .FieldImageValues ();if _ebgb !=nil {return _ebgb ;};for _ ,_beed :=range _dbfaa .AllFields (){_cagfb :=_beed .PartialName ();
_acfb ,_cdaa :=_ffeg [_cagfb ];if !_cdaa {if _caafg ,_cgegd :=_beed .FullName ();_cgegd ==nil {_acfb ,_cdaa =_ffeg [_caafg ];};};if !_cdaa {_ef .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_cagfb );
continue ;};switch _fbcd :=_beed .GetContext ().(type ){case *PdfFieldButton :if _fbcd .IsPush (){_fbcd .SetFillImage (_acfb );};};if _fbdb ==nil {continue ;};for _ ,_cgag :=range _beed .Annotations {_cgcca ,_fefc :=_fbdb .GenerateAppearanceDict (_dbfaa ,_beed ,_cgag );
if _fefc !=nil {return _fefc ;};_cgag .AP =_cgcca ;_cgag .ToPdfObject ();};};return nil ;};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_ceggd *PdfTransformParamsDocMDP )String ()string {return _d .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_ceggd .Type ,_ceggd .P ,_ceggd .V );};

// String returns the name of the colorspace (DeviceN).
func (_cbaf *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_dfbgg *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_egdb :=0.3*_dfbgg .R ()+0.59*_dfbgg .G ()+0.11*_dfbgg .B ();_egdb =_cb .Min (_cb .Max (_egdb ,0.0),1.0);return NewPdfColorDeviceGray (_egdb );};

// ToPdfObject implements interface PdfModel.
func (_fdgcd *PdfAnnotationMovie )ToPdfObject ()_fb .PdfObject {_fdgcd .PdfAnnotation .ToPdfObject ();_gbbg :=_fdgcd ._fcf ;_gfcb :=_gbbg .PdfObject .(*_fb .PdfObjectDictionary );_gfcb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u004d\u006f\u0076i\u0065"));
_gfcb .SetIfNotNil ("\u0054",_fdgcd .T );_gfcb .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_fdgcd .Movie );_gfcb .SetIfNotNil ("\u0041",_fdgcd .A );return _gbbg ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// GetNumComponents returns the number of color components (3 for Lab).
func (_adedc *PdfColorLab )GetNumComponents ()int {return 3};func (_ccca *PdfAppender )replaceObject (_cdeeg ,_bbbc _fb .PdfObject ){switch _bebd :=_cdeeg .(type ){case *_fb .PdfIndirectObject :_ccca ._cacf [_bbbc ]=_bebd .ObjectNumber ;case *_fb .PdfObjectStream :_ccca ._cacf [_bbbc ]=_bebd .ObjectNumber ;
};};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_fb .PdfObjectStream ;Data []byte ;_gbce *_fb .PdfIndirectObject ;_fafd *_fb .PdfObjectStream ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_gabeg *PdfPage )ToPdfObject ()_fb .PdfObject {_cfbbe :=_gabeg ._bgbgb ;_gabeg .GetPageDict ();return _cfbbe ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_aadae *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};func (_fcgdc *PdfPattern )getDict ()*_fb .PdfObjectDictionary {if _ebef ,_gbddf :=_fcgdc ._bfgge .(*_fb .PdfIndirectObject );_gbddf {_aecbg ,_edbcf :=_ebef .PdfObject .(*_fb .PdfObjectDictionary );
if !_edbcf {return nil ;};return _aecbg ;}else if _ebag ,_ffdda :=_fcgdc ._bfgge .(*_fb .PdfObjectStream );_ffdda {return _ebag .PdfObjectDictionary ;}else {_ef .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_fcgdc ._bfgge );
return nil ;};};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_edbea *PdfPageResources )GetContainingPdfObject ()_fb .PdfObject {return _edbea ._cdgfd };

// SetContext sets the sub action (context).
func (_bad *PdfAction )SetContext (ctx PdfModel ){_bad ._gae =ctx };

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _fb .PdfObject ;Open _fb .PdfObject ;};func (_aac *PdfReader )newPdfAnnotationProjectionFromDict (_ebc *_fb .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_eec :=&PdfAnnotationProjection {};
_acd ,_aegg :=_aac .newPdfAnnotationMarkupFromDict (_ebc );if _aegg !=nil {return nil ,_aegg ;};_eec .PdfAnnotationMarkup =_acd ;return _eec ,nil ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_aedg []byte )(_ccce int ,_aced error );};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_ebbbg *Image )SetSamples (samples []uint32 ){if _ebbbg .BitsPerComponent < 8{samples =_ebbbg .samplesAddPadding (samples );};_fdcda :=_faf .ResampleUint32 (samples ,int (_ebbbg .BitsPerComponent ),8);_cecfd :=make ([]byte ,len (_fdcda ));for _cgfba ,_fgfag :=range _fdcda {_cecfd [_cgfba ]=byte (_fgfag );
};_ebbbg .Data =_cecfd ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };func (_dafe *PdfReader )newPdfAnnotationPolygonFromDict (_bca *_fb .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_afg :=PdfAnnotationPolygon {};_cdfe ,_adc :=_dafe .newPdfAnnotationMarkupFromDict (_bca );
if _adc !=nil {return nil ,_adc ;};_afg .PdfAnnotationMarkup =_cdfe ;_afg .Vertices =_bca .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_afg .LE =_bca .Get ("\u004c\u0045");_afg .BS =_bca .Get ("\u0042\u0053");_afg .IC =_bca .Get ("\u0049\u0043");
_afg .BE =_bca .Get ("\u0042\u0045");_afg .IT =_bca .Get ("\u0049\u0054");_afg .Measure =_bca .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_afg ,nil ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_aebc *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_fb .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_geed ,_eaebf :=_fb .GetNumbersAsFloat (objects );
if _eaebf !=nil {return nil ,_eaebf ;};return _aebc .ColorFromFloats (_geed );};

// ToPdfObject implements interface PdfModel.
func (_dfg *PdfActionJavaScript )ToPdfObject ()_fb .PdfObject {_dfg .PdfAction .ToPdfObject ();_eee :=_dfg ._db ;_dfcb :=_eee .PdfObject .(*_fb .PdfObjectDictionary );_dfcb .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeJavaScript )));_dfcb .SetIfNotNil ("\u004a\u0053",_dfg .JS );
return _eee ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_caadg *PdfReader )PageFromIndirectObject (ind *_fb .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_caadg .PageList )!=len (_caadg ._gcbf ){return nil ,0,_ged .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _dddgcb ,_gaccgb :=range _caadg ._gcbf {if _gaccgb ==ind {return _caadg .PageList [_dddgcb ],_dddgcb +1,nil ;};};return nil ,0,_ged .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func (_fabg *PdfAppender )addNewObject (_abe _fb .PdfObject ){if _ ,_edbc :=_fabg ._fcb [_abe ];
!_edbc {_fabg ._cfad =append (_fabg ._cfad ,_abe );_fabg ._fcb [_abe ]=struct{}{};};};func (_aba *PdfReader )newPdfActionGotoEFromDict (_bfg *_fb .PdfObjectDictionary )(*PdfActionGoToE ,error ){_dfac ,_cee :=_agad (_bfg .Get ("\u0046"));if _cee !=nil {return nil ,_cee ;
};return &PdfActionGoToE {D :_bfg .Get ("\u0044"),NewWindow :_bfg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_bfg .Get ("\u0054"),F :_dfac },nil ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};type fontFile struct{_cacb string ;_dceec string ;_bcee _ff .SimpleEncoder ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_agg :=NewPdfAnnotation ();_ecbbc :=&PdfAnnotationSquare {};_ecbbc .PdfAnnotation =_agg ;_ecbbc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_agg .SetContext (_ecbbc );return _ecbbc ;};func (_gcaae *PdfReader )loadAnnotations (_bdbcbb _fb .PdfObject )([]*PdfAnnotation ,error ){_cadb ,_cecfg :=_fb .GetArray (_bdbcbb );
if !_cecfg {return nil ,_d .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _badb []*PdfAnnotation ;for _ ,_ggdae :=range _cadb .Elements (){_ggdae =_fb .ResolveReference (_ggdae );
if _ ,_dedc :=_ggdae .(*_fb .PdfObjectNull );_dedc {continue ;};_agbed ,_beade :=_ggdae .(*_fb .PdfObjectDictionary );_dggc ,_eebaf :=_ggdae .(*_fb .PdfIndirectObject );if _beade {_dggc =&_fb .PdfIndirectObject {};_dggc .PdfObject =_agbed ;}else {if !_eebaf {return nil ,_d .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_adfgc ,_bdcdc :=_gcaae .newPdfAnnotationFromIndirectObject (_dggc );if _bdcdc !=nil {return nil ,_bdcdc ;};switch _aafae :=_adfgc .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_fabef :=range _gcaae .AcroForm .AllFields (){if _fabef ._ecgg ==_aafae .Parent {_aafae ._fcc =_fabef ;
break ;};};};if _adfgc !=nil {_badb =append (_badb ,_adfgc );};};return _badb ,nil ;};var _dgcad =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// Encoder returns the font's text encoder.
func (_bbeb *PdfFont )Encoder ()_ff .TextEncoder {_baag :=_bbeb .actualFont ();if _baag ==nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_bbeb ._gccg );
return nil ;};return _baag .Encoder ();};func _bgga (_bagg []byte )(_fdedg ,_eaaad string ,_faeg error ){_ef .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_bagg ));_gfdac :=_ceeca .FindIndex (_bagg );
if _gfdac ==nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");return "","",_fb .ErrTypeError ;
};_cegg :=_gfdac [1];_fgbfe :=_ba .Index (string (_bagg [_cegg :]),_egabb );if _fgbfe < 0{_fdedg =string (_bagg [_cegg :]);return _fdedg ,"",nil ;};_eeagf :=_cegg +_fgbfe ;_fdedg =string (_bagg [_cegg :_eeagf ]);_aabgf :=_eeagf ;_fgbfe =_ba .Index (string (_bagg [_aabgf :]),_eaaeb );
if _fgbfe < 0{_ef .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_faeg );return "","",_fb .ErrTypeError ;};_fgceb :=_aabgf +_fgbfe ;
_eaaad =string (_bagg [_aabgf :_fgceb ]);return _fdedg ,_eaaad ,nil ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_bcdag *PdfShading )GetContext ()PdfModel {return _bcdag ._efda };

// IsColored specifies if the pattern is colored.
func (_feefd *PdfTilingPattern )IsColored ()bool {if _feefd .PaintType !=nil &&*_feefd .PaintType ==1{return true ;};return false ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_gbdca *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_faaeee :=_gbdca ._gfcg .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _faaeee {return nil ,_ged .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_faaeee {return _gbdca ,nil ;};if _gbdca ._aeabd [revisionNumber ]!=nil {return _gbdca ._aeabd [revisionNumber ],nil ;};_feaed :=_gbdca ;for _dgbcc :=_faaeee -1;_dgbcc >=revisionNumber ;_dgbcc --{_dfbb ,_cbcff :=_feaed .GetPreviousRevision ();
if _cbcff !=nil {return nil ,_cbcff ;};_gbdca ._aeabd [_dgbcc ]=_dfbb ;_feaed =_dfbb ;};return _feaed ,nil ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_dfgeg *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _dfgeg ._dgcfa ==nil {_dfgeg .GetAnnotations ();};_dfgeg ._dgcfa =append (_dfgeg ._dgcfa ,annot );};func (_deag *PdfReader )newPdfAnnotationSquigglyFromDict (_gecb *_fb .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_cecd :=PdfAnnotationSquiggly {};
_bgde ,_fdeg :=_deag .newPdfAnnotationMarkupFromDict (_gecb );if _fdeg !=nil {return nil ,_fdeg ;};_cecd .PdfAnnotationMarkup =_bgde ;_cecd .QuadPoints =_gecb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_cecd ,nil ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_dfdc *PdfPage )error ;};

// ToPdfObject implements interface PdfModel.
func (_fdcd *PdfAnnotationUnderline )ToPdfObject ()_fb .PdfObject {_fdcd .PdfAnnotation .ToPdfObject ();_dbgf :=_fdcd ._fcf ;_agcb :=_dbgf .PdfObject .(*_fb .PdfObjectDictionary );_fdcd .PdfAnnotationMarkup .appendToPdfDictionary (_agcb );_agcb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_agcb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fdcd .QuadPoints );return _dbgf ;};func (_bfedd *PdfWriter )writeObject (_gabcc int ,_bgcgf _fb .PdfObject ){_ef .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_gabcc );
if _ceddd ,_aefdc :=_bgcgf .(*_fb .PdfIndirectObject );_aefdc {_bfedd ._agcfd [_gabcc ]=crossReference {Type :1,Offset :_bfedd ._cbeba ,Generation :_ceddd .GenerationNumber };_ecea :=_d .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gabcc );
if _abggc ,_ddfgad :=_ceddd .PdfObject .(*pdfSignDictionary );_ddfgad {_abggc ._acccg =_bfedd ._cbeba +int64 (len (_ecea ));};if _ceddd .PdfObject ==nil {_ef .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_ceddd .PdfObject =_fb .MakeNull ();};_ecea +=_ceddd .PdfObject .WriteString ();_ecea +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_bfedd .writeString (_ecea );return ;};if _faedg ,_ecedf :=_bgcgf .(*_fb .PdfObjectStream );_ecedf {_bfedd ._agcfd [_gabcc ]=crossReference {Type :1,Offset :_bfedd ._cbeba ,Generation :_faedg .GenerationNumber };
_ccfa :=_d .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gabcc );_ccfa +=_faedg .PdfObjectDictionary .WriteString ();_ccfa +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_bfedd .writeString (_ccfa );_bfedd .writeBytes (_faedg .Stream );
_bfedd .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _gbdgc ,_cfefc :=_bgcgf .(*_fb .PdfObjectStreams );_cfefc {_bfedd ._agcfd [_gabcc ]=crossReference {Type :1,Offset :_bfedd ._cbeba ,Generation :_gbdgc .GenerationNumber };
_aeadc :=_d .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gabcc );var _caeba []string ;var _gbfdg string ;var _ggec int64 ;for _ccgc ,_efadd :=range _gbdgc .Elements (){_affa ,_fgab :=_efadd .(*_fb .PdfIndirectObject );if !_fgab {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_gabcc ,_efadd );
continue ;};_acabc :=_affa .PdfObject .WriteString ()+"\u0020";_gbfdg =_gbfdg +_acabc ;_caeba =append (_caeba ,_d .Sprintf ("\u0025\u0064\u0020%\u0064",_affa .ObjectNumber ,_ggec ));_bfedd ._agcfd [int (_affa .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_gabcc ,Index :_ccgc };
_ggec =_ggec +int64 (len ([]byte (_acabc )));};_bafaffd :=_ba .Join (_caeba ,"\u0020")+"\u0020";_gecbc :=_fb .NewFlateEncoder ();_abbba :=_gecbc .MakeStreamDict ();_abbba .Set (_fb .PdfObjectName ("\u0054\u0079\u0070\u0065"),_fb .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_fgbcd :=int64 (_gbdgc .Len ());_abbba .Set (_fb .PdfObjectName ("\u004e"),_fb .MakeInteger (_fgbcd ));_dcgee :=int64 (len (_bafaffd ));_abbba .Set (_fb .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_fb .MakeInteger (_dcgee ));_ceaedb ,_ :=_gecbc .EncodeBytes ([]byte (_bafaffd +_gbfdg ));
_ecegb :=int64 (len (_ceaedb ));_abbba .Set (_fb .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_fb .MakeInteger (_ecegb ));_aeadc +=_abbba .WriteString ();_aeadc +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_bfedd .writeString (_aeadc );
_bfedd .writeBytes (_ceaedb );_bfedd .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_bfedd .writeString (_bgcgf .WriteString ());};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ddffe *PdfColorspaceSpecialSeparation )ToPdfObject ()_fb .PdfObject {_egcf :=_fb .MakeArray (_fb .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_egcf .Append (_ddffe .ColorantName );_egcf .Append (_ddffe .AlternateSpace .ToPdfObject ());
_egcf .Append (_ddffe .TintTransform .ToPdfObject ());if _ddffe ._gfce !=nil {_ddffe ._gfce .PdfObject =_egcf ;return _ddffe ._gfce ;};return _egcf ;};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_fb .PdfParser ;DiffPolicy _gc .DiffPolicy ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_fb .PdfIndirectObject )*PdfOutlineItem {_efdfe :=PdfOutlineItem {};_efdfe ._acgg =&_efdfe ;_efdfe .Title =_fb .MakeString (title );_edfc :=_fb .MakeArray ();_edfc .Append (page );_edfc .Append (_fb .MakeName ("\u0046\u0069\u0074"));
_efdfe .Dest =_edfc ;return &_efdfe ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_dbcfc *PdfPageResources )SetShadingByName (keyName _fb .PdfObjectName ,shadingObj _fb .PdfObject )error {if _dbcfc .Shading ==nil {_dbcfc .Shading =_fb .MakeDict ();};_fddbc ,_gbaag :=_dbcfc .Shading .(*_fb .PdfObjectDictionary );if !_gbaag {return _fb .ErrTypeError ;
};_fddbc .Set (keyName ,shadingObj );return nil ;};func (_ffce fontCommon )coreString ()string {_ebbaf :="";if _ffce ._gcge !=nil {_ebbaf =_ffce ._gcge .String ();};return _d .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_ffce ._ccbfd ,_ffce ._ecaae ,_ffce ._bdfg ,_ffce ._dceeg ,_ffce ._cccfe !=nil ,_ffce .fontFlags (),_ebbaf );
};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_gbaea *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_gbaea .ToPdfOutline ().PdfOutlineTreeNode ;};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_fb .PdfObject ,error );};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_gbgbd *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _cfdag []*PdfOutlineTreeNode ;var _ddaeg []string ;var _aafga func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_aafga =func (_ggcda *PdfOutlineTreeNode ,_adccg *[]*PdfOutlineTreeNode ,_gbcec *[]string ,_facgeg int ){if _ggcda ==nil {return ;
};if _ggcda ._acgg ==nil {_ef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_cabb ,_dfgd :=_ggcda ._acgg .(*PdfOutlineItem );if _dfgd {*_adccg =append (*_adccg ,&_cabb .PdfOutlineTreeNode );
_gcbab :=_ba .Repeat ("\u0020",_facgeg *2)+_cabb .Title .Decoded ();*_gbcec =append (*_gbcec ,_gcbab );};if _ggcda .First !=nil {_aeecb :=_ba .Repeat ("\u0020",_facgeg *2)+"\u002b";*_gbcec =append (*_gbcec ,_aeecb );_aafga (_ggcda .First ,_adccg ,_gbcec ,_facgeg +1);
};if _dfgd &&_cabb .Next !=nil {_aafga (_cabb .Next ,_adccg ,_gbcec ,_facgeg );};};_aafga (_gbgbd ._acbd ,&_cfdag ,&_ddaeg ,0);return _cfdag ,_ddaeg ,nil ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};func _ecfd (_fcefa *PdfField )[]*PdfField {_gfceb :=[]*PdfField {_fcefa };for _ ,_baddf :=range _fcefa .Kids {_gfceb =append (_gfceb ,_ecfd (_baddf )...);};return _gfceb ;};

// ToPdfObject implements interface PdfModel.
func (_edeeb *PdfSignatureReference )ToPdfObject ()_fb .PdfObject {_ffbad :=_fb .MakeDict ();_ffbad .SetIfNotNil ("\u0054\u0079\u0070\u0065",_edeeb .Type );_ffbad .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_edeeb .TransformMethod );
_ffbad .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_edeeb .TransformParams );_ffbad .SetIfNotNil ("\u0044\u0061\u0074\u0061",_edeeb .Data );_ffbad .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_edeeb .DigestMethod );
return _ffbad ;};var _ pdfFont =(*pdfFontType0 )(nil );

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _fb .PdfObjectName ;};

// IsValid checks if the given pdf output intent type is valid.
func (_cdfa PdfOutputIntentType )IsValid ()bool {return _cdfa >=PdfOutputIntentTypeA1 &&_cdfa <=PdfOutputIntentTypeX ;};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_edge *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_fcfd ,_dbac :=color .(*PdfColorDeviceRGB );if !_dbac {_ef .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_ged .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _fcfd ,nil ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_fafb _fb .PdfObject ;};

// AddFont adds a font dictionary to the Font resources.
func (_cdefg *PdfPage )AddFont (name _fb .PdfObjectName ,font _fb .PdfObject )error {if _cdefg .Resources ==nil {_cdefg .Resources =NewPdfPageResources ();};if _cdefg .Resources .Font ==nil {_cdefg .Resources .Font =_fb .MakeDict ();};_fdcdf ,_febgb :=_fb .TraceToDirectObject (_cdefg .Resources .Font ).(*_fb .PdfObjectDictionary );
if !_febgb {_ef .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_fb .TraceToDirectObject (_cdefg .Resources .Font ));
return _ged .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fdcdf .Set (name ,font );return nil ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_dgbd *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _dgbd .Alternate ==nil {_ef .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _dgbd .N ==1{_ef .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_eafd :=NewPdfColorspaceDeviceGray ();return _eafd .ImageToRGB (img );}else if _dgbd .N ==3{_ef .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _dgbd .N ==4{_ef .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_eedf :=NewPdfColorspaceDeviceCMYK ();return _eedf .ImageToRGB (img );}else {return img ,_ged .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_ef .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_dgbd );
_eagf ,_adfgd :=_dgbd .Alternate .ImageToRGB (img );_ef .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_ef .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_eagf );
return _eagf ,_adfgd ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_ebfb *pdfCIDFontType0 )ToPdfObject ()_fb .PdfObject {return _fb .MakeNull ()};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_ffdfd *modelManager )GetPrimitiveFromModel (model PdfModel )_fb .PdfObject {_gecfc ,_ecee :=_ffdfd ._cfabc [model ];if !_ecee {return nil ;};return _gecfc ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_ggab *PdfFontDescriptor )ToPdfObject ()_fb .PdfObject {_cffdf :=_fb .MakeDict ();if _ggab ._cegce ==nil {_ggab ._cegce =&_fb .PdfIndirectObject {};};_ggab ._cegce .PdfObject =_cffdf ;_cffdf .Set ("\u0054\u0079\u0070\u0065",_fb .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _ggab .FontName !=nil {_cffdf .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_ggab .FontName );};if _ggab .FontFamily !=nil {_cffdf .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_ggab .FontFamily );};if _ggab .FontStretch !=nil {_cffdf .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_ggab .FontStretch );
};if _ggab .FontWeight !=nil {_cffdf .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_ggab .FontWeight );};if _ggab .Flags !=nil {_cffdf .Set ("\u0046\u006c\u0061g\u0073",_ggab .Flags );};if _ggab .FontBBox !=nil {_cffdf .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_ggab .FontBBox );
};if _ggab .ItalicAngle !=nil {_cffdf .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_ggab .ItalicAngle );};if _ggab .Ascent !=nil {_cffdf .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_ggab .Ascent );};if _ggab .Descent !=nil {_cffdf .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_ggab .Descent );
};if _ggab .Leading !=nil {_cffdf .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_ggab .Leading );};if _ggab .CapHeight !=nil {_cffdf .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_ggab .CapHeight );};if _ggab .XHeight !=nil {_cffdf .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_ggab .XHeight );
};if _ggab .StemV !=nil {_cffdf .Set ("\u0053\u0074\u0065m\u0056",_ggab .StemV );};if _ggab .StemH !=nil {_cffdf .Set ("\u0053\u0074\u0065m\u0048",_ggab .StemH );};if _ggab .AvgWidth !=nil {_cffdf .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_ggab .AvgWidth );
};if _ggab .MaxWidth !=nil {_cffdf .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_ggab .MaxWidth );};if _ggab .MissingWidth !=nil {_cffdf .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_ggab .MissingWidth );};if _ggab .FontFile !=nil {_cffdf .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_ggab .FontFile );
};if _ggab .FontFile2 !=nil {_cffdf .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_ggab .FontFile2 );};if _ggab .FontFile3 !=nil {_cffdf .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_ggab .FontFile3 );};if _ggab .CharSet !=nil {_cffdf .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_ggab .CharSet );
};if _ggab .Style !=nil {_cffdf .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_ggab .FontName );};if _ggab .Lang !=nil {_cffdf .Set ("\u004c\u0061\u006e\u0067",_ggab .Lang );};if _ggab .FD !=nil {_cffdf .Set ("\u0046\u0044",_ggab .FD );};if _ggab .CIDSet !=nil {_cffdf .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_ggab .CIDSet );
};return _ggab ._cegce ;};func (_ceffg fontCommon )isCIDFont ()bool {if _ceffg ._ccbfd ==""{_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ceffg );
};_aadd :=false ;switch _ceffg ._ccbfd {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_aadd =true ;};_ef .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_aadd ,_ceffg );
return _aadd ;};var _fedc =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// ToPdfObject implements interface PdfModel.
func (_faag *PdfActionThread )ToPdfObject ()_fb .PdfObject {_faag .PdfAction .ToPdfObject ();_dg :=_faag ._db ;_dag :=_dg .PdfObject .(*_fb .PdfObjectDictionary );_dag .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeThread )));if _faag .F !=nil {_dag .Set ("\u0046",_faag .F .ToPdfObject ());
};_dag .SetIfNotNil ("\u0044",_faag .D );_dag .SetIfNotNil ("\u0042",_faag .B );return _dg ;};

// ToPdfObject implements interface PdfModel.
func (_fgcc *PdfAnnotationSquiggly )ToPdfObject ()_fb .PdfObject {_fgcc .PdfAnnotation .ToPdfObject ();_gea :=_fgcc ._fcf ;_gcgg :=_gea .PdfObject .(*_fb .PdfObjectDictionary );_fgcc .PdfAnnotationMarkup .appendToPdfDictionary (_gcgg );_gcgg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_gcgg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fgcc .QuadPoints );return _gea ;};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _fe .ReadSeeker )(*PdfFont ,error ){const _cadf =_ff .CharCode (32);const _gbfca =_ff .CharCode (255);_gbaab ,_ffge :=_ga .ReadAll (r );if _ffge !=nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_ffge );
return nil ,_ffge ;};_dfbf ,_ffge :=_bb .TtfParse (_cbg .NewReader (_gbaab ));if _ffge !=nil {_ef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_ffge );
return nil ,_ffge ;};_bdfe :=&pdfFontSimple {_fbacg :make (map[_ff .CharCode ]float64 ),fontCommon :fontCommon {_ccbfd :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_bdfe ._fgfg =_ff .NewWinAnsiEncoder ();_bdfe ._ecaae =_dfbf .PostScriptName ;_bdfe .FirstChar =_fb .MakeInteger (int64 (_cadf ));
_bdfe .LastChar =_fb .MakeInteger (int64 (_gbfca ));_aaga :=1000.0/float64 (_dfbf .UnitsPerEm );if len (_dfbf .Widths )<=0{return nil ,_ged .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_bafd :=_aaga *float64 (_dfbf .Widths [0]);_agac :=make ([]float64 ,0,_gbfca -_cadf +1);for _ecfeb :=_cadf ;_ecfeb <=_gbfca ;_ecfeb ++{_gdffd ,_afcdd :=_bdfe .Encoder ().CharcodeToRune (_ecfeb );if !_afcdd {_ef .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_ecfeb );
_agac =append (_agac ,_bafd );continue ;};_bbde ,_cdef :=_dfbf .Chars [_gdffd ];if !_cdef {_ef .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_agac =append (_agac ,_bafd );continue ;
};_ggfcg :=_aaga *float64 (_dfbf .Widths [_bbde ]);_agac =append (_agac ,_ggfcg );};_bdfe .Widths =_fb .MakeIndirectObject (_fb .MakeArrayFromFloats (_agac ));if len (_agac )< int (_gbfca -_cadf +1){_ef .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_agac ),255-32+1);
return nil ,_fb .ErrRangeError ;};for _aabba :=_cadf ;_aabba <=_gbfca ;_aabba ++{_bdfe ._fbacg [_aabba ]=_agac [_aabba -_cadf ];};_bdfe .Encoding =_fb .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_gadgf :=&PdfFontDescriptor {};
_gadgf .FontName =_fb .MakeName (_dfbf .PostScriptName );_gadgf .Ascent =_fb .MakeFloat (_aaga *float64 (_dfbf .TypoAscender ));_gadgf .Descent =_fb .MakeFloat (_aaga *float64 (_dfbf .TypoDescender ));_gadgf .CapHeight =_fb .MakeFloat (_aaga *float64 (_dfbf .CapHeight ));
_gadgf .FontBBox =_fb .MakeArrayFromFloats ([]float64 {_aaga *float64 (_dfbf .Xmin ),_aaga *float64 (_dfbf .Ymin ),_aaga *float64 (_dfbf .Xmax ),_aaga *float64 (_dfbf .Ymax )});_gadgf .ItalicAngle =_fb .MakeFloat (_dfbf .ItalicAngle );_gadgf .MissingWidth =_fb .MakeFloat (_aaga *float64 (_dfbf .Widths [0]));
_gaec ,_ffge :=_fb .MakeStream (_gbaab ,_fb .NewFlateEncoder ());if _ffge !=nil {_ef .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_ffge );
return nil ,_ffge ;};_gaec .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_fb .MakeInteger (int64 (len (_gbaab ))));_gadgf .FontFile2 =_gaec ;if _dfbf .Bold {_gadgf .StemV =_fb .MakeInteger (120);}else {_gadgf .StemV =_fb .MakeInteger (70);
};_eagab :=_ecegce ;if _dfbf .IsFixedPitch {_eagab |=_cgffe ;};if _dfbf .ItalicAngle !=0{_eagab |=_efca ;};_gadgf .Flags =_fb .MakeInteger (int64 (_eagab ));_bdfe ._gcge =_gadgf ;_gdcf :=&PdfFont {_gccg :_bdfe };return _gdcf ,nil ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_bdade *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_ggfd *PdfPage )GetContentStreamObjs ()[]_fb .PdfObject {if _ggfd .Contents ==nil {return nil ;};_gefd :=_fb .TraceToDirectObject (_ggfd .Contents );if _abcbb ,_cfff :=_gefd .(*_fb .PdfObjectArray );_cfff {return _abcbb .Elements ();};return []_fb .PdfObject {_gefd };
};func _dgdeb (_dbba *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_dbba }};

// GetStandardApplier gets currently used StandardApplier..
func (_edfad *PdfWriter )GetStandardApplier ()StandardApplier {return _edfad ._gfgc };

// ToPdfObject implements interface PdfModel.
func (_eea *PdfActionGoTo )ToPdfObject ()_fb .PdfObject {_eea .PdfAction .ToPdfObject ();_cfg :=_eea ._db ;_aga :=_cfg .PdfObject .(*_fb .PdfObjectDictionary );_aga .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeGoTo )));_aga .SetIfNotNil ("\u0044",_eea .D );
return _cfg ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// ToPdfObject implements interface PdfModel.
func (_cbbdf *PdfAnnotationPolyLine )ToPdfObject ()_fb .PdfObject {_cbbdf .PdfAnnotation .ToPdfObject ();_fdd :=_cbbdf ._fcf ;_aag :=_fdd .PdfObject .(*_fb .PdfObjectDictionary );_cbbdf .PdfAnnotationMarkup .appendToPdfDictionary (_aag );_aag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fb .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_aag .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_cbbdf .Vertices );_aag .SetIfNotNil ("\u004c\u0045",_cbbdf .LE );_aag .SetIfNotNil ("\u0042\u0053",_cbbdf .BS );_aag .SetIfNotNil ("\u0049\u0043",_cbbdf .IC );_aag .SetIfNotNil ("\u0042\u0045",_cbbdf .BE );
_aag .SetIfNotNil ("\u0049\u0054",_cbbdf .IT );_aag .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cbbdf .Measure );return _fdd ;};

// GetPage returns the PdfPage model for the specified page number.
func (_dccad *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _dccad ._gfcg .GetCrypter ()!=nil &&!_dccad ._gfcg .IsAuthenticated (){return nil ,_d .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_dccad ._gcbf )< pageNumber {return nil ,_ged .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_bdcaf :=pageNumber -1;if _bdcaf < 0{return nil ,_d .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_bdbba :=_dccad .PageList [_bdcaf ];
return _bdbba ,nil ;};

// IsSimple returns true if `font` is a simple font.
func (_eddae *PdfFont )IsSimple ()bool {_ ,_ceecd :=_eddae ._gccg .(*pdfFontSimple );return _ceecd };

// IsEncrypted returns true if the PDF file is encrypted.
func (_deed *PdfReader )IsEncrypted ()(bool ,error ){return _deed ._gfcg .IsEncrypted ()};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_bbdc :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_d .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_bbdc .N =N ;return _bbdc ,nil ;};func (_ecbfe *PdfReader )newPdfAnnotationPolyLineFromDict (_ffc *_fb .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_geee :=PdfAnnotationPolyLine {};_aaa ,_gcd :=_ecbfe .newPdfAnnotationMarkupFromDict (_ffc );
if _gcd !=nil {return nil ,_gcd ;};_geee .PdfAnnotationMarkup =_aaa ;_geee .Vertices =_ffc .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_geee .LE =_ffc .Get ("\u004c\u0045");_geee .BS =_ffc .Get ("\u0042\u0053");_geee .IC =_ffc .Get ("\u0049\u0043");
_geee .BE =_ffc .Get ("\u0042\u0045");_geee .IT =_ffc .Get ("\u0049\u0054");_geee .Measure =_ffc .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_geee ,nil ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_cbfd FieldFlag )Has (fl FieldFlag )bool {return (_cbfd .Mask ()&fl .Mask ())> 0};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_fbccd *PdfColorspaceLab )ToPdfObject ()_fb .PdfObject {_gedg :=_fb .MakeArray ();_gedg .Append (_fb .MakeName ("\u004c\u0061\u0062"));_ebdd :=_fb .MakeDict ();if _fbccd .WhitePoint !=nil {_cccc :=_fb .MakeArray (_fb .MakeFloat (_fbccd .WhitePoint [0]),_fb .MakeFloat (_fbccd .WhitePoint [1]),_fb .MakeFloat (_fbccd .WhitePoint [2]));
_ebdd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_cccc );}else {_ef .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _fbccd .BlackPoint !=nil {_bgcgc :=_fb .MakeArray (_fb .MakeFloat (_fbccd .BlackPoint [0]),_fb .MakeFloat (_fbccd .BlackPoint [1]),_fb .MakeFloat (_fbccd .BlackPoint [2]));_ebdd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bgcgc );
};if _fbccd .Range !=nil {_efcgc :=_fb .MakeArray (_fb .MakeFloat (_fbccd .Range [0]),_fb .MakeFloat (_fbccd .Range [1]),_fb .MakeFloat (_fbccd .Range [2]),_fb .MakeFloat (_fbccd .Range [3]));_ebdd .Set ("\u0052\u0061\u006eg\u0065",_efcgc );};_gedg .Append (_ebdd );
if _fbccd ._eebc !=nil {_fbccd ._eebc .PdfObject =_gedg ;return _fbccd ._eebc ;};return _gedg ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_fdfg *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ged .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_fdfg .Base .GetNumComponents ();_eabc :=int (vals [0])*N ;
if _eabc < 0||(_eabc +N -1)>=len (_fdfg ._bfec ){_ef .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eabc );return nil ,ErrColorOutOfRange ;};_fafdd :=_fdfg ._bfec [_eabc :_eabc +N ];
var _agdc []float64 ;for _ ,_gffe :=range _fafdd {_agdc =append (_agdc ,float64 (_gffe )/255.0);};_cege ,_fga :=_fdfg .Base .ColorFromFloats (_agdc );if _fga !=nil {return nil ,_fga ;};return _cege ,nil ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_eacb pdfFontSimple )GetCharMetrics (code _ff .CharCode )(_bb .CharMetrics ,bool ){if _eebd ,_efabce :=_eacb ._fbacg [code ];_efabce {return _bb .CharMetrics {Wx :_eebd },true ;};if _bb .IsStdFont (_bb .StdFontName (_eacb ._ecaae )){return _bb .CharMetrics {Wx :250},true ;
};return _bb .CharMetrics {},false ;};

// SetOCProperties sets the optional content properties.
func (_bgdfa *PdfWriter )SetOCProperties (ocProperties _fb .PdfObject )error {_cgbag :=_bgdfa ._cgegde ;if ocProperties !=nil {_ef .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_cgbag .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _bgdfa .addObjects (ocProperties );};return nil ;};

// ToPdfObject implements interface PdfModel.
func (_ecbf *PdfActionSound )ToPdfObject ()_fb .PdfObject {_ecbf .PdfAction .ToPdfObject ();_eag :=_ecbf ._db ;_dagd :=_eag .PdfObject .(*_fb .PdfObjectDictionary );_dagd .SetIfNotNil ("\u0053",_fb .MakeName (string (ActionTypeSound )));_dagd .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_ecbf .Sound );
_dagd .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_ecbf .Volume );_dagd .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_ecbf .Synchronous );_dagd .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_ecbf .Repeat );
_dagd .SetIfNotNil ("\u004d\u0069\u0078",_ecbf .Mix );return _eag ;};var _ pdfFont =(*pdfFontSimple )(nil );func (_feffbg *PdfWriter )setHashIDs (_gdabad _a .Hash )error {_cgdegf :=_gdabad .Sum (nil );if _feffbg ._gcdff ==""{_feffbg ._gcdff =_g .EncodeToString (_cgdegf [:8]);
};_feffbg .setDocumentIDs (_feffbg ._gcdff ,_g .EncodeToString (_cgdegf [8:]));return nil ;};func (_fgbb *PdfReader )newPdfAnnotationTextFromDict (_cdcc *_fb .PdfObjectDictionary )(*PdfAnnotationText ,error ){_cadg :=PdfAnnotationText {};_gbd ,_gbdc :=_fgbb .newPdfAnnotationMarkupFromDict (_cdcc );
if _gbdc !=nil {return nil ,_gbdc ;};_cadg .PdfAnnotationMarkup =_gbd ;_cadg .Open =_cdcc .Get ("\u004f\u0070\u0065\u006e");_cadg .Name =_cdcc .Get ("\u004e\u0061\u006d\u0065");_cadg .State =_cdcc .Get ("\u0053\u0074\u0061t\u0065");_cadg .StateModel =_cdcc .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");
return &_cadg ,nil ;};

// Add appends an outline item as a child of the current outline item.
func (_eafgf *OutlineItem )Add (item *OutlineItem ){_eafgf .Entries =append (_eafgf .Entries ,item )};