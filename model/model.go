//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_bb "bufio";_gg "bytes";_de "crypto/md5";_e "crypto/rand";_fg "crypto/sha1";_ag "crypto/x509";_f "encoding/binary";_aa "encoding/hex";_bcd "errors";_g "fmt";_ec "github.com/unidoc/pkcs7";_dff "github.com/unidoc/unipdf/v3/common";
_bcg "github.com/unidoc/unipdf/v3/core";_fe "github.com/unidoc/unipdf/v3/core/security";_ece "github.com/unidoc/unipdf/v3/core/security/crypt";_faa "github.com/unidoc/unipdf/v3/internal/cmap";_dca "github.com/unidoc/unipdf/v3/internal/imageutil";_bbd "github.com/unidoc/unipdf/v3/internal/license";
_ff "github.com/unidoc/unipdf/v3/internal/sampling";_bf "github.com/unidoc/unipdf/v3/internal/textencoding";_fbb "github.com/unidoc/unipdf/v3/internal/timeutils";_ee "github.com/unidoc/unipdf/v3/internal/transform";_fd "github.com/unidoc/unipdf/v3/model/internal/docutil";
_dgb "github.com/unidoc/unipdf/v3/model/internal/fonts";_fa "github.com/unidoc/unipdf/v3/model/mdp";_fb "github.com/unidoc/unipdf/v3/model/sigutil";_dga "github.com/unidoc/unipdf/v3/ps";_dc "github.com/unidoc/unitype";_ac "golang.org/x/xerrors";_d "hash";
_af "image";_gb "image/color";_ "image/gif";_ "image/png";_dg "io";_df "io/ioutil";_ab "math";_bc "math/rand";_dee "os";_gc "regexp";_bd "sort";_bce "strconv";_ce "strings";_b "sync";_dd "time";_gd "unicode";_c "unicode/utf8";);

// ToPdfObject returns the PDF representation of the page resources.
func (_dgbgg *PdfPageResources )ToPdfObject ()_bcg .PdfObject {_acega :=_dgbgg ._bgbd ;_acega .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_dgbgg .ExtGState );if _dgbgg ._eedf !=nil {_dgbgg .ColorSpace =_dgbgg ._eedf .ToPdfObject ();};_acega .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_dgbgg .ColorSpace );
_acega .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_dgbgg .Pattern );_acega .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_dgbgg .Shading );_acega .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_dgbgg .XObject );_acega .SetIfNotNil ("\u0046\u006f\u006e\u0074",_dgbgg .Font );
_acega .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_dgbgg .ProcSet );_acega .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_dgbgg .Properties );return _acega ;};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _dg .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _dbfc ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _bebbaf (rs ,opts ,true ,_dbfc );
};func (_beaf *PdfAcroForm )fillImageWithAppearance (_afdc FieldImageProvider ,_fdeea FieldAppearanceGenerator )error {if _beaf ==nil {return nil ;};_dcaff ,_cgaagd :=_afdc .FieldImageValues ();if _cgaagd !=nil {return _cgaagd ;};for _ ,_bbde :=range _beaf .AllFields (){_fagea :=_bbde .PartialName ();
_gddeg ,_gbdfe :=_dcaff [_fagea ];if !_gbdfe {if _gcaae ,_efed :=_bbde .FullName ();_efed ==nil {_gddeg ,_gbdfe =_dcaff [_gcaae ];};};if !_gbdfe {_dff .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_fagea );
continue ;};switch _cbge :=_bbde .GetContext ().(type ){case *PdfFieldButton :if _cbge .IsPush (){_cbge .SetFillImage (_gddeg );};};if _fdeea ==nil {continue ;};for _ ,_eegg :=range _bbde .Annotations {_dgffa ,_dbgce :=_fdeea .GenerateAppearanceDict (_beaf ,_bbde ,_eegg );
if _dbgce !=nil {return _dbgce ;};_eegg .AP =_dgffa ;_eegg .ToPdfObject ();};};return nil ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_cded *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _cded .UnderlyingCS .GetNumComponents ();};

// GetBorderWidth returns the border style's width.
func (_gebf *PdfBorderStyle )GetBorderWidth ()float64 {if _gebf .W ==nil {return 1;};return *_gebf .W ;};func (_agcc *PdfReader )newPdfActionImportDataFromDict (_egd *_bcg .PdfObjectDictionary )(*PdfActionImportData ,error ){_ebda ,_eec :=_bab (_egd .Get ("\u0046"));
if _eec !=nil {return nil ,_eec ;};return &PdfActionImportData {F :_ebda },nil ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_ggdf *PdfReader )GetCatalogMarkInfo ()(_bcg .PdfObject ,bool ){if _ggdf ._fdeec ==nil {return nil ,false ;};_efbb :=_ggdf ._fdeec .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _efbb ,_efbb !=nil ;};var (CourierName =_dgb .CourierName ;
CourierBoldName =_dgb .CourierBoldName ;CourierObliqueName =_dgb .CourierObliqueName ;CourierBoldObliqueName =_dgb .CourierBoldObliqueName ;HelveticaName =_dgb .HelveticaName ;HelveticaBoldName =_dgb .HelveticaBoldName ;HelveticaObliqueName =_dgb .HelveticaObliqueName ;
HelveticaBoldObliqueName =_dgb .HelveticaBoldObliqueName ;SymbolName =_dgb .SymbolName ;ZapfDingbatsName =_dgb .ZapfDingbatsName ;TimesRomanName =_dgb .TimesRomanName ;TimesBoldName =_dgb .TimesBoldName ;TimesItalicName =_dgb .TimesItalicName ;TimesBoldItalicName =_dgb .TimesBoldItalicName ;
);

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_fgad *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _fgad .flattenFieldsWithOpts (false ,appgen ,opts );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_begdb *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _begdb .UnderlyingCS ==nil {return nil ,_bcd .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _begdb .UnderlyingCS .ColorFromFloats (vals );};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_eacgf *PdfColorspaceDeviceN )ToPdfObject ()_bcg .PdfObject {_cadb :=_bcg .MakeArray (_bcg .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_cadb .Append (_eacgf .ColorantNames );_cadb .Append (_eacgf .AlternateSpace .ToPdfObject ());_cadb .Append (_eacgf .TintTransform .ToPdfObject ());
if _eacgf .Attributes !=nil {_cadb .Append (_eacgf .Attributes .ToPdfObject ());};if _eacgf ._ebgc !=nil {_eacgf ._ebgc .PdfObject =_cadb ;return _eacgf ._ebgc ;};return _cadb ;};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _bcg .PdfObject ;Q _bcg .PdfObject ;RC _bcg .PdfObject ;DS _bcg .PdfObject ;CL _bcg .PdfObject ;IT _bcg .PdfObject ;BE _bcg .PdfObject ;RD _bcg .PdfObject ;BS _bcg .PdfObject ;LE _bcg .PdfObject ;
};func (_cbcba *PdfWriter )optimizeDocument ()error {if _cbcba ._dbda ==nil {return nil ;};_eadg ,_cgcfdf :=_bcg .GetDict (_cbcba ._cbdd );if !_cgcfdf {return _bcd .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_aeadf :=_fd .Document {ID :[2]string {_cbcba ._dcadb ,_cbcba ._cdbg },Version :_cbcba ._cbdba ,Objects :_cbcba ._gbadec ,Info :_eadg ,Crypt :_cbcba ._ebfab ,UseHashBasedID :_cbcba ._ffac };if _abcbe :=_cbcba ._dbda .ApplyStandard (&_aeadf );_abcbe !=nil {return _abcbe ;
};_cbcba ._dcadb ,_cbcba ._cdbg =_aeadf .ID [0],_aeadf .ID [1];_cbcba ._cbdba =_aeadf .Version ;_cbcba ._gbadec =_aeadf .Objects ;_cbcba ._cbdd .PdfObject =_aeadf .Info ;_cbcba ._ffac =_aeadf .UseHashBasedID ;_cbcba ._ebfab =_aeadf .Crypt ;_ffcbg :=make (map[_bcg .PdfObject ]struct{},len (_cbcba ._gbadec ));
for _ ,_gbef :=range _cbcba ._gbadec {_ffcbg [_gbef ]=struct{}{};};_cbcba ._degdg =_ffcbg ;return nil ;};func (_gagad *PdfReader )flattenFieldsWithOpts (_fcafe bool ,_bgcb FieldAppearanceGenerator ,_gabe *FieldFlattenOpts )error {if _gabe ==nil {_gabe =&FieldFlattenOpts {};
};var _gadg bool ;_caff :=map[*PdfAnnotation ]bool {};{var _ebedb []*PdfField ;_faef :=_gagad .AcroForm ;if _faef !=nil {if _gabe .FilterFunc !=nil {_ebedb =_faef .filteredFields (_gabe .FilterFunc ,true );_gadg =_faef .Fields !=nil &&len (*_faef .Fields )> 0;
}else {_ebedb =_faef .AllFields ();};};for _ ,_cfcg :=range _ebedb {for _ ,_gfac :=range _cfcg .Annotations {_caff [_gfac .PdfAnnotation ]=_cfcg .V !=nil ;if _bgcb !=nil {_abef ,_bfcea :=_bgcb .GenerateAppearanceDict (_faef ,_cfcg ,_gfac );if _bfcea !=nil {return _bfcea ;
};_gfac .AP =_abef ;};};};};if _fcafe {for _ ,_afcb :=range _gagad .PageList {_accb ,_bcbf :=_afcb .GetAnnotations ();if _bcbf !=nil {return _bcbf ;};for _ ,_ddba :=range _accb {_caff [_ddba ]=true ;};};};for _ ,_ebdb :=range _gagad .PageList {var _ecbe []*PdfAnnotation ;
if _bgcb !=nil {if _agedc :=_bgcb .WrapContentStream (_ebdb );_agedc !=nil {return _agedc ;};};_ebfbb ,_bfcb :=_ebdb .GetAnnotations ();if _bfcb !=nil {return _bfcb ;};for _ ,_dggef :=range _ebfbb {_gefga ,_fcebd :=_caff [_dggef ];if !_fcebd &&_gabe .AnnotFilterFunc !=nil {if _ ,_eecd :=_dggef .GetContext ().(*PdfAnnotationWidget );
!_eecd {_fcebd =_gabe .AnnotFilterFunc (_dggef );};};if !_fcebd {_ecbe =append (_ecbe ,_dggef );continue ;};switch _dggef .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_degf ,_adbbd ,_gebea :=_cbba (_dggef );if _gebea !=nil {if !_gefga {_dff .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_gebea );
continue ;};if _degf ==nil {continue ;};_dgbb :=_ebdb .Resources .GenerateXObjectName ();_ebdb .Resources .SetXObjectFormByName (_dgbb ,_degf );_cgabc :=_ab .Min (_adbbd .Llx ,_adbbd .Urx );_ababg :=_ab .Min (_adbbd .Lly ,_adbbd .Ury );var _dbcgd []string ;
_dbcgd =append (_dbcgd ,"\u0071");_dbcgd =append (_dbcgd ,_g .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_cgabc ,_ababg ));
_dbcgd =append (_dbcgd ,_g .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_dgbb .String ()));_dbcgd =append (_dbcgd ,"\u0051");_feff :=_ce .Join (_dbcgd ,"\u000a");_gebea =_ebdb .AppendContentStream (_feff );if _gebea !=nil {return _gebea ;};if _degf .Resources !=nil {_gabee ,_egbbg :=_bcg .GetDict (_degf .Resources .Font );
if _egbbg {for _ ,_aagfg :=range _gabee .Keys (){if !_ebdb .Resources .HasFontByName (_aagfg ){_ebdb .Resources .SetFontByName (_aagfg ,_gabee .Get (_aagfg ));};};};};};if len (_ecbe )> 0{_ebdb ._addea =_ecbe ;}else {_ebdb ._addea =[]*PdfAnnotation {};
};};if !_gadg {_gagad .AcroForm =nil ;};return nil ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_bg :=NewPdfAction ();_eed :=&PdfActionResetForm {};_eed .PdfAction =_bg ;_bg .SetContext (_eed );return _eed ;};func (_fced *PdfAcroForm )fill (_bcdbf FieldValueProvider ,_bgfcf FieldAppearanceGenerator )error {if _fced ==nil {return nil ;
};_fagga ,_cbcf :=_bcdbf .FieldValues ();if _cbcf !=nil {return _cbcf ;};for _ ,_gbee :=range _fced .AllFields (){_fgcfb :=_gbee .PartialName ();_dfcfd ,_gcabg :=_fagga [_fgcfb ];if !_gcabg {if _dbfeb ,_eaadd :=_gbee .FullName ();_eaadd ==nil {_dfcfd ,_gcabg =_fagga [_dbfeb ];
};};if !_gcabg {_dff .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_fgcfb );
continue ;};if _cdbed :=_ggfgg (_gbee ,_dfcfd );_cdbed !=nil {return _cdbed ;};if _bgfcf ==nil {continue ;};for _ ,_bgfcc :=range _gbee .Annotations {_bafd ,_eeaeb :=_bgfcf .GenerateAppearanceDict (_fced ,_gbee ,_bgfcc );if _eeaeb !=nil {return _eeaeb ;
};_bgfcc .AP =_bafd ;_bgfcc .ToPdfObject ();};};return nil ;};

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_bcg .PdfObjectString ;Author *_bcg .PdfObjectString ;Subject *_bcg .PdfObjectString ;Keywords *_bcg .PdfObjectString ;Creator *_bcg .PdfObjectString ;Producer *_bcg .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;
Trapped *_bcg .PdfObjectName ;_aabd *_bcg .PdfObjectDictionary ;};func _aaace (_cdcd *_bcg .PdfObjectDictionary ,_abce *fontCommon )(*pdfCIDFontType0 ,error ){if _abce ._cfeef !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_dff .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_abce );
return nil ,_bcg .ErrRangeError ;};_bffgf :=_edfad (_abce );_bbac ,_fbadff :=_bcg .GetDict (_cdcd .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_fbadff {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_abce );
return nil ,ErrRequiredAttributeMissing ;};_bffgf .CIDSystemInfo =_bbac ;_bffgf .DW =_cdcd .Get ("\u0044\u0057");_bffgf .W =_cdcd .Get ("\u0057");_bffgf .DW2 =_cdcd .Get ("\u0044\u0057\u0032");_bffgf .W2 =_cdcd .Get ("\u0057\u0032");_bffgf ._cfaa =1000.0;
if _gbfee ,_facga :=_bcg .GetNumberAsFloat (_bffgf .DW );_facga ==nil {_bffgf ._cfaa =_gbfee ;};_bfdg ,_afbda :=_cgfeb (_bffgf .W );if _afbda !=nil {return nil ,_afbda ;};if _bfdg ==nil {_bfdg =map[_bf .CharCode ]float64 {};};_bffgf ._bcedd =_bfdg ;return _bffgf ,nil ;
};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_aceed *PdfFont )CharcodesToUnicode (charcodes []_bf .CharCode )[]rune {_cgdff ,_ ,_ :=_aceed .CharcodesToUnicodeWithStats (charcodes );return _cgdff ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_eefd *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _eefd ._bbdfb ==nil {_eefd ._bbdfb =_dga .NewPSExecutor (_eefd .Program );};var _bbdb []_dga .PSObject ;for _ ,_agge :=range xVec {_bbdb =append (_bbdb ,_dga .MakeReal (_agge ));
};_dgbde ,_eagb :=_eefd ._bbdfb .Execute (_bbdb );if _eagb !=nil {return nil ,_eagb ;};_agcdd ,_eagb :=_dga .PSObjectArrayToFloat64Array (_dgbde );if _eagb !=nil {return nil ,_eagb ;};return _agcdd ,nil ;};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// GetNumComponents returns the number of color components (3 for Lab).
func (_eaede *PdfColorLab )GetNumComponents ()int {return 3};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _bcg .PdfObject )(*PdfInfo ,error ){var _eegce PdfInfo ;_egbb ,_ebbe :=obj .(*_bcg .PdfObjectDictionary );if !_ebbe {return nil ,_g .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_adcb :=range _egbb .Keys (){switch _adcb {case "\u0054\u0069\u0074l\u0065":_eegce .Title ,_ =_bcg .GetString (_egbb .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_eegce .Author ,_ =_bcg .GetString (_egbb .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_eegce .Subject ,_ =_bcg .GetString (_egbb .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_eegce .Keywords ,_ =_bcg .GetString (_egbb .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_eegce .Creator ,_ =_bcg .GetString (_egbb .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_eegce .Producer ,_ =_bcg .GetString (_egbb .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_eegce .Trapped ,_ =_bcg .GetName (_egbb .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _gcba ,_caeda :=_bcg .GetString (_egbb .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_caeda &&_gcba .String ()!=""{_cadg ,_ffcd :=NewPdfDate (_gcba .String ());if _ffcd !=nil {return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_ffcd );
};_eegce .CreationDate =&_cadg ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _aead ,_abbdc :=_bcg .GetString (_egbb .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_abbdc &&_aead .String ()!=""{_gaaf ,_eafa :=NewPdfDate (_aead .String ());if _eafa !=nil {return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_eafa );
};_eegce .ModifiedDate =&_gaaf ;};default:_bfddb ,_ :=_bcg .GetString (_egbb .Get (_adcb ));if _eegce ._aabd ==nil {_eegce ._aabd =_bcg .MakeDict ();};_eegce ._aabd .Set (_adcb ,_bfddb );};};return &_eegce ,nil ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_bdaae *PdfPage )GetAllContentStreams ()(string ,error ){_dfcaf ,_gcebg :=_bdaae .GetContentStreams ();if _gcebg !=nil {return "",_gcebg ;};return _ce .Join (_dfcaf ,"\u0020"),nil ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_dbedd ,_dgca :=_fbb .ParsePdfTime (dateStr );if _dgca !=nil {return PdfDate {},_dgca ;};return NewPdfDateFromTime (_dbedd );};

// GetRevisionNumber returns the version of the current Pdf document
func (_cdaad *PdfReader )GetRevisionNumber ()int {return _cdaad ._eadaf .GetRevisionNumber ()};

// SetShadingByName sets a shading resource specified by keyName.
func (_ebea *PdfPageResources )SetShadingByName (keyName _bcg .PdfObjectName ,shadingObj _bcg .PdfObject )error {if _ebea .Shading ==nil {_ebea .Shading =_bcg .MakeDict ();};_ecbba ,_feacd :=_ebea .Shading .(*_bcg .PdfObjectDictionary );if !_feacd {return _bcg .ErrTypeError ;
};_ecbba .Set (keyName ,shadingObj );return nil ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_egded *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_eegf :=_ff .NewReader (img .getBase ());_gdff :=_dca .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_bdee :=_ff .NewWriter (_gdff );
_ecaca :=_ab .Pow (2,float64 (img .BitsPerComponent ))-1;_cbfg :=make ([]uint32 ,3);var (_dbcfe uint32 ;ANorm ,X ,Y ,Z ,_adcc ,_agbff ,_dbccd float64 ;_ecfgf error ;);for {_dbcfe ,_ecfgf =_eegf .ReadSample ();if _ecfgf ==_dg .EOF {break ;}else if _ecfgf !=nil {return img ,_ecfgf ;
};ANorm =float64 (_dbcfe )/_ecaca ;X =_egded .WhitePoint [0]*_ab .Pow (ANorm ,_egded .Gamma );Y =_egded .WhitePoint [1]*_ab .Pow (ANorm ,_egded .Gamma );Z =_egded .WhitePoint [2]*_ab .Pow (ANorm ,_egded .Gamma );_adcc =3.240479*X +-1.537150*Y +-0.498535*Z ;
_agbff =-0.969256*X +1.875992*Y +0.041556*Z ;_dbccd =0.055648*X +-0.204043*Y +1.057311*Z ;_adcc =_ab .Min (_ab .Max (_adcc ,0),1.0);_agbff =_ab .Min (_ab .Max (_agbff ,0),1.0);_dbccd =_ab .Min (_ab .Max (_dbccd ,0),1.0);_cbfg [0]=uint32 (_adcc *_ecaca );
_cbfg [1]=uint32 (_agbff *_ecaca );_cbfg [2]=uint32 (_dbccd *_ecaca );if _ecfgf =_bdee .WriteSamples (_cbfg );_ecfgf !=nil {return img ,_ecfgf ;};};return _bgcbe (&_gdff ),nil ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";
TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// ToPdfObject implements interface PdfModel.
func (_cefb *PdfAnnotationUnderline )ToPdfObject ()_bcg .PdfObject {_cefb .PdfAnnotation .ToPdfObject ();_fgff :=_cefb ._cbe ;_facg :=_fgff .PdfObject .(*_bcg .PdfObjectDictionary );_cefb .PdfAnnotationMarkup .appendToPdfDictionary (_facg );_facg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_facg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cefb .QuadPoints );return _fgff ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dcbda pdfFontType0 )GetRuneMetrics (r rune )(_dgb .CharMetrics ,bool ){if _dcbda .DescendantFont ==nil {_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_dcbda );
return _dgb .CharMetrics {},false ;};return _dcbda .DescendantFont .GetRuneMetrics (r );};func _cgda (_effad _bcg .PdfObject )(*PdfColorspaceDeviceN ,error ){_dacd :=NewPdfColorspaceDeviceN ();if _afedc ,_acdcd :=_effad .(*_bcg .PdfIndirectObject );_acdcd {_dacd ._ebgc =_afedc ;
};_effad =_bcg .TraceToDirectObject (_effad );_bged ,_cdbb :=_effad .(*_bcg .PdfObjectArray );if !_cdbb {return nil ,_g .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _bged .Len ()!=4&&_bged .Len ()!=5{return nil ,_g .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_effad =_bged .Get (0);
_adec ,_cdbb :=_effad .(*_bcg .PdfObjectName );if !_cdbb {return nil ,_g .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_adec !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_g .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_effad =_bged .Get (1);
_effad =_bcg .TraceToDirectObject (_effad );_agfae ,_cdbb :=_effad .(*_bcg .PdfObjectArray );if !_cdbb {return nil ,_g .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_dacd .ColorantNames =_agfae ;_effad =_bged .Get (2);_fgbd ,_abdd :=NewPdfColorspaceFromPdfObject (_effad );if _abdd !=nil {return nil ,_abdd ;};_dacd .AlternateSpace =_fgbd ;_bbbb ,_abdd :=_bdgfe (_bged .Get (3));if _abdd !=nil {return nil ,_abdd ;};
_dacd .TintTransform =_bbbb ;if _bged .Len ()==5{_cdfb ,_dfga :=_agccc (_bged .Get (4));if _dfga !=nil {return nil ,_dfga ;};_dacd .Attributes =_cdfb ;};return _dacd ,nil ;};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_gdba *PdfOutlineItem )GetContainingPdfObject ()_bcg .PdfObject {return _gdba ._edgdb };

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_bfaa *PdfOutlineTreeNode )GetContainingPdfObject ()_bcg .PdfObject {return _bfaa .GetContext ().GetContainingPdfObject ();};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _bcg .PdfObject )(*PdfFilespec ,error ){_eaaaf :=&PdfFilespec {};var _dcgg *_bcg .PdfObjectDictionary ;if _ceecc ,_ggfa :=_bcg .GetIndirect (obj );_ggfa {_eaaaf ._baegd =_ceecc ;_gbfd ,_dbgg :=_bcg .GetDict (_ceecc .PdfObject );
if !_dbgg {_dff .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bcg .ErrTypeError ;};_dcgg =_gbfd ;}else if _decf ,_bgcaf :=_bcg .GetDict (obj );
_bgcaf {_eaaaf ._baegd =_decf ;_dcgg =_decf ;}else {_dff .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_bcg .ErrTypeError ;};if _dcgg ==nil {_dff .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_bcd .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _dfec :=_dcgg .Get ("\u0054\u0079\u0070\u0065");_dfec !=nil {_decg ,_gdgd :=_dfec .(*_bcg .PdfObjectName );if !_gdgd {_dff .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_dfec );
}else {if *_decg !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_dff .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_decg );
};};};if _ggfga :=_dcgg .Get ("\u0046\u0053");_ggfga !=nil {_eaaaf .FS =_ggfga ;};if _edda :=_dcgg .Get ("\u0046");_edda !=nil {_eaaaf .F =_edda ;};if _deece :=_dcgg .Get ("\u0055\u0046");_deece !=nil {_eaaaf .UF =_deece ;};if _cbgbb :=_dcgg .Get ("\u0044\u004f\u0053");
_cbgbb !=nil {_eaaaf .DOS =_cbgbb ;};if _dcedf :=_dcgg .Get ("\u004d\u0061\u0063");_dcedf !=nil {_eaaaf .Mac =_dcedf ;};if _gfab :=_dcgg .Get ("\u0055\u006e\u0069\u0078");_gfab !=nil {_eaaaf .Unix =_gfab ;};if _dcbc :=_dcgg .Get ("\u0049\u0044");_dcbc !=nil {_eaaaf .ID =_dcbc ;
};if _bgbf :=_dcgg .Get ("\u0056");_bgbf !=nil {_eaaaf .V =_bgbf ;};if _cfeaf :=_dcgg .Get ("\u0045\u0046");_cfeaf !=nil {_eaaaf .EF =_cfeaf ;};if _cccbc :=_dcgg .Get ("\u0052\u0046");_cccbc !=nil {_eaaaf .RF =_cccbc ;};if _fafdd :=_dcgg .Get ("\u0044\u0065\u0073\u0063");
_fafdd !=nil {_eaaaf .Desc =_fafdd ;};if _fedc :=_dcgg .Get ("\u0043\u0049");_fedc !=nil {_eaaaf .CI =_fedc ;};return _eaaaf ,nil ;};func _eagc (_faffe _bcg .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_gabd :=NewPdfColorspaceSpecialIndexed ();if _dbde ,_ebeef :=_faffe .(*_bcg .PdfIndirectObject );
_ebeef {_gabd ._ggaa =_dbde ;};_faffe =_bcg .TraceToDirectObject (_faffe );_abeg ,_gdaef :=_faffe .(*_bcg .PdfObjectArray );if !_gdaef {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _abeg .Len ()!=4{return nil ,_g .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_faffe =_abeg .Get (0);_addf ,_gdaef :=_faffe .(*_bcg .PdfObjectName );if !_gdaef {return nil ,_g .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_addf !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_g .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_faffe =_abeg .Get (1);_caabe ,_addeg :=DetermineColorspaceNameFromPdfObject (_faffe );if _addeg !=nil {return nil ,_addeg ;};if _caabe =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_caabe =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_dff .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_caabe );
return nil ,_dcfa ;};_daee ,_addeg :=NewPdfColorspaceFromPdfObject (_faffe );if _addeg !=nil {return nil ,_addeg ;};_gabd .Base =_daee ;_faffe =_abeg .Get (2);_feag ,_addeg :=_bcg .GetNumberAsInt64 (_faffe );if _addeg !=nil {return nil ,_addeg ;};if _feag > 255{return nil ,_g .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_gabd .HiVal =int (_feag );_faffe =_abeg .Get (3);_gabd .Lookup =_faffe ;_faffe =_bcg .TraceToDirectObject (_faffe );var _eacge []byte ;if _ccag ,_bebg :=_faffe .(*_bcg .PdfObjectString );_bebg {_eacge =_ccag .Bytes ();_dff .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_eacge );
}else if _cdfg ,_aadf :=_faffe .(*_bcg .PdfObjectStream );_aadf {_dff .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_faffe .String ());_dff .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_cdfg .Stream ),_cdfg .Stream );
_ccceg ,_bfdab :=_bcg .DecodeStream (_cdfg );if _bfdab !=nil {return nil ,_bfdab ;};_dff .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_ccceg ),_ccceg );_eacge =_ccceg ;}else {_dff .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_faffe );
return nil ,_g .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_eacge )< _gabd .Base .GetNumComponents ()*(_gabd .HiVal +1){_dff .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_dff .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_eacge ),_gabd .Base .GetNumComponents (),_gabd .HiVal );
}else {_eacge =_eacge [:_gabd .Base .GetNumComponents ()*(_gabd .HiVal +1)];};_gabd ._fdfca =_eacge ;return _gabd ,nil ;};

// GetPage returns the PdfPage model for the specified page number.
func (_dfafa *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _dfafa ._eadaf .GetCrypter ()!=nil &&!_dfafa ._eadaf .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_dfafa ._fgebbb )< pageNumber {return nil ,_bcd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_aaafe :=pageNumber -1;if _aaafe < 0{return nil ,_g .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_fdafc :=_dfafa .PageList [_aaafe ];
return _fdafc ,nil ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_fdaafg *Image )ConvertToBinary ()error {if _fdaafg .ColorComponents ==1&&_fdaafg .BitsPerComponent ==1{return nil ;};_bbcdg ,_bdgg :=_fdaafg .ToGoImage ();if _bdgg !=nil {return _bdgg ;};_begeb ,_bdgg :=_dca .MonochromeConverter .Convert (_bbcdg );
if _bdgg !=nil {return _bdgg ;};_fdaafg .Data =_begeb .Base ().Data ;_fdaafg ._aagba ,_bdgg =_dca .ScaleAlphaToMonochrome (_fdaafg ._aagba ,int (_fdaafg .Width ),int (_fdaafg .Height ));if _bdgg !=nil {return _bdgg ;};_fdaafg .BitsPerComponent =1;_fdaafg .ColorComponents =1;
_fdaafg ._agagd =nil ;return nil ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};func (_ddbf *PdfWriter )setCatalogVersion (){_ddbf ._gbfg .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_bcg .MakeName (_g .Sprintf ("\u0025\u0064\u002e%\u0064",_ddbf ._cbdba .Major ,_ddbf ._cbdba .Minor )));
};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _bcg .PdfObjectName ;};

// Val returns the color value.
func (_cgeb *PdfColorDeviceGray )Val ()float64 {return float64 (*_cgeb )};var (ErrRequiredAttributeMissing =_bcd .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
ErrInvalidAttribute =_bcd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_bcd .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_dcfa =_bcd .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");
ErrEncrypted =_bcd .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_bcd .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
ErrFontNotSupported =_ac .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_bcg .ErrNotSupported );ErrType1CFontNotSupported =_ac .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_bcg .ErrNotSupported );
ErrType3FontNotSupported =_ac .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_bcg .ErrNotSupported );
ErrTTCmapNotSupported =_ac .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_bcg .ErrNotSupported );
ErrSignNotEnoughSpace =_ac .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_ac .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_bfef *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_caed *PdfAppender )UpdateObject (obj _bcg .PdfObject ){_caed .replaceObject (obj ,obj );if _ ,_beb :=_caed ._dcceg [obj ];!_beb {_caed ._bfa =append (_caed ._bfa ,obj );_caed ._dcceg [obj ]=struct{}{};};};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_bcg .PdfObjectBool ;SigFlags *_bcg .PdfObjectInteger ;CO *_bcg .PdfObjectArray ;DR *PdfPageResources ;DA *_bcg .PdfObjectString ;Q *_bcg .PdfObjectInteger ;XFA _bcg .PdfObject ;_eafcb *_bcg .PdfIndirectObject ;
};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_dbfea *PdfPageResources )GetPatternByName (keyName _bcg .PdfObjectName )(*PdfPattern ,bool ){if _dbfea .Pattern ==nil {return nil ,false ;};_bbacd ,_fgecb :=_bcg .TraceToDirectObject (_dbfea .Pattern ).(*_bcg .PdfObjectDictionary );if !_fgecb {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbfea .Pattern );
return nil ,false ;};if _dcaeeae :=_bbacd .Get (keyName );_dcaeeae !=nil {_gbadg ,_dbdg :=_cgdga (_dcaeeae );if _dbdg !=nil {_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_dbdg );
return nil ,false ;};return _gbadg ,true ;};return nil ,false ;};

// ToPdfObject implements interface PdfModel.
func (_fabg *PdfActionURI )ToPdfObject ()_bcg .PdfObject {_fabg .PdfAction .ToPdfObject ();_bcf :=_fabg ._aag ;_gde :=_bcf .PdfObject .(*_bcg .PdfObjectDictionary );_gde .SetIfNotNil ("\u0053",_bcg .MakeName (string (ActionTypeURI )));_gde .SetIfNotNil ("\u0055\u0052\u0049",_fabg .URI );
_gde .SetIfNotNil ("\u0049\u0073\u004da\u0070",_fabg .IsMap );return _bcf ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_bebf *Outline )ToPdfObject ()_bcg .PdfObject {return _bebf .ToPdfOutline ().ToPdfObject ()};func _eeee (_ggac _bcg .PdfObject ,_eefa bool )(*PdfFont ,error ){_fcbdd ,_dgdbc ,_cebb :=_gbcd (_ggac );if _fcbdd !=nil {_ageda (_fcbdd );};if _cebb !=nil {if _cebb ==ErrType1CFontNotSupported {_gbcc ,_adgb :=_egcd (_fcbdd ,_dgdbc ,nil );
if _adgb !=nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_dgdbc ,_adgb );
return nil ,_cebb ;};return &PdfFont {_aabbg :_gbcc },_cebb ;};return nil ,_cebb ;};_aaeb :=&PdfFont {};switch _dgdbc ._cfeef {case "\u0054\u0079\u0070e\u0030":if !_eefa {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dgdbc );
return nil ,_bcd .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_ebegb ,_eddb :=_fedfcf (_fcbdd ,_dgdbc );if _eddb !=nil {_dff .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dgdbc ,_eddb );
return nil ,_eddb ;};_aaeb ._aabbg =_ebegb ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _ageag *pdfFontSimple ;_aagff ,_cabdb :=_dgb .NewStdFontByName (_dgb .StdFontName (_dgdbc ._aafc ));
if _cabdb {_cefbc :=_dddag (_aagff );_aaeb ._aabbg =&_cefbc ;_fgbcg :=_bcg .TraceToDirectObject (_cefbc .ToPdfObject ());_efac ,_ecab ,_ecegf :=_gbcd (_fgbcg );if _ecegf !=nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_dgdbc ,_cefbc );
return nil ,_ecegf ;};for _ ,_bdgaa :=range _fcbdd .Keys (){_efac .Set (_bdgaa ,_fcbdd .Get (_bdgaa ));};_ageag ,_ecegf =_egcd (_efac ,_ecab ,_cefbc ._eaaafb );if _ecegf !=nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_dgdbc ,_cefbc );
return nil ,_ecegf ;};_ageag ._ffgef =_cefbc ._ffgef ;_ageag ._fdbcdc =_cefbc ._fdbcdc ;if _ageag ._gdfg ==nil {_ageag ._gdfg =_cefbc ._gdfg ;};}else {_ageag ,_cebb =_egcd (_fcbdd ,_dgdbc ,nil );if _cebb !=nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_dgdbc ,_cebb );
return nil ,_cebb ;};};_cebb =_ageag .addEncoding ();if _cebb !=nil {return nil ,_cebb ;};if _cabdb {_ageag .updateStandard14Font ();};if _cabdb &&_ageag ._cbdg ==nil &&_ageag ._eaaafb ==nil {_dff .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ageag );
_dff .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_aagff );};if len (_ageag ._ffgef )==0{_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_ageag );};_aaeb ._aabbg =_ageag ;
case "\u0054\u0079\u0070e\u0033":_fgga ,_gabfg :=_cgdec (_fcbdd ,_dgdbc );if _gabfg !=nil {_dff .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_gabfg );
return nil ,_gabfg ;};_aaeb ._aabbg =_fgga ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_fdaad ,_ccbgb :=_aaace (_fcbdd ,_dgdbc );if _ccbgb !=nil {_dff .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_ccbgb );
return nil ,_ccbgb ;};_aaeb ._aabbg =_fdaad ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_ageaf ,_cgga :=_bacgd (_fcbdd ,_dgdbc );if _cgga !=nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dgdbc ,_cgga );
return nil ,_cgga ;};_aaeb ._aabbg =_ageaf ;default:_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_dgdbc );
return nil ,_g .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dgdbc );};return _aaeb ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ccbaf *PdfShadingType5 )ToPdfObject ()_bcg .PdfObject {_ccbaf .PdfShading .ToPdfObject ();_ccccf ,_aagfe :=_ccbaf .getShadingDict ();if _aagfe !=nil {_dff .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ccbaf .BitsPerCoordinate !=nil {_ccccf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ccbaf .BitsPerCoordinate );};if _ccbaf .BitsPerComponent !=nil {_ccccf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ccbaf .BitsPerComponent );
};if _ccbaf .VerticesPerRow !=nil {_ccccf .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_ccbaf .VerticesPerRow );};if _ccbaf .Decode !=nil {_ccccf .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ccbaf .Decode );};
if _ccbaf .Function !=nil {if len (_ccbaf .Function )==1{_ccccf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ccbaf .Function [0].ToPdfObject ());}else {_beag :=_bcg .MakeArray ();for _ ,_bfcegg :=range _ccbaf .Function {_beag .Append (_bfcegg .ToPdfObject ());
};_ccccf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_beag );};};return _ccbaf ._cdefff ;};func (_bcab *PdfReader )newPdfActionRenditionFromDict (_cdge *_bcg .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_cdge .Get ("\u0052"),AN :_cdge .Get ("\u0041\u004e"),OP :_cdge .Get ("\u004f\u0050"),JS :_cdge .Get ("\u004a\u0053")},nil ;
};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_gfdbe *PdfReader )GetCatalogStructTreeRoot ()(_bcg .PdfObject ,bool ){if _gfdbe ._fdeec ==nil {return nil ,false ;};_dbfcb :=_gfdbe ._fdeec .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return _dbfcb ,_dbfcb !=nil ;
};func (_ffcea *PdfReader )newPdfPageFromDict (_bcdad *_bcg .PdfObjectDictionary )(*PdfPage ,error ){_abdeg :=NewPdfPage ();_abdeg ._dabee =_bcdad ;_cdgeg :=*_bcdad ;_cgfcb ,_dffgg :=_cdgeg .Get ("\u0054\u0079\u0070\u0065").(*_bcg .PdfObjectName );if !_dffgg {return nil ,_bcd .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_cgfcb !="\u0050\u0061\u0067\u0065"{return nil ,_bcd .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _gfgf :=_cdgeg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_gfgf !=nil {_abdeg .Parent =_gfgf ;};if _fgeba :=_cdgeg .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_fgeba !=nil {_becd ,_agae :=_bcg .GetString (_fgeba );if !_agae {return nil ,_bcd .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_afgbb ,_feecc :=NewPdfDate (_becd .Str ());if _feecc !=nil {return nil ,_feecc ;};_abdeg .LastModified =&_afgbb ;};if _cffdg :=_cdgeg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_cffdg !=nil &&!_bcg .IsNullObject (_cffdg ){_bfaeb ,_decc :=_bcg .GetDict (_cffdg );
if !_decc {return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cffdg );};var _edcde error ;_abdeg .Resources ,_edcde =NewPdfPageResourcesFromDict (_bfaeb );
if _edcde !=nil {return nil ,_edcde ;};}else {_dgfd ,_cceef :=_abdeg .getParentResources ();if _cceef !=nil {return nil ,_cceef ;};if _dgfd ==nil {_dgfd =NewPdfPageResources ();};_abdeg .Resources =_dgfd ;};if _cebfe :=_cdgeg .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_cebfe !=nil {_fdff ,_edgb :=_bcg .GetArray (_cebfe );if !_edgb {return nil ,_bcd .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _cgeaf error ;
_abdeg .MediaBox ,_cgeaf =NewPdfRectangle (*_fdff );if _cgeaf !=nil {return nil ,_cgeaf ;};};if _ecda :=_cdgeg .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_ecda !=nil {_fcafg ,_ggfbc :=_bcg .GetArray (_ecda );if !_ggfbc {return nil ,_bcd .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _bfca error ;_abdeg .CropBox ,_bfca =NewPdfRectangle (*_fcafg );if _bfca !=nil {return nil ,_bfca ;};};if _acea :=_cdgeg .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_acea !=nil {_cddba ,_eaaace :=_bcg .GetArray (_acea );if !_eaaace {return nil ,_bcd .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _edbae error ;_abdeg .BleedBox ,_edbae =NewPdfRectangle (*_cddba );if _edbae !=nil {return nil ,_edbae ;};};if _cddda :=_cdgeg .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_cddda !=nil {_acbe ,_cada :=_bcg .GetArray (_cddda );if !_cada {return nil ,_bcd .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _gabfcd error ;_abdeg .TrimBox ,_gabfcd =NewPdfRectangle (*_acbe );if _gabfcd !=nil {return nil ,_gabfcd ;};};if _gcade :=_cdgeg .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_gcade !=nil {_gdacf ,_cabcc :=_bcg .GetArray (_gcade );if !_cabcc {return nil ,_bcd .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _bgfb error ;_abdeg .ArtBox ,_bgfb =NewPdfRectangle (*_gdacf );if _bgfb !=nil {return nil ,_bgfb ;};};if _gfffd :=_cdgeg .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_gfffd !=nil {_abdeg .BoxColorInfo =_gfffd ;};if _ddebe :=_cdgeg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
_ddebe !=nil {_abdeg .Contents =_ddebe ;};if _bdfbf :=_cdgeg .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_bdfbf !=nil {_deba ,_fbcfc :=_bcg .GetNumberAsInt64 (_bdfbf );if _fbcfc !=nil {return nil ,_bcd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_abdeg .Rotate =&_deba ;};if _eabcf :=_cdgeg .Get ("\u0047\u0072\u006fu\u0070");_eabcf !=nil {_abdeg .Group =_eabcf ;};if _aggdd :=_cdgeg .Get ("\u0054\u0068\u0075m\u0062");_aggdd !=nil {_abdeg .Thumb =_aggdd ;};if _cedca :=_cdgeg .Get ("\u0042");_cedca !=nil {_abdeg .B =_cedca ;
};if _affg :=_cdgeg .Get ("\u0044\u0075\u0072");_affg !=nil {_abdeg .Dur =_affg ;};if _aeeb :=_cdgeg .Get ("\u0054\u0072\u0061n\u0073");_aeeb !=nil {_abdeg .Trans =_aeeb ;};if _aaebf :=_cdgeg .Get ("\u0041\u0041");_aaebf !=nil {_abdeg .AA =_aaebf ;};if _acbad :=_cdgeg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");
_acbad !=nil {_abdeg .Metadata =_acbad ;};if _fbedb :=_cdgeg .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_fbedb !=nil {_abdeg .PieceInfo =_fbedb ;};if _edfaa :=_cdgeg .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_edfaa !=nil {_abdeg .StructParents =_edfaa ;};if _gcaed :=_cdgeg .Get ("\u0049\u0044");_gcaed !=nil {_abdeg .ID =_gcaed ;};if _ecdg :=_cdgeg .Get ("\u0050\u005a");_ecdg !=nil {_abdeg .PZ =_ecdg ;};if _cefee :=_cdgeg .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_cefee !=nil {_abdeg .SeparationInfo =_cefee ;};if _dcaeea :=_cdgeg .Get ("\u0054\u0061\u0062\u0073");_dcaeea !=nil {_abdeg .Tabs =_dcaeea ;};if _cabdc :=_cdgeg .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_cabdc !=nil {_abdeg .TemplateInstantiated =_cabdc ;};if _bgbe :=_cdgeg .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_bgbe !=nil {_abdeg .PresSteps =_bgbe ;};if _ceabc :=_cdgeg .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_ceabc !=nil {_abdeg .UserUnit =_ceabc ;
};if _aefg :=_cdgeg .Get ("\u0056\u0050");_aefg !=nil {_abdeg .VP =_aefg ;};if _fcdac :=_cdgeg .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_fcdac !=nil {_abdeg .Annots =_fcdac ;};_abdeg ._bebfe =_ffcea ;return _abdeg ,nil ;};func (_dbdba *PdfWriter )makeOffSetReference (_fbffa int64 ){_gbfed :=_g .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_fbffa );
_dbdba .writeString (_gbfed );_dbdba .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};

// Y returns the value of the yellow component of the color.
func (_bfga *PdfColorDeviceCMYK )Y ()float64 {return _bfga [2]};func (_dbgcd *PdfReader )newPdfSignatureFromIndirect (_cgeff *_bcg .PdfIndirectObject )(*PdfSignature ,error ){_bgba ,_fgca :=_cgeff .PdfObject .(*_bcg .PdfObjectDictionary );if !_fgca {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _cbefa ,_eedc :=_dbgcd ._abgg .GetModelFromPrimitive (_cgeff ).(*PdfSignature );_eedc {return _cbefa ,nil ;};_gacfc :=&PdfSignature {};_gacfc ._feead =_cgeff ;_gacfc .Type ,_ =_bcg .GetName (_bgba .Get ("\u0054\u0079\u0070\u0065"));
_gacfc .Filter ,_fgca =_bcg .GetName (_bgba .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_fgca {_dff .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_gacfc .SubFilter ,_ =_bcg .GetName (_bgba .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_gacfc .Contents ,_fgca =_bcg .GetString (_bgba .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_fgca {_dff .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _cbcd ,_efcaf :=_bcg .GetArray (_bgba .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_efcaf {_gacfc .Reference =_bcg .MakeArray ();for _ ,_efcc :=range _cbcd .Elements (){_eced ,_aeadc :=_bcg .GetDict (_efcc );
if !_aeadc {_dff .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_cdbea ,_bfeggf :=_dbgcd .newPdfSignatureReferenceFromDict (_eced );if _bfeggf !=nil {return nil ,_bfeggf ;};_gacfc .Reference .Append (_cdbea .ToPdfObject ());};};_gacfc .Cert =_bgba .Get ("\u0043\u0065\u0072\u0074");_gacfc .ByteRange ,_ =_bcg .GetArray (_bgba .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_gacfc .Changes ,_ =_bcg .GetArray (_bgba .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_gacfc .Name ,_ =_bcg .GetString (_bgba .Get ("\u004e\u0061\u006d\u0065"));_gacfc .M ,_ =_bcg .GetString (_bgba .Get ("\u004d"));_gacfc .Location ,_ =_bcg .GetString (_bgba .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_gacfc .Reason ,_ =_bcg .GetString (_bgba .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_gacfc .ContactInfo ,_ =_bcg .GetString (_bgba .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_gacfc .R ,_ =_bcg .GetInt (_bgba .Get ("\u0052"));
_gacfc .V ,_ =_bcg .GetInt (_bgba .Get ("\u0056"));_gacfc .PropBuild ,_ =_bcg .GetDict (_bgba .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_gacfc .PropAuthTime ,_ =_bcg .GetInt (_bgba .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_gacfc .PropAuthType ,_ =_bcg .GetName (_bgba .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_dbgcd ._abgg .Register (_cgeff ,_gacfc );return _gacfc ,nil ;};

// WriteToFile writes the output PDF to file.
func (_eefag *PdfWriter )WriteToFile (outputFilePath string )error {_gafcc ,_bcdgc :=_dee .Create (outputFilePath );if _bcdgc !=nil {return _bcdgc ;};defer _gafcc .Close ();return _eefag .Write (_gafcc );};func _gdef (_gbgab *_bcg .PdfObjectDictionary )(*PdfFieldText ,error ){_gegfd :=&PdfFieldText {};
_gegfd .DA ,_ =_bcg .GetString (_gbgab .Get ("\u0044\u0041"));_gegfd .Q ,_ =_bcg .GetInt (_gbgab .Get ("\u0051"));_gegfd .DS ,_ =_bcg .GetString (_gbgab .Get ("\u0044\u0053"));_gegfd .RV =_gbgab .Get ("\u0052\u0056");_gegfd .MaxLen ,_ =_bcg .GetInt (_gbgab .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));
return _gegfd ,nil ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_bcg .PdfObjectArray ;Matrix *_bcg .PdfObjectArray ;Function []PdfFunction ;};func (_bbc *PdfReader )newPdfActionTransFromDict (_ggbg *_bcg .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_ggbg .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};

// ParserMetadata gets the parser  metadata.
func (_febd *CompliancePdfReader )ParserMetadata ()_bcg .ParserMetadata {if _febd ._fdcb ==(_bcg .ParserMetadata {}){_febd ._fdcb ,_ =_febd ._eadaf .ParserMetadata ();};return _febd ._fdcb ;};func _gbgca (_afgc string )(map[_bf .CharCode ]_bf .GlyphName ,error ){_bbad :=_ce .Split (_afgc ,"\u000a");
_faebf :=make (map[_bf .CharCode ]_bf .GlyphName );for _ ,_gbae :=range _bbad {_babba :=_gcfgf .FindStringSubmatch (_gbae );if _babba ==nil {continue ;};_eeba ,_debcg :=_babba [1],_babba [2];_gcbae ,_abba :=_bce .Atoi (_eeba );if _abba !=nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_gbae );
return nil ,_bcg .ErrTypeError ;};_faebf [_bf .CharCode (_gcbae )]=_bf .GlyphName (_debcg );};_dff .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_faebf );
return _faebf ,nil ;};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _bcg .PdfObject ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_fgeef *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// SetLocation sets the `Location` field of the signature.
func (_efgfc *PdfSignature )SetLocation (location string ){_efgfc .Location =_bcg .MakeString (location )};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_fdbgf *pdfFontSimple )SetEncoder (encoder _bf .TextEncoder ){_fdbgf ._cbdg =encoder };

// String returns the name of the colorspace (DeviceN).
func (_adfge *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_bgb :=NewPdfAction ();_ef :=&PdfActionRendition {};_ef .PdfAction =_bgb ;_bgb .SetContext (_ef );return _ef ;};func _gcgba (_adgac *[]*PdfField ,_dccb FieldFilterFunc ,_dgbdc bool )[]*PdfField {if _adgac ==nil {return nil ;
};_cagbb :=*_adgac ;if len (*_adgac )==0{return nil ;};_cbgbg :=_cagbb [:0];if _dccb ==nil {_dccb =func (*PdfField )bool {return true };};var _adebf []*PdfField ;for _ ,_cgbde :=range _cagbb {_aaefd :=_dccb (_cgbde );if _aaefd {_adebf =append (_adebf ,_cgbde );
if len (_cgbde .Kids )> 0{_adebf =append (_adebf ,_gcgba (&_cgbde .Kids ,_dccb ,_dgbdc )...);};};if !_dgbdc ||!_aaefd ||len (_cgbde .Kids )> 0{_cbgbg =append (_cbgbg ,_cgbde );};};*_adgac =_cbgbg ;return _adebf ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_efbc *PdfColorspaceCalGray )ToPdfObject ()_bcg .PdfObject {_fdec :=&_bcg .PdfObjectArray {};_fdec .Append (_bcg .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_dgf :=_bcg .MakeDict ();if _efbc .WhitePoint !=nil {_dgf .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bcg .MakeArray (_bcg .MakeFloat (_efbc .WhitePoint [0]),_bcg .MakeFloat (_efbc .WhitePoint [1]),_bcg .MakeFloat (_efbc .WhitePoint [2])));
}else {_dff .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _efbc .BlackPoint !=nil {_dgf .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bcg .MakeArray (_bcg .MakeFloat (_efbc .BlackPoint [0]),_bcg .MakeFloat (_efbc .BlackPoint [1]),_bcg .MakeFloat (_efbc .BlackPoint [2])));
};_dgf .Set ("\u0047\u0061\u006dm\u0061",_bcg .MakeFloat (_efbc .Gamma ));_fdec .Append (_dgf );if _efbc ._dfce !=nil {_efbc ._dfce .PdfObject =_fdec ;return _efbc ._dfce ;};return _fdec ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_fgadc *PdfPageResources )HasXObjectByName (keyName _bcg .PdfObjectName )bool {_ddbbgd ,_ :=_fgadc .GetXObjectByName (keyName );return _ddbbgd !=nil ;};

// String returns a string representation of what flags are set.
func (_cagb FieldFlag )String ()string {_ecea :="";if _cagb ==FieldFlagClear {_ecea ="\u0043\u006c\u0065a\u0072";return _ecea ;};if _cagb &FieldFlagReadOnly > 0{_ecea +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _cagb &FieldFlagRequired > 0{_ecea +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";
};if _cagb &FieldFlagNoExport > 0{_ecea +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _cagb &FieldFlagNoToggleToOff > 0{_ecea +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _cagb &FieldFlagRadio > 0{_ecea +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _cagb &FieldFlagPushbutton > 0{_ecea +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _cagb &FieldFlagRadiosInUnision > 0{_ecea +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _cagb &FieldFlagMultiline > 0{_ecea +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _cagb &FieldFlagPassword > 0{_ecea +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _cagb &FieldFlagFileSelect > 0{_ecea +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _cagb &FieldFlagDoNotScroll > 0{_ecea +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _cagb &FieldFlagComb > 0{_ecea +="\u007c\u0043\u006fm\u0062";};if _cagb &FieldFlagRichText > 0{_ecea +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _cagb &FieldFlagDoNotSpellCheck > 0{_ecea +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _cagb &FieldFlagCombo > 0{_ecea +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _cagb &FieldFlagEdit > 0{_ecea +="\u007c\u0045\u0064i\u0074";};if _cagb &FieldFlagSort > 0{_ecea +="\u007c\u0053\u006fr\u0074";};if _cagb &FieldFlagMultiSelect > 0{_ecea +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _cagb &FieldFlagCommitOnSelChange > 0{_ecea +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _ce .Trim (_ecea ,"\u007c");};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_ddd :=NewPdfAnnotation ();_eac :=&PdfAnnotationSquare {};_eac .PdfAnnotation =_ddd ;_eac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ddd .SetContext (_eac );return _eac ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_bcg .PdfObject ;GetContainingPdfObject ()_bcg .PdfObject ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_adafc *PdfPageResources )SetPatternByName (keyName _bcg .PdfObjectName ,pattern _bcg .PdfObject )error {if _adafc .Pattern ==nil {_adafc .Pattern =_bcg .MakeDict ();};_dfccb ,_ffbag :=_adafc .Pattern .(*_bcg .PdfObjectDictionary );if !_ffbag {return _bcg .ErrTypeError ;
};_dfccb .Set (keyName ,pattern );return nil ;};func _ace (_bfcd *PdfPage )map[_bcg .PdfObjectName ]_bcg .PdfObject {_faac :=make (map[_bcg .PdfObjectName ]_bcg .PdfObject );if _bfcd .Resources ==nil {return _faac ;};if _bfcd .Resources .Font !=nil {if _dgba ,_gcd :=_bcg .GetDict (_bfcd .Resources .Font );
_gcd {for _ ,_ggeg :=range _dgba .Keys (){_faac [_ggeg ]=_dgba .Get (_ggeg );};};};if _bfcd .Resources .ExtGState !=nil {if _gca ,_dcga :=_bcg .GetDict (_bfcd .Resources .ExtGState );_dcga {for _ ,_ccge :=range _gca .Keys (){_faac [_ccge ]=_gca .Get (_ccge );
};};};if _bfcd .Resources .XObject !=nil {if _gbdf ,_aadb :=_bcg .GetDict (_bfcd .Resources .XObject );_aadb {for _ ,_abcf :=range _gbdf .Keys (){_faac [_abcf ]=_gbdf .Get (_abcf );};};};if _bfcd .Resources .Pattern !=nil {if _agag ,_bdfb :=_bcg .GetDict (_bfcd .Resources .Pattern );
_bdfb {for _ ,_eadf :=range _agag .Keys (){_faac [_eadf ]=_agag .Get (_eadf );};};};if _bfcd .Resources .Shading !=nil {if _fgdc ,_feea :=_bcg .GetDict (_bfcd .Resources .Shading );_feea {for _ ,_ffba :=range _fgdc .Keys (){_faac [_ffba ]=_fgdc .Get (_ffba );
};};};if _bfcd .Resources .ProcSet !=nil {if _bdbf ,_egfde :=_bcg .GetDict (_bfcd .Resources .ProcSet );_egfde {for _ ,_acca :=range _bdbf .Keys (){_faac [_acca ]=_bdbf .Get (_acca );};};};if _bfcd .Resources .Properties !=nil {if _gacd ,_dgef :=_bcg .GetDict (_bfcd .Resources .Properties );
_dgef {for _ ,_bgcf :=range _gacd .Keys (){_faac [_bgcf ]=_gacd .Get (_bgcf );};};};return _faac ;};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_acfgd *_bcg .PdfObjectDictionary ;Type *_bcg .PdfObjectName ;TransformMethod *_bcg .PdfObjectName ;TransformParams _bcg .PdfObject ;Data _bcg .PdfObject ;DigestMethod *_bcg .PdfObjectName ;};

// ToPdfObject implements interface PdfModel.
func (_cbac *PdfActionGoTo3DView )ToPdfObject ()_bcg .PdfObject {_cbac .PdfAction .ToPdfObject ();_dge :=_cbac ._aag ;_deef :=_dge .PdfObject .(*_bcg .PdfObjectDictionary );_deef .SetIfNotNil ("\u0053",_bcg .MakeName (string (ActionTypeGoTo3DView )));_deef .SetIfNotNil ("\u0054\u0041",_cbac .TA );
_deef .SetIfNotNil ("\u0056",_cbac .V );return _dge ;};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_fbcf *PdfColorDeviceGray )GetNumComponents ()int {return 1};func _bccc (_abbfb []byte )([]byte ,error ){_bfacc :=_fg .New ();if _ ,_eaebe :=_dg .Copy (_bfacc ,_gg .NewReader (_abbfb ));_eaebe !=nil {return nil ,_eaebe ;};return _bfacc .Sum (nil ),nil ;
};func (_ceede *PdfReader )newPdfAnnotationRedactFromDict (_cfe *_bcg .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_cfea :=PdfAnnotationRedact {};_aeaa ,_cfef :=_ceede .newPdfAnnotationMarkupFromDict (_cfe );if _cfef !=nil {return nil ,_cfef ;};
_cfea .PdfAnnotationMarkup =_aeaa ;_cfea .QuadPoints =_cfe .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_cfea .IC =_cfe .Get ("\u0049\u0043");_cfea .RO =_cfe .Get ("\u0052\u004f");_cfea .OverlayText =_cfe .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_cfea .Repeat =_cfe .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_cfea .DA =_cfe .Get ("\u0044\u0041");_cfea .Q =_cfe .Get ("\u0051");return &_cfea ,nil ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_feg *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_dddf ,_afeg :=color .(*PdfColorDeviceGray );if !_afeg {_dff .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_bcd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_dddf ),float64 (*_dddf ),float64 (*_dddf )),nil ;};

// PartialName returns the partial name of the field.
func (_bggbb *PdfField )PartialName ()string {_fgbcc :="";if _bggbb .T !=nil {_fgbcc =_bggbb .T .Decoded ();}else {_dff .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _fgbcc ;};

// RemovePage removes a page by number.
func (_age *PdfAppender )RemovePage (pageNum int ){_bcabd :=pageNum -1;_age ._dbc =append (_age ._dbc [0:_bcabd ],_age ._dbc [pageNum :]...);};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _bcg .PdfObject ;};

// IsValid checks if the given pdf output intent type is valid.
func (_dgab PdfOutputIntentType )IsValid ()bool {return _dgab >=PdfOutputIntentTypeA1 &&_dgab <=PdfOutputIntentTypeX ;};func (_fbefc *PdfWriter )hasObject (_dfegd _bcg .PdfObject )bool {_ ,_bgbfg :=_fbefc ._degdg [_dfegd ];return _bgbfg ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_babcf *PdfPageResources )GenerateXObjectName ()_bcg .PdfObjectName {_daba :=1;for {_fgdfa :=_bcg .MakeName (_g .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_daba ));if !_babcf .HasXObjectByName (*_fgdfa ){return *_fgdfa ;};_daba ++;};};func (_ecef *PdfReader )newPdfAnnotationSoundFromDict (_gfdg *_bcg .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_eead :=PdfAnnotationSound {};
_edagf ,_bfed :=_ecef .newPdfAnnotationMarkupFromDict (_gfdg );if _bfed !=nil {return nil ,_bfed ;};_eead .PdfAnnotationMarkup =_edagf ;_eead .Name =_gfdg .Get ("\u004e\u0061\u006d\u0065");_eead .Sound =_gfdg .Get ("\u0053\u006f\u0075n\u0064");return &_eead ,nil ;
};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};func (_gcgb *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _gcgb ._faaca ==nil &&_gcgb .DescendantFont !=nil {return _gcgb .DescendantFont .FontDescriptor ();};return _gcgb ._faaca ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bcg .PdfObject ;LE _bcg .PdfObject ;BS _bcg .PdfObject ;IC _bcg .PdfObject ;BE _bcg .PdfObject ;IT _bcg .PdfObject ;Measure _bcg .PdfObject ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_bcg .PdfObjectArray ;Domain *_bcg .PdfObjectArray ;Function []PdfFunction ;Extend *_bcg .PdfObjectArray ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_efgef *PdfReader )GetOutlines ()(*Outline ,error ){if _efgef ==nil {return nil ,_bcd .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_cfdaec :=_efgef .GetOutlineTree ();if _cfdaec ==nil {return nil ,_bcd .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _fedfa func (_eaadf *PdfOutlineTreeNode ,_dbcfd *[]*OutlineItem );_fedfa =func (_fbedd *PdfOutlineTreeNode ,_dbad *[]*OutlineItem ){if _fbedd ==nil {return ;};if _fbedd ._egdfd ==nil {_dff .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _gccec *OutlineItem ;if _aacgb ,_dfdfg :=_fbedd ._egdfd .(*PdfOutlineItem );_dfdfg {_dgag :=_aacgb .Dest ;if (_dgag ==nil ||_bcg .IsNullObject (_dgag ))&&_aacgb .A !=nil {if _ccadb ,_baada :=_bcg .GetDict (_aacgb .A );_baada {if _bfdec ,_adbbdf :=_bcg .GetArray (_ccadb .Get ("\u0044"));
_adbbdf {_dgag =_bfdec ;}else {_defc ,_ddgf :=_bcg .GetString (_ccadb .Get ("\u0044"));if !_ddgf {return ;};_adcdff ,_ddgf :=_efgef ._fdeec .Get ("\u004e\u0061\u006de\u0073").(*_bcg .PdfObjectReference );if !_ddgf {return ;};_aggee ,_fgbdf :=_efgef ._eadaf .LookupByReference (*_adcdff );
if _fgbdf !=nil {_dff .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_fgbdf .Error ());
return ;};_gefgg ,_ddgf :=_aggee .(*_bcg .PdfIndirectObject );if !_ddgf {return ;};_eddag :=map[_bcg .PdfObject ]struct{}{};_fgbdf =_efgef .buildNameNodes (_gefgg ,_eddag );if _fgbdf !=nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_fgbdf .Error ());
return ;};for _gdfc :=range _eddag {_adegf ,_ddfdb :=_bcg .GetDict (_gdfc );if !_ddfdb {continue ;};_adbfa ,_ddfdb :=_bcg .GetArray (_adegf .Get ("\u004e\u0061\u006de\u0073"));if !_ddfdb {continue ;};for _cbdbe ,_gcgbe :=range _adbfa .Elements (){switch _gcgbe .(type ){case *_bcg .PdfObjectString :if _gcgbe .String ()==_defc .String (){if _egeeg :=_adbfa .Get (_cbdbe +1);
_egeeg !=nil {if _gfege ,_daeaa :=_bcg .GetDict (_egeeg );_daeaa {_dgag =_gfege .Get ("\u0044");break ;};};};};};};};};};var _bdbac OutlineDest ;if _dgag !=nil &&!_bcg .IsNullObject (_dgag ){if _dcfae ,_gebdb :=_gccf (_dgag ,_efgef );_gebdb ==nil {_bdbac =*_dcfae ;
}else {_dff .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_dgag ,_gebdb );
};};_gccec =NewOutlineItem (_aacgb .Title .Decoded (),_bdbac );*_dbad =append (*_dbad ,_gccec );if _aacgb .Next !=nil {_fedfa (_aacgb .Next ,_dbad );};};if _fbedd .First !=nil {if _gccec !=nil {_dbad =&_gccec .Entries ;};_fedfa (_fbedd .First ,_dbad );
};};_cagf :=NewOutline ();_fedfa (_cfdaec ,&_cagf .Entries );return _cagf ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_ffae *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// String returns a string that describes `base`.
func (_bafgc fontCommon )String ()string {return _g .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_bafgc .coreString ());};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_ddgd :=PdfColorCalRGB {a ,b ,c };return &_ddgd ;};func _gccf (_fgedd _bcg .PdfObject ,_dggfb *PdfReader )(*OutlineDest ,error ){_acgdc ,_bgcce :=_bcg .GetArray (_fgedd );if !_bgcce {return nil ,_bcd .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_fdgfa :=_acgdc .Len ();if _fdgfa < 2{return nil ,_g .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_fdgfa );
};_ecdb :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_bebbg :=_acgdc .Get (0);if _bfff ,_cgdge :=_bcg .GetIndirect (_bebbg );_cgdge {if _ ,_gbgfd ,_dgfge :=_dggfb .PageFromIndirectObject (_bfff );_dgfge ==nil {_ecdb .Page =int64 (_gbgfd -1);}else {_dff .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_bfff );
};_ecdb .PageObj =_bfff ;}else if _badge ,_gadeg :=_bcg .GetIntVal (_bebbg );_gadeg {if _badge >=0&&_badge < len (_dggfb .PageList ){_ecdb .PageObj =_dggfb .PageList [_badge ].GetPageAsIndirectObject ();}else {_dff .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_badge );
};_ecdb .Page =int64 (_badge );}else {return nil ,_g .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_bebbg );};_bffbe ,_bgcce :=_bcg .GetNameVal (_acgdc .Get (1));
if !_bgcce {_dff .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_acgdc .Get (1));
return _ecdb ,nil ;};switch _bffbe {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _fdgfa > 2{_ecdb .Y ,_ =_bcg .GetNumberAsFloat (_bcg .TraceToDirectObject (_acgdc .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _fdgfa > 2{_ecdb .X ,_ =_bcg .GetNumberAsFloat (_bcg .TraceToDirectObject (_acgdc .Get (2)));
};case "\u0058\u0059\u005a":if _fdgfa > 4{_ecdb .X ,_ =_bcg .GetNumberAsFloat (_bcg .TraceToDirectObject (_acgdc .Get (2)));_ecdb .Y ,_ =_bcg .GetNumberAsFloat (_bcg .TraceToDirectObject (_acgdc .Get (3)));_ecdb .Zoom ,_ =_bcg .GetNumberAsFloat (_bcg .TraceToDirectObject (_acgdc .Get (4)));
};default:_bffbe ="\u0046\u0069\u0074";};_ecdb .Mode =_bffbe ;return _ecdb ,nil ;};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_edaf *Image )GetSamples ()[]uint32 {_acbdf :=_ff .ResampleBytes (_edaf .Data ,int (_edaf .BitsPerComponent ));if _edaf .BitsPerComponent < 8{_acbdf =_edaf .samplesTrimPadding (_acbdf );};_egaaf :=int (_edaf .Width )*int (_edaf .Height )*_edaf .ColorComponents ;
if len (_acbdf )< _egaaf {_dff .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_acbdf ),_egaaf );
return _acbdf ;}else if len (_acbdf )> _egaaf {_dff .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_acbdf ),_egaaf );
_acbdf =_acbdf [:_egaaf ];};return _acbdf ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_dbdbd []byte )(_ecbbf int ,_efea error );};

// GetVersion gets the document version.
func (_gbdc *PdfWriter )GetVersion ()_bcg .Version {return _gbdc ._cbdba };

// ToPdfObject implements interface PdfModel.
func (_aagf *PdfActionJavaScript )ToPdfObject ()_bcg .PdfObject {_aagf .PdfAction .ToPdfObject ();_ege :=_aagf ._aag ;_gcc :=_ege .PdfObject .(*_bcg .PdfObjectDictionary );_gcc .SetIfNotNil ("\u0053",_bcg .MakeName (string (ActionTypeJavaScript )));_gcc .SetIfNotNil ("\u004a\u0053",_aagf .JS );
return _ege ;};func _aecg (_ffegfd *_bcg .PdfObjectDictionary )(*PdfShadingType7 ,error ){_dfdae :=PdfShadingType7 {};_cebgg :=_ffegfd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _cebgg ==nil {_dff .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gecfb ,_bfdga :=_cebgg .(*_bcg .PdfObjectInteger );if !_bfdga {_dff .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cebgg );
return nil ,_bcg .ErrTypeError ;};_dfdae .BitsPerCoordinate =_gecfb ;_cebgg =_ffegfd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cebgg ==nil {_dff .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_gecfb ,_bfdga =_cebgg .(*_bcg .PdfObjectInteger );if !_bfdga {_dff .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cebgg );
return nil ,_bcg .ErrTypeError ;};_dfdae .BitsPerComponent =_gecfb ;_cebgg =_ffegfd .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _cebgg ==nil {_dff .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gecfb ,_bfdga =_cebgg .(*_bcg .PdfObjectInteger );if !_bfdga {_dff .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_cebgg );
return nil ,_bcg .ErrTypeError ;};_dfdae .BitsPerComponent =_gecfb ;_cebgg =_ffegfd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cebgg ==nil {_dff .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bcgbe ,_bfdga :=_cebgg .(*_bcg .PdfObjectArray );if !_bfdga {_dff .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cebgg );
return nil ,_bcg .ErrTypeError ;};_dfdae .Decode =_bcgbe ;if _cddfb :=_ffegfd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_cddfb !=nil {_dfdae .Function =[]PdfFunction {};if _fdeef ,_adbg :=_cddfb .(*_bcg .PdfObjectArray );_adbg {for _ ,_gefaa :=range _fdeef .Elements (){_ddcaa ,_fbaee :=_bdgfe (_gefaa );
if _fbaee !=nil {_dff .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fbaee );return nil ,_fbaee ;};_dfdae .Function =append (_dfdae .Function ,_ddcaa );
};}else {_cdacg ,_egec :=_bdgfe (_cddfb );if _egec !=nil {_dff .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_egec );return nil ,_egec ;
};_dfdae .Function =append (_dfdae .Function ,_cdacg );};};return &_dfdae ,nil ;};

// SetOCProperties sets the optional content properties.
func (_bafea *PdfWriter )SetOCProperties (ocProperties _bcg .PdfObject )error {_bafac :=_bafea ._gbfg ;if ocProperties !=nil {_dff .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_bafac .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _bafea .addObjects (ocProperties );};return nil ;};

// ImageToRGB convert an indexed image to RGB.
func (_eacd *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_eacd .Base .GetNumComponents ();if N < 1{return Image {},_g .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_ffca :=_dca .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._aagba ,img ._agagd );_bcgg :=_ff .NewReader (img .getBase ());_eged :=_ff .NewWriter (_ffca );var (_adac uint32 ;_dcfb int ;_acbb error ;);for {_adac ,_acbb =_bcgg .ReadSample ();
if _acbb ==_dg .EOF {break ;}else if _acbb !=nil {return img ,_acbb ;};_dcfb =int (_adac );_dff .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_dcfb ,N ,len (_eacd ._fdfca ));
if (_dcfb +1)*N > len (_eacd ._fdfca ){_dcfb =len (_eacd ._fdfca )/N -1;_dff .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_dcfb );if _dcfb < 0{_dff .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _effge :=_dcfb *N ;_effge < (_dcfb +1)*N ;_effge ++{if _acbb =_eged .WriteSample (uint32 (_eacd ._fdfca [_effge ]));_acbb !=nil {return img ,_acbb ;};};};return _eacd .Base .ImageToRGB (_bgcbe (&_ffca ));};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_gadfe *PdfFont )CharcodesToStrings (charcodes []_bf .CharCode )([]string ,int ,int ){_ddad :=_gadfe .baseFields ();_fedf :=make ([]string ,0,len (charcodes ));_cged :=0;_efeee :=_gadfe .Encoder ();_fcbcf :=_ddad ._bgebe !=nil &&_gadfe .IsSimple ()&&_gadfe .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_ce .Contains (_ddad ._bgebe .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_fcbcf &&_efeee !=nil {switch _eaac :=_efeee .(type ){case _bf .SimpleEncoder :_gecbf :=_eaac .BaseName ();if _ ,_bggg :=_ebgea [_gecbf ];_bggg {for _ ,_ccbd :=range charcodes {if _bddf ,_bdceg :=_efeee .CharcodeToRune (_ccbd );_bdceg {_fedf =append (_fedf ,string (_bddf ));
}else {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_ccbd ,charcodes ,_ddad .isCIDFont (),_gadfe ,_efeee );
_cged ++;_fedf =append (_fedf ,_faa .MissingCodeString );};};return _fedf ,len (_fedf ),_cged ;};};};for _ ,_aagab :=range charcodes {if _ddad ._bgebe !=nil {if _adfdd ,_fbaf :=_ddad ._bgebe .CharcodeToUnicode (_faa .CharCode (_aagab ));_fbaf {_fedf =append (_fedf ,_adfdd );
continue ;};};if _efeee !=nil {if _eddgf ,_cacg :=_efeee .CharcodeToRune (_aagab );_cacg {_fedf =append (_fedf ,string (_eddgf ));continue ;};};_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_aagab ,charcodes ,_ddad .isCIDFont (),_gadfe ,_efeee );
_cged ++;_fedf =append (_fedf ,_faa .MissingCodeString );};if _cged !=0{_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_cged ,_gadfe );
};return _fedf ,len (_fedf ),_cged ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_dbcff *PdfFieldButton )ToPdfObject ()_bcg .PdfObject {_dbcff .PdfField .ToPdfObject ();_caad :=_dbcff ._bddgb ;_ecag :=_caad .PdfObject .(*_bcg .PdfObjectDictionary );_ecag .Set ("\u0046\u0054",_bcg .MakeName ("\u0042\u0074\u006e"));if _dbcff .Opt !=nil {_ecag .Set ("\u004f\u0070\u0074",_dbcff .Opt );
};return _caad ;};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_dcde :=&PdfColorspaceDeviceN {};return _dcde };

// ToPdfObject returns a stream object.
func (_abegg *XObjectImage )ToPdfObject ()_bcg .PdfObject {_cbfbg :=_abegg ._adbae ;_aaee :=_cbfbg .PdfObjectDictionary ;if _abegg .Filter !=nil {_aaee =_abegg .Filter .MakeStreamDict ();_cbfbg .PdfObjectDictionary =_aaee ;};_aaee .Set ("\u0054\u0079\u0070\u0065",_bcg .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_aaee .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0049\u006d\u0061g\u0065"));_aaee .Set ("\u0057\u0069\u0064t\u0068",_bcg .MakeInteger (*(_abegg .Width )));_aaee .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bcg .MakeInteger (*(_abegg .Height )));
if _abegg .BitsPerComponent !=nil {_aaee .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bcg .MakeInteger (*(_abegg .BitsPerComponent )));};if _abegg .ColorSpace !=nil {_aaee .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_abegg .ColorSpace .ToPdfObject ());
};_aaee .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_abegg .Intent );_aaee .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_abegg .ImageMask );_aaee .SetIfNotNil ("\u004d\u0061\u0073\u006b",_abegg .Mask );_edfbc :=_aaee .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _abegg .Decode ==nil &&_edfbc {_aaee .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _abegg .Decode !=nil {_aaee .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_abegg .Decode );};_aaee .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_abegg .Interpolate );
_aaee .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_abegg .Alternatives );_aaee .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_abegg .SMask );_aaee .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_abegg .SMaskInData );
_aaee .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_abegg .Matte );_aaee .SetIfNotNil ("\u004e\u0061\u006d\u0065",_abegg .Name );_aaee .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_abegg .StructParent );_aaee .SetIfNotNil ("\u0049\u0044",_abegg .ID );
_aaee .SetIfNotNil ("\u004f\u0050\u0049",_abegg .OPI );_aaee .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_abegg .Metadata );_aaee .SetIfNotNil ("\u004f\u0043",_abegg .OC );_aaee .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bcg .MakeInteger (int64 (len (_abegg .Stream ))));
_cbfbg .Stream =_abegg .Stream ;return _cbfbg ;};

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_cdade *_bcg .PdfObjectDictionary ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_bcg .PdfObjectArray ;Domain *_bcg .PdfObjectArray ;Function []PdfFunction ;Extend *_bcg .PdfObjectArray ;};

// Subtype returns the font's "Subtype" field.
func (_bgbb *PdfFont )Subtype ()string {_gagce :=_bgbb .baseFields ()._cfeef ;if _eegfc ,_afae :=_bgbb ._aabbg .(*pdfFontType0 );_afae {_gagce =_gagce +"\u003a"+_eegfc .DescendantFont .Subtype ();};return _gagce ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fabdf *PdfColorspaceDeviceGray )ToPdfObject ()_bcg .PdfObject {return _bcg .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_egga *PdfColorspaceDeviceN )GetNumComponents ()int {return _egga .ColorantNames .Len ()};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_dgcbd DefaultImageHandler )NewGrayImageFromGoImage (goimg _af .Image )(*Image ,error ){_cgad :=goimg .Bounds ();_edbad :=&Image {Width :int64 (_cgad .Dx ()),Height :int64 (_cgad .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _dcdc :=goimg .(type ){case *_af .Gray :if len (_dcdc .Pix )!=_cgad .Dx ()*_cgad .Dy (){_bbddg ,_dfdff :=_dca .GrayConverter .Convert (goimg );
if _dfdff !=nil {return nil ,_dfdff ;};_edbad .Data =_bbddg .Pix ();}else {_edbad .Data =_dcdc .Pix ;};case *_af .Gray16 :_edbad .BitsPerComponent =16;if len (_dcdc .Pix )!=_cgad .Dx ()*_cgad .Dy ()*2{_dgdc ,_dfgae :=_dca .Gray16Converter .Convert (goimg );
if _dfgae !=nil {return nil ,_dfgae ;};_edbad .Data =_dgdc .Pix ();}else {_edbad .Data =_dcdc .Pix ;};case _dca .Image :_fcaea :=_dcdc .Base ();if _fcaea .ColorComponents ==1{_edbad .BitsPerComponent =int64 (_fcaea .BitsPerComponent );_edbad .Data =_fcaea .Data ;
return _edbad ,nil ;};_cbbb ,_dccbb :=_dca .GrayConverter .Convert (goimg );if _dccbb !=nil {return nil ,_dccbb ;};_edbad .Data =_cbbb .Pix ();default:_eacbe ,_gdfeda :=_dca .GrayConverter .Convert (goimg );if _gdfeda !=nil {return nil ,_gdfeda ;};_edbad .Data =_eacbe .Pix ();
};return _edbad ,nil ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_dfca *PdfColorspaceDeviceNAttributes )ToPdfObject ()_bcg .PdfObject {_eccg :=_bcg .MakeDict ();if _dfca .Subtype !=nil {_eccg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dfca .Subtype );};_eccg .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_dfca .Colorants );
_eccg .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_dfca .Process );_eccg .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_dfca .MixingHints );if _dfca ._ecgb !=nil {_dfca ._ecgb .PdfObject =_eccg ;return _dfca ._ecgb ;
};return _eccg ;};

// ToPdfObject implements interface PdfModel.
func (_gccg *PdfAnnotationStamp )ToPdfObject ()_bcg .PdfObject {_gccg .PdfAnnotation .ToPdfObject ();_egcf :=_gccg ._cbe ;_bcabb :=_egcf .PdfObject .(*_bcg .PdfObjectDictionary );_gccg .PdfAnnotationMarkup .appendToPdfDictionary (_bcabb );_bcabb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0053\u0074\u0061m\u0070"));
_bcabb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_gccg .Name );return _egcf ;};func _agccc (_fcgf _bcg .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_bfce :=&PdfColorspaceDeviceNAttributes {};var _cacd *_bcg .PdfObjectDictionary ;switch _bcdfb :=_fcgf .(type ){case *_bcg .PdfIndirectObject :_bfce ._ecgb =_bcdfb ;
var _bdga bool ;_cacd ,_bdga =_bcdfb .PdfObject .(*_bcg .PdfObjectDictionary );if !_bdga {_dff .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_bcd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_bcg .PdfObjectDictionary :_cacd =_bcdfb ;case *_bcg .PdfObjectReference :_gafg :=_bcdfb .Resolve ();return _agccc (_gafg );default:_dff .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_bcd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _deec :=_cacd .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_deec !=nil {_dfaba ,_cfgaa :=_bcg .TraceToDirectObject (_deec ).(*_bcg .PdfObjectName );if !_cfgaa {_dff .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_bcd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_bfce .Subtype =_dfaba ;};if _fbbd :=_cacd .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_fbbd !=nil {_bfce .Colorants =_fbbd ;};if _daacd :=_cacd .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_daacd !=nil {_bfce .Process =_daacd ;};if _dcbe :=_cacd .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_dcbe !=nil {_bfce .MixingHints =_dcbe ;};return _bfce ,nil ;};func _ffggf (_aecbae *_bcg .PdfObjectDictionary )(*PdfShadingType1 ,error ){_dagfa :=PdfShadingType1 {};
if _gafbc :=_aecbae .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_gafbc !=nil {_gafbc =_bcg .TraceToDirectObject (_gafbc );_aaaee ,_fcbgg :=_gafbc .(*_bcg .PdfObjectArray );if !_fcbgg {_dff .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gafbc );
return nil ,_bcd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dagfa .Domain =_aaaee ;};if _fffgc :=_aecbae .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_fffgc !=nil {_fffgc =_bcg .TraceToDirectObject (_fffgc );
_dcac ,_ggbc :=_fffgc .(*_bcg .PdfObjectArray );if !_ggbc {_dff .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fffgc );return nil ,_bcd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_dagfa .Matrix =_dcac ;};_decb :=_aecbae .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _decb ==nil {_dff .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_dagfa .Function =[]PdfFunction {};if _eggc ,_cgcfdd :=_decb .(*_bcg .PdfObjectArray );_cgcfdd {for _ ,_bddb :=range _eggc .Elements (){_dcdgg ,_bgcccb :=_bdgfe (_bddb );if _bgcccb !=nil {_dff .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bgcccb );
return nil ,_bgcccb ;};_dagfa .Function =append (_dagfa .Function ,_dcdgg );};}else {_ecbbe ,_bfdecf :=_bdgfe (_decb );if _bfdecf !=nil {_dff .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bfdecf );
return nil ,_bfdecf ;};_dagfa .Function =append (_dagfa .Function ,_ecbbe );};return &_dagfa ,nil ;};func (_egg *PdfAnnotation )String ()string {_ddcec :="";_bbg ,_fgd :=_egg .ToPdfObject ().(*_bcg .PdfIndirectObject );if _fgd {_ddcec =_g .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_egg ._cge ,_bbg .PdfObject .String ());
};return _ddcec ;};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_ecebc *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _ecebc ._eadaf .GetRevisionNumber ()==0{return nil ,_bcd .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _fead ,_acae :=_ecebc ._gdcc [_ecebc ];_acae {return _fead ,nil ;};_bbgf ,_dccfg :=_ecebc ._eadaf .GetPreviousRevisionReadSeeker ();if _dccfg !=nil {return nil ,_dccfg ;};_gaggf ,_dccfg :=_bebbaf (_bbgf ,_ecebc ._efec ,_ecebc ._dgege ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _dccfg !=nil {return nil ,_dccfg ;};_ecebc ._cdddg [_ecebc ._eadaf .GetRevisionNumber ()-1]=_gaggf ;_ecebc ._gdcc [_ecebc ]=_gaggf ;_gaggf ._gdcc =_ecebc ._gdcc ;return _gaggf ,nil ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_afdcg OutlineDest )ToPdfObject ()_bcg .PdfObject {if (_afdcg .PageObj ==nil &&_afdcg .Page < 0)||_afdcg .Mode ==""{return _bcg .MakeNull ();};_daefg :=_bcg .MakeArray ();if _afdcg .PageObj !=nil {_daefg .Append (_afdcg .PageObj );}else {_daefg .Append (_bcg .MakeInteger (_afdcg .Page ));
};_daefg .Append (_bcg .MakeName (_afdcg .Mode ));switch _afdcg .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_daefg .Append (_bcg .MakeFloat (_afdcg .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_daefg .Append (_bcg .MakeFloat (_afdcg .X ));
case "\u0058\u0059\u005a":_daefg .Append (_bcg .MakeFloat (_afdcg .X ));_daefg .Append (_bcg .MakeFloat (_afdcg .Y ));_daefg .Append (_bcg .MakeFloat (_afdcg .Zoom ));default:_daefg .Set (1,_bcg .MakeName ("\u0046\u0069\u0074"));};return _daefg ;};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_ffdad *PdfWriter )ApplyStandard (optimizer StandardApplier ){_ffdad ._dbda =optimizer };

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bcg .PdfObject ;};var (_dgea _b .Mutex ;_bacbg ="";_edgbd _dd .Time ;_bdgbc ="";_fgebbbd ="";_gfbb _dd .Time ;_fcfbe ="";_bgcfg ="";_ebdf ="";);

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _bcg .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_bcg .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_bdag ,_aecaa :=encoder .EncodeBytes (img .Data );
if _aecaa !=nil {_dff .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_aecaa );return nil ,_aecaa ;};_deeec :=NewXObjectImage ();_abbcb :=img .Width ;_adacd :=img .Height ;
_deeec .Width =&_abbcb ;_deeec .Height =&_adacd ;_dafga :=img .BitsPerComponent ;_deeec .BitsPerComponent =&_dafga ;_deeec .Filter =encoder ;_deeec .Stream =_bdag ;if cs ==nil {if img .ColorComponents ==1{_deeec .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_deeec .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_deeec .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_bcd .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_deeec .ColorSpace =cs ;};if len (img ._aagba )!=0{_acbgf :=NewXObjectImage ();_acbgf .Filter =encoder ;_aadda ,_afcfc :=encoder .EncodeBytes (img ._aagba );if _afcfc !=nil {_dff .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_afcfc );
return nil ,_afcfc ;};_acbgf .Stream =_aadda ;_acbgf .BitsPerComponent =_deeec .BitsPerComponent ;_acbgf .Width =&img .Width ;_acbgf .Height =&img .Height ;_acbgf .ColorSpace =NewPdfColorspaceDeviceGray ();_deeec .SMask =_acbgf .ToPdfObject ();}else {_deeec .SMask =xobjIn .SMask ;
_deeec .ImageMask =xobjIn .ImageMask ;if _deeec .ColorSpace .GetNumComponents ()==1{_cbcbfc (_deeec );};};return _deeec ,nil ;};var ErrColorOutOfRange =_bcd .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");


// ToPdfObject implements interface PdfModel.
func (_egaf *PdfAnnotationInk )ToPdfObject ()_bcg .PdfObject {_egaf .PdfAnnotation .ToPdfObject ();_bbb :=_egaf ._cbe ;_aafa :=_bbb .PdfObject .(*_bcg .PdfObjectDictionary );_egaf .PdfAnnotationMarkup .appendToPdfDictionary (_aafa );_aafa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0049\u006e\u006b"));
_aafa .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_egaf .InkList );_aafa .SetIfNotNil ("\u0042\u0053",_egaf .BS );return _bbb ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_dccc :=NewPdfAnnotation ();_dcae :=&PdfAnnotationSound {};_dcae .PdfAnnotation =_dccc ;_dcae .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dccc .SetContext (_dcae );return _dcae ;};

// ToPdfObject implements interface PdfModel.
func (_ccec *PdfAnnotationFreeText )ToPdfObject ()_bcg .PdfObject {_ccec .PdfAnnotation .ToPdfObject ();_egfg :=_ccec ._cbe ;_cdef :=_egfg .PdfObject .(*_bcg .PdfObjectDictionary );_ccec .PdfAnnotationMarkup .appendToPdfDictionary (_cdef );_cdef .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_cdef .SetIfNotNil ("\u0044\u0041",_ccec .DA );_cdef .SetIfNotNil ("\u0051",_ccec .Q );_cdef .SetIfNotNil ("\u0052\u0043",_ccec .RC );_cdef .SetIfNotNil ("\u0044\u0053",_ccec .DS );_cdef .SetIfNotNil ("\u0043\u004c",_ccec .CL );_cdef .SetIfNotNil ("\u0049\u0054",_ccec .IT );
_cdef .SetIfNotNil ("\u0042\u0045",_ccec .BE );_cdef .SetIfNotNil ("\u0052\u0044",_ccec .RD );_cdef .SetIfNotNil ("\u0042\u0053",_ccec .BS );_cdef .SetIfNotNil ("\u004c\u0045",_ccec .LE );return _egfg ;};func _ddffa (_cdcfd *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_cdcfd }};


// GetSubFilter returns SubFilter value or empty string.
func (_feagb *pdfSignDictionary )GetSubFilter ()string {_gcaba :=_feagb .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _gcaba ==nil {return "";};if _aabbf ,_bfeff :=_bcg .GetNameVal (_gcaba );_bfeff {return _aabbf ;};return "";};const (FieldFlagClear FieldFlag =0;
FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);
FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);
FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_ca :=NewPdfAction ();_cba :=&PdfActionTrans {};_cba .PdfAction =_ca ;_ca .SetContext (_cba );return _cba ;};func (_bgabc *PdfWriter )setDocumentIDs (_dgegee ,_beabb string ){_bgabc ._cdfbd =_bcg .MakeArray (_bcg .MakeHexString (_dgegee ),_bcg .MakeHexString (_beabb ));
};func (_dcdgf *PdfFilespec )getDict ()*_bcg .PdfObjectDictionary {if _efde ,_bgcg :=_dcdgf ._baegd .(*_bcg .PdfIndirectObject );_bgcg {_fgffb ,_gede :=_efde .PdfObject .(*_bcg .PdfObjectDictionary );if !_gede {return nil ;};return _fgffb ;}else if _adeg ,_afdef :=_dcdgf ._baegd .(*_bcg .PdfObjectDictionary );
_afdef {return _adeg ;}else {_dff .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_dcdgf ._baegd );
return nil ;};};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_fdbdb *PdfColorspaceICCBased )GetContainingPdfObject ()_bcg .PdfObject {return _fdbdb ._fcde };func (_gafe *PdfReader )newPdfActionGoTo3DViewFromDict (_bff *_bcg .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_bff .Get ("\u0054\u0041"),V :_bff .Get ("\u0056")},nil ;
};

// ToInteger convert to an integer format.
func (_ggbb *PdfColorCalGray )ToInteger (bits int )uint32 {_bfae :=_ab .Pow (2,float64 (bits ))-1;return uint32 (_bfae *_ggbb .Val ());};

// SetAction sets the PDF action for the annotation link.
func (_cec *PdfAnnotationLink )SetAction (action *PdfAction ){_cec ._acf =action ;if action ==nil {_cec .A =nil ;};};

// Height returns the height of `rect`.
func (_gfed *PdfRectangle )Height ()float64 {return _ab .Abs (_gfed .Ury -_gfed .Lly )};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_gbffee *PdfPage )Size ()(float64 ,float64 ,error ){_geac ,_ebegde :=_gbffee .GetMediaBox ();if _ebegde !=nil {return 0,0,_ebegde ;};_eefg ,_cdbfa :=_geac .Width (),_geac .Height ();_gbed ,_ebegde :=_gbffee .GetRotate ();if _ebegde !=nil {_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_ebegde .Error ());
};if _cfcee :=_gbed ;_cfcee %360!=0&&_cfcee %90==0{if _bgccc :=(360+_cfcee %360)%360;_bgccc ==90||_bgccc ==270{_eefg ,_cdbfa =_cdbfa ,_eefg ;};};return _eefg ,_cdbfa ,nil ;};

// String returns a human readable description of `fontfile`.
func (_egee *fontFile )String ()string {_gbdb :="\u005b\u004e\u006f\u006e\u0065\u005d";if _egee ._beab !=nil {_gbdb =_egee ._beab .String ();};return _g .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_egee ._gdee ,_gbdb );
};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_ggfg *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_dafbg :=0.3*_ggfg .R ()+0.59*_ggfg .G ()+0.11*_ggfg .B ();_dafbg =_ab .Min (_ab .Max (_dafbg ,0.0),1.0);return NewPdfColorDeviceGray (_dafbg );};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_ba :=NewPdfAction ();_be :=&PdfActionLaunch {};_be .PdfAction =_ba ;_ba .SetContext (_be );return _be ;};

// ToPdfObject implements interface PdfModel.
func (_fadbg *PdfAnnotationMovie )ToPdfObject ()_bcg .PdfObject {_fadbg .PdfAnnotation .ToPdfObject ();_fdbd :=_fadbg ._cbe ;_bggf :=_fdbd .PdfObject .(*_bcg .PdfObjectDictionary );_bggf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u004d\u006f\u0076i\u0065"));
_bggf .SetIfNotNil ("\u0054",_fadbg .T );_bggf .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_fadbg .Movie );_bggf .SetIfNotNil ("\u0041",_fadbg .A );return _fdbd ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_fgde :=NewPdfOutline ();_fgde ._egdfd =&_fgde ;return _fgde };

// SetContext sets the sub annotation (context).
func (_gfgb *PdfAnnotation )SetContext (ctx PdfModel ){_gfgb ._cge =ctx };

// PdfVersion returns version of the PDF file.
func (_efdc *PdfReader )PdfVersion ()_bcg .Version {return _efdc ._eadaf .PdfVersion ()};func (_gefag Image )getBase ()_dca .ImageBase {return _dca .NewImageBase (int (_gefag .Width ),int (_gefag .Height ),int (_gefag .BitsPerComponent ),_gefag .ColorComponents ,_gefag .Data ,_gefag ._aagba ,_gefag ._agagd );
};func (_gbec *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _gbec ._faaca };

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_gcfbd *PdfPage )SetContentStreams (cStreams []string ,encoder _bcg .StreamEncoder )error {if len (cStreams )==0{_gcfbd .Contents =nil ;return nil ;};if encoder ==nil {encoder =_bcg .NewRawEncoder ();};var _egad []*_bcg .PdfObjectStream ;for _ ,_cefeb :=range cStreams {_fafbf :=&_bcg .PdfObjectStream {};
_ecdcc :=encoder .MakeStreamDict ();_gddee ,_bccgg :=encoder .EncodeBytes ([]byte (_cefeb ));if _bccgg !=nil {return _bccgg ;};_ecdcc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bcg .MakeInteger (int64 (len (_gddee ))));_fafbf .PdfObjectDictionary =_ecdcc ;
_fafbf .Stream =_gddee ;_egad =append (_egad ,_fafbf );};if len (_egad )==1{_gcfbd .Contents =_egad [0];}else {_cbaf :=_bcg .MakeArray ();for _ ,_aeabe :=range _egad {_cbaf .Append (_aeabe );};_gcfbd .Contents =_cbaf ;};return nil ;};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_bcecf *PdfReader )CheckAccessRights (password []byte )(bool ,_fe .Permissions ,error ){return _bcecf ._eadaf .CheckAccessRights (password );};func (_bacb *PdfReader )newPdfAnnotationPopupFromDict (_egb *_bcg .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_aadg :=PdfAnnotationPopup {};
_aadg .Parent =_egb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_aadg .Open =_egb .Get ("\u004f\u0070\u0065\u006e");return &_aadg ,nil ;};

// SetFlag sets the flag for the field.
func (_gaebf *PdfField )SetFlag (flag FieldFlag ){_gaebf .Ff =_bcg .MakeInteger (int64 (flag ))};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_dgdbf *PdfFieldButton )IsCheckbox ()bool {return _dgdbf .GetType ()==ButtonTypeCheckbox };

// GetAscent returns the Ascent of the font `descriptor`.
func (_gfda *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _bcg .GetNumberAsFloat (_gfda .Ascent );};type pdfCIDFontType2 struct{fontCommon ;_abgeb *_bcg .PdfIndirectObject ;_eaad _bf .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_bcg .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bcg .PdfObject ;W _bcg .PdfObject ;DW2 _bcg .PdfObject ;W2 _bcg .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _bcg .PdfObject ;_geegd map[_bf .CharCode ]float64 ;_ggceb float64 ;_caaed map[rune ]int ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};func (_bgdgc *pdfCIDFontType0 )baseFields ()*fontCommon {return &_bgdgc .fontCommon };

// ToPdfObject implements interface PdfModel.
func (_bca *PdfAction )ToPdfObject ()_bcg .PdfObject {_gf :=_bca ._aag ;_fbf :=_gf .PdfObject .(*_bcg .PdfObjectDictionary );_fbf .Clear ();_fbf .Set ("\u0054\u0079\u0070\u0065",_bcg .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_fbf .SetIfNotNil ("\u0053",_bca .S );
_fbf .SetIfNotNil ("\u004e\u0065\u0078\u0074",_bca .Next );return _gf ;};var _fgaab =false ;func _ccbe ()string {return _dff .Version };func _gfffb (_ceffb _bcg .PdfObject ){_dff .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_ceffb ,_ceffb .String ());
if _faffd ,_dfdc :=_ceffb .(*_bcg .PdfObjectStream );_dfdc {_gdbfe ,_dbaaa :=_bcg .DecodeStream (_faffd );if _dbaaa !=nil {_dff .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_dbaaa );return ;};_dff .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_gdbfe );
}else if _dded ,_caade :=_ceffb .(*_bcg .PdfIndirectObject );_caade {_dff .Log .Debug ("\u0025\u0054\u0020%\u0076",_dded .PdfObject ,_dded .PdfObject );_dff .Log .Debug ("\u0025\u0073",_dded .PdfObject .String ());};};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_ged *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_bcg .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eafda ,_cecf :=_bcg .GetNumbersAsFloat (objects );
if _cecf !=nil {return nil ,_cecf ;};return _ged .ColorFromFloats (_eafda );};func (_effg *PdfReader )newPdfAnnotationStampFromDict (_egae *_bcg .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_cgab :=PdfAnnotationStamp {};_gace ,_feef :=_effg .newPdfAnnotationMarkupFromDict (_egae );
if _feef !=nil {return nil ,_feef ;};_cgab .PdfAnnotationMarkup =_gace ;_cgab .Name =_egae .Get ("\u004e\u0061\u006d\u0065");return &_cgab ,nil ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_caaeg FieldFlag )Has (fl FieldFlag )bool {return (_caaeg .Mask ()&fl .Mask ())> 0};

// IsCID returns true if the underlying font is CID.
func (_cfgc *PdfFont )IsCID ()bool {return _cfgc .baseFields ().isCIDFont ()};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_cgfda *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_bcg .PdfObject )(PdfColor ,error ){if _cgfda .Alternate ==nil {if _cgfda .N ==1{_gagb :=NewPdfColorspaceDeviceGray ();return _gagb .ColorFromPdfObjects (objects );}else if _cgfda .N ==3{_bbcdb :=NewPdfColorspaceDeviceRGB ();
return _bbcdb .ColorFromPdfObjects (objects );}else if _cgfda .N ==4{_ebdab :=NewPdfColorspaceDeviceCMYK ();return _ebdab .ColorFromPdfObjects (objects );}else {return nil ,_bcd .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _cgfda .Alternate .ColorFromPdfObjects (objects );};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_ccbb *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_becf :=_ff .NewReader (img .getBase ());_cdgg :=_dca .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_ccbb .AlternateSpace .GetNumComponents (),nil ,img ._aagba ,nil );
_cfbf :=_ff .NewWriter (_cdgg );_accg :=_ab .Pow (2,float64 (img .BitsPerComponent ))-1;_dff .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_dff .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_ccbb .TintTransform );_dcbd :=_ccbb .AlternateSpace .DecodeArray ();var (_bacgb uint32 ;_aeaac error ;);for {_bacgb ,_aeaac =_becf .ReadSample ();
if _aeaac ==_dg .EOF {break ;};if _aeaac !=nil {return img ,_aeaac ;};_daed :=float64 (_bacgb )/_accg ;_aged ,_edff :=_ccbb .TintTransform .Evaluate ([]float64 {_daed });if _edff !=nil {return img ,_edff ;};for _ebge ,_dddaa :=range _aged {_acdc :=_dca .LinearInterpolate (_dddaa ,_dcbd [_ebge *2],_dcbd [_ebge *2+1],0,1);
if _edff =_cfbf .WriteSample (uint32 (_acdc *_accg ));_edff !=nil {return img ,_edff ;};};};return _ccbb .AlternateSpace .ImageToRGB (_bgcbe (&_cdgg ));};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_ecd :=NewPdfAnnotation ();_fcd :=&PdfAnnotationCaret {};_fcd .PdfAnnotation =_ecd ;_fcd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ecd .SetContext (_fcd );return _fcd ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_bcg .PdfObjectArray ;ExtGState _bcg .PdfObject ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_fgeea *XObjectImage )ToImage ()(*Image ,error ){_fcbggd :=&Image {};if _fgeea .Height ==nil {return nil ,_bcd .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_fcbggd .Height =*_fgeea .Height ;if _fgeea .Width ==nil {return nil ,_bcd .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_fcbggd .Width =*_fgeea .Width ;if _fgeea .BitsPerComponent ==nil {switch _fgeea .Filter .(type ){case *_bcg .CCITTFaxEncoder ,*_bcg .JBIG2Encoder :_fcbggd .BitsPerComponent =1;
case *_bcg .LZWEncoder ,*_bcg .RunLengthEncoder :_fcbggd .BitsPerComponent =8;default:return nil ,_bcd .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_fcbggd .BitsPerComponent =*_fgeea .BitsPerComponent ;};_fcbggd .ColorComponents =_fgeea .ColorSpace .GetNumComponents ();_fgeea ._adbae .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bcg .MakeInteger (int64 (_fcbggd .ColorComponents )));
_beaad ,_fdfea :=_bcg .DecodeStream (_fgeea ._adbae );if _fdfea !=nil {return nil ,_fdfea ;};_fcbggd .Data =_beaad ;if _fgeea .Decode !=nil {_fgcfa ,_fafdgc :=_fgeea .Decode .(*_bcg .PdfObjectArray );if !_fafdgc {_dff .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_bcd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_abdgb ,_dgbeb :=_fgcfa .ToFloat64Array ();if _dgbeb !=nil {return nil ,_dgbeb ;};_fcbggd ._agagd =_abdgb ;};return _fcbggd ,nil ;};

// M returns the value of the magenta component of the color.
func (_aggb *PdfColorDeviceCMYK )M ()float64 {return _aggb [1]};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _bcg .PdfObject ;MK _bcg .PdfObject ;A _bcg .PdfObject ;AA _bcg .PdfObject ;};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// Val returns the value of the color.
func (_fcbd *PdfColorCalGray )Val ()float64 {return float64 (*_fcbd )};func (_dfcfc *PdfReader )lookupPageByObject (_bdfgc _bcg .PdfObject )(*PdfPage ,error ){return nil ,_bcd .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fggef *PdfColorspaceSpecialPattern )ToPdfObject ()_bcg .PdfObject {if _fggef .UnderlyingCS ==nil {return _bcg .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_adcdf :=_bcg .MakeArray (_bcg .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));
_adcdf .Append (_fggef .UnderlyingCS .ToPdfObject ());if _fggef ._fcaf !=nil {_fggef ._fcaf .PdfObject =_adcdf ;return _fggef ._fcaf ;};return _adcdf ;};

// SetReason sets the `Reason` field of the signature.
func (_dceaf *PdfSignature )SetReason (reason string ){_dceaf .Reason =_bcg .MakeString (reason )};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// ToPdfObject convert PdfInfo to pdf object.
func (_beaa *PdfInfo )ToPdfObject ()_bcg .PdfObject {_ddaf :=_bcg .MakeDict ();_ddaf .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_beaa .Title );_ddaf .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_beaa .Author );_ddaf .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_beaa .Subject );
_ddaf .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_beaa .Keywords );_ddaf .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_beaa .Creator );_ddaf .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_beaa .Producer );
_ddaf .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_beaa .Trapped );if _beaa .CreationDate !=nil {_ddaf .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_beaa .CreationDate .ToPdfObject ());};if _beaa .ModifiedDate !=nil {_ddaf .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_beaa .ModifiedDate .ToPdfObject ());
};for _ ,_deggd :=range _beaa ._aabd .Keys (){_ddaf .SetIfNotNil (_deggd ,_beaa ._aabd .Get (_deggd ));};return _ddaf ;};func (_gcfe fontCommon )coreString ()string {_badfd :="";if _gcfe ._faaca !=nil {_badfd =_gcfe ._faaca .String ();};return _g .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_gcfe ._cfeef ,_gcfe ._aafc ,_gcfe ._gbeb ,_gcfe ._daedg ,_gcfe ._aeba !=nil ,_gcfe .fontFlags (),_badfd );
};

// GetCustomInfo returns a custom info value for the specified name.
func (_dccecd *PdfInfo )GetCustomInfo (name string )*_bcg .PdfObjectString {var _degd *_bcg .PdfObjectString ;if _dccecd ._aabd ==nil {return _degd ;};if _dcab ,_gcddcg :=_dccecd ._aabd .Get (*_bcg .MakeName (name )).(*_bcg .PdfObjectString );_gcddcg {_degd =_dcab ;
};return _degd ;};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};func (_cgcf *DSS )generateHashMap (_bedfd []*_bcg .PdfObjectStream )(map[string ]*_bcg .PdfObjectStream ,error ){_cdddc :=map[string ]*_bcg .PdfObjectStream {};
for _ ,_egdfc :=range _bedfd {_afgb ,_gedd :=_bcg .DecodeStream (_egdfc );if _gedd !=nil {return nil ,_gedd ;};_bdbcg ,_gedd :=_bccc (_afgb );if _gedd !=nil {return nil ,_gedd ;};_cdddc [string (_bdbcg )]=_egdfc ;};return _cdddc ,nil ;};func (_dcb *PdfReader )newPdfActionNamedFromDict (_fdd *_bcg .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_fdd .Get ("\u004e")},nil ;
};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_edaae :=&PdfPageResourcesColorspaces {};_edaae .Names =[]string {};_edaae .Colorspaces =map[string ]PdfColorspace {};_edaae ._ebfac =&_bcg .PdfIndirectObject {};return _edaae ;};func (_acda *PdfReader )newPdfActionGotoFromDict (_fca *_bcg .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_fca .Get ("\u0044")},nil ;
};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_gcgc :=PdfColorDeviceGray (grayVal );return &_gcgc ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_bedf *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_ddfa ,_edea :=color .(*PdfColorCalRGB );if !_edea {_dff .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_bcd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bgff :=_ddfa .A ();_ccad :=_ddfa .B ();_edgf :=_ddfa .C ();X :=_bedf .Matrix [0]*_ab .Pow (_bgff ,_bedf .Gamma [0])+_bedf .Matrix [3]*_ab .Pow (_ccad ,_bedf .Gamma [1])+_bedf .Matrix [6]*_ab .Pow (_edgf ,_bedf .Gamma [2]);
Y :=_bedf .Matrix [1]*_ab .Pow (_bgff ,_bedf .Gamma [0])+_bedf .Matrix [4]*_ab .Pow (_ccad ,_bedf .Gamma [1])+_bedf .Matrix [7]*_ab .Pow (_edgf ,_bedf .Gamma [2]);Z :=_bedf .Matrix [2]*_ab .Pow (_bgff ,_bedf .Gamma [0])+_bedf .Matrix [5]*_ab .Pow (_ccad ,_bedf .Gamma [1])+_bedf .Matrix [8]*_ab .Pow (_edgf ,_bedf .Gamma [2]);
_daaf :=3.240479*X +-1.537150*Y +-0.498535*Z ;_babd :=-0.969256*X +1.875992*Y +0.041556*Z ;_eeaec :=0.055648*X +-0.204043*Y +1.057311*Z ;_daaf =_ab .Min (_ab .Max (_daaf ,0),1.0);_babd =_ab .Min (_ab .Max (_babd ,0),1.0);_eeaec =_ab .Min (_ab .Max (_eeaec ,0),1.0);
return NewPdfColorDeviceRGB (_daaf ,_babd ,_eeaec ),nil ;};const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_gabfb *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_fba ,_ggba :=color .(*PdfColorDeviceRGB );if !_ggba {_dff .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_bcd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _fba ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_dadg *PdfFont )GetCharMetrics (code _bf .CharCode )(CharMetrics ,bool ){var _fcbg _dgb .CharMetrics ;switch _ffcg :=_dadg ._aabbg .(type ){case *pdfFontSimple :if _ecdf ,_bgdg :=_ffcg .GetCharMetrics (code );_bgdg {return _ecdf ,_bgdg ;};case *pdfFontType0 :if _ccgbfd ,_gabfc :=_ffcg .GetCharMetrics (code );
_gabfc {return _ccgbfd ,_gabfc ;};case *pdfCIDFontType0 :if _aaefc ,_aaafg :=_ffcg .GetCharMetrics (code );_aaafg {return _aaefc ,_aaafg ;};case *pdfCIDFontType2 :if _acbbd ,_cfceg :=_ffcg .GetCharMetrics (code );_cfceg {return _acbbd ,_cfceg ;};case *pdfFontType3 :if _begcb ,_adgd :=_ffcg .GetCharMetrics (code );
_adgd {return _begcb ,_adgd ;};default:_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_dadg ._aabbg );
return _fcbg ,false ;};if _ccfa ,_dfea :=_dadg .GetFontDescriptor ();_dfea ==nil &&_ccfa !=nil {return _dgb .CharMetrics {Wx :_ccfa ._gbdae },true ;};_dff .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_dadg );
return _fcbg ,false ;};func _ggfgg (_dacde *PdfField ,_cgggg _bcg .PdfObject )error {switch _dacde .GetContext ().(type ){case *PdfFieldText :switch _adgc :=_cgggg .(type ){case *_bcg .PdfObjectName :_fgfce :=_adgc ;_dff .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_fgfce .String ());
_dacde .V =_bcg .MakeEncodedString (_adgc .String (),true );case *_bcg .PdfObjectString :_dacde .V =_bcg .MakeEncodedString (_adgc .String (),true );default:_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_adgc ,_adgc );
};case *PdfFieldButton :switch _cgggg .(type ){case *_bcg .PdfObjectName :if len (_cgggg .String ())> 0{_dacde .V =_cgggg ;_gcbe (_dacde ,_cgggg );};case *_bcg .PdfObjectString :if len (_cgggg .String ())> 0{_dacde .V =_bcg .MakeName (_cgggg .String ());
_gcbe (_dacde ,_dacde .V );};default:_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_dacde .PartialName (),_cgggg );_dacde .V =_cgggg ;
};case *PdfFieldChoice :switch _cgggg .(type ){case *_bcg .PdfObjectName :if len (_cgggg .String ())> 0{_dacde .V =_bcg .MakeString (_cgggg .String ());_gcbe (_dacde ,_cgggg );};case *_bcg .PdfObjectString :if len (_cgggg .String ())> 0{_dacde .V =_cgggg ;
_gcbe (_dacde ,_bcg .MakeName (_cgggg .String ()));};default:_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_dacde .PartialName (),_cgggg );
_dacde .V =_cgggg ;};case *PdfFieldSignature :_dff .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_dacde .PartialName (),_cgggg );
};return nil ;};

// Add appends a top level outline item to the outline.
func (_aebea *Outline )Add (item *OutlineItem ){_aebea .Entries =append (_aebea .Entries ,item )};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _bcg .PdfObject ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_bbeef *Image )ToJBIG2Image ()(*_bcg .JBIG2Image ,error ){_gcec ,_bddfab :=_bbeef .ToGoImage ();if _bddfab !=nil {return nil ,_bddfab ;};return _bcg .GoImageToJBIG2 (_gcec ,_bcg .JB2ImageAutoThreshold );};

// ToPdfObject implements interface PdfModel.
func (_gcg *PdfActionMovie )ToPdfObject ()_bcg .PdfObject {_gcg .PdfAction .ToPdfObject ();_aafe :=_gcg ._aag ;_cebc :=_aafe .PdfObject .(*_bcg .PdfObjectDictionary );_cebc .SetIfNotNil ("\u0053",_bcg .MakeName (string (ActionTypeMovie )));_cebc .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_gcg .Annotation );
_cebc .SetIfNotNil ("\u0054",_gcg .T );_cebc .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_gcg .Operation );return _aafe ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_agef *PdfWriter )SetNameDictionary (names _bcg .PdfObject )error {if names ==nil {return nil ;};_dff .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_agef ._gbfg .Set ("\u004e\u0061\u006de\u0073",names );return _agef .addObjects (names );};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_gfaege *PdfSignature ,_cdgfe Hasher ,_dcacda SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _bcg .PdfObject ;FontFamily _bcg .PdfObject ;FontStretch _bcg .PdfObject ;FontWeight _bcg .PdfObject ;Flags _bcg .PdfObject ;FontBBox _bcg .PdfObject ;ItalicAngle _bcg .PdfObject ;Ascent _bcg .PdfObject ;Descent _bcg .PdfObject ;
Leading _bcg .PdfObject ;CapHeight _bcg .PdfObject ;XHeight _bcg .PdfObject ;StemV _bcg .PdfObject ;StemH _bcg .PdfObject ;AvgWidth _bcg .PdfObject ;MaxWidth _bcg .PdfObject ;MissingWidth _bcg .PdfObject ;FontFile _bcg .PdfObject ;FontFile2 _bcg .PdfObject ;
FontFile3 _bcg .PdfObject ;CharSet _bcg .PdfObject ;_gcfcf int ;_gbdae float64 ;*fontFile ;_ecege *_dgb .TtfType ;

// Additional entries for CIDFonts
Style _bcg .PdfObject ;Lang _bcg .PdfObject ;FD _bcg .PdfObject ;CIDSet _bcg .PdfObject ;_beefg *_bcg .PdfIndirectObject ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_bfdgd *PdfPage )Duplicate ()*PdfPage {_ffgcb :=*_bfdgd ;_ffgcb ._dabee =_bcg .MakeDict ();_ffgcb ._ddfd =_bcg .MakeIndirectObject (_ffgcb ._dabee );return &_ffgcb ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_gbbda *PdfPage )AppendContentStream (contentStr string )error {_gbbde ,_gaagg :=_gbbda .GetContentStreams ();if _gaagg !=nil {return _gaagg ;};if len (_gbbde )==0{_gbbde =[]string {contentStr };return _gbbda .SetContentStreams (_gbbde ,_bcg .NewFlateEncoder ());
};var _dbcb _gg .Buffer ;_dbcb .WriteString (_gbbde [len (_gbbde )-1]);_dbcb .WriteString ("\u000a");_dbcb .WriteString (contentStr );_gbbde [len (_gbbde )-1]=_dbcb .String ();return _gbbda .SetContentStreams (_gbbde ,_bcg .NewFlateEncoder ());};

// SetImage updates XObject Image with new image data.
func (_edeea *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_edeea .Filter .UpdateParams (img .GetParamsDict ());_gcbaf ,_acgbde :=_edeea .Filter .EncodeBytes (img .Data );if _acgbde !=nil {return _acgbde ;};_edeea .Stream =_gcbaf ;_daaag :=img .Width ;
_edeea .Width =&_daaag ;_ddcbba :=img .Height ;_edeea .Height =&_ddcbba ;_abfe :=img .BitsPerComponent ;_edeea .BitsPerComponent =&_abfe ;if cs ==nil {if img .ColorComponents ==1{_edeea .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_edeea .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_edeea .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _bcd .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_edeea .ColorSpace =cs ;};return nil ;
};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_aaggc *PdfReader )GetIndirectObjectByNumber (number int )(_bcg .PdfObject ,error ){_cafge ,_bggcg :=_aaggc ._eadaf .LookupByNumber (number );return _cafge ,_bggcg ;};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_ge :=NewPdfAction ();_afec :=&PdfActionSound {};_afec .PdfAction =_ge ;_ge .SetContext (_afec );return _afec ;};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_gfaa _dg .ReadSeeker ;_fdce *_bcg .PdfParser ;_cgdd *PdfReader ;Reader *PdfReader ;_dbc []*PdfPage ;_acc *PdfAcroForm ;_ded *DSS ;_face *Permissions ;_bcae _bcg .XrefTable ;_fggd int64 ;_eeaeg int ;_bfa []_bcg .PdfObject ;_dcceg map[_bcg .PdfObject ]struct{};
_feab map[_bcg .PdfObject ]int64 ;_gecb map[_bcg .PdfObject ]struct{};_ecb map[_bcg .PdfObject ]struct{};_dfae int64 ;_dgbg bool ;_dcaf string ;_gbgd *EncryptOptions ;_gfb *PdfInfo ;};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_febf *_fd .Document )error ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_fgbda *modelManager )GetPrimitiveFromModel (model PdfModel )_bcg .PdfObject {_gacdf ,_ggege :=_fgbda ._dadae [model ];if !_ggege {return nil ;};return _gacdf ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dcggf pdfFontType0 )GetCharMetrics (code _bf .CharCode )(_dgb .CharMetrics ,bool ){if _dcggf .DescendantFont ==nil {_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_dcggf );
return _dgb .CharMetrics {},false ;};return _dcggf .DescendantFont .GetCharMetrics (code );};

// B returns the value of the B component of the color.
func (_caeb *PdfColorCalRGB )B ()float64 {return _caeb [1]};

// GetContainingPdfObject implements interface PdfModel.
func (_fbgg *PdfAnnotation )GetContainingPdfObject ()_bcg .PdfObject {return _fbgg ._cbe };func (_abcd fontCommon )asPdfObjectDictionary (_ddaag string )*_bcg .PdfObjectDictionary {if _ddaag !=""&&_abcd ._cfeef !=""&&_ddaag !=_abcd ._cfeef {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_ddaag ,_abcd );
}else if _ddaag ==""&&_abcd ._cfeef ==""{_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_abcd );
}else if _abcd ._cfeef ==""{_abcd ._cfeef =_ddaag ;};_cfbg :=_bcg .MakeDict ();_cfbg .Set ("\u0054\u0079\u0070\u0065",_bcg .MakeName ("\u0046\u006f\u006e\u0074"));_cfbg .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_bcg .MakeName (_abcd ._aafc ));
_cfbg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName (_abcd ._cfeef ));if _abcd ._faaca !=nil {_cfbg .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_abcd ._faaca .ToPdfObject ());};if _abcd ._aeba !=nil {_cfbg .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_abcd ._aeba );
}else if _abcd ._bgebe !=nil {_aadag ,_feca :=_abcd ._bgebe .Stream ();if _feca !=nil {_dff .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_feca );
}else {_cfbg .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_aadag );};};return _cfbg ;};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _bcg .PdfObject ;NewWindow _bcg .PdfObject ;T _bcg .PdfObject ;};func (_aagcf *PdfPage )setContainer (_dgbdea *_bcg .PdfIndirectObject ){_dgbdea .PdfObject =_aagcf ._dabee ;_aagcf ._ddfd =_dgbdea ;
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_agcg *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_bcg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgcg ,_gbce :=_bcg .GetNumbersAsFloat (objects );
if _gbce !=nil {return nil ,_gbce ;};return _agcg .ColorFromFloats (_dgcg );};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_aeaf :_bcg .MakeIndirectObject (_bcg .MakeDict ()),VRI :map[string ]*VRI {}};};

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_fbd :=&PdfAppender {_gfaa :reader ._bggbbg ,Reader :reader ,_fdce :reader ._eadaf ,_ecb :reader ._ebfgb };_cbce ,_bbcd :=_fbd ._gfaa .Seek (0,_dg .SeekEnd );
if _bbcd !=nil {return nil ,_bbcd ;};_fbd ._dfae =_cbce ;if _ ,_bbcd =_fbd ._gfaa .Seek (0,_dg .SeekStart );_bbcd !=nil {return nil ,_bbcd ;};_fbd ._cgdd ,_bbcd =NewPdfReaderWithOpts (_fbd ._gfaa ,opts );if _bbcd !=nil {return nil ,_bbcd ;};for _ ,_eecf :=range _fbd .Reader .GetObjectNums (){if _fbd ._eeaeg < _eecf {_fbd ._eeaeg =_eecf ;
};};_fbd ._bcae =_fbd ._fdce .GetXrefTable ();_fbd ._fggd =_fbd ._fdce .GetXrefOffset ();_fbd ._dbc =append (_fbd ._dbc ,_fbd ._cgdd .PageList ...);_fbd ._dcceg =make (map[_bcg .PdfObject ]struct{});_fbd ._feab =make (map[_bcg .PdfObject ]int64 );_fbd ._gecb =make (map[_bcg .PdfObject ]struct{});
_fbd ._acc =_fbd ._cgdd .AcroForm ;_fbd ._ded =_fbd ._cgdd .DSS ;if opts !=nil {_fbd ._dcaf =opts .Password ;};if encryptOptions !=nil {_fbd ._gbgd =encryptOptions ;};return _fbd ,nil ;};func _acbed (_aebafd *_bcg .PdfObjectDictionary )(*PdfShadingType3 ,error ){_gfad :=PdfShadingType3 {};
_cgdc :=_aebafd .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _cgdc ==nil {_dff .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_eacfc ,_acfed :=_cgdc .(*_bcg .PdfObjectArray );if !_acfed {_dff .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cgdc );
return nil ,_bcg .ErrTypeError ;};if _eacfc .Len ()!=6{_dff .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_eacfc .Len ());return nil ,ErrInvalidAttribute ;
};_gfad .Coords =_eacfc ;if _fbbc :=_aebafd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_fbbc !=nil {_fbbc =_bcg .TraceToDirectObject (_fbbc );_ddbdc ,_dedgf :=_fbbc .(*_bcg .PdfObjectArray );if !_dedgf {_dff .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fbbc );
return nil ,_bcg .ErrTypeError ;};_gfad .Domain =_ddbdc ;};_cgdc =_aebafd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cgdc ==nil {_dff .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gfad .Function =[]PdfFunction {};if _ebga ,_dfebf :=_cgdc .(*_bcg .PdfObjectArray );_dfebf {for _ ,_ceccb :=range _ebga .Elements (){_dedca ,_bbgdf :=_bdgfe (_ceccb );if _bbgdf !=nil {_dff .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bbgdf );
return nil ,_bbgdf ;};_gfad .Function =append (_gfad .Function ,_dedca );};}else {_bffc ,_aggdda :=_bdgfe (_cgdc );if _aggdda !=nil {_dff .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aggdda );
return nil ,_aggdda ;};_gfad .Function =append (_gfad .Function ,_bffc );};if _fddb :=_aebafd .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_fddb !=nil {_fddb =_bcg .TraceToDirectObject (_fddb );_cabcbg ,_fgffc :=_fddb .(*_bcg .PdfObjectArray );if !_fgffc {_dff .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fddb );
return nil ,_bcg .ErrTypeError ;};if _cabcbg .Len ()!=2{_dff .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_cabcbg .Len ());return nil ,ErrInvalidAttribute ;
};_gfad .Extend =_cabcbg ;};return &_gfad ,nil ;};var _ pdfFont =(*pdfFontType0 )(nil );

// ToPdfObject returns the PDF representation of the function.
func (_fbcdc *PdfFunctionType3 )ToPdfObject ()_bcg .PdfObject {_fcfa :=_bcg .MakeDict ();_fcfa .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bcg .MakeInteger (3));_fede :=&_bcg .PdfObjectArray {};for _ ,_ggeed :=range _fbcdc .Domain {_fede .Append (_bcg .MakeFloat (_ggeed ));
};_fcfa .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fede );if _fbcdc .Range !=nil {_bdebf :=&_bcg .PdfObjectArray {};for _ ,_ffbfc :=range _fbcdc .Range {_bdebf .Append (_bcg .MakeFloat (_ffbfc ));};_fcfa .Set ("\u0052\u0061\u006eg\u0065",_bdebf );};
if _fbcdc .Functions !=nil {_afee :=&_bcg .PdfObjectArray {};for _ ,_aabda :=range _fbcdc .Functions {_afee .Append (_aabda .ToPdfObject ());};_fcfa .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_afee );};if _fbcdc .Bounds !=nil {_efcf :=&_bcg .PdfObjectArray {};
for _ ,_acgcg :=range _fbcdc .Bounds {_efcf .Append (_bcg .MakeFloat (_acgcg ));};_fcfa .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_efcf );};if _fbcdc .Encode !=nil {_bdefc :=&_bcg .PdfObjectArray {};for _ ,_bdfab :=range _fbcdc .Encode {_bdefc .Append (_bcg .MakeFloat (_bdfab ));
};_fcfa .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_bdefc );};if _fbcdc ._dgfc !=nil {_fbcdc ._dgfc .PdfObject =_fcfa ;return _fbcdc ._dgfc ;};return _fcfa ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _dd .Time )(PdfDate ,error ){_fabgdg :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_abbda ,_ :=_bce .ParseInt (_fabgdg [1:3],10,32);_ddee ,_ :=_bce .ParseInt (_fabgdg [4:6],10,32);return PdfDate {_ceaba :int64 (timeObj .Year ()),_eefgd :int64 (timeObj .Month ()),_afgfg :int64 (timeObj .Day ()),_dfbda :int64 (timeObj .Hour ()),_cdce :int64 (timeObj .Minute ()),_cbaaa :int64 (timeObj .Second ()),_gacdfg :_fabgdg [0],_agedd :_abbda ,_egbge :_ddee },nil ;
};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_bcg .PdfObjectStream )(*XObjectImage ,error ){_adagd :=&XObjectImage {};_adagd ._adbae =stream ;_bgffb :=*(stream .PdfObjectDictionary );_eacee ,_efeca :=_bcg .NewEncoderFromStream (stream );if _efeca !=nil {return nil ,_efeca ;
};_adagd .Filter =_eacee ;if _accbc :=_bcg .TraceToDirectObject (_bgffb .Get ("\u0057\u0069\u0064t\u0068"));_accbc !=nil {_gbcfc ,_edgac :=_accbc .(*_bcg .PdfObjectInteger );if !_edgac {return nil ,_bcd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_eadad :=int64 (*_gbcfc );_adagd .Width =&_eadad ;}else {return nil ,_bcd .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _gdafc :=_bcg .TraceToDirectObject (_bgffb .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_gdafc !=nil {_gffde ,_aacce :=_gdafc .(*_bcg .PdfObjectInteger );if !_aacce {return nil ,_bcd .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_bgffd :=int64 (*_gffde );
_adagd .Height =&_bgffd ;}else {return nil ,_bcd .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _dfece :=_bcg .TraceToDirectObject (_bgffb .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_dfece !=nil {_cdgef ,_cbaga :=NewPdfColorspaceFromPdfObject (_dfece );if _cbaga !=nil {return nil ,_cbaga ;};_adagd .ColorSpace =_cdgef ;}else {_dff .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_adagd .ColorSpace =NewPdfColorspaceDeviceGray ();};if _aafcf :=_bcg .TraceToDirectObject (_bgffb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_aafcf !=nil {_ccgga ,_bdcbd :=_aafcf .(*_bcg .PdfObjectInteger );
if !_bdcbd {return nil ,_bcd .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_dfeca :=int64 (*_ccgga );_adagd .BitsPerComponent =&_dfeca ;};_adagd .Intent =_bgffb .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_adagd .ImageMask =_bgffb .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_adagd .Mask =_bgffb .Get ("\u004d\u0061\u0073\u006b");_adagd .Decode =_bgffb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_adagd .Interpolate =_bgffb .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_adagd .Alternatives =_bgffb .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_adagd .SMask =_bgffb .Get ("\u0053\u004d\u0061s\u006b");_adagd .SMaskInData =_bgffb .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_adagd .Matte =_bgffb .Get ("\u004d\u0061\u0074t\u0065");_adagd .Name =_bgffb .Get ("\u004e\u0061\u006d\u0065");_adagd .StructParent =_bgffb .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_adagd .ID =_bgffb .Get ("\u0049\u0044");
_adagd .OPI =_bgffb .Get ("\u004f\u0050\u0049");_adagd .Metadata =_bgffb .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_adagd .OC =_bgffb .Get ("\u004f\u0043");_adagd .Stream =stream .Stream ;return _adagd ,nil ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_ccgbe *PdfReader )GetNamedDestinations ()(_bcg .PdfObject ,error ){_gcfgca :=_bcg .ResolveReference (_ccgbe ._fdeec .Get ("\u0044\u0065\u0073t\u0073"));if _gcfgca ==nil {return nil ,nil ;};if !_ccgbe ._gdfa {_defeb :=_ccgbe .traverseObjectData (_gcfgca );
if _defeb !=nil {return nil ,_defeb ;};};return _gcfgca ,nil ;};

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_cgegb *PdfPage )ToPdfObject ()_bcg .PdfObject {_ccdce :=_cgegb ._ddfd ;_cgegb .GetPageDict ();return _ccdce ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_beca *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_bgcac :=func (_ececd float64 )float64 {if _ececd >=6.0/29{return _ececd *_ececd *_ececd ;};return 108.0/841*(_ececd -4/29);};_bdbd :=img ._agagd ;if len (_bdbd )!=6{_dff .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_bdbd =_beca .DecodeArray ();};_dfef :=_ff .NewReader (img .getBase ());_gagab :=_dca .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._aagba ,img ._agagd );_cdaaa :=_ff .NewWriter (_gagab );_eacb :=_ab .Pow (2,float64 (img .BitsPerComponent ))-1;
_cecc :=make ([]uint32 ,3);var (_ccbge error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_fgdd ,_beef ,_bbbf float64 ;);for {_ccbge =_dfef .ReadSamples (_cecc );if _ccbge ==_dg .EOF {break ;}else if _ccbge !=nil {return img ,_ccbge ;};Ls =float64 (_cecc [0])/_eacb ;
As =float64 (_cecc [1])/_eacb ;Bs =float64 (_cecc [2])/_eacb ;Ls =_dca .LinearInterpolate (Ls ,0.0,1.0,_bdbd [0],_bdbd [1]);As =_dca .LinearInterpolate (As ,0.0,1.0,_bdbd [2],_bdbd [3]);Bs =_dca .LinearInterpolate (Bs ,0.0,1.0,_bdbd [4],_bdbd [5]);L =(Ls +16)/116+As /500;
M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_beca .WhitePoint [0]*_bgcac (L );Y =_beca .WhitePoint [1]*_bgcac (M );Z =_beca .WhitePoint [2]*_bgcac (N );_fgdd =3.240479*X +-1.537150*Y +-0.498535*Z ;_beef =-0.969256*X +1.875992*Y +0.041556*Z ;_bbbf =0.055648*X +-0.204043*Y +1.057311*Z ;
_fgdd =_ab .Min (_ab .Max (_fgdd ,0),1.0);_beef =_ab .Min (_ab .Max (_beef ,0),1.0);_bbbf =_ab .Min (_ab .Max (_bbbf ,0),1.0);_cecc [0]=uint32 (_fgdd *_eacb );_cecc [1]=uint32 (_beef *_eacb );_cecc [2]=uint32 (_bbbf *_eacb );if _ccbge =_cdaaa .WriteSamples (_cecc );
_ccbge !=nil {return img ,_ccbge ;};};return _bgcbe (&_gagab ),nil ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_fceag :=&PdfFieldSignature {};_fceag .PdfField =NewPdfField ();_fceag .PdfField .SetContext (_fceag );_fceag .PdfAnnotationWidget =NewPdfAnnotationWidget ();_fceag .PdfAnnotationWidget .SetContext (_fceag );
_fceag .PdfAnnotationWidget ._cbe =_fceag .PdfField ._bddgb ;_fceag .T =_bcg .MakeString ("");_fceag .F =_bcg .MakeInteger (132);_fceag .V =signature ;return _fceag ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_eedgf *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eccf :=vals [0];_dfefe :=[]float64 {_eccf };_aaffe ,_cecdd :=_eedgf .TintTransform .Evaluate (_dfefe );
if _cecdd !=nil {_dff .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_cecdd );_dff .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_eedgf .TintTransform );
return nil ,_cecdd ;};_dff .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_aaffe ,_eedgf .AlternateSpace );
_ccgd ,_cecdd :=_eedgf .AlternateSpace .ColorFromFloats (_aaffe );if _cecdd !=nil {_dff .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_cecdd );
return nil ,_cecdd ;};return _ccgd ,nil ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_aaaa :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_aaaa ;};

// HasXObjectByName checks if has XObject resource by name.
func (_bcdfc *PdfPage )HasXObjectByName (name _bcg .PdfObjectName )bool {_cfegb ,_cfff :=_bcdfc .Resources .XObject .(*_bcg .PdfObjectDictionary );if !_cfff {return false ;};if _cdfgg :=_cfegb .Get (name );_cdfgg !=nil {return true ;};return false ;};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_aagc :=NewPdfAnnotation ();_eedg :=&PdfAnnotationScreen {};_eedg .PdfAnnotation =_aagc ;_aagc .SetContext (_eedg );return _eedg ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fadbc *PdfColorspaceDeviceCMYK )ToPdfObject ()_bcg .PdfObject {return _bcg .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};func _gcbb (_bgdde *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_bgdde }};

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_fgf :=NewPdfAnnotation ();_bcbb :=&PdfAnnotationUnderline {};_bcbb .PdfAnnotation =_fgf ;_bcbb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fgf .SetContext (_bcbb );return _bcbb ;};func (_daeag *PdfReader )loadAnnotations (_ccac _bcg .PdfObject )([]*PdfAnnotation ,error ){_gfeag ,_gceac :=_bcg .GetArray (_ccac );
if !_gceac {return nil ,_g .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _gafgc []*PdfAnnotation ;for _ ,_adcca :=range _gfeag .Elements (){_adcca =_bcg .ResolveReference (_adcca );
if _ ,_fdfg :=_adcca .(*_bcg .PdfObjectNull );_fdfg {continue ;};_fgfaf ,_ecbg :=_adcca .(*_bcg .PdfObjectDictionary );_acga ,_eeed :=_adcca .(*_bcg .PdfIndirectObject );if _ecbg {_acga =&_bcg .PdfIndirectObject {};_acga .PdfObject =_fgfaf ;}else {if !_eeed {return nil ,_g .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_agde ,_accge :=_daeag .newPdfAnnotationFromIndirectObject (_acga );if _accge !=nil {return nil ,_accge ;};switch _ddffd :=_agde .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_facdc :=range _daeag .AcroForm .AllFields (){if _facdc ._bddgb ==_ddffd .Parent {_ddffd ._dggf =_facdc ;
break ;};};};if _agde !=nil {_gafgc =append (_gafgc ,_agde );};};return _gafgc ,nil ;};func (_dfdffd *PdfWriter )writeTrailer (_fdcgf int ){_dfdffd .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _fgebe :=0;_fgebe <=_fdcgf ;{for ;_fgebe <=_fdcgf ;
_fgebe ++{_gaeee ,_ecgcc :=_dfdffd ._caaea [_fgebe ];if _ecgcc &&(!_dfdffd ._gaggd ||_dfdffd ._gaggd &&(_gaeee .Type ==1&&_gaeee .Offset >=_dfdffd ._edbde ||_gaeee .Type ==0)){break ;};};var _dcbfg int ;for _dcbfg =_fgebe +1;_dcbfg <=_fdcgf ;_dcbfg ++{_eabaec ,_eaafa :=_dfdffd ._caaea [_dcbfg ];
if _eaafa &&(!_dfdffd ._gaggd ||_dfdffd ._gaggd &&(_eabaec .Type ==1&&_eabaec .Offset > _dfdffd ._edbde )){continue ;};break ;};_gafca :=_g .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_fgebe ,_dcbfg -_fgebe );_dfdffd .writeString (_gafca );for _bfcad :=_fgebe ;
_bfcad < _dcbfg ;_bfcad ++{_gbadc :=_dfdffd ._caaea [_bfcad ];switch _gbadc .Type {case 0:_gafca =_g .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_dfdffd .writeString (_gafca );case 1:_gafca =_g .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_gbadc .Offset ,0);
_dfdffd .writeString (_gafca );};};_fgebe =_dcbfg +1;};_dggbc :=_bcg .MakeDict ();_dggbc .Set ("\u0049\u006e\u0066\u006f",_dfdffd ._cbdd );_dggbc .Set ("\u0052\u006f\u006f\u0074",_dfdffd ._agged );_dggbc .Set ("\u0053\u0069\u007a\u0065",_bcg .MakeInteger (int64 (_fdcgf +1)));
if _dfdffd ._gaggd &&_dfdffd ._gdbdg > 0{_dggbc .Set ("\u0050\u0072\u0065\u0076",_bcg .MakeInteger (_dfdffd ._gdbdg ));};if _dfdffd ._ebfab !=nil {_dggbc .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_dfdffd ._eaadde );};if _dfdffd ._cdfbd ==nil &&_dfdffd ._dcadb !=""&&_dfdffd ._cdbg !=""{_dfdffd ._cdfbd =_bcg .MakeArray (_bcg .MakeHexString (_dfdffd ._dcadb ),_bcg .MakeHexString (_dfdffd ._cdbg ));
};if _dfdffd ._cdfbd !=nil {_dggbc .Set ("\u0049\u0044",_dfdffd ._cdfbd );_dff .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_dfdffd ._cdfbd );};_dfdffd .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_dfdffd .writeString (_dggbc .WriteString ());
_dfdffd .writeString ("\u000a");};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_bbffa *PdfAcroForm ,_adaa *PdfField ,_afag *PdfAnnotationWidget )(*_bcg .PdfObjectDictionary ,error );};

// WriteToFile writes the Appender output to file specified by path.
func (_fecbf *PdfAppender )WriteToFile (outputPath string )error {_fabgd ,_aaac :=_dee .Create (outputPath );if _aaac !=nil {return _aaac ;};defer _fabgd .Close ();return _fecbf .Write (_fabgd );};func _ageda (_fgdgb *_bcg .PdfObjectDictionary ){_gfga ,_gdbge :=_bcg .GetArray (_fgdgb .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));
_begcd ,_daddc :=_bcg .GetIntVal (_fgdgb .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));_fdcg ,_gagbg :=_bcg .GetIntVal (_fgdgb .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _gdbge &&_daddc &&_gagbg {_fceg :=_gfga .Len ();if _fceg !=_fdcg -_begcd +1{_dff .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_fceg ,_fdcg );
_debb :=_bcg .PdfObjectInteger (_begcd +_fceg -1);_fgdgb .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_debb );};};};func (_cac *PdfReader )newPdfActionSubmitFormFromDict (_gee *_bcg .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_gad ,_bdc :=_bab (_gee .Get ("\u0046"));
if _bdc !=nil {return nil ,_bdc ;};return &PdfActionSubmitForm {F :_gad ,Fields :_gee .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_gee .Get ("\u0046\u006c\u0061g\u0073")},nil ;};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_dgdb *PdfColorspaceCalGray )GetNumComponents ()int {return 1};func _deff ()string {_ccfaf :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _ggfca _gg .Buffer ;
for _cbga :=0;_cbga < 6;_cbga ++{_ggfca .WriteRune (rune (_ccfaf [_bc .Intn (len (_ccfaf ))]));};return _ggfca .String ();};

// GetContainingPdfObject implements interface PdfModel.
func (_dfc *PdfAction )GetContainingPdfObject ()_bcg .PdfObject {return _dfc ._aag };

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_cabg *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_bcd .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_gdae ,_bbcb :=_dca .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._aagba ,img ._agagd );if _bbcb !=nil {return img ,_bbcb ;};_bdde ,_bbcb :=_dca .GrayConverter .Convert (_gdae );if _bbcb !=nil {return img ,_bbcb ;
};return _bgcbe (_bdde .Base ()),nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_eadc *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_eadc .Base .GetNumComponents ();_dbaac :=int (vals [0])*N ;
if _dbaac < 0||(_dbaac +N -1)>=len (_eadc ._fdfca ){_dff .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dbaac );return nil ,ErrColorOutOfRange ;};_ecfgfg :=_eadc ._fdfca [_dbaac :_dbaac +N ];
var _aagd []float64 ;for _ ,_eebg :=range _ecfgfg {_aagd =append (_aagd ,float64 (_eebg )/255.0);};_bdcf ,_dbbf :=_eadc .Base .ColorFromFloats (_aagd );if _dbbf !=nil {return nil ,_dbbf ;};return _bdcf ,nil ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_ceaba int64 ;_eefgd int64 ;_afgfg int64 ;_dfbda int64 ;_cdce int64 ;_cbaaa int64 ;_gacdfg byte ;_agedd int64 ;_egbge int64 ;};func _gdbab (_begfg string )(string ,error ){var _fdbba _gg .Buffer ;_fdbba .WriteString (_begfg );_fddbc :=make ([]byte ,8+16);
_ebgec :=_dd .Now ().UTC ().UnixNano ();_f .BigEndian .PutUint64 (_fddbc ,uint64 (_ebgec ));_ ,_bgaea :=_e .Read (_fddbc [8:]);if _bgaea !=nil {return "",_bgaea ;};_fdbba .WriteString (_aa .EncodeToString (_fddbc ));return _fdbba .String (),nil ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_aaff :=NewPdfAnnotation ();_ffd :=&PdfAnnotationHighlight {};_ffd .PdfAnnotation =_aaff ;_ffd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aaff .SetContext (_ffd );return _ffd ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_fbfd :=&PdfAction {};_fbfd ._aag =_bcg .MakeIndirectObject (_bcg .MakeDict ());return _fbfd ;};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_gcee *pdfCIDFontType0 )ToPdfObject ()_bcg .PdfObject {return _bcg .MakeNull ()};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_bceeg *LTV )EnableByName (name string ,extraCerts []*_ag .Certificate )error {_ebbca :=_bceeg ._cgbab ._cgdd .AcroForm ;for _ ,_ccbcg :=range _ebbca .AllFields (){_afba ,_ :=_ccbcg .GetContext ().(*PdfFieldSignature );if _afba ==nil {continue ;};
if _dgbed :=_afba .PartialName ();_dgbed !=name {continue ;};return _bceeg .Enable (_afba .V ,extraCerts );};return nil ;};

// SetBorderWidth sets the style's border width.
func (_egdf *PdfBorderStyle )SetBorderWidth (width float64 ){_egdf .W =&width };

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_faec :_bcg .MakeDict (),ColorComponents :colorComponents };
};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_bcg .PdfObject ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_ceef *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _dccea []*PdfOutlineTreeNode ;var _ffbce []string ;var _fecffe func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_fecffe =func (_fdade *PdfOutlineTreeNode ,_dfgdd *[]*PdfOutlineTreeNode ,_dcee *[]string ,_gabc int ){if _fdade ==nil {return ;
};if _fdade ._egdfd ==nil {_dff .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_ceeba ,_ggafb :=_fdade ._egdfd .(*PdfOutlineItem );if _ggafb {*_dfgdd =append (*_dfgdd ,&_ceeba .PdfOutlineTreeNode );
_eege :=_ce .Repeat ("\u0020",_gabc *2)+_ceeba .Title .Decoded ();*_dcee =append (*_dcee ,_eege );};if _fdade .First !=nil {_bgfe :=_ce .Repeat ("\u0020",_gabc *2)+"\u002b";*_dcee =append (*_dcee ,_bgfe );_fecffe (_fdade .First ,_dfgdd ,_dcee ,_gabc +1);
};if _ggafb &&_ceeba .Next !=nil {_fecffe (_ceeba .Next ,_dfgdd ,_dcee ,_gabc );};};_fecffe (_ceef ._dbgbg ,&_dccea ,&_ffbce ,0);return _dccea ,_ffbce ,nil ;};func (_adgaa *pdfFontType3 )baseFields ()*fontCommon {return &_adgaa .fontCommon };

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_bcg .PdfObjectStream ;Data []byte ;_bbebd *_bcg .PdfIndirectObject ;_fcde *_bcg .PdfObjectStream ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_cfa *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_geecb :=vals [0];if _geecb < 0.0||_geecb > 1.0{_dff .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_geecb );
return nil ,ErrColorOutOfRange ;};_bcgag :=vals [1];if _bcgag < 0.0||_bcgag > 1.0{_dff .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bcgag );return nil ,ErrColorOutOfRange ;
};_gecf :=vals [2];if _gecf < 0.0||_gecf > 1.0{_dff .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gecf );return nil ,ErrColorOutOfRange ;};_afgfa :=NewPdfColorCalRGB (_geecb ,_bcgag ,_gecf );
return _afgfa ,nil ;};func (_cdca *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _cdca ._faaca };func (_cea *PdfReader )newPdfActionSetOCGStateFromDict (_gge *_bcg .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_gge .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_gge .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// AddPages adds pages to be appended to the end of the source PDF.
func (_gbdg *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_bdbcb :=range pages {_bdbcb =_bdbcb .Duplicate ();_dccdb (_bdbcb );_gbdg ._dbc =append (_gbdg ._dbc ,_bdbcb );};};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_fb .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_fb .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_fb .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_cgbab *PdfAppender ;_abbf *DSS ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_dggb :=NewPdfAnnotation ();_baeb :=&PdfAnnotationPrinterMark {};_baeb .PdfAnnotation =_dggb ;_dggb .SetContext (_baeb );return _baeb ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_dgeg *PdfAnnotationWidget )Field ()*PdfField {return _dgeg ._dggf };

// ToPdfObject implements interface PdfModel.
func (_cgd *PdfActionImportData )ToPdfObject ()_bcg .PdfObject {_cgd .PdfAction .ToPdfObject ();_db :=_cgd ._aag ;_bcb :=_db .PdfObject .(*_bcg .PdfObjectDictionary );_bcb .SetIfNotNil ("\u0053",_bcg .MakeName (string (ActionTypeImportData )));if _cgd .F !=nil {_bcb .Set ("\u0046",_cgd .F .ToPdfObject ());
};return _db ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bcg .PdfObject ;LE _bcg .PdfObject ;BS _bcg .PdfObject ;IC _bcg .PdfObject ;BE _bcg .PdfObject ;IT _bcg .PdfObject ;Measure _bcg .PdfObject ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_ggcc *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _ggcc .MediaBox !=nil {return _ggcc .MediaBox ,nil ;};_cgfgb :=_ggcc .Parent ;for _cgfgb !=nil {_gdedd ,_gfgdd :=_bcg .GetDict (_cgfgb );if !_gfgdd {return nil ,_bcd .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _dagd :=_gdedd .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_dagd !=nil {_bcfba ,_eabf :=_bcg .GetArray (_dagd );if !_eabf {return nil ,_bcd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_caabeb ,_bebfd :=NewPdfRectangle (*_bcfba );if _bebfd !=nil {return nil ,_bebfd ;};return _caabeb ,nil ;};_cgfgb =_gdedd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_bcd .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_cabd :=&PdfColorspaceCalGray {};_cabd .BlackPoint =[]float64 {0.0,0.0,0.0};_cabd .Gamma =1;return _cabd ;};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_bbcf *PdfFieldButton )IsPush ()bool {return _bbcf .GetType ()==ButtonTypePush };

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_feead *_bcg .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_bcg .PdfObjectName ;Filter *_bcg .PdfObjectName ;SubFilter *_bcg .PdfObjectName ;Contents *_bcg .PdfObjectString ;Cert _bcg .PdfObject ;ByteRange *_bcg .PdfObjectArray ;Reference *_bcg .PdfObjectArray ;Changes *_bcg .PdfObjectArray ;Name *_bcg .PdfObjectString ;
M *_bcg .PdfObjectString ;Location *_bcg .PdfObjectString ;Reason *_bcg .PdfObjectString ;ContactInfo *_bcg .PdfObjectString ;R *_bcg .PdfObjectInteger ;V *_bcg .PdfObjectInteger ;PropBuild *_bcg .PdfObjectDictionary ;PropAuthTime *_bcg .PdfObjectInteger ;
PropAuthType *_bcg .PdfObjectName ;};

// ToPdfObject converts date to a PDF string object.
func (_bagcgc *PdfDate )ToPdfObject ()_bcg .PdfObject {_becbc :=_g .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_bagcgc ._ceaba ,_bagcgc ._eefgd ,_bagcgc ._afgfg ,_bagcgc ._dfbda ,_bagcgc ._cdce ,_bagcgc ._cbaaa ,_bagcgc ._gacdfg ,_bagcgc ._agedd ,_bagcgc ._egbge );
return _bcg .MakeString (_becbc );};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_afca :=NewPdfAnnotation ();_aaa :=&PdfAnnotationInk {};_aaa .PdfAnnotation =_afca ;_aaa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_afca .SetContext (_aaa );return _aaa ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_bcg .PdfObjectInteger ;BitsPerComponent *_bcg .PdfObjectInteger ;VerticesPerRow *_bcg .PdfObjectInteger ;Decode *_bcg .PdfObjectArray ;Function []PdfFunction ;};

// SetVersion sets the PDF version of the output file.
func (_fcgfa *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_fcgfa ._cbdba .Major =majorVersion ;_fcgfa ._cbdba .Minor =minorVersion ;};

// GetPdfInfo returns the PDF info dictionary.
func (_ggfceb *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_daaef ,_ccfcf :=_ggfceb .GetTrailer ();if _ccfcf !=nil {return nil ,_ccfcf ;};var _afgbbg *_bcg .PdfObjectDictionary ;_fggab :=_daaef .Get ("\u0049\u006e\u0066\u006f");switch _agedg :=_fggab .(type ){case *_bcg .PdfObjectReference :_affaa :=_agedg ;
_fggab ,_ccfcf =_ggfceb .GetIndirectObjectByNumber (int (_affaa .ObjectNumber ));_fggab =_bcg .TraceToDirectObject (_fggab );if _ccfcf !=nil {return nil ,_ccfcf ;};_afgbbg ,_ =_fggab .(*_bcg .PdfObjectDictionary );case *_bcg .PdfObjectDictionary :_afgbbg =_agedg ;
};if _afgbbg ==nil {return nil ,_bcd .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_daga ,_ccfcf :=NewPdfInfoFromObject (_afgbbg );if _ccfcf !=nil {return nil ,_ccfcf ;
};return _daga ,nil ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_ceccg *PdfPageResources )AddExtGState (gsName _bcg .PdfObjectName ,gsDict _bcg .PdfObject )error {if _ceccg .ExtGState ==nil {_ceccg .ExtGState =_bcg .MakeDict ();};_cfeaa :=_ceccg .ExtGState ;_dfbcb ,_dggde :=_bcg .TraceToDirectObject (_cfeaa ).(*_bcg .PdfObjectDictionary );
if !_dggde {_dff .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_cfeaa ,_bcg .TraceToDirectObject (_cfeaa ));
return _bcg .ErrTypeError ;};_dfbcb .Set (gsName ,gsDict );return nil ;};func (_bgdfc *PdfWriter )setDocInfo (_ddecf _bcg .PdfObject ){if _bgdfc .hasObject (_bgdfc ._cbdd ){delete (_bgdfc ._degdg ,_bgdfc ._cbdd );delete (_bgdfc ._bdcg ,_bgdfc ._cbdd );
for _egageg ,_cfabb :=range _bgdfc ._gbadec {if _cfabb ==_bgdfc ._cbdd {copy (_bgdfc ._gbadec [_egageg :],_bgdfc ._gbadec [_egageg +1:]);_bgdfc ._gbadec [len (_bgdfc ._gbadec )-1]=nil ;_bgdfc ._gbadec =_bgdfc ._gbadec [:len (_bgdfc ._gbadec )-1];break ;
};};};_ffgcd :=_bcg .PdfIndirectObject {};_ffgcd .PdfObject =_ddecf ;_bgdfc ._cbdd =&_ffgcd ;_bgdfc .addObject (&_ffgcd );};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cecdb *PdfShadingType4 )ToPdfObject ()_bcg .PdfObject {_cecdb .PdfShading .ToPdfObject ();_ffdce ,_cdfdcf :=_cecdb .getShadingDict ();if _cdfdcf !=nil {_dff .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cecdb .BitsPerCoordinate !=nil {_ffdce .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cecdb .BitsPerCoordinate );};if _cecdb .BitsPerComponent !=nil {_ffdce .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cecdb .BitsPerComponent );
};if _cecdb .BitsPerFlag !=nil {_ffdce .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_cecdb .BitsPerFlag );};if _cecdb .Decode !=nil {_ffdce .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cecdb .Decode );};if _cecdb .Function !=nil {if len (_cecdb .Function )==1{_ffdce .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cecdb .Function [0].ToPdfObject ());
}else {_gfcef :=_bcg .MakeArray ();for _ ,_daeef :=range _cecdb .Function {_gfcef .Append (_daeef .ToPdfObject ());};_ffdce .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gfcef );};};return _cecdb ._cdefff ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bcg .PdfObject ;IC _bcg .PdfObject ;RO _bcg .PdfObject ;OverlayText _bcg .PdfObject ;Repeat _bcg .PdfObject ;DA _bcg .PdfObject ;Q _bcg .PdfObject ;};func (_cedf *DSS )generateHashMaps ()error {_efgd ,_feaga :=_cedf .generateHashMap (_cedf .Certs );
if _feaga !=nil {return _feaga ;};_dbff ,_feaga :=_cedf .generateHashMap (_cedf .OCSPs );if _feaga !=nil {return _feaga ;};_gdcd ,_feaga :=_cedf .generateHashMap (_cedf .CRLs );if _feaga !=nil {return _feaga ;};_cedf ._dfgb =_efgd ;_cedf ._aadc =_dbff ;
_cedf ._feabbb =_gdcd ;return nil ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_acggg *PdfPageResourcesColorspaces )Set (key _bcg .PdfObjectName ,val PdfColorspace ){if _ ,_caggg :=_acggg .Colorspaces [string (key )];!_caggg {_acggg .Names =append (_acggg .Names ,string (key ));};_acggg .Colorspaces [string (key )]=val ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_bfbe *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_bbcag ,_cfbge :=_bcg .GetDict (_bfbe ._gbfg .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_cfbge {_bbcag =_bcg .MakeDict ();_bfbe ._gbfg .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_bbcag );
};_ecbfce ,_cfbge :=_bcg .GetDict (_bbcag .Get (_bcg .PdfObjectName (extName )));if !_cfbge {_ecbfce =_bcg .MakeDict ();_bbcag .Set (_bcg .PdfObjectName (extName ),_ecbfce );};if _abbbc ,_ :=_bcg .GetNameVal (_ecbfce .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_abbbc !=baseVersion {_ecbfce .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_bcg .MakeName (baseVersion ));};if _eaacf ,_ :=_bcg .GetIntVal (_ecbfce .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_eaacf !=extLevel {_ecbfce .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_bcg .MakeInteger (int64 (extLevel )));};};func (_fbcde *DSS )addOCSPs (_fbdb [][]byte )([]*_bcg .PdfObjectStream ,error ){return _fbcde .add (&_fbcde .OCSPs ,_fbcde ._aadc ,_fbdb );
};func _bgccdd (_bedbc _bcg .PdfObject )(*PdfFunctionType2 ,error ){_eecg :=&PdfFunctionType2 {};var _geea *_bcg .PdfObjectDictionary ;if _bfcba ,_fegga :=_bedbc .(*_bcg .PdfIndirectObject );_fegga {_efbcf ,_eeccc :=_bfcba .PdfObject .(*_bcg .PdfObjectDictionary );
if !_eeccc {return nil ,_bcd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_eecg ._ceaga =_bfcba ;_geea =_efbcf ;}else if _fbef ,_aebb :=_bedbc .(*_bcg .PdfObjectDictionary );_aebb {_geea =_fbef ;}else {return nil ,_bcd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_dff .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_geea .String ());_gggf ,_gagcb :=_bcg .TraceToDirectObject (_geea .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bcg .PdfObjectArray );if !_gagcb {_dff .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_bcd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _gggf .Len ()< 0||_gggf .Len ()%2!=0{_dff .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");
return nil ,_bcd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_bfbdd ,_cbeg :=_gggf .ToFloat64Array ();if _cbeg !=nil {return nil ,_cbeg ;};_eecg .Domain =_bfbdd ;_gggf ,_gagcb =_bcg .TraceToDirectObject (_geea .Get ("\u0052\u0061\u006eg\u0065")).(*_bcg .PdfObjectArray );
if _gagcb {if _gggf .Len ()< 0||_gggf .Len ()%2!=0{return nil ,_bcd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_acdbc ,_eabcd :=_gggf .ToFloat64Array ();if _eabcd !=nil {return nil ,_eabcd ;};_eecg .Range =_acdbc ;
};_gggf ,_gagcb =_bcg .TraceToDirectObject (_geea .Get ("\u0043\u0030")).(*_bcg .PdfObjectArray );if _gagcb {_eeea ,_caaac :=_gggf .ToFloat64Array ();if _caaac !=nil {return nil ,_caaac ;};_eecg .C0 =_eeea ;};_gggf ,_gagcb =_bcg .TraceToDirectObject (_geea .Get ("\u0043\u0031")).(*_bcg .PdfObjectArray );
if _gagcb {_efdbg ,_gacf :=_gggf .ToFloat64Array ();if _gacf !=nil {return nil ,_gacf ;};_eecg .C1 =_efdbg ;};if len (_eecg .C0 )!=len (_eecg .C1 ){_dff .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");
return nil ,_bcg .ErrRangeError ;};N ,_cbeg :=_bcg .GetNumberAsFloat (_bcg .TraceToDirectObject (_geea .Get ("\u004e")));if _cbeg !=nil {_dff .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_geea .String ());
return nil ,_cbeg ;};_eecg .N =N ;return _eecg ,nil ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _bcg .PdfObject ;V _bcg .PdfObject ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_ed :=NewPdfAction ();_gec :=&PdfActionHide {};_gec .PdfAction =_ed ;_ed .SetContext (_gec );return _gec ;};

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_fada :=&PdfColorspaceLab {};_fada .BlackPoint =[]float64 {0.0,0.0,0.0};_fada .Range =[]float64 {-100,100,-100,100};return _fada ;};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_eefdd *PdfWriter )SetNamedDestinations (dests _bcg .PdfObject )error {if dests ==nil {return nil ;};_dff .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_eefdd ._gbfg .Set ("\u0044\u0065\u0073t\u0073",dests );return _eefdd .addObjects (dests );};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_dgea .Lock ();defer _dgea .Unlock ();_ebdf =title };

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_abage :=&XObjectImage {};_ebfc :=&_bcg .PdfObjectStream {};_ebfc .PdfObjectDictionary =_bcg .MakeDict ();_abage ._adbae =_ebfc ;return _abage ;};func (_egbec *PdfReader )loadPerms ()(*Permissions ,error ){if _dcgbd :=_egbec ._fdeec .Get ("\u0050\u0065\u0072m\u0073");
_dcgbd !=nil {if _daae ,_ffaef :=_bcg .GetDict (_dcgbd );_ffaef {_edbc :=_daae .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");if _edbc ==nil {return nil ,nil ;};if _eeccg ,_gfbg :=_bcg .GetIndirect (_edbc );_gfbg {_adebb ,_ggdde :=_egbec .newPdfSignatureFromIndirect (_eeccg );
if _ggdde !=nil {return nil ,_ggdde ;};return NewPermissions (_adebb ),nil ;};return nil ,_g .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");};return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");
};return nil ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_gcae *PdfColorspaceLab )GetNumComponents ()int {return 3};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_bgdd *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_ggaad ,_ ,_dage :=_bgdd .CharcodesToUnicodeWithStats (_bgdd .BytesToCharcodes (data ));_eegd :=_bf .ExpandLigatures (_ggaad );return _eegd ,_c .RuneCountInString (_eegd ),_dage ;
};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cfgd pdfFontSimple )GetRuneMetrics (r rune )(_dgb .CharMetrics ,bool ){if _cfgd ._fdbcdc !=nil {_cgae ,_edfdf :=_cfgd ._fdbcdc .Read (r );if _edfdf {return _cgae ,true ;};};_ffdg :=_cfgd .Encoder ();if _ffdg ==nil {_dff .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_cfgd );
return _dgb .CharMetrics {},false ;};_aded ,_ggfae :=_ffdg .RuneToCharcode (r );if !_ggfae {if r !=' '{_dff .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_cfgd );
};return _dgb .CharMetrics {},false ;};_cfddb ,_bgeaf :=_cfgd .GetCharMetrics (_aded );return _cfddb ,_bgeaf ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_cgfe *PdfFieldText )ToPdfObject ()_bcg .PdfObject {_cgfe .PdfField .ToPdfObject ();_gcgcg :=_cgfe ._bddgb ;_cfad :=_gcgcg .PdfObject .(*_bcg .PdfObjectDictionary );_cfad .Set ("\u0046\u0054",_bcg .MakeName ("\u0054\u0078"));if _cgfe .DA !=nil {_cfad .Set ("\u0044\u0041",_cgfe .DA );
};if _cgfe .Q !=nil {_cfad .Set ("\u0051",_cgfe .Q );};if _cgfe .DS !=nil {_cfad .Set ("\u0044\u0053",_cgfe .DS );};if _cgfe .RV !=nil {_cfad .Set ("\u0052\u0056",_cgfe .RV );};if _cgfe .MaxLen !=nil {_cfad .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_cgfe .MaxLen );
};return _gcgcg ;};

// ToPdfObject implements interface PdfModel.
func (_ddg *PdfActionThread )ToPdfObject ()_bcg .PdfObject {_ddg .PdfAction .ToPdfObject ();_dgg :=_ddg ._aag ;_gaa :=_dgg .PdfObject .(*_bcg .PdfObjectDictionary );_gaa .SetIfNotNil ("\u0053",_bcg .MakeName (string (ActionTypeThread )));if _ddg .F !=nil {_gaa .Set ("\u0046",_ddg .F .ToPdfObject ());
};_gaa .SetIfNotNil ("\u0044",_ddg .D );_gaa .SetIfNotNil ("\u0042",_ddg .B );return _dgg ;};func (_cdbcb *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _cdbcb ._eadaf .GetCrypter ()!=nil &&!_cdbcb ._eadaf .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_eccda :=_cdbcb ._fdeec ;_cfbb :=_eccda .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _cfbb ==nil {return nil ,nil ;};_dff .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_dbbd :=_bcg .ResolveReference (_cfbb );
_dff .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_dbbd );if _baead :=_bcg .IsNullObject (_dbbd );_baead {_dff .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_ffgg ,_eebaa :=_dbbd .(*_bcg .PdfIndirectObject );if !_eebaa {if _ ,_ggca :=_bcg .GetDict (_dbbd );!_ggca {_dff .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_dff .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_ffgg =_bcg .MakeIndirectObject (_dbbd );};_acaa ,_eebaa :=_ffgg .PdfObject .(*_bcg .PdfObjectDictionary );if !_eebaa {return nil ,_bcd .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_dff .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_acaa );_fedb ,_ ,_cddaa :=_cdbcb .buildOutlineTree (_ffgg ,nil ,nil ,nil );if _cddaa !=nil {return nil ,_cddaa ;};_dff .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_fedb );
return _fedb ,nil ;};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_decaf *PdfReader )GetNameDictionary ()(_bcg .PdfObject ,error ){_bafe :=_bcg .ResolveReference (_decaf ._fdeec .Get ("\u004e\u0061\u006de\u0073"));if _bafe ==nil {return nil ,nil ;};if !_decaf ._gdfa {_fbdg :=_decaf .traverseObjectData (_bafe );
if _fbdg !=nil {return nil ,_fbdg ;};};return _bafe ,nil ;};func (_adgeb SignatureValidationResult )String ()string {var _ecbfd _gg .Buffer ;_ecbfd .WriteString (_g .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_adgeb .Name ));if _adgeb .Date ._ceaba > 0{_ecbfd .WriteString (_g .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_adgeb .Date .ToGoTime ().String ()));
}else {_ecbfd .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_adgeb .Reason )> 0{_ecbfd .WriteString (_g .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_adgeb .Reason ));
}else {_ecbfd .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_adgeb .Location )> 0{_ecbfd .WriteString (_g .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_adgeb .Location ));
}else {_ecbfd .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_adgeb .ContactInfo )> 0{_ecbfd .WriteString (_g .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_adgeb .ContactInfo ));
}else {_ecbfd .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_ecbfd .WriteString (_g .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_adgeb .Fields )));
if _adgeb .IsSigned {_ecbfd .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_ecbfd .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");
};if _adgeb .IsVerified {_ecbfd .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_ecbfd .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");
};if _adgeb .IsTrusted {_ecbfd .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_ecbfd .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");
};if !_adgeb .GeneralizedTime .IsZero (){_ecbfd .WriteString (_g .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_adgeb .GeneralizedTime .String ()));};if _adgeb .DiffResults !=nil {_ecbfd .WriteString (_g .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_adgeb .DiffResults .IsPermitted ()));
if len (_adgeb .DiffResults .Warnings )> 0{_ecbfd .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");for _ ,_faebd :=range _adgeb .DiffResults .Warnings {_ecbfd .WriteString (_g .Sprintf ("\u0009\u0025\u0073\u000a",_faebd ));
};};if len (_adgeb .DiffResults .Errors )> 0{_ecbfd .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");for _ ,_gfge :=range _adgeb .DiffResults .Errors {_ecbfd .WriteString (_g .Sprintf ("\u0009\u0025\u0073\u000a",_gfge ));
};};};return _ecbfd .String ();};

// ColorToRGB converts a Lab color to an RGB color.
func (_ddef *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_cgfd :=func (_fgfaa float64 )float64 {if _fgfaa >=6.0/29{return _fgfaa *_fgfaa *_fgfaa ;};return 108.0/841*(_fgfaa -4/29);};_gfba ,_fgfg :=color .(*PdfColorLab );if !_fgfg {_dff .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_bcd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_gfba .L ();AStar :=_gfba .A ();BStar :=_gfba .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_ddef .WhitePoint [0]*_cgfd (L );Y :=_ddef .WhitePoint [1]*_cgfd (M );Z :=_ddef .WhitePoint [2]*_cgfd (N );_ddfac :=3.240479*X +-1.537150*Y +-0.498535*Z ;_eggeg :=-0.969256*X +1.875992*Y +0.041556*Z ;_gdbb :=0.055648*X +-0.204043*Y +1.057311*Z ;_ddfac =_ab .Min (_ab .Max (_ddfac ,0),1.0);
_eggeg =_ab .Min (_ab .Max (_eggeg ,0),1.0);_gdbb =_ab .Min (_ab .Max (_gdbb ,0),1.0);return NewPdfColorDeviceRGB (_ddfac ,_eggeg ,_gdbb ),nil ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_decee *LTV )EnableChain (chain []*_ag .Certificate )error {return _decee .enable (nil ,chain ,"")};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _bcg .PdfObject ;Volume _bcg .PdfObject ;Synchronous _bcg .PdfObject ;Repeat _bcg .PdfObject ;Mix _bcg .PdfObject ;};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_aebd []_bcg .PdfObject )([]_bcg .PdfObject ,error );};

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_dgea .Lock ();defer _dgea .Unlock ();_fcfbe =producer };

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_bage PdfModel ;_bddgb *_bcg .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_bcg .PdfObjectName ;T *_bcg .PdfObjectString ;TU *_bcg .PdfObjectString ;TM *_bcg .PdfObjectString ;Ff *_bcg .PdfObjectInteger ;
V _bcg .PdfObject ;DV _bcg .PdfObject ;AA _bcg .PdfObject ;VariableText *VariableText ;};

// AddOutlineTree adds outlines to a PDF file.
func (_adgbc *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_adgbc ._edbec =outlineTree };func (_cgdggc fontCommon )fontFlags ()int {if _cgdggc ._faaca ==nil {return 0;};return _cgdggc ._faaca ._gcfcf ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_eabac *PdfAcroForm )ToPdfObject ()_bcg .PdfObject {_fgdga :=_eabac ._eafcb ;_afaf :=_fgdga .PdfObject .(*_bcg .PdfObjectDictionary );if _eabac .Fields !=nil {_gefdg :=_bcg .PdfObjectArray {};for _ ,_cebac :=range *_eabac .Fields {_abde :=_cebac .GetContext ();
if _abde !=nil {_gefdg .Append (_abde .ToPdfObject ());}else {_gefdg .Append (_cebac .ToPdfObject ());};};_afaf .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_gefdg );};if _eabac .NeedAppearances !=nil {_afaf .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_eabac .NeedAppearances );
};if _eabac .SigFlags !=nil {_afaf .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_eabac .SigFlags );};if _eabac .CO !=nil {_afaf .Set ("\u0043\u004f",_eabac .CO );};if _eabac .DR !=nil {_afaf .Set ("\u0044\u0052",_eabac .DR .ToPdfObject ());
};if _eabac .DA !=nil {_afaf .Set ("\u0044\u0041",_eabac .DA );};if _eabac .Q !=nil {_afaf .Set ("\u0051",_eabac .Q );};if _eabac .XFA !=nil {_afaf .Set ("\u0058\u0046\u0041",_eabac .XFA );};return _fgdga ;};

// ToPdfObject implements interface PdfModel.
func (_gdd *PdfActionLaunch )ToPdfObject ()_bcg .PdfObject {_gdd .PdfAction .ToPdfObject ();_ga :=_gdd ._aag ;_dfff :=_ga .PdfObject .(*_bcg .PdfObjectDictionary );_dfff .SetIfNotNil ("\u0053",_bcg .MakeName (string (ActionTypeLaunch )));if _gdd .F !=nil {_dfff .Set ("\u0046",_gdd .F .ToPdfObject ());
};_dfff .SetIfNotNil ("\u0057\u0069\u006e",_gdd .Win );_dfff .SetIfNotNil ("\u004d\u0061\u0063",_gdd .Mac );_dfff .SetIfNotNil ("\u0055\u006e\u0069\u0078",_gdd .Unix );_dfff .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_gdd .NewWindow );
return _ga ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_bcg .PdfIndirectObject ;SV *_bcg .PdfIndirectObject ;};func (_fecfb *pdfFontSimple )getFontEncoding ()(_cdcfg string ,_efaf map[_bf .CharCode ]_bf .GlyphName ,_fgfdbd error ){_cdcfg ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";
if _dbgc ,_fecfa :=_agfag [_fecfb ._aafc ];_fecfa {_cdcfg =_dbgc ;}else if _fecfb .fontFlags ()&_aaea !=0{for _bdeb ,_fbcfb :=range _agfag {if _ce .Contains (_fecfb ._aafc ,_bdeb ){_cdcfg =_fbcfb ;break ;};};};if _fecfb .Encoding ==nil {return _cdcfg ,nil ,nil ;
};switch _agbbb :=_fecfb .Encoding .(type ){case *_bcg .PdfObjectName :return string (*_agbbb ),nil ,nil ;case *_bcg .PdfObjectDictionary :_deac ,_ggaadc :=_bcg .GetName (_agbbb .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
if _ggaadc {_cdcfg =_deac .String ();};if _fcbce :=_agbbb .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_fcbce !=nil {_gfgd ,_fccb :=_bcg .GetArray (_fcbce );if !_fccb {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_agbbb ,_agbbb .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_bcg .ErrTypeError ;};_efaf ,_fgfdbd =_bf .FromFontDifferences (_gfgd );};return _cdcfg ,_efaf ,_fgfdbd ;default:_dff .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_fecfb .Encoding ,_fecfb .Encoding );
return "",nil ,_bcg .ErrTypeError ;};};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_dgea .Lock ();defer _dgea .Unlock ();_bacbg =author };

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_afc PdfModel ;Type _bcg .PdfObject ;S _bcg .PdfObject ;Next _bcg .PdfObject ;_aag *_bcg .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_gaca *PdfAnnotation )ToPdfObject ()_bcg .PdfObject {_daca :=_gaca ._cbe ;_dffge :=_daca .PdfObject .(*_bcg .PdfObjectDictionary );_dffge .Clear ();_dffge .Set ("\u0054\u0079\u0070\u0065",_bcg .MakeName ("\u0041\u006e\u006eo\u0074"));_dffge .SetIfNotNil ("\u0052\u0065\u0063\u0074",_gaca .Rect );
_dffge .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_gaca .Contents );_dffge .SetIfNotNil ("\u0050",_gaca .P );_dffge .SetIfNotNil ("\u004e\u004d",_gaca .NM );_dffge .SetIfNotNil ("\u004d",_gaca .M );_dffge .SetIfNotNil ("\u0046",_gaca .F );
_dffge .SetIfNotNil ("\u0041\u0050",_gaca .AP );_dffge .SetIfNotNil ("\u0041\u0053",_gaca .AS );_dffge .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_gaca .Border );_dffge .SetIfNotNil ("\u0043",_gaca .C );_dffge .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_gaca .StructParent );
_dffge .SetIfNotNil ("\u004f\u0043",_gaca .OC );return _daca ;};

// ToPdfObject implements interface PdfModel.
func (_cfga *PdfAnnotationPrinterMark )ToPdfObject ()_bcg .PdfObject {_cfga .PdfAnnotation .ToPdfObject ();_begd :=_cfga ._cbe ;_bbec :=_begd .PdfObject .(*_bcg .PdfObjectDictionary );_bbec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_bbec .SetIfNotNil ("\u004d\u004e",_cfga .MN );return _begd ;};

// GetFillImage get attached model.Image in push button.
func (_dfbc *PdfFieldButton )GetFillImage ()*Image {if _dfbc .IsPush (){return _dfbc ._bcee ;};return nil ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_dgea .Lock ();defer _dgea .Unlock ();_fgebbbd =keywords };

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_bbba *BorderStyle )GetPdfName ()string {switch *_bbba {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};func _gefd (_gebdf _bcg .PdfObject )(*PdfFontDescriptor ,error ){_acgc :=&PdfFontDescriptor {};_gebdf =_bcg .ResolveReference (_gebdf );if _fdaab ,_ffga :=_gebdf .(*_bcg .PdfIndirectObject );_ffga {_acgc ._beefg =_fdaab ;_gebdf =_fdaab .PdfObject ;
};_eagda ,_gced :=_bcg .GetDict (_gebdf );if !_gced {_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gebdf );
return nil ,_bcg .ErrTypeError ;};if _afegg :=_eagda .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_afegg !=nil {_acgc .FontName =_afegg ;}else {_dff .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_baac ,_ :=_bcg .GetName (_acgc .FontName );if _eebe :=_eagda .Get ("\u0054\u0079\u0070\u0065");_eebe !=nil {_bgcc ,_cebf :=_eebe .(*_bcg .PdfObjectName );if !_cebf ||string (*_bgcc )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_dff .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_eebe ,_baac ,_acgc .FontName );
};}else {_dff .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_baac ,_acgc .FontName );
};_acgc .FontFamily =_eagda .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_acgc .FontStretch =_eagda .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_acgc .FontWeight =_eagda .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_acgc .Flags =_eagda .Get ("\u0046\u006c\u0061g\u0073");_acgc .FontBBox =_eagda .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_acgc .ItalicAngle =_eagda .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_acgc .Ascent =_eagda .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_acgc .Descent =_eagda .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_acgc .Leading =_eagda .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_acgc .CapHeight =_eagda .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_acgc .XHeight =_eagda .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_acgc .StemV =_eagda .Get ("\u0053\u0074\u0065m\u0056");_acgc .StemH =_eagda .Get ("\u0053\u0074\u0065m\u0048");_acgc .AvgWidth =_eagda .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_acgc .MaxWidth =_eagda .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_acgc .MissingWidth =_eagda .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_acgc .FontFile =_eagda .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_acgc .FontFile2 =_eagda .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_acgc .FontFile3 =_eagda .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_acgc .CharSet =_eagda .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_acgc .Style =_eagda .Get ("\u0053\u0074\u0079l\u0065");_acgc .Lang =_eagda .Get ("\u004c\u0061\u006e\u0067");
_acgc .FD =_eagda .Get ("\u0046\u0044");_acgc .CIDSet =_eagda .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _acgc .Flags !=nil {if _bfad ,_fedfc :=_bcg .GetIntVal (_acgc .Flags );_fedfc {_acgc ._gcfcf =_bfad ;};};if _acgc .MissingWidth !=nil {if _ecaf ,_ecgg :=_bcg .GetNumberAsFloat (_acgc .MissingWidth );
_ecgg ==nil {_acgc ._gbdae =_ecaf ;};};if _acgc .FontFile !=nil {_fbbdg ,_ddcee :=_cceeg (_acgc .FontFile );if _ddcee !=nil {return _acgc ,_ddcee ;};_dff .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_fbbdg );_acgc .fontFile =_fbbdg ;
};if _acgc .FontFile2 !=nil {_egagd ,_gdaa :=_dgb .NewFontFile2FromPdfObject (_acgc .FontFile2 );if _gdaa !=nil {return _acgc ,_gdaa ;};_dff .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_egagd .String ());_acgc ._ecege =&_egagd ;
};return _acgc ,nil ;};func (_gdcda *PdfSignature )extractChainFromPKCS7 ()([]*_ag .Certificate ,error ){_ceeae ,_acace :=_ec .Parse (_gdcda .Contents .Bytes ());if _acace !=nil {return nil ,_acace ;};return _ceeae .Certificates ,nil ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_fcaa *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_dgcb :=_fcaa .fill (provider ,appGen );if _dgcb !=nil {return _dgcb ;};if _ ,_fdde :=provider .(FieldImageProvider );_fdde {_dgcb =_fcaa .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _dgcb ;};func (_daafg *PdfWriter )checkPendingObjects (){for _efcca ,_fbdba :=range _daafg ._gbcf {if !_daafg .hasObject (_efcca ){_dff .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_efcca ,_efcca ,_efcca );
for _ ,_fagb :=range _fbdba {for _ ,_dgcgf :=range _fagb .Keys (){_adeff :=_fagb .Get (_dgcgf );if _adeff ==_efcca {_dff .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_fagb .Set (_dgcgf ,_bcg .MakeNull ());break ;};};};};};};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cgfdd *PdfPageResourcesColorspaces )ToPdfObject ()_bcg .PdfObject {_edaad :=_bcg .MakeDict ();for _ ,_dfbfe :=range _cgfdd .Names {_edaad .Set (_bcg .PdfObjectName (_dfbfe ),_cgfdd .Colorspaces [_dfbfe ].ToPdfObject ());};if _cgfdd ._ebfac !=nil {_cgfdd ._ebfac .PdfObject =_edaad ;
return _cgfdd ._ebfac ;};return _edaad ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_agbb :=&PdfAppender {_gfaa :reader ._bggbbg ,Reader :reader ,_fdce :reader ._eadaf ,_ecb :reader ._ebfgb };_ggcf ,_dgbc :=_agbb ._gfaa .Seek (0,_dg .SeekEnd );if _dgbc !=nil {return nil ,_dgbc ;
};_agbb ._dfae =_ggcf ;if _ ,_dgbc =_agbb ._gfaa .Seek (0,_dg .SeekStart );_dgbc !=nil {return nil ,_dgbc ;};_agbb ._cgdd ,_dgbc =NewPdfReader (_agbb ._gfaa );if _dgbc !=nil {return nil ,_dgbc ;};for _ ,_abgd :=range _agbb .Reader .GetObjectNums (){if _agbb ._eeaeg < _abgd {_agbb ._eeaeg =_abgd ;
};};_agbb ._bcae =_agbb ._fdce .GetXrefTable ();_agbb ._fggd =_agbb ._fdce .GetXrefOffset ();_agbb ._dbc =append (_agbb ._dbc ,_agbb ._cgdd .PageList ...);_agbb ._dcceg =make (map[_bcg .PdfObject ]struct{});_agbb ._feab =make (map[_bcg .PdfObject ]int64 );
_agbb ._gecb =make (map[_bcg .PdfObject ]struct{});_agbb ._acc =_agbb ._cgdd .AcroForm ;_agbb ._ded =_agbb ._cgdd .DSS ;return _agbb ,nil ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_bfdd :=&PdfAnnotation {};_bfdd ._cbe =_bcg .MakeIndirectObject (_bcg .MakeDict ());return _bfdd ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_dcfbc *PdfPage )GetContentStreamObjs ()[]_bcg .PdfObject {if _dcfbc .Contents ==nil {return nil ;};_gcef :=_bcg .TraceToDirectObject (_dcfbc .Contents );if _bacdg ,_baec :=_gcef .(*_bcg .PdfObjectArray );_baec {return _bacdg .Elements ();};return []_bcg .PdfObject {_gcef };
};var _agfag =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// ToPdfObject implements interface PdfModel.
func (_bag *PdfActionSetOCGState )ToPdfObject ()_bcg .PdfObject {_bag .PdfAction .ToPdfObject ();_cfd :=_bag ._aag ;_eg :=_cfd .PdfObject .(*_bcg .PdfObjectDictionary );_eg .SetIfNotNil ("\u0053",_bcg .MakeName (string (ActionTypeSetOCGState )));_eg .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_bag .State );
_eg .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_bag .PreserveRB );return _cfd ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_gef :=NewPdfAction ();_cdf :=&PdfActionImportData {};_cdf .PdfAction =_gef ;_gef .SetContext (_cdf );return _cdf ;};func _aafgf (_ddebb _bcg .PdfObject )(string ,error ){_ddebb =_bcg .TraceToDirectObject (_ddebb );
switch _bagcg :=_ddebb .(type ){case *_bcg .PdfObjectString :return _bagcg .Str (),nil ;case *_bcg .PdfObjectStream :_dgeec ,_gaddb :=_bcg .DecodeStream (_bagcg );if _gaddb !=nil {return "",_gaddb ;};return string (_dgeec ),nil ;};return "",_g .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_ddebb );
};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_gefdf PdfOutputIntentType )String ()string {switch _gefdf {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};const (BorderEffectNoEffect BorderEffect =iota ;
BorderEffectCloudy BorderEffect =iota ;);

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_bcg .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_bcg .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};

// ToPdfObject implements interface PdfModel.
func (_fbegb *Permissions )ToPdfObject ()_bcg .PdfObject {return _fbegb ._cdade };

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_bcg .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _bcg .PdfObject ;A _bcg .PdfObject ;SE _bcg .PdfObject ;C _bcg .PdfObject ;F _bcg .PdfObject ;
_edgdb *_bcg .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_bgbee *PdfTransformParamsDocMDP )ToPdfObject ()_bcg .PdfObject {_bebfa :=_bcg .MakeDict ();_bebfa .SetIfNotNil ("\u0054\u0079\u0070\u0065",_bgbee .Type );_bebfa .SetIfNotNil ("\u0056",_bgbee .V );_bebfa .SetIfNotNil ("\u0050",_bgbee .P );return _bebfa ;
};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_bcg .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _bcg .PdfObject ;AN _bcg .PdfObject ;OP _bcg .PdfObject ;JS _bcg .PdfObject ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_dgcbe *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_dggffb :=NewPdfOutlineItem ();_dggffb .Title =_bcg .MakeEncodedString (_dgcbe .Title ,true );_dggffb .Dest =_dgcbe .Dest .ToPdfObject ();var _gaaee []*PdfOutlineItem ;var _bfedd int64 ;
var _gbbe *PdfOutlineItem ;for _ ,_gdbea :=range _dgcbe .Entries {_bdbaa ,_ffcde :=_gdbea .ToPdfOutlineItem ();_bdbaa .Parent =&_dggffb .PdfOutlineTreeNode ;if _gbbe !=nil {_gbbe .Next =&_bdbaa .PdfOutlineTreeNode ;_bdbaa .Prev =&_gbbe .PdfOutlineTreeNode ;
};_gaaee =append (_gaaee ,_bdbaa );_bfedd +=_ffcde ;_gbbe =_bdbaa ;};_bgdbc :=len (_gaaee );_bfedd +=int64 (_bgdbc );if _bgdbc > 0{_dggffb .First =&_gaaee [0].PdfOutlineTreeNode ;_dggffb .Last =&_gaaee [_bgdbc -1].PdfOutlineTreeNode ;_dggffb .Count =&_bfedd ;
};return _dggffb ,_bfedd ;};func _bgcbe (_geeed *_dca .ImageBase )(_gbaag Image ){_gbaag .Width =int64 (_geeed .Width );_gbaag .Height =int64 (_geeed .Height );_gbaag .BitsPerComponent =int64 (_geeed .BitsPerComponent );_gbaag .ColorComponents =_geeed .ColorComponents ;
_gbaag .Data =_geeed .Data ;_gbaag ._agagd =_geeed .Decode ;_gbaag ._aagba =_geeed .Alpha ;return _gbaag ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_bcg .PdfObjectArray ;TI *_bcg .PdfObjectInteger ;I *_bcg .PdfObjectArray ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_cgb :=NewPdfAnnotation ();_fgc :=&PdfAnnotationStrikeOut {};_fgc .PdfAnnotation =_cgb ;_fgc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgb .SetContext (_fgc );return _fgc ;};func (_fcab *PdfReader )newPdfAnnotationStrikeOut (_ccc *_bcg .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_bfcf :=PdfAnnotationStrikeOut {};
_gebgf ,_cffa :=_fcab .newPdfAnnotationMarkupFromDict (_ccc );if _cffa !=nil {return nil ,_cffa ;};_bfcf .PdfAnnotationMarkup =_gebgf ;_bfcf .QuadPoints =_ccc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_bfcf ,nil ;};func (_fcgce *Image )resampleLowBits (_aegdg []uint32 ){_acbba :=_dca .BytesPerLine (int (_fcgce .Width ),int (_fcgce .BitsPerComponent ),_fcgce .ColorComponents );
_gafae :=make ([]byte ,_fcgce .ColorComponents *_acbba *int (_fcgce .Height ));_gafbg :=int (_fcgce .BitsPerComponent )*_fcgce .ColorComponents *int (_fcgce .Width );_gcfb :=uint8 (8);var (_fgfcc ,_afda int ;_eaca uint32 ;);for _ebdd :=0;_ebdd < int (_fcgce .Height );
_ebdd ++{_afda =_ebdd *_acbba ;for _cdcg :=0;_cdcg < _gafbg ;_cdcg ++{_eaca =_aegdg [_fgfcc ];_gcfb -=uint8 (_fcgce .BitsPerComponent );_gafae [_afda ]|=byte (_eaca )<<_gcfb ;if _gcfb ==0{_gcfb =8;_afda ++;};_fgfcc ++;};};_fcgce .Data =_gafae ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_cefg *PdfField )FullName ()(string ,error ){var _dccd _gg .Buffer ;_ffea :=[]string {};if _cefg .T !=nil {_ffea =append (_ffea ,_cefg .T .Decoded ());};_facc :=map[*PdfField ]bool {};_facc [_cefg ]=true ;_fdca :=_cefg .Parent ;for _fdca !=nil {if _ ,_dfde :=_facc [_fdca ];
_dfde {return _dccd .String (),_bcd .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _fdca .T ==nil {return _dccd .String (),_bcd .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_ffea =append (_ffea ,_fdca .T .Decoded ());_facc [_fdca ]=true ;_fdca =_fdca .Parent ;};for _cbbe :=len (_ffea )-1;_cbbe >=0;_cbbe --{_dccd .WriteString (_ffea [_cbbe ]);if _cbbe > 0{_dccd .WriteString ("\u002e");};};return _dccd .String (),nil ;};

// Encoder returns the font's text encoder.
func (_fbdbd pdfCIDFontType2 )Encoder ()_bf .TextEncoder {return _fbdbd ._eaad };var _fdbb =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_eebegf *PdfWriter )AddPage (page *PdfPage )error {const _gcfga ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_dccdb (page );_edbba :=page .ToPdfObject ();_dff .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_dff .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_edbba );_ceecg ,_faga :=_bcg .GetIndirect (_edbba );if !_faga {return _bcd .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_dff .Log .Trace ("\u0025\u0073",_ceecg );_dff .Log .Trace ("\u0025\u0073",_ceecg .PdfObject );_ffead ,_faga :=_bcg .GetDict (_ceecg .PdfObject );if !_faga {return _bcd .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bgdcf ,_faga :=_bcg .GetName (_ffead .Get ("\u0054\u0079\u0070\u0065"));if !_faga {return _g .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_ffead .Get ("\u0054\u0079\u0070\u0065"));
};if _bgdcf .String ()!="\u0050\u0061\u0067\u0065"{return _bcd .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_cdgca :=[]_bcg .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_egfcb ,_cfccc :=_bcg .GetIndirect (_ffead .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_dff .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_ffead .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_cfccc );
for _cfccc {_dff .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_egfcb );_efdgbc ,_aagdb :=_bcg .GetDict (_egfcb .PdfObject );if !_aagdb {return _bcd .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_ebbdc :=range _cdgca {_dff .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ebbdc );if _ffead .Get (_ebbdc )!=nil {_dff .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _ddafd :=_efdgbc .Get (_ebbdc );_ddafd !=nil {_dff .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_ebbdc );_ffead .Set (_ebbdc ,_ddafd );};};_egfcb ,_cfccc =_bcg .GetIndirect (_efdgbc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_dff .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_efdgbc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_dff .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_ffead .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eebegf ._cdcfad );_ceecg .PdfObject =_ffead ;_egbgd ,_faga :=_bcg .GetDict (_eebegf ._cdcfad .PdfObject );if !_faga {return _bcd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_egfcbe ,_faga :=_bcg .GetArray (_egbgd .Get ("\u004b\u0069\u0064\u0073"));if !_faga {return _bcd .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_egfcbe .Append (_ceecg );_eebegf ._cfccg [_ffead ]=struct{}{};_acbgg ,_faga :=_bcg .GetInt (_egbgd .Get ("\u0043\u006f\u0075n\u0074"));if !_faga {return _bcd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_acbgg =*_acbgg +1;if page ._bebfe ==nil {_dbdgd :=_bbd .Track (_eebegf ._egdef ,_gcfga );if _dbdgd !=nil {return _dbdgd ;};}else {_bacbe :=_bbd .Track (page ._bebfe ._bdbga ,_gcfga );if _bacbe !=nil {return _bacbe ;};};_eebegf .addObject (_ceecg );
_daage :=_eebegf .addObjects (_ffead );if _daage !=nil {return _daage ;};return nil ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;PageProcessCallback PageProcessCallback ;


// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_eaaa *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_eaaa .GetNumComponents (){return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgd ,_bafb :=_eaaa .TintTransform .Evaluate (vals );
if _bafb !=nil {return nil ,_bafb ;};_ccbgc ,_bafb :=_eaaa .AlternateSpace .ColorFromFloats (_bgd );if _bafb !=nil {return nil ,_bafb ;};return _ccbgc ,nil ;};func (_ffbad *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _dbef []*PdfFieldSignature ;
for _ ,_eacbc :=range _ffbad .AllFields (){switch _cdbd :=_eacbc .GetContext ().(type ){case *PdfFieldSignature :_gfced :=_cdbd ;_dbef =append (_dbef ,_gfced );};};return _dbef ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_gdead FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_gdead .Mask ()&^fl .Mask ())};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_cddb *pdfCIDFontType2 )ToPdfObject ()_bcg .PdfObject {if _cddb ._abgeb ==nil {_cddb ._abgeb =&_bcg .PdfIndirectObject {};};_caee :=_cddb .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_cddb ._abgeb .PdfObject =_caee ;if _cddb .CIDSystemInfo !=nil {_caee .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_cddb .CIDSystemInfo );};if _cddb .DW !=nil {_caee .Set ("\u0044\u0057",_cddb .DW );};if _cddb .DW2 !=nil {_caee .Set ("\u0044\u0057\u0032",_cddb .DW2 );
};if _cddb .W !=nil {_caee .Set ("\u0057",_cddb .W );};if _cddb .W2 !=nil {_caee .Set ("\u0057\u0032",_cddb .W2 );};if _cddb .CIDToGIDMap !=nil {_caee .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_cddb .CIDToGIDMap );};return _cddb ._abgeb ;
};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_effcf *PdfWriter )SetCatalogMetadata (meta _bcg .PdfObject )error {if meta ==nil {_effcf ._gbfg .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_fgcae ,_dbagd :=_bcg .GetStream (meta );if !_dbagd {return _bcd .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_effcf .addObject (_fgcae );_effcf ._gbfg .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_fgcae );return nil ;};

// GetContentStream returns the pattern cell's content stream
func (_acdbca *PdfTilingPattern )GetContentStream ()([]byte ,error ){_gbdeg ,_ ,_ebfg :=_acdbca .GetContentStreamWithEncoder ();return _gbdeg ,_ebfg ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bcg .PdfObject ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _dg .ReadSeeker )(*PdfFont ,error ){const _cbea =_bf .CharCode (32);const _cgef =_bf .CharCode (255);_cgaca ,_gafga :=_df .ReadAll (r );if _gafga !=nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_gafga );
return nil ,_gafga ;};_egfda ,_gafga :=_dgb .TtfParse (_gg .NewReader (_cgaca ));if _gafga !=nil {_dff .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_gafga );
return nil ,_gafga ;};_gdgcb :=&pdfFontSimple {_ffgef :make (map[_bf .CharCode ]float64 ),fontCommon :fontCommon {_cfeef :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_gdgcb ._cbdg =_bf .NewWinAnsiEncoder ();_gdgcb ._aafc =_egfda .PostScriptName ;
_gdgcb .FirstChar =_bcg .MakeInteger (int64 (_cbea ));_gdgcb .LastChar =_bcg .MakeInteger (int64 (_cgef ));_baegg :=1000.0/float64 (_egfda .UnitsPerEm );if len (_egfda .Widths )<=0{return nil ,_bcd .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_bfceg :=_baegg *float64 (_egfda .Widths [0]);_begfc :=make ([]float64 ,0,_cgef -_cbea +1);for _dgdfe :=_cbea ;_dgdfe <=_cgef ;_dgdfe ++{_bgebd ,_cfeee :=_gdgcb .Encoder ().CharcodeToRune (_dgdfe );if !_cfeee {_dff .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_dgdfe );
_begfc =append (_begfc ,_bfceg );continue ;};_bdfga ,_eedd :=_egfda .Chars [_bgebd ];if !_eedd {_dff .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_begfc =append (_begfc ,_bfceg );
continue ;};_bdgd :=_baegg *float64 (_egfda .Widths [_bdfga ]);_begfc =append (_begfc ,_bdgd );};_gdgcb .Widths =_bcg .MakeIndirectObject (_bcg .MakeArrayFromFloats (_begfc ));if len (_begfc )< int (_cgef -_cbea +1){_dff .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_begfc ),255-32+1);
return nil ,_bcg .ErrRangeError ;};for _badbb :=_cbea ;_badbb <=_cgef ;_badbb ++{_gdgcb ._ffgef [_badbb ]=_begfc [_badbb -_cbea ];};_gdgcb .Encoding =_bcg .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_acgeb :=&PdfFontDescriptor {};
_acgeb .FontName =_bcg .MakeName (_egfda .PostScriptName );_acgeb .Ascent =_bcg .MakeFloat (_baegg *float64 (_egfda .TypoAscender ));_acgeb .Descent =_bcg .MakeFloat (_baegg *float64 (_egfda .TypoDescender ));_acgeb .CapHeight =_bcg .MakeFloat (_baegg *float64 (_egfda .CapHeight ));
_acgeb .FontBBox =_bcg .MakeArrayFromFloats ([]float64 {_baegg *float64 (_egfda .Xmin ),_baegg *float64 (_egfda .Ymin ),_baegg *float64 (_egfda .Xmax ),_baegg *float64 (_egfda .Ymax )});_acgeb .ItalicAngle =_bcg .MakeFloat (_egfda .ItalicAngle );_acgeb .MissingWidth =_bcg .MakeFloat (_baegg *float64 (_egfda .Widths [0]));
_dedde ,_gafga :=_bcg .MakeStream (_cgaca ,_bcg .NewFlateEncoder ());if _gafga !=nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_gafga );
return nil ,_gafga ;};_dedde .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bcg .MakeInteger (int64 (len (_cgaca ))));_acgeb .FontFile2 =_dedde ;if _egfda .Bold {_acgeb .StemV =_bcg .MakeInteger (120);}else {_acgeb .StemV =_bcg .MakeInteger (70);
};_beeg :=_gbgcb ;if _egfda .IsFixedPitch {_beeg |=_dfaf ;};if _egfda .ItalicAngle !=0{_beeg |=_cfeafd ;};_acgeb .Flags =_bcg .MakeInteger (int64 (_beeg ));_gdgcb ._faaca =_acgeb ;_bfabc :=&PdfFont {_aabbg :_gdgcb };return _bfabc ,nil ;};

// Register registers (caches) a model to primitive object relationship.
func (_facf *modelManager )Register (primitive _bcg .PdfObject ,model PdfModel ){_facf ._dadae [model ]=primitive ;_facf ._eeadf [primitive ]=model ;};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _bcg .PdfObject ;BS _bcg .PdfObject ;LE _bcg .PdfObject ;IC _bcg .PdfObject ;LL _bcg .PdfObject ;LLE _bcg .PdfObject ;Cap _bcg .PdfObject ;IT _bcg .PdfObject ;LLO _bcg .PdfObject ;CP _bcg .PdfObject ;
Measure _bcg .PdfObject ;CO _bcg .PdfObject ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _bcg .PdfObject ;PreserveRB _bcg .PdfObject ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gdcg pdfCIDFontType0 )GetRuneMetrics (r rune )(_dgb .CharMetrics ,bool ){return _dgb .CharMetrics {Wx :_gdcg ._cfaa },true ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_dcc :=NewPdfAction ();_fdb :=&PdfActionSubmitForm {};_fdb .PdfAction =_dcc ;_dcc .SetContext (_fdb );return _fdb ;};func (_ebd *PdfReader )newPdfActionMovieFromDict (_bae *_bcg .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_bae .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_bae .Get ("\u0054"),Operation :_bae .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// ToPdfObject implements interface PdfModel.
func (_eee *PdfAnnotationSquiggly )ToPdfObject ()_bcg .PdfObject {_eee .PdfAnnotation .ToPdfObject ();_ecee :=_eee ._cbe ;_bafa :=_ecee .PdfObject .(*_bcg .PdfObjectDictionary );_eee .PdfAnnotationMarkup .appendToPdfDictionary (_bafa );_bafa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_bafa .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_eee .QuadPoints );return _ecee ;};func (_efbf *PdfField )inherit (_fcgc func (*PdfField )bool )(bool ,error ){_cafc :=map[*PdfField ]bool {};_ggfc :=false ;_fefd :=_efbf ;
for _fefd !=nil {if _ ,_cgbae :=_cafc [_fefd ];_cgbae {return false ,_bcd .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_dcdef :=_fcgc (_fefd );if _dcdef {_ggfc =true ;break ;};_cafc [_fefd ]=true ;
_fefd =_fefd .Parent ;};return _ggfc ,nil ;};func (_caea *pdfFontType0 )baseFields ()*fontCommon {return &_caea .fontCommon };

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_bcg .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_bcg .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_bcg .PdfObjectBool ;_cbaa PdfModel ;_cdefff _bcg .PdfObject ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bgad *PdfSignature )GetContainingPdfObject ()_bcg .PdfObject {return _bgad ._feead };

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _fa .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_bcg .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_bcg .MakeInteger (int64 (permission )),V :_bcg .MakeName ("\u0031\u002e\u0032")};
};

// AddCustomInfo adds a custom info into document info dictionary.
func (_dgff *PdfInfo )AddCustomInfo (name string ,value string )error {if _dgff ._aabd ==nil {_dgff ._aabd =_bcg .MakeDict ();};if _ ,_geee :=_fdbb [name ];_geee {return _g .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_dgff ._aabd .SetIfNotNil (*_bcg .MakeName (name ),_bcg .MakeString (value ));return nil ;};

// Encoder returns the font's text encoder.
func (_ebdeb pdfFontType3 )Encoder ()_bf .TextEncoder {return _ebdeb ._fgbdc };func (_fafe *PdfReader )newPdfActionResetFormFromDict (_afea *_bcg .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_afea .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_afea .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_gbbcd *DSS )ToPdfObject ()_bcg .PdfObject {_eagcb :=_gbbcd ._aeaf .PdfObject .(*_bcg .PdfObjectDictionary );_eagcb .Clear ();_egcg :=_bcg .MakeDict ();for _gdfff ,_ggfb :=range _gbbcd .VRI {_egcg .Set (*_bcg .MakeName (_gdfff ),_ggfb .ToPdfObject ());
};_eagcb .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_efbe (_gbbcd .Certs ));_eagcb .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_efbe (_gbbcd .OCSPs ));_eagcb .SetIfNotNil ("\u0043\u0052\u004c\u0073",_efbe (_gbbcd .CRLs ));_eagcb .Set ("\u0056\u0052\u0049",_egcg );
return _gbbcd ._aeaf ;};

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_ebcbc *LTV )EnableAll (extraCerts []*_ag .Certificate )error {_ggacc :=_ebcbc ._cgbab ._cgdd .AcroForm ;for _ ,_fdeg :=range _ggacc .AllFields (){_adda ,_ :=_fdeg .GetContext ().(*PdfFieldSignature );if _adda ==nil {continue ;};_dbfee :=_adda .V ;
if _gbffe :=_ebcbc .validateSig (_dbfee );_gbffe !=nil {_dff .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_gbffe );
};if _dada :=_ebcbc .Enable (_dbfee ,extraCerts );_dada !=nil {return _dada ;};};return nil ;};func _fcgb (_ccgbf *_bcg .PdfIndirectObject ,_bdce *_bcg .PdfObjectDictionary )(*DSS ,error ){if _ccgbf ==nil {_ccgbf =_bcg .MakeIndirectObject (nil );};_ccgbf .PdfObject =_bcg .MakeDict ();
_cagg :=map[string ]*VRI {};if _cdgf ,_aeafc :=_bcg .GetDict (_bdce .Get ("\u0056\u0052\u0049"));_aeafc {for _ ,_begf :=range _cdgf .Keys (){if _fcag ,_daceb :=_bcg .GetDict (_cdgf .Get (_begf ));_daceb {_cagg [_ce .ToUpper (_begf .String ())]=_eddc (_fcag );
};};};return &DSS {Certs :_ceaa (_bdce .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_ceaa (_bdce .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_ceaa (_bdce .Get ("\u0043\u0052\u004c\u0073")),VRI :_cagg ,_aeaf :_ccgbf },nil ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_fcec *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// IsShading specifies if the pattern is a shading pattern.
func (_aagfb *PdfPattern )IsShading ()bool {return _aagfb .PatternType ==2};func (_aacfc *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _aacfc ._eadaf .GetCrypter ()!=nil &&!_aacfc ._eadaf .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_ddgbd :=_aacfc ._fdeec ;_abggc :=_ddgbd .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _abggc ==nil {return nil ,nil ;};_gedfg ,_ :=_bcg .GetIndirect (_abggc );_abggc =_bcg .TraceToDirectObject (_abggc );if _bcg .IsNullObject (_abggc ){_dff .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_gbcga ,_degeg :=_bcg .GetDict (_abggc );if !_degeg {_dff .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_abggc );_dff .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_abggc );};_dff .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_dff .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_aacfc ._gdfa {_fgeecf :=_aacfc .traverseObjectData (_gbcga );
if _fgeecf !=nil {_dff .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_fgeecf );
return nil ,_fgeecf ;};};_ffegc ,_feac :=_aacfc .newPdfAcroFormFromDict (_gedfg ,_gbcga );if _feac !=nil {return nil ,_feac ;};return _ffegc ,nil ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_fbbba *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _fbbba ._addea ==nil {_fbbba .GetAnnotations ();};_fbbba ._addea =append (_fbbba ._addea ,annot );};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_fgag *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _bcg .GetNumberAsFloat (_fgag .CapHeight );};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_bcg .PdfObject ,error );};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_eaec :=NewPdfAnnotation ();_bbca :=&PdfAnnotationCircle {};_bbca .PdfAnnotation =_eaec ;_bbca .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eaec .SetContext (_bbca );return _bbca ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_eefbe *PdfPageResources )SetXObjectFormByName (keyName _bcg .PdfObjectName ,xform *XObjectForm )error {_gabec :=xform .ToPdfObject ().(*_bcg .PdfObjectStream );_edbgc :=_eefbe .SetXObjectByName (keyName ,_gabec );return _edbgc ;};func _acag (_ccfcg []byte )bool {if len (_ccfcg )< 4{return true ;
};for _dfeae :=range _ccfcg [:4]{_ggab :=rune (_dfeae );if !_gd .Is (_gd .ASCII_Hex_Digit ,_ggab )&&!_gd .IsSpace (_ggab ){return true ;};};return false ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_bcg .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_fgce *_bcg .PdfIndirectObject ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_fa .DiffResults ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _dd .Time ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};

// ToGoTime returns the date in time.Time format.
func (_aaaaf PdfDate )ToGoTime ()_dd .Time {_abbde :=int (_aaaaf ._agedd *60*60+_aaaaf ._egbge *60);switch _aaaaf ._gacdfg {case '-':_abbde =-_abbde ;case 'Z':_abbde =0;};_fcbb :=_g .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_aaaaf ._gacdfg ,_aaaaf ._agedd ,_aaaaf ._egbge );
_fadag :=_dd .FixedZone (_fcbb ,_abbde );return _dd .Date (int (_aaaaf ._ceaba ),_dd .Month (_aaaaf ._eefgd ),int (_aaaaf ._afgfg ),int (_aaaaf ._dfbda ),int (_aaaaf ._cdce ),int (_aaaaf ._cbaaa ),0,_fadag );};func _bgeag (_fbgfb _bcg .PdfObject )(*PdfColorspaceICCBased ,error ){_dddcg :=&PdfColorspaceICCBased {};
if _fabgdd ,_beae :=_fbgfb .(*_bcg .PdfIndirectObject );_beae {_dddcg ._bbebd =_fabgdd ;};_fbgfb =_bcg .TraceToDirectObject (_fbgfb );_fecf ,_gdbbd :=_fbgfb .(*_bcg .PdfObjectArray );if !_gdbbd {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _fecf .Len ()!=2{return nil ,_g .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_fbgfb =_bcg .TraceToDirectObject (_fecf .Get (0));_dfee ,_gdbbd :=_fbgfb .(*_bcg .PdfObjectName );
if !_gdbbd {return nil ,_g .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_dfee !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_g .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_fbgfb =_fecf .Get (1);_ebfbe ,_gdbbd :=_bcg .GetStream (_fbgfb );if !_gdbbd {_dff .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_fbgfb );
return nil ,_g .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_bagf :=_ebfbe .PdfObjectDictionary ;_gacea ,_gdbbd :=_bagf .Get ("\u004e").(*_bcg .PdfObjectInteger );
if !_gdbbd {return nil ,_g .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_gacea !=1&&*_gacea !=3&&*_gacea !=4{return nil ,_g .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_dddcg .N =int (*_gacea );if _gffe :=_bagf .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_gffe !=nil {_dfbf ,_acccb :=NewPdfColorspaceFromPdfObject (_gffe );if _acccb !=nil {return nil ,_acccb ;};_dddcg .Alternate =_dfbf ;};if _fbde :=_bagf .Get ("\u0052\u0061\u006eg\u0065");
_fbde !=nil {_fbde =_bcg .TraceToDirectObject (_fbde );_cccb ,_adag :=_fbde .(*_bcg .PdfObjectArray );if !_adag {return nil ,_g .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _cccb .Len ()!=2*_dddcg .N {return nil ,_g .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_gbga ,_bddg :=_cccb .GetAsFloat64Slice ();if _bddg !=nil {return nil ,_bddg ;};_dddcg .Range =_gbga ;}else {_dddcg .Range =make ([]float64 ,2*_dddcg .N );for _feda :=0;_feda < _dddcg .N ;_feda ++{_dddcg .Range [2*_feda ]=0.0;_dddcg .Range [2*_feda +1]=1.0;
};};if _gdaea :=_bagf .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_gdaea !=nil {_fage ,_ggbgac :=_gdaea .(*_bcg .PdfObjectStream );if !_ggbgac {return nil ,_g .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_dddcg .Metadata =_fage ;};_gacgf ,_fagd :=_bcg .DecodeStream (_ebfbe );if _fagd !=nil {return nil ,_fagd ;};_dddcg .Data =_gacgf ;_dddcg ._fcde =_ebfbe ;return _dddcg ,nil ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _bcg .PdfObject ;};func (_ffcdg *LTV )getCRLs (_fggec []*_ag .Certificate )([][]byte ,error ){_bddc :=make ([][]byte ,0,len (_fggec ));for _ ,_ddec :=range _fggec {for _ ,_cgea :=range _ddec .CRLDistributionPoints {if _ffcdg .CertClient .IsCA (_ddec ){continue ;
};_aabf ,_cabcb :=_ffcdg .CRLClient .MakeRequest (_cgea ,_ddec );if _cabcb !=nil {_dff .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_cabcb );continue ;
};_bddc =append (_bddc ,_aabf );};};return _bddc ,nil ;};func _dbba (_abcc _bcg .PdfObject ,_cafe *fontCommon )(*_faa .CMap ,error ){_afcf ,_dece :=_bcg .GetStream (_abcc );if !_dece {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_abcc );
return nil ,_bcg .ErrTypeError ;};_adbec ,_gfefb :=_bcg .DecodeStream (_afcf );if _gfefb !=nil {return nil ,_gfefb ;};_bcffb ,_gfefb :=_faa .LoadCmapFromData (_adbec ,!_cafe .isCIDFont ());if _gfefb !=nil {_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_afcf .ObjectNumber ,_gfefb );
};return _bcffb ,_gfefb ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_aacg *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_bcg .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbb ,_fccd :=_bcg .GetNumbersAsFloat (objects );
if _fccd !=nil {return nil ,_fccd ;};return _aacg .ColorFromFloats (_cbb );};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_gfdf :=NewPdfAnnotation ();_cbd :=&PdfAnnotationPopup {};_cbd .PdfAnnotation =_gfdf ;_gfdf .SetContext (_cbd );return _cbd ;};func (_fgfgb *PdfWriter )checkLicense ()error {_cabcf :=_bbd .GetLicenseKey ();
if (_cabcf ==nil ||!_cabcf .IsLicensed ())&&!_fgaab {_g .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");_g .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _bcd .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};func (_fabc *PdfWriter )checkCrossReferenceStream ()bool {_bbfg :=_fabc ._cbdba .Major > 1||(_fabc ._cbdba .Major ==1&&_fabc ._cbdba .Minor > 4);
if _fabc ._gcfceb !=nil {_bbfg =*_fabc ._gcfceb ;};return _bbfg ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_gdgf *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_bcg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cccc ,_dddd :=_bcg .GetNumbersAsFloat (objects );
if _dddd !=nil {return nil ,_dddd ;};return _gdgf .ColorFromFloats (_cccc );};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_badfdc *PdfPageResources )SetXObjectImageByName (keyName _bcg .PdfObjectName ,ximg *XObjectImage )error {_gbfa :=ximg .ToPdfObject ().(*_bcg .PdfObjectStream );_cfbaf :=_badfdc .SetXObjectByName (keyName ,_gbfa );return _cfbaf ;};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_fdaff *PdfSignature )GetDocMDPPermission ()(_fa .DocMDPPermission ,bool ){for _ ,_gabda :=range _fdaff .Reference .Elements (){if _dffba ,_aaegc :=_bcg .GetDict (_gabda );_aaegc {if _bccb ,_dadgba :=_bcg .GetNameVal (_dffba .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_dadgba &&_bccb =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _cedef ,_fgcbc :=_bcg .GetDict (_dffba .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_fgcbc {if P ,_dfggc :=_bcg .GetIntVal (_cedef .Get ("\u0050"));
_dfggc {return _fa .DocMDPPermission (P ),true ;};};};};};return 0,false ;};func (_cggg *PdfReader )newPdfAnnotationTrapNetFromDict (_fgge *_bcg .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_fceb :=PdfAnnotationTrapNet {};return &_fceb ,nil ;};


// ToGoImage converts the unidoc Image to a golang Image structure.
func (_cbcff *Image )ToGoImage ()(_af .Image ,error ){_dff .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_dbfbb ,_bgcbb :=_dca .NewImage (int (_cbcff .Width ),int (_cbcff .Height ),int (_cbcff .BitsPerComponent ),_cbcff .ColorComponents ,_cbcff .Data ,_cbcff ._aagba ,_cbcff ._agagd );
if _bgcbb !=nil {return nil ,_bgcbb ;};return _dbfbb ,nil ;};func (_gcggd *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _gcggd ._faaca };func (_fea *PdfReader )newPdfAnnotationTextFromDict (_egfd *_bcg .PdfObjectDictionary )(*PdfAnnotationText ,error ){_fbcd :=PdfAnnotationText {};
_aeg ,_ceed :=_fea .newPdfAnnotationMarkupFromDict (_egfd );if _ceed !=nil {return nil ,_ceed ;};_fbcd .PdfAnnotationMarkup =_aeg ;_fbcd .Open =_egfd .Get ("\u004f\u0070\u0065\u006e");_fbcd .Name =_egfd .Get ("\u004e\u0061\u006d\u0065");_fbcd .State =_egfd .Get ("\u0053\u0074\u0061t\u0065");
_fbcd .StateModel =_egfd .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_fbcd ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_badf *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func (_aedb *PdfPage )getParentResources ()(*PdfPageResources ,error ){_dcegf :=_aedb .Parent ;for _dcegf !=nil {_fbca ,_gdfbb :=_bcg .GetDict (_dcegf );if !_gdfbb {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");
return nil ,_bcd .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _fbcgd :=_fbca .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_fbcgd !=nil {_daada ,_aadd :=_bcg .GetDict (_fbcgd );
if !_aadd {return nil ,_bcd .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_cgbec ,_egbdf :=NewPdfPageResourcesFromDict (_daada );if _egbdf !=nil {return nil ,_egbdf ;};return _cgbec ,nil ;
};_dcegf =_fbca .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_adff byte )byte ;

// ToPdfObject implements interface PdfModel.
func (_bbdd *PdfAnnotationText )ToPdfObject ()_bcg .PdfObject {_bbdd .PdfAnnotation .ToPdfObject ();_adbf :=_bbdd ._cbe ;_gcfd :=_adbf .PdfObject .(*_bcg .PdfObjectDictionary );if _bbdd .PdfAnnotationMarkup !=nil {_bbdd .PdfAnnotationMarkup .appendToPdfDictionary (_gcfd );
};_gcfd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0054\u0065\u0078\u0074"));_gcfd .SetIfNotNil ("\u004f\u0070\u0065\u006e",_bbdd .Open );_gcfd .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bbdd .Name );_gcfd .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_bbdd .State );
_gcfd .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_bbdd .StateModel );return _adbf ;};func (_cdcgd *PdfWriter )writeObject (_ebcda int ,_dcagb _bcg .PdfObject ){_dff .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_ebcda );
if _gebfcg ,_ecegc :=_dcagb .(*_bcg .PdfIndirectObject );_ecegc {_cdcgd ._caaea [_ebcda ]=crossReference {Type :1,Offset :_cdcgd ._dacb ,Generation :_gebfcg .GenerationNumber };_fdgfc :=_g .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_ebcda );
if _cccad ,_ccdced :=_gebfcg .PdfObject .(*pdfSignDictionary );_ccdced {_cccad ._addab =_cdcgd ._dacb +int64 (len (_fdgfc ));};if _gebfcg .PdfObject ==nil {_dff .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_gebfcg .PdfObject =_bcg .MakeNull ();};_fdgfc +=_gebfcg .PdfObject .WriteString ();_fdgfc +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_cdcgd .writeString (_fdgfc );return ;};if _fcfbd ,_dedf :=_dcagb .(*_bcg .PdfObjectStream );_dedf {_cdcgd ._caaea [_ebcda ]=crossReference {Type :1,Offset :_cdcgd ._dacb ,Generation :_fcfbd .GenerationNumber };
_cdcce :=_g .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_ebcda );_cdcce +=_fcfbd .PdfObjectDictionary .WriteString ();_cdcce +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_cdcgd .writeString (_cdcce );_cdcgd .writeBytes (_fcfbd .Stream );
_cdcgd .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _bcbag ,_baeggg :=_dcagb .(*_bcg .PdfObjectStreams );_baeggg {_cdcgd ._caaea [_ebcda ]=crossReference {Type :1,Offset :_cdcgd ._dacb ,Generation :_bcbag .GenerationNumber };
_egcgf :=_g .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_ebcda );var _ddfb []string ;var _fdadb string ;var _dfadd int64 ;for _bbgea ,_abddea :=range _bcbag .Elements (){_fdffg ,_dgbeg :=_abddea .(*_bcg .PdfIndirectObject );if !_dgbeg {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_ebcda ,_abddea );
continue ;};_ggfde :=_fdffg .PdfObject .WriteString ()+"\u0020";_fdadb =_fdadb +_ggfde ;_ddfb =append (_ddfb ,_g .Sprintf ("\u0025\u0064\u0020%\u0064",_fdffg .ObjectNumber ,_dfadd ));_cdcgd ._caaea [int (_fdffg .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_ebcda ,Index :_bbgea };
_dfadd =_dfadd +int64 (len ([]byte (_ggfde )));};_aacc :=_ce .Join (_ddfb ,"\u0020")+"\u0020";_eadcbd :=_bcg .NewFlateEncoder ();_bbeae :=_eadcbd .MakeStreamDict ();_bbeae .Set (_bcg .PdfObjectName ("\u0054\u0079\u0070\u0065"),_bcg .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_agba :=int64 (_bcbag .Len ());_bbeae .Set (_bcg .PdfObjectName ("\u004e"),_bcg .MakeInteger (_agba ));_cdgdb :=int64 (len (_aacc ));_bbeae .Set (_bcg .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_bcg .MakeInteger (_cdgdb ));_bdfeb ,_ :=_eadcbd .EncodeBytes ([]byte (_aacc +_fdadb ));
_abecd :=int64 (len (_bdfeb ));_bbeae .Set (_bcg .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_bcg .MakeInteger (_abecd ));_egcgf +=_bbeae .WriteString ();_egcgf +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_cdcgd .writeString (_egcgf );
_cdcgd .writeBytes (_bdfeb );_cdcgd .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_cdcgd .writeString (_dcagb .WriteString ());};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _bcg .PdfObject ;Mac _bcg .PdfObject ;Unix _bcg .PdfObject ;NewWindow _bcg .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fbg *PdfActionSound )ToPdfObject ()_bcg .PdfObject {_fbg .PdfAction .ToPdfObject ();_dgaf :=_fbg ._aag ;_fc :=_dgaf .PdfObject .(*_bcg .PdfObjectDictionary );_fc .SetIfNotNil ("\u0053",_bcg .MakeName (string (ActionTypeSound )));_fc .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_fbg .Sound );
_fc .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_fbg .Volume );_fc .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_fbg .Synchronous );_fc .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_fbg .Repeat );_fc .SetIfNotNil ("\u004d\u0069\u0078",_fbg .Mix );
return _dgaf ;};func (_bbccf *PdfWriter )writeAcroFormFields ()error {if _bbccf ._fdbbb ==nil {return nil ;};_dff .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_eccgbb :=_bbccf ._fdbbb .ToPdfObject ();
_dff .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_eccgbb );_bbccf ._gbfg .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_eccgbb );_fgfdce :=_bbccf .addObjects (_eccgbb );if _fgfdce !=nil {return _fgfdce ;
};return nil ;};func (_bdeba *Image )samplesAddPadding (_cabdbe []uint32 )[]uint32 {_dffe :=_dca .BytesPerLine (int (_bdeba .Width ),int (_bdeba .BitsPerComponent ),_bdeba .ColorComponents )*(8/int (_bdeba .BitsPerComponent ));_ggfbf :=_dffe *int (_bdeba .Height );
if len (_cabdbe )==_ggfbf {return _cabdbe ;};_eceb :=make ([]uint32 ,_ggfbf );_gbdgd :=int (_bdeba .Width )*_bdeba .ColorComponents ;for _eceec :=0;_eceec < int (_bdeba .Height );_eceec ++{_edgff :=_eceec *int (_bdeba .Width );_abda :=_eceec *_dffe ;for _cacdd :=0;
_cacdd < _gbdgd ;_cacdd ++{_eceb [_abda +_cacdd ]=_cabdbe [_edgff +_cacdd ];};};return _eceb ;};type pdfFontType0 struct{fontCommon ;_fdbcd *_bcg .PdfIndirectObject ;_eegb _bf .TextEncoder ;Encoding _bcg .PdfObject ;DescendantFont *PdfFont ;_bbbfd *_faa .CMap ;
};func (_edgaa *pdfCIDFontType2 )baseFields ()*fontCommon {return &_edgaa .fontCommon };func _ebefa (_aeee *_bcg .PdfIndirectObject )(*PdfOutline ,error ){_aafeb ,_egage :=_aeee .PdfObject .(*_bcg .PdfObjectDictionary );if !_egage {return nil ,_g .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_adaf :=NewPdfOutline ();if _defea :=_aafeb .Get ("\u0054\u0079\u0070\u0065");_defea !=nil {_dagc ,_cgafb :=_defea .(*_bcg .PdfObjectName );if _cgafb {if *_dagc !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_dff .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_dagc );
};};};if _bgcaa :=_aafeb .Get ("\u0043\u006f\u0075n\u0074");_bgcaa !=nil {_cdcfa ,_gabff :=_bcg .GetNumberAsInt64 (_bgcaa );if _gabff !=nil {return nil ,_gabff ;};_adaf .Count =&_cdcfa ;};return _adaf ,nil ;};func _dfgac ()*modelManager {_fdead :=modelManager {};
_fdead ._dadae =map[PdfModel ]_bcg .PdfObject {};_fdead ._eeadf =map[_bcg .PdfObject ]PdfModel {};return &_fdead ;};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_eeaf *PdfTransformParamsDocMDP )String ()string {return _g .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_eeaf .Type ,_eeaf .P ,_eeaf .V );};func (_abdc PdfFont )actualFont ()pdfFont {if _abdc ._aabbg ==nil {_dff .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_abdc );
};return _abdc ._aabbg ;};func (_efgdf *PdfWriter )optimize ()error {if _efgdf ._cfbgc ==nil {return nil ;};var _agcgf error ;_efgdf ._gbadec ,_agcgf =_efgdf ._cfbgc .Optimize (_efgdf ._gbadec );if _agcgf !=nil {return _agcgf ;};_bbcge :=make (map[_bcg .PdfObject ]struct{},len (_efgdf ._gbadec ));
for _ ,_afedfc :=range _efgdf ._gbadec {_bbcge [_afedfc ]=struct{}{};};_efgdf ._degdg =_bbcge ;return nil ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_ggacd *PdfPattern )GetContainingPdfObject ()_bcg .PdfObject {return _ggacd ._afcbe };var _ pdfFont =(*pdfFontSimple )(nil );func (_bcddg *pdfFontType0 )bytesToCharcodes (_bedc []byte )([]_bf .CharCode ,bool ){if _bcddg ._bbbfd ==nil {return nil ,false ;
};_eaffc ,_adcfb :=_bcddg ._bbbfd .BytesToCharcodes (_bedc );if !_adcfb {return nil ,false ;};_abacd :=make ([]_bf .CharCode ,len (_eaffc ));for _gffb ,_dfeb :=range _eaffc {_abacd [_gffb ]=_bf .CharCode (_dfeb );};return _abacd ,true ;};func (_geeec *PdfReader )newPdfFieldFromIndirectObject (_bbdc *_bcg .PdfIndirectObject ,_bdbfab *PdfField )(*PdfField ,error ){if _fgaf ,_accd :=_geeec ._abgg .GetModelFromPrimitive (_bbdc ).(*PdfField );
_accd {return _fgaf ,nil ;};_abge ,_bdbda :=_bcg .GetDict (_bbdc );if !_bdbda {return nil ,_g .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bgab :=NewPdfField ();_bgab ._bddgb =_bbdc ;_bgab ._bddgb .PdfObject =_abge ;if _badb ,_geda :=_bcg .GetName (_abge .Get ("\u0046\u0054"));_geda {_bgab .FT =_badb ;};if _bdbfab !=nil {_bgab .Parent =_bdbfab ;};_bgab .T ,_ =_abge .Get ("\u0054").(*_bcg .PdfObjectString );
_bgab .TU ,_ =_abge .Get ("\u0054\u0055").(*_bcg .PdfObjectString );_bgab .TM ,_ =_abge .Get ("\u0054\u004d").(*_bcg .PdfObjectString );_bgab .Ff ,_ =_abge .Get ("\u0046\u0066").(*_bcg .PdfObjectInteger );_bgab .V =_abge .Get ("\u0056");_bgab .DV =_abge .Get ("\u0044\u0056");
_bgab .AA =_abge .Get ("\u0041\u0041");if DA :=_abge .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_bcg .GetString (DA );_bgab .VariableText =&VariableText {DA :DA };Q ,_ :=_abge .Get ("\u0051").(*_bcg .PdfObjectInteger );DS ,_ :=_abge .Get ("\u0044\u0053").(*_bcg .PdfObjectString );
RV :=_abge .Get ("\u0052\u0056");_bgab .VariableText .Q =Q ;_bgab .VariableText .DS =DS ;_bgab .VariableText .RV =RV ;};_gfca :=_bgab .FT ;if _gfca ==nil &&_bdbfab !=nil {_gfca =_bdbfab .FT ;};if _gfca !=nil {switch *_gfca {case "\u0054\u0078":_bceeb ,_bebb :=_gdef (_abge );
if _bebb !=nil {return nil ,_bebb ;};_bceeb .PdfField =_bgab ;_bgab ._bage =_bceeb ;case "\u0043\u0068":_cdec ,_cdfc :=_bafg (_abge );if _cdfc !=nil {return nil ,_cdfc ;};_cdec .PdfField =_bgab ;_bgab ._bage =_cdec ;case "\u0042\u0074\u006e":_beefb ,_bbcea :=_gdabd (_abge );
if _bbcea !=nil {return nil ,_bbcea ;};_beefb .PdfField =_bgab ;_bgab ._bage =_beefb ;case "\u0053\u0069\u0067":_ccbc ,_aacd :=_geeec .newPdfFieldSignatureFromDict (_abge );if _aacd !=nil {return nil ,_aacd ;};_ccbc .PdfField =_bgab ;_bgab ._bage =_ccbc ;
default:_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_bgab .FT );return nil ,_bcd .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _eebb ,_feec :=_bcg .GetName (_abge .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_feec {if *_eebb =="\u0057\u0069\u0064\u0067\u0065\u0074"{_dcgd ,_ddfcef :=_geeec .newPdfAnnotationFromIndirectObject (_bbdc );if _ddfcef !=nil {return nil ,_ddfcef ;
};_dacabb ,_ffbd :=_dcgd .GetContext ().(*PdfAnnotationWidget );if !_ffbd {return nil ,_bcd .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_dacabb ._dggf =_bgab ;_dacabb .Parent =_bgab ._bddgb ;
_bgab .Annotations =append (_bgab .Annotations ,_dacabb );return _bgab ,nil ;};};_cdad :=true ;if _aaba ,_aeea :=_bcg .GetArray (_abge .Get ("\u004b\u0069\u0064\u0073"));_aeea {_gbde :=make ([]*_bcg .PdfIndirectObject ,0,_aaba .Len ());for _ ,_dbgf :=range _aaba .Elements (){_fcgbb ,_fdaf :=_bcg .GetIndirect (_dbgf );
if !_fdaf {_bbdcg ,_cddf :=_bcg .GetStream (_dbgf );if _cddf &&_bbdcg .PdfObjectDictionary !=nil {_cdffg ,_fff :=_bcg .GetNameVal (_bbdcg .Get ("\u0054\u0079\u0070\u0065"));if _fff &&_cdffg =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_dff .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_bcd .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_baafb ,_fbed :=_bcg .GetDict (_fcgbb );
if !_fbed {return nil ,ErrTypeCheck ;};if _cdad {_cdad =!_bcfgf (_baafb );};_gbde =append (_gbde ,_fcgbb );};for _ ,_gebgb :=range _gbde {if _cdad {_aedd ,_baefd :=_geeec .newPdfAnnotationFromIndirectObject (_gebgb );if _baefd !=nil {_dff .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_baefd );
return nil ,_baefd ;};_dfdb ,_dadb :=_aedd ._cge .(*PdfAnnotationWidget );if !_dadb {return nil ,ErrTypeCheck ;};_dfdb ._dggf =_bgab ;_bgab .Annotations =append (_bgab .Annotations ,_dfdb );}else {_adbe ,_efgda :=_geeec .newPdfFieldFromIndirectObject (_gebgb ,_bgab );
if _efgda !=nil {_dff .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_efgda );return nil ,_efgda ;};_bgab .Kids =append (_bgab .Kids ,_adbe );
};};};return _bgab ,nil ;};

// SetAlpha sets the alpha layer for the image.
func (_dffff *Image )SetAlpha (alpha []byte ){_dffff ._aagba =alpha };

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_aabbg pdfFont };func (_gdea *PdfReader )newPdfActionGotoRFromDict (_cdd *_bcg .PdfObjectDictionary )(*PdfActionGoToR ,error ){_ccd ,_fgb :=_bab (_cdd .Get ("\u0046"));if _fgb !=nil {return nil ,_fgb ;};return &PdfActionGoToR {D :_cdd .Get ("\u0044"),NewWindow :_cdd .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_ccd },nil ;
};

// SetForms sets the Acroform for a PDF file.
func (_dbgca *PdfWriter )SetForms (form *PdfAcroForm )error {_dbgca ._fdbbb =form ;return nil };

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_cgafc *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cgafc .AlternateSpace ==nil {return nil ,_bcd .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _cgafc .AlternateSpace .ColorToRGB (color );};

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _bcg .PdfObject ;T3DV _bcg .PdfObject ;T3DA _bcg .PdfObject ;T3DI _bcg .PdfObject ;T3DB _bcg .PdfObject ;};func (_egfc *DSS )addCerts (_ccdf [][]byte )([]*_bcg .PdfObjectStream ,error ){return _egfc .add (&_egfc .Certs ,_egfc ._dfgb ,_ccdf );
};func _cgfeb (_acdd _bcg .PdfObject )(map[_bf .CharCode ]float64 ,error ){if _acdd ==nil {return nil ,nil ;};_abed ,_badce :=_bcg .GetArray (_acdd );if !_badce {return nil ,nil ;};_ebcf :=map[_bf .CharCode ]float64 {};_dceab :=_abed .Len ();for _gaaab :=0;
_gaaab < _dceab -1;_gaaab ++{_bacdd :=_bcg .TraceToDirectObject (_abed .Get (_gaaab ));_eeec ,_dfeec :=_bcg .GetIntVal (_bacdd );if !_dfeec {return nil ,_g .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_gaaab ,_bacdd );
};_gaaab ++;if _gaaab > _dceab -1{return nil ,_g .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_abed );};_gbceb :=_bcg .TraceToDirectObject (_abed .Get (_gaaab ));
switch _gbceb .(type ){case *_bcg .PdfObjectArray :_gfea ,_ :=_bcg .GetArray (_gbceb );if _fdbg ,_efge :=_gfea .ToFloat64Array ();_efge ==nil {for _geecf :=0;_geecf < len (_fdbg );_geecf ++{_ebcf [_bf .CharCode (_eeec +_geecf )]=_fdbg [_geecf ];};}else {return nil ,_g .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_gaaab ,_gbceb );
};case *_bcg .PdfObjectInteger :_dcfe ,_abfa :=_bcg .GetIntVal (_gbceb );if !_abfa {return nil ,_g .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_gaaab ,_gbceb );
};_gaaab ++;if _gaaab > _dceab -1{return nil ,_g .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_abed );};_fffb :=_abed .Get (_gaaab );_bgfc ,_bbge :=_bcg .GetNumberAsFloat (_fffb );
if _bbge !=nil {return nil ,_g .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_gaaab ,_fffb );};for _feeae :=_eeec ;_feeae <=_dcfe ;
_feeae ++{_ebcf [_bf .CharCode (_feeae )]=_bgfc ;};default:return nil ,_g .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_gaaab ,_gbceb );
};};return _ebcf ,nil ;};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_ebaa :=map[rune ]int {};for _ ,_agcaf :=range text {_ebaa [_agcaf ]++;};return _ebaa ;};func (_abb *PdfReader )newPdfActionHideFromDict (_bgf *_bcg .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_bgf .Get ("\u0054"),H :_bgf .Get ("\u0048")},nil ;
};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _bcg .StreamEncoder ;Intent _bcg .PdfObject ;ImageMask _bcg .PdfObject ;Mask _bcg .PdfObject ;Matte _bcg .PdfObject ;Decode _bcg .PdfObject ;Interpolate _bcg .PdfObject ;
Alternatives _bcg .PdfObject ;SMask _bcg .PdfObject ;SMaskInData _bcg .PdfObject ;Name _bcg .PdfObject ;StructParent _bcg .PdfObject ;ID _bcg .PdfObject ;OPI _bcg .PdfObject ;Metadata _bcg .PdfObject ;OC _bcg .PdfObject ;Stream []byte ;_adbae *_bcg .PdfObjectStream ;
};

// ToPdfObject returns the PDF representation of the function.
func (_fgbaa *PdfFunctionType0 )ToPdfObject ()_bcg .PdfObject {if _fgbaa ._bcfad ==nil {_fgbaa ._bcfad =&_bcg .PdfObjectStream {};};_cceb :=_bcg .MakeDict ();_cceb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bcg .MakeInteger (0));
_cgbb :=&_bcg .PdfObjectArray {};for _ ,_acecg :=range _fgbaa .Domain {_cgbb .Append (_bcg .MakeFloat (_acecg ));};_cceb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cgbb );_aggfg :=&_bcg .PdfObjectArray {};for _ ,_dgbef :=range _fgbaa .Range {_aggfg .Append (_bcg .MakeFloat (_dgbef ));
};_cceb .Set ("\u0052\u0061\u006eg\u0065",_aggfg );_ebdcb :=&_bcg .PdfObjectArray {};for _ ,_cdbc :=range _fgbaa .Size {_ebdcb .Append (_bcg .MakeInteger (int64 (_cdbc )));};_cceb .Set ("\u0053\u0069\u007a\u0065",_ebdcb );_cceb .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_bcg .MakeInteger (int64 (_fgbaa .BitsPerSample )));
if _fgbaa .Order !=1{_cceb .Set ("\u004f\u0072\u0064e\u0072",_bcg .MakeInteger (int64 (_fgbaa .Order )));};_cceb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bcg .MakeInteger (int64 (len (_fgbaa ._fbbdd ))));_fgbaa ._bcfad .Stream =_fgbaa ._fbbdd ;_fgbaa ._bcfad .PdfObjectDictionary =_cceb ;
return _fgbaa ._bcfad ;};func _bdfff ()string {_dgea .Lock ();defer _dgea .Unlock ();return _ebdf };var ImageHandling ImageHandler =DefaultImageHandler {};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_dgd :=NewPdfAction ();_da :=&PdfActionGoToE {};_da .PdfAction =_dgd ;_dgd .SetContext (_da );return _da ;};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _bcg .PdfObjectArray )(*PdfRectangle ,error ){_ecbga :=PdfRectangle {};if arr .Len ()!=4{return nil ,_bcd .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _cafea error ;_ecbga .Llx ,_cafea =_bcg .GetNumberAsFloat (arr .Get (0));if _cafea !=nil {return nil ,_cafea ;};_ecbga .Lly ,_cafea =_bcg .GetNumberAsFloat (arr .Get (1));if _cafea !=nil {return nil ,_cafea ;};_ecbga .Urx ,_cafea =_bcg .GetNumberAsFloat (arr .Get (2));
if _cafea !=nil {return nil ,_cafea ;};_ecbga .Ury ,_cafea =_bcg .GetNumberAsFloat (arr .Get (3));if _cafea !=nil {return nil ,_cafea ;};return &_ecbga ,nil ;};

// L returns the value of the L component of the color.
func (_acba *PdfColorLab )L ()float64 {return _acba [0]};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_efga *PdfColorspaceCalRGB )ToPdfObject ()_bcg .PdfObject {_afcdc :=&_bcg .PdfObjectArray {};_afcdc .Append (_bcg .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_abbc :=_bcg .MakeDict ();if _efga .WhitePoint !=nil {_adeb :=_bcg .MakeArray (_bcg .MakeFloat (_efga .WhitePoint [0]),_bcg .MakeFloat (_efga .WhitePoint [1]),_bcg .MakeFloat (_efga .WhitePoint [2]));
_abbc .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_adeb );}else {_dff .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _efga .BlackPoint !=nil {_fgeg :=_bcg .MakeArray (_bcg .MakeFloat (_efga .BlackPoint [0]),_bcg .MakeFloat (_efga .BlackPoint [1]),_bcg .MakeFloat (_efga .BlackPoint [2]));_abbc .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_fgeg );
};if _efga .Gamma !=nil {_bfac :=_bcg .MakeArray (_bcg .MakeFloat (_efga .Gamma [0]),_bcg .MakeFloat (_efga .Gamma [1]),_bcg .MakeFloat (_efga .Gamma [2]));_abbc .Set ("\u0047\u0061\u006dm\u0061",_bfac );};if _efga .Matrix !=nil {_fgdg :=_bcg .MakeArray (_bcg .MakeFloat (_efga .Matrix [0]),_bcg .MakeFloat (_efga .Matrix [1]),_bcg .MakeFloat (_efga .Matrix [2]),_bcg .MakeFloat (_efga .Matrix [3]),_bcg .MakeFloat (_efga .Matrix [4]),_bcg .MakeFloat (_efga .Matrix [5]),_bcg .MakeFloat (_efga .Matrix [6]),_bcg .MakeFloat (_efga .Matrix [7]),_bcg .MakeFloat (_efga .Matrix [8]));
_abbc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fgdg );};_afcdc .Append (_abbc );if _efga ._bbdfd !=nil {_efga ._bbdfd .PdfObject =_afcdc ;return _efga ._bbdfd ;};return _afcdc ;};

// ToPdfObject implements interface PdfModel.
func (_daa *PdfAnnotationPopup )ToPdfObject ()_bcg .PdfObject {_daa .PdfAnnotation .ToPdfObject ();_fecc :=_daa ._cbe ;_fagg :=_fecc .PdfObject .(*_bcg .PdfObjectDictionary );_fagg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0050\u006f\u0070u\u0070"));
_fagg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_daa .Parent );_fagg .SetIfNotNil ("\u004f\u0070\u0065\u006e",_daa .Open );return _fecc ;};func (_gbgbg *PdfWriter )updateObjectNumbers (){_bagac :=_gbgbg .ObjNumOffset ;_fggf :=0;for _ ,_gdcf :=range _gbgbg ._gbadec {_agfdb :=int64 (_fggf +1+_bagac );
_decba :=true ;if _gbgbg ._gaggd {if _abagb ,_fbcgf :=_gbgbg ._ebcg [_gdcf ];_fbcgf {_agfdb =_abagb ;_decba =false ;};};switch _eddaf :=_gdcf .(type ){case *_bcg .PdfIndirectObject :_eddaf .ObjectNumber =_agfdb ;_eddaf .GenerationNumber =0;case *_bcg .PdfObjectStream :_eddaf .ObjectNumber =_agfdb ;
_eddaf .GenerationNumber =0;case *_bcg .PdfObjectStreams :_eddaf .ObjectNumber =_agfdb ;_eddaf .GenerationNumber =0;default:_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_eddaf );
continue ;};if _decba {_fggf ++;};};_deccf :=func (_bdeaa _bcg .PdfObject )int64 {switch _eaebea :=_bdeaa .(type ){case *_bcg .PdfIndirectObject :return _eaebea .ObjectNumber ;case *_bcg .PdfObjectStream :return _eaebea .ObjectNumber ;case *_bcg .PdfObjectStreams :return _eaebea .ObjectNumber ;
};return 0;};_bd .SliceStable (_gbgbg ._gbadec ,func (_gdfdc ,_ddcbbd int )bool {return _deccf (_gbgbg ._gbadec [_gdfdc ])< _deccf (_gbgbg ._gbadec [_ddcbbd ]);});};

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_bcg .PdfObjectString ;Q *_bcg .PdfObjectInteger ;DS *_bcg .PdfObjectString ;RV _bcg .PdfObject ;};

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_aceee *PdfFieldButton )SetType (btype ButtonType ){_eagd :=uint32 (0);if _aceee .Ff !=nil {_eagd =uint32 (*_aceee .Ff );};switch btype {case ButtonTypePush :_eagd |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_eagd |=FieldFlagRadio .Mask ();
};_aceee .Ff =_bcg .MakeInteger (int64 (_eagd ));};

// AddWatermarkImage adds a watermark to the page.
func (_fgedf *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_efcfc ,_edgfa :=_fgedf .GetMediaBox ();if _edgfa !=nil {return _edgfa ;};_bcbdd :=_efcfc .Urx -_efcfc .Llx ;_caga :=_efcfc .Ury -_efcfc .Lly ;_faceg :=float64 (*ximg .Width );
_gdfd :=(_bcbdd -_faceg )/2;if opt .FitToWidth {_faceg =_bcbdd ;_gdfd =0;};_bbgb :=_caga ;_cfabd :=float64 (0);if opt .PreserveAspectRatio {_bbgb =_faceg *float64 (*ximg .Height )/float64 (*ximg .Width );_cfabd =(_caga -_bbgb )/2;};if _fgedf .Resources ==nil {_fgedf .Resources =NewPdfPageResources ();
};_gbaba :=0;_gccag :=_bcg .PdfObjectName (_g .Sprintf ("\u0049\u006d\u0077%\u0064",_gbaba ));for _fgedf .Resources .HasXObjectByName (_gccag ){_gbaba ++;_gccag =_bcg .PdfObjectName (_g .Sprintf ("\u0049\u006d\u0077%\u0064",_gbaba ));};_edgfa =_fgedf .AddImageResource (_gccag ,ximg );
if _edgfa !=nil {return _edgfa ;};_gbaba =0;_eaabc :=_bcg .PdfObjectName (_g .Sprintf ("\u0047\u0053\u0025\u0064",_gbaba ));for _fgedf .HasExtGState (_eaabc ){_gbaba ++;_eaabc =_bcg .PdfObjectName (_g .Sprintf ("\u0047\u0053\u0025\u0064",_gbaba ));};_eecfc :=_bcg .MakeDict ();
_eecfc .Set ("\u0042\u004d",_bcg .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_eecfc .Set ("\u0043\u0041",_bcg .MakeFloat (opt .Alpha ));_eecfc .Set ("\u0063\u0061",_bcg .MakeFloat (opt .Alpha ));_edgfa =_fgedf .AddExtGState (_eaabc ,_eecfc );if _edgfa !=nil {return _edgfa ;
};_dcdaa :=_g .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_eaabc ,_faceg ,_bbgb ,_gdfd ,_cfabd ,_gccag );
_fgedf .AddContentStreamByString (_dcdaa );return nil ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );func _efbe (_cbafc []*_bcg .PdfObjectStream )*_bcg .PdfObjectArray {if len (_cbafc )==0{return nil ;};_fgbgg :=make ([]_bcg .PdfObject ,0,len (_cbafc ));for _ ,_acffb :=range _cbafc {_fgbgg =append (_fgbgg ,_acffb );
};return _bcg .MakeArray (_fgbgg ...);};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_egac pdfCIDFontType2 )GetRuneMetrics (r rune )(_dgb .CharMetrics ,bool ){_gafge ,_bfcga :=_egac ._caaed [r ];if !_bfcga {_ebde ,_afdb :=_bcg .GetInt (_egac .DW );if !_afdb {return _dgb .CharMetrics {},false ;};_gafge =int (*_ebde );};return _dgb .CharMetrics {Wx :float64 (_gafge )},true ;
};func (_acfd *PdfReader )newPdfAnnotationCaretFromDict (_gcb *_bcg .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_dcdg :=PdfAnnotationCaret {};_fdea ,_cce :=_acfd .newPdfAnnotationMarkupFromDict (_gcb );if _cce !=nil {return nil ,_cce ;};_dcdg .PdfAnnotationMarkup =_fdea ;
_dcdg .RD =_gcb .Get ("\u0052\u0044");_dcdg .Sy =_gcb .Get ("\u0053\u0079");return &_dcdg ,nil ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_cfaf *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_bcg .StreamEncoder ,error ){_cfbde ,_gaecb :=_cfaf ._afcbe .(*_bcg .PdfObjectStream );if !_gaecb {_dff .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cfaf ._afcbe );
return nil ,nil ,_bcg .ErrTypeError ;};_fffe ,_fdbf :=_bcg .DecodeStream (_cfbde );if _fdbf !=nil {_dff .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_fdbf );
return nil ,nil ,_fdbf ;};_dggac ,_fdbf :=_bcg .NewEncoderFromStream (_cfbde );if _fdbf !=nil {_dff .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_fdbf );
return nil ,nil ,_fdbf ;};return _fffe ,_dggac ,nil ;};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};func _cgdga (_ebfdc _bcg .PdfObject )(*PdfPattern ,error ){_bcddd :=&PdfPattern {};var _bcaec *_bcg .PdfObjectDictionary ;if _aebfa ,_gggca :=_bcg .GetIndirect (_ebfdc );_gggca {_bcddd ._afcbe =_aebfa ;
_ffbcb ,_fdbdg :=_aebfa .PdfObject .(*_bcg .PdfObjectDictionary );if !_fdbdg {_dff .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_aebfa .PdfObject );
return nil ,_bcg .ErrTypeError ;};_bcaec =_ffbcb ;}else if _adba ,_beeffd :=_bcg .GetStream (_ebfdc );_beeffd {_bcddd ._afcbe =_adba ;_bcaec =_adba .PdfObjectDictionary ;}else {_dff .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_ebfdc );
return nil ,_bcg .ErrTypeError ;};_gfcba :=_bcaec .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _gfcba ==nil {_dff .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_adfe ,_aaebe :=_gfcba .(*_bcg .PdfObjectInteger );if !_aaebe {_dff .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gfcba );
return nil ,_bcg .ErrTypeError ;};if *_adfe !=1&&*_adfe !=2{_dff .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_adfe );return nil ,_bcg .ErrRangeError ;
};_bcddd .PatternType =int64 (*_adfe );switch *_adfe {case 1:_cafcf ,_fcabd :=_ddbg (_bcaec );if _fcabd !=nil {return nil ,_fcabd ;};_cafcf .PdfPattern =_bcddd ;_bcddd ._cfbc =_cafcf ;return _bcddd ,nil ;case 2:_bbcg ,_bcefc :=_bgef (_bcaec );if _bcefc !=nil {return nil ,_bcefc ;
};_bbcg .PdfPattern =_bcddd ;_bcddd ._cfbc =_bbcg ;return _bcddd ,nil ;};return nil ,_bcd .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_bf .SimpleEncoder ,error ){_effc ,_fbcgc :=_bbbc (basefont );if _fbcgc !=nil {return nil ,nil ,_fbcgc ;};_dcgc ,_dcdd :=_effc .Encoder ().(_bf .SimpleEncoder );
if !_dcdd {return nil ,nil ,_g .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_effc .Encoder ());
};_ddbc :=make (map[rune ]_bf .GlyphName );for _edgg :=range alphabet {if _ ,_faggg :=_dcgc .RuneToCharcode (_edgg );!_faggg {_ ,_bcda :=_effc ._fdbcdc .Read (_edgg );if !_bcda {_dff .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_edgg ,_edgg );
continue ;};_abbb ,_bcda :=_bf .RuneToGlyph (_edgg );if !_bcda {_dff .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_edgg ,_edgg );continue ;};if len (_ddbc )>=255{return nil ,nil ,_bcd .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_ddbc [_edgg ]=_abbb ;};};var (_bdeg []_bf .CharCode ;_bbafec []_bf .CharCode ;);for _dbfe :=_bf .CharCode (1);_dbfe <=0xff;_dbfe ++{_egeg ,_cecca :=_dcgc .CharcodeToRune (_dbfe );if !_cecca {_bdeg =append (_bdeg ,_dbfe );continue ;};if _ ,_cecca =alphabet [_egeg ];
!_cecca {_bbafec =append (_bbafec ,_dbfe );};};_dfefbb :=append (_bdeg ,_bbafec ...);if len (_dfefbb )< len (_ddbc ){return nil ,nil ,_g .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_ddbc ),len (_dfefbb ));
};_ddab :=make ([]rune ,0,len (_ddbc ));for _acge :=range _ddbc {_ddab =append (_ddab ,_acge );};_bd .Slice (_ddab ,func (_abac ,_gddd int )bool {return _ddab [_abac ]< _ddab [_gddd ]});_fgfe :=make (map[_bf .CharCode ]_bf .GlyphName ,len (_ddab ));for _ ,_gbad :=range _ddab {_fdee :=_dfefbb [0];
_dfefbb =_dfefbb [1:];_fgfe [_fdee ]=_ddbc [_gbad ];};_dcgc =_bf .ApplyDifferences (_dcgc ,_fgfe );_effc .SetEncoder (_dcgc );return &PdfFont {_aabbg :&_effc },_dcgc ,nil ;};func (_edeag *PdfWriter )mapObjectStreams (_faaeg bool )(map[_bcg .PdfObject ]bool ,bool ){_acgbd :=make (map[_bcg .PdfObject ]bool );
for _ ,_cdaea :=range _edeag ._gbadec {if _acbfa ,_fdcfd :=_cdaea .(*_bcg .PdfObjectStreams );_fdcfd {_faaeg =true ;for _ ,_fddf :=range _acbfa .Elements (){_acgbd [_fddf ]=true ;if _ccbce ,_ebcff :=_fddf .(*_bcg .PdfIndirectObject );_ebcff {_acgbd [_ccbce .PdfObject ]=true ;
};};};};return _acgbd ,_faaeg ;};

// WriteString outputs the object as it is to be written to file.
func (_fbgga *pdfSignDictionary )WriteString ()string {_fbgga ._ecbfc =0;_fbgga ._cdadd =0;_fbgga ._dgabe =0;_fbgga ._feffa =0;_gfaac :=_gg .NewBuffer (nil );_gfaac .WriteString ("\u003c\u003c");for _ ,_ggfd :=range _fbgga .Keys (){_efeec :=_fbgga .Get (_ggfd );
switch _ggfd {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_gfaac .WriteString (_ggfd .WriteString ());_gfaac .WriteString ("\u0020");_fbgga ._dgabe =_gfaac .Len ();_gfaac .WriteString (_efeec .WriteString ());_gfaac .WriteString ("\u0020");_fbgga ._feffa =_gfaac .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_gfaac .WriteString (_ggfd .WriteString ());_gfaac .WriteString ("\u0020");_fbgga ._ecbfc =_gfaac .Len ();_gfaac .WriteString (_efeec .WriteString ());_gfaac .WriteString ("\u0020");_fbgga ._cdadd =_gfaac .Len ()-1;
default:_gfaac .WriteString (_ggfd .WriteString ());_gfaac .WriteString ("\u0020");_gfaac .WriteString (_efeec .WriteString ());};};_gfaac .WriteString ("\u003e\u003e");return _gfaac .String ();};func (_fadc *PdfReader )newPdfAnnotationWidgetFromDict (_ddf *_bcg .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_ddff :=PdfAnnotationWidget {};
_ddff .H =_ddf .Get ("\u0048");_ddff .MK =_ddf .Get ("\u004d\u004b");_ddff .A =_ddf .Get ("\u0041");_ddff .AA =_ddf .Get ("\u0041\u0041");_ddff .BS =_ddf .Get ("\u0042\u0053");_ddff .Parent =_ddf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_ddff ,nil ;
};func _eadcf (_bdbdgd []byte )[]byte {const _ccfc =52845;const _bcbg =22719;_cfba :=55665;for _ ,_ddbaa :=range _bdbdgd [:4]{_cfba =(int (_ddbaa )+_cfba )*_ccfc +_bcbg ;};_aedff :=make ([]byte ,len (_bdbdgd )-4);for _egab ,_ddafc :=range _bdbdgd [4:]{_aedff [_egab ]=byte (int (_ddafc )^_cfba >>8);
_cfba =(int (_ddafc )+_cfba )*_ccfc +_bcbg ;};return _aedff ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_feecf *PdfReader )GetPageLabels ()(_bcg .PdfObject ,error ){_bdfc :=_bcg .ResolveReference (_feecf ._fdeec .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _bdfc ==nil {return nil ,nil ;};if !_feecf ._gdfa {_aaddb :=_feecf .traverseObjectData (_bdfc );
if _aaddb !=nil {return nil ,_aaddb ;};};return _bdfc ,nil ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_baea *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_dff .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_bcd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_dccec _bcg .PdfObject ;};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_dag :=NewPdfAnnotation ();_fgcf :=&PdfAnnotationTrapNet {};_fgcf .PdfAnnotation =_dag ;_dag .SetContext (_fgcf );return _fgcf ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_geca :=NewPdfAnnotation ();_fee :=&PdfAnnotationText {};_fee .PdfAnnotation =_geca ;_fee .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_geca .SetContext (_fee );return _fee ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bcg .PdfObject ;IC _bcg .PdfObject ;BE _bcg .PdfObject ;RD _bcg .PdfObject ;};func (_cdgdbf *PdfWriter )getPdfVersion ()string {return _g .Sprintf ("\u0025\u0064\u002e%\u0064",_cdgdbf ._cbdba .Major ,_cdgdbf ._cbdba .Minor );
};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_ebegd *PdfColorspaceLab )DecodeArray ()[]float64 {_ecfa :=[]float64 {0,100};if _ebegd .Range !=nil &&len (_ebegd .Range )==4{_ecfa =append (_ecfa ,_ebegd .Range ...);}else {_ecfa =append (_ecfa ,-100,100,-100,100);};return _ecfa ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_gdaaf *PdfPattern )GetContext ()PdfModel {return _gdaaf ._cfbc };

// Initialize initializes the PdfSignature.
func (_ebfbge *PdfSignature )Initialize ()error {if _ebfbge .Handler ==nil {return _bcd .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _ebfbge .Handler .InitSignature (_ebfbge );};

// GetTrailer returns the PDF's trailer dictionary.
func (_bbae *PdfReader )GetTrailer ()(*_bcg .PdfObjectDictionary ,error ){_egff :=_bbae ._eadaf .GetTrailer ();if _egff ==nil {return nil ,_bcd .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _egff ,nil ;
};

// ToPdfObject implements interface PdfModel.
func (_ggcg *PdfAnnotationRichMedia )ToPdfObject ()_bcg .PdfObject {_ggcg .PdfAnnotation .ToPdfObject ();_egbg :=_ggcg ._cbe ;_efc :=_egbg .PdfObject .(*_bcg .PdfObjectDictionary );_efc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_efc .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_ggcg .RichMediaSettings );_efc .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_ggcg .RichMediaContent );
return _egbg ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_bcg .PdfObjectStream )(*XObjectForm ,error ){_ageb :=&XObjectForm {};_ageb ._afdee =stream ;_gfcca :=*(stream .PdfObjectDictionary );_cffcc ,_ddbcb :=_bcg .NewEncoderFromStream (stream );if _ddbcb !=nil {return nil ,_ddbcb ;
};_ageb .Filter =_cffcc ;if _bgcd :=_gfcca .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_bgcd !=nil {_fabcb ,_acfeb :=_bgcd .(*_bcg .PdfObjectName );if !_acfeb {return nil ,_bcd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};
if *_fabcb !="\u0046\u006f\u0072\u006d"{_dff .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_bcd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _gdbac :=_gfcca .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_gdbac !=nil {_ageb .FormType =_gdbac ;};if _dfddd :=_gfcca .Get ("\u0042\u0042\u006f\u0078");_dfddd !=nil {_ageb .BBox =_dfddd ;};if _agdce :=_gfcca .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_agdce !=nil {_ageb .Matrix =_agdce ;};if _addga :=_gfcca .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_addga !=nil {_addga =_bcg .TraceToDirectObject (_addga );_fdgb ,_bbada :=_addga .(*_bcg .PdfObjectDictionary );if !_bbada {_dff .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_bcg .ErrTypeError ;};_adgbcd ,_bbcgde :=NewPdfPageResourcesFromDict (_fdgb );if _bbcgde !=nil {_dff .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_bbcgde ;};_ageb .Resources =_adgbcd ;_dff .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_ageb .Resources );};_ageb .Group =_gfcca .Get ("\u0047\u0072\u006fu\u0070");
_ageb .Ref =_gfcca .Get ("\u0052\u0065\u0066");_ageb .MetaData =_gfcca .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_ageb .PieceInfo =_gfcca .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_ageb .LastModified =_gfcca .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_ageb .StructParent =_gfcca .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_ageb .StructParents =_gfcca .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_ageb .OPI =_gfcca .Get ("\u004f\u0050\u0049");
_ageb .OC =_gfcca .Get ("\u004f\u0043");_ageb .Name =_gfcca .Get ("\u004e\u0061\u006d\u0065");_ageb .Stream =stream .Stream ;return _ageb ,nil ;};

// IsSimple returns true if `font` is a simple font.
func (_cecec *PdfFont )IsSimple ()bool {_ ,_bfcgc :=_cecec ._aabbg .(*pdfFontSimple );return _bfcgc };

// Items returns all children outline items.
func (_fgbcd *OutlineItem )Items ()[]*OutlineItem {return _fgbcd .Entries };

// GetNumComponents returns the number of color components.
func (_fgdb *PdfColorspaceICCBased )GetNumComponents ()int {return _fgdb .N };

// ToPdfObject implements interface PdfModel.
func (_cece *PdfAnnotationHighlight )ToPdfObject ()_bcg .PdfObject {_cece .PdfAnnotation .ToPdfObject ();_fcad :=_cece ._cbe ;_ffed :=_fcad .PdfObject .(*_bcg .PdfObjectDictionary );_cece .PdfAnnotationMarkup .appendToPdfDictionary (_ffed );_ffed .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_ffed .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cece .QuadPoints );return _fcad ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_cde :=NewPdfAnnotation ();_deb :=&PdfAnnotationStamp {};_deb .PdfAnnotation =_cde ;_deb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cde .SetContext (_deb );return _deb ;};func (_cdada fontCommon )isCIDFont ()bool {if _cdada ._cfeef ==""{_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cdada );
};_ebfbgc :=false ;switch _cdada ._cfeef {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_ebfbgc =true ;};_dff .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_ebfbgc ,_cdada );
return _ebfbgc ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_bdca *PdfFont )BytesToCharcodes (data []byte )[]_bf .CharCode {_dff .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _ddeb ,_edgde :=_bdca ._aabbg .(*pdfFontType0 );_edgde &&_ddeb ._bbbfd !=nil {if _cdaaea ,_cedbc :=_ddeb .bytesToCharcodes (data );_cedbc {return _cdaaea ;};};var (_acgff =make ([]_bf .CharCode ,0,len (data )+len (data )%2);_dbgfe =_bdca .baseFields ();
);if _dbgfe ._bgebe !=nil {if _gaaa ,_dfgg :=_dbgfe ._bgebe .BytesToCharcodes (data );_dfgg {for _ ,_gead :=range _gaaa {_acgff =append (_acgff ,_bf .CharCode (_gead ));};return _acgff ;};};if _dbgfe .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _gfebe :=0;_gfebe < len (data );_gfebe +=2{_ebcca :=uint16 (data [_gfebe ])<<8|uint16 (data [_gfebe +1]);_acgff =append (_acgff ,_bf .CharCode (_ebcca ));};}else {for _ ,_dbab :=range data {_acgff =append (_acgff ,_bf .CharCode (_dbab ));
};};return _acgff ;};func (_fcaff *XObjectImage )getParamsDict ()*_bcg .PdfObjectDictionary {_gffa :=_bcg .MakeDict ();_gffa .Set ("\u0057\u0069\u0064t\u0068",_bcg .MakeInteger (*_fcaff .Width ));_gffa .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bcg .MakeInteger (*_fcaff .Height ));
_gffa .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bcg .MakeInteger (int64 (_fcaff .ColorSpace .GetNumComponents ())));_gffa .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bcg .MakeInteger (*_fcaff .BitsPerComponent ));
return _gffa ;};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_bgfd *PdfOutline )GetContainingPdfObject ()_bcg .PdfObject {return _bgfd ._gega };func (_bafgg *PdfReader )buildPageList (_daec *_bcg .PdfIndirectObject ,_dabff *_bcg .PdfIndirectObject ,_ecbf map[_bcg .PdfObject ]struct{})error {if _daec ==nil {return nil ;
};if _ ,_aabbb :=_ecbf [_daec ];_aabbb {_dff .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_daec .ObjectNumber );
return nil ;};_ecbf [_daec ]=struct{}{};_ddfag ,_ecbc :=_daec .PdfObject .(*_bcg .PdfObjectDictionary );if !_ecbc {return _bcd .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_eegbb ,_ecbc :=(*_ddfag ).Get ("\u0054\u0079\u0070\u0065").(*_bcg .PdfObjectName );
if !_ecbc {if _ddfag .Get ("\u004b\u0069\u0064\u0073")==nil {return _bcd .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_dff .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_eegbb =_bcg .MakeName ("\u0050\u0061\u0067e\u0073");_ddfag .Set ("\u0054\u0079\u0070\u0065",_eegbb );};_dff .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_eegbb ,_daec );
if *_eegbb =="\u0050\u0061\u0067\u0065"{_dfccf ,_ceece :=_bafgg .newPdfPageFromDict (_ddfag );if _ceece !=nil {return _ceece ;};_dfccf .setContainer (_daec );if _dabff !=nil {_ddfag .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dabff );};_bafgg ._fgebbb =append (_bafgg ._fgebbb ,_daec );
_bafgg .PageList =append (_bafgg .PageList ,_dfccf );return nil ;};if *_eegbb !="\u0050\u0061\u0067e\u0073"{_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_eegbb );
return _bcd .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _dabff !=nil {_ddfag .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_dabff );};if !_bafgg ._gdfa {_gdccf :=_bafgg .traverseObjectData (_daec );if _gdccf !=nil {return _gdccf ;};};_ddfaf ,_dadcd :=_bafgg ._eadaf .Resolve (_ddfag .Get ("\u004b\u0069\u0064\u0073"));
if _dadcd !=nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _dadcd ;};var _febc *_bcg .PdfObjectArray ;
_febc ,_ecbc =_ddfaf .(*_bcg .PdfObjectArray );if !_ecbc {_edgge ,_ffafd :=_ddfaf .(*_bcg .PdfIndirectObject );if !_ffafd {return _bcd .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_febc ,_ecbc =_edgge .PdfObject .(*_bcg .PdfObjectArray );
if !_ecbc {return _bcd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_dff .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_febc );
for _fcegb ,_acgfg :=range _febc .Elements (){_eaef ,_bcbfa :=_bcg .GetIndirect (_acgfg );if !_bcbfa {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_eaef );
return _bcd .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_febc .Set (_fcegb ,_eaef );_dadcd =_bafgg .buildPageList (_eaef ,_daec ,_ecbf );if _dadcd !=nil {return _dadcd ;
};};return nil ;};func (_cdgab *fontFile )parseASCIIPart (_bcbbc []byte )error {if len (_bcbbc )< 2||string (_bcbbc [:2])!="\u0025\u0021"{return _bcd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_dbeea ,_fgaea ,_fbfff :=_afbcg (_bcbbc );if _fbfff !=nil {return _fbfff ;};_edcdd :=_adfdc (_dbeea );_cdgab ._gdee =_edcdd ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _cdgab ._gdee ==""{_dff .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _fgaea !=""{_dggeg ,_bbbg :=_gbgca (_fgaea );if _bbbg !=nil {return _bbbg ;};_cdgcb ,_bbbg :=_bf .NewCustomSimpleTextEncoder (_dggeg ,nil );if _bbbg !=nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_bbbg );
return nil ;};_cdgab ._beab =_cdgcb ;};return nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_fgaa *PdfSignatureReference )GetContainingPdfObject ()_bcg .PdfObject {return _fgaa ._acfgd };

// SetAnnotations sets the annotations list.
func (_abcdc *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_abcdc ._addea =annotations };

// GetStandardApplier gets currently used StandardApplier..
func (_ccaad *PdfWriter )GetStandardApplier ()StandardApplier {return _ccaad ._dbda };

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _bcg .StreamEncoder ;FormType _bcg .PdfObject ;BBox _bcg .PdfObject ;Matrix _bcg .PdfObject ;Resources *PdfPageResources ;Group _bcg .PdfObject ;Ref _bcg .PdfObject ;MetaData _bcg .PdfObject ;PieceInfo _bcg .PdfObject ;LastModified _bcg .PdfObject ;
StructParent _bcg .PdfObject ;StructParents _bcg .PdfObject ;OPI _bcg .PdfObject ;OC _bcg .PdfObject ;Name _bcg .PdfObject ;

// Stream data.
Stream []byte ;_afdee *_bcg .PdfObjectStream ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_fefa *PdfAppender )UpdatePage (page *PdfPage ){_fefa .updateObjectsDeep (page .ToPdfObject (),nil )};

// ToInteger convert to an integer format.
func (_aebe *PdfColorDeviceGray )ToInteger (bits int )uint32 {_eef :=_ab .Pow (2,float64 (bits ))-1;return uint32 (_eef *_aebe .Val ());};

// ToInteger convert to an integer format.
func (_bea *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_gcdf :=_ab .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_gcdf *_bea .C ()),uint32 (_gcdf *_bea .M ()),uint32 (_gcdf *_bea .Y ()),uint32 (_gcdf *_bea .K ())};};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_daab *PdfPageResources )HasColorspaceByName (keyName _bcg .PdfObjectName )bool {_egaag ,_bgae :=_daab .GetColorspaces ();if _bgae !=nil {_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_bgae );
return false ;};if _egaag ==nil {return false ;};_ ,_aefge :=_egaag .Colorspaces [string (keyName )];return _aefge ;};func (_cead *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_bcg .PdfParser ;DiffPolicy _fa .DiffPolicy ;};func (_fdfdb *PdfWriter )writeBytes (_ddecd []byte ){if _fdfdb ._efgdd !=nil {return ;};_ddac ,_bdadg :=_fdfdb ._fbee .Write (_ddecd );_fdfdb ._dacb +=int64 (_ddac );
_fdfdb ._efgdd =_bdadg ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// K returns the value of the key component of the color.
func (_fgfff *PdfColorDeviceCMYK )K ()float64 {return _fgfff [3]};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _bcg .PdfObject )(_bcg .PdfObjectName ,error ){var _cbgd *_bcg .PdfObjectName ;var _bfbd *_bcg .PdfObjectArray ;if _deeb ,_fae :=obj .(*_bcg .PdfIndirectObject );_fae {if _dfcf ,_eaee :=_deeb .PdfObject .(*_bcg .PdfObjectArray );
_eaee {_bfbd =_dfcf ;}else if _deee ,_edgag :=_deeb .PdfObject .(*_bcg .PdfObjectName );_edgag {_cbgd =_deee ;};}else if _dbga ,_ecba :=obj .(*_bcg .PdfObjectArray );_ecba {_bfbd =_dbga ;}else if _edee ,_dbac :=obj .(*_bcg .PdfObjectName );_dbac {_cbgd =_edee ;
};if _cbgd !=nil {switch *_cbgd {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_cbgd ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_cbgd ,nil ;
};};if _bfbd !=nil &&_bfbd .Len ()> 0{if _dbbe ,_dabc :=_bfbd .Get (0).(*_bcg .PdfObjectName );_dabc {switch *_dbbe {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _bfbd .Len ()==1{return *_dbbe ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_dbbe ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_dbbe ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_dbbe ,nil ;};};};return "",nil ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_fbdac *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _fbdac ._eedf !=nil {return _fbdac ._eedf ,nil ;};if _fbdac .ColorSpace ==nil {return nil ,nil ;};_bdedb ,_bcdfbd :=_gbade (_fbdac .ColorSpace );if _bcdfbd !=nil {return nil ,_bcdfbd ;
};_fbdac ._eedf =_bdedb ;return _fbdac ._eedf ,nil ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};func (_afbc *PdfReader )newPdfActionSoundFromDict (_fcce *_bcg .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_fcce .Get ("\u0053\u006f\u0075n\u0064"),Volume :_fcce .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_fcce .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_fcce .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_fcce .Get ("\u004d\u0069\u0078")},nil ;
};

// C returns the value of the cyan component of the color.
func (_fbad *PdfColorDeviceCMYK )C ()float64 {return _fbad [0]};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cggb pdfFontType3 )GetRuneMetrics (r rune )(_dgb .CharMetrics ,bool ){_egbba :=_cggb .Encoder ();if _egbba ==nil {_dff .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_cggb );
return _dgb .CharMetrics {},false ;};_dfad ,_aeed :=_egbba .RuneToCharcode (r );if !_aeed {if r !=' '{_dff .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_cggb );
};return _dgb .CharMetrics {},false ;};_egda ,_fbae :=_cggb .GetCharMetrics (_dfad );return _egda ,_fbae ;};

// ToPdfObject implements interface PdfModel.
func (_agc *PdfActionGoTo )ToPdfObject ()_bcg .PdfObject {_agc .PdfAction .ToPdfObject ();_cgg :=_agc ._aag ;_ceb :=_cgg .PdfObject .(*_bcg .PdfObjectDictionary );_ceb .SetIfNotNil ("\u0053",_bcg .MakeName (string (ActionTypeGoTo )));_ceb .SetIfNotNil ("\u0044",_agc .D );
return _cgg ;};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_bede :=NewPdfAnnotation ();_bdb :=&PdfAnnotationPolyLine {};_bdb .PdfAnnotation =_bede ;_bdb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bede .SetContext (_bdb );return _bdb ;};func (_cgec *PdfReader )newPdfAnnotationScreenFromDict (_aea *_bcg .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_dcbg :=PdfAnnotationScreen {};
_dcbg .T =_aea .Get ("\u0054");_dcbg .MK =_aea .Get ("\u004d\u004b");_dcbg .A =_aea .Get ("\u0041");_dcbg .AA =_aea .Get ("\u0041\u0041");return &_dcbg ,nil ;};

// IsColored specifies if the pattern is colored.
func (_ecce *PdfTilingPattern )IsColored ()bool {if _ecce .PaintType !=nil &&*_ecce .PaintType ==1{return true ;};return false ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_agdc *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_gdab :=_ff .NewReader (img .getBase ());_dfcg :=_dca .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._aagba ,img ._agagd );
_daad :=_ff .NewWriter (_dfcg );_dedd :=_ab .Pow (2,float64 (img .BitsPerComponent ))-1;_bfcc :=_agdc .GetNumComponents ();_fgfd :=make ([]uint32 ,_bfcc );_fgced :=make ([]float64 ,_bfcc );for {_dafe :=_gdab .ReadSamples (_fgfd );if _dafe ==_dg .EOF {break ;
}else if _dafe !=nil {return img ,_dafe ;};for _gbag :=0;_gbag < _bfcc ;_gbag ++{_dddeg :=float64 (_fgfd [_gbag ])/_dedd ;_fgced [_gbag ]=_dddeg ;};_cega ,_dafe :=_agdc .TintTransform .Evaluate (_fgced );if _dafe !=nil {return img ,_dafe ;};for _ ,_bcedg :=range _cega {_bcedg =_ab .Min (_ab .Max (0,_bcedg ),1.0);
if _dafe =_daad .WriteSample (uint32 (_bcedg *_dedd ));_dafe !=nil {return img ,_dafe ;};};};return _agdc .AlternateSpace .ImageToRGB (_bgcbe (&_dfcg ));};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_cgcd *PdfPattern )SetContext (ctx PdfModel ){_cgcd ._cfbc =ctx };

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_daac *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_bcg .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_bcd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_dbaa :=&PdfColorPattern {};_cfeea ,_fbfe :=objects [len (objects )-1].(*_bcg .PdfObjectName );if !_fbfe {_dff .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_dbaa .PatternName =*_cfeea ;if len (objects )> 1{_abfdc :=objects [0:len (objects )-1];if _daac .UnderlyingCS ==nil {_dff .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_bcd .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_gfgcd ,_dfceg :=_daac .UnderlyingCS .ColorFromPdfObjects (_abfdc );if _dfceg !=nil {_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_dfceg );
return nil ,_dfceg ;};_dbaa .Color =_gfgcd ;};return _dbaa ,nil ;};func _bccf (_gadff _bcg .PdfObject )(*PdfShading ,error ){_acef :=&PdfShading {};var _dbea *_bcg .PdfObjectDictionary ;if _gddb ,_bgeac :=_bcg .GetIndirect (_gadff );_bgeac {_acef ._cdefff =_gddb ;
_cebdd ,_fgege :=_gddb .PdfObject .(*_bcg .PdfObjectDictionary );if !_fgege {_dff .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bcg .ErrTypeError ;
};_dbea =_cebdd ;}else if _feebf ,_afebg :=_bcg .GetStream (_gadff );_afebg {_acef ._cdefff =_feebf ;_dbea =_feebf .PdfObjectDictionary ;}else if _gbfde ,_ffcef :=_bcg .GetDict (_gadff );_ffcef {_acef ._cdefff =_gbfde ;_dbea =_gbfde ;}else {_dff .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_gadff );
return nil ,_bcg .ErrTypeError ;};if _dbea ==nil {_dff .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_bcd .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_gadff =_dbea .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _gadff ==nil {_dff .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_gadff =_bcg .TraceToDirectObject (_gadff );_dffgeg ,_aefca :=_gadff .(*_bcg .PdfObjectInteger );if !_aefca {_dff .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_gadff );
return nil ,_bcg .ErrTypeError ;};if *_dffgeg < 1||*_dffgeg > 7{_dff .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_dffgeg );
return nil ,_bcg .ErrTypeError ;};_acef .ShadingType =_dffgeg ;_gadff =_dbea .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _gadff ==nil {_dff .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ceagab ,_bgge :=NewPdfColorspaceFromPdfObject (_gadff );if _bgge !=nil {_dff .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_bgge );
return nil ,_bgge ;};_acef .ColorSpace =_ceagab ;_gadff =_dbea .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _gadff !=nil {_gadff =_bcg .TraceToDirectObject (_gadff );_cceeb ,_aacdac :=_gadff .(*_bcg .PdfObjectArray );if !_aacdac {_dff .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gadff );
return nil ,_bcg .ErrTypeError ;};_acef .Background =_cceeb ;};_gadff =_dbea .Get ("\u0042\u0042\u006f\u0078");if _gadff !=nil {_gadff =_bcg .TraceToDirectObject (_gadff );_cdfdc ,_ccgeb :=_gadff .(*_bcg .PdfObjectArray );if !_ccgeb {_dff .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gadff );
return nil ,_bcg .ErrTypeError ;};_fbadb ,_beeag :=NewPdfRectangle (*_cdfdc );if _beeag !=nil {_dff .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_beeag );return nil ,_beeag ;};_acef .BBox =_fbadb ;};_gadff =_dbea .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");
if _gadff !=nil {_gadff =_bcg .TraceToDirectObject (_gadff );_ccdgd ,_accbf :=_gadff .(*_bcg .PdfObjectBool );if !_accbf {_dff .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gadff );
return nil ,_bcg .ErrTypeError ;};_acef .AntiAlias =_ccdgd ;};switch *_dffgeg {case 1:_cffbb ,_edfcf :=_ffggf (_dbea );if _edfcf !=nil {return nil ,_edfcf ;};_cffbb .PdfShading =_acef ;_acef ._cbaa =_cffbb ;return _acef ,nil ;case 2:_ecaec ,_gbca :=_cacf (_dbea );
if _gbca !=nil {return nil ,_gbca ;};_ecaec .PdfShading =_acef ;_acef ._cbaa =_ecaec ;return _acef ,nil ;case 3:_beed ,_bddd :=_acbed (_dbea );if _bddd !=nil {return nil ,_bddd ;};_beed .PdfShading =_acef ;_acef ._cbaa =_beed ;return _acef ,nil ;case 4:_cdfdb ,_gecbe :=_bgce (_dbea );
if _gecbe !=nil {return nil ,_gecbe ;};_cdfdb .PdfShading =_acef ;_acef ._cbaa =_cdfdb ;return _acef ,nil ;case 5:_caba ,_fedbc :=_dcacf (_dbea );if _fedbc !=nil {return nil ,_fedbc ;};_caba .PdfShading =_acef ;_acef ._cbaa =_caba ;return _acef ,nil ;case 6:_fdecb ,_ccedba :=_feeag (_dbea );
if _ccedba !=nil {return nil ,_ccedba ;};_fdecb .PdfShading =_acef ;_acef ._cbaa =_fdecb ;return _acef ,nil ;case 7:_bafcf ,_gaddf :=_aecg (_dbea );if _gaddf !=nil {return nil ,_gaddf ;};_bafcf .PdfShading =_acef ;_acef ._cbaa =_bafcf ;return _acef ,nil ;
};return nil ,_bcd .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_eafdd *PdfTilingPattern )ToPdfObject ()_bcg .PdfObject {_eafdd .PdfPattern .ToPdfObject ();_aceea :=_eafdd .getDict ();if _eafdd .PaintType !=nil {_aceea .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_eafdd .PaintType );};if _eafdd .TilingType !=nil {_aceea .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_eafdd .TilingType );
};if _eafdd .BBox !=nil {_aceea .Set ("\u0042\u0042\u006f\u0078",_eafdd .BBox .ToPdfObject ());};if _eafdd .XStep !=nil {_aceea .Set ("\u0058\u0053\u0074e\u0070",_eafdd .XStep );};if _eafdd .YStep !=nil {_aceea .Set ("\u0059\u0053\u0074e\u0070",_eafdd .YStep );
};if _eafdd .Resources !=nil {_aceea .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_eafdd .Resources .ToPdfObject ());};if _eafdd .Matrix !=nil {_aceea .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_eafdd .Matrix );};return _eafdd ._afcbe ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_cfee *PdfColorCalGray )GetNumComponents ()int {return 1};func (_aabfe *PdfReader )newPdfSignatureReferenceFromDict (_edcbc *_bcg .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _dagfb ,_fgfga :=_aabfe ._abgg .GetModelFromPrimitive (_edcbc ).(*PdfSignatureReference );
_fgfga {return _dagfb ,nil ;};_eccgb :=&PdfSignatureReference {_acfgd :_edcbc ,Data :_edcbc .Get ("\u0044\u0061\u0074\u0061")};var _dffeb bool ;_eccgb .Type ,_ =_bcg .GetName (_edcbc .Get ("\u0054\u0079\u0070\u0065"));_eccgb .TransformMethod ,_dffeb =_bcg .GetName (_edcbc .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_dffeb {_dff .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_eccgb .TransformParams ,_ =_bcg .GetDict (_edcbc .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_eccgb .DigestMethod ,_ =_bcg .GetName (_edcbc .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _eccgb ,nil ;};func _ecfcd (_aagac _bcg .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_cdcf :=NewPdfColorspaceSpecialSeparation ();if _aabca ,_aecd :=_aagac .(*_bcg .PdfIndirectObject );_aecd {_cdcf ._fgce =_aabca ;};_aagac =_bcg .TraceToDirectObject (_aagac );
_fdab ,_cadcd :=_aagac .(*_bcg .PdfObjectArray );if !_cadcd {return nil ,_g .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _fdab .Len ()!=4{return nil ,_g .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");
};_aagac =_fdab .Get (0);_bgaa ,_cadcd :=_aagac .(*_bcg .PdfObjectName );if !_cadcd {return nil ,_g .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_bgaa !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_g .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_aagac =_fdab .Get (1);_bgaa ,_cadcd =_aagac .(*_bcg .PdfObjectName );if !_cadcd {return nil ,_g .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_cdcf .ColorantName =_bgaa ;_aagac =_fdab .Get (2);_gefe ,_bdbfa :=NewPdfColorspaceFromPdfObject (_aagac );if _bdbfa !=nil {return nil ,_bdbfa ;};_cdcf .AlternateSpace =_gefe ;_gcddc ,_bdbfa :=_bdgfe (_fdab .Get (3));if _bdbfa !=nil {return nil ,_bdbfa ;
};_cdcf .TintTransform =_gcddc ;return _cdcf ,nil ;};func _becaa (_geece *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_geece }};

// CustomKeys returns all custom info keys as list.
func (_gacde *PdfInfo )CustomKeys ()[]string {if _gacde ._aabd ==nil {return nil ;};_dgdbd :=make ([]string ,len (_gacde ._aabd .Keys ()));for _ ,_gdag :=range _gacde ._aabd .Keys (){_dgdbd =append (_dgdbd ,_gdag .String ());};return _dgdbd ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_afgad *PdfReader )GetOCProperties ()(_bcg .PdfObject ,error ){_aege :=_afgad ._fdeec ;_ddefb :=_aege .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_ddefb =_bcg .ResolveReference (_ddefb );if !_afgad ._gdfa {_abeeg :=_afgad .traverseObjectData (_ddefb );
if _abeeg !=nil {return nil ,_abeeg ;};};return _ddefb ,nil ;};

// Encoder returns the font's text encoder.
func (_ebbc pdfCIDFontType0 )Encoder ()_bf .TextEncoder {return _ebbc ._fbeb };

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_adcg *PdfPage )AddContentStreamByString (contentStr string )error {_cecee ,_aeabc :=_bcg .MakeStream ([]byte (contentStr ),_bcg .NewFlateEncoder ());if _aeabc !=nil {return _aeabc ;};if _adcg .Contents ==nil {_adcg .Contents =_cecee ;}else {_fbdbba :=_bcg .TraceToDirectObject (_adcg .Contents );
_abefe ,_ggegc :=_fbdbba .(*_bcg .PdfObjectArray );if !_ggegc {_abefe =_bcg .MakeArray (_fbdbba );};_abefe .Append (_cecee );_adcg .Contents =_abefe ;};return nil ;};func (_egbf *fontFile )loadFromSegments (_eccdc ,_ffgc []byte )error {_dff .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_eccdc ),len (_ffgc ));
_gbgabb :=_egbf .parseASCIIPart (_eccdc );if _gbgabb !=nil {return _gbgabb ;};_dff .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_egbf );if len (_ffgc )==0{return nil ;};_dff .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_egbf );
return nil ;};func _cgdec (_fgbed *_bcg .PdfObjectDictionary ,_gacag *fontCommon )(*pdfFontType3 ,error ){_cbbc :=_ddffa (_gacag );_cdedc :=_fgbed .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _cdedc ==nil {_cdedc =_bcg .MakeInteger (0);};_cbbc .FirstChar =_cdedc ;
_dffce ,_bgbc :=_bcg .GetIntVal (_cdedc );if !_bgbc {_dff .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_cdedc );
return nil ,_bcg .ErrTypeError ;};_dfba :=_bf .CharCode (_dffce );_cdedc =_fgbed .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _cdedc ==nil {_cdedc =_bcg .MakeInteger (255);};_cbbc .LastChar =_cdedc ;_dffce ,_bgbc =_bcg .GetIntVal (_cdedc );
if !_bgbc {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_cdedc );return nil ,_bcg .ErrTypeError ;
};_dfbde :=_bf .CharCode (_dffce );_cdedc =_fgbed .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _cdedc !=nil {_cbbc .Resources =_cdedc ;};_cdedc =_fgbed .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _cdedc ==nil {_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_cdedc );
return nil ,_bcg .ErrNotSupported ;};_cbbc .CharProcs =_cdedc ;_cdedc =_fgbed .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _cdedc ==nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_cdedc );
return nil ,_bcg .ErrNotSupported ;};_cbbc .FontMatrix =_cdedc ;_cbbc ._dcfc =make (map[_bf .CharCode ]float64 );_cdedc =_fgbed .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _cdedc !=nil {_cbbc .Widths =_cdedc ;_ccbcb ,_dccg :=_bcg .GetArray (_cdedc );
if !_dccg {_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_cdedc );return nil ,_bcg .ErrTypeError ;
};_gdffd ,_ccdb :=_ccbcb .ToFloat64Array ();if _ccdb !=nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_ccdb ;};if len (_gdffd )!=int (_dfbde -_dfba +1){_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_dfbde -_dfba +1,len (_gdffd ));
return nil ,_bcg .ErrRangeError ;};_eedgff ,_dccg :=_bcg .GetArray (_cbbc .FontMatrix );if !_dccg {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_eedgff );
return nil ,_ccdb ;};_cacgf ,_ccdb :=_eedgff .ToFloat64Array ();if _ccdb !=nil {_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_ccdb ;};_fabag :=_ee .NewMatrix (_cacgf [0],_cacgf [1],_cacgf [2],_cacgf [3],_cacgf [4],_cacgf [5]);for _fdba ,_dfadg :=range _gdffd {_afdg ,_ :=_fabag .Transform (_dfadg ,_dfadg );_cbbc ._dcfc [_dfba +_bf .CharCode (_fdba )]=_afdg ;};};_cbbc .Encoding =_bcg .TraceToDirectObject (_fgbed .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_ceaef :=_fgbed .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _ceaef !=nil {_cbbc ._aeba =_bcg .TraceToDirectObject (_ceaef );_cdde ,_fcafa :=_dbba (_cbbc ._aeba ,&_cbbc .fontCommon );if _fcafa !=nil {return nil ,_fcafa ;};_cbbc ._bgebe =_cdde ;
};if _gccbg :=_cbbc ._bgebe ;_gccbg !=nil {_cbbc ._fgbdc =_bf .NewCMapEncoder ("",nil ,_gccbg );}else {_cbbc ._fgbdc =_bf .NewPdfDocEncoder ();};return _cbbc ,nil ;};func (_cbfd *PdfReader )newPdfAnnotationPolygonFromDict (_gegf *_bcg .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_gdf :=PdfAnnotationPolygon {};
_cbdb ,_ccgb :=_cbfd .newPdfAnnotationMarkupFromDict (_gegf );if _ccgb !=nil {return nil ,_ccgb ;};_gdf .PdfAnnotationMarkup =_cbdb ;_gdf .Vertices =_gegf .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_gdf .LE =_gegf .Get ("\u004c\u0045");_gdf .BS =_gegf .Get ("\u0042\u0053");
_gdf .IC =_gegf .Get ("\u0049\u0043");_gdf .BE =_gegf .Get ("\u0042\u0045");_gdf .IT =_gegf .Get ("\u0049\u0054");_gdf .Measure =_gegf .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_gdf ,nil ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _dg .ReadSeeker )(*PdfFont ,error ){_cgfc ,_gagabd :=_df .ReadAll (r );if _gagabd !=nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_gagabd );
return nil ,_gagabd ;};_aefc ,_gagabd :=_dgb .TtfParse (_gg .NewReader (_cgfc ));if _gagabd !=nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_gagabd );
return nil ,_gagabd ;};_afbcb :=&pdfCIDFontType2 {fontCommon :fontCommon {_cfeef :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_bcg .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_aefc .Widths )<=0{return nil ,_bcd .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_baaa :=1000.0/float64 (_aefc .UnitsPerEm );_acdg :=_baaa *float64 (_aefc .Widths [0]);_fcebc :=make (map[rune ]int );_dbdb :=make (map[_dgb .GID ]int );_beeb :=_dgb .GID (len (_aefc .Widths ));for _gage ,_dedc :=range _aefc .Chars {if _dedc > _beeb -1{continue ;
};_bdba :=int (_baaa *float64 (_aefc .Widths [_dedc ]));_fcebc [_gage ]=_bdba ;_dbdb [_dedc ]=_bdba ;};_afbcb ._caaed =_fcebc ;_afbcb .DW =_bcg .MakeInteger (int64 (_acdg ));_efeb :=_gfde (_dbdb ,uint16 (_beeb ));_afbcb .W =_bcg .MakeIndirectObject (_efeb );
_fegg :=_bcg .MakeDict ();_fegg .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_bcg .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_fegg .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_bcg .MakeString ("\u0041\u0064\u006fb\u0065"));
_fegg .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_bcg .MakeInteger (0));_afbcb .CIDSystemInfo =_fegg ;_febec :=&PdfFontDescriptor {FontName :_bcg .MakeName (_aefc .PostScriptName ),Ascent :_bcg .MakeFloat (_baaa *float64 (_aefc .TypoAscender )),Descent :_bcg .MakeFloat (_baaa *float64 (_aefc .TypoDescender )),CapHeight :_bcg .MakeFloat (_baaa *float64 (_aefc .CapHeight )),FontBBox :_bcg .MakeArrayFromFloats ([]float64 {_baaa *float64 (_aefc .Xmin ),_baaa *float64 (_aefc .Ymin ),_baaa *float64 (_aefc .Xmax ),_baaa *float64 (_aefc .Ymax )}),ItalicAngle :_bcg .MakeFloat (_aefc .ItalicAngle ),MissingWidth :_bcg .MakeFloat (_acdg )};
_egcfc ,_gagabd :=_bcg .MakeStream (_cgfc ,_bcg .NewFlateEncoder ());if _gagabd !=nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_gagabd );
return nil ,_gagabd ;};_egcfc .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bcg .MakeInteger (int64 (len (_cgfc ))));_febec .FontFile2 =_egcfc ;if _aefc .Bold {_febec .StemV =_bcg .MakeInteger (120);}else {_febec .StemV =_bcg .MakeInteger (70);
};_eccfg :=_aaea ;if _aefc .IsFixedPitch {_eccfg |=_dfaf ;};if _aefc .ItalicAngle !=0{_eccfg |=_cfeafd ;};_febec .Flags =_bcg .MakeInteger (int64 (_eccfg ));_afbcb ._aafc =_aefc .PostScriptName ;_afbcb ._faaca =_febec ;_bcfd :=pdfFontType0 {fontCommon :fontCommon {_cfeef :"\u0054\u0079\u0070e\u0030",_aafc :_aefc .PostScriptName },DescendantFont :&PdfFont {_aabbg :_afbcb },Encoding :_bcg .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_eegb :_aefc .NewEncoder ()};
if len (_aefc .Chars )> 0{_egefc :=make (map[_faa .CharCode ]rune ,len (_aefc .Chars ));for _bgccd ,_eccfa :=range _aefc .Chars {_edfd :=_faa .CharCode (_eccfa );if _beebc ,_gacb :=_egefc [_edfd ];!_gacb ||(_gacb &&_beebc > _bgccd ){_egefc [_edfd ]=_bgccd ;
};};_bcfd ._bgebe =_faa .NewToUnicodeCMap (_egefc );};_cgddb :=PdfFont {_aabbg :&_bcfd };return &_cgddb ,nil ;};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_gbda :=&PdfColorspaceCalRGB {};_gbda .BlackPoint =[]float64 {0.0,0.0,0.0};_gbda .Gamma =[]float64 {1.0,1.0,1.0};_gbda .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _gbda ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_egce *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_ffeg *Image )SetSamples (samples []uint32 ){if _ffeg .BitsPerComponent < 8{samples =_ffeg .samplesAddPadding (samples );};_bbed :=_ff .ResampleUint32 (samples ,int (_ffeg .BitsPerComponent ),8);_caeed :=make ([]byte ,len (_bbed ));for _addg ,_gcaf :=range _bbed {_caeed [_addg ]=byte (_gcaf );
};_ffeg .Data =_caeed ;};

// SetContentStream sets the pattern cell's content stream.
func (_aaggf *PdfTilingPattern )SetContentStream (content []byte ,encoder _bcg .StreamEncoder )error {_cddbae ,_bgdf :=_aaggf ._afcbe .(*_bcg .PdfObjectStream );if !_bgdf {_dff .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aaggf ._afcbe );
return _bcg .ErrTypeError ;};if encoder ==nil {encoder =_bcg .NewRawEncoder ();};_gebfd :=_cddbae .PdfObjectDictionary ;_dcfg :=encoder .MakeStreamDict ();_gebfd .Merge (_dcfg );_fdgaa ,_ffbdb :=encoder .EncodeBytes (content );if _ffbdb !=nil {return _ffbdb ;
};_gebfd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bcg .MakeInteger (int64 (len (_fdgaa ))));_cddbae .Stream =_fdgaa ;return nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_ecefe *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_ecefe .NumInputs {_dff .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_bcd .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _ecefe ._aggf ==nil {_gfcc :=_ecefe .processSamples ();if _gfcc !=nil {return nil ,_gfcc ;};};_eegbe :=_ecefe .Encode ;if _eegbe ==nil {_eegbe =[]float64 {};
for _cgfbc :=0;_cgfbc < len (_ecefe .Size );_cgfbc ++{_eegbe =append (_eegbe ,0);_eegbe =append (_eegbe ,float64 (_ecefe .Size [_cgfbc ]-1));};};_efgae :=_ecefe .Decode ;if _efgae ==nil {_efgae =_ecefe .Range ;};_bdege :=make ([]int ,len (x ));for _fbadfe :=0;
_fbadfe < len (x );_fbadfe ++{_cbgfd :=x [_fbadfe ];_babge :=_ab .Min (_ab .Max (_cbgfd ,_ecefe .Domain [2*_fbadfe ]),_ecefe .Domain [2*_fbadfe +1]);_afge :=_dca .LinearInterpolate (_babge ,_ecefe .Domain [2*_fbadfe ],_ecefe .Domain [2*_fbadfe +1],_eegbe [2*_fbadfe ],_eegbe [2*_fbadfe +1]);
_bdec :=_ab .Min (_ab .Max (_afge ,0),float64 (_ecefe .Size [_fbadfe ]-1));_gdge :=int (_ab .Floor (_bdec +0.5));if _gdge < 0{_gdge =0;}else if _gdge > _ecefe .Size [_fbadfe ]{_gdge =_ecefe .Size [_fbadfe ]-1;};_bdege [_fbadfe ]=_gdge ;};_fcafb :=_bdege [0];
for _bead :=1;_bead < _ecefe .NumInputs ;_bead ++{_deecg :=_bdege [_bead ];for _gaabe :=0;_gaabe < _bead ;_gaabe ++{_deecg *=_ecefe .Size [_gaabe ];};_fcafb +=_deecg ;};_fcafb *=_ecefe .NumOutputs ;var _eabb []float64 ;for _edeba :=0;_edeba < _ecefe .NumOutputs ;
_edeba ++{_edfg :=_fcafb +_edeba ;if _edfg >=len (_ecefe ._aggf ){_dff .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_dggad :=_ecefe ._aggf [_edfg ];_bfbdf :=_dca .LinearInterpolate (float64 (_dggad ),0,_ab .Pow (2,float64 (_ecefe .BitsPerSample )),_efgae [2*_edeba ],_efgae [2*_edeba +1]);_fbce :=_ab .Min (_ab .Max (_bfbdf ,_ecefe .Range [2*_edeba ]),_ecefe .Range [2*_edeba +1]);
_eabb =append (_eabb ,_fbce );};return _eabb ,nil ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_aggc *PdfPageResources )HasExtGState (keyName _bcg .PdfObjectName )bool {_ ,_abacdf :=_aggc .GetFontByName (keyName );return _abacdf ;};func (_aecc *PdfReader )newPdfOutlineItemFromIndirectObject (_fedfca *_bcg .PdfIndirectObject )(*PdfOutlineItem ,error ){_fgfdg ,_gbaac :=_fedfca .PdfObject .(*_bcg .PdfObjectDictionary );
if !_gbaac {return nil ,_g .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_dgdff :=NewPdfOutlineItem ();_fgcbg :=_fgfdg .Get ("\u0054\u0069\u0074l\u0065");
if _fgcbg ==nil {return nil ,_g .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_cafff ,_fcada :=_bcg .GetString (_fgcbg );if !_fcada {return nil ,_g .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_fgcbg );};_dgdff .Title =_cafff ;if _dbfed :=_fgfdg .Get ("\u0043\u006f\u0075n\u0074");
_dbfed !=nil {_cedbf ,_edbe :=_dbfed .(*_bcg .PdfObjectInteger );if !_edbe {return nil ,_g .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_dbfed );};_dgad :=int64 (*_cedbf );
_dgdff .Count =&_dgad ;};if _bfbab :=_fgfdg .Get ("\u0044\u0065\u0073\u0074");_bfbab !=nil {_dgdff .Dest =_bcg .ResolveReference (_bfbab );if !_aecc ._gdfa {_dfcee :=_aecc .traverseObjectData (_dgdff .Dest );if _dfcee !=nil {return nil ,_dfcee ;};};};if _dgac :=_fgfdg .Get ("\u0041");
_dgac !=nil {_dgdff .A =_bcg .ResolveReference (_dgac );if !_aecc ._gdfa {_bdbca :=_aecc .traverseObjectData (_dgdff .A );if _bdbca !=nil {return nil ,_bdbca ;};};};if _fcgd :=_fgfdg .Get ("\u0053\u0045");_fcgd !=nil {_dgdff .SE =nil ;};if _cdcge :=_fgfdg .Get ("\u0043");
_cdcge !=nil {_dgdff .C =_bcg .ResolveReference (_cdcge );};if _afdefa :=_fgfdg .Get ("\u0046");_afdefa !=nil {_dgdff .F =_bcg .ResolveReference (_afdefa );};return _dgdff ,nil ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_bddgb :_bcg .MakeIndirectObject (_bcg .MakeDict ())}};type pdfFontType3 struct{fontCommon ;_aafb *_bcg .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _bcg .PdfObject ;Encoding _bcg .PdfObject ;FontBBox _bcg .PdfObject ;FontMatrix _bcg .PdfObject ;FirstChar _bcg .PdfObject ;LastChar _bcg .PdfObject ;Widths _bcg .PdfObject ;Resources _bcg .PdfObject ;_dcfc map[_bf .CharCode ]float64 ;_fgbdc _bf .TextEncoder ;
};func (_befd *PdfReader )newPdfAnnotationUnderlineFromDict (_edfc *_bcg .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_cdfd :=PdfAnnotationUnderline {};_fgbc ,_bcdd :=_befd .newPdfAnnotationMarkupFromDict (_edfc );if _bcdd !=nil {return nil ,_bcdd ;
};_cdfd .PdfAnnotationMarkup =_fgbc ;_cdfd .QuadPoints =_edfc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_cdfd ,nil ;};

// A returns the value of the A component of the color.
func (_cfccf *PdfColorLab )A ()float64 {return _cfccf [1]};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_cfbc PdfModel ;_afcbe _bcg .PdfObject ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_ebbeb :=&PdfSignature {Type :_bcg .MakeName ("\u0053\u0069\u0067"),Handler :handler };_egfff :=&pdfSignDictionary {PdfObjectDictionary :_bcg .MakeDict (),_caef :&handler ,_gebfb :_ebbeb };
_ebbeb ._feead =_bcg .MakeIndirectObject (_egfff );return _ebbeb ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_faffec *PdfPageResources )GetXObjectFormByName (keyName _bcg .PdfObjectName )(*XObjectForm ,error ){_dceec ,_egfb :=_faffec .GetXObjectByName (keyName );if _dceec ==nil {return nil ,nil ;};if _egfb !=XObjectTypeForm {return nil ,_bcd .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_agfc ,_acgea :=NewXObjectFormFromStream (_dceec );if _acgea !=nil {return nil ,_acgea ;};return _agfc ,nil ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_fdbgd *PdfWriter )SetDocInfo (info *PdfInfo ){_fdbgd .setDocInfo (info .ToPdfObject ())};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _bcg .PdfObject ;Flags _bcg .PdfObject ;};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_degbf DefaultImageHandler )Read (reader _dg .Reader )(*Image ,error ){_cdba ,_ ,_accdg :=_af .Decode (reader );if _accdg !=nil {_dff .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_accdg );
return nil ,_accdg ;};return _degbf .NewImageFromGoImage (_cdba );};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_edgd :=NewPdfAnnotation ();_egfe :=&PdfAnnotationRedact {};_egfe .PdfAnnotation =_edgd ;_egfe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_edgd .SetContext (_egfe );return _egfe ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _bcg .PdfObject ;Flags _bcg .PdfObject ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_bdaf *PdfPage )GetPageDict ()*_bcg .PdfObjectDictionary {_ccdd :=_bdaf ._dabee ;_ccdd .Clear ();_ccdd .Set ("\u0054\u0079\u0070\u0065",_bcg .MakeName ("\u0050\u0061\u0067\u0065"));_ccdd .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bdaf .Parent );
if _bdaf .LastModified !=nil {_ccdd .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_bdaf .LastModified .ToPdfObject ());};if _bdaf .Resources !=nil {_ccdd .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_bdaf .Resources .ToPdfObject ());
};if _bdaf .CropBox !=nil {_ccdd .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_bdaf .CropBox .ToPdfObject ());};if _bdaf .MediaBox !=nil {_ccdd .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_bdaf .MediaBox .ToPdfObject ());};if _bdaf .BleedBox !=nil {_ccdd .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_bdaf .BleedBox .ToPdfObject ());
};if _bdaf .TrimBox !=nil {_ccdd .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_bdaf .TrimBox .ToPdfObject ());};if _bdaf .ArtBox !=nil {_ccdd .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_bdaf .ArtBox .ToPdfObject ());};_ccdd .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_bdaf .BoxColorInfo );
_ccdd .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bdaf .Contents );if _bdaf .Rotate !=nil {_ccdd .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bcg .MakeInteger (*_bdaf .Rotate ));};_ccdd .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_bdaf .Group );
_ccdd .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_bdaf .Thumb );_ccdd .SetIfNotNil ("\u0042",_bdaf .B );_ccdd .SetIfNotNil ("\u0044\u0075\u0072",_bdaf .Dur );_ccdd .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_bdaf .Trans );_ccdd .SetIfNotNil ("\u0041\u0041",_bdaf .AA );
_ccdd .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bdaf .Metadata );_ccdd .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_bdaf .PieceInfo );_ccdd .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_bdaf .StructParents );
_ccdd .SetIfNotNil ("\u0049\u0044",_bdaf .ID );_ccdd .SetIfNotNil ("\u0050\u005a",_bdaf .PZ );_ccdd .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_bdaf .SeparationInfo );_ccdd .SetIfNotNil ("\u0054\u0061\u0062\u0073",_bdaf .Tabs );
_ccdd .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_bdaf .TemplateInstantiated );_ccdd .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_bdaf .PresSteps );_ccdd .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_bdaf .UserUnit );
_ccdd .SetIfNotNil ("\u0056\u0050",_bdaf .VP );if _bdaf ._addea !=nil {_fdcgc :=_bcg .MakeArray ();for _ ,_adgbb :=range _bdaf ._addea {if _dcebb :=_adgbb .GetContext ();_dcebb !=nil {_fdcgc .Append (_dcebb .ToPdfObject ());}else {_fdcgc .Append (_adgbb .ToPdfObject ());
};};if _fdcgc .Len ()> 0{_ccdd .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_fdcgc );};}else if _bdaf .Annots !=nil {_ccdd .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_bdaf .Annots );};return _ccdd ;};const (XObjectTypeUndefined XObjectType =iota ;
XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);var _egaac =_gc .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_ffaf :=NewPdfAnnotation ();_cdb :=&PdfAnnotationLink {};_cdb .PdfAnnotation =_ffaf ;_ffaf .SetContext (_cdb );return _cdb ;};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_ccgf ,_feabg :=_dee .Open (filePath );if _feabg !=nil {_dff .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_feabg );
return nil ,_feabg ;};defer _ccgf .Close ();return NewCompositePdfFontFromTTF (_ccgf );};func _ddbg (_bfaac *_bcg .PdfObjectDictionary )(*PdfTilingPattern ,error ){_bfee :=&PdfTilingPattern {};_ccgge :=_bfaac .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");
if _ccgge ==nil {_dff .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_abafd ,_gdgde :=_ccgge .(*_bcg .PdfObjectInteger );if !_gdgde {_dff .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_ccgge );
return nil ,_bcg .ErrTypeError ;};_bfee .PaintType =_abafd ;_ccgge =_bfaac .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _ccgge ==nil {_dff .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_abeee ,_gdgde :=_ccgge .(*_bcg .PdfObjectInteger );if !_gdgde {_dff .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ccgge );
return nil ,_bcg .ErrTypeError ;};_bfee .TilingType =_abeee ;_ccgge =_bfaac .Get ("\u0042\u0042\u006f\u0078");if _ccgge ==nil {_dff .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_ccgge =_bcg .TraceToDirectObject (_ccgge );_aebee ,_gdgde :=_ccgge .(*_bcg .PdfObjectArray );if !_gdgde {_dff .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ccgge );
return nil ,_bcg .ErrTypeError ;};_bafgb ,_aegf :=NewPdfRectangle (*_aebee );if _aegf !=nil {_dff .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_aegf );return nil ,_aegf ;};_bfee .BBox =_bafgb ;_ccgge =_bfaac .Get ("\u0058\u0053\u0074e\u0070");
if _ccgge ==nil {_dff .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_agfd ,_aegf :=_bcg .GetNumberAsFloat (_ccgge );if _aegf !=nil {_dff .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_agfd );
return nil ,_aegf ;};_bfee .XStep =_bcg .MakeFloat (_agfd );_ccgge =_bfaac .Get ("\u0059\u0053\u0074e\u0070");if _ccgge ==nil {_dff .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_gbbg ,_aegf :=_bcg .GetNumberAsFloat (_ccgge );if _aegf !=nil {_dff .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_gbbg );
return nil ,_aegf ;};_bfee .YStep =_bcg .MakeFloat (_gbbg );_ccgge =_bfaac .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _ccgge ==nil {_dff .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bfaac ,_gdgde =_bcg .TraceToDirectObject (_ccgge ).(*_bcg .PdfObjectDictionary );if !_gdgde {return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_ccgge );
};_gdfgf ,_aegf :=NewPdfPageResourcesFromDict (_bfaac );if _aegf !=nil {return nil ,_aegf ;};_bfee .Resources =_gdfgf ;if _gccae :=_bfaac .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_gccae !=nil {_cfgee ,_bbbad :=_gccae .(*_bcg .PdfObjectArray );if !_bbbad {_dff .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gccae );
return nil ,_bcg .ErrTypeError ;};_bfee .Matrix =_cfgee ;};return _bfee ,nil ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_dcdb *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_dff .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_dff .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_dff .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_dff .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_abbd ,_gdbde :=_dca .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._aagba ,img ._agagd );if _gdbde !=nil {return Image {},_gdbde ;};_aecbb ,_gdbde :=_dca .NRGBAConverter .Convert (_abbd );
if _gdbde !=nil {return Image {},_gdbde ;};return _bgcbe (_aecbb .Base ()),nil ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_accfb *PdfAcroForm )GetContainingPdfObject ()_bcg .PdfObject {return _accfb ._eafcb };

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_cdea :=NewPdfAnnotation ();_afed :=&PdfAnnotationWidget {};_afed .PdfAnnotation =_cdea ;_cdea .SetContext (_afed );return _afed ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_dgefc *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdaae :=vals [0];if _cdaae < 0.0||_cdaae > 100.0{_dff .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_cdaae );
return nil ,ErrColorOutOfRange ;};_daegf :=vals [1];_agfaba :=float64 (-100);_adcd :=float64 (100);if len (_dgefc .Range )> 1{_agfaba =_dgefc .Range [0];_adcd =_dgefc .Range [1];};if _daegf < _agfaba ||_daegf > _adcd {_dff .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_daegf ,_agfaba ,_adcd );
return nil ,ErrColorOutOfRange ;};_ccbf :=vals [2];_aeaeb :=float64 (-100);_deed :=float64 (100);if len (_dgefc .Range )> 3{_aeaeb =_dgefc .Range [2];_deed =_dgefc .Range [3];};if _ccbf < _aeaeb ||_ccbf > _deed {_dff .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_ccbf ,_aeaeb ,_deed );
return nil ,ErrColorOutOfRange ;};_dbdda :=NewPdfColorLab (_cdaae ,_daegf ,_ccbf );return _dbdda ,nil ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_eabae *DSS )GetContainingPdfObject ()_bcg .PdfObject {return _eabae ._aeaf };

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_egdeg *XObjectForm )GetContainingPdfObject ()_bcg .PdfObject {return _egdeg ._afdee };

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_bgac *Outline )ToPdfOutline ()*PdfOutline {_gbaaa :=NewPdfOutline ();var _cfgeg []*PdfOutlineItem ;var _bfegb int64 ;var _ceea *PdfOutlineItem ;for _ ,_bfcfa :=range _bgac .Entries {_aadcf ,_cfde :=_bfcfa .ToPdfOutlineItem ();_aadcf .Parent =&_gbaaa .PdfOutlineTreeNode ;
if _ceea !=nil {_ceea .Next =&_aadcf .PdfOutlineTreeNode ;_aadcf .Prev =&_ceea .PdfOutlineTreeNode ;};_cfgeg =append (_cfgeg ,_aadcf );_bfegb +=_cfde ;_ceea =_aadcf ;};_gfacb :=int64 (len (_cfgeg ));_bfegb +=_gfacb ;if _gfacb > 0{_gbaaa .First =&_cfgeg [0].PdfOutlineTreeNode ;
_gbaaa .Last =&_cfgeg [_gfacb -1].PdfOutlineTreeNode ;_gbaaa .Count =&_bfegb ;};return _gbaaa ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_dfce *_bcg .PdfIndirectObject ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_dee .File ,error ){const _bcfacc ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_acbae ,_deffg :=_dee .Open (pdfFile );if _deffg !=nil {return nil ,nil ,_deffg ;};_fgfca ,_deffg :=_bebbaf (_acbae ,opts ,true ,_bcfacc );if _deffg !=nil {_acbae .Close ();return nil ,nil ,_deffg ;};return _fgfca ,_acbae ,nil ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_dgge *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_bcd .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_cfdd ,_dccac :=_dca .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._aagba ,img ._agagd );if _dccac !=nil {return img ,_dccac ;};_agfe ,_dccac :=_dca .NRGBAConverter .Convert (_cfdd );
if _dccac !=nil {return img ,_dccac ;};_fdbcf :=_bgcbe (_agfe .Base ());_dff .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_dff .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );
_dff .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_fdbcf .Data );_dff .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_fdbcf );return _fdbcf ,nil ;};

// GetPdfVersion gets the version of the PDF used within this document.
func (_bfbba *PdfWriter )GetPdfVersion ()string {return _bfbba .getPdfVersion ()};func _aacbf (_ggdc *_bcg .PdfObjectStream )(*PdfFunctionType0 ,error ){_cfab :=&PdfFunctionType0 {};_cfab ._bcfad =_ggdc ;_gccac :=_ggdc .PdfObjectDictionary ;_fdcge ,_abdg :=_bcg .TraceToDirectObject (_gccac .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bcg .PdfObjectArray );
if !_abdg {_dff .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_bcd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _fdcge .Len ()< 0||_fdcge .Len ()%2!=0{_dff .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_bcd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_cfab .NumInputs =_fdcge .Len ()/2;_aced ,_bcbea :=_fdcge .ToFloat64Array ();if _bcbea !=nil {return nil ,_bcbea ;};_cfab .Domain =_aced ;_fdcge ,_abdg =_bcg .TraceToDirectObject (_gccac .Get ("\u0052\u0061\u006eg\u0065")).(*_bcg .PdfObjectArray );if !_abdg {_dff .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_bcd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _fdcge .Len ()< 0||_fdcge .Len ()%2!=0{return nil ,_bcd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_cfab .NumOutputs =_fdcge .Len ()/2;_edgc ,_bcbea :=_fdcge .ToFloat64Array ();if _bcbea !=nil {return nil ,_bcbea ;};_cfab .Range =_edgc ;_fdcge ,_abdg =_bcg .TraceToDirectObject (_gccac .Get ("\u0053\u0069\u007a\u0065")).(*_bcg .PdfObjectArray );if !_abdg {_dff .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_bcd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_eede ,_bcbea :=_fdcge .ToIntegerArray ();
if _bcbea !=nil {return nil ,_bcbea ;};if len (_eede )!=_cfab .NumInputs {_dff .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfab .Size =_eede ;_eabe ,_abdg :=_bcg .TraceToDirectObject (_gccac .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_bcg .PdfObjectInteger );
if !_abdg {_dff .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_bcd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_eabe !=1&&*_eabe !=2&&*_eabe !=4&&*_eabe !=8&&*_eabe !=12&&*_eabe !=16&&*_eabe !=24&&*_eabe !=32{_dff .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_eabe );
return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfab .BitsPerSample =int (*_eabe );_cfab .Order =1;_aaaea ,_abdg :=_bcg .TraceToDirectObject (_gccac .Get ("\u004f\u0072\u0064e\u0072")).(*_bcg .PdfObjectInteger );
if _abdg {if *_aaaea !=1&&*_aaaea !=3{_dff .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_aaaea );return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfab .Order =int (*_aaaea );
};_fdcge ,_abdg =_bcg .TraceToDirectObject (_gccac .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bcg .PdfObjectArray );if _abdg {_gabg ,_cdfga :=_fdcge .ToFloat64Array ();if _cdfga !=nil {return nil ,_cdfga ;};_cfab .Encode =_gabg ;};_fdcge ,_abdg =_bcg .TraceToDirectObject (_gccac .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_bcg .PdfObjectArray );
if _abdg {_cgaee ,_gdbce :=_fdcge .ToFloat64Array ();if _gdbce !=nil {return nil ,_gdbce ;};_cfab .Decode =_cgaee ;};_beeff ,_bcbea :=_bcg .DecodeStream (_ggdc );if _bcbea !=nil {return nil ,_bcbea ;};_cfab ._fbbdd =_beeff ;return _cfab ,nil ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_cgaaa :=&PdfFilespec {};_cgaaa ._baegd =_bcg .MakeIndirectObject (_bcg .MakeDict ());return _cgaaa ;};

// ToInteger convert to an integer format.
func (_fccec *PdfColorLab )ToInteger (bits int )[3]uint32 {_gadb :=_ab .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gadb *_fccec .L ()),uint32 (_gadb *_fccec .A ()),uint32 (_gadb *_fccec .B ())};};

// ToPdfObject returns a stream object.
func (_cebggc *XObjectForm )ToPdfObject ()_bcg .PdfObject {_egcae :=_cebggc ._afdee ;_eabed :=_egcae .PdfObjectDictionary ;if _cebggc .Filter !=nil {_eabed =_cebggc .Filter .MakeStreamDict ();_egcae .PdfObjectDictionary =_eabed ;};_eabed .Set ("\u0054\u0079\u0070\u0065",_bcg .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_eabed .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0046\u006f\u0072\u006d"));_eabed .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_cebggc .FormType );_eabed .SetIfNotNil ("\u0042\u0042\u006f\u0078",_cebggc .BBox );
_eabed .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_cebggc .Matrix );if _cebggc .Resources !=nil {_eabed .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_cebggc .Resources .ToPdfObject ());};_eabed .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_cebggc .Group );
_eabed .SetIfNotNil ("\u0052\u0065\u0066",_cebggc .Ref );_eabed .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_cebggc .MetaData );_eabed .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_cebggc .PieceInfo );_eabed .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_cebggc .LastModified );
_eabed .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_cebggc .StructParent );_eabed .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_cebggc .StructParents );_eabed .SetIfNotNil ("\u004f\u0050\u0049",_cebggc .OPI );
_eabed .SetIfNotNil ("\u004f\u0043",_cebggc .OC );_eabed .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cebggc .Name );_eabed .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bcg .MakeInteger (int64 (len (_cebggc .Stream ))));_egcae .Stream =_cebggc .Stream ;return _egcae ;
};

// B returns the value of the blue component of the color.
func (_dafg *PdfColorDeviceRGB )B ()float64 {return _dafg [2]};func (_fdad *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _bcg .PdfObject ;IsMap _bcg .PdfObject ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_gefbe *PdfOutlineTreeNode )GetContext ()PdfModel {if _ggbee ,_ddge :=_gefbe ._egdfd .(*PdfOutline );_ddge {return _ggbee ;};if _aebf ,_edabf :=_gefbe ._egdfd .(*PdfOutlineItem );_edabf {return _aebf ;};_dff .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_efba *PdfOutline )ToPdfObject ()_bcg .PdfObject {_afdfb :=_efba ._gega ;_dabgbg :=_afdfb .PdfObject .(*_bcg .PdfObjectDictionary );_dabgbg .Set ("\u0054\u0079\u0070\u0065",_bcg .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _efba .First !=nil {_dabgbg .Set ("\u0046\u0069\u0072s\u0074",_efba .First .ToPdfObject ());
};if _efba .Last !=nil {_dabgbg .Set ("\u004c\u0061\u0073\u0074",_efba .Last .GetContext ().GetContainingPdfObject ());};if _efba .Parent !=nil {_dabgbg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_efba .Parent .GetContext ().GetContainingPdfObject ());
};if _efba .Count !=nil {_dabgbg .Set ("\u0043\u006f\u0075n\u0074",_bcg .MakeInteger (*_efba .Count ));};return _afdfb ;};

// ToPdfObject implements model.PdfModel interface.
func (_bgabe *PdfOutputIntent )ToPdfObject ()_bcg .PdfObject {if _bgabe ._faec ==nil {_bgabe ._faec =_bcg .MakeDict ();};_abgc :=_bgabe ._faec ;if _bgabe .Type !=""{_abgc .Set ("\u0054\u0079\u0070\u0065",_bcg .MakeName (_bgabe .Type ));};_abgc .Set ("\u0053",_bcg .MakeName (_bgabe .S .String ()));
if _bgabe .OutputCondition !=""{_abgc .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_bcg .MakeString (_bgabe .OutputCondition ));};_abgc .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_bcg .MakeString (_bgabe .OutputConditionIdentifier ));
_abgc .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_bcg .MakeString (_bgabe .RegistryName ));if _bgabe .Info !=""{_abgc .Set ("\u0049\u006e\u0066\u006f",_bcg .MakeString (_bgabe .Info ));};if len (_bgabe .DestOutputProfile )!=0{_dgaae ,_aaed :=_bcg .MakeStream (_bgabe .DestOutputProfile ,_bcg .NewFlateEncoder ());
if _aaed !=nil {_dff .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_aaed );
};_dgaae .PdfObjectDictionary .Set ("\u004e",_bcg .MakeInteger (int64 (_bgabe .ColorComponents )));_affe :=make ([]float64 ,_bgabe .ColorComponents *2);for _cfegc :=0;_cfegc < _bgabe .ColorComponents *2;_cfegc ++{_edcf :=0.0;if _cfegc %2!=0{_edcf =1.0;
};_affe [_cfegc ]=_edcf ;};_dgaae .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_bcg .MakeArrayFromFloats (_affe ));_abgc .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_dgaae );};return _abgc ;
};

// ToPdfObject returns the PDF representation of the colorspace.
func (_dgfe *PdfColorspaceSpecialSeparation )ToPdfObject ()_bcg .PdfObject {_bbfb :=_bcg .MakeArray (_bcg .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_bbfb .Append (_dgfe .ColorantName );_bbfb .Append (_dgfe .AlternateSpace .ToPdfObject ());
_bbfb .Append (_dgfe .TintTransform .ToPdfObject ());if _dgfe ._fgce !=nil {_dgfe ._fgce .PdfObject =_bbfb ;return _dgfe ._fgce ;};return _bbfb ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_caaad *PdfPageResources )GetXObjectByName (keyName _bcg .PdfObjectName )(*_bcg .PdfObjectStream ,XObjectType ){if _caaad .XObject ==nil {return nil ,XObjectTypeUndefined ;};_fdaaeb ,_gdefb :=_bcg .TraceToDirectObject (_caaad .XObject ).(*_bcg .PdfObjectDictionary );
if !_gdefb {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bcg .TraceToDirectObject (_caaad .XObject ));
return nil ,XObjectTypeUndefined ;};if _efeeeb :=_fdaaeb .Get (keyName );_efeeeb !=nil {_effec ,_dgda :=_bcg .GetStream (_efeeeb );if !_dgda {_dff .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_efeeeb );
return nil ,XObjectTypeUndefined ;};_afaef :=_effec .PdfObjectDictionary ;_bdda ,_dgda :=_bcg .TraceToDirectObject (_afaef .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_bcg .PdfObjectName );if !_dgda {_dff .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_afaef .String ());
return nil ,XObjectTypeUndefined ;};if *_bdda =="\u0049\u006d\u0061g\u0065"{return _effec ,XObjectTypeImage ;}else if *_bdda =="\u0046\u006f\u0072\u006d"{return _effec ,XObjectTypeForm ;}else if *_bdda =="\u0050\u0053"{return _effec ,XObjectTypePS ;}else {_dff .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_bdda );
return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_gfaeg *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _gfaeg .Alternate ==nil {if _gfaeg .N ==1{_fdac :=NewPdfColorspaceDeviceGray ();return _fdac .ColorFromFloats (vals );}else if _gfaeg .N ==3{_bfab :=NewPdfColorspaceDeviceRGB ();
return _bfab .ColorFromFloats (vals );}else if _gfaeg .N ==4{_fadae :=NewPdfColorspaceDeviceCMYK ();return _fadae .ColorFromFloats (vals );}else {return nil ,_bcd .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _gfaeg .Alternate .ColorFromFloats (vals );};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_fdfe *PdfField )GetContainingPdfObject ()_bcg .PdfObject {return _fdfe ._bddgb };

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_aagba []byte ;_agagd []float64 ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_agged *_bcg .PdfIndirectObject ;_cdcfad *_bcg .PdfIndirectObject ;_cfccg map[_bcg .PdfObject ]struct{};_gbadec []_bcg .PdfObject ;_degdg map[_bcg .PdfObject ]struct{};_cbgga []*_bcg .PdfIndirectObject ;_edbec *PdfOutlineTreeNode ;
_gbfg *_bcg .PdfObjectDictionary ;_cfccb []_bcg .PdfObject ;_cbdd *_bcg .PdfIndirectObject ;_fbee *_bb .Writer ;_dacb int64 ;_efgdd error ;_ebfab *_bcg .PdfCrypt ;_faedg *_bcg .PdfObjectDictionary ;_eaadde *_bcg .PdfIndirectObject ;_cdfbd *_bcg .PdfObjectArray ;
_cbdba _bcg .Version ;_gcfceb *bool ;_gbcf map[_bcg .PdfObject ][]*_bcg .PdfObjectDictionary ;_fdbbb *PdfAcroForm ;_cfbgc Optimizer ;_dbda StandardApplier ;_caaea map[int ]crossReference ;_fagda int64 ;ObjNumOffset int ;_gaggd bool ;_afaff _bcg .XrefTable ;
_gdbdg int64 ;_edbde int64 ;_ebcg map[_bcg .PdfObject ]int64 ;_bdcg map[_bcg .PdfObject ]struct{};_egdef string ;_babgf []*PdfOutputIntent ;_ffac bool ;_dcadb ,_cdbg string ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _bcg .PdfObject ;Sy _bcg .PdfObject ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_ggee *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _ggee .Alternate ==nil {_dff .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _ggee .N ==1{_dff .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_fafdf :=NewPdfColorspaceDeviceGray ();return _fafdf .ImageToRGB (img );}else if _ggee .N ==3{_dff .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _ggee .N ==4{_dff .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_cbefb :=NewPdfColorspaceDeviceCMYK ();return _cbefb .ImageToRGB (img );}else {return img ,_bcd .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_dff .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_ggee );
_aba ,_efff :=_ggee .Alternate .ImageToRGB (img );_dff .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_dff .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_aba );
return _aba ,_efff ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_bcec *PdfFieldButton )IsRadio ()bool {return _bcec .GetType ()==ButtonTypeRadio };

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_bcg .PdfIndirectObject )*PdfOutlineItem {_eecfb :=PdfOutlineItem {};_eecfb ._egdfd =&_eecfb ;_eecfb .Title =_bcg .MakeString (title );_dafc :=_bcg .MakeArray ();_dafc .Append (page );_dafc .Append (_bcg .MakeName ("\u0046\u0069\u0074"));
_eecfb .Dest =_dafc ;return &_eecfb ;};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_faec *_bcg .PdfObjectDictionary ;};

// C returns the value of the C component of the color.
func (_fbe *PdfColorCalRGB )C ()float64 {return _fbe [2]};func _egcd (_gcce *_bcg .PdfObjectDictionary ,_cdga *fontCommon ,_aacf _bf .TextEncoder )(*pdfFontSimple ,error ){_abcef :=_gffc (_cdga );_abcef ._eaaafb =_aacf ;if _aacf ==nil {_dbee :=_gcce .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");
if _dbee ==nil {_dbee =_bcg .MakeInteger (0);};_abcef .FirstChar =_dbee ;_fafdg ,_cdaag :=_bcg .GetIntVal (_dbee );if !_cdaag {_dff .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_dbee );
return nil ,_bcg .ErrTypeError ;};_fegdg :=_bf .CharCode (_fafdg );_dbee =_gcce .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _dbee ==nil {_dbee =_bcg .MakeInteger (255);};_abcef .LastChar =_dbee ;_fafdg ,_cdaag =_bcg .GetIntVal (_dbee );
if !_cdaag {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_dbee );return nil ,_bcg .ErrTypeError ;
};_bcgb :=_bf .CharCode (_fafdg );_abcef ._ffgef =make (map[_bf .CharCode ]float64 );_dbee =_gcce .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _dbee !=nil {_abcef .Widths =_dbee ;_dfbb ,_gbgfg :=_bcg .GetArray (_dbee );if !_gbgfg {_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_dbee );
return nil ,_bcg .ErrTypeError ;};_debf ,_aedc :=_dfbb .ToFloat64Array ();if _aedc !=nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_aedc ;};if len (_debf )!=int (_bcgb -_fegdg +1){_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_bcgb -_fegdg +1,len (_debf ));
return nil ,_bcg .ErrRangeError ;};for _edaa ,_bgddg :=range _debf {_abcef ._ffgef [_fegdg +_bf .CharCode (_edaa )]=_bgddg ;};};};_abcef .Encoding =_bcg .TraceToDirectObject (_gcce .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _abcef ,nil ;
};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_bcg .PdfObjectArray ;_bcee *Image ;};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;);func (_aabgd *PdfWriter )copyObjects (){_bbcee :=make (map[_bcg .PdfObject ]_bcg .PdfObject );
_fedd :=make ([]_bcg .PdfObject ,0,len (_aabgd ._gbadec ));_cccag :=make (map[_bcg .PdfObject ]struct{},len (_aabgd ._gbadec ));_gdgaf :=make (map[_bcg .PdfObject ]struct{});for _ ,_agfg :=range _aabgd ._gbadec {_fbbgf :=_aabgd .copyObject (_agfg ,_bbcee ,_gdgaf ,false );
if _ ,_eaecd :=_gdgaf [_agfg ];_eaecd {continue ;};_fedd =append (_fedd ,_fbbgf );_cccag [_fbbgf ]=struct{}{};};_aabgd ._gbadec =_fedd ;_aabgd ._degdg =_cccag ;_aabgd ._cbdd =_aabgd .copyObject (_aabgd ._cbdd ,_bbcee ,nil ,false ).(*_bcg .PdfIndirectObject );
_aabgd ._agged =_aabgd .copyObject (_aabgd ._agged ,_bbcee ,nil ,false ).(*_bcg .PdfIndirectObject );if _aabgd ._eaadde !=nil {_aabgd ._eaadde =_aabgd .copyObject (_aabgd ._eaadde ,_bbcee ,nil ,false ).(*_bcg .PdfIndirectObject );};if _aabgd ._gaggd {_dgdfd :=make (map[_bcg .PdfObject ]int64 );
for _gbfcg ,_cafeae :=range _aabgd ._ebcg {if _bdbdaf ,_caedag :=_bbcee [_gbfcg ];_caedag {_dgdfd [_bdbdaf ]=_cafeae ;}else {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_aabgd ._ebcg =_dgdfd ;};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fedbd *PdfShadingType7 )ToPdfObject ()_bcg .PdfObject {_fedbd .PdfShading .ToPdfObject ();_bdfba ,_daeec :=_fedbd .getShadingDict ();if _daeec !=nil {_dff .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _fedbd .BitsPerCoordinate !=nil {_bdfba .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_fedbd .BitsPerCoordinate );};if _fedbd .BitsPerComponent !=nil {_bdfba .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_fedbd .BitsPerComponent );
};if _fedbd .BitsPerFlag !=nil {_bdfba .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_fedbd .BitsPerFlag );};if _fedbd .Decode !=nil {_bdfba .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_fedbd .Decode );};if _fedbd .Function !=nil {if len (_fedbd .Function )==1{_bdfba .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fedbd .Function [0].ToPdfObject ());
}else {_eabfd :=_bcg .MakeArray ();for _ ,_acefe :=range _fedbd .Function {_eabfd .Append (_acefe .ToPdfObject ());};_bdfba .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eabfd );};};return _fedbd ._cdefff ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_efddg DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_addb *PdfColorspaceICCBased )ToPdfObject ()_bcg .PdfObject {_bdbgc :=&_bcg .PdfObjectArray {};_bdbgc .Append (_bcg .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _edagb *_bcg .PdfObjectStream ;if _addb ._fcde !=nil {_edagb =_addb ._fcde ;
}else {_edagb =&_bcg .PdfObjectStream {};};_afecc :=_bcg .MakeDict ();_afecc .Set ("\u004e",_bcg .MakeInteger (int64 (_addb .N )));if _addb .Alternate !=nil {_afecc .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_addb .Alternate .ToPdfObject ());
};if _addb .Metadata !=nil {_afecc .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_addb .Metadata );};if _addb .Range !=nil {var _cbgb []_bcg .PdfObject ;for _ ,_bbef :=range _addb .Range {_cbgb =append (_cbgb ,_bcg .MakeFloat (_bbef ));};_afecc .Set ("\u0052\u0061\u006eg\u0065",_bcg .MakeArray (_cbgb ...));
};_afecc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bcg .MakeInteger (int64 (len (_addb .Data ))));_edagb .Stream =_addb .Data ;_edagb .PdfObjectDictionary =_afecc ;_bdbgc .Append (_edagb );if _addb ._bbebd !=nil {_addb ._bbebd .PdfObject =_bdbgc ;return _addb ._bbebd ;
};return _bdbgc ;};func (_bege *PdfAppender )updateObjectsDeep (_gcca _bcg .PdfObject ,_dcaeff map[_bcg .PdfObject ]struct{}){if _dcaeff ==nil {_dcaeff =map[_bcg .PdfObject ]struct{}{};};if _ ,_adfg :=_dcaeff [_gcca ];_adfg ||_gcca ==nil {return ;};_dcaeff [_gcca ]=struct{}{};
_daeg :=_bcg .ResolveReferencesDeep (_gcca ,_bege ._ecb );if _daeg !=nil {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_daeg );};switch _ebdc :=_gcca .(type ){case *_bcg .PdfIndirectObject :switch {case _ebdc .GetParser ()==_bege ._cgdd ._eadaf :return ;
case _ebdc .GetParser ()==_bege .Reader ._eadaf :_accad ,_ :=_bege ._cgdd .GetIndirectObjectByNumber (int (_ebdc .ObjectNumber ));_dfaa ,_effa :=_accad .(*_bcg .PdfIndirectObject );if _effa &&_dfaa !=nil {if _dfaa .PdfObject !=_ebdc .PdfObject &&_dfaa .PdfObject .WriteString ()!=_ebdc .PdfObject .WriteString (){_bege .addNewObject (_gcca );
_bege ._feab [_gcca ]=_ebdc .ObjectNumber ;};};default:_bege .addNewObject (_gcca );};_bege .updateObjectsDeep (_ebdc .PdfObject ,_dcaeff );case *_bcg .PdfObjectArray :for _ ,_ggf :=range _ebdc .Elements (){_bege .updateObjectsDeep (_ggf ,_dcaeff );};case *_bcg .PdfObjectDictionary :for _ ,_adfd :=range _ebdc .Keys (){_bege .updateObjectsDeep (_ebdc .Get (_adfd ),_dcaeff );
};case *_bcg .PdfObjectStreams :if _ebdc .GetParser ()!=_bege ._cgdd ._eadaf {for _ ,_egaed :=range _ebdc .Elements (){_bege .updateObjectsDeep (_egaed ,_dcaeff );};};case *_bcg .PdfObjectStream :switch {case _ebdc .GetParser ()==_bege ._cgdd ._eadaf :return ;
case _ebdc .GetParser ()==_bege .Reader ._eadaf :if _ccfg ,_ccff :=_bege ._cgdd ._eadaf .LookupByReference (_ebdc .PdfObjectReference );_ccff ==nil {var _ffda bool ;if _dace ,_dbcg :=_bcg .GetStream (_ccfg );_dbcg &&_gg .Equal (_dace .Stream ,_ebdc .Stream ){_ffda =true ;
};if _cefba ,_fbda :=_bcg .GetDict (_ccfg );_ffda &&_fbda {_ffda =_cefba .WriteString ()==_ebdc .PdfObjectDictionary .WriteString ();};if _ffda {return ;};};if _ebdc .ObjectNumber !=0{_bege ._feab [_gcca ]=_ebdc .ObjectNumber ;};default:if _ ,_dfbg :=_bege ._dcceg [_gcca ];
!_dfbg {_bege .addNewObject (_gcca );};};_bege .updateObjectsDeep (_ebdc .PdfObjectDictionary ,_dcaeff );};};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_ddfg *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_cfbdf *LTV )Enable (sig *PdfSignature ,extraCerts []*_ag .Certificate )error {if _eagdg :=_cfbdf .validateSig (sig );_eagdg !=nil {return _eagdg ;};_cgcfd ,_daddf :=_cfbdf .generateVRIKey (sig );if _daddf !=nil {return _daddf ;};if _ ,_edfe :=_cfbdf ._abbf .VRI [_cgcfd ];
_edfe &&_cfbdf .SkipExisting {return nil ;};_fdcbf ,_daddf :=sig .GetCerts ();if _daddf !=nil {return _daddf ;};return _cfbdf .enable (_fdcbf ,extraCerts ,_cgcfd );};func _adbece ()string {_dgea .Lock ();defer _dgea .Unlock ();return _bgcfg };

// Width returns the width of `rect`.
func (_acde *PdfRectangle )Width ()float64 {return _ab .Abs (_acde .Urx -_acde .Llx )};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_aeac *PdfColorCalRGB )GetNumComponents ()int {return 3};

// String returns a string representation of the field.
func (_geag *PdfField )String ()string {if _bded ,_fgae :=_geag .ToPdfObject ().(*_bcg .PdfIndirectObject );_fgae {return _g .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_geag ._bage ,_bded .PdfObject .String ());};return "";};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_fbbdd []byte ;_aggf []uint32 ;_bcfad *_bcg .PdfObjectStream ;};func (_gdgda *PdfReader )buildNameNodes (_fffbe *_bcg .PdfIndirectObject ,_gcacf map[_bcg .PdfObject ]struct{})error {if _fffbe ==nil {return nil ;
};if _ ,_fdbbe :=_gcacf [_fffbe ];_fdbbe {_dff .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_fffbe .ObjectNumber );
return nil ;};_gcacf [_fffbe ]=struct{}{};_fbgce ,_cbcbf :=_fffbe .PdfObject .(*_bcg .PdfObjectDictionary );if !_cbcbf {return _bcd .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _gabga ,_ffcfg :=_bcg .GetDict (_fbgce .Get ("\u0044\u0065\u0073t\u0073"));
_ffcfg {_aacfd ,_aacdc :=_bcg .GetArray (_gabga .Get ("\u004b\u0069\u0064\u0073"));if !_aacdc {return _bcd .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_dff .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_aacfd );
for _abbfa ,_gebfe :=range _aacfd .Elements (){_aacbb ,_gggg :=_bcg .GetIndirect (_gebfe );if !_gggg {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_aacbb );
return _bcd .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_aacfd .Set (_abbfa ,_aacbb );_dffag :=_gdgda .buildNameNodes (_aacbb ,_gcacf );if _dffag !=nil {return _dffag ;
};};};if _abfac ,_ceddf :=_bcg .GetDict (_fbgce );_ceddf {if !_bcg .IsNullObject (_abfac .Get ("\u004b\u0069\u0064\u0073")){if _eaaca ,_ffbea :=_bcg .GetArray (_abfac .Get ("\u004b\u0069\u0064\u0073"));_ffbea {for _debdf ,_ebgd :=range _eaaca .Elements (){if _faacb ,_edeeb :=_bcg .GetIndirect (_ebgd );
_edeeb {_eaaca .Set (_debdf ,_faacb );_acgec :=_gdgda .buildNameNodes (_faacb ,_gcacf );if _acgec !=nil {return _acgec ;};};};};};};return nil ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bcg .PdfObject ;};func _bacgd (_dfbd *_bcg .PdfObjectDictionary ,_fgfc *fontCommon )(*pdfCIDFontType2 ,error ){if _fgfc ._cfeef !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_dff .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_fgfc );
return nil ,_bcg .ErrRangeError ;};_efacg :=_becaa (_fgfc );_befag ,_acdcdc :=_bcg .GetDict (_dfbd .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_acdcdc {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_fgfc );
return nil ,ErrRequiredAttributeMissing ;};_efacg .CIDSystemInfo =_befag ;_efacg .DW =_dfbd .Get ("\u0044\u0057");_efacg .W =_dfbd .Get ("\u0057");_efacg .DW2 =_dfbd .Get ("\u0044\u0057\u0032");_efacg .W2 =_dfbd .Get ("\u0057\u0032");_efacg .CIDToGIDMap =_dfbd .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_efacg ._ggceb =1000.0;if _eaab ,_gcag :=_bcg .GetNumberAsFloat (_efacg .DW );_gcag ==nil {_efacg ._ggceb =_eaab ;};_gegc ,_egagb :=_cgfeb (_efacg .W );if _egagb !=nil {return nil ,_egagb ;};if _gegc ==nil {_gegc =map[_bf .CharCode ]float64 {};};_efacg ._geegd =_gegc ;
return _efacg ,nil ;};func _cacf (_adgda *_bcg .PdfObjectDictionary )(*PdfShadingType2 ,error ){_bdeca :=PdfShadingType2 {};_cfadg :=_adgda .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _cfadg ==nil {_dff .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_ebaff ,_bfbg :=_cfadg .(*_bcg .PdfObjectArray );if !_bfbg {_dff .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cfadg );
return nil ,_bcd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _ebaff .Len ()!=4{_dff .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_ebaff .Len ());
return nil ,_bcd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_bdeca .Coords =_ebaff ;if _dgaea :=_adgda .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_dgaea !=nil {_dgaea =_bcg .TraceToDirectObject (_dgaea );
_afegb ,_ggeb :=_dgaea .(*_bcg .PdfObjectArray );if !_ggeb {_dff .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dgaea );return nil ,_bcd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bdeca .Domain =_afegb ;};_cfadg =_adgda .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _cfadg ==nil {_dff .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_bdeca .Function =[]PdfFunction {};if _eage ,_debbd :=_cfadg .(*_bcg .PdfObjectArray );_debbd {for _ ,_aaegd :=range _eage .Elements (){_cfdaed ,_bddda :=_bdgfe (_aaegd );if _bddda !=nil {_dff .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bddda );
return nil ,_bddda ;};_bdeca .Function =append (_bdeca .Function ,_cfdaed );};}else {_caafg ,_gbbf :=_bdgfe (_cfadg );if _gbbf !=nil {_dff .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gbbf );
return nil ,_gbbf ;};_bdeca .Function =append (_bdeca .Function ,_caafg );};if _bbaef :=_adgda .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_bbaef !=nil {_bbaef =_bcg .TraceToDirectObject (_bbaef );_aeeae ,_acecb :=_bbaef .(*_bcg .PdfObjectArray );if !_acecb {_dff .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bbaef );
return nil ,_bcg .ErrTypeError ;};if _aeeae .Len ()!=2{_dff .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_aeeae .Len ());return nil ,ErrInvalidAttribute ;
};_bdeca .Extend =_aeeae ;};return &_bdeca ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_eeabe *PdfAnnotationSound )ToPdfObject ()_bcg .PdfObject {_eeabe .PdfAnnotation .ToPdfObject ();_ebfa :=_eeabe ._cbe ;_aeeg :=_ebfa .PdfObject .(*_bcg .PdfObjectDictionary );_eeabe .PdfAnnotationMarkup .appendToPdfDictionary (_aeeg );_aeeg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0053\u006f\u0075n\u0064"));
_aeeg .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_eeabe .Sound );_aeeg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eeabe .Name );return _ebfa ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_dggag *PdfField )SetContext (ctx PdfModel ){_dggag ._bage =ctx };

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_gegfdc *PdfPageResources )GetFontByName (keyName _bcg .PdfObjectName )(_bcg .PdfObject ,bool ){if _gegfdc .Font ==nil {return nil ,false ;};_cgadc ,_cebfa :=_bcg .TraceToDirectObject (_gegfdc .Font ).(*_bcg .PdfObjectDictionary );if !_cebfa {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bcg .TraceToDirectObject (_gegfdc .Font ));
return nil ,false ;};if _fageb :=_cgadc .Get (keyName );_fageb !=nil {return _fageb ,true ;};return nil ,false ;};

// MergePageWith appends page content to source Pdf file page content.
func (_abfd *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_bge :=pageNum -1;var _cgaa *PdfPage ;for _bcdb ,_cadf :=range _abfd ._dbc {if _bcdb ==_bge {_cgaa =_cadf ;};};if _cgaa ==nil {return _g .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _cgaa ._ddfd !=nil &&_cgaa ._ddfd .GetParser ()==_abfd ._cgdd ._eadaf {_cgaa =_cgaa .Duplicate ();_abfd ._dbc [_bge ]=_cgaa ;};page =page .Duplicate ();_dccdb (page );_dec :=_ace (_cgaa );_efca :=_ace (page );_bfgb :=make (map[_bcg .PdfObjectName ]_bcg .PdfObjectName );
for _gbge :=range _efca {if _ ,_efdd :=_dec [_gbge ];_efdd {for _afcd :=1;true ;_afcd ++{_gcab :=_bcg .PdfObjectName (string (_gbge )+_bce .Itoa (_afcd ));if _ ,_cabc :=_dec [_gcab ];!_cabc {_bfgb [_gbge ]=_gcab ;break ;};};};};_eag ,_cbdf :=page .GetContentStreams ();
if _cbdf !=nil {return _cbdf ;};_afde ,_cbdf :=_cgaa .GetContentStreams ();if _cbdf !=nil {return _cbdf ;};for _ecaa ,_efeg :=range _eag {for _dafb ,_dbcc :=range _bfgb {_efeg =_ce .Replace (_efeg ,"\u002f"+string (_dafb ),"\u002f"+string (_dbcc ),-1);
};_eag [_ecaa ]=_efeg ;};_afde =append (_afde ,_eag ...);if _bggd :=_cgaa .SetContentStreams (_afde ,_bcg .NewFlateEncoder ());_bggd !=nil {return _bggd ;};_cgaa ._addea =append (_cgaa ._addea ,page ._addea ...);if _cgaa .Resources ==nil {_cgaa .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_cgaa .Resources .Font =_abfd .mergeResources (_cgaa .Resources .Font ,page .Resources .Font ,_bfgb );_cgaa .Resources .XObject =_abfd .mergeResources (_cgaa .Resources .XObject ,page .Resources .XObject ,_bfgb );_cgaa .Resources .Properties =_abfd .mergeResources (_cgaa .Resources .Properties ,page .Resources .Properties ,_bfgb );
if _cgaa .Resources .ProcSet ==nil {_cgaa .Resources .ProcSet =page .Resources .ProcSet ;};_cgaa .Resources .Shading =_abfd .mergeResources (_cgaa .Resources .Shading ,page .Resources .Shading ,_bfgb );_cgaa .Resources .ExtGState =_abfd .mergeResources (_cgaa .Resources .ExtGState ,page .Resources .ExtGState ,_bfgb );
};_gbgc ,_cbdf :=_cgaa .GetMediaBox ();if _cbdf !=nil {return _cbdf ;};_bggdb ,_cbdf :=page .GetMediaBox ();if _cbdf !=nil {return _cbdf ;};var _ecfd bool ;if _gbgc .Llx > _bggdb .Llx {_gbgc .Llx =_bggdb .Llx ;_ecfd =true ;};if _gbgc .Lly > _bggdb .Lly {_gbgc .Lly =_bggdb .Lly ;
_ecfd =true ;};if _gbgc .Urx < _bggdb .Urx {_gbgc .Urx =_bggdb .Urx ;_ecfd =true ;};if _gbgc .Ury < _bggdb .Ury {_gbgc .Ury =_bggdb .Ury ;_ecfd =true ;};if _ecfd {_cgaa .MediaBox =_gbgc ;};return nil ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_dga .PSProgram ;_bbdfb *_dga .PSExecutor ;_bdbb []byte ;_gebfc *_bcg .PdfObjectStream ;};func _cbba (_cefga *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_geegc ,_fcgfe :=_bcg .GetDict (_cefga .AP );
if !_fcgfe {return nil ,nil ,_bcd .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _geegc ==nil {return nil ,nil ,nil ;};_gdbc ,_fcgfe :=_bcg .GetArray (_cefga .Rect );
if !_fcgfe ||_gdbc .Len ()!=4{return nil ,nil ,_bcd .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_bccd ,_fbeg :=NewPdfRectangle (*_gdbc );if _fbeg !=nil {return nil ,nil ,_fbeg ;};_badg :=_bcg .TraceToDirectObject (_geegc .Get ("\u004e"));
switch _fcae :=_badg .(type ){case *_bcg .PdfObjectStream :_efa :=_fcae ;_caadf ,_egbde :=NewXObjectFormFromStream (_efa );return _caadf ,_bccd ,_egbde ;case *_bcg .PdfObjectDictionary :_fdgc :=_fcae ;_dggd ,_cgbed :=_bcg .GetName (_cefga .AS );if !_cgbed {return nil ,nil ,nil ;
};if _fdgc .Get (*_dggd )==nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_bdef ,_cgbed :=_bcg .GetStream (_fdgc .Get (*_dggd ));if !_cgbed {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_dggd );
return nil ,nil ,_bcd .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_dcgf ,_cfeac :=NewXObjectFormFromStream (_bdef );return _dcgf ,_bccd ,_cfeac ;};_dff .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_badg );
return nil ,nil ,_bcd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};func (_fdecd *DSS )add (_gdbg *[]*_bcg .PdfObjectStream ,_bcfg map[string ]*_bcg .PdfObjectStream ,_ccfgc [][]byte )([]*_bcg .PdfObjectStream ,error ){_daaa :=make ([]*_bcg .PdfObjectStream ,0,len (_ccfgc ));
for _ ,_dfac :=range _ccfgc {_dfgaa ,_abca :=_bccc (_dfac );if _abca !=nil {return nil ,_abca ;};_fbag ,_edce :=_bcfg [string (_dfgaa )];if !_edce {_fbag ,_abca =_bcg .MakeStream (_dfac ,_bcg .NewRawEncoder ());if _abca !=nil {return nil ,_abca ;};_bcfg [string (_dfgaa )]=_fbag ;
*_gdbg =append (*_gdbg ,_fbag );};_daaa =append (_daaa ,_fbag );};return _daaa ,nil ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_defa *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_bafbg :=RC4_128bit ;if options !=nil {_bafbg =options .Algorithm ;};_cgbc :=_fe .PermOwner ;if options !=nil {_cgbc =options .Permissions ;};var _cgabe _ece .Filter ;
switch _bafbg {case RC4_128bit :_cgabe =_ece .NewFilterV2 (16);case AES_128bit :_cgabe =_ece .NewFilterAESV2 ();case AES_256bit :_cgabe =_ece .NewFilterAESV3 ();default:return _g .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_efgbb ,_cbgbc ,_gcaac :=_bcg .PdfCryptNewEncrypt (_cgabe ,userPass ,ownerPass ,_cgbc );if _gcaac !=nil {return _gcaac ;};_defa ._ebfab =_efgbb ;if _cbgbc .Major !=0{_defa .SetVersion (_cbgbc .Major ,_cbgbc .Minor );};_defa ._faedg =_cbgbc .Encrypt ;
_defa ._dcadb ,_defa ._cdbg =_cbgbc .ID0 ,_cbgbc .ID1 ;_eegdf :=_bcg .MakeIndirectObject (_cbgbc .Encrypt );_defa ._eaadde =_eegdf ;_defa .addObject (_eegdf );return nil ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_fdcfe *PdfRectangle )Normalize (){if _fdcfe .Llx > _fdcfe .Urx {_fdcfe .Llx ,_fdcfe .Urx =_fdcfe .Urx ,_fdcfe .Llx ;};if _fdcfe .Lly > _fdcfe .Ury {_fdcfe .Lly ,_fdcfe .Ury =_fdcfe .Ury ,_fdcfe .Lly ;};};

// AllFields returns a flattened list of all fields in the form.
func (_befc *PdfAcroForm )AllFields ()[]*PdfField {if _befc ==nil {return nil ;};var _gbgfc []*PdfField ;if _befc .Fields !=nil {for _ ,_gdfed :=range *_befc .Fields {_gbgfc =append (_gbgfc ,_bfbbb (_gdfed )...);};};return _gbgfc ;};func _aagef (_cecgb *_bcg .PdfObjectArray )(float64 ,error ){_caecbe ,_cgeaff :=_cecgb .ToFloat64Array ();
if _cgeaff !=nil {_dff .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cecgb ,_cgeaff );};switch len (_caecbe ){case 1:return _caecbe [0],nil ;
case 3:_bcfgeg :=PdfColorspaceDeviceRGB {};_aeddd ,_dgabf :=_bcfgeg .ColorFromFloats (_caecbe );if _dgabf !=nil {return 0.0,_dgabf ;};return _aeddd .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_aabcag :=PdfColorspaceDeviceCMYK {};_aegef ,_degac :=_aabcag .ColorFromFloats (_caecbe );
if _degac !=nil {return 0.0,_degac ;};_gebgd ,_degac :=_aabcag .ColorToRGB (_aegef .(*PdfColorDeviceCMYK ));if _degac !=nil {return 0.0,_degac ;};return _gebgd .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_cgeaff =_bcd .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");
_dff .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cecgb ,_cgeaff );return 0.0,_cgeaff ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_aebcd *PdfPageResources )GetXObjectImageByName (keyName _bcg .PdfObjectName )(*XObjectImage ,error ){_bdgc ,_ffedf :=_aebcd .GetXObjectByName (keyName );if _bdgc ==nil {return nil ,nil ;};if _ffedf !=XObjectTypeImage {return nil ,_bcd .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_cggbg ,_eeef :=NewXObjectImageFromStream (_bdgc );if _eeef !=nil {return nil ,_eeef ;};return _cggbg ,nil ;};func _edfccf (_eadddg _bcg .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_dff .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_eadddg .String (),_eadddg );
_aaef :=NewPdfColorspaceSpecialPattern ();if _bdad ,_efdf :=_eadddg .(*_bcg .PdfIndirectObject );_efdf {_aaef ._fcaf =_bdad ;};_eadddg =_bcg .TraceToDirectObject (_eadddg );if _fdef ,_dfffg :=_eadddg .(*_bcg .PdfObjectName );_dfffg {if *_fdef !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_g .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _aaef ,nil ;};_bcac ,_adagg :=_eadddg .(*_bcg .PdfObjectArray );if !_adagg {_dff .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_eadddg );
return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _bcac .Len ()!=1&&_bcac .Len ()!=2{_dff .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_bcac );
return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_eadddg =_bcac .Get (0);if _agea ,_fgdgd :=_eadddg .(*_bcg .PdfObjectName );_fgdgd {if *_agea !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_dff .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_agea );
return nil ,_g .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _bcac .Len ()> 1{_eadddg =_bcac .Get (1);_eadddg =_bcg .TraceToDirectObject (_eadddg );_dcag ,_bcdf :=NewPdfColorspaceFromPdfObject (_eadddg );if _bcdf !=nil {return nil ,_bcdf ;
};_aaef .UnderlyingCS =_dcag ;};_dff .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_aaef .UnderlyingCS );
return _aaef ,nil ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_cgege *XObjectImage )SetFilter (encoder _bcg .StreamEncoder )error {_ccfec :=_cgege .Stream ;_fdbac ,_dbeaa :=_cgege .Filter .DecodeBytes (_ccfec );if _dbeaa !=nil {return _dbeaa ;};_cgege .Filter =encoder ;encoder .UpdateParams (_cgege .getParamsDict ());
_ccfec ,_dbeaa =encoder .EncodeBytes (_fdbac );if _dbeaa !=nil {return _dbeaa ;};_cgege .Stream =_ccfec ;return nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_fdge *pdfFontType3 )ToPdfObject ()_bcg .PdfObject {if _fdge ._aafb ==nil {_fdge ._aafb =&_bcg .PdfIndirectObject {};};_aefde :=_fdge .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_fdge ._aafb .PdfObject =_aefde ;if _fdge .FirstChar !=nil {_aefde .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_fdge .FirstChar );
};if _fdge .LastChar !=nil {_aefde .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_fdge .LastChar );};if _fdge .Widths !=nil {_aefde .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_fdge .Widths );};if _fdge .Encoding !=nil {_aefde .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fdge .Encoding );
}else if _fdge ._fgbdc !=nil {_ebedc :=_fdge ._fgbdc .ToPdfObject ();if _ebedc !=nil {_aefde .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ebedc );};};if _fdge .FontBBox !=nil {_aefde .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_fdge .FontBBox );
};if _fdge .FontMatrix !=nil {_aefde .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_fdge .FontMatrix );};if _fdge .CharProcs !=nil {_aefde .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_fdge .CharProcs );};if _fdge .Resources !=nil {_aefde .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_fdge .Resources );
};return _fdge ._aafb ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_eeceb *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_baeba :=vals [0];if _baeba < 0.0||_baeba > 1.0{_dff .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _baeba < 0.0{_baeba =0.0;}else if _baeba > 1.0{_baeba =1.0;};return NewPdfColorDeviceGray (_baeba ),nil ;};func (_cad *PdfReader )loadAction (_fdbc _bcg .PdfObject )(*PdfAction ,error ){if _eccb ,_gaaec :=_bcg .GetIndirect (_fdbc );_gaaec {_cbef ,_bef :=_cad .newPdfActionFromIndirectObject (_eccb );
if _bef !=nil {return nil ,_bef ;};return _cbef ,nil ;}else if !_bcg .IsNullObject (_fdbc ){return nil ,_bcd .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_fgba *PdfAnnotation )GetContext ()PdfModel {if _fgba ==nil {return nil ;};return _fgba ._cge ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _dg .ReadSeeker )(*PdfReader ,error ){const _eadcb ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _bebbaf (rs ,&ReaderOpts {LazyLoad :true },false ,_eadcb );
};

// ToPdfObject implements interface PdfModel.
func (_ebee *PdfAnnotationSquare )ToPdfObject ()_bcg .PdfObject {_ebee .PdfAnnotation .ToPdfObject ();_faba :=_ebee ._cbe ;_aaad :=_faba .PdfObject .(*_bcg .PdfObjectDictionary );if _ebee .PdfAnnotationMarkup !=nil {_ebee .PdfAnnotationMarkup .appendToPdfDictionary (_aaad );
};_aaad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_aaad .SetIfNotNil ("\u0042\u0053",_ebee .BS );_aaad .SetIfNotNil ("\u0049\u0043",_ebee .IC );_aaad .SetIfNotNil ("\u0042\u0045",_ebee .BE );
_aaad .SetIfNotNil ("\u0052\u0044",_ebee .RD );return _faba ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_bdcgd *PdfWriter )SetOptimizer (optimizer Optimizer ){_bdcgd ._cfbgc =optimizer };

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_fdaa :=PdfColorLab {l ,a ,b };return &_fdaa };

// GetCharMetrics returns the char metrics for character code `code`.
func (_fgbe pdfFontType3 )GetCharMetrics (code _bf .CharCode )(_dgb .CharMetrics ,bool ){if _acgb ,_decd :=_fgbe ._dcfc [code ];_decd {return _dgb .CharMetrics {Wx :_acgb },true ;};if _dgb .IsStdFont (_dgb .StdFontName (_fgbe ._aafc )){return _dgb .CharMetrics {Wx :250},true ;
};return _dgb .CharMetrics {},false ;};func (_gaac *LTV )getOCSPs (_dacc []*_ag .Certificate ,_fecba map[string ]*_ag .Certificate )([][]byte ,error ){_cgcaf :=make ([][]byte ,0,len (_dacc ));for _ ,_bfbbf :=range _dacc {for _ ,_cdeed :=range _bfbbf .OCSPServer {if _gaac .CertClient .IsCA (_bfbbf ){continue ;
};_ggeec ,_becba :=_fecba [_bfbbf .Issuer .CommonName ];if !_becba {_dff .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_bdcfe ,_fccecg :=_gaac .OCSPClient .MakeRequest (_cdeed ,_bfbbf ,_ggeec );if _fccecg !=nil {_dff .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_fccecg );
continue ;};_cgcaf =append (_cgcaf ,_bdcfe );};};return _cgcaf ,nil ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_fggc :=NewPdfAnnotation ();_cgaf :=&PdfAnnotationProjection {};_cgaf .PdfAnnotation =_fggc ;_cgaf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fggc .SetContext (_cgaf );return _cgaf ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _bcg .PdfObject ;FS _bcg .PdfObject ;F _bcg .PdfObject ;UF _bcg .PdfObject ;DOS _bcg .PdfObject ;Mac _bcg .PdfObject ;Unix _bcg .PdfObject ;ID _bcg .PdfObject ;V _bcg .PdfObject ;EF _bcg .PdfObject ;RF _bcg .PdfObject ;Desc _bcg .PdfObject ;
CI _bcg .PdfObject ;_baegd _bcg .PdfObject ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _dg .ReadSeeker )(*PdfReader ,error ){const _dadf ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _bebbaf (rs ,&ReaderOpts {},false ,_dadf );};func _bafg (_cfbfe *_bcg .PdfObjectDictionary )(*PdfFieldChoice ,error ){_dfdf :=&PdfFieldChoice {};
_dfdf .Opt ,_ =_bcg .GetArray (_cfbfe .Get ("\u004f\u0070\u0074"));_dfdf .TI ,_ =_bcg .GetInt (_cfbfe .Get ("\u0054\u0049"));_dfdf .I ,_ =_bcg .GetArray (_cfbfe .Get ("\u0049"));return _dfdf ,nil ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_cdaa *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// SetFillImage attach a model.Image to push button.
func (_cedb *PdfFieldButton )SetFillImage (image *Image ){if _cedb .IsPush (){_cedb ._bcee =image ;};};

// ToPdfObject implements interface PdfModel.
func (_eece *PdfAnnotation3D )ToPdfObject ()_bcg .PdfObject {_eece .PdfAnnotation .ToPdfObject ();_ceec :=_eece ._cbe ;_cgggf :=_ceec .PdfObject .(*_bcg .PdfObjectDictionary );_cgggf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0033\u0044"));
_cgggf .SetIfNotNil ("\u0033\u0044\u0044",_eece .T3DD );_cgggf .SetIfNotNil ("\u0033\u0044\u0056",_eece .T3DV );_cgggf .SetIfNotNil ("\u0033\u0044\u0041",_eece .T3DA );_cgggf .SetIfNotNil ("\u0033\u0044\u0049",_eece .T3DI );_cgggf .SetIfNotNil ("\u0033\u0044\u0042",_eece .T3DB );
return _ceec ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_cbbd *PdfReader )PageFromIndirectObject (ind *_bcg .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_cbbd .PageList )!=len (_cbbd ._fgebbb ){return nil ,0,_bcd .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _ddaab ,_baadf :=range _cbbd ._fgebbb {if _baadf ==ind {return _cbbd .PageList [_ddaab ],_ddaab +1,nil ;};};return nil ,0,_bcd .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func (_ebfd *PdfReader )newPdfAnnotationProjectionFromDict (_bagg *_bcg .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_ead :=&PdfAnnotationProjection {};
_add ,_ffcb :=_ebfd .newPdfAnnotationMarkupFromDict (_bagg );if _ffcb !=nil {return nil ,_ffcb ;};_ead .PdfAnnotationMarkup =_add ;return _ead ,nil ;};func (_ebef *PdfReader )newPdfAnnotationRichMediaFromDict (_fag *_bcg .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_aedg :=&PdfAnnotationRichMedia {};
_aedg .RichMediaSettings =_fag .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_aedg .RichMediaContent =_fag .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _aedg ,nil ;};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_bfegg *Image )GetParamsDict ()*_bcg .PdfObjectDictionary {_cadbe :=_bcg .MakeDict ();_cadbe .Set ("\u0057\u0069\u0064t\u0068",_bcg .MakeInteger (_bfegg .Width ));_cadbe .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bcg .MakeInteger (_bfegg .Height ));
_cadbe .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bcg .MakeInteger (int64 (_bfegg .ColorComponents )));_cadbe .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bcg .MakeInteger (_bfegg .BitsPerComponent ));
return _cadbe ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_fdfb *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};func _gegff (_gebe _bcg .PdfObject )(*PdfColorspaceLab ,error ){_aaga :=NewPdfColorspaceLab ();if _afad ,_aggd :=_gebe .(*_bcg .PdfIndirectObject );_aggd {_aaga ._cgdgc =_afad ;
};_gebe =_bcg .TraceToDirectObject (_gebe );_dcaee ,_abbcc :=_gebe .(*_bcg .PdfObjectArray );if !_abbcc {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dcaee .Len ()!=2{return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_gebe =_bcg .TraceToDirectObject (_dcaee .Get (0));_ccga ,_abbcc :=_gebe .(*_bcg .PdfObjectName );if !_abbcc {return nil ,_g .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};if *_ccga !="\u004c\u0061\u0062"{return nil ,_g .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_gebe =_bcg .TraceToDirectObject (_dcaee .Get (1));_gdgg ,_abbcc :=_gebe .(*_bcg .PdfObjectDictionary );
if !_abbcc {return nil ,_g .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};
_gebe =_gdgg .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_gebe =_bcg .TraceToDirectObject (_gebe );_gcabb ,_abbcc :=_gebe .(*_bcg .PdfObjectArray );if !_abbcc {return nil ,_g .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");
};if _gcabb .Len ()!=3{return nil ,_g .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_fgcfe ,_agfab :=_gcabb .GetAsFloat64Slice ();
if _agfab !=nil {return nil ,_agfab ;};_aaga .WhitePoint =_fgcfe ;_gebe =_gdgg .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gebe !=nil {_gebe =_bcg .TraceToDirectObject (_gebe );_ccedb ,_egcfa :=_gebe .(*_bcg .PdfObjectArray );
if !_egcfa {return nil ,_g .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _ccedb .Len ()!=3{return nil ,_g .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_bbdg ,_cfge :=_ccedb .GetAsFloat64Slice ();if _cfge !=nil {return nil ,_cfge ;};_aaga .BlackPoint =_bbdg ;};_gebe =_gdgg .Get ("\u0052\u0061\u006eg\u0065");if _gebe !=nil {_gebe =_bcg .TraceToDirectObject (_gebe );_abec ,_gaga :=_gebe .(*_bcg .PdfObjectArray );
if !_gaga {_dff .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_g .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _abec .Len ()!=4{_dff .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_g .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_ecec ,_egca :=_abec .GetAsFloat64Slice ();if _egca !=nil {return nil ,_egca ;};_aaga .Range =_ecec ;};return _aaga ,nil ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_aece *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _aece ._cfbc .(*PdfTilingPattern );};

// GetContainingPdfObject implements interface PdfModel.
func (_fdgf *PdfFilespec )GetContainingPdfObject ()_bcg .PdfObject {return _fdgf ._baegd };

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_gdgdb *PdfWriter )SetOpenAction (dest _bcg .PdfObject )error {if dest ==nil ||_bcg .IsNullObject (dest ){return nil ;};_gdgdb ._gbfg .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _gdgdb .addObjects (dest );};


// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_bcbee *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_bcbee .ToPdfOutline ().PdfOutlineTreeNode ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _bcg .PdfObject ;Dest _bcg .PdfObject ;H _bcg .PdfObject ;PA _bcg .PdfObject ;QuadPoints _bcg .PdfObject ;BS _bcg .PdfObject ;_acf *PdfAction ;_adef *PdfReader ;};func (_gfdb *PdfReader )newPdfAnnotationWatermarkFromDict (_fcf *_bcg .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_bcea :=PdfAnnotationWatermark {};
_bcea .FixedPrint =_fcf .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_bcea ,nil ;};func (_cebe *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_egdcf *XObjectForm )SetContentStream (content []byte ,encoder _bcg .StreamEncoder )error {_gebge :=content ;if encoder ==nil {if _egdcf .Filter !=nil {encoder =_egdcf .Filter ;}else {encoder =_bcg .NewRawEncoder ();};};_dfdfe ,_dcdab :=encoder .EncodeBytes (_gebge );
if _dcdab !=nil {return _dcdab ;};_gebge =_dfdfe ;_egdcf .Stream =_gebge ;_egdcf .Filter =encoder ;return nil ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_ebbdf int ,_gfdc *PdfPage );

// ValidateSignatures validates digital signatures in the document.
func (_cfdgc *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _cfdgc .AcroForm ==nil {return nil ,nil ;};if _cfdgc .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_dceabe *PdfSignature ;
_aeeba *PdfField ;_acgfb SignatureHandler ;};var _agafe []*sigFieldPair ;for _ ,_cdedg :=range _cfdgc .AcroForm .AllFields (){if _cdedg .V ==nil {continue ;};if _bebff ,_feagf :=_bcg .GetDict (_cdedg .V );_feagf {if _ebcac ,_egdg :=_bcg .GetNameVal (_bebff .Get ("\u0054\u0079\u0070\u0065"));
_egdg &&_ebcac =="\u0053\u0069\u0067"{_gbfea ,_gfdd :=_bcg .GetIndirect (_cdedg .V );if !_gfdd {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_fecbc ,_abaa :=_cfdgc .newPdfSignatureFromIndirect (_gbfea );if _abaa !=nil {return nil ,_abaa ;};var _gdcbc SignatureHandler ;for _ ,_fbbcc :=range handlers {if _fbbcc .IsApplicable (_fecbc ){_gdcbc =_fbbcc ;break ;};};_agafe =append (_agafe ,&sigFieldPair {_dceabe :_fecbc ,_aeeba :_cdedg ,_acgfb :_gdcbc });
};};};var _ffcdgb []SignatureValidationResult ;for _ ,_feefd :=range _agafe {_dbbbc :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_feefd ._aeeba }};if _feefd ._acgfb ==nil {_dbbbc .Errors =append (_dbbbc .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_ffcdgb =append (_ffcdgb ,_dbbbc );continue ;};_dbafg ,_ccbfb :=_feefd ._acgfb .NewDigest (_feefd ._dceabe );if _ccbfb !=nil {_dbbbc .Errors =append (_dbbbc .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_ccbfb .Error ());
_ffcdgb =append (_ffcdgb ,_dbbbc );continue ;};_fadd :=_feefd ._dceabe .ByteRange ;if _fadd ==nil {_dbbbc .Errors =append (_dbbbc .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_ffcdgb =append (_ffcdgb ,_dbbbc );
continue ;};for _gfdae :=0;_gfdae < _fadd .Len ();_gfdae =_gfdae +2{_gbdfc ,_ :=_bcg .GetNumberAsInt64 (_fadd .Get (_gfdae ));_begcba ,_ :=_bcg .GetIntVal (_fadd .Get (_gfdae +1));if _ ,_agcfc :=_cfdgc ._bggbbg .Seek (_gbdfc ,_dg .SeekStart );_agcfc !=nil {return nil ,_agcfc ;
};_bfddf :=make ([]byte ,_begcba );if _ ,_cebgac :=_cfdgc ._bggbbg .Read (_bfddf );_cebgac !=nil {return nil ,_cebgac ;};_dbafg .Write (_bfddf );};var _fbga SignatureValidationResult ;if _cdagb ,_bebeg :=_feefd ._acgfb .(SignatureHandlerDocMDP );_bebeg {_fbga ,_ccbfb =_cdagb .ValidateWithOpts (_feefd ._dceabe ,_dbafg ,SignatureHandlerDocMDPParams {Parser :_cfdgc ._eadaf });
}else {_fbga ,_ccbfb =_feefd ._acgfb .Validate (_feefd ._dceabe ,_dbafg );};if _ccbfb !=nil {_dff .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_ccbfb ,_feefd ._acgfb );_fbga .Errors =append (_fbga .Errors ,_ccbfb .Error ());
};_fbga .Name =_feefd ._dceabe .Name .Decoded ();_fbga .Reason =_feefd ._dceabe .Reason .Decoded ();if _feefd ._dceabe .M !=nil {_feffe ,_gfec :=NewPdfDate (_feefd ._dceabe .M .String ());if _gfec !=nil {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gfec );
_fbga .Errors =append (_fbga .Errors ,_gfec .Error ());continue ;};_fbga .Date =_feffe ;};_fbga .ContactInfo =_feefd ._dceabe .ContactInfo .Decoded ();_fbga .Location =_feefd ._dceabe .Location .Decoded ();_fbga .Fields =_dbbbc .Fields ;_ffcdgb =append (_ffcdgb ,_fbga );
};return _ffcdgb ,nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_deab *PdfOutlineItem )ToPdfObject ()_bcg .PdfObject {_cebfb :=_deab ._edgdb ;_cefed :=_cebfb .PdfObject .(*_bcg .PdfObjectDictionary );_cefed .Set ("\u0054\u0069\u0074l\u0065",_deab .Title );if _deab .A !=nil {_cefed .Set ("\u0041",_deab .A );};
if _befaf :=_cefed .Get ("\u0053\u0045");_befaf !=nil {_cefed .Remove ("\u0053\u0045");};if _deab .C !=nil {_cefed .Set ("\u0043",_deab .C );};if _deab .Dest !=nil {_cefed .Set ("\u0044\u0065\u0073\u0074",_deab .Dest );};if _deab .F !=nil {_cefed .Set ("\u0046",_deab .F );
};if _deab .Count !=nil {_cefed .Set ("\u0043\u006f\u0075n\u0074",_bcg .MakeInteger (*_deab .Count ));};if _deab .Next !=nil {_cefed .Set ("\u004e\u0065\u0078\u0074",_deab .Next .ToPdfObject ());};if _deab .First !=nil {_cefed .Set ("\u0046\u0069\u0072s\u0074",_deab .First .ToPdfObject ());
};if _deab .Prev !=nil {_cefed .Set ("\u0050\u0072\u0065\u0076",_deab .Prev .GetContext ().GetContainingPdfObject ());};if _deab .Last !=nil {_cefed .Set ("\u004c\u0061\u0073\u0074",_deab .Last .GetContext ().GetContainingPdfObject ());};if _deab .Parent !=nil {_cefed .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_deab .Parent .GetContext ().GetContainingPdfObject ());
};return _cebfb ;};func (_ffbf *PdfReader )newPdfAnnotationMarkupFromDict (_agd *_bcg .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_ffada :=&PdfAnnotationMarkup {};if _dagf :=_agd .Get ("\u0054");_dagf !=nil {_ffada .T =_dagf ;};if _dfb :=_agd .Get ("\u0050\u006f\u0070u\u0070");
_dfb !=nil {_ccdc ,_cgc :=_dfb .(*_bcg .PdfIndirectObject );if !_cgc {if _ ,_fbbg :=_dfb .(*_bcg .PdfObjectNull );!_fbbg {return nil ,_bcd .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_gbd ,_ceg :=_ffbf .newPdfAnnotationFromIndirectObject (_ccdc );if _ceg !=nil {return nil ,_ceg ;};if _gbd !=nil {_ddde ,_gded :=_gbd ._cge .(*PdfAnnotationPopup );if !_gded {return nil ,_bcd .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_ffada .Popup =_ddde ;};};};if _dcaef :=_agd .Get ("\u0043\u0041");_dcaef !=nil {_ffada .CA =_dcaef ;};if _dab :=_agd .Get ("\u0052\u0043");_dab !=nil {_ffada .RC =_dab ;};if _ccaf :=_agd .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_ccaf !=nil {_ffada .CreationDate =_ccaf ;};if _cede :=_agd .Get ("\u0049\u0052\u0054");_cede !=nil {_ffada .IRT =_cede ;};if _ccaa :=_agd .Get ("\u0053\u0075\u0062\u006a");_ccaa !=nil {_ffada .Subj =_ccaa ;};if _afeb :=_agd .Get ("\u0052\u0054");_afeb !=nil {_ffada .RT =_afeb ;
};if _ffdd :=_agd .Get ("\u0049\u0054");_ffdd !=nil {_ffada .IT =_ffdd ;};if _bga :=_agd .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_bga !=nil {_ffada .ExData =_bga ;};return _ffada ,nil ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};

// SetDate sets the `M` field of the signature.
func (_cdgd *PdfSignature )SetDate (date _dd .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_cdgd .M =_bcg .MakeString (date .Format (format ));
};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_bcgc *PdfReader )Decrypt (password []byte )(bool ,error ){_feece ,_fcfc :=_bcgc ._eadaf .Decrypt (password );if _fcfc !=nil {return false ,_fcfc ;};if !_feece {return false ,nil ;};_fcfc =_bcgc .loadStructure ();if _fcfc !=nil {_dff .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_fcfc );
return false ,_fcfc ;};return true ,nil ;};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_dbdf *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _dbdf ._addea !=nil {return _dbdf ._addea ,nil ;};if _dbdf .Annots ==nil {_dbdf ._addea =[]*PdfAnnotation {};return nil ,nil ;};if _dbdf ._bebfe ==nil {_dbdf ._addea =[]*PdfAnnotation {};
return nil ,nil ;};_addd ,_gfeaa :=_dbdf ._bebfe .loadAnnotations (_dbdf .Annots );if _gfeaa !=nil {return nil ,_gfeaa ;};if _addd ==nil {_dbdf ._addea =[]*PdfAnnotation {};};_dbdf ._addea =_addd ;return _dbdf ._addea ,nil ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};var (_ffcad =_gc .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_fgdf =_gc .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");
_gcfgf =_gc .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_caeea ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_effee ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_baeac ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// SetDecode sets the decode image float slice.
func (_begfb *Image )SetDecode (decode []float64 ){_begfb ._agagd =decode };

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _dg .ReadSeeker )(*CompliancePdfReader ,error ){const _fbggb ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_badc ,_agbbe :=_bebbaf (rs ,&ReaderOpts {ComplianceMode :true },false ,_fbggb );
if _agbbe !=nil {return nil ,_agbbe ;};return &CompliancePdfReader {PdfReader :_badc },nil ;};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_cfce *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _cfce .RunesToCharcodeBytes ([]rune (str ));};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_bcg .PdfObjectInteger ;TilingType *_bcg .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_bcg .PdfObjectFloat ;YStep *_bcg .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_bcg .PdfObjectArray ;};


// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _bcg .PdfObject )(*PdfFont ,error ){return _eeee (fontObj ,true )};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_dgfc *_bcg .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_fbc *PdfActionGoToR )ToPdfObject ()_bcg .PdfObject {_fbc .PdfAction .ToPdfObject ();_cbae :=_fbc ._aag ;_bbe :=_cbae .PdfObject .(*_bcg .PdfObjectDictionary );_bbe .SetIfNotNil ("\u0053",_bcg .MakeName (string (ActionTypeGoToR )));if _fbc .F !=nil {_bbe .Set ("\u0046",_fbc .F .ToPdfObject ());
};_bbe .SetIfNotNil ("\u0044",_fbc .D );_bbe .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_fbc .NewWindow );return _cbae ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_edgdg *PdfFieldChoice )ToPdfObject ()_bcg .PdfObject {_edgdg .PdfField .ToPdfObject ();_eaff :=_edgdg ._bddgb ;_feccd :=_eaff .PdfObject .(*_bcg .PdfObjectDictionary );_feccd .Set ("\u0046\u0054",_bcg .MakeName ("\u0043\u0068"));if _edgdg .Opt !=nil {_feccd .Set ("\u004f\u0070\u0074",_edgdg .Opt );
};if _edgdg .TI !=nil {_feccd .Set ("\u0054\u0049",_edgdg .TI );};if _edgdg .I !=nil {_feccd .Set ("\u0049",_edgdg .I );};return _eaff ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _bcg .PdfObject ;Name _bcg .PdfObject ;State _bcg .PdfObject ;StateModel _bcg .PdfObject ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_acee *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_cacc ,_acbf :=color .(*PdfColorPattern );if !_acbf {_dff .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _cacc .Color ==nil {return color ,nil ;};if _acee .UnderlyingCS ==nil {return nil ,_bcd .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _acee .UnderlyingCS .ColorToRGB (_cacc .Color );
};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_cbgf *_bcg .PdfObjectDictionary ;_bbdfd *_bcg .PdfIndirectObject ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _bcg .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _bcg .PdfObject ;Contents _bcg .PdfObject ;
Rotate *int64 ;Group _bcg .PdfObject ;Thumb _bcg .PdfObject ;B _bcg .PdfObject ;Dur _bcg .PdfObject ;Trans _bcg .PdfObject ;AA _bcg .PdfObject ;Metadata _bcg .PdfObject ;PieceInfo _bcg .PdfObject ;StructParents _bcg .PdfObject ;ID _bcg .PdfObject ;PZ _bcg .PdfObject ;
SeparationInfo _bcg .PdfObject ;Tabs _bcg .PdfObject ;TemplateInstantiated _bcg .PdfObject ;PresSteps _bcg .PdfObject ;UserUnit _bcg .PdfObject ;VP _bcg .PdfObject ;Annots _bcg .PdfObject ;_addea []*PdfAnnotation ;_dabee *_bcg .PdfObjectDictionary ;_ddfd *_bcg .PdfIndirectObject ;
_bebfe *PdfReader ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_aaeaf :=appender .Reader .DSS ;if _aaeaf ==nil {_aaeaf =NewDSS ();};if _efdgg :=_aaeaf .generateHashMaps ();_efdgg !=nil {return nil ,_efdgg ;};return &LTV {CertClient :_fb .NewCertClient (),OCSPClient :_fb .NewOCSPClient (),CRLClient :_fb .NewCRLClient (),SkipExisting :true ,_cgbab :appender ,_abbf :_aaeaf },nil ;
};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_edg :=NewPdfAction ();_fdg :=&PdfActionNamed {};_fdg .PdfAction =_edg ;_edg .SetContext (_fdg );return _fdg ;};var _daadg =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// ToPdfObject implements interface PdfModel.
func (_eddd *PdfAnnotationPolygon )ToPdfObject ()_bcg .PdfObject {_eddd .PdfAnnotation .ToPdfObject ();_effe :=_eddd ._cbe ;_fbcdb :=_effe .PdfObject .(*_bcg .PdfObjectDictionary );_eddd .PdfAnnotationMarkup .appendToPdfDictionary (_fbcdb );_fbcdb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_fbcdb .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_eddd .Vertices );_fbcdb .SetIfNotNil ("\u004c\u0045",_eddd .LE );_fbcdb .SetIfNotNil ("\u0042\u0053",_eddd .BS );_fbcdb .SetIfNotNil ("\u0049\u0043",_eddd .IC );_fbcdb .SetIfNotNil ("\u0042\u0045",_eddd .BE );
_fbcdb .SetIfNotNil ("\u0049\u0054",_eddd .IT );_fbcdb .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_eddd .Measure );return _effe ;};func _gffc (_fefc *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_fefc }};func _dddag (_effde _dgb .StdFont )pdfFontSimple {_bbaa :=_effde .Descriptor ();
return pdfFontSimple {fontCommon :fontCommon {_cfeef :"\u0054\u0079\u0070e\u0031",_aafc :_effde .Name ()},_fdbcdc :_effde .GetMetricsTable (),_gdfg :&PdfFontDescriptor {FontName :_bcg .MakeName (string (_bbaa .Name )),FontFamily :_bcg .MakeName (_bbaa .Family ),FontWeight :_bcg .MakeFloat (float64 (_bbaa .Weight )),Flags :_bcg .MakeInteger (int64 (_bbaa .Flags )),FontBBox :_bcg .MakeArrayFromFloats (_bbaa .BBox [:]),ItalicAngle :_bcg .MakeFloat (_bbaa .ItalicAngle ),Ascent :_bcg .MakeFloat (_bbaa .Ascent ),Descent :_bcg .MakeFloat (_bbaa .Descent ),CapHeight :_bcg .MakeFloat (_bbaa .CapHeight ),XHeight :_bcg .MakeFloat (_bbaa .XHeight ),StemV :_bcg .MakeFloat (_bbaa .StemV ),StemH :_bcg .MakeFloat (_bbaa .StemH )},_eaaafb :_effde .Encoder ()};
};

// ToPdfObject implements interface PdfModel.
func (_afa *PdfAnnotationTrapNet )ToPdfObject ()_bcg .PdfObject {_afa .PdfAnnotation .ToPdfObject ();_gdb :=_afa ._cbe ;_efe :=_gdb .PdfObject .(*_bcg .PdfObjectDictionary );_efe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _gdb ;};

// SetContext sets the sub action (context).
func (_gbb *PdfAction )SetContext (ctx PdfModel ){_gbb ._afc =ctx };func _bbcc (_babc _bcg .PdfObject )(*PdfBorderStyle ,error ){_cabb :=&PdfBorderStyle {};_cabb ._dccec =_babc ;var _cffg *_bcg .PdfObjectDictionary ;_babc =_bcg .TraceToDirectObject (_babc );
_cffg ,_bagd :=_babc .(*_bcg .PdfObjectDictionary );if !_bagd {return nil ,_bcd .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _dbdd :=_cffg .Get ("\u0054\u0079\u0070\u0065");_dbdd !=nil {_eadd ,_cegc :=_dbdd .(*_bcg .PdfObjectName );
if !_cegc {_dff .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_dbdd );
}else {if *_eadd !="\u0042\u006f\u0072\u0064\u0065\u0072"{_dff .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_eadd );};};};if _acb :=_cffg .Get ("\u0057");
_acb !=nil {_bbce ,_dba :=_bcg .GetNumberAsFloat (_acb );if _dba !=nil {_dff .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_dba );return nil ,_dba ;};_cabb .W =&_bbce ;
};if _bbgg :=_cffg .Get ("\u0053");_bbgg !=nil {_baga ,_adefe :=_bbgg .(*_bcg .PdfObjectName );if !_adefe {return nil ,_bcd .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _dacab BorderStyle ;switch *_baga {case "\u0053":_dacab =BorderStyleSolid ;case "\u0044":_dacab =BorderStyleDashed ;case "\u0042":_dacab =BorderStyleBeveled ;case "\u0049":_dacab =BorderStyleInset ;case "\u0055":_dacab =BorderStyleUnderline ;default:_dff .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_baga );
return nil ,_bcd .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_cabb .S =&_dacab ;};if _bfcg :=_cffg .Get ("\u0044");_bfcg !=nil {_dgde ,_dfag :=_bfcg .(*_bcg .PdfObjectArray );
if !_dfag {_dff .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_bfcg );return nil ,_bcd .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_eba ,_bbea :=_dgde .ToIntegerArray ();if _bbea !=nil {_dff .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_bbea );
return nil ,_bbea ;};_cabb .D =&_eba ;};return _cabb ,nil ;};

// ReplacePage replaces the original page to a new page.
func (_fdbe *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_aefdf :=pageNum -1;for _dbcga :=range _fdbe ._dbc {if _dbcga ==_aefdf {_adea :=page .Duplicate ();_dccdb (_adea );_fdbe ._dbc [_dbcga ]=_adea ;};};};func (_gddg *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";
};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _bcg .PdfObject ;T _bcg .PdfObject ;Operation _bcg .PdfObject ;};

// ToPdfObject returns the PDF representation of the function.
func (_cebd *PdfFunctionType2 )ToPdfObject ()_bcg .PdfObject {_daeed :=_bcg .MakeDict ();_daeed .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bcg .MakeInteger (2));_bgbbb :=&_bcg .PdfObjectArray {};for _ ,_fdeb :=range _cebd .Domain {_bgbbb .Append (_bcg .MakeFloat (_fdeb ));
};_daeed .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bgbbb );if _cebd .Range !=nil {_cgaac :=&_bcg .PdfObjectArray {};for _ ,_ddddf :=range _cebd .Range {_cgaac .Append (_bcg .MakeFloat (_ddddf ));};_daeed .Set ("\u0052\u0061\u006eg\u0065",_cgaac );};
if _cebd .C0 !=nil {_fcdg :=&_bcg .PdfObjectArray {};for _ ,_dedg :=range _cebd .C0 {_fcdg .Append (_bcg .MakeFloat (_dedg ));};_daeed .Set ("\u0043\u0030",_fcdg );};if _cebd .C1 !=nil {_cgfeba :=&_bcg .PdfObjectArray {};for _ ,_ecggf :=range _cebd .C1 {_cgfeba .Append (_bcg .MakeFloat (_ecggf ));
};_daeed .Set ("\u0043\u0031",_cgfeba );};_daeed .Set ("\u004e",_bcg .MakeFloat (_cebd .N ));if _cebd ._ceaga !=nil {_cebd ._ceaga .PdfObject =_daeed ;return _cebd ._ceaga ;};return _daeed ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_fccg :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_fccg .N =N ;return _fccg ,nil ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_cbbab *Image )AlphaMap (mapFunc AlphaMapFunc ){for _efbg ,_deeg :=range _cbbab ._aagba {_cbbab ._aagba [_efbg ]=mapFunc (_deeg );};};const (_dfaf =0x00001;_cffc =0x00002;_aaea =0x00004;_dgbea =0x00008;_gbgcb =0x00020;_cfeafd =0x00040;_edagg =0x10000;
_dceb =0x20000;_cdedf =0x40000;);func _gbade (_gefgc _bcg .PdfObject )(*PdfPageResourcesColorspaces ,error ){_eaaea :=&PdfPageResourcesColorspaces {};if _affb ,_beaeg :=_gefgc .(*_bcg .PdfIndirectObject );_beaeg {_eaaea ._ebfac =_affb ;_gefgc =_affb .PdfObject ;
};_geefe ,_beda :=_bcg .GetDict (_gefgc );if !_beda {return nil ,_bcd .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_eaaea .Names =[]string {};_eaaea .Colorspaces =map[string ]PdfColorspace {};
for _ ,_eeeed :=range _geefe .Keys (){_bbbcg :=_geefe .Get (_eeeed );_eaaea .Names =append (_eaaea .Names ,string (_eeeed ));_ebcae ,_eacfd :=NewPdfColorspaceFromPdfObject (_bbbcg );if _eacfd !=nil {return nil ,_eacfd ;};_eaaea .Colorspaces [string (_eeeed )]=_ebcae ;
};return _eaaea ,nil ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_dafbc :=&PdfOutlineItem {_edgdb :_bcg .MakeIndirectObject (_bcg .MakeDict ())};_dafbc ._egdfd =_dafbc ;return _dafbc ;};func (_bece *PdfAppender )mergeResources (_bbfc ,_ddfce _bcg .PdfObject ,_daff map[_bcg .PdfObjectName ]_bcg .PdfObjectName )_bcg .PdfObject {if _ddfce ==nil &&_bbfc ==nil {return nil ;
};if _ddfce ==nil {return _bbfc ;};_ebb ,_cdc :=_bcg .GetDict (_ddfce );if !_cdc {return _bbfc ;};if _bbfc ==nil {_ccba :=_bcg .MakeDict ();_ccba .Merge (_ebb );return _ddfce ;};_bcff ,_cdc :=_bcg .GetDict (_bbfc );if !_cdc {_dff .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_bcff =_bcg .MakeDict ();};for _ ,_bced :=range _ebb .Keys (){if _cfdg ,_bad :=_daff [_bced ];_bad {_bcff .Set (_cfdg ,_ebb .Get (_bced ));}else {_bcff .Set (_bced ,_ebb .Get (_bced ));};};return _bcff ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_gefc *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_aeagf :=_gefc .GetContentStreamObjs ();wrapContents =wrapContents &&len (_aeagf )> 0;_fbgc :=_bcg .NewFlateEncoder ();_edbf :=_bcg .MakeArray ();if wrapContents {_ebgbg ,_eafe :=_bcg .MakeStream ([]byte ("\u0071\u000a"),_fbgc );
if _eafe !=nil {return _eafe ;};_edbf .Append (_ebgbg );};_edbf .Append (_aeagf ...);if wrapContents {_gcbcc ,_cafa :=_bcg .MakeStream ([]byte ("\u000a\u0051\u000a"),_fbgc );if _cafa !=nil {return _cafa ;};_edbf .Append (_gcbcc );};_gbfc ,_gfeg :=_bcg .MakeStream (cs ,_fbgc );
if _gfeg !=nil {return _gfeg ;};_edbf .Append (_gbfc );_gefc .Contents =_edbf ;return nil ;};func (_bfgbg *PdfAppender )replaceObject (_agcd ,_fcb _bcg .PdfObject ){switch _bcfb :=_agcd .(type ){case *_bcg .PdfIndirectObject :_bfgbg ._feab [_fcb ]=_bcfb .ObjectNumber ;
case *_bcg .PdfObjectStream :_bfgbg ._feab [_fcb ]=_bcfb .ObjectNumber ;};};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _bcg .PdfObject ;RichMediaContent _bcg .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_gaed *PdfAnnotationLine )ToPdfObject ()_bcg .PdfObject {_gaed .PdfAnnotation .ToPdfObject ();_eeae :=_gaed ._cbe ;_bdg :=_eeae .PdfObject .(*_bcg .PdfObjectDictionary );_gaed .PdfAnnotationMarkup .appendToPdfDictionary (_bdg );_bdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u004c\u0069\u006e\u0065"));
_bdg .SetIfNotNil ("\u004c",_gaed .L );_bdg .SetIfNotNil ("\u0042\u0053",_gaed .BS );_bdg .SetIfNotNil ("\u004c\u0045",_gaed .LE );_bdg .SetIfNotNil ("\u0049\u0043",_gaed .IC );_bdg .SetIfNotNil ("\u004c\u004c",_gaed .LL );_bdg .SetIfNotNil ("\u004c\u004c\u0045",_gaed .LLE );
_bdg .SetIfNotNil ("\u0043\u0061\u0070",_gaed .Cap );_bdg .SetIfNotNil ("\u0049\u0054",_gaed .IT );_bdg .SetIfNotNil ("\u004c\u004c\u004f",_gaed .LLO );_bdg .SetIfNotNil ("\u0043\u0050",_gaed .CP );_bdg .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gaed .Measure );
_bdg .SetIfNotNil ("\u0043\u004f",_gaed .CO );return _eeae ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_defe *PdfPage )error ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// ToPdfObject implements interface PdfModel.
func (_dfgf *PdfAnnotationFileAttachment )ToPdfObject ()_bcg .PdfObject {_dfgf .PdfAnnotation .ToPdfObject ();_cfg :=_dfgf ._cbe ;_dfge :=_cfg .PdfObject .(*_bcg .PdfObjectDictionary );_dfgf .PdfAnnotationMarkup .appendToPdfDictionary (_dfge );_dfge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_dfge .SetIfNotNil ("\u0046\u0053",_dfgf .FS );_dfge .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dfgf .Name );return _cfg ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_cdgcc *PdfPageResources )GetContainingPdfObject ()_bcg .PdfObject {return _cdgcc ._bgbd };

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_gdgce *CompliancePdfReader )error ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_ggedbb :=PdfWriter {};_ggedbb ._degdg =map[_bcg .PdfObject ]struct{}{};_ggedbb ._gbadec =[]_bcg .PdfObject {};_ggedbb ._gbcf =map[_bcg .PdfObject ][]*_bcg .PdfObjectDictionary {};_ggedbb ._bdcg =map[_bcg .PdfObject ]struct{}{};
_ggedbb ._cbdba .Major =1;_ggedbb ._cbdba .Minor =3;_afgcf :=_bcg .MakeDict ();_fcaeg :=[]struct{_aagea _bcg .PdfObjectName ;_efead string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_bedaa ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_cdfcd ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_ggfef ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_adbece ()},{"\u0054\u0069\u0074l\u0065",_bdfff ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_cgbdd ()}};
for _ ,_gfbd :=range _fcaeg {if _gfbd ._efead !=""{_afgcf .Set (_gfbd ._aagea ,_bcg .MakeString (_gfbd ._efead ));};};if _faebe :=_bbffag ();!_faebe .IsZero (){if _fgfdf ,_ggcad :=NewPdfDateFromTime (_faebe );_ggcad ==nil {_afgcf .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_fgfdf .ToPdfObject ());
};};if _dbeg :=_edcfa ();!_dbeg .IsZero (){if _ddga ,_bcfae :=NewPdfDateFromTime (_dbeg );_bcfae ==nil {_afgcf .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_ddga .ToPdfObject ());};};_badbg :=_bcg .PdfIndirectObject {};_badbg .PdfObject =_afgcf ;_ggedbb ._cbdd =&_badbg ;
_ggedbb .addObject (&_badbg );_dgce :=_bcg .PdfIndirectObject {};_addde :=_bcg .MakeDict ();_addde .Set ("\u0054\u0079\u0070\u0065",_bcg .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_dgce .PdfObject =_addde ;_ggedbb ._agged =&_dgce ;_ggedbb .addObject (_ggedbb ._agged );
_bdedc ,_cdbef :=_gdbab ("\u0077");if _cdbef !=nil {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cdbef );};_ggedbb ._egdef =_bdedc ;_bgaaf :=_bcg .PdfIndirectObject {};_gafbf :=_bcg .MakeDict ();_gafbf .Set ("\u0054\u0079\u0070\u0065",_bcg .MakeName ("\u0050\u0061\u0067e\u0073"));
_dade :=_bcg .PdfObjectArray {};_gafbf .Set ("\u004b\u0069\u0064\u0073",&_dade );_gafbf .Set ("\u0043\u006f\u0075n\u0074",_bcg .MakeInteger (0));_bgaaf .PdfObject =_gafbf ;_ggedbb ._cdcfad =&_bgaaf ;_ggedbb ._cfccg =map[_bcg .PdfObject ]struct{}{};_ggedbb .addObject (_ggedbb ._cdcfad );
_addde .Set ("\u0050\u0061\u0067e\u0073",&_bgaaf );_ggedbb ._gbfg =_addde ;_dff .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_dgce );return _ggedbb ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_baa :=NewPdfAnnotation ();_ebcd :=&PdfAnnotationSquiggly {};_ebcd .PdfAnnotation =_baa ;_ebcd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_baa .SetContext (_ebcd );return _ebcd ;};func (_ddc *PdfReader )newPdfActionFromIndirectObject (_dffa *_bcg .PdfIndirectObject )(*PdfAction ,error ){_gdg ,_abg :=_dffa .PdfObject .(*_bcg .PdfObjectDictionary );
if !_abg {return nil ,_g .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_ddc ._abgg .GetModelFromPrimitive (_gdg );model !=nil {_daf ,_abgb :=model .(*PdfAction );if !_abgb {return nil ,_g .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _daf ,nil ;};_cbaeaf :=&PdfAction {};_cbaeaf ._aag =_dffa ;_ddc ._abgg .Register (_gdg ,_cbaeaf );if _faf :=_gdg .Get ("\u0054\u0079\u0070\u0065");_faf !=nil {_eae ,_ede :=_faf .(*_bcg .PdfObjectName );if !_ede {_dff .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_faf );
}else {if *_eae !="\u0041\u0063\u0074\u0069\u006f\u006e"{_dff .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_eae );
};_cbaeaf .Type =_eae ;};};if _ddce :=_gdg .Get ("\u004e\u0065\u0078\u0074");_ddce !=nil {_cbaeaf .Next =_ddce ;};if _fcg :=_gdg .Get ("\u0053");_fcg !=nil {_cbaeaf .S =_fcg ;};_gfe ,_aec :=_cbaeaf .S .(*_bcg .PdfObjectName );if !_aec {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cbaeaf .S );
return nil ,_g .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cbaeaf .S );};_egc :=PdfActionType (_gfe .String ());
switch _egc {case ActionTypeGoTo :_bee ,_fde :=_ddc .newPdfActionGotoFromDict (_gdg );if _fde !=nil {return nil ,_fde ;};_bee .PdfAction =_cbaeaf ;_cbaeaf ._afc =_bee ;return _cbaeaf ,nil ;case ActionTypeGoToR :_eaf ,_gfg :=_ddc .newPdfActionGotoRFromDict (_gdg );
if _gfg !=nil {return nil ,_gfg ;};_eaf .PdfAction =_cbaeaf ;_cbaeaf ._afc =_eaf ;return _cbaeaf ,nil ;case ActionTypeGoToE :_ebf ,_bbf :=_ddc .newPdfActionGotoEFromDict (_gdg );if _bbf !=nil {return nil ,_bbf ;};_ebf .PdfAction =_cbaeaf ;_cbaeaf ._afc =_ebf ;
return _cbaeaf ,nil ;case ActionTypeLaunch :_gfd ,_cag :=_ddc .newPdfActionLaunchFromDict (_gdg );if _cag !=nil {return nil ,_cag ;};_gfd .PdfAction =_cbaeaf ;_cbaeaf ._afc =_gfd ;return _cbaeaf ,nil ;case ActionTypeThread :_gefb ,_afg :=_ddc .newPdfActionThreadFromDict (_gdg );
if _afg !=nil {return nil ,_afg ;};_gefb .PdfAction =_cbaeaf ;_cbaeaf ._afc =_gefb ;return _cbaeaf ,nil ;case ActionTypeURI :_abga ,_ad :=_ddc .newPdfActionURIFromDict (_gdg );if _ad !=nil {return nil ,_ad ;};_abga .PdfAction =_cbaeaf ;_cbaeaf ._afc =_abga ;
return _cbaeaf ,nil ;case ActionTypeSound :_adg ,_geg :=_ddc .newPdfActionSoundFromDict (_gdg );if _geg !=nil {return nil ,_geg ;};_adg .PdfAction =_cbaeaf ;_cbaeaf ._afc =_adg ;return _cbaeaf ,nil ;case ActionTypeMovie :_abd ,_aed :=_ddc .newPdfActionMovieFromDict (_gdg );
if _aed !=nil {return nil ,_aed ;};_abd .PdfAction =_cbaeaf ;_cbaeaf ._afc =_abd ;return _cbaeaf ,nil ;case ActionTypeHide :_gfc ,_bbff :=_ddc .newPdfActionHideFromDict (_gdg );if _bbff !=nil {return nil ,_bbff ;};_gfc .PdfAction =_cbaeaf ;_cbaeaf ._afc =_gfc ;
return _cbaeaf ,nil ;case ActionTypeNamed :_bgc ,_caa :=_ddc .newPdfActionNamedFromDict (_gdg );if _caa !=nil {return nil ,_caa ;};_bgc .PdfAction =_cbaeaf ;_cbaeaf ._afc =_bgc ;return _cbaeaf ,nil ;case ActionTypeSubmitForm :_ade ,_dgc :=_ddc .newPdfActionSubmitFormFromDict (_gdg );
if _dgc !=nil {return nil ,_dgc ;};_ade .PdfAction =_cbaeaf ;_cbaeaf ._afc =_ade ;return _cbaeaf ,nil ;case ActionTypeResetForm :_edd ,_bba :=_ddc .newPdfActionResetFormFromDict (_gdg );if _bba !=nil {return nil ,_bba ;};_edd .PdfAction =_cbaeaf ;_cbaeaf ._afc =_edd ;
return _cbaeaf ,nil ;case ActionTypeImportData :_ffa ,_afb :=_ddc .newPdfActionImportDataFromDict (_gdg );if _afb !=nil {return nil ,_afb ;};_ffa .PdfAction =_cbaeaf ;_cbaeaf ._afc =_ffa ;return _cbaeaf ,nil ;case ActionTypeSetOCGState :_cc ,_bda :=_ddc .newPdfActionSetOCGStateFromDict (_gdg );
if _bda !=nil {return nil ,_bda ;};_cc .PdfAction =_cbaeaf ;_cbaeaf ._afc =_cc ;return _cbaeaf ,nil ;case ActionTypeRendition :_ebc ,_gfa :=_ddc .newPdfActionRenditionFromDict (_gdg );if _gfa !=nil {return nil ,_gfa ;};_ebc .PdfAction =_cbaeaf ;_cbaeaf ._afc =_ebc ;
return _cbaeaf ,nil ;case ActionTypeTrans :_bfda ,_bdf :=_ddc .newPdfActionTransFromDict (_gdg );if _bdf !=nil {return nil ,_bdf ;};_bfda .PdfAction =_cbaeaf ;_cbaeaf ._afc =_bfda ;return _cbaeaf ,nil ;case ActionTypeGoTo3DView :_eafc ,_acd :=_ddc .newPdfActionGoTo3DViewFromDict (_gdg );
if _acd !=nil {return nil ,_acd ;};_eafc .PdfAction =_cbaeaf ;_cbaeaf ._afc =_eafc ;return _cbaeaf ,nil ;case ActionTypeJavaScript :_eca ,_cdg :=_ddc .newPdfActionJavaScriptFromDict (_gdg );if _cdg !=nil {return nil ,_cdg ;};_eca .PdfAction =_cbaeaf ;_cbaeaf ._afc =_eca ;
return _cbaeaf ,nil ;};_dff .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_egc );return nil ,nil ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_fegd *PdfColorspaceLab )ToPdfObject ()_bcg .PdfObject {_cgddc :=_bcg .MakeArray ();_cgddc .Append (_bcg .MakeName ("\u004c\u0061\u0062"));_cbcbd :=_bcg .MakeDict ();if _fegd .WhitePoint !=nil {_bfcfc :=_bcg .MakeArray (_bcg .MakeFloat (_fegd .WhitePoint [0]),_bcg .MakeFloat (_fegd .WhitePoint [1]),_bcg .MakeFloat (_fegd .WhitePoint [2]));
_cbcbd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bfcfc );}else {_dff .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _fegd .BlackPoint !=nil {_faeb :=_bcg .MakeArray (_bcg .MakeFloat (_fegd .BlackPoint [0]),_bcg .MakeFloat (_fegd .BlackPoint [1]),_bcg .MakeFloat (_fegd .BlackPoint [2]));_cbcbd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_faeb );
};if _fegd .Range !=nil {_acgf :=_bcg .MakeArray (_bcg .MakeFloat (_fegd .Range [0]),_bcg .MakeFloat (_fegd .Range [1]),_bcg .MakeFloat (_fegd .Range [2]),_bcg .MakeFloat (_fegd .Range [3]));_cbcbd .Set ("\u0052\u0061\u006eg\u0065",_acgf );};_cgddc .Append (_cbcbd );
if _fegd ._cgdgc !=nil {_fegd ._cgdgc .PdfObject =_cgddc ;return _fegd ._cgdgc ;};return _cgddc ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_dac :=NewPdfAction ();_fgg :=&PdfActionURI {};_fgg .PdfAction =_dac ;_dac .SetContext (_fgg );return _fgg ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_cebea *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _cebea ._cfbc .(*PdfShadingPattern );};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_ecg *PdfAction )GetContext ()PdfModel {if _ecg ==nil {return nil ;};return _ecg ._afc ;};

// WriteString outputs the object as it is to be written to file.
func (_cdfff *PdfTransformParamsDocMDP )WriteString ()string {return _cdfff .ToPdfObject ().WriteString ();};

// Encoder returns the font's text encoder.
func (_ceeb *pdfFontSimple )Encoder ()_bf .TextEncoder {if _ceeb ._cbdg !=nil {return _ceeb ._cbdg ;};if _ceeb ._eaaafb !=nil {return _ceeb ._eaaafb ;};_bdgaf ,_ :=_bf .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _bdgaf ;};

// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_gcafd *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_gdggg :=_gcafd ._eadaf .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _gdggg {return nil ,_bcd .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_gdggg {return _gcafd ,nil ;};if _gcafd ._cdddg [revisionNumber ]!=nil {return _gcafd ._cdddg [revisionNumber ],nil ;};_adca :=_gcafd ;for _dfcb :=_gdggg -1;_dfcb >=revisionNumber ;_dfcb --{_cbdc ,_gfabg :=_adca .GetPreviousRevision ();
if _gfabg !=nil {return nil ,_gfabg ;};_gcafd ._cdddg [_dfcb ]=_cbdc ;_adca =_cbdc ;};return _adca ,nil ;};func (_cegfc *PdfWriter )writeString (_gcdfd string ){if _cegfc ._efgdd !=nil {return ;};_bdcbc ,_dcdgfc :=_cegfc ._fbee .WriteString (_gcdfd );_cegfc ._dacb +=int64 (_bdcbc );
_cegfc ._efgdd =_dcdgfc ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_fdcb _bcg .ParserMetadata ;};

// ToPdfObject implements interface PdfModel.
func (_agda *PdfAnnotationWatermark )ToPdfObject ()_bcg .PdfObject {_agda .PdfAnnotation .ToPdfObject ();_ffafg :=_agda ._cbe ;_ccgbd :=_ffafg .PdfObject .(*_bcg .PdfObjectDictionary );_ccgbd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_ccgbd .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_agda .FixedPrint );return _ffafg ;};

// B returns the value of the B component of the color.
func (_dagg *PdfColorLab )B ()float64 {return _dagg [2]};

// GetNumComponents returns the number of color components (3 for RGB).
func (_eaba *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_ebeea *PdfColorspaceLab )ColorFromPdfObjects (objects []_bcg .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eecc ,_baafa :=_bcg .GetNumbersAsFloat (objects );
if _baafa !=nil {return nil ,_baafa ;};return _ebeea .ColorFromFloats (_eecc );};

// SetFontByName sets the font specified by keyName to the given object.
func (_ebad *PdfPageResources )SetFontByName (keyName _bcg .PdfObjectName ,obj _bcg .PdfObject )error {if _ebad .Font ==nil {_ebad .Font =_bcg .MakeDict ();};_fcadag ,_eeagce :=_bcg .TraceToDirectObject (_ebad .Font ).(*_bcg .PdfObjectDictionary );if !_eeagce {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bcg .TraceToDirectObject (_ebad .Font ));
return _bcg .ErrTypeError ;};_fcadag .Set (keyName ,obj );return nil ;};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bcg .PdfObject ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_dbabg *PdfPageResources )GetShadingByName (keyName _bcg .PdfObjectName )(*PdfShading ,bool ){if _dbabg .Shading ==nil {return nil ,false ;};_agbfeb ,_bacce :=_bcg .TraceToDirectObject (_dbabg .Shading ).(*_bcg .PdfObjectDictionary );if !_bacce {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbabg .Shading );
return nil ,false ;};if _gdfda :=_agbfeb .Get (keyName );_gdfda !=nil {_acac ,_fgcfg :=_bccf (_gdfda );if _fgcfg !=nil {_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_fgcfg );
return nil ,false ;};return _acac ,true ;};return nil ,false ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _bcg .PdfObject ;Name _bcg .PdfObject ;};func (_feaaa *PdfReader )traverseObjectData (_egba _bcg .PdfObject )error {return _bcg .ResolveReferencesDeep (_egba ,_feaaa ._ebfgb );};


// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_cgdgc *_bcg .PdfIndirectObject ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_gbgdd *PdfWriter )SetPageLabels (pageLabels _bcg .PdfObject )error {if pageLabels ==nil {return nil ;};_dff .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_gbgdd ._gbfg .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _gbgdd .addObjects (pageLabels );};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_bcg .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_ebgc *_bcg .PdfIndirectObject ;};func (_dcf *PdfReader )newPdfAnnotationCircleFromDict (_bbaf *_bcg .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_fge :=PdfAnnotationCircle {};
_gfce ,_eggf :=_dcf .newPdfAnnotationMarkupFromDict (_bbaf );if _eggf !=nil {return nil ,_eggf ;};_fge .PdfAnnotationMarkup =_gfce ;_fge .BS =_bbaf .Get ("\u0042\u0053");_fge .IC =_bbaf .Get ("\u0049\u0043");_fge .BE =_bbaf .Get ("\u0042\u0045");_fge .RD =_bbaf .Get ("\u0052\u0044");
return &_fge ,nil ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_befa *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_befa .HiVal )};};func _bddfa (_bbeab ,_fbadf string )string {if _ce .Contains (_bbeab ,"\u002b"){_acbd :=_ce .Split (_bbeab ,"\u002b");if len (_acbd )==2{_bbeab =_acbd [1];
};};return _fbadf +"\u002b"+_bbeab ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_bcg .PdfObjectString ;Q *_bcg .PdfObjectInteger ;DS *_bcg .PdfObjectString ;RV _bcg .PdfObject ;MaxLen *_bcg .PdfObjectInteger ;};func (_gecfa *PdfAcroForm )filteredFields (_efebd FieldFilterFunc ,_fgdbc bool )[]*PdfField {if _gecfa ==nil {return nil ;
};return _gcgba (_gecfa .Fields ,_efebd ,_fgdbc );};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_fcdf :=&PdfBorderStyle {};return _fcdf };func _cfgf (_efegf _bcg .PdfObject )(*PdfFunctionType3 ,error ){_ebaf :=&PdfFunctionType3 {};var _gcbc *_bcg .PdfObjectDictionary ;if _bbegc ,_dfda :=_efegf .(*_bcg .PdfIndirectObject );
_dfda {_edba ,_faade :=_bbegc .PdfObject .(*_bcg .PdfObjectDictionary );if !_faade {return nil ,_bcd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ebaf ._dgfc =_bbegc ;_gcbc =_edba ;}else if _aaeag ,_gaba :=_efegf .(*_bcg .PdfObjectDictionary );
_gaba {_gcbc =_aaeag ;}else {return nil ,_bcd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ddag ,_egfgb :=_bcg .TraceToDirectObject (_gcbc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bcg .PdfObjectArray );
if !_egfgb {_dff .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_bcd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _ddag .Len ()!=2{_dff .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_bcd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_dabgb ,_agaa :=_ddag .ToFloat64Array ();
if _agaa !=nil {return nil ,_agaa ;};_ebaf .Domain =_dabgb ;_ddag ,_egfgb =_bcg .TraceToDirectObject (_gcbc .Get ("\u0052\u0061\u006eg\u0065")).(*_bcg .PdfObjectArray );if _egfgb {if _ddag .Len ()< 0||_ddag .Len ()%2!=0{return nil ,_bcd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_adedc ,_dddfg :=_ddag .ToFloat64Array ();if _dddfg !=nil {return nil ,_dddfg ;};_ebaf .Range =_adedc ;};_ddag ,_egfgb =_bcg .TraceToDirectObject (_gcbc .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_bcg .PdfObjectArray );if !_egfgb {_dff .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_bcd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_ebaf .Functions =[]PdfFunction {};
for _ ,_fdcf :=range _ddag .Elements (){_efdfd ,_ddea :=_bdgfe (_fdcf );if _ddea !=nil {return nil ,_ddea ;};_ebaf .Functions =append (_ebaf .Functions ,_efdfd );};_ddag ,_egfgb =_bcg .TraceToDirectObject (_gcbc .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_bcg .PdfObjectArray );
if !_egfgb {_dff .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_bcd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_eddba ,_agaa :=_ddag .ToFloat64Array ();if _agaa !=nil {return nil ,_agaa ;};_ebaf .Bounds =_eddba ;if len (_ebaf .Bounds )!=len (_ebaf .Functions )-1{_dff .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_ebaf .Bounds ),len (_ebaf .Functions ));
return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddag ,_egfgb =_bcg .TraceToDirectObject (_gcbc .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bcg .PdfObjectArray );if !_egfgb {_dff .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_bcd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_abag ,_agaa :=_ddag .ToFloat64Array ();
if _agaa !=nil {return nil ,_agaa ;};_ebaf .Encode =_abag ;if len (_ebaf .Encode )!=2*len (_ebaf .Functions ){_dff .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_ebaf .Encode ),len (_ebaf .Functions ));
return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _ebaf ,nil ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _dd .Time ){_dgea .Lock ();defer _dgea .Unlock ();_gfbb =modifiedDate ;};func (_dagfae *PdfWriter )writeXRefStreams (_bccfe int ,_addfg int64 )error {_dbbbce :=_bccfe +1;_dagfae ._caaea [_dbbbce ]=crossReference {Type :1,ObjectNumber :_dbbbce ,Offset :_addfg };
_effdb :=_gg .NewBuffer (nil );_ffdgf :=_bcg .MakeArray ();for _febb :=0;_febb <=_bccfe ;{for ;_febb <=_bccfe ;_febb ++{_becac ,_dceae :=_dagfae ._caaea [_febb ];if _dceae &&(!_dagfae ._gaggd ||_dagfae ._gaggd &&(_becac .Type ==1&&_becac .Offset >=_dagfae ._edbde ||_becac .Type ==0)){break ;
};};var _dbfg int ;for _dbfg =_febb +1;_dbfg <=_bccfe ;_dbfg ++{_bgfac ,_gbccc :=_dagfae ._caaea [_dbfg ];if _gbccc &&(!_dagfae ._gaggd ||_dagfae ._gaggd &&(_bgfac .Type ==1&&_bgfac .Offset > _dagfae ._edbde )){continue ;};break ;};_ffdgf .Append (_bcg .MakeInteger (int64 (_febb )),_bcg .MakeInteger (int64 (_dbfg -_febb )));
for _ffeca :=_febb ;_ffeca < _dbfg ;_ffeca ++{_ceeca :=_dagfae ._caaea [_ffeca ];switch _ceeca .Type {case 0:_f .Write (_effdb ,_f .BigEndian ,byte (0));_f .Write (_effdb ,_f .BigEndian ,uint32 (0));_f .Write (_effdb ,_f .BigEndian ,uint16 (0xFFFF));case 1:_f .Write (_effdb ,_f .BigEndian ,byte (1));
_f .Write (_effdb ,_f .BigEndian ,uint32 (_ceeca .Offset ));_f .Write (_effdb ,_f .BigEndian ,uint16 (_ceeca .Generation ));case 2:_f .Write (_effdb ,_f .BigEndian ,byte (2));_f .Write (_effdb ,_f .BigEndian ,uint32 (_ceeca .ObjectNumber ));_f .Write (_effdb ,_f .BigEndian ,uint16 (_ceeca .Index ));
};};_febb =_dbfg +1;};_fgagc ,_cade :=_bcg .MakeStream (_effdb .Bytes (),_bcg .NewFlateEncoder ());if _cade !=nil {return _cade ;};_fgagc .ObjectNumber =int64 (_dbbbce );_fgagc .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_bcg .MakeName ("\u0058\u0052\u0065\u0066"));
_fgagc .PdfObjectDictionary .Set ("\u0057",_bcg .MakeArray (_bcg .MakeInteger (1),_bcg .MakeInteger (4),_bcg .MakeInteger (2)));_fgagc .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_ffdgf );_fgagc .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_bcg .MakeInteger (int64 (_dbbbce +1)));
_fgagc .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_dagfae ._cbdd );_fgagc .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_dagfae ._agged );if _dagfae ._gaggd &&_dagfae ._gdbdg > 0{_fgagc .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_bcg .MakeInteger (_dagfae ._gdbdg ));
};if _dagfae ._ebfab !=nil {_fgagc .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_dagfae ._eaadde );};if _dagfae ._cdfbd ==nil &&_dagfae ._dcadb !=""&&_dagfae ._cdbg !=""{_dagfae ._cdfbd =_bcg .MakeArray (_bcg .MakeHexString (_dagfae ._dcadb ),_bcg .MakeHexString (_dagfae ._cdbg ));
};if _dagfae ._cdfbd !=nil {_dff .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_dagfae ._cdfbd );_fgagc .Set ("\u0049\u0044",_dagfae ._cdfbd );};_dagfae .writeObject (int (_fgagc .ObjectNumber ),_fgagc );return nil ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_egagg :=&PdfPageResources {};_egagg ._bgbd =_bcg .MakeDict ();return _egagg ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cgdae *PdfShadingType1 )ToPdfObject ()_bcg .PdfObject {_cgdae .PdfShading .ToPdfObject ();_fggg ,_fgfcf :=_cgdae .getShadingDict ();if _fgfcf !=nil {_dff .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _cgdae .Domain !=nil {_fggg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cgdae .Domain );};if _cgdae .Matrix !=nil {_fggg .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_cgdae .Matrix );};if _cgdae .Function !=nil {if len (_cgdae .Function )==1{_fggg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cgdae .Function [0].ToPdfObject ());
}else {_eedb :=_bcg .MakeArray ();for _ ,_gbgcc :=range _cgdae .Function {_eedb .Append (_gbgcc .ToPdfObject ());};_fggg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_eedb );};};return _cgdae ._cdefff ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_gffed int ,_cbab *PdfPage )error ;

// ToPdfObject implements interface PdfModel.
func (_ddb *PdfActionNamed )ToPdfObject ()_bcg .PdfObject {_ddb .PdfAction .ToPdfObject ();_fcc :=_ddb ._aag ;_cae :=_fcc .PdfObject .(*_bcg .PdfObjectDictionary );_cae .SetIfNotNil ("\u0053",_bcg .MakeName (string (ActionTypeNamed )));_cae .SetIfNotNil ("\u004e",_ddb .N );
return _fcc ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_aac :=NewPdfAction ();_ced :=&PdfActionGoTo3DView {};_ced .PdfAction =_aac ;_aac .SetContext (_ced );return _ced ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_ea :=NewPdfAction ();_bdd :=&PdfActionMovie {};_bdd .PdfAction =_ea ;_ea .SetContext (_bdd );return _bdd ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_cdfaa *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_gabdb :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_fecaf ,_bgeafg :=_cdfaa .GetNumPages ();if _bgeafg !=nil {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bgeafg );
return nil ,_bgeafg ;};for _bccggc :=1;_bccggc <=_fecaf ;_bccggc ++{_ggdd ,_ddbbg :=_cdfaa .GetPage (_bccggc );if _ddbbg !=nil {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ddbbg );return nil ,_ddbbg ;};if opts .PageProcessCallback !=nil {_ddbbg =opts .PageProcessCallback (_bccggc ,_ggdd );
if _ddbbg !=nil {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ddbbg );return nil ,_ddbbg ;};}else if opts .PageCallback !=nil {opts .PageCallback (_bccggc ,_ggdd );};_ddbbg =_gabdb .AddPage (_ggdd );if _ddbbg !=nil {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ddbbg );
return nil ,_ddbbg ;};};_gabdb ._cbdba =_cdfaa .PdfVersion ();if !opts .SkipInfo {_acceg ,_eafaa :=_cdfaa .GetPdfInfo ();if _eafaa !=nil {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eafaa );}else {_gabdb ._cbdd .PdfObject =_acceg .ToPdfObject ();
};};if !opts .SkipMetadata {if _cdbfb :=_cdfaa ._fdeec .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_cdbfb !=nil {if _dfdga :=_gabdb .SetCatalogMetadata (_cdbfb );_dfdga !=nil {return nil ,_dfdga ;};};};if !opts .SkipAcroForm {_gfdfg :=_gabdb .SetForms (_cdfaa .AcroForm );
if _gfdfg !=nil {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gfdfg );return nil ,_gfdfg ;};};if !opts .SkipOutlines {_gabdb .AddOutlineTree (_cdfaa .GetOutlineTree ());};if !opts .SkipOCProperties {_gdeafd ,_fbbde :=_cdfaa .GetOCProperties ();
if _fbbde !=nil {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbbde );}else {_fbbde =_gabdb .SetOCProperties (_gdeafd );if _fbbde !=nil {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbbde );};};};if !opts .SkipPageLabels {_decgb ,_afcaf :=_cdfaa .GetPageLabels ();
if _afcaf !=nil {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afcaf );}else {_afcaf =_gabdb .SetPageLabels (_decgb );if _afcaf !=nil {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afcaf );};};};if !opts .SkipNamedDests {_fdeca ,_adabf :=_cdfaa .GetNamedDestinations ();
if _adabf !=nil {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adabf );}else {_adabf =_gabdb .SetNamedDestinations (_fdeca );if _adabf !=nil {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_adabf );};};};if !opts .SkipNameDictionary {_aaaac ,_fecg :=_cdfaa .GetNameDictionary ();
if _fecg !=nil {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fecg );}else {_fecg =_gabdb .SetNameDictionary (_aaaac );if _fecg !=nil {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fecg );};};};if !opts .SkipRotation &&_cdfaa .Rotate !=nil {if _bbcbd :=_gabdb .SetRotation (*_cdfaa .Rotate );
_bbcbd !=nil {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbcbd );};};return &_gabdb ,nil ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_dgcc *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_dgcc ._eedf =colorspace ;};func _ceaa (_eabfb _bcg .PdfObject )[]*_bcg .PdfObjectStream {if _eabfb ==nil {return nil ;};_abfc ,_dcdggf :=_bcg .GetArray (_eabfb );if !_dcdggf ||_abfc .Len ()==0{return nil ;
};_ceda :=make ([]*_bcg .PdfObjectStream ,0,_abfc .Len ());for _ ,_adgcd :=range _abfc .Elements (){if _ebbce ,_debfb :=_bcg .GetStream (_adgcd );_debfb {_ceda =append (_ceda ,_ebbce );};};return _ceda ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_dcfd *modelManager )GetModelFromPrimitive (primitive _bcg .PdfObject )PdfModel {model ,_gggfa :=_dcfd ._eeadf [primitive ];if !_gggfa {return nil ;};return model ;};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_dbdef *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _dbdef .baseFields ()._faaca !=nil {return _dbdef .baseFields ()._faaca ;};if _abddf :=_dbdef ._aabbg .getFontDescriptor ();_abddf !=nil {return _abddf ;};_dff .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_dbdef );
return nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_fdcgd *PdfFunctionType4 )ToPdfObject ()_bcg .PdfObject {_gaeece :=_fdcgd ._gebfc ;if _gaeece ==nil {_fdcgd ._gebfc =&_bcg .PdfObjectStream {};_gaeece =_fdcgd ._gebfc ;};_edbbb :=_bcg .MakeDict ();_edbbb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bcg .MakeInteger (4));
_gcfce :=&_bcg .PdfObjectArray {};for _ ,_ffebc :=range _fdcgd .Domain {_gcfce .Append (_bcg .MakeFloat (_ffebc ));};_edbbb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gcfce );_dacdd :=&_bcg .PdfObjectArray {};for _ ,_ffbfd :=range _fdcgd .Range {_dacdd .Append (_bcg .MakeFloat (_ffbfd ));
};_edbbb .Set ("\u0052\u0061\u006eg\u0065",_dacdd );if _fdcgd ._bdbb ==nil &&_fdcgd .Program !=nil {_fdcgd ._bdbb =[]byte (_fdcgd .Program .String ());};_edbbb .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bcg .MakeInteger (int64 (len (_fdcgd ._bdbb ))));
_gaeece .Stream =_fdcgd ._bdbb ;_gaeece .PdfObjectDictionary =_edbbb ;return _gaeece ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _bcg .PdfObject ;_fdfca []byte ;_ggaa *_bcg .PdfIndirectObject ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_fafb ,_debe :=NewStandard14Font (basefont );if _debe !=nil {panic (_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _fafb ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_facd *PdfOutlineTreeNode )ToPdfObject ()_bcg .PdfObject {return _facd .GetContext ().ToPdfObject ();};

// SetContext set the sub annotation (context).
func (_cgada *PdfShading )SetContext (ctx PdfModel ){_cgada ._cbaa =ctx };func _bfbbb (_gbdfd *PdfField )[]*PdfField {_ccgg :=[]*PdfField {_gbdfd };for _ ,_gdda :=range _gbdfd .Kids {_ccgg =append (_ccgg ,_bfbbb (_gdda )...);};return _ccgg ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_gbcg pdfFontSimple )GetCharMetrics (code _bf .CharCode )(_dgb .CharMetrics ,bool ){if _dffd ,_dcbdc :=_gbcg ._ffgef [code ];_dcbdc {return _dgb .CharMetrics {Wx :_dffd },true ;};if _dgb .IsStdFont (_dgb .StdFontName (_gbcg ._aafc )){return _dgb .CharMetrics {Wx :250},true ;
};return _dgb .CharMetrics {},false ;};

// ToPdfObject implements interface PdfModel.
func (_agb *PdfActionGoToE )ToPdfObject ()_bcg .PdfObject {_agb .PdfAction .ToPdfObject ();_bfd :=_agb ._aag ;_cga :=_bfd .PdfObject .(*_bcg .PdfObjectDictionary );_cga .SetIfNotNil ("\u0053",_bcg .MakeName (string (ActionTypeGoToE )));if _agb .F !=nil {_cga .Set ("\u0046",_agb .F .ToPdfObject ());
};_cga .SetIfNotNil ("\u0044",_agb .D );_cga .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_agb .NewWindow );_cga .SetIfNotNil ("\u0054",_agb .T );return _bfd ;};func (_fegde *PdfReader )loadStructure ()error {if _fegde ._eadaf .GetCrypter ()!=nil &&!_fegde ._eadaf .IsAuthenticated (){return _g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_ggfe :=_fegde ._eadaf .GetTrailer ();if _ggfe ==nil {return _g .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_effce ,_gffd :=_ggfe .Get ("\u0052\u006f\u006f\u0074").(*_bcg .PdfObjectReference );if !_gffd {return _g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_ggfe );
};_aaega ,_gdeag :=_fegde ._eadaf .LookupByReference (*_effce );if _gdeag !=nil {_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_gdeag );
return _gdeag ;};_bgaba ,_gffd :=_aaega .(*_bcg .PdfIndirectObject );if !_gffd {_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_aaega ,*_ggfe );
return _bcd .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_cdeg ,_gffd :=(*_bgaba ).PdfObject .(*_bcg .PdfObjectDictionary );if !_gffd {_dff .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_bgaba .PdfObject );
return _bcd .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_dff .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_cdeg );_afgbg ,_gffd :=_cdeg .Get ("\u0050\u0061\u0067e\u0073").(*_bcg .PdfObjectReference );
if !_gffd {return _bcd .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_cccdg ,_gdeag :=_fegde ._eadaf .LookupByReference (*_afgbg );
if _gdeag !=nil {_dff .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _gdeag ;};_fgfae ,_gffd :=_cccdg .(*_bcg .PdfIndirectObject );if !_gffd {_dff .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_dff .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_fgfae );return _bcd .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_bbacb ,_gffd :=_fgfae .PdfObject .(*_bcg .PdfObjectDictionary );if !_gffd {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_fgfae );
return _bcd .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_dcggb ,_gffd :=_bcg .GetInt (_bbacb .Get ("\u0043\u006f\u0075n\u0074"));if !_gffd {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _bcd .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_gffd =_bcg .GetName (_bbacb .Get ("\u0054\u0079\u0070\u0065"));!_gffd {_dff .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_bbacb .Set ("\u0054\u0079\u0070\u0065",_bcg .MakeName ("\u0050\u0061\u0067e\u0073"));};if _dgfed ,_cebad :=_bcg .GetInt (_bbacb .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_cebad {_afbca :=int64 (*_dgfed );_fegde .Rotate =&_afbca ;};_fegde ._ffdga =_effce ;
_fegde ._fdeec =_cdeg ;_fegde ._fege =_bbacb ;_fegde ._gegd =_fgfae ;_fegde ._cdbag =int (*_dcggb );_fegde ._fgebbb =[]*_bcg .PdfIndirectObject {};_gagfd :=map[_bcg .PdfObject ]struct{}{};_gdeag =_fegde .buildPageList (_fgfae ,nil ,_gagfd );if _gdeag !=nil {return _gdeag ;
};_dff .Log .Trace ("\u002d\u002d\u002d");_dff .Log .Trace ("\u0054\u004f\u0043");_dff .Log .Trace ("\u0050\u0061\u0067e\u0073");_dff .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_fegde ._fgebbb ),_fegde ._fgebbb );_fegde ._dbgbg ,_gdeag =_fegde .loadOutlines ();
if _gdeag !=nil {_dff .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_gdeag );
return _gdeag ;};_fegde .AcroForm ,_gdeag =_fegde .loadForms ();if _gdeag !=nil {return _gdeag ;};_fegde .DSS ,_gdeag =_fegde .loadDSS ();if _gdeag !=nil {return _gdeag ;};_fegde ._fagggd ,_gdeag =_fegde .loadPerms ();if _gdeag !=nil {return _gdeag ;};
return nil ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_aeaf *_bcg .PdfIndirectObject ;Certs []*_bcg .PdfObjectStream ;OCSPs []*_bcg .PdfObjectStream ;CRLs []*_bcg .PdfObjectStream ;VRI map[string ]*VRI ;_dfgb map[string ]*_bcg .PdfObjectStream ;_aadc map[string ]*_bcg .PdfObjectStream ;_feabbb map[string ]*_bcg .PdfObjectStream ;
};

// ToPdfObject implements interface PdfModel.
func (_aafae *PdfAnnotationRedact )ToPdfObject ()_bcg .PdfObject {_aafae .PdfAnnotation .ToPdfObject ();_ebed :=_aafae ._cbe ;_bcebd :=_ebed .PdfObject .(*_bcg .PdfObjectDictionary );_aafae .PdfAnnotationMarkup .appendToPdfDictionary (_bcebd );_bcebd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_bcebd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_aafae .QuadPoints );_bcebd .SetIfNotNil ("\u0049\u0043",_aafae .IC );_bcebd .SetIfNotNil ("\u0052\u004f",_aafae .RO );_bcebd .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_aafae .OverlayText );
_bcebd .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_aafae .Repeat );_bcebd .SetIfNotNil ("\u0044\u0041",_aafae .DA );_bcebd .SetIfNotNil ("\u0051",_aafae .Q );return _ebed ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_fcfcb *PdfPageResources )SetColorspaceByName (keyName _bcg .PdfObjectName ,cs PdfColorspace )error {_dffed ,_ggbeb :=_fcfcb .GetColorspaces ();if _ggbeb !=nil {_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_ggbeb );
return _ggbeb ;};if _dffed ==nil {_dffed =NewPdfPageResourcesColorspaces ();_fcfcb .SetColorSpace (_dffed );};_dffed .Set (keyName ,cs );return nil ;};type fontCommon struct{_aafc string ;_cfeef string ;_gbeb string ;_aeba _bcg .PdfObject ;_bgebe *_faa .CMap ;
_faaca *PdfFontDescriptor ;_daedg int64 ;};func (_ccgfg *PdfWriter )flushWriter ()error {if _ccgfg ._efgdd ==nil {_ccgfg ._efgdd =_ccgfg ._fbee .Flush ();};return _ccgfg ._efgdd ;};var _ pdfFont =(*pdfFontType3 )(nil );func (_gdfb *PdfReader )newPdfAnnotationHighlightFromDict (_bceb *_bcg .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_aafge :=PdfAnnotationHighlight {};
_cff ,_bfb :=_gdfb .newPdfAnnotationMarkupFromDict (_bceb );if _bfb !=nil {return nil ,_bfb ;};_aafge .PdfAnnotationMarkup =_cff ;_aafge .QuadPoints =_bceb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_aafge ,nil ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_aeaba FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_aeaba .Mask ()|fl .Mask ())};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_bcg .PdfObjectStream ;OCSP []*_bcg .PdfObjectStream ;CRL []*_bcg .PdfObjectStream ;TU *_bcg .PdfObjectString ;TS *_bcg .PdfObjectString ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_cgde *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dfgd :=vals [0];if _dfgd < 0.0||_dfgd > 1.0{_dff .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dfgd );
return nil ,ErrColorOutOfRange ;};_bfgbb :=vals [1];if _bfgbb < 0.0||_bfgbb > 1.0{_dff .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bfgbb );return nil ,ErrColorOutOfRange ;
};_afbb :=vals [2];if _afbb < 0.0||_afbb > 1.0{_dff .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_afbb );return nil ,ErrColorOutOfRange ;};_gcac :=vals [3];
if _gcac < 0.0||_gcac > 1.0{_dff .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gcac );return nil ,ErrColorOutOfRange ;};_fefg :=NewPdfColorDeviceCMYK (_dfgd ,_bfgbb ,_afbb ,_gcac );
return _fefg ,nil ;};func (_agdf *PdfReader )newPdfAnnotationInkFromDict (_fdf *_bcg .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_gag :=PdfAnnotationInk {};_caecb ,_eeab :=_agdf .newPdfAnnotationMarkupFromDict (_fdf );if _eeab !=nil {return nil ,_eeab ;
};_gag .PdfAnnotationMarkup =_caecb ;_gag .InkList =_fdf .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_gag .BS =_fdf .Get ("\u0042\u0053");return &_gag ,nil ;};

// GetContainingPdfObject implements model.PdfModel interface.
func (_dege *PdfOutputIntent )GetContainingPdfObject ()_bcg .PdfObject {return _dege ._faec };func (_ddcbf *LTV )getCerts (_aacfa []*_ag .Certificate )([][]byte ,error ){_cfeg :=make ([][]byte ,0,len (_aacfa ));for _ ,_dfdg :=range _aacfa {_cfeg =append (_cfeg ,_dfdg .Raw );
};return _cfeg ,nil ;};func (_adga *pdfFontSimple )baseFields ()*fontCommon {return &_adga .fontCommon };

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_degb *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gebd :=vals [0];if _gebd < 0.0||_gebd > 1.0{_dff .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gebd );
return nil ,ErrColorOutOfRange ;};_cdeff :=vals [1];if _cdeff < 0.0||_cdeff > 1.0{_dff .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gebd );return nil ,ErrColorOutOfRange ;
};_egfgc :=vals [2];if _egfgc < 0.0||_egfgc > 1.0{_dff .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gebd );return nil ,ErrColorOutOfRange ;};_gacc :=NewPdfColorDeviceRGB (_gebd ,_cdeff ,_egfgc );
return _gacc ,nil ;};func (_bgaac *PdfWriter )writeOutlines ()error {if _bgaac ._edbec ==nil {return nil ;};_dff .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_bgaac ._edbec );_eacdbb :=_bgaac ._edbec .ToPdfObject ();
_dff .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_eacdbb ,_eacdbb ,_eacdbb );_bgaac ._gbfg .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_eacdbb );
_adedg :=_bgaac .addObjects (_eacdbb );if _adedg !=nil {return _adedg ;};return nil ;};

// SetName sets the `Name` field of the signature.
func (_cfada *PdfSignature )SetName (name string ){_cfada .Name =_bcg .MakeString (name )};

// ToPdfObject returns a PDF object representation of the outline item.
func (_dcda *OutlineItem )ToPdfObject ()_bcg .PdfObject {_gacca ,_ :=_dcda .ToPdfOutlineItem ();return _gacca .ToPdfObject ();};func _cdfcd ()string {_dgea .Lock ();defer _dgea .Unlock ();if len (_bdgbc )> 0{return _bdgbc ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";
};func _gdabd (_caedc *_bcg .PdfObjectDictionary )(*PdfFieldButton ,error ){_bcdg :=&PdfFieldButton {};_bcdg .PdfField =NewPdfField ();_bcdg .PdfField .SetContext (_bcdg );_bcdg .Opt ,_ =_bcg .GetArray (_caedc .Get ("\u004f\u0070\u0074"));_cfda :=NewPdfAnnotationWidget ();
_cfda .A ,_ =_bcg .GetDict (_caedc .Get ("\u0041"));_cfda .AP ,_ =_bcg .GetDict (_caedc .Get ("\u0041\u0050"));_cfda .SetContext (_bcdg );_bcdg .PdfField .Annotations =append (_bcdg .PdfField .Annotations ,_cfda );return _bcdg ,nil ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_bcg .PdfObjectInteger ;BitsPerComponent *_bcg .PdfObjectInteger ;BitsPerFlag *_bcg .PdfObjectInteger ;Decode *_bcg .PdfObjectArray ;Function []PdfFunction ;};var _ebgea =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// Items returns all children outline items.
func (_gceb *Outline )Items ()[]*OutlineItem {return _gceb .Entries };

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _bcg .PdfObject ;BS _bcg .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_gaf *PdfActionRendition )ToPdfObject ()_bcg .PdfObject {_gaf .PdfAction .ToPdfObject ();_aef :=_gaf ._aag ;_cbaea :=_aef .PdfObject .(*_bcg .PdfObjectDictionary );_cbaea .SetIfNotNil ("\u0053",_bcg .MakeName (string (ActionTypeRendition )));_cbaea .SetIfNotNil ("\u0052",_gaf .R );
_cbaea .SetIfNotNil ("\u0041\u004e",_gaf .AN );_cbaea .SetIfNotNil ("\u004f\u0050",_gaf .OP );_cbaea .SetIfNotNil ("\u004a\u0053",_gaf .JS );return _aef ;};

// AddImageResource adds an image to the XObject resources.
func (_dggg *PdfPage )AddImageResource (name _bcg .PdfObjectName ,ximg *XObjectImage )error {var _gfaae *_bcg .PdfObjectDictionary ;if _dggg .Resources .XObject ==nil {_gfaae =_bcg .MakeDict ();_dggg .Resources .XObject =_gfaae ;}else {var _aadff bool ;
_gfaae ,_aadff =(_dggg .Resources .XObject ).(*_bcg .PdfObjectDictionary );if !_aadff {return _bcd .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_gfaae .Set (name ,ximg .ToPdfObject ());
return nil ;};

// ToPdfObject implements interface PdfModel.
func (_eggeb *PdfAnnotationLink )ToPdfObject ()_bcg .PdfObject {_eggeb .PdfAnnotation .ToPdfObject ();_dda :=_eggeb ._cbe ;_ffec :=_dda .PdfObject .(*_bcg .PdfObjectDictionary );_ffec .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u004c\u0069\u006e\u006b"));
if _eggeb ._acf !=nil &&_eggeb ._acf ._afc !=nil {_ffec .Set ("\u0041",_eggeb ._acf ._afc .ToPdfObject ());}else if _eggeb .A !=nil {_ffec .Set ("\u0041",_eggeb .A );};_ffec .SetIfNotNil ("\u0044\u0065\u0073\u0074",_eggeb .Dest );_ffec .SetIfNotNil ("\u0048",_eggeb .H );
_ffec .SetIfNotNil ("\u0050\u0041",_eggeb .PA );_ffec .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_eggeb .QuadPoints );_ffec .SetIfNotNil ("\u0042\u0053",_eggeb .BS );return _dda ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _bcg .PdfObject ;Name _bcg .PdfObject ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_beea PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _beea ._aabbg .getFontDescriptor (),nil ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_fgcd *PdfShading )GetContext ()PdfModel {return _fgcd ._cbaa };func (_fcfae *LTV )enable (_dcceec ,_agcca []*_ag .Certificate ,_bfag string )error {_gbfdg ,_fdege ,_abegc :=_fcfae .buildCertChain (_dcceec ,_agcca );if _abegc !=nil {return _abegc ;
};_adgae ,_abegc :=_fcfae .getCerts (_gbfdg );if _abegc !=nil {return _abegc ;};_bbddb ,_abegc :=_fcfae .getOCSPs (_gbfdg ,_fdege );if _abegc !=nil {return _abegc ;};_abcga ,_abegc :=_fcfae .getCRLs (_gbfdg );if _abegc !=nil {return _abegc ;};_bggcf :=_fcfae ._abbf ;
_eafb ,_abegc :=_bggcf .addCerts (_adgae );if _abegc !=nil {return _abegc ;};_gbfef ,_abegc :=_bggcf .addOCSPs (_bbddb );if _abegc !=nil {return _abegc ;};_accbb ,_abegc :=_bggcf .addCRLs (_abcga );if _abegc !=nil {return _abegc ;};if _bfag !=""{_bggcf .VRI [_bfag ]=&VRI {Cert :_eafb ,OCSP :_gbfef ,CRL :_accbb };
};_fcfae ._cgbab .SetDSS (_bggcf );return nil ;};func _bcfgf (_afff *_bcg .PdfObjectDictionary )bool {for _ ,_aeabd :=range _afff .Keys (){if _ ,_cdedd :=_daadg [_aeabd .String ()];_cdedd {return true ;};};return false ;};func (_dcfcc *PdfWriter )addObjects (_fafad _bcg .PdfObject )error {_dff .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");
if _agab ,_dadbc :=_fafad .(*_bcg .PdfIndirectObject );_dadbc {_dff .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_dff .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_fafad ,_agab );_dff .Log .Trace ("\u002d\u0020\u0025\u0073",_agab .PdfObject );
if _dcfcc .addObject (_agab ){_bdeda :=_dcfcc .addObjects (_agab .PdfObject );if _bdeda !=nil {return _bdeda ;};};return nil ;};if _dbfce ,_bdadf :=_fafad .(*_bcg .PdfObjectStream );_bdadf {_dff .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_dff .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_fafad ,_fafad );
if _dcfcc .addObject (_dbfce ){_gbcbd :=_dcfcc .addObjects (_dbfce .PdfObjectDictionary );if _gbcbd !=nil {return _gbcbd ;};};return nil ;};if _eacdb ,_ababf :=_fafad .(*_bcg .PdfObjectDictionary );_ababf {_dff .Log .Trace ("\u0044\u0069\u0063\u0074");
_dff .Log .Trace ("\u002d\u0020\u0025\u0073",_fafad );for _ ,_geebg :=range _eacdb .Keys (){_ebbg :=_eacdb .Get (_geebg );if _bgcgg ,_beaef :=_ebbg .(*_bcg .PdfObjectReference );_beaef {_ebbg =_bgcgg .Resolve ();_eacdb .Set (_geebg ,_ebbg );};if _geebg !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _aacfab :=_dcfcc .addObjects (_ebbg );
_aacfab !=nil {return _aacfab ;};}else {if _ ,_acagf :=_ebbg .(*_bcg .PdfObjectNull );_acagf {continue ;};if _gfabd :=_dcfcc .hasObject (_ebbg );!_gfabd {_dff .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_ebbg ,_ebbg ,_ebbg );
_dcfcc ._gbcf [_ebbg ]=append (_dcfcc ._gbcf [_ebbg ],_eacdb );};};};return nil ;};if _bffd ,_dbccf :=_fafad .(*_bcg .PdfObjectArray );_dbccf {_dff .Log .Trace ("\u0041\u0072\u0072a\u0079");_dff .Log .Trace ("\u002d\u0020\u0025\u0073",_fafad );if _bffd ==nil {return _bcd .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _fgdea ,_fgcg :=range _bffd .Elements (){if _ccaaf ,_ceedg :=_fgcg .(*_bcg .PdfObjectReference );_ceedg {_fgcg =_ccaaf .Resolve ();_bffd .Set (_fgdea ,_fgcg );};if _dffdc :=_dcfcc .addObjects (_fgcg );_dffdc !=nil {return _dffdc ;};};return nil ;
};if _ ,_dgfeb :=_fafad .(*_bcg .PdfObjectReference );_dgfeb {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_fafad );
return _bcd .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// GetContainingPdfObject implements interface PdfModel.
func (_defebc *Permissions )GetContainingPdfObject ()_bcg .PdfObject {return _defebc ._cdade };func _bgce (_ccefd *_bcg .PdfObjectDictionary )(*PdfShadingType4 ,error ){_gggfc :=PdfShadingType4 {};_caaab :=_ccefd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _caaab ==nil {_dff .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dafd ,_agbc :=_caaab .(*_bcg .PdfObjectInteger );if !_agbc {_dff .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_caaab );
return nil ,_bcg .ErrTypeError ;};_gggfc .BitsPerCoordinate =_dafd ;_caaab =_ccefd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _caaab ==nil {_dff .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dafd ,_agbc =_caaab .(*_bcg .PdfObjectInteger );if !_agbc {_dff .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_caaab );
return nil ,_bcg .ErrTypeError ;};_gggfc .BitsPerComponent =_dafd ;_caaab =_ccefd .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _caaab ==nil {_dff .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dafd ,_agbc =_caaab .(*_bcg .PdfObjectInteger );if !_agbc {_dff .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_caaab );
return nil ,_bcg .ErrTypeError ;};_gggfc .BitsPerComponent =_dafd ;_caaab =_ccefd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _caaab ==nil {_dff .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_bdgbb ,_agbc :=_caaab .(*_bcg .PdfObjectArray );if !_agbc {_dff .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_caaab );
return nil ,_bcg .ErrTypeError ;};_gggfc .Decode =_bdgbb ;_caaab =_ccefd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _caaab ==nil {_dff .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_gggfc .Function =[]PdfFunction {};if _efgb ,_debeg :=_caaab .(*_bcg .PdfObjectArray );_debeg {for _ ,_gabea :=range _efgb .Elements (){_cabbda ,_dffb :=_bdgfe (_gabea );if _dffb !=nil {_dff .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dffb );
return nil ,_dffb ;};_gggfc .Function =append (_gggfc .Function ,_cabbda );};}else {_ccfff ,_dgefd :=_bdgfe (_caaab );if _dgefd !=nil {_dff .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dgefd );
return nil ,_dgefd ;};_gggfc .Function =append (_gggfc .Function ,_ccfff );};return &_gggfc ,nil ;};func (_cdfa *LTV )validateSig (_fafg *PdfSignature )error {if _fafg ==nil ||_fafg .Contents ==nil ||len (_fafg .Contents .Bytes ())==0{return _g .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_fafg );
};return nil ;};func (_eaed *PdfReader )newPdfActionGotoEFromDict (_fce *_bcg .PdfObjectDictionary )(*PdfActionGoToE ,error ){_agg ,_ggb :=_bab (_fce .Get ("\u0046"));if _ggb !=nil {return nil ,_ggb ;};return &PdfActionGoToE {D :_fce .Get ("\u0044"),NewWindow :_fce .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_fce .Get ("\u0054"),F :_agg },nil ;
};

// GetOutlineTree returns the outline tree.
func (_eaffg *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _eaffg ._dbgbg };

// ToInteger convert to an integer format.
func (_ggbf *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_fcfd :=_ab .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_fcfd *_ggbf .A ()),uint32 (_fcfd *_ggbf .B ()),uint32 (_fcfd *_ggbf .C ())};};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_eadaf *_bcg .PdfParser ;_ffdga _bcg .PdfObject ;_gegd *_bcg .PdfIndirectObject ;_fege *_bcg .PdfObjectDictionary ;_fgebbb []*_bcg .PdfIndirectObject ;PageList []*PdfPage ;_cdbag int ;_fdeec *_bcg .PdfObjectDictionary ;_dbgbg *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_fagggd *Permissions ;_gdcc map[*PdfReader ]*PdfReader ;_cdddg []*PdfReader ;_abgg *modelManager ;_gdfa bool ;_ebfgb map[_bcg .PdfObject ]struct{};_bggbbg _dg .ReadSeeker ;_bdbga string ;_decgg bool ;_efec *ReaderOpts ;
_dgege bool ;};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _dd .Time ){_dgea .Lock ();defer _dgea .Unlock ();_edgbd =creationDate ;};func (_cdebc *PdfReader )resolveReference (_adbbdc *_bcg .PdfObjectReference )(_bcg .PdfObject ,bool ,error ){_dfegc ,_babgg :=_cdebc ._eadaf .ObjCache [int (_adbbdc .ObjectNumber )];
if !_babgg {_dff .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_adbbdc );_abdcc ,_cfca :=_cdebc ._eadaf .LookupByReference (*_adbbdc );if _cfca !=nil {return nil ,false ,_cfca ;};_cdebc ._eadaf .ObjCache [int (_adbbdc .ObjectNumber )]=_abdcc ;
return _abdcc ,false ,nil ;};return _dfegc ,true ,nil ;};

// GetAction returns the PDF action for the annotation link.
func (_eff *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _eff ._acf !=nil {return _eff ._acf ,nil ;};if _eff .A ==nil {return nil ,nil ;};if _eff ._adef ==nil {return nil ,nil ;};_aafg ,_faae :=_eff ._adef .loadAction (_eff .A );if _faae !=nil {return nil ,_faae ;
};_eff ._acf =_aafg ;return _eff ._acf ,nil ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_aabcb *PdfReader )IsEncrypted ()(bool ,error ){return _aabcb ._eadaf .IsEncrypted ()};

// ToPdfObject implements interface PdfModel.
func (_degbfc *PdfSignatureReference )ToPdfObject ()_bcg .PdfObject {_ddaaf :=_bcg .MakeDict ();_ddaaf .SetIfNotNil ("\u0054\u0079\u0070\u0065",_degbfc .Type );_ddaaf .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_degbfc .TransformMethod );
_ddaaf .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_degbfc .TransformParams );_ddaaf .SetIfNotNil ("\u0044\u0061\u0074\u0061",_degbfc .Data );_ddaaf .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_degbfc .DigestMethod );
return _ddaaf ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _bcg .PdfObject ;Open _bcg .PdfObject ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_acec :=&PdfColorspaceSpecialSeparation {};return _acec ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_ebfgb :map[_bcg .PdfObject ]struct{}{},_abgg :_dfgac (),_eadaf :_bcg .NewParserFromString (txt )};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_becfc *PdfShadingType6 )ToPdfObject ()_bcg .PdfObject {_becfc .PdfShading .ToPdfObject ();_faee ,_fcgdf :=_becfc .getShadingDict ();if _fcgdf !=nil {_dff .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _becfc .BitsPerCoordinate !=nil {_faee .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_becfc .BitsPerCoordinate );};if _becfc .BitsPerComponent !=nil {_faee .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_becfc .BitsPerComponent );
};if _becfc .BitsPerFlag !=nil {_faee .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_becfc .BitsPerFlag );};if _becfc .Decode !=nil {_faee .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_becfc .Decode );};if _becfc .Function !=nil {if len (_becfc .Function )==1{_faee .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_becfc .Function [0].ToPdfObject ());
}else {_deag :=_bcg .MakeArray ();for _ ,_gagac :=range _becfc .Function {_deag .Append (_gagac .ToPdfObject ());};_faee .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_deag );};};return _becfc ._cdefff ;};

// String returns a string describing the font descriptor.
func (_ceee *PdfFontDescriptor )String ()string {var _faaed []string ;if _ceee .FontName !=nil {_faaed =append (_faaed ,_ceee .FontName .String ());};if _ceee .FontFamily !=nil {_faaed =append (_faaed ,_ceee .FontFamily .String ());};if _ceee .fontFile !=nil {_faaed =append (_faaed ,_ceee .fontFile .String ());
};if _ceee ._ecege !=nil {_faaed =append (_faaed ,_ceee ._ecege .String ());};_faaed =append (_faaed ,_g .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_ceee .FontFile3 !=nil ));return _g .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_ce .Join (_faaed ,"\u002c\u0020"));
};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_fdcab *PdfFieldSignature )ToPdfObject ()_bcg .PdfObject {if _fdcab .PdfAnnotationWidget !=nil {_fdcab .PdfAnnotationWidget .ToPdfObject ();};_fdcab .PdfField .ToPdfObject ();_cdag :=_fdcab ._bddgb ;_aadgc :=_cdag .PdfObject .(*_bcg .PdfObjectDictionary );
_aadgc .SetIfNotNil ("\u0046\u0054",_bcg .MakeName ("\u0053\u0069\u0067"));_aadgc .SetIfNotNil ("\u004c\u006f\u0063\u006b",_fdcab .Lock );_aadgc .SetIfNotNil ("\u0053\u0056",_fdcab .SV );if _fdcab .V !=nil {_aadgc .SetIfNotNil ("\u0056",_fdcab .V .ToPdfObject ());
};return _cdag ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _bcg .PdfObject ;Popup *PdfAnnotationPopup ;CA _bcg .PdfObject ;RC _bcg .PdfObject ;CreationDate _bcg .PdfObject ;IRT _bcg .PdfObject ;Subj _bcg .PdfObject ;RT _bcg .PdfObject ;IT _bcg .PdfObject ;ExData _bcg .PdfObject ;
};

// GetCharMetrics returns the char metrics for character code `code`.
func (_gedb pdfCIDFontType0 )GetCharMetrics (code _bf .CharCode )(_dgb .CharMetrics ,bool ){_ddcd :=_gedb ._cfaa ;if _ggaf ,_fcdad :=_gedb ._bcedd [code ];_fcdad {_ddcd =_ggaf ;};return _dgb .CharMetrics {Wx :_ddcd },true ;};func (_aagcg *PdfReader )newPdfAnnotationFromIndirectObject (_ebe *_bcg .PdfIndirectObject )(*PdfAnnotation ,error ){_cdae ,_dcd :=_ebe .PdfObject .(*_bcg .PdfObjectDictionary );
if !_dcd {return nil ,_g .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_aagcg ._abgg .GetModelFromPrimitive (_cdae );model !=nil {_deg ,_ffc :=model .(*PdfAnnotation );if !_ffc {return nil ,_g .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _deg ,nil ;};_eedgc :=&PdfAnnotation {};_eedgc ._cbe =_ebe ;_aagcg ._abgg .Register (_cdae ,_eedgc );if _bac :=_cdae .Get ("\u0054\u0079\u0070\u0065");_bac !=nil {_gfef ,_fadb :=_bac .(*_bcg .PdfObjectName );if !_fadb {_dff .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_bac );
}else {if *_gfef !="\u0041\u006e\u006eo\u0074"{_dff .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_gfef );};};};
if _baeg :=_cdae .Get ("\u0052\u0065\u0063\u0074");_baeg !=nil {_eedgc .Rect =_baeg ;};if _cbf :=_cdae .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_cbf !=nil {_eedgc .Contents =_cbf ;};if _ega :=_cdae .Get ("\u0050");_ega !=nil {_eedgc .P =_ega ;
};if _ddbd :=_cdae .Get ("\u004e\u004d");_ddbd !=nil {_eedgc .NM =_ddbd ;};if _acgd :=_cdae .Get ("\u004d");_acgd !=nil {_eedgc .M =_acgd ;};if _ebcb :=_cdae .Get ("\u0046");_ebcb !=nil {_eedgc .F =_ebcb ;};if _adgf :=_cdae .Get ("\u0041\u0050");_adgf !=nil {_eedgc .AP =_adgf ;
};if _ffe :=_cdae .Get ("\u0041\u0053");_ffe !=nil {_eedgc .AS =_ffe ;};if _debc :=_cdae .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_debc !=nil {_eedgc .Border =_debc ;};if _edag :=_cdae .Get ("\u0043");_edag !=nil {_eedgc .C =_edag ;};if _dddc :=_cdae .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_dddc !=nil {_eedgc .StructParent =_dddc ;};if _eeb :=_cdae .Get ("\u004f\u0043");_eeb !=nil {_eedgc .OC =_eeb ;};_ddbb :=_cdae .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _ddbb ==nil {_dff .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_eedgc ._cge =nil ;return _eedgc ,nil ;};_ecc ,_cca :=_ddbb .(*_bcg .PdfObjectName );if !_cca {_dff .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_ddbb );
return nil ,_g .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_ddbb );};switch *_ecc {case "\u0054\u0065\u0078\u0074":_dffg ,_fadg :=_aagcg .newPdfAnnotationTextFromDict (_cdae );
if _fadg !=nil {return nil ,_fadg ;};_dffg .PdfAnnotation =_eedgc ;_eedgc ._cge =_dffg ;return _eedgc ,nil ;case "\u004c\u0069\u006e\u006b":_caae ,_cfcc :=_aagcg .newPdfAnnotationLinkFromDict (_cdae );if _cfcc !=nil {return nil ,_cfcc ;};_caae .PdfAnnotation =_eedgc ;
_eedgc ._cge =_caae ;return _eedgc ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_gcga ,_aabg :=_aagcg .newPdfAnnotationFreeTextFromDict (_cdae );if _aabg !=nil {return nil ,_aabg ;};_gcga .PdfAnnotation =_eedgc ;_eedgc ._cge =_gcga ;return _eedgc ,nil ;
case "\u004c\u0069\u006e\u0065":_ggbge ,_ebcc :=_aagcg .newPdfAnnotationLineFromDict (_cdae );if _ebcc !=nil {return nil ,_ebcc ;};_ggbge .PdfAnnotation =_eedgc ;_eedgc ._cge =_ggbge ;_dff .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_eedgc ,_eedgc );
_dff .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_ggbge ,_ggbge );_dff .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_ggbge .PdfAnnotationMarkup ,_ggbge .PdfAnnotationMarkup );
return _eedgc ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_fded ,_bgca :=_aagcg .newPdfAnnotationSquareFromDict (_cdae );if _bgca !=nil {return nil ,_bgca ;};_fded .PdfAnnotation =_eedgc ;_eedgc ._cge =_fded ;return _eedgc ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_edde ,_bbgd :=_aagcg .newPdfAnnotationCircleFromDict (_cdae );
if _bbgd !=nil {return nil ,_bbgd ;};_edde .PdfAnnotation =_eedgc ;_eedgc ._cge =_edde ;return _eedgc ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_eab ,_abe :=_aagcg .newPdfAnnotationPolygonFromDict (_cdae );if _abe !=nil {return nil ,_abe ;};_eab .PdfAnnotation =_eedgc ;
_eedgc ._cge =_eab ;return _eedgc ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_edf ,_ffaa :=_aagcg .newPdfAnnotationPolyLineFromDict (_cdae );if _ffaa !=nil {return nil ,_ffaa ;};_edf .PdfAnnotation =_eedgc ;_eedgc ._cge =_edf ;return _eedgc ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_bcfa ,_ggd :=_aagcg .newPdfAnnotationHighlightFromDict (_cdae );if _ggd !=nil {return nil ,_ggd ;};_bcfa .PdfAnnotation =_eedgc ;_eedgc ._cge =_bcfa ;return _eedgc ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_geeg ,_cdgc :=_aagcg .newPdfAnnotationUnderlineFromDict (_cdae );
if _cdgc !=nil {return nil ,_cdgc ;};_geeg .PdfAnnotation =_eedgc ;_eedgc ._cge =_geeg ;return _eedgc ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_ccg ,_gafc :=_aagcg .newPdfAnnotationSquigglyFromDict (_cdae );if _gafc !=nil {return nil ,_gafc ;
};_ccg .PdfAnnotation =_eedgc ;_eedgc ._cge =_ccg ;return _eedgc ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_bec ,_fed :=_aagcg .newPdfAnnotationStrikeOut (_cdae );if _fed !=nil {return nil ,_fed ;};_bec .PdfAnnotation =_eedgc ;_eedgc ._cge =_bec ;
return _eedgc ,nil ;case "\u0043\u0061\u0072e\u0074":_dcce ,_faad :=_aagcg .newPdfAnnotationCaretFromDict (_cdae );if _faad !=nil {return nil ,_faad ;};_dcce .PdfAnnotation =_eedgc ;_eedgc ._cge =_dcce ;return _eedgc ,nil ;case "\u0053\u0074\u0061m\u0070":_ggc ,_aagb :=_aagcg .newPdfAnnotationStampFromDict (_cdae );
if _aagb !=nil {return nil ,_aagb ;};_ggc .PdfAnnotation =_eedgc ;_eedgc ._cge =_ggc ;return _eedgc ,nil ;case "\u0049\u006e\u006b":_cgbd ,_gaae :=_aagcg .newPdfAnnotationInkFromDict (_cdae );if _gaae !=nil {return nil ,_gaae ;};_cgbd .PdfAnnotation =_eedgc ;
_eedgc ._cge =_cgbd ;return _eedgc ,nil ;case "\u0050\u006f\u0070u\u0070":_aad ,_gbgb :=_aagcg .newPdfAnnotationPopupFromDict (_cdae );if _gbgb !=nil {return nil ,_gbgb ;};_aad .PdfAnnotation =_eedgc ;_eedgc ._cge =_aad ;return _eedgc ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_ebg ,_ffb :=_aagcg .newPdfAnnotationFileAttachmentFromDict (_cdae );
if _ffb !=nil {return nil ,_ffb ;};_ebg .PdfAnnotation =_eedgc ;_eedgc ._cge =_ebg ;return _eedgc ,nil ;case "\u0053\u006f\u0075n\u0064":_gfae ,_eabc :=_aagcg .newPdfAnnotationSoundFromDict (_cdae );if _eabc !=nil {return nil ,_eabc ;};_gfae .PdfAnnotation =_eedgc ;
_eedgc ._cge =_gfae ;return _eedgc ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_gacg ,_cgfb :=_aagcg .newPdfAnnotationRichMediaFromDict (_cdae );if _cgfb !=nil {return nil ,_cgfb ;};_gacg .PdfAnnotation =_eedgc ;_eedgc ._cge =_gacg ;return _eedgc ,nil ;
case "\u004d\u006f\u0076i\u0065":_aacb ,_ddgb :=_aagcg .newPdfAnnotationMovieFromDict (_cdae );if _ddgb !=nil {return nil ,_ddgb ;};_aacb .PdfAnnotation =_eedgc ;_eedgc ._cge =_aacb ;return _eedgc ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_bdbg ,_bacc :=_aagcg .newPdfAnnotationScreenFromDict (_cdae );
if _bacc !=nil {return nil ,_bacc ;};_bdbg .PdfAnnotation =_eedgc ;_eedgc ._cge =_bdbg ;return _eedgc ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_eabcc ,_geec :=_aagcg .newPdfAnnotationWidgetFromDict (_cdae );if _geec !=nil {return nil ,_geec ;};
_eabcc .PdfAnnotation =_eedgc ;_eedgc ._cge =_eabcc ;return _eedgc ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_dfg ,_baaf :=_aagcg .newPdfAnnotationPrinterMarkFromDict (_cdae );if _baaf !=nil {return nil ,_baaf ;};_dfg .PdfAnnotation =_eedgc ;
_eedgc ._cge =_dfg ;return _eedgc ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_bfg ,_ffad :=_aagcg .newPdfAnnotationTrapNetFromDict (_cdae );if _ffad !=nil {return nil ,_ffad ;};_bfg .PdfAnnotation =_eedgc ;_eedgc ._cge =_bfg ;return _eedgc ,nil ;
case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_gae ,_ecgc :=_aagcg .newPdfAnnotationWatermarkFromDict (_cdae );if _ecgc !=nil {return nil ,_ecgc ;};_gae .PdfAnnotation =_eedgc ;_eedgc ._cge =_gae ;return _eedgc ,nil ;case "\u0033\u0044":_gab ,_bgg :=_aagcg .newPdfAnnotation3DFromDict (_cdae );
if _bgg !=nil {return nil ,_bgg ;};_gab .PdfAnnotation =_eedgc ;_eedgc ._cge =_gab ;return _eedgc ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_ffg ,_ddda :=_aagcg .newPdfAnnotationProjectionFromDict (_cdae );if _ddda !=nil {return nil ,_ddda ;
};_ffg .PdfAnnotation =_eedgc ;_eedgc ._cge =_ffg ;return _eedgc ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_bacf ,_fbfc :=_aagcg .newPdfAnnotationRedactFromDict (_cdae );if _fbfc !=nil {return nil ,_fbfc ;};_bacf .PdfAnnotation =_eedgc ;_eedgc ._cge =_bacf ;
return _eedgc ,nil ;};_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_ecc );
return nil ,nil ;};func _ggfef ()string {_dgea .Lock ();defer _dgea .Unlock ();return _bacbg };func (_babb *pdfFontType0 )subsetRegistered ()error {_abcg ,_agcab :=_babb .DescendantFont ._aabbg .(*pdfCIDFontType2 );if !_agcab {_dff .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_babb .DescendantFont );
return nil ;};if _abcg ==nil {return nil ;};if _abcg ._faaca ==nil {_dff .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _babb ._eegb ==nil {_dff .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_gfgba ,_agcab :=_bcg .GetStream (_abcg ._faaca .FontFile2 );if !_agcab {_dff .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _bcd .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_eagcg ,_eabg :=_bcg .DecodeStream (_gfgba );if _eabg !=nil {_dff .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_eabg );
return _eabg ;};_eebf ,_eabg :=_dc .Parse (_gg .NewReader (_eagcg ));if _eabg !=nil {_dff .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_gfgba .Stream ));
return _eabg ;};var _dabf []rune ;var _gaabb *_dc .Font ;switch _afadb :=_babb ._eegb .(type ){case *_bf .TrueTypeFontEncoder :_dabf =_afadb .RegisteredRunes ();_gaabb ,_eabg =_eebf .SubsetKeepRunes (_dabf );if _eabg !=nil {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eabg );
return _eabg ;};_afadb .SubsetRegistered ();case *_bf .IdentityEncoder :_dabf =_afadb .RegisteredRunes ();_feeb :=make ([]_dc .GlyphIndex ,len (_dabf ));for _fdcaf ,_egdbc :=range _dabf {_feeb [_fdcaf ]=_dc .GlyphIndex (_egdbc );};_gaabb ,_eabg =_eebf .SubsetKeepIndices (_feeb );
if _eabg !=nil {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eabg );return _eabg ;};case _bf .SimpleEncoder :_aggdc :=_afadb .Charcodes ();for _ ,_ebdca :=range _aggdc {_dcfbb ,_feagg :=_afadb .CharcodeToRune (_ebdca );if !_feagg {_dff .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_ebdca );
continue ;};_dabf =append (_dabf ,_dcfbb );};default:return _g .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_babb ._eegb );
};var _ccda _gg .Buffer ;_eabg =_gaabb .Write (&_ccda );if _eabg !=nil {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eabg );return _eabg ;};if _babb ._bgebe !=nil {_gceg :=make (map[_faa .CharCode ]rune ,len (_dabf ));for _ ,_abae :=range _dabf {_ddgdg ,_aagg :=_babb ._eegb .RuneToCharcode (_abae );
if !_aagg {continue ;};_gceg [_faa .CharCode (_ddgdg )]=_abae ;};_babb ._bgebe =_faa .NewToUnicodeCMap (_gceg );};_gfgba ,_eabg =_bcg .MakeStream (_ccda .Bytes (),_bcg .NewFlateEncoder ());if _eabg !=nil {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_eabg );
return _eabg ;};_gfgba .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bcg .MakeInteger (int64 (_ccda .Len ())));if _dfcaa ,_gccaa :=_bcg .GetStream (_abcg ._faaca .FontFile2 );_gccaa {*_dfcaa =*_gfgba ;}else {_abcg ._faaca .FontFile2 =_gfgba ;};_ceadc :=_deff ();
if len (_babb ._aafc )> 0{_babb ._aafc =_bddfa (_babb ._aafc ,_ceadc );};if len (_abcg ._aafc )> 0{_abcg ._aafc =_bddfa (_abcg ._aafc ,_ceadc );};if len (_babb ._gbeb )> 0{_babb ._gbeb =_bddfa (_babb ._gbeb ,_ceadc );};if _abcg ._faaca !=nil {_gggd ,_gceaf :=_bcg .GetName (_abcg ._faaca .FontName );
if _gceaf &&len (_gggd .String ())> 0{_dfcfg :=_bddfa (_gggd .String (),_ceadc );_abcg ._faaca .FontName =_bcg .MakeName (_dfcfg );};};return nil ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _bcg .PdfObject ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_cebcg *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _cebcg .Base ==nil {return nil ,_bcd .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _cebcg .Base .ColorToRGB (color );};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bcg .PdfObject ;IC _bcg .PdfObject ;BE _bcg .PdfObject ;RD _bcg .PdfObject ;};func _dcacf (_dcacd *_bcg .PdfObjectDictionary )(*PdfShadingType5 ,error ){_cbegf :=PdfShadingType5 {};
_ccca :=_dcacd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _ccca ==nil {_dff .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cfcb ,_aebafc :=_ccca .(*_bcg .PdfObjectInteger );if !_aebafc {_dff .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ccca );
return nil ,_bcg .ErrTypeError ;};_cbegf .BitsPerCoordinate =_cfcb ;_ccca =_dcacd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ccca ==nil {_dff .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_cfcb ,_aebafc =_ccca .(*_bcg .PdfObjectInteger );if !_aebafc {_dff .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ccca );
return nil ,_bcg .ErrTypeError ;};_cbegf .BitsPerComponent =_cfcb ;_ccca =_dcacd .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _ccca ==nil {_dff .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_cfcb ,_aebafc =_ccca .(*_bcg .PdfObjectInteger );if !_aebafc {_dff .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_ccca );
return nil ,_bcg .ErrTypeError ;};_cbegf .VerticesPerRow =_cfcb ;_ccca =_dcacd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ccca ==nil {_dff .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_gcgabd ,_aebafc :=_ccca .(*_bcg .PdfObjectArray );if !_aebafc {_dff .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ccca );
return nil ,_bcg .ErrTypeError ;};_cbegf .Decode =_gcgabd ;if _eeeb :=_dcacd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_eeeb !=nil {_cbegf .Function =[]PdfFunction {};if _feee ,_gege :=_eeeb .(*_bcg .PdfObjectArray );_gege {for _ ,_bgbea :=range _feee .Elements (){_cdgac ,_ebgf :=_bdgfe (_bgbea );
if _ebgf !=nil {_dff .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ebgf );return nil ,_ebgf ;};_cbegf .Function =append (_cbegf .Function ,_cdgac );
};}else {_ebfdd ,_ccffa :=_bdgfe (_eeeb );if _ccffa !=nil {_dff .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ccffa );return nil ,_ccffa ;
};_cbegf .Function =append (_cbegf .Function ,_ebfdd );};};return &_cbegf ,nil ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_ebag *OutlineItem )Insert (index uint ,item *OutlineItem ){_cadd :=uint (len (_ebag .Entries ));if index > _cadd {index =_cadd ;};_ebag .Entries =append (_ebag .Entries [:index ],append ([]*OutlineItem {item },_ebag .Entries [index :]...)...);};
func _bdgfe (_ddfcd _bcg .PdfObject )(PdfFunction ,error ){_ddfcd =_bcg .ResolveReference (_ddfcd );if _bgfcg ,_fbafg :=_ddfcd .(*_bcg .PdfObjectStream );_fbafg {_baacb :=_bgfcg .PdfObjectDictionary ;_agaf ,_ddcb :=_baacb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bcg .PdfObjectInteger );
if !_ddcb {_dff .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_bcd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_agaf ==0{return _aacbf (_bgfcg );}else if *_agaf ==4{return _eebdf (_bgfcg );}else {return nil ,_bcd .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _ddgbg ,_bbdae :=_ddfcd .(*_bcg .PdfIndirectObject );
_bbdae {_ccagg ,_cccd :=_ddgbg .PdfObject .(*_bcg .PdfObjectDictionary );if !_cccd {_dff .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_bcd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_adbed ,_cccd :=_ccagg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bcg .PdfObjectInteger );
if !_cccd {_dff .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_bcd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_adbed ==2{return _bgccdd (_ddgbg );}else if *_adbed ==3{return _cfgf (_ddgbg );}else {return nil ,_bcd .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _afdce ,_adbfda :=_ddfcd .(*_bcg .PdfObjectDictionary );
_adbfda {_fcaae ,_acffg :=_afdce .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bcg .PdfObjectInteger );if !_acffg {_dff .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_bcd .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_fcaae ==2{return _bgccdd (_afdce );}else if *_fcaae ==3{return _cfgf (_afdce );
}else {return nil ,_bcd .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_dff .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_ddfcd );
return nil ,_bcd .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};func (_ecca *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// ToPdfObject converts the font to a PDF representation.
func (_gccd *pdfFontType0 )ToPdfObject ()_bcg .PdfObject {if _gccd ._fdbcd ==nil {_gccd ._fdbcd =&_bcg .PdfIndirectObject {};};_aabe :=_gccd .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_gccd ._fdbcd .PdfObject =_aabe ;if _gccd .Encoding !=nil {_aabe .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gccd .Encoding );
}else if _gccd ._eegb !=nil {_aabe .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gccd ._eegb .ToPdfObject ());};if _gccd .DescendantFont !=nil {_aabe .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_bcg .MakeArray (_gccd .DescendantFont .ToPdfObject ()));
};return _gccd ._fdbcd ;};

// GetOptimizer returns current PDF optimizer.
func (_eecdf *PdfWriter )GetOptimizer ()Optimizer {return _eecdf ._cfbgc };func (_dadd *DSS )addCRLs (_facge [][]byte )([]*_bcg .PdfObjectStream ,error ){return _dadd .add (&_dadd .CRLs ,_dadd ._feabbb ,_facge );};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_bccg *PdfField )GetContext ()PdfModel {return _bccg ._bage };

// AddFont adds a font dictionary to the Font resources.
func (_fcfaf *PdfPage )AddFont (name _bcg .PdfObjectName ,font _bcg .PdfObject )error {if _fcfaf .Resources ==nil {_fcfaf .Resources =NewPdfPageResources ();};if _fcfaf .Resources .Font ==nil {_fcfaf .Resources .Font =_bcg .MakeDict ();};_bcba ,_ebdce :=_bcg .TraceToDirectObject (_fcfaf .Resources .Font ).(*_bcg .PdfObjectDictionary );
if !_ebdce {_dff .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_bcg .TraceToDirectObject (_fcfaf .Resources .Font ));
return _bcd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bcba .Set (name ,font );return nil ;};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_afe :=NewPdfAction ();_fab :=&PdfActionThread {};_fab .PdfAction =_afe ;_afe .SetContext (_fab );return _fab ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_gece *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _bcg .GetNumberAsFloat (_gece .Descent );};func _gcbe (_ggedb *PdfField ,_gfbc _bcg .PdfObject ){for _ ,_fgbb :=range _ggedb .Annotations {_fgbb .AS =_gfbc ;_fgbb .ToPdfObject ();};};


// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_dgea .Lock ();defer _dgea .Unlock ();_bdgbc =creator };

// HasFontByName checks whether a font is defined by the specified keyName.
func (_gfgcc *PdfPageResources )HasFontByName (keyName _bcg .PdfObjectName )bool {_ ,_gfffa :=_gfgcc .GetFontByName (keyName );return _gfffa ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_bgcfbf :=PdfColorCalGray (grayVal );return &_bgcfbf ;};func _bgef (_gagg *_bcg .PdfObjectDictionary )(*PdfShadingPattern ,error ){_aade :=&PdfShadingPattern {};_afab :=_gagg .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");
if _afab ==nil {_dff .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gffcc ,_ebcbcf :=_bccf (_afab );if _ebcbcf !=nil {_dff .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_ebcbcf );
return nil ,_ebcbcf ;};_aade .Shading =_gffcc ;if _gdgcc :=_gagg .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_gdgcc !=nil {_bgeaa ,_bedg :=_gdgcc .(*_bcg .PdfObjectArray );if !_bedg {_dff .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gdgcc );
return nil ,_bcg .ErrTypeError ;};_aade .Matrix =_bgeaa ;};if _gddfd :=_gagg .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_gddfd !=nil {_aade .ExtGState =_gddfd ;};return _aade ,nil ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _bcg .PdfObject ;NewWindow _bcg .PdfObject ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_ebca *PdfFontDescriptor )ToPdfObject ()_bcg .PdfObject {_dbed :=_bcg .MakeDict ();if _ebca ._beefg ==nil {_ebca ._beefg =&_bcg .PdfIndirectObject {};};_ebca ._beefg .PdfObject =_dbed ;_dbed .Set ("\u0054\u0079\u0070\u0065",_bcg .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _ebca .FontName !=nil {_dbed .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_ebca .FontName );};if _ebca .FontFamily !=nil {_dbed .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_ebca .FontFamily );};if _ebca .FontStretch !=nil {_dbed .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_ebca .FontStretch );
};if _ebca .FontWeight !=nil {_dbed .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_ebca .FontWeight );};if _ebca .Flags !=nil {_dbed .Set ("\u0046\u006c\u0061g\u0073",_ebca .Flags );};if _ebca .FontBBox !=nil {_dbed .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_ebca .FontBBox );
};if _ebca .ItalicAngle !=nil {_dbed .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_ebca .ItalicAngle );};if _ebca .Ascent !=nil {_dbed .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_ebca .Ascent );};if _ebca .Descent !=nil {_dbed .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_ebca .Descent );
};if _ebca .Leading !=nil {_dbed .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_ebca .Leading );};if _ebca .CapHeight !=nil {_dbed .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_ebca .CapHeight );};if _ebca .XHeight !=nil {_dbed .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_ebca .XHeight );
};if _ebca .StemV !=nil {_dbed .Set ("\u0053\u0074\u0065m\u0056",_ebca .StemV );};if _ebca .StemH !=nil {_dbed .Set ("\u0053\u0074\u0065m\u0048",_ebca .StemH );};if _ebca .AvgWidth !=nil {_dbed .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_ebca .AvgWidth );
};if _ebca .MaxWidth !=nil {_dbed .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_ebca .MaxWidth );};if _ebca .MissingWidth !=nil {_dbed .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_ebca .MissingWidth );};if _ebca .FontFile !=nil {_dbed .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_ebca .FontFile );
};if _ebca .FontFile2 !=nil {_dbed .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_ebca .FontFile2 );};if _ebca .FontFile3 !=nil {_dbed .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_ebca .FontFile3 );};if _ebca .CharSet !=nil {_dbed .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_ebca .CharSet );
};if _ebca .Style !=nil {_dbed .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_ebca .FontName );};if _ebca .Lang !=nil {_dbed .Set ("\u004c\u0061\u006e\u0067",_ebca .Lang );};if _ebca .FD !=nil {_dbed .Set ("\u0046\u0044",_ebca .FD );};if _ebca .CIDSet !=nil {_dbed .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_ebca .CIDSet );
};return _ebca ._beefg ;};

// ToPdfObject implements interface PdfModel.
func (_gbf *PdfActionResetForm )ToPdfObject ()_bcg .PdfObject {_gbf .PdfAction .ToPdfObject ();_dcca :=_gbf ._aag ;_edb :=_dcca .PdfObject .(*_bcg .PdfObjectDictionary );_edb .SetIfNotNil ("\u0053",_bcg .MakeName (string (ActionTypeResetForm )));_edb .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_gbf .Fields );
_edb .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_gbf .Flags );return _dcca ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_bcg .PdfObjectName ;Colorants _bcg .PdfObject ;Process _bcg .PdfObject ;MixingHints _bcg .PdfObject ;_ecgb *_bcg .PdfIndirectObject ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_ddbba :=PdfColorDeviceRGB {r ,g ,b };return &_ddbba ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_aaag *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_aaag .updateObjectsDeep (dss .ToPdfObject (),nil );};_aaag ._ded =dss ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _bcg .PdfObject ;MK _bcg .PdfObject ;A _bcg .PdfObject ;AA _bcg .PdfObject ;BS _bcg .PdfObject ;Parent _bcg .PdfObject ;_dggf *PdfField ;_egde bool ;};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_dea :=NewPdfAction ();_bed :=&PdfActionJavaScript {};_bed .PdfAction =_dea ;_dea .SetContext (_bed );return _bed ;};

// ToPdfObject converts rectangle to a PDF object.
func (_ggagg *PdfRectangle )ToPdfObject ()_bcg .PdfObject {return _bcg .MakeArray (_bcg .MakeFloat (_ggagg .Llx ),_bcg .MakeFloat (_ggagg .Lly ),_bcg .MakeFloat (_ggagg .Urx ),_bcg .MakeFloat (_ggagg .Ury ));};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_gba PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_bcg .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_dcgb []_bcg .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_eaa []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};func _bedaa ()string {_dgea .Lock ();defer _dgea .Unlock ();_bgdfa :=_bbd .GetLicenseKey ();if len (_fcfbe )> 0&&(_bgdfa .IsLicensed ()||_fgaab ){return _fcfbe ;};return _g .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_ccbe (),_bgdfa .TypeToString ());
};

// GetCharMetrics returns the char metrics for character code `code`.
func (_adbfd pdfCIDFontType2 )GetCharMetrics (code _bf .CharCode )(_dgb .CharMetrics ,bool ){if _defgg ,_gggc :=_adbfd ._geegd [code ];_gggc {return _dgb .CharMetrics {Wx :_defgg },true ;};_abee :=rune (code );_eebd ,_cffb :=_adbfd ._caaed [_abee ];if !_cffb {_eebd =int (_adbfd ._ggceb );
};return _dgb .CharMetrics {Wx :float64 (_eebd )},true ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _bcg .PdfObject ;Movie _bcg .PdfObject ;A _bcg .PdfObject ;};func (_bffba *PdfSignature )extractChainFromCert ()([]*_ag .Certificate ,error ){var _dfafe *_bcg .PdfObjectArray ;switch _bfaea :=_bffba .Cert .(type ){case *_bcg .PdfObjectString :_dfafe =_bcg .MakeArray (_bfaea );
case *_bcg .PdfObjectArray :_dfafe =_bfaea ;default:return nil ,_g .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_bfaea );
};var _agfef _gg .Buffer ;for _ ,_faggf :=range _dfafe .Elements (){_gebfa ,_efegg :=_bcg .GetString (_faggf );if !_efegg {return nil ,_g .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_faggf );
};if _ ,_adfa :=_agfef .Write (_gebfa .Bytes ());_adfa !=nil {return nil ,_adfa ;};};return _ag .ParseCertificates (_agfef .Bytes ());};

// GetContentStreams returns the content stream as an array of strings.
func (_cdcbg *PdfPage )GetContentStreams ()([]string ,error ){_gggb :=_cdcbg .GetContentStreamObjs ();var _aacda []string ;for _ ,_gggbb :=range _gggb {_cbcgg ,_aaede :=_aafgf (_gggbb );if _aaede !=nil {return nil ,_aaede ;};_aacda =append (_aacda ,_cbcgg );
};return _aacda ,nil ;};func _gbcd (_cgca _bcg .PdfObject )(*_bcg .PdfObjectDictionary ,*fontCommon ,error ){_dabgc :=&fontCommon {};if _dcbcb ,_beba :=_cgca .(*_bcg .PdfIndirectObject );_beba {_dabgc ._daedg =_dcbcb .ObjectNumber ;};_ffeb ,_gadbb :=_bcg .GetDict (_cgca );
if !_gadbb {_dff .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_cgca );
return nil ,nil ,ErrFontNotSupported ;};_fgafc ,_gadbb :=_bcg .GetNameVal (_ffeb .Get ("\u0054\u0079\u0070\u0065"));if !_gadbb {_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _fgafc !="\u0046\u006f\u006e\u0074"{_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_fgafc ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_bcg .ErrTypeError ;};_aaeg ,_gadbb :=_bcg .GetNameVal (_ffeb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_gadbb {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_dabgc ._cfeef =_aaeg ;_efegc ,_gadbb :=_bcg .GetNameVal (_ffeb .Get ("\u004e\u0061\u006d\u0065"));if _gadbb {_dabgc ._gbeb =_efegc ;};_fddc :=_ffeb .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _fddc !=nil {_dabgc ._aeba =_bcg .TraceToDirectObject (_fddc );
_eaaac ,_edfa :=_dbba (_dabgc ._aeba ,_dabgc );if _edfa !=nil {return _ffeb ,_dabgc ,_edfa ;};_dabgc ._bgebe =_eaaac ;}else if _aaeg =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_aaeg =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_fdfd ,_cdeca :=_faa .NewCIDSystemInfo (_ffeb .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _cdeca !=nil {return _ffeb ,_dabgc ,_cdeca ;};_adcbc :=_g .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_fdfd .Registry ,_fdfd .Ordering );if _faa .IsPredefinedCMap (_adcbc ){_dabgc ._bgebe ,_cdeca =_faa .LoadPredefinedCMap (_adcbc );
if _cdeca !=nil {_dff .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_adcbc ,_cdeca );
};};};_eccd :=_ffeb .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _eccd !=nil {_bdedd ,_ggce :=_gefd (_eccd );if _ggce !=nil {_dff .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ggce );
return _ffeb ,_dabgc ,_ggce ;};_dabgc ._faaca =_bdedd ;};if _aaeg !="\u0054\u0079\u0070e\u0033"{_acffe ,_fgdce :=_bcg .GetNameVal (_ffeb .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_fgdce {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _ffeb ,_dabgc ,ErrRequiredAttributeMissing ;};_dabgc ._aafc =_acffe ;};return _ffeb ,_dabgc ,nil ;};func (_ggabc *PdfWriter )adjustXRefAffectedVersion (_efcag bool ){if _efcag &&_ggabc ._cbdba .Major ==1&&_ggabc ._cbdba .Minor < 5{_ggabc ._cbdba .Minor =5;
};};func (_cfgad *PdfWriter )writeOutputIntents ()error {if len (_cfgad ._babgf )==0{return nil ;};_gefed :=make ([]_bcg .PdfObject ,len (_cfgad ._babgf ));for _bdgcc ,_bbadf :=range _cfgad ._babgf {_edggc :=_bbadf .ToPdfObject ();_gefed [_bdgcc ]=_bcg .MakeIndirectObject (_edggc );
};_aabce :=_bcg .MakeIndirectObject (_bcg .MakeArray (_gefed ...));_cfgad ._gbfg .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_aabce );if _eaafe :=_cfgad .addObjects (_aabce );_eaafe !=nil {return _eaafe ;};return nil ;
};func _effgb (_cddd _bcg .PdfObject )(*PdfColorspaceCalRGB ,error ){_cgag :=NewPdfColorspaceCalRGB ();if _dfgfc ,_gcfag :=_cddd .(*_bcg .PdfIndirectObject );_gcfag {_cgag ._bbdfd =_dfgfc ;};_cddd =_bcg .TraceToDirectObject (_cddd );_dffc ,_gdgad :=_cddd .(*_bcg .PdfObjectArray );
if !_gdgad {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dffc .Len ()!=2{return nil ,_g .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_cddd =_bcg .TraceToDirectObject (_dffc .Get (0));_cfdgb ,_gdgad :=_cddd .(*_bcg .PdfObjectName );if !_gdgad {return nil ,_g .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_cfdgb !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_g .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_cddd =_bcg .TraceToDirectObject (_dffc .Get (1));
_adgfc ,_gdgad :=_cddd .(*_bcg .PdfObjectDictionary );if !_gdgad {return nil ,_g .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};_cddd =_adgfc .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cddd =_bcg .TraceToDirectObject (_cddd );_ccfe ,_gdgad :=_cddd .(*_bcg .PdfObjectArray );if !_gdgad {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _ccfe .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_cccfb ,_ebbf :=_ccfe .GetAsFloat64Slice ();
if _ebbf !=nil {return nil ,_ebbf ;};_cgag .WhitePoint =_cccfb ;_cddd =_adgfc .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cddd !=nil {_cddd =_bcg .TraceToDirectObject (_cddd );_cbed ,_aaae :=_cddd .(*_bcg .PdfObjectArray );
if !_aaae {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _cbed .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");
};_gdac ,_cgddg :=_cbed .GetAsFloat64Slice ();if _cgddg !=nil {return nil ,_cgddg ;};_cgag .BlackPoint =_gdac ;};_cddd =_adgfc .Get ("\u0047\u0061\u006dm\u0061");if _cddd !=nil {_cddd =_bcg .TraceToDirectObject (_cddd );_dega ,_befg :=_cddd .(*_bcg .PdfObjectArray );
if !_befg {return nil ,_g .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _dega .Len ()!=3{return nil ,_g .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");
};_bddef ,_egbd :=_dega .GetAsFloat64Slice ();if _egbd !=nil {return nil ,_egbd ;};_cgag .Gamma =_bddef ;};_cddd =_adgfc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _cddd !=nil {_cddd =_bcg .TraceToDirectObject (_cddd );_ffbc ,_cecd :=_cddd .(*_bcg .PdfObjectArray );
if !_cecd {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _ffbc .Len ()!=9{_dff .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_ffbc .String ());
return nil ,_g .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_fga ,_gbaa :=_ffbc .GetAsFloat64Slice ();if _gbaa !=nil {return nil ,_gbaa ;
};_cgag .Matrix =_fga ;};return _cgag ,nil ;};func (_feeaa *PdfAppender )addNewObject (_acbg _bcg .PdfObject ){if _ ,_bfde :=_feeaa ._dcceg [_acbg ];!_bfde {_feeaa ._bfa =append (_feeaa ._bfa ,_acbg );_feeaa ._dcceg [_acbg ]=struct{}{};};};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_cbc :=NewPdfAnnotation ();_bdbc :=&PdfAnnotationRichMedia {};_bdbc .PdfAnnotation =_cbc ;_cbc .SetContext (_bdbc );return _bdbc ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_cda :=NewPdfAnnotation ();_aefd :=&PdfAnnotationFileAttachment {};_aefd .PdfAnnotation =_cda ;_aefd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cda .SetContext (_aefd );return _aefd ;
};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_geef *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_bcg .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebbd ,_efee :=_bcg .GetNumbersAsFloat (objects );
if _efee !=nil {return nil ,_efee ;};return _geef .ColorFromFloats (_ebbd );};func _bab (_geb _bcg .PdfObject )(*PdfFilespec ,error ){if _geb ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_geb );};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_egeea *PdfReader )GetObjectNums ()[]int {return _egeea ._eadaf .GetObjectNums ()};func (_ccdg *PdfReader )newPdfActionJavaScriptFromDict (_caec *_bcg .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_caec .Get ("\u004a\u0053")},nil ;
};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_cefec *PdfReader )GetEncryptionMethod ()string {_fdada :=_cefec ._eadaf .GetCrypter ();return _fdada .String ();};

// ToPdfObject implements interface PdfModel.
func (_bfc *PdfActionHide )ToPdfObject ()_bcg .PdfObject {_bfc .PdfAction .ToPdfObject ();_eb :=_bfc ._aag ;_ceba :=_eb .PdfObject .(*_bcg .PdfObjectDictionary );_ceba .SetIfNotNil ("\u0053",_bcg .MakeName (string (ActionTypeHide )));_ceba .SetIfNotNil ("\u0054",_bfc .T );
_ceba .SetIfNotNil ("\u0048",_bfc .H );return _eb ;};

// String returns a string that describes `font`.
func (_eeadg *PdfFont )String ()string {_bbee :="";if _eeadg ._aabbg .Encoder ()!=nil {_bbee =_eeadg ._aabbg .Encoder ().String ();};return _g .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_eeadg ._aabbg ,_eeadg .baseFields ().coreString (),_bbee );
};func _edcfa ()_dd .Time {_dgea .Lock ();defer _dgea .Unlock ();return _gfbb };

// GetContentStream returns the XObject Form's content stream.
func (_cbbcc *XObjectForm )GetContentStream ()([]byte ,error ){_dfgbb ,_egdff :=_bcg .DecodeStream (_cbbcc ._afdee );if _egdff !=nil {return nil ,_egdff ;};return _dfgbb ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dbadg *PdfShading )ToPdfObject ()_bcg .PdfObject {_gbcdb :=_dbadg ._cdefff ;_dgada ,_efcgb :=_dbadg .getShadingDict ();if _efcgb !=nil {_dff .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dbadg .ShadingType !=nil {_dgada .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_dbadg .ShadingType );};if _dbadg .ColorSpace !=nil {_dgada .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_dbadg .ColorSpace .ToPdfObject ());
};if _dbadg .Background !=nil {_dgada .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_dbadg .Background );};if _dbadg .BBox !=nil {_dgada .Set ("\u0042\u0042\u006f\u0078",_dbadg .BBox .ToPdfObject ());};if _dbadg .AntiAlias !=nil {_dgada .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_dbadg .AntiAlias );
};return _gbcdb ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_gaede *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_bcg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgea ,_ggbbb :=_bcg .GetNumbersAsFloat (objects );
if _ggbbb !=nil {return nil ,_ggbbb ;};return _gaede .ColorFromFloats (_bgea );};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_cf :=NewPdfAction ();_aaf :=&PdfActionGoTo {};_aaf .PdfAction =_cf ;_cf .SetContext (_aaf );return _aaf ;};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _bcg .PdfObject )(*PdfOutputIntent ,error ){_gbeba :=&PdfOutputIntent {};if _ccef :=_gbeba .ParsePdfObject (object );_ccef !=nil {return nil ,_ccef ;};return _gbeba ,nil ;};type pdfFont interface{_dgb .Font ;


// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_bcg .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_bafad *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_dff .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_egedc :=[]float64 {0.0};if _bafad .C0 !=nil {_egedc =_bafad .C0 ;};_cbace :=[]float64 {1.0};if _bafad .C1 !=nil {_cbace =_bafad .C1 ;};var _feabd []float64 ;for _fggag :=0;_fggag < len (_egedc );_fggag ++{_gcgcge :=_egedc [_fggag ]+_ab .Pow (x [0],_bafad .N )*(_cbace [_fggag ]-_egedc [_fggag ]);
_feabd =append (_feabd ,_gcgcge );};return _feabd ,nil ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_bcg .PdfObjectInteger ;BitsPerComponent *_bcg .PdfObjectInteger ;BitsPerFlag *_bcg .PdfObjectInteger ;Decode *_bcg .PdfObjectArray ;Function []PdfFunction ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_fcaf *_bcg .PdfIndirectObject ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _bcg .PdfObject ;};func _bbffag ()_dd .Time {_dgea .Lock ();defer _dgea .Unlock ();return _edgbd };

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;func _dccdb (_baeed *PdfPage ){_bcbec :=_bbd .GetLicenseKey ();if _bcbec !=nil &&_bcbec .IsLicensed (){return ;};_bbccd :=_bcg .PdfObjectName ("\u0055\u0046\u0031");if !_baeed .Resources .HasFontByName (_bbccd ){_baeed .Resources .SetFontByName (_bbccd ,DefaultFont ().ToPdfObject ());
};var _bffbc []string ;_bffbc =append (_bffbc ,"\u0071");_bffbc =append (_bffbc ,"\u0042\u0054");_bffbc =append (_bffbc ,_g .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_bbccd .String ()));_bffbc =append (_bffbc ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");
_bffbc =append (_bffbc ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_acdcf :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_bffbc =append (_bffbc ,_g .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_acdcf ));_bffbc =append (_bffbc ,"\u0045\u0054");_bffbc =append (_bffbc ,"\u0051");_gcdb :=_ce .Join (_bffbc ,"\u000a");_baeed .AddContentStreamByString (_gcdb );_baeed .ToPdfObject ();
};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_adacf *PdfReader )GetCatalogMetadata ()(_bcg .PdfObject ,bool ){if _adacf ._fdeec ==nil {return nil ,false ;};_fegb :=_adacf ._fdeec .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _fegb ,_fegb !=nil ;};func (_edcb *PdfReader )newPdfFieldSignatureFromDict (_bccgf *_bcg .PdfObjectDictionary )(*PdfFieldSignature ,error ){_dbaf :=&PdfFieldSignature {};
_ebdabc ,_fgcc :=_bcg .GetIndirect (_bccgf .Get ("\u0056"));if _fgcc {var _gbfe error ;_dbaf .V ,_gbfe =_edcb .newPdfSignatureFromIndirect (_ebdabc );if _gbfe !=nil {return nil ,_gbfe ;};};_dbaf .Lock ,_ =_bcg .GetIndirect (_bccgf .Get ("\u004c\u006f\u0063\u006b"));
_dbaf .SV ,_ =_bcg .GetIndirect (_bccgf .Get ("\u0053\u0056"));return _dbaf ,nil ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_ffcgd *Image )Resample (targetBitsPerComponent int64 ){if _ffcgd .BitsPerComponent ==targetBitsPerComponent {return ;};_dcedfa :=_ffcgd .GetSamples ();if targetBitsPerComponent < _ffcgd .BitsPerComponent {_edgaga :=_ffcgd .BitsPerComponent -targetBitsPerComponent ;
for _ggfce :=range _dcedfa {_dcedfa [_ggfce ]>>=uint (_edgaga );};}else if targetBitsPerComponent > _ffcgd .BitsPerComponent {_gbaga :=targetBitsPerComponent -_ffcgd .BitsPerComponent ;for _aebaf :=range _dcedfa {_dcedfa [_aebaf ]<<=uint (_gbaga );};};
_ffcgd .BitsPerComponent =targetBitsPerComponent ;if _ffcgd .BitsPerComponent < 8{_ffcgd .resampleLowBits (_dcedfa );return ;};_edbbd :=_dca .BytesPerLine (int (_ffcgd .Width ),int (_ffcgd .BitsPerComponent ),_ffcgd .ColorComponents );_begebf :=make ([]byte ,_edbbd *int (_ffcgd .Height ));
var (_gbdaf ,_ggag ,_aadba ,_egbcg int ;_dcgba uint32 ;);for _aadba =0;_aadba < int (_ffcgd .Height );_aadba ++{_gbdaf =_aadba *_edbbd ;_ggag =(_aadba +1)*_edbbd -1;_adbeb :=_ff .ResampleUint32 (_dcedfa [_gbdaf :_ggag ],int (targetBitsPerComponent ),8);
for _egbcg ,_dcgba =range _adbeb {_begebf [_egbcg +_gbdaf ]=byte (_dcgba );};};_ffcgd .Data =_begebf ;};func (_ggaaa *pdfFontSimple )addEncoding ()error {var (_cafd string ;_gecg map[_bf .CharCode ]_bf .GlyphName ;_affd _bf .SimpleEncoder ;);if _ggaaa .Encoder ()!=nil {_gfaf ,_ebfbc :=_ggaaa .Encoder ().(_bf .SimpleEncoder );
if _ebfbc &&_gfaf !=nil {_cafd =_gfaf .BaseName ();};};if _ggaaa .Encoding !=nil {_gddc ,_fgcb ,_eeeef :=_ggaaa .getFontEncoding ();if _eeeef !=nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ggaaa ._aafc ,_ggaaa ._cfeef ,_ggaaa .Encoding ,_ggaaa .Encoding ,_eeeef );
return _eeeef ;};if _gddc !=""{_cafd =_gddc ;};_gecg =_fgcb ;_affd ,_eeeef =_bf .NewSimpleTextEncoder (_cafd ,_gecg );if _eeeef !=nil {return _eeeef ;};};if _affd ==nil {_aeabg :=_ggaaa ._faaca ;if _aeabg !=nil {switch _ggaaa ._cfeef {case "\u0054\u0079\u0070e\u0031":if _aeabg .fontFile !=nil &&_aeabg .fontFile ._beab !=nil {_dff .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_affd =_aeabg .fontFile ._beab ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _aeabg ._ecege !=nil {_dff .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_gebgfe ,_edef :=_aeabg ._ecege .MakeEncoder ();
if _edef ==nil {_affd =_gebgfe ;};};};};};if _affd !=nil {if _gecg !=nil {_dff .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gecg ,_ggaaa .baseFields ());
_affd =_bf .ApplyDifferences (_affd ,_gecg );};_ggaaa .SetEncoder (_affd );};return nil ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_abaf *PdfFieldButton )GetType ()ButtonType {_faed :=ButtonTypeCheckbox ;if _abaf .Ff !=nil {if (uint32 (*_abaf .Ff )&FieldFlagPushbutton .Mask ())> 0{_faed =ButtonTypePush ;}else if (uint32 (*_abaf .Ff )&FieldFlagRadio .Mask ())> 0{_faed =ButtonTypeRadio ;
};};return _faed ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_afgba *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _bfge []*PdfField ;if _afgba .AcroForm !=nil {_bfge =_afgba .AcroForm .AllFields ();};_faeba :=make (map[*PdfField ]struct{},len (_bfge ));for _ ,_fgcee :=range _bfge {_faeba [_fgcee ]=struct{}{};
};for _ ,_debac :=range _afgba .PageList {_fgbbb ,_bebe :=_debac .GetAnnotations ();if _bebe !=nil {return false ,_bebe ;};for _ ,_afbbe :=range _fgbbb {_fgbede ,_ffggb :=_afbbe .GetContext ().(*PdfAnnotationWidget );if !_ffggb {continue ;};_cgebd :=_fgbede .Field ();
if _cgebd ==nil {return true ,nil ;};if _ ,_cccce :=_faeba [_cgebd ];!_cccce {return true ,nil ;};};};return false ,nil ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_dccacd *VRI )ToPdfObject ()*_bcg .PdfObjectDictionary {_eafg :=_bcg .MakeDict ();_eafg .SetIfNotNil (_bcg .PdfObjectName ("\u0043\u0065\u0072\u0074"),_efbe (_dccacd .Cert ));_eafg .SetIfNotNil (_bcg .PdfObjectName ("\u004f\u0043\u0053\u0050"),_efbe (_dccacd .OCSP ));
_eafg .SetIfNotNil (_bcg .PdfObjectName ("\u0043\u0052\u004c"),_efbe (_dccacd .CRL ));_eafg .SetIfNotNil ("\u0054\u0055",_dccacd .TU );_eafg .SetIfNotNil ("\u0054\u0053",_dccacd .TS );return _eafg ;};func _gfde (_dgfa map[_dgb .GID ]int ,_gcaee uint16 )*_bcg .PdfObjectArray {_egafc :=&_bcg .PdfObjectArray {};
_afedf :=_dgb .GID (_gcaee );for _fbffd :=_dgb .GID (0);_fbffd < _afedf ;{_gafa ,_dfdd :=_dgfa [_fbffd ];if !_dfdd {_fbffd ++;continue ;};_cafee :=_fbffd ;for _daaae :=_cafee +1;_daaae < _afedf ;_daaae ++{if _eecb ,_aeca :=_dgfa [_daaae ];!_aeca ||_gafa !=_eecb {break ;
};_cafee =_daaae ;};_egafc .Append (_bcg .MakeInteger (int64 (_fbffd )));_egafc .Append (_bcg .MakeInteger (int64 (_cafee )));_egafc .Append (_bcg .MakeInteger (int64 (_gafa )));_fbffd =_cafee +1;};return _egafc ;};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_ggg *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _ggg .Range };func (_fad *PdfReader )newPdfActionThreadFromDict (_cfc *_bcg .PdfObjectDictionary )(*PdfActionThread ,error ){_beg ,_gce :=_bab (_cfc .Get ("\u0046"));if _gce !=nil {return nil ,_gce ;
};return &PdfActionThread {D :_cfc .Get ("\u0044"),B :_cfc .Get ("\u0042"),F :_beg },nil ;};

// ToPdfObject implements interface PdfModel.
func (_adf *PdfAnnotationScreen )ToPdfObject ()_bcg .PdfObject {_adf .PdfAnnotation .ToPdfObject ();_cdfeb :=_adf ._cbe ;_bcfe :=_cdfeb .PdfObject .(*_bcg .PdfObjectDictionary );_bcfe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_bcfe .SetIfNotNil ("\u0054",_adf .T );_bcfe .SetIfNotNil ("\u004d\u004b",_adf .MK );_bcfe .SetIfNotNil ("\u0041",_adf .A );_bcfe .SetIfNotNil ("\u0041\u0041",_adf .AA );return _cdfeb ;};func (_gcad *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";
};func (_bedd *PdfReader )newPdfAnnotationSquigglyFromDict (_gebb *_bcg .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_gddf :=PdfAnnotationSquiggly {};_fcea ,_aeda :=_bedd .newPdfAnnotationMarkupFromDict (_gebb );if _aeda !=nil {return nil ,_aeda ;
};_gddf .PdfAnnotationMarkup =_fcea ;_gddf .QuadPoints =_gebb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_gddf ,nil ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_dcbfe *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _gcfbf []*PdfField ;_eedab :=map[*_bcg .PdfIndirectObject ]struct{}{};for _ ,_bbdba :=range _dcbfe .PageList {_cdcc ,_gacdec :=_bbdba .GetAnnotations ();if _gacdec !=nil {return _gacdec ;
};for _ ,_gbbaf :=range _cdcc {var _gfeba *PdfField ;switch _eagdf :=_gbbaf .GetContext ().(type ){case *PdfAnnotationWidget :if _eagdf ._dggf !=nil {_gfeba =_eagdf ._dggf ;break ;};if _dadc ,_gedab :=_bcg .GetIndirect (_eagdf .Parent );_gedab {_gfeba ,_gacdec =_dcbfe .newPdfFieldFromIndirectObject (_dadc ,nil );
if _gacdec ==nil {break ;};_dff .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_dadc ,_gacdec );
};if _eagdf ._cbe !=nil {_gfeba ,_gacdec =_dcbfe .newPdfFieldFromIndirectObject (_eagdf ._cbe ,nil );if _gacdec ==nil {break ;};_dff .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_eagdf ._cbe ,_gacdec );
};};if _gfeba ==nil {continue ;};if _ ,_fcdcc :=_eedab [_gfeba ._bddgb ];_fcdcc {continue ;};_eedab [_gfeba ._bddgb ]=struct{}{};_gcfbf =append (_gcfbf ,_gfeba );};};if len (_gcfbf )==0{return nil ;};if _dcbfe .AcroForm ==nil {_dcbfe .AcroForm =NewPdfAcroForm ();
};_dcbfe .AcroForm .Fields =&_gcfbf ;return nil ;};func (_ebbdg *PdfReader )loadDSS ()(*DSS ,error ){if _ebbdg ._eadaf .GetCrypter ()!=nil &&!_ebbdg ._eadaf .IsAuthenticated (){return nil ,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_egafe :=_ebbdg ._fdeec .Get ("\u0044\u0053\u0053");if _egafe ==nil {return nil ,nil ;};_ddddg ,_ :=_bcg .GetIndirect (_egafe );_egafe =_bcg .TraceToDirectObject (_egafe );switch _degdd :=_egafe .(type ){case *_bcg .PdfObjectNull :return nil ,nil ;case *_bcg .PdfObjectDictionary :return _fcgb (_ddddg ,_degdd );
};return nil ,_g .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_egafe );};func (_cgf *PdfReader )newPdfActionLaunchFromDict (_dbd *_bcg .PdfObjectDictionary )(*PdfActionLaunch ,error ){_dgbd ,_gebg :=_bab (_dbd .Get ("\u0046"));
if _gebg !=nil {return nil ,_gebg ;};return &PdfActionLaunch {Win :_dbd .Get ("\u0057\u0069\u006e"),Mac :_dbd .Get ("\u004d\u0061\u0063"),Unix :_dbd .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_dbd .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_dgbd },nil ;
};

// AddExtGState adds a graphics state to the XObject resources.
func (_gagf *PdfPage )AddExtGState (name _bcg .PdfObjectName ,egs *_bcg .PdfObjectDictionary )error {if _gagf .Resources ==nil {_gagf .Resources =NewPdfPageResources ();};if _gagf .Resources .ExtGState ==nil {_gagf .Resources .ExtGState =_bcg .MakeDict ();
};_abaea ,_dadgb :=_bcg .TraceToDirectObject (_gagf .Resources .ExtGState ).(*_bcg .PdfObjectDictionary );if !_dadgb {_dff .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bcg .TraceToDirectObject (_gagf .Resources .ExtGState ));
return _bcd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_abaea .Set (name ,egs );return nil ;};func (_fdfbg *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _bada :=_fdfbg ._faaca ;_bada !=nil {return _bada ;
};return _fdfbg ._gdfg ;};type modelManager struct{_dadae map[PdfModel ]_bcg .PdfObject ;_eeadf map[_bcg .PdfObject ]PdfModel ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// GetPerms returns the Permissions dictionary
func (_gecd *PdfReader )GetPerms ()*Permissions {return _gecd ._fagggd };

// ToPdfObject implements interface PdfModel.
func (_fgdbf *PdfFilespec )ToPdfObject ()_bcg .PdfObject {_cecff :=_fgdbf .getDict ();_cecff .Clear ();_cecff .Set ("\u0054\u0079\u0070\u0065",_bcg .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_cecff .SetIfNotNil ("\u0046\u0053",_fgdbf .FS );
_cecff .SetIfNotNil ("\u0046",_fgdbf .F );_cecff .SetIfNotNil ("\u0055\u0046",_fgdbf .UF );_cecff .SetIfNotNil ("\u0044\u004f\u0053",_fgdbf .DOS );_cecff .SetIfNotNil ("\u004d\u0061\u0063",_fgdbf .Mac );_cecff .SetIfNotNil ("\u0055\u006e\u0069\u0078",_fgdbf .Unix );
_cecff .SetIfNotNil ("\u0049\u0044",_fgdbf .ID );_cecff .SetIfNotNil ("\u0056",_fgdbf .V );_cecff .SetIfNotNil ("\u0045\u0046",_fgdbf .EF );_cecff .SetIfNotNil ("\u0052\u0046",_fgdbf .RF );_cecff .SetIfNotNil ("\u0044\u0065\u0073\u0063",_fgdbf .Desc );
_cecff .SetIfNotNil ("\u0043\u0049",_fgdbf .CI );return _fgdbf ._baegd ;};func (_fdadg *PdfWriter )copyObject (_eaeg _bcg .PdfObject ,_bfaf map[_bcg .PdfObject ]_bcg .PdfObject ,_fdgg map[_bcg .PdfObject ]struct{},_bacbf bool )_bcg .PdfObject {_bdfef :=!_fdadg ._gaggd &&_fdgg !=nil ;
if _dcddb ,_abgdf :=_bfaf [_eaeg ];_abgdf {if _bdfef &&!_bacbf {delete (_fdgg ,_eaeg );};return _dcddb ;};_ecfb :=_eaeg ;switch _bfddfe :=_eaeg .(type ){case *_bcg .PdfObjectArray :_bdbad :=_bcg .MakeArray ();_ecfb =_bdbad ;_bfaf [_eaeg ]=_ecfb ;for _ ,_dfcafa :=range _bfddfe .Elements (){_bdbad .Append (_fdadg .copyObject (_dfcafa ,_bfaf ,_fdgg ,_bacbf ));
};case *_bcg .PdfObjectStreams :_afeccg :=&_bcg .PdfObjectStreams {PdfObjectReference :_bfddfe .PdfObjectReference };_ecfb =_afeccg ;_bfaf [_eaeg ]=_ecfb ;for _ ,_afade :=range _bfddfe .Elements (){_afeccg .Append (_fdadg .copyObject (_afade ,_bfaf ,_fdgg ,_bacbf ));
};case *_bcg .PdfObjectStream :_gdcea :=&_bcg .PdfObjectStream {Stream :_bfddfe .Stream ,PdfObjectReference :_bfddfe .PdfObjectReference };_ecfb =_gdcea ;_bfaf [_eaeg ]=_ecfb ;_gdcea .PdfObjectDictionary =_fdadg .copyObject (_bfddfe .PdfObjectDictionary ,_bfaf ,_fdgg ,_bacbf ).(*_bcg .PdfObjectDictionary );
case *_bcg .PdfObjectDictionary :var _fffba bool ;if _bdfef &&!_bacbf {if _cbfb ,_ :=_bcg .GetNameVal (_bfddfe .Get ("\u0054\u0079\u0070\u0065"));_cbfb =="\u0050\u0061\u0067\u0065"{_ ,_bbdgd :=_fdadg ._cfccg [_bfddfe ];_bacbf =!_bbdgd ;_fffba =_bacbf ;
};};_aadad :=_bcg .MakeDict ();_ecfb =_aadad ;_bfaf [_eaeg ]=_ecfb ;for _ ,_gacaf :=range _bfddfe .Keys (){_aadad .Set (_gacaf ,_fdadg .copyObject (_bfddfe .Get (_gacaf ),_bfaf ,_fdgg ,_bacbf ));};if _fffba {_ecfb =_bcg .MakeNull ();_bacbf =false ;};case *_bcg .PdfIndirectObject :_agbg :=&_bcg .PdfIndirectObject {PdfObjectReference :_bfddfe .PdfObjectReference };
_ecfb =_agbg ;_bfaf [_eaeg ]=_ecfb ;_agbg .PdfObject =_fdadg .copyObject (_bfddfe .PdfObject ,_bfaf ,_fdgg ,_bacbf );case *_bcg .PdfObjectString :_bbcgdg :=*_bfddfe ;_ecfb =&_bbcgdg ;_bfaf [_eaeg ]=_ecfb ;case *_bcg .PdfObjectName :_cfbfc :=*_bfddfe ;_ecfb =&_cfbfc ;
_bfaf [_eaeg ]=_ecfb ;case *_bcg .PdfObjectNull :_ecfb =_bcg .MakeNull ();_bfaf [_eaeg ]=_ecfb ;case *_bcg .PdfObjectInteger :_adae :=*_bfddfe ;_ecfb =&_adae ;_bfaf [_eaeg ]=_ecfb ;case *_bcg .PdfObjectReference :_fcge :=*_bfddfe ;_ecfb =&_fcge ;_bfaf [_eaeg ]=_ecfb ;
case *_bcg .PdfObjectFloat :_dabbg :=*_bfddfe ;_ecfb =&_dabbg ;_bfaf [_eaeg ]=_ecfb ;case *_bcg .PdfObjectBool :_gaedf :=*_bfddfe ;_ecfb =&_gaedf ;_bfaf [_eaeg ]=_ecfb ;case *pdfSignDictionary :_egfdd :=&pdfSignDictionary {PdfObjectDictionary :_bcg .MakeDict (),_caef :_bfddfe ._caef ,_gebfb :_bfddfe ._gebfb };
_ecfb =_egfdd ;_bfaf [_eaeg ]=_ecfb ;for _ ,_fbab :=range _bfddfe .Keys (){_egfdd .Set (_fbab ,_fdadg .copyObject (_bfddfe .Get (_fbab ),_bfaf ,_fdgg ,_bacbf ));};default:_dff .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_eaeg );
};if _bdfef &&_bacbf {_fdgg [_eaeg ]=struct{}{};};return _ecfb ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_edc *PdfColorspaceDeviceRGB )ToPdfObject ()_bcg .PdfObject {return _bcg .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_cefd *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _bcd .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_cefd .S =subtype ;return nil ;};func (_gda *PdfReader )newPdfAnnotationPrinterMarkFromDict (_cdfe *_bcg .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_fbgf :=PdfAnnotationPrinterMark {};_fbgf .MN =_cdfe .Get ("\u004d\u004e");return &_fbgf ,nil ;
};

// Encoder returns the font's text encoder.
func (_ecaee *PdfFont )Encoder ()_bf .TextEncoder {_eaaafe :=_ecaee .actualFont ();if _eaaafe ==nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_ecaee ._aabbg );
return nil ;};return _eaaafe .Encoder ();};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// GetCerts returns the signature certificate chain.
func (_gggge *PdfSignature )GetCerts ()([]*_ag .Certificate ,error ){var _fdbeg []func ()([]*_ag .Certificate ,error );switch _feedc ,_ :=_bcg .GetNameVal (_gggge .SubFilter );_feedc {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_fdbeg =append (_fdbeg ,_gggge .extractChainFromPKCS7 ,_gggge .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_fdbeg =append (_fdbeg ,_gggge .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_fdbeg =append (_fdbeg ,_gggge .extractChainFromPKCS7 );
default:return nil ,_g .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_feedc );};for _ ,_fcfca :=range _fdbeg {_aaggd ,_gcaeg :=_fcfca ();if _gcaeg !=nil {return nil ,_gcaeg ;
};if len (_aaggd )> 0{return _aaggd ,nil ;};};return nil ,ErrSignNoCertificates ;};func (_fffg *PdfFunctionType0 )processSamples ()error {_gfcb :=_ff .ResampleBytes (_fffg ._fbbdd ,_fffg .BitsPerSample );_fffg ._aggf =_gfcb ;return nil ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_ecad *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_ggdb :=_ff .NewReader (img .getBase ());_eacg :=_dca .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_gade :=_ff .NewWriter (_eacg );
_efda :=_ab .Pow (2,float64 (img .BitsPerComponent ))-1;_aceb :=make ([]uint32 ,3);var (_gafb error ;_gff ,_dcdf ,_gdaf ,_ceedc ,_gaee ,_agbbc float64 ;);for {_gafb =_ggdb .ReadSamples (_aceb );if _gafb ==_dg .EOF {break ;}else if _gafb !=nil {return img ,_gafb ;
};_gff =float64 (_aceb [0])/_efda ;_dcdf =float64 (_aceb [1])/_efda ;_gdaf =float64 (_aceb [2])/_efda ;_ceedc =_ecad .Matrix [0]*_ab .Pow (_gff ,_ecad .Gamma [0])+_ecad .Matrix [3]*_ab .Pow (_dcdf ,_ecad .Gamma [1])+_ecad .Matrix [6]*_ab .Pow (_gdaf ,_ecad .Gamma [2]);
_gaee =_ecad .Matrix [1]*_ab .Pow (_gff ,_ecad .Gamma [0])+_ecad .Matrix [4]*_ab .Pow (_dcdf ,_ecad .Gamma [1])+_ecad .Matrix [7]*_ab .Pow (_gdaf ,_ecad .Gamma [2]);_agbbc =_ecad .Matrix [2]*_ab .Pow (_gff ,_ecad .Gamma [0])+_ecad .Matrix [5]*_ab .Pow (_dcdf ,_ecad .Gamma [1])+_ecad .Matrix [8]*_ab .Pow (_gdaf ,_ecad .Gamma [2]);
_gff =3.240479*_ceedc +-1.537150*_gaee +-0.498535*_agbbc ;_dcdf =-0.969256*_ceedc +1.875992*_gaee +0.041556*_agbbc ;_gdaf =0.055648*_ceedc +-0.204043*_gaee +1.057311*_agbbc ;_gff =_ab .Min (_ab .Max (_gff ,0),1.0);_dcdf =_ab .Min (_ab .Max (_dcdf ,0),1.0);
_gdaf =_ab .Min (_ab .Max (_gdaf ,0),1.0);_aceb [0]=uint32 (_gff *_efda );_aceb [1]=uint32 (_dcdf *_efda );_aceb [2]=uint32 (_gdaf *_efda );if _gafb =_gade .WriteSamples (_aceb );_gafb !=nil {return img ,_gafb ;};};return _bgcbe (&_eacg ),nil ;};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_gfee :=Permissions {};_gfee .DocMDP =docMdp ;_ffabg :=_bcg .MakeDict ();_ffabg .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_gfee ._cdade =_ffabg ;return &_gfee ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_edagbc ,_bfdba :=_bbbc (basefont );if _bfdba !=nil {return nil ,_bfdba ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_edagbc ._cbdg =_bf .NewWinAnsiEncoder ();};return &PdfFont {_aabbg :&_edagbc },nil ;
};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_dceg *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _dceg .AlternateSpace ==nil {return nil ,_bcd .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _dceg .AlternateSpace .ColorToRGB (color );};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_cge PdfModel ;Rect _bcg .PdfObject ;Contents _bcg .PdfObject ;P _bcg .PdfObject ;NM _bcg .PdfObject ;M _bcg .PdfObject ;F _bcg .PdfObject ;AP _bcg .PdfObject ;AS _bcg .PdfObject ;Border _bcg .PdfObject ;C _bcg .PdfObject ;StructParent _bcg .PdfObject ;
OC _bcg .PdfObject ;_cbe *_bcg .PdfIndirectObject ;};func _eebdf (_fade *_bcg .PdfObjectStream )(*PdfFunctionType4 ,error ){_adbc :=&PdfFunctionType4 {};_adbc ._gebfc =_fade ;_cgge :=_fade .PdfObjectDictionary ;_cage ,_cgcfb :=_bcg .TraceToDirectObject (_cgge .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bcg .PdfObjectArray );
if !_cgcfb {_dff .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_bcd .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _cage .Len ()%2!=0{_dff .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_bcd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_ecadf ,_gfaab :=_cage .ToFloat64Array ();
if _gfaab !=nil {return nil ,_gfaab ;};_adbc .Domain =_ecadf ;_cage ,_cgcfb =_bcg .TraceToDirectObject (_cgge .Get ("\u0052\u0061\u006eg\u0065")).(*_bcg .PdfObjectArray );if _cgcfb {if _cage .Len ()< 0||_cage .Len ()%2!=0{return nil ,_bcd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_acgge ,_efdfa :=_cage .ToFloat64Array ();if _efdfa !=nil {return nil ,_efdfa ;};_adbc .Range =_acgge ;};_baad ,_gfaab :=_bcg .DecodeStream (_fade );if _gfaab !=nil {return nil ,_gfaab ;};_adbc ._bdbb =_baad ;_eceea :=_dga .NewPSParser (_baad );_dgaa ,_gfaab :=_eceea .Parse ();
if _gfaab !=nil {return nil ,_gfaab ;};_adbc .Program =_dgaa ;return _adbc ,nil ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_cdda *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_cggff *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _aggdf []_bf .TextEncoder ;var _gaccc _bf .CMapEncoder ;if _gbff :=_cggff .baseFields ()._bgebe ;_gbff !=nil {_gaccc =_bf .NewCMapEncoder ("",nil ,_gbff );};_gdfe :=_cggff .Encoder ();
if _gdfe !=nil {switch _ceag :=_gdfe .(type ){case _bf .SimpleEncoder :_bcce :=_ceag .BaseName ();if _ ,_gbdad :=_ebgea [_bcce ];_gbdad {_aggdf =append (_aggdf ,_gdfe );};};};if len (_aggdf )==0{if _cggff .baseFields ()._bgebe !=nil {_aggdf =append (_aggdf ,_gaccc );
};if _gdfe !=nil {_aggdf =append (_aggdf ,_gdfe );};};var _gbe _gg .Buffer ;var _gaea int ;for _ ,_bddfd :=range data {var _daag bool ;for _ ,_afbe :=range _aggdf {if _bebba :=_afbe .Encode (string (_bddfd ));len (_bebba )> 0{_gbe .Write (_bebba );_daag =true ;
break ;};};if !_daag {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_bddfd );
_gaea ++;};};if _gaea !=0{_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_gaea ,_cggff ,_aggdf );
};return _gbe .Bytes (),_gaea ;};func (_efdb *PdfReader )newPdfAcroFormFromDict (_gaecd *_bcg .PdfIndirectObject ,_gadgg *_bcg .PdfObjectDictionary )(*PdfAcroForm ,error ){_fcfb :=NewPdfAcroForm ();if _gaecd !=nil {_fcfb ._eafcb =_gaecd ;_gaecd .PdfObject =_bcg .MakeDict ();
};if _fccc :=_gadgg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_fccc !=nil &&!_bcg .IsNullObject (_fccc ){_eceed ,_cebbe :=_bcg .GetArray (_fccc );if !_cebbe {return nil ,_g .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_fccc );
};var _gcgf []*PdfField ;for _ ,_fcead :=range _eceed .Elements (){_fbfce ,_afcde :=_bcg .GetIndirect (_fcead );if !_afcde {if _ ,_bafcb :=_fcead .(*_bcg .PdfObjectNull );_bafcb {_dff .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_dff .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_fcead );
return nil ,_g .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_accdf ,_dfdbe :=_efdb .newPdfFieldFromIndirectObject (_fbfce ,nil );
if _dfdbe !=nil {return nil ,_dfdbe ;};_dff .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_accdf );_gcgf =append (_gcgf ,_accdf );};_fcfb .Fields =&_gcgf ;};if _dgfg :=_gadgg .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_dgfg !=nil {_eaaf ,_egabe :=_bcg .GetBool (_dgfg );if _egabe {_fcfb .NeedAppearances =_eaaf ;}else {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_dgfg );
};};if _abdcb :=_gadgg .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_abdcb !=nil {_ecagg ,_dcaeb :=_bcg .GetInt (_abdcb );if _dcaeb {_fcfb .SigFlags =_ecagg ;}else {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_abdcb );
};};if _fdcd :=_gadgg .Get ("\u0043\u004f");_fdcd !=nil {_egbc ,_ceff :=_bcg .GetArray (_fdcd );if _ceff {_fcfb .CO =_egbc ;}else {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fdcd );
};};if _decfg :=_gadgg .Get ("\u0044\u0052");_decfg !=nil {if _ecdc ,_gefa :=_bcg .GetDict (_decfg );_gefa {_bfdca ,_eacdc :=NewPdfPageResourcesFromDict (_ecdc );if _eacdc !=nil {_dff .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_eacdc );
return nil ,_eacdc ;};_fcfb .DR =_bfdca ;}else {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_decfg );};};if _ffbeg :=_gadgg .Get ("\u0044\u0041");
_ffbeg !=nil {_cafg ,_abcdf :=_bcg .GetString (_ffbeg );if _abcdf {_fcfb .DA =_cafg ;}else {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_ffbeg );
};};if _dabb :=_gadgg .Get ("\u0051");_dabb !=nil {_edfb ,_ecaff :=_bcg .GetInt (_dabb );if _ecaff {_fcfb .Q =_edfb ;}else {_dff .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_dabb );
};};if _cbacb :=_gadgg .Get ("\u0058\u0046\u0041");_cbacb !=nil {_fcfb .XFA =_cbacb ;};_fcfb .ToPdfObject ();return _fcfb ,nil ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_eabca *PdfPage )GetPageAsIndirectObject ()*_bcg .PdfIndirectObject {return _eabca ._ddfd };

// StdFontName represents name of a standard font.
type StdFontName =_dgb .StdFontName ;

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_fgea *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_dgga *PdfAppender )Write (w _dg .Writer )error {if _dgga ._dgbg {return _bcd .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_gbbc :=NewPdfWriter ();_ggbga ,_aae :=_bcg .GetDict (_gbbc ._cdcfad );if !_aae {return _bcd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_dfd ,_aae :=_ggbga .Get ("\u004b\u0069\u0064\u0073").(*_bcg .PdfObjectArray );if !_aae {return _bcd .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_accc ,_aae :=_ggbga .Get ("\u0043\u006f\u0075n\u0074").(*_bcg .PdfObjectInteger );if !_aae {return _bcd .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_ccgc :=_dgga ._cgdd ._eadaf ;_dced :=_ccgc .GetTrailer ();if _dced ==nil {return _bcd .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_fdfc ,_aae :=_bcg .GetIndirect (_dced .Get ("\u0052\u006f\u006f\u0074"));
if !_aae {return _bcd .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_bbda ,_aae :=_bcg .GetDict (_fdfc );if !_aae {_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_fdfc ,*_dced );
return _bcd .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_bbafe :=range _bbda .Keys (){if _gbbc ._gbfg .Get (_bbafe )==nil {_ebfb :=_bbda .Get (_bbafe );_gbbc ._gbfg .Set (_bbafe ,_ebfb );};};if _dgga ._acc !=nil {_gbbc ._gbfg .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_dgga ._acc .ToPdfObject ());
_dgga .updateObjectsDeep (_dgga ._acc .ToPdfObject (),nil );};if _dgga ._ded !=nil {_dgga .updateObjectsDeep (_dgga ._ded .ToPdfObject (),nil );_gbbc ._gbfg .Set ("\u0044\u0053\u0053",_dgga ._ded .GetContainingPdfObject ());};if _dgga ._face !=nil {_gbbc ._gbfg .Set ("\u0050\u0065\u0072m\u0073",_dgga ._face .ToPdfObject ());
_dgga .updateObjectsDeep (_dgga ._face .ToPdfObject (),nil );};if _gbbc ._cbdba .Major < 2{_gbbc .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);_gbbc .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _bcc ,_bdcb :=_bcg .GetDict (_dced .Get ("\u0049\u006e\u0066\u006f"));
_bdcb {if _gabf ,_eeg :=_bcg .GetDict (_gbbc ._cbdd );_eeg {for _ ,_feabb :=range _bcc .Keys (){if _gabf .Get (_feabb )==nil {_gabf .Set (_feabb ,_bcc .Get (_feabb ));};};};};if _dgga ._gfb !=nil {_gbbc ._cbdd =_bcg .MakeIndirectObject (_dgga ._gfb .ToPdfObject ());
};_dgga .addNewObject (_gbbc ._cbdd );_dgga .addNewObject (_gbbc ._agged );_dbce :=false ;if len (_dgga ._cgdd .PageList )!=len (_dgga ._dbc ){_dbce =true ;}else {for _ceecb :=range _dgga ._cgdd .PageList {switch {case _dgga ._dbc [_ceecb ]==_dgga ._cgdd .PageList [_ceecb ]:case _dgga ._dbc [_ceecb ]==_dgga .Reader .PageList [_ceecb ]:default:_dbce =true ;
};if _dbce {break ;};};};if _dbce {_dgga .updateObjectsDeep (_gbbc ._cdcfad ,nil );}else {_dgga ._gecb [_gbbc ._cdcfad ]=struct{}{};};_gbbc ._cdcfad .ObjectNumber =_dgga .Reader ._gegd .ObjectNumber ;_dgga ._feab [_gbbc ._cdcfad ]=_dgga .Reader ._gegd .ObjectNumber ;
_gdbe :=[]_bcg .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_dgbe :=range _dgga ._dbc {_bgcfb :=_dgbe .ToPdfObject ();
*_accc =*_accc +1;if _ecbb ,_agca :=_bgcfb .(*_bcg .PdfIndirectObject );_agca &&_ecbb .GetParser ()==_dgga ._cgdd ._eadaf {_dfd .Append (&_ecbb .PdfObjectReference );continue ;};if _caaf ,_cbg :=_bcg .GetDict (_bgcfb );_cbg {_eaedg ,_acce :=_caaf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bcg .PdfIndirectObject );
for _acce {_dff .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_eaedg );_eada ,_adbbg :=_eaedg .PdfObject .(*_bcg .PdfObjectDictionary );if !_adbbg {return _bcd .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_baccb :=range _gdbe {_dff .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_baccb );if _caaf .Get (_baccb )!=nil {_dff .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _fgfa :=_eada .Get (_baccb );_fgfa !=nil {_dff .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_baccb );_caaf .Set (_baccb ,_fgfa );};};_eaedg ,_acce =_eada .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bcg .PdfIndirectObject );
_dff .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_eada .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_caaf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gbbc ._cdcfad );};_dgga .updateObjectsDeep (_bgcfb ,nil );
_dfd .Append (_bgcfb );};if _ ,_baef :=_dgga ._gfaa .Seek (0,_dg .SeekStart );_baef !=nil {return _baef ;};_ecfc :=make (map[SignatureHandler ]_dg .Writer );_aceg :=_bcg .MakeArray ();for _ ,_bega :=range _dgga ._bfa {if _febe ,_bacec :=_bcg .GetIndirect (_bega );
_bacec {if _aabb ,_gga :=_febe .PdfObject .(*pdfSignDictionary );_gga {_gadf :=*_aabb ._caef ;var _deda error ;_ecfc [_gadf ],_deda =_gadf .NewDigest (_aabb ._gebfb );if _deda !=nil {return _deda ;};_aceg .Append (_bcg .MakeInteger (0xfffff),_bcg .MakeInteger (0xfffff));
};};};if _aceg .Len ()> 0{_aceg .Append (_bcg .MakeInteger (0xfffff),_bcg .MakeInteger (0xfffff));};for _ ,_adge :=range _dgga ._bfa {if _dbf ,_ada :=_bcg .GetIndirect (_adge );_ada {if _bgfg ,_gcgg :=_dbf .PdfObject .(*pdfSignDictionary );_gcgg {_bgfg .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_aceg );
};};};_cdee :=len (_ecfc )> 0;var _fgee _dg .Reader =_dgga ._gfaa ;if _cdee {_gged :=make ([]_dg .Writer ,0,len (_ecfc ));for _ ,_afga :=range _ecfc {_gged =append (_gged ,_afga );};_fgee =_dg .TeeReader (_dgga ._gfaa ,_dg .MultiWriter (_gged ...));};_cgba ,_fecb :=_dg .Copy (w ,_fgee );
if _fecb !=nil {return _fecb ;};if len (_dgga ._bfa )==0{return nil ;};_gbbc ._fagda =_cgba ;_gbbc .ObjNumOffset =_dgga ._eeaeg ;_gbbc ._gaggd =true ;_gbbc ._afaff =_dgga ._bcae ;_gbbc ._gdbdg =_dgga ._fggd ;_gbbc ._edbde =_dgga ._dfae ;_gbbc ._cbdba =_dgga ._cgdd .PdfVersion ();
_gbbc ._ebcg =_dgga ._feab ;_gbbc ._ebfab =_dgga ._fdce .GetCrypter ();_gbbc ._eaadde =_dgga ._fdce .GetEncryptObj ();_afgf :=_dgga ._fdce .GetXrefType ();if _afgf !=nil {_bbebb :=*_afgf ==_bcg .XrefTypeObjectStream ;_gbbc ._gcfceb =&_bbebb ;};_gbbc ._degdg =map[_bcg .PdfObject ]struct{}{};
_gbbc ._gbadec =[]_bcg .PdfObject {};for _ ,_egef :=range _dgga ._bfa {if _ ,_egaa :=_dgga ._gecb [_egef ];_egaa {continue ;};_gbbc .addObject (_egef );};_effd :=w ;if _cdee {_effd =_gg .NewBuffer (nil );};if _dgga ._dcaf !=""&&_gbbc ._ebfab ==nil {_gbbc .Encrypt ([]byte (_dgga ._dcaf ),[]byte (_dgga ._dcaf ),_dgga ._gbgd );
};if _fda :=_dced .Get ("\u0049\u0044");_fda !=nil {if _bbdf ,_fcbf :=_bcg .GetArray (_fda );_fcbf {_gbbc ._cdfbd =_bbdf ;};};if _feaa :=_gbbc .Write (_effd );_feaa !=nil {return _feaa ;};if _cdee {_dbfb :=_effd .(*_gg .Buffer ).Bytes ();_gacad :=_bcg .MakeArray ();
var _ebac []*pdfSignDictionary ;var _gbc int64 ;for _ ,_fafa :=range _gbbc ._gbadec {if _afbd ,_gdbd :=_bcg .GetIndirect (_fafa );_gdbd {if _egfdb ,_ccbg :=_afbd .PdfObject .(*pdfSignDictionary );_ccbg {_ebac =append (_ebac ,_egfdb );_dabg :=_egfdb ._addab +int64 (_egfdb ._ecbfc );
_gacad .Append (_bcg .MakeInteger (_gbc ),_bcg .MakeInteger (_dabg -_gbc ));_gbc =_egfdb ._addab +int64 (_egfdb ._cdadd );};};};_gacad .Append (_bcg .MakeInteger (_gbc ),_bcg .MakeInteger (_cgba +int64 (len (_dbfb ))-_gbc ));_ecfg :=[]byte (_gacad .WriteString ());
for _ ,_afecd :=range _ebac {_aecb :=int (_afecd ._addab -_cgba );for _cacb :=_afecd ._dgabe ;_cacb < _afecd ._feffa ;_cacb ++{_dbfb [_aecb +_cacb ]=' ';};_ddaa :=_dbfb [_aecb +_afecd ._dgabe :_aecb +_afecd ._feffa ];copy (_ddaa ,_ecfg );};var _gbgbb int ;
for _ ,_ddgg :=range _ebac {_cdcb :=int (_ddgg ._addab -_cgba );_cgeg :=_dbfb [_gbgbb :_cdcb +_ddgg ._ecbfc ];_bdfa :=*_ddgg ._caef ;_ecfc [_bdfa ].Write (_cgeg );_gbgbb =_cdcb +_ddgg ._cdadd ;};for _ ,_dbb :=range _ebac {_bacg :=_dbfb [_gbgbb :];_dgcd :=*_dbb ._caef ;
_ecfc [_dgcd ].Write (_bacg );};for _ ,_daea :=range _ebac {_dcbgc :=int (_daea ._addab -_cgba );_afgg :=*_daea ._caef ;_ebfbg :=_ecfc [_afgg ];if _gbba :=_afgg .Sign (_daea ._gebfb ,_ebfbg );_gbba !=nil {return _gbba ;};_daea ._gebfb .ByteRange =_gacad ;
_effae :=[]byte (_daea ._gebfb .Contents .WriteString ());for _daeb :=_daea ._dgabe ;_daeb < _daea ._feffa ;_daeb ++{_dbfb [_dcbgc +_daeb ]=' ';};for _ebce :=_daea ._ecbfc ;_ebce < _daea ._cdadd ;_ebce ++{_dbfb [_dcbgc +_ebce ]=' ';};_cbde :=_dbfb [_dcbgc +_daea ._dgabe :_dcbgc +_daea ._feffa ];
copy (_cbde ,_ecfg );_cbde =_dbfb [_dcbgc +_daea ._ecbfc :_dcbgc +_daea ._cdadd ];copy (_cbde ,_effae );};_dggaf :=_gg .NewBuffer (_dbfb );_ ,_fecb =_dg .Copy (w ,_dggaf );if _fecb !=nil {return _fecb ;};};_dgga ._dgbg =true ;return nil ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_bcga :=NewPdfAnnotation ();_dgdf :=&PdfAnnotationFreeText {};_dgdf .PdfAnnotation =_bcga ;_dgdf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bcga .SetContext (_dgdf );return _dgdf ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_ebcdc *PdfShading )GetContainingPdfObject ()_bcg .PdfObject {return _ebcdc ._cdefff };

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_eeag *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_bcg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dddab ,_aace :=_bcg .GetNumbersAsFloat (objects );
if _aace !=nil {return nil ,_aace ;};return _eeag .ColorFromFloats (_dddab );};func _bbbc (_gadd StdFontName )(pdfFontSimple ,error ){_aedf ,_gdde :=_dgb .NewStdFontByName (_gadd );if !_gdde {return pdfFontSimple {},ErrFontNotSupported ;};_cdac :=_dddag (_aedf );
return _cdac ,nil ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_acff *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_ffcf :=_acff .actualFont ();if _ffcf ==nil {_dff .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_acff ._aabbg );
return _dgb .CharMetrics {},false ;};if _gcfc ,_dfeg :=_ffcf .GetRuneMetrics (r );_dfeg {return _gcfc ,true ;};if _dbfeg ,_cfggd :=_acff .GetFontDescriptor ();_cfggd ==nil &&_dbfeg !=nil {return _dgb .CharMetrics {Wx :_dbfeg ._gbdae },true ;};_dff .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_acff );
return _dgb .CharMetrics {},false ;};func (_efeef *PdfPattern )getDict ()*_bcg .PdfObjectDictionary {if _ggdab ,_cffcd :=_efeef ._afcbe .(*_bcg .PdfIndirectObject );_cffcd {_gcda ,_gcfcb :=_ggdab .PdfObject .(*_bcg .PdfObjectDictionary );if !_gcfcb {return nil ;
};return _gcda ;}else if _efdgb ,_fddee :=_efeef ._afcbe .(*_bcg .PdfObjectStream );_fddee {return _efdgb .PdfObjectDictionary ;}else {_dff .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_efeef ._afcbe );
return nil ;};};

// ToPdfObject implements interface PdfModel.
func (_dfe *PdfAnnotationProjection )ToPdfObject ()_bcg .PdfObject {_dfe .PdfAnnotation .ToPdfObject ();_cgbdb :=_dfe ._cbe ;_eace :=_cgbdb .PdfObject .(*_bcg .PdfObjectDictionary );_dfe .PdfAnnotationMarkup .appendToPdfDictionary (_eace );return _cgbdb ;
};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_fdcc *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// ToPdfObject implements interface PdfModel.
func (_ffddb *PdfBorderStyle )ToPdfObject ()_bcg .PdfObject {_cfgg :=_bcg .MakeDict ();if _ffddb ._dccec !=nil {if _becb ,_adbb :=_ffddb ._dccec .(*_bcg .PdfIndirectObject );_adbb {_becb .PdfObject =_cfgg ;};};_cfgg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _ffddb .W !=nil {_cfgg .Set ("\u0057",_bcg .MakeFloat (*_ffddb .W ));};if _ffddb .S !=nil {_cfgg .Set ("\u0053",_bcg .MakeName (_ffddb .S .GetPdfName ()));};if _ffddb .D !=nil {_cfgg .Set ("\u0044",_bcg .MakeArrayFromIntegers (*_ffddb .D ));};if _ffddb ._dccec !=nil {return _ffddb ._dccec ;
};return _cfgg ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_aga :=NewPdfAnnotation ();_cebg :=&PdfAnnotationPolygon {};_cebg .PdfAnnotation =_aga ;_cebg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aga .SetContext (_cebg );return _cebg ;};

// A returns the value of the A component of the color.
func (_cfb *PdfColorCalRGB )A ()float64 {return _cfb [0]};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// ToPdfObject implements interface PdfModel.
func (_cef *PdfAnnotationCircle )ToPdfObject ()_bcg .PdfObject {_cef .PdfAnnotation .ToPdfObject ();_bbeb :=_cef ._cbe ;_begc :=_bbeb .PdfObject .(*_bcg .PdfObjectDictionary );_cef .PdfAnnotationMarkup .appendToPdfDictionary (_begc );_begc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_begc .SetIfNotNil ("\u0042\u0053",_cef .BS );_begc .SetIfNotNil ("\u0049\u0043",_cef .IC );_begc .SetIfNotNil ("\u0042\u0045",_cef .BE );_begc .SetIfNotNil ("\u0052\u0044",_cef .RD );return _bbeb ;};type pdfSignDictionary struct{*_bcg .PdfObjectDictionary ;
_caef *SignatureHandler ;_gebfb *PdfSignature ;_addab int64 ;_ecbfc int ;_cdadd int ;_dgabe int ;_feffa int ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_dbg :=NewPdfAnnotation ();_egf :=&PdfAnnotationLine {};_egf .PdfAnnotation =_dbg ;_egf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dbg .SetContext (_egf );return _egf ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_ggcfc *PdfWriter )SetRotation (rotate int64 )error {_begebb ,_eecdc :=_bcg .GetDict (_ggcfc ._cdcfad );if !_eecdc {return ErrTypeCheck ;};_begebb .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bcg .MakeInteger (rotate ));return nil ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_befdf *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _befdf .Alternate ==nil {_dff .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _befdf .N ==1{_dff .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_ebec :=NewPdfColorspaceDeviceGray ();return _ebec .ColorToRGB (color );}else if _befdf .N ==3{_dff .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _befdf .N ==4{_dff .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_fafd :=NewPdfColorspaceDeviceCMYK ();return _fafd .ColorToRGB (color );}else {return nil ,_bcd .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_dff .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_befdf );
return _befdf .Alternate .ColorToRGB (color );};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_caca :=NewPdfAnnotation ();_aebc :=&PdfAnnotationMovie {};_aebc .PdfAnnotation =_caca ;_caca .SetContext (_aebc );return _aebc ;};

// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};func (_fdgd *PdfReader )newPdfAnnotationFileAttachmentFromDict (_bfe *_bcg .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_def :=PdfAnnotationFileAttachment {};_fbbb ,_feb :=_fdgd .newPdfAnnotationMarkupFromDict (_bfe );
if _feb !=nil {return nil ,_feb ;};_def .PdfAnnotationMarkup =_fbbb ;_def .FS =_bfe .Get ("\u0046\u0053");_def .Name =_bfe .Get ("\u004e\u0061\u006d\u0065");return &_def ,nil ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_deggdg *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_dbacf *PdfSignature ,_aegeb Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_eaeca *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_efgg *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_ccfafa *PdfSignature ,_adggf Hasher )error ;};

// ToInteger convert to an integer format.
func (_feed *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_abfdd :=_ab .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_abfdd *_feed .R ()),uint32 (_abfdd *_feed .G ()),uint32 (_abfdd *_feed .B ())};};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_eaag *PdfColorspaceSpecialIndexed )ToPdfObject ()_bcg .PdfObject {_bggb :=_bcg .MakeArray (_bcg .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_bggb .Append (_eaag .Base .ToPdfObject ());_bggb .Append (_bcg .MakeInteger (int64 (_eaag .HiVal )));
_bggb .Append (_eaag .Lookup );if _eaag ._ggaa !=nil {_eaag ._ggaa .PdfObject =_bggb ;return _eaag ._ggaa ;};return _bggb ;};func (_aefbd *pdfFontSimple )updateStandard14Font (){_ggga ,_afdf :=_aefbd .Encoder ().(_bf .SimpleEncoder );if !_afdf {_dff .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_aefbd .Encoder (),_aefbd );
return ;};_ffcc :=_ggga .Charcodes ();_aefbd ._ffgef =make (map[_bf .CharCode ]float64 ,len (_ffcc ));for _ ,_gcacg :=range _ffcc {_bdbdg ,_ :=_ggga .CharcodeToRune (_gcacg );_aeaed ,_ :=_aefbd ._fdbcdc .Read (_bdbdg );_aefbd ._ffgef [_gcacg ]=_aeaed .Wx ;
};};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_cgbe *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _bgga []float64 ;for _eega :=0;_eega < _cgbe .GetNumComponents ();_eega ++{_bgga =append (_bgga ,0.0,1.0);};return _bgga ;};func _fedfcf (_gagbe *_bcg .PdfObjectDictionary ,_fdfce *fontCommon )(*pdfFontType0 ,error ){_acfg ,_edca :=_bcg .GetArray (_gagbe .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_edca {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_fdfce );
return nil ,_bcg .ErrRangeError ;};if _acfg .Len ()!=1{_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_acfg .Len ());return nil ,_bcg .ErrRangeError ;
};_fgfdc ,_ebdbf :=_eeee (_acfg .Get (0),false );if _ebdbf !=nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_ebdbf ,_fdfce );
return nil ,_ebdbf ;};_fbedg :=_gcbb (_fdfce );_fbedg .DescendantFont =_fgfdc ;_bdbce ,_edca :=_bcg .GetNameVal (_gagbe .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _edca {if _bdbce =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_bdbce =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_fbedg ._eegb =_bf .NewIdentityTextEncoder (_bdbce );
}else if _faa .IsPredefinedCMap (_bdbce ){_fbedg ._bbbfd ,_ebdbf =_faa .LoadPredefinedCMap (_bdbce );if _ebdbf !=nil {_dff .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_bdbce ,_ebdbf );
};}else {_dff .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_bdbce );};};if _efdeb :=_fgfdc .baseFields ()._bgebe ;_efdeb !=nil {if _ggda :=_efdeb .Name ();_ggda =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_ggda =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_ggda =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_ggda =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_fbedg ._eegb =_bf .NewCMapEncoder (_bdbce ,_fbedg ._bbbfd ,_efdeb );
};};return _fbedg ,nil ;};func (_bfgf *PdfReader )newPdfAnnotationLineFromDict (_bcbd *_bcg .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_adb :=PdfAnnotationLine {};_afd ,_ccb :=_bfgf .newPdfAnnotationMarkupFromDict (_bcbd );if _ccb !=nil {return nil ,_ccb ;
};_adb .PdfAnnotationMarkup =_afd ;_adb .L =_bcbd .Get ("\u004c");_adb .BS =_bcbd .Get ("\u0042\u0053");_adb .LE =_bcbd .Get ("\u004c\u0045");_adb .IC =_bcbd .Get ("\u0049\u0043");_adb .LL =_bcbd .Get ("\u004c\u004c");_adb .LLE =_bcbd .Get ("\u004c\u004c\u0045");
_adb .Cap =_bcbd .Get ("\u0043\u0061\u0070");_adb .IT =_bcbd .Get ("\u0049\u0054");_adb .LLO =_bcbd .Get ("\u004c\u004c\u004f");_adb .CP =_bcbd .Get ("\u0043\u0050");_adb .Measure =_bcbd .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_adb .CO =_bcbd .Get ("\u0043\u004f");
return &_adb ,nil ;};func (_geeb *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_dgea .Lock ();defer _dgea .Unlock ();_bgcfg =subject };

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_aeab *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_ebbef ,_ebfde :=_dee .Open (filePath );if _ebfde !=nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_ebfde );
return nil ,_ebfde ;};defer _ebbef .Close ();return NewPdfFontFromTTF (_ebbef );};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_bagec *PdfPageResources )SetXObjectByName (keyName _bcg .PdfObjectName ,stream *_bcg .PdfObjectStream )error {if _bagec .XObject ==nil {_bagec .XObject =_bcg .MakeDict ();};_cbceag :=_bcg .TraceToDirectObject (_bagec .XObject );_egea ,_cfec :=_cbceag .(*_bcg .PdfObjectDictionary );
if !_cfec {_dff .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_bagec .XObject ,_cbceag );return _bcd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_egea .Set (keyName ,stream );return nil ;};func _cbcbfc (_ggfec *XObjectImage )error {if _ggfec .SMask ==nil {return nil ;};_agdg ,_edcc :=_ggfec .SMask .(*_bcg .PdfObjectStream );if !_edcc {_dff .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _bcg .ErrTypeError ;};_gffef :=_agdg .PdfObjectDictionary ;_gcfgg :=_gffef .Get ("\u004d\u0061\u0074t\u0065");if _gcfgg ==nil {return nil ;};_babcc ,_baaaa :=_aagef (_gcfgg .(*_bcg .PdfObjectArray ));if _baaaa !=nil {return _baaaa ;};_gbced :=_bcg .MakeArrayFromFloats ([]float64 {_babcc });
_gffef .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_gbced );return nil ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_egdfd interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gdceg *PdfShadingType3 )ToPdfObject ()_bcg .PdfObject {_gdceg .PdfShading .ToPdfObject ();_gfgdf ,_adabb :=_gdceg .getShadingDict ();if _adabb !=nil {_dff .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gdceg .Coords !=nil {_gfgdf .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_gdceg .Coords );};if _gdceg .Domain !=nil {_gfgdf .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gdceg .Domain );};if _gdceg .Function !=nil {if len (_gdceg .Function )==1{_gfgdf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gdceg .Function [0].ToPdfObject ());
}else {_deefc :=_bcg .MakeArray ();for _ ,_abfb :=range _gdceg .Function {_deefc .Append (_abfb .ToPdfObject ());};_gfgdf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_deefc );};};if _gdceg .Extend !=nil {_gfgdf .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_gdceg .Extend );
};return _gdceg ._cdefff ;};func (_fabd *PdfReader )newPdfAnnotation3DFromDict (_cagc *_bcg .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_aff :=PdfAnnotation3D {};_aff .T3DD =_cagc .Get ("\u0033\u0044\u0044");_aff .T3DV =_cagc .Get ("\u0033\u0044\u0056");
_aff .T3DA =_cagc .Get ("\u0033\u0044\u0041");_aff .T3DI =_cagc .Get ("\u0033\u0044\u0049");_aff .T3DB =_cagc .Get ("\u0033\u0044\u0042");return &_aff ,nil ;};func (_eade *PdfWriter )addObject (_dceecf _bcg .PdfObject )bool {_ebgcdb :=_eade .hasObject (_dceecf );
if !_ebgcdb {_gccfc :=_bcg .ResolveReferencesDeep (_dceecf ,_eade ._bdcg );if _gccfc !=nil {_dff .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_gccfc );};_eade ._gbadec =append (_eade ._gbadec ,_dceecf );
_eade ._degdg [_dceecf ]=struct{}{};return true ;};return false ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_bbcce *PdfReader )Inspect ()(map[string ]int ,error ){return _bbcce ._eadaf .Inspect ()};

// Evaluate runs the function on the passed in slice and returns the results.
func (_dcdgb *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_dff .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_bcd .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_fdc :=NewPdfAnnotation ();_edbb :=&PdfAnnotation3D {};_edbb .PdfAnnotation =_fdc ;_fdc .SetContext (_edbb );return _edbb ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_baacba *PdfShadingType2 )ToPdfObject ()_bcg .PdfObject {_baacba .PdfShading .ToPdfObject ();_eccde ,_gebfca :=_baacba .getShadingDict ();if _gebfca !=nil {_dff .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _eccde ==nil {_dff .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _baacba .Coords !=nil {_eccde .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_baacba .Coords );
};if _baacba .Domain !=nil {_eccde .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_baacba .Domain );};if _baacba .Function !=nil {if len (_baacba .Function )==1{_eccde .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_baacba .Function [0].ToPdfObject ());
}else {_aabgb :=_bcg .MakeArray ();for _ ,_agdcb :=range _baacba .Function {_aabgb .Append (_agdcb .ToPdfObject ());};_eccde .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aabgb );};};if _baacba .Extend !=nil {_eccde .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_baacba .Extend );
};return _baacba ._cdefff ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_cb :=NewPdfAction ();_gbg :=&PdfActionSetOCGState {};_gbg .PdfAction =_cb ;_cb .SetContext (_gbg );return _gbg ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_fdcgcf *PdfShadingPattern )ToPdfObject ()_bcg .PdfObject {_fdcgcf .PdfPattern .ToPdfObject ();_gcbba :=_fdcgcf .getDict ();if _fdcgcf .Shading !=nil {_gcbba .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_fdcgcf .Shading .ToPdfObject ());};if _fdcgcf .Matrix !=nil {_gcbba .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_fdcgcf .Matrix );
};if _fdcgcf .ExtGState !=nil {_gcbba .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_fdcgcf .ExtGState );};return _fdcgcf ._afcbe ;};

// ToPdfObject implements interface PdfModel.
func (_ccee *PdfAnnotationCaret )ToPdfObject ()_bcg .PdfObject {_ccee .PdfAnnotation .ToPdfObject ();_ddfc :=_ccee ._cbe ;_cbfc :=_ddfc .PdfObject .(*_bcg .PdfObjectDictionary );_ccee .PdfAnnotationMarkup .appendToPdfDictionary (_cbfc );_cbfc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0043\u0061\u0072e\u0074"));
_cbfc .SetIfNotNil ("\u0052\u0044",_ccee .RD );_cbfc .SetIfNotNil ("\u0053\u0079",_ccee .Sy );return _ddfc ;};type fontFile struct{_gdee string ;_fcbgd string ;_beab _bf .SimpleEncoder ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _bcg .PdfObject ;B _bcg .PdfObject ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_eaae ,_dgbf :=_dgb .NewStdFontByName (HelveticaName );if !_dgbf {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_cgdgg :=_dddag (_eaae );return &PdfFont {_aabbg :&_cgdgg };};

// HasExtGState checks if ExtGState name is available.
func (_accfc *PdfPage )HasExtGState (name _bcg .PdfObjectName )bool {if _accfc .Resources ==nil {return false ;};if _accfc .Resources .ExtGState ==nil {return false ;};_bdgb ,_dafgg :=_bcg .TraceToDirectObject (_accfc .Resources .ExtGState ).(*_bcg .PdfObjectDictionary );
if !_dafgg {_dff .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bcg .TraceToDirectObject (_accfc .Resources .ExtGState ));
return false ;};_defee :=_bdgb .Get (name );_gccbe :=_defee !=nil ;return _gccbe ;};func (_dbffa *PdfFont )baseFields ()*fontCommon {if _dbffa ._aabbg ==nil {_dff .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _dbffa ._aabbg .baseFields ();};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_cddg *PdfField )Flags ()FieldFlag {var _efdad FieldFlag ;_edcd ,_bebga :=_cddg .inherit (func (_aedgc *PdfField )bool {if _aedgc .Ff !=nil {_efdad =FieldFlag (*_aedgc .Ff );return true ;};return false ;});if _bebga !=nil {_dff .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_bebga );
};if !_edcd {_dff .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _efdad ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_fcgg *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _fcgg .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_eacf *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_dccag ,_cced :=color .(*PdfColorDeviceCMYK );if !_cced {_dff .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_bcd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_aaab :=_dccag .C ();_cbff :=_dccag .M ();_daef :=_dccag .Y ();_caab :=_dccag .K ();_aaab =_aaab *(1-_caab )+_caab ;_cbff =_cbff *(1-_caab )+_caab ;
_daef =_daef *(1-_caab )+_caab ;_gfgc :=1-_aaab ;_defg :=1-_cbff ;_fbcg :=1-_daef ;return NewPdfColorDeviceRGB (_gfgc ,_defg ,_fbcg ),nil ;};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_faec :_bcg .MakeDict ()};
};

// ToPdfObject implements interface PdfModel.
func (_eafd *PdfAnnotationWidget )ToPdfObject ()_bcg .PdfObject {_eafd .PdfAnnotation .ToPdfObject ();_dce :=_eafd ._cbe ;_bfdc :=_dce .PdfObject .(*_bcg .PdfObjectDictionary );if _eafd ._egde {return _dce ;};_eafd ._egde =true ;_bfdc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_bfdc .SetIfNotNil ("\u0048",_eafd .H );_bfdc .SetIfNotNil ("\u004d\u004b",_eafd .MK );_bfdc .SetIfNotNil ("\u0041",_eafd .A );_bfdc .SetIfNotNil ("\u0041\u0041",_eafd .AA );_bfdc .SetIfNotNil ("\u0042\u0053",_eafd .BS );_cggf :=_eafd .Parent ;if _eafd ._dggf !=nil {if _eafd ._dggf ._bddgb ==_eafd ._cbe {_eafd ._dggf .ToPdfObject ();
};_cggf =_eafd ._dggf .GetContainingPdfObject ();};if _cggf !=_dce {_bfdc .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_cggf );};_eafd ._egde =false ;return _dce ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// Encoder returns the font's text encoder.
func (_ddae pdfFontType0 )Encoder ()_bf .TextEncoder {return _ddae ._eegb };type pdfCIDFontType0 struct{fontCommon ;_gbcb *_bcg .PdfIndirectObject ;_fbeb _bf .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_bcg .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bcg .PdfObject ;W _bcg .PdfObject ;DW2 _bcg .PdfObject ;W2 _bcg .PdfObject ;_bcedd map[_bf .CharCode ]float64 ;_cfaa float64 ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_faaea *PdfPage )GetContainingPdfObject ()_bcg .PdfObject {return _faaea ._ddfd };

// Mask returns the uin32 bitmask for the specific flag.
func (_cbdff FieldFlag )Mask ()uint32 {return uint32 (_cbdff )};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_ceeg *PdfPage )GetRotate ()(int64 ,error ){if _ceeg .Rotate !=nil {return *_ceeg .Rotate ,nil ;};_adab :=_ceeg .Parent ;for _adab !=nil {_babdf ,_efad :=_bcg .GetDict (_adab );if !_efad {return 0,_bcd .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _fdbec :=_babdf .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_fdbec !=nil {_bggfb ,_efce :=_bcg .GetInt (_fdbec );if !_efce {return 0,_bcd .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};
if _bggfb !=nil {return int64 (*_bggfb ),nil ;};return 0,_bcd .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_adab =_babdf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_bcd .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// Fill populates `form` with values provided by `provider`.
func (_egcdf *PdfAcroForm )Fill (provider FieldValueProvider )error {return _egcdf .fill (provider ,nil )};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _bcg .PdfObject ;H _bcg .PdfObject ;};func (_eecfg *Image )samplesTrimPadding (_bebd []uint32 )[]uint32 {_cgbbg :=_eecfg .ColorComponents *int (_eecfg .Width )*int (_eecfg .Height );if len (_bebd )==_cgbbg {return _bebd ;
};_ebbda :=make ([]uint32 ,_cgbbg );_efbd :=int (_eecfg .Width )*_eecfg .ColorComponents ;var _ggecb ,_gedf ,_fefb ,_dgafc int ;_bfcff :=_dca .BytesPerLine (int (_eecfg .Width ),int (_eecfg .BitsPerComponent ),_eecfg .ColorComponents );for _ggecb =0;_ggecb < int (_eecfg .Height );
_ggecb ++{_gedf =_ggecb *int (_eecfg .Width );_fefb =_ggecb *_bfcff ;for _dgafc =0;_dgafc < _efbd ;_dgafc ++{_ebbda [_gedf +_dgafc ]=_bebd [_fefb +_dgafc ];};};return _ebbda ;};func (_fbdbc *PdfWriter )seekByName (_ggfda _bcg .PdfObject ,_caebc []string ,_agbcg string )([]_bcg .PdfObject ,error ){_dff .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_ggfda );
var _eebbe []_bcg .PdfObject ;if _agfb ,_gagga :=_ggfda .(*_bcg .PdfIndirectObject );_gagga {return _fbdbc .seekByName (_agfb .PdfObject ,_caebc ,_agbcg );};if _agaec ,_befe :=_ggfda .(*_bcg .PdfObjectStream );_befe {return _fbdbc .seekByName (_agaec .PdfObjectDictionary ,_caebc ,_agbcg );
};if _gccgd ,_ccfb :=_ggfda .(*_bcg .PdfObjectDictionary );_ccfb {_dff .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_bedab :=range _gccgd .Keys (){_gebdg :=_gccgd .Get (_bedab );if string (_bedab )==_agbcg {_eebbe =append (_eebbe ,_gebdg );};for _ ,_abcb :=range _caebc {if string (_bedab )==_abcb {_dff .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_abcb );
_gbdef ,_bbcfg :=_fbdbc .seekByName (_gebdg ,_caebc ,_agbcg );if _bbcfg !=nil {return _eebbe ,_bbcfg ;};_eebbe =append (_eebbe ,_gbdef ...);break ;};};};return _eebbe ,nil ;};return _eebbe ,nil ;};func (_ggddf *PdfWriter )writeObjectsInStreams (_afbad map[_bcg .PdfObject ]bool )error {for _ ,_fefca :=range _ggddf ._gbadec {if _affef :=_afbad [_fefca ];
_affef {continue ;};_cbfcg :=int64 (0);switch _gdcga :=_fefca .(type ){case *_bcg .PdfIndirectObject :_cbfcg =_gdcga .ObjectNumber ;case *_bcg .PdfObjectStream :_cbfcg =_gdcga .ObjectNumber ;case *_bcg .PdfObjectStreams :_cbfcg =_gdcga .ObjectNumber ;default:_dff .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_fefca );
return ErrTypeCheck ;};if _ggddf ._ebfab !=nil &&_fefca !=_ggddf ._eaadde {_gegde :=_ggddf ._ebfab .Encrypt (_fefca ,_cbfcg ,0);if _gegde !=nil {_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_gegde );
return _gegde ;};};_ggddf .writeObject (int (_cbfcg ),_fefca );};return nil ;};func (_gdgc *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_fecff *PdfFont )ToUnicode ()string {if _fecff .baseFields ()._bgebe ==nil {return "";};return _fecff .baseFields ()._bgebe .Name ();};func _afbcg (_feeg []byte )(_fdda ,_gbbd string ,_edgfd error ){_dff .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_feeg ));
_acdf :=_ffcad .FindIndex (_feeg );if _acdf ==nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_bcg .ErrTypeError ;};_eeda :=_acdf [1];_cdcbf :=_ce .Index (string (_feeg [_eeda :]),_caeea );if _cdcbf < 0{_fdda =string (_feeg [_eeda :]);return _fdda ,"",nil ;};_dbae :=_eeda +_cdcbf ;_fdda =string (_feeg [_eeda :_dbae ]);_ddbcc :=_dbae ;
_cdcbf =_ce .Index (string (_feeg [_ddbcc :]),_effee );if _cdcbf < 0{_dff .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_edgfd );
return "","",_bcg .ErrTypeError ;};_dfccd :=_ddbcc +_cdcbf ;_gbbd =string (_feeg [_ddbcc :_dfccd ]);return _fdda ,_gbbd ,nil ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// IsTiling specifies if the pattern is a tiling pattern.
func (_daagg *PdfPattern )IsTiling ()bool {return _daagg .PatternType ==1};func (_gadc *PdfWriter )setWriter (_cbagc _dg .Writer ){_gadc ._dacb =_gadc ._fagda ;_gadc ._fbee =_bb .NewWriter (_cbagc );};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_bcg .PdfObjectName ;P *_bcg .PdfObjectInteger ;V *_bcg .PdfObjectName ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_dccde *PdfField )IsTerminal ()bool {return len (_dccde .Kids )==0};func (_bdcd *PdfWriter )setHashIDs (_gabdbd _d .Hash )error {_aeeeg :=_gabdbd .Sum (nil );if _bdcd ._dcadb ==""{_bdcd ._dcadb =_aa .EncodeToString (_aeeeg [:8]);};_bdcd .setDocumentIDs (_bdcd ._dcadb ,_aa .EncodeToString (_aeeeg [8:]));
return nil ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_eafcb :_bcg .MakeIndirectObject (_bcg .MakeDict ())};};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// ToPdfObject implements interface PdfModel.
func (_fcdc *PdfAnnotationStrikeOut )ToPdfObject ()_bcg .PdfObject {_fcdc .PdfAnnotation .ToPdfObject ();_gagc :=_fcdc ._cbe ;_edeb :=_gagc .PdfObject .(*_bcg .PdfObjectDictionary );_fcdc .PdfAnnotationMarkup .appendToPdfDictionary (_edeb );_edeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_edeb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_fcdc .QuadPoints );return _gagc ;};

// String implements interface PdfObject.
func (_cd *PdfAction )String ()string {_cg ,_dcg :=_cd .ToPdfObject ().(*_bcg .PdfIndirectObject );if _dcg {return _g .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_cd ._afc ,_cg .PdfObject .String ());};return "";};func (_gcf *PdfReader )newPdfAnnotationPolyLineFromDict (_bedb *_bcg .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_dfgc :=PdfAnnotationPolyLine {};
_dggc ,_bffg :=_gcf .newPdfAnnotationMarkupFromDict (_bedb );if _bffg !=nil {return nil ,_bffg ;};_dfgc .PdfAnnotationMarkup =_dggc ;_dfgc .Vertices =_bedb .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_dfgc .LE =_bedb .Get ("\u004c\u0045");
_dfgc .BS =_bedb .Get ("\u0042\u0053");_dfgc .IC =_bedb .Get ("\u0049\u0043");_dfgc .BE =_bedb .Get ("\u0042\u0045");_dfgc .IT =_bedb .Get ("\u0049\u0054");_dfgc .Measure =_bedb .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_dfgc ,nil ;};

// Add appends an outline item as a child of the current outline item.
func (_fbdee *OutlineItem )Add (item *OutlineItem ){_fbdee .Entries =append (_fbdee .Entries ,item )};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_agec *PdfField )ToPdfObject ()_bcg .PdfObject {_fgfdb :=_agec ._bddgb ;_dabe :=_fgfdb .PdfObject .(*_bcg .PdfObjectDictionary );_edbd :=_bcg .MakeArray ();for _ ,_caf :=range _agec .Kids {_edbd .Append (_caf .ToPdfObject ());};for _ ,_gadeb :=range _agec .Annotations {if _gadeb ._cbe !=_agec ._bddgb {_edbd .Append (_gadeb .GetContext ().ToPdfObject ());
};};if _agec .Parent !=nil {_dabe .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_agec .Parent .GetContainingPdfObject ());};if _edbd .Len ()> 0{_dabe .Set ("\u004b\u0069\u0064\u0073",_edbd );};_dabe .SetIfNotNil ("\u0046\u0054",_agec .FT );_dabe .SetIfNotNil ("\u0054",_agec .T );
_dabe .SetIfNotNil ("\u0054\u0055",_agec .TU );_dabe .SetIfNotNil ("\u0054\u004d",_agec .TM );_dabe .SetIfNotNil ("\u0046\u0066",_agec .Ff );_dabe .SetIfNotNil ("\u0056",_agec .V );_dabe .SetIfNotNil ("\u0044\u0056",_agec .DV );_dabe .SetIfNotNil ("\u0041\u0041",_agec .AA );
if _agec .VariableText !=nil {_dabe .SetIfNotNil ("\u0044\u0041",_agec .VariableText .DA );_dabe .SetIfNotNil ("\u0051",_agec .VariableText .Q );_dabe .SetIfNotNil ("\u0044\u0053",_agec .VariableText .DS );_dabe .SetIfNotNil ("\u0052\u0056",_agec .VariableText .RV );
};return _fgfdb ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_aaaf *PdfFont )CharcodesToUnicodeWithStats (charcodes []_bf .CharCode )(_eeaa []rune ,_gdbf ,_aada int ){_cabde ,_gdbf ,_aada :=_aaaf .CharcodesToStrings (charcodes );return []rune (_ce .Join (_cabde ,"")),_gdbf ,_aada ;};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_gdfffc *Image )ColorAt (x ,y int )(_gb .Color ,error ){_efaeb :=_dca .BytesPerLine (int (_gdfffc .Width ),int (_gdfffc .BitsPerComponent ),_gdfffc .ColorComponents );switch _gdfffc .ColorComponents {case 1:return _dca .ColorAtGrayscale (x ,y ,int (_gdfffc .BitsPerComponent ),_efaeb ,_gdfffc .Data ,_gdfffc ._agagd );
case 3:return _dca .ColorAtNRGBA (x ,y ,int (_gdfffc .Width ),_efaeb ,int (_gdfffc .BitsPerComponent ),_gdfffc .Data ,_gdfffc ._aagba ,_gdfffc ._agagd );case 4:return _dca .ColorAtCMYK (x ,y ,int (_gdfffc .Width ),_gdfffc .Data ,_gdfffc ._agagd );};_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gdfffc .ColorComponents ,_gdfffc .BitsPerComponent );
return nil ,_bcd .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_cegf *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_bcg .PdfObject )(PdfColor ,error ){if len (objects )!=_cegf .GetNumComponents (){return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dggbf ,_ecegg :=_bcg .GetNumbersAsFloat (objects );
if _ecegg !=nil {return nil ,_ecegg ;};return _cegf .ColorFromFloats (_dggbf );};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _bcg .PdfObject ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};func (_fac *PdfReader )newPdfAnnotationLinkFromDict (_eea *_bcg .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_egge :=PdfAnnotationLink {};_egge .A =_eea .Get ("\u0041");_egge .Dest =_eea .Get ("\u0044\u0065\u0073\u0074");
_egge .H =_eea .Get ("\u0048");_egge .PA =_eea .Get ("\u0050\u0041");_egge .QuadPoints =_eea .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_egge .BS =_eea .Get ("\u0042\u0053");return &_egge ,nil ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_fbgdf *PdfPageResources )GetExtGState (keyName _bcg .PdfObjectName )(_bcg .PdfObject ,bool ){if _fbgdf .ExtGState ==nil {return nil ,false ;};_geeae ,_fdag :=_bcg .TraceToDirectObject (_fbgdf .ExtGState ).(*_bcg .PdfObjectDictionary );if !_fdag {_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fbgdf .ExtGState );
return nil ,false ;};if _edfeg :=_geeae .Get (keyName );_edfeg !=nil {return _edfeg ,true ;};return nil ,false ;};func (_afafb *PdfWriter )writeDocumentVersion (){if _afafb ._gaggd {_afafb .writeString ("\u000a");}else {_afafb .writeString (_g .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_afafb ._cbdba .Major ,_afafb ._cbdba .Minor ));
_afafb .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_fgebb DefaultImageHandler )NewImageFromGoImage (goimg _af .Image )(*Image ,error ){_fcggc ,_aebaa :=_dca .FromGoImage (goimg );if _aebaa !=nil {return nil ,_aebaa ;};_eabbf :=_bgcbe (_fcggc .Base ());return &_eabbf ,nil ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_dgb .CharMetrics ;

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _bcg .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _afcg *_bcg .PdfIndirectObject ;var _gbgcf *_bcg .PdfObjectName ;var _ecac *_bcg .PdfObjectArray ;if _abdb ,_cefa :=obj .(*_bcg .PdfIndirectObject );
_cefa {_afcg =_abdb ;};obj =_bcg .TraceToDirectObject (obj );switch _efb :=obj .(type ){case *_bcg .PdfObjectArray :_ecac =_efb ;case *_bcg .PdfObjectName :_gbgcf =_efb ;};if _gbgcf !=nil {switch *_gbgcf {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_dff .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_gbgcf );return nil ,_dcfa ;};};if _ecac !=nil &&_ecac .Len ()> 0{var _bfdb _bcg .PdfObject =_afcg ;
if _afcg ==nil {_bfdb =_ecac ;};if _begg ,_ffee :=_bcg .GetName (_ecac .Get (0));_ffee {switch _begg .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _ecac .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _ecac .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _ecac .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _aca (_bfdb );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _effgb (_bfdb );
case "\u004c\u0061\u0062":return _gegff (_bfdb );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _bgeag (_bfdb );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _edfccf (_bfdb );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _eagc (_bfdb );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _ecfcd (_bfdb );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _cgda (_bfdb );default:_dff .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_begg );
};};};_dff .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// ParsePdfObject parses input pdf object into given output intent.
func (_ebfe *PdfOutputIntent )ParsePdfObject (object _bcg .PdfObject )error {_ccfaa ,_cdcfdf :=_bcg .GetDict (object );if !_cdcfdf {_dff .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _bcd .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_ebfe ._faec =_ccfaa ;_ebfe .Type ,_ =_ccfaa .GetString ("\u0054\u0079\u0070\u0065");_bgdc ,_cdcfdf :=_ccfaa .GetString ("\u0053");if _cdcfdf {switch _bgdc {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_ebfe .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_ebfe .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_ebfe .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_ebfe .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_ebfe .S =PdfOutputIntentTypeX ;
};};_ebfe .OutputCondition ,_ =_ccfaa .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_ebfe .OutputConditionIdentifier ,_ =_ccfaa .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_ebfe .RegistryName ,_ =_ccfaa .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_ebfe .Info ,_ =_ccfaa .GetString ("\u0049\u006e\u0066\u006f");if _gcbd ,_fggdd :=_bcg .GetStream (_ccfaa .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_fggdd {_ebfe .ColorComponents ,_ =_bcg .GetIntVal (_gcbd .Get ("\u004e"));_cedd ,_acebg :=_bcg .DecodeStream (_gcbd );if _acebg !=nil {return _acebg ;};_ebfe .DestOutputProfile =_cedd ;};return nil ;};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_bbebc *PdfAppender )SetDocInfo (info *PdfInfo ){_bbebc ._gfb =info };

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_agdd :=&PdfOutline {_gega :_bcg .MakeIndirectObject (_bcg .MakeDict ())};_agdd ._egdfd =_agdd ;return _agdd ;};func _bebbaf (_ddadg _dg .ReadSeeker ,_ffcgdf *ReaderOpts ,_cbgg bool ,_agcb string )(*PdfReader ,error ){if _ffcgdf ==nil {_ffcgdf =NewReaderOpts ();
};_eaeb :=*_ffcgdf ;_gcbde :=&PdfReader {_bggbbg :_ddadg ,_ebfgb :map[_bcg .PdfObject ]struct{}{},_abgg :_dfgac (),_gdfa :_ffcgdf .LazyLoad ,_decgg :_ffcgdf .ComplianceMode ,_dgege :_cbgg ,_efec :&_eaeb };_bbbgc ,_efbaa :=_gdbab ("\u0072");if _efbaa !=nil {return nil ,_efbaa ;
};_efbaa =_bbd .Track (_bbbgc ,_agcb );if _efbaa !=nil {return nil ,_efbaa ;};_gcbde ._bdbga =_bbbgc ;var _ffeed *_bcg .PdfParser ;if !_gcbde ._decgg {_ffeed ,_efbaa =_bcg .NewParser (_ddadg );}else {_ffeed ,_efbaa =_bcg .NewCompliancePdfParser (_ddadg );
};if _efbaa !=nil {return nil ,_efbaa ;};_gcbde ._eadaf =_ffeed ;_cgdeb ,_efbaa :=_gcbde .IsEncrypted ();if _efbaa !=nil {return nil ,_efbaa ;};if !_cgdeb {_efbaa =_gcbde .loadStructure ();if _efbaa !=nil {return nil ,_efbaa ;};}else if _cbgg {_gagd ,_gebeg :=_gcbde .Decrypt ([]byte (_ffcgdf .Password ));
if _gebeg !=nil {return nil ,_gebeg ;};if !_gagd {return nil ,_bcd .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_gcbde ._gdcc =make (map[*PdfReader ]*PdfReader );_gcbde ._cdddg =make ([]*PdfReader ,_ffeed .GetRevisionNumber ());return _gcbde ,nil ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_eaddd *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_dbe ,_acdab :=color .(*PdfColorCalGray );if !_acdab {_dff .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_bcd .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_dbe .Val ();X :=_eaddd .WhitePoint [0]*_ab .Pow (ANorm ,_eaddd .Gamma );Y :=_eaddd .WhitePoint [1]*_ab .Pow (ANorm ,_eaddd .Gamma );
Z :=_eaddd .WhitePoint [2]*_ab .Pow (ANorm ,_eaddd .Gamma );_bffgg :=3.240479*X +-1.537150*Y +-0.498535*Z ;_eddg :=-0.969256*X +1.875992*Y +0.041556*Z ;_bafc :=0.055648*X +-0.204043*Y +1.057311*Z ;_bffgg =_ab .Min (_ab .Max (_bffgg ,0),1.0);_eddg =_ab .Min (_ab .Max (_eddg ,0),1.0);
_bafc =_ab .Min (_ab .Max (_bafc ,0),1.0);return NewPdfColorDeviceRGB (_bffgg ,_eddg ,_bafc ),nil ;};

// ToPdfObject returns the PDF representation of the pattern.
func (_cacaab *PdfPattern )ToPdfObject ()_bcg .PdfObject {_bcfec :=_cacaab .getDict ();_bcfec .Set ("\u0054\u0079\u0070\u0065",_bcg .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_bcfec .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_bcg .MakeInteger (_cacaab .PatternType ));
return _cacaab ._afcbe ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_eegc *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_gega *_bcg .PdfIndirectObject ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_cee :=NewPdfAnnotation ();_ggbe :=&PdfAnnotationWatermark {};_ggbe .PdfAnnotation =_cee ;_cee .SetContext (_ggbe );return _ggbe ;};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_ffbg :=&XObjectForm {};_gbebd :=&_bcg .PdfObjectStream {};_gbebd .PdfObjectDictionary =_bcg .MakeDict ();_ffbg ._afdee =_gbebd ;return _ffbg ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_ddcbd *Outline )Insert (index uint ,item *OutlineItem ){_ddfaa :=uint (len (_ddcbd .Entries ));if index > _ddfaa {index =_ddfaa ;};_ddcbd .Entries =append (_ddcbd .Entries [:index ],append ([]*OutlineItem {item },_ddcbd .Entries [index :]...)...);
};

// ToPdfObject implements interface PdfModel.
func (_dae *PdfAnnotationPolyLine )ToPdfObject ()_bcg .PdfObject {_dae .PdfAnnotation .ToPdfObject ();_fef :=_dae ._cbe ;_caaa :=_fef .PdfObject .(*_bcg .PdfObjectDictionary );_dae .PdfAnnotationMarkup .appendToPdfDictionary (_caaa );_caaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bcg .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_caaa .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_dae .Vertices );_caaa .SetIfNotNil ("\u004c\u0045",_dae .LE );_caaa .SetIfNotNil ("\u0042\u0053",_dae .BS );_caaa .SetIfNotNil ("\u0049\u0043",_dae .IC );_caaa .SetIfNotNil ("\u0042\u0045",_dae .BE );
_caaa .SetIfNotNil ("\u0049\u0054",_dae .IT );_caaa .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_dae .Measure );return _fef ;};func (_bace *PdfReader )newPdfAnnotationMovieFromDict (_fged *_bcg .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_ffdc :=PdfAnnotationMovie {};
_ffdc .T =_fged .Get ("\u0054");_ffdc .Movie =_fged .Get ("\u004d\u006f\u0076i\u0065");_ffdc .A =_fged .Get ("\u0041");return &_ffdc ,nil ;};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_fgda *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_fgda .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_fgda ._acc =acroForm ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_adfeb *XObjectImage )GetContainingPdfObject ()_bcg .PdfObject {return _adfeb ._adbae };func _cceeg (_bfbb _bcg .PdfObject )(*fontFile ,error ){_dff .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_bfbb );
_dcega :=&fontFile {};_bfbb =_bcg .TraceToDirectObject (_bfbb );_egbe ,_ddbde :=_bfbb .(*_bcg .PdfObjectStream );if !_ddbde {_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_bfbb );
return nil ,_bcg .ErrTypeError ;};_eagdaa :=_egbe .PdfObjectDictionary ;_deca ,_gegffb :=_bcg .DecodeStream (_egbe );if _gegffb !=nil {return nil ,_gegffb ;};_ffddd ,_ddbde :=_bcg .GetNameVal (_eagdaa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_ddbde {_dcega ._fcbgd =_ffddd ;
if _ffddd =="\u0054\u0079\u0070\u0065\u0031\u0043"{_dff .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_efdeba ,_ :=_bcg .GetIntVal (_eagdaa .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_cadfg ,_ :=_bcg .GetIntVal (_eagdaa .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _efdeba > len (_deca ){_efdeba =len (_deca );
};if _efdeba +_cadfg > len (_deca ){_cadfg =len (_deca )-_efdeba ;};_dbgff :=_deca [:_efdeba ];var _gcaa []byte ;if _cadfg > 0{_gcaa =_deca [_efdeba :_efdeba +_cadfg ];};if _efdeba > 0&&_cadfg > 0{_dfcc :=_dcega .loadFromSegments (_dbgff ,_gcaa );if _dfcc !=nil {return nil ,_dfcc ;
};};return _dcega ,nil ;};func _edfad (_efdg *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_efdg }};

// ToPdfObject implements interface PdfModel.
func (_edga *PdfActionSubmitForm )ToPdfObject ()_bcg .PdfObject {_edga .PdfAction .ToPdfObject ();_eda :=_edga ._aag ;_agfa :=_eda .PdfObject .(*_bcg .PdfObjectDictionary );_agfa .SetIfNotNil ("\u0053",_bcg .MakeName (string (ActionTypeSubmitForm )));if _edga .F !=nil {_agfa .Set ("\u0046",_edga .F .ToPdfObject ());
};_agfa .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_edga .Fields );_agfa .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_edga .Flags );return _eda ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_ccce *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _bcd .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_gaab :=field .V ;if _gaab ==nil {return _bcd .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_ccgbb :=pageNum -1;
if _ccgbb < 0||_ccgbb > len (_ccce ._dbc )-1{return _g .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_bde :=_ccce .Reader .PageList [_ccgbb ];field .P =_bde .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_bcg .MakeString (_g .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));
};_bde .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _ccce ._acc ==_ccce ._cgdd .AcroForm {_ccce ._acc =_ccce .Reader .AcroForm ;};_aegg :=_ccce ._acc ;if _aegg ==nil {_aegg =NewPdfAcroForm ();};_aegg .SigFlags =_bcg .MakeInteger (3);_ceab :=append (_aegg .AllFields (),field .PdfField );
_aegg .Fields =&_ceab ;_ccce .ReplaceAcroForm (_aegg );_ccce .UpdatePage (_bde );_ccce ._dbc [_ccgbb ]=_bde ;if _ ,_gcdd :=field .V .GetDocMDPPermission ();_gcdd {_ccce ._face =NewPermissions (field .V );};return nil ;};func (_cefe *LTV )generateVRIKey (_gbecc *PdfSignature )(string ,error ){_bdff ,_bbdfbd :=_bccc (_gbecc .Contents .Bytes ());
if _bbdfbd !=nil {return "",_bbdfbd ;};return _ce .ToUpper (_aa .EncodeToString (_bdff )),nil ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _fe .Permissions ;Algorithm EncryptionAlgorithm ;};

// BaseFont returns the font's "BaseFont" field.
func (_bcdfbc *PdfFont )BaseFont ()string {return _bcdfbc .baseFields ()._aafc };func (_ffgd *PdfReader )newPdfAnnotationFreeTextFromDict (_faff *_bcg .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_aee :=PdfAnnotationFreeText {};_dbgb ,_fec :=_ffgd .newPdfAnnotationMarkupFromDict (_faff );
if _fec !=nil {return nil ,_fec ;};_aee .PdfAnnotationMarkup =_dbgb ;_aee .DA =_faff .Get ("\u0044\u0041");_aee .Q =_faff .Get ("\u0051");_aee .RC =_faff .Get ("\u0052\u0043");_aee .DS =_faff .Get ("\u0044\u0053");_aee .CL =_faff .Get ("\u0043\u004c");
_aee .IT =_faff .Get ("\u0049\u0054");_aee .BE =_faff .Get ("\u0042\u0045");_aee .RD =_faff .Get ("\u0052\u0044");_aee .BS =_faff .Get ("\u0042\u0053");_aee .LE =_faff .Get ("\u004c\u0045");return &_aee ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_acg *PdfActionTrans )ToPdfObject ()_bcg .PdfObject {_acg .PdfAction .ToPdfObject ();_abf :=_acg ._aag ;_gac :=_abf .PdfObject .(*_bcg .PdfObjectDictionary );_gac .SetIfNotNil ("\u0053",_bcg .MakeName (string (ActionTypeTrans )));_gac .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_acg .Trans );
return _abf ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_ebgb *pdfFontSimple )ToPdfObject ()_bcg .PdfObject {if _ebgb ._abefg ==nil {_ebgb ._abefg =&_bcg .PdfIndirectObject {};};_bbeg :=_ebgb .baseFields ().asPdfObjectDictionary ("");_ebgb ._abefg .PdfObject =_bbeg ;if _ebgb .FirstChar !=nil {_bbeg .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_ebgb .FirstChar );
};if _ebgb .LastChar !=nil {_bbeg .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_ebgb .LastChar );};if _ebgb .Widths !=nil {_bbeg .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_ebgb .Widths );};if _ebgb .Encoding !=nil {_bbeg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ebgb .Encoding );
}else if _ebgb ._cbdg !=nil {_cdcfb :=_ebgb ._cbdg .ToPdfObject ();if _cdcfb !=nil {_bbeg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cdcfb );};};return _ebgb ._abefg ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_ccdgb *PdfFont )ToPdfObject ()_bcg .PdfObject {if _ccdgb ._aabbg ==nil {_dff .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _bcg .MakeNull ();
};return _ccdgb ._aabbg .ToPdfObject ();};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_bcg .PdfObjectDictionary )(*PdfPageResources ,error ){_dbfbe :=NewPdfPageResources ();if _fddec :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_fddec !=nil {_dbfbe .ExtGState =_fddec ;};if _ffegf :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_ffegf !=nil &&!_bcg .IsNullObject (_ffegf ){_dbfbe .ColorSpace =_ffegf ;};if _gbbb :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_gbbb !=nil {_dbfbe .Pattern =_gbbb ;};if _egefce :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_egefce !=nil {_dbfbe .Shading =_egefce ;
};if _efcg :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_efcg !=nil {_dbfbe .XObject =_efcg ;};if _caccg :=_bcg .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_caccg !=nil {_dbfbe .Font =_caccg ;};if _ebaag :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_ebaag !=nil {_dbfbe .ProcSet =_ebaag ;};if _baggg :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_baggg !=nil {_dbfbe .Properties =_baggg ;};return _dbfbe ,nil ;};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_aab :=NewPdfAction ();_aeb :=&PdfActionGoToR {};_aeb .PdfAction =_aab ;_aab .SetContext (_aeb );return _aeb ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_dgbga :=PdfPage {};_dgbga ._dabee =_bcg .MakeDict ();_dgbga .Resources =NewPdfPageResources ();_ccgdd :=_bcg .PdfIndirectObject {};_ccgdd .PdfObject =_dgbga ._dabee ;_dgbga ._ddfd =&_ccgdd ;return &_dgbga ;};type pdfFontSimple struct{fontCommon ;
_abefg *_bcg .PdfIndirectObject ;_ffgef map[_bf .CharCode ]float64 ;_cbdg _bf .TextEncoder ;_eaaafb _bf .TextEncoder ;_gdfg *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _bcg .PdfObject ;LastChar _bcg .PdfObject ;Widths _bcg .PdfObject ;Encoding _bcg .PdfObject ;_fdbcdc *_dgb .RuneCharSafeMap ;};

// G returns the value of the green component of the color.
func (_agbf *PdfColorDeviceRGB )G ()float64 {return _agbf [1]};func (_cgega *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_effb *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_bcd .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afdd :=vals [0];if _afdd < 0.0||_afdd > 1.0{_dff .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_afdd );
return nil ,ErrColorOutOfRange ;};_gbgf :=NewPdfColorCalGray (_afdd );return _gbgf ,nil ;};func (_ecbd *LTV )buildCertChain (_bagc ,_gggdb []*_ag .Certificate )([]*_ag .Certificate ,map[string ]*_ag .Certificate ,error ){_cccbb :=map[string ]*_ag .Certificate {};
for _ ,_ddeg :=range _bagc {_cccbb [_ddeg .Subject .CommonName ]=_ddeg ;};_ccea :=_bagc ;for _ ,_eggb :=range _gggdb {_bbedf :=_eggb .Subject .CommonName ;if _ ,_ddcg :=_cccbb [_bbedf ];_ddcg {continue ;};_cccbb [_bbedf ]=_eggb ;_ccea =append (_ccea ,_eggb );
};if len (_ccea )==0{return nil ,nil ,ErrSignNoCertificates ;};var _gddegf error ;for _bcfac :=_ccea [0];_bcfac !=nil &&!_ecbd .CertClient .IsCA (_bcfac );{_eebc ,_ddfced :=_cccbb [_bcfac .Issuer .CommonName ];if !_ddfced {if _eebc ,_gddegf =_ecbd .CertClient .GetIssuer (_bcfac );
_gddegf !=nil {_dff .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_gddegf );
break ;};_cccbb [_bcfac .Issuer .CommonName ]=_eebc ;_ccea =append (_ccea ,_eebc );};_bcfac =_eebc ;};return _ccea ,_cccbb ,nil ;};func (_ggfcf *PdfShading )getShadingDict ()(*_bcg .PdfObjectDictionary ,error ){_bfgbc :=_ggfcf ._cdefff ;if _abdbf ,_cdede :=_bfgbc .(*_bcg .PdfIndirectObject );
_cdede {_adddb ,_bfaacc :=_abdbf .PdfObject .(*_bcg .PdfObjectDictionary );if !_bfaacc {return nil ,_bcg .ErrTypeError ;};return _adddb ,nil ;}else if _gecc ,_cagfc :=_bfgbc .(*_bcg .PdfObjectStream );_cagfc {return _gecc .PdfObjectDictionary ,nil ;}else if _acfgf ,_feggf :=_bfgbc .(*_bcg .PdfObjectDictionary );
_feggf {return _acfgf ,nil ;}else {_dff .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_bcg .ErrTypeError ;
};};

// GetNumPages returns the number of pages in the document.
func (_ddca *PdfReader )GetNumPages ()(int ,error ){if _ddca ._eadaf .GetCrypter ()!=nil &&!_ddca ._eadaf .IsAuthenticated (){return 0,_g .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_ddca ._fgebbb ),nil ;};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_aabc *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};func (_ecf *PdfReader )newPdfActionURIFromDict (_agff *_bcg .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_agff .Get ("\u0055\u0052\u0049"),IsMap :_agff .Get ("\u0049\u0073\u004da\u0070")},nil ;
};func _cgbdd ()string {_dgea .Lock ();defer _dgea .Unlock ();return _fgebbbd };

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_ebfac *_bcg .PdfIndirectObject ;};func _feeag (_fbcgg *_bcg .PdfObjectDictionary )(*PdfShadingType6 ,error ){_decaa :=PdfShadingType6 {};_gfgg :=_fbcgg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _gfgg ==nil {_dff .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_cggeb ,_fgbg :=_gfgg .(*_bcg .PdfObjectInteger );if !_fgbg {_dff .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gfgg );
return nil ,_bcg .ErrTypeError ;};_decaa .BitsPerCoordinate =_cggeb ;_gfgg =_fbcgg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _gfgg ==nil {_dff .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_cggeb ,_fgbg =_gfgg .(*_bcg .PdfObjectInteger );if !_fgbg {_dff .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_gfgg );
return nil ,_bcg .ErrTypeError ;};_decaa .BitsPerComponent =_cggeb ;_gfgg =_fbcgg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _gfgg ==nil {_dff .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cggeb ,_fgbg =_gfgg .(*_bcg .PdfObjectInteger );if !_fgbg {_dff .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_gfgg );
return nil ,_bcg .ErrTypeError ;};_decaa .BitsPerComponent =_cggeb ;_gfgg =_fbcgg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _gfgg ==nil {_dff .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_feedd ,_fgbg :=_gfgg .(*_bcg .PdfObjectArray );if !_fgbg {_dff .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gfgg );
return nil ,_bcg .ErrTypeError ;};_decaa .Decode =_feedd ;if _dggaa :=_fbcgg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_dggaa !=nil {_decaa .Function =[]PdfFunction {};if _fefgd ,_caaaf :=_dggaa .(*_bcg .PdfObjectArray );_caaaf {for _ ,_fdbbg :=range _fefgd .Elements (){_gcdc ,_cbdcb :=_bdgfe (_fdbbg );
if _cbdcb !=nil {_dff .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cbdcb );return nil ,_cbdcb ;};_decaa .Function =append (_decaa .Function ,_gcdc );
};}else {_cgdb ,_dccage :=_bdgfe (_dggaa );if _dccage !=nil {_dff .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dccage );return nil ,_dccage ;
};_decaa .Function =append (_decaa .Function ,_cgdb );};};return &_decaa ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cbeb *PdfSignature )ToPdfObject ()_bcg .PdfObject {_accef :=_cbeb ._feead ;var _efeeg *_bcg .PdfObjectDictionary ;if _dfgfa ,_cbfdc :=_accef .PdfObject .(*pdfSignDictionary );_cbfdc {_efeeg =_dfgfa .PdfObjectDictionary ;}else {_efeeg =_accef .PdfObject .(*_bcg .PdfObjectDictionary );
};_efeeg .SetIfNotNil ("\u0054\u0079\u0070\u0065",_cbeb .Type );_efeeg .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_cbeb .Filter );_efeeg .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_cbeb .SubFilter );_efeeg .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_cbeb .ByteRange );
_efeeg .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cbeb .Contents );_efeeg .SetIfNotNil ("\u0043\u0065\u0072\u0074",_cbeb .Cert );_efeeg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cbeb .Name );_efeeg .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_cbeb .Reason );
_efeeg .SetIfNotNil ("\u004d",_cbeb .M );_efeeg .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_cbeb .Reference );_efeeg .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_cbeb .Changes );_efeeg .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_cbeb .ContactInfo );
return _accef ;};

// HasFontByName checks if has font resource by name.
func (_babdc *PdfPage )HasFontByName (name _bcg .PdfObjectName )bool {_cfffe ,_aebg :=_babdc .Resources .Font .(*_bcg .PdfObjectDictionary );if !_aebg {return false ;};if _gbab :=_cfffe .Get (name );_gbab !=nil {return true ;};return false ;};

// Write writes out the PDF.
func (_cecda *PdfWriter )Write (writer _dg .Writer )error {_dff .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_ggecd :=_cecda .checkLicense ();if _ggecd !=nil {return _ggecd ;};if _ggecd =_cecda .writeOutlines ();_ggecd !=nil {return _ggecd ;};
if _ggecd =_cecda .writeAcroFormFields ();_ggecd !=nil {return _ggecd ;};_cecda .checkPendingObjects ();if _ggecd =_cecda .writeOutputIntents ();_ggecd !=nil {return _ggecd ;};_cecda .setCatalogVersion ();_cecda .copyObjects ();if _ggecd =_cecda .optimize ();
_ggecd !=nil {return _ggecd ;};if _ggecd =_cecda .optimizeDocument ();_ggecd !=nil {return _ggecd ;};var _bcfge _d .Hash ;if _cecda ._ffac {_bcfge =_de .New ();writer =_dg .MultiWriter (_bcfge ,writer );};_cecda .setWriter (writer );_ccae :=_cecda .checkCrossReferenceStream ();
_gafeg ,_ccae :=_cecda .mapObjectStreams (_ccae );_cecda .adjustXRefAffectedVersion (_ccae );_cecda .writeDocumentVersion ();_cecda .updateObjectNumbers ();_cecda .writeObjects ();if _ggecd =_cecda .writeObjectsInStreams (_gafeg );_ggecd !=nil {return _ggecd ;
};_efffe :=_cecda ._dacb ;var _ceeed int ;for _bdegc :=range _cecda ._caaea {if _bdegc > _ceeed {_ceeed =_bdegc ;};};if _cecda ._ffac {if _ggecd =_cecda .setHashIDs (_bcfge );_ggecd !=nil {return _ggecd ;};};if _ccae {if _ggecd =_cecda .writeXRefStreams (_ceeed ,_efffe );
_ggecd !=nil {return _ggecd ;};}else {_cecda .writeTrailer (_ceeed );};_cecda .makeOffSetReference (_efffe );if _ggecd =_cecda .flushWriter ();_ggecd !=nil {return _ggecd ;};return nil ;};func (_ecgcd *PdfReader )buildOutlineTree (_dgdce _bcg .PdfObject ,_faaee *PdfOutlineTreeNode ,_cfdae *PdfOutlineTreeNode ,_bcdbb map[_bcg .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _bcdbb ==nil {_bcdbb =map[_bcg .PdfObject ]struct{}{};
};_bcdbb [_dgdce ]=struct{}{};_debd ,_agce :=_dgdce .(*_bcg .PdfIndirectObject );if !_agce {return nil ,nil ,_g .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_dgdce );
};_agaac ,_faeg :=_debd .PdfObject .(*_bcg .PdfObjectDictionary );if !_faeg {return nil ,nil ,_bcd .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dff .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_agaac ,_debd ,_debd );
if _eafba :=_agaac .Get ("\u0054\u0069\u0074l\u0065");_eafba !=nil {_aebbe ,_ddage :=_ecgcd .newPdfOutlineItemFromIndirectObject (_debd );if _ddage !=nil {return nil ,nil ,_ddage ;};_aebbe .Parent =_faaee ;_aebbe .Prev =_cfdae ;_cbcea :=_bcg .ResolveReference (_agaac .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_edec :=_bcdbb [_cbcea ];_cbcea !=nil &&_cbcea !=_debd &&!_edec {if !_bcg .IsNullObject (_cbcea ){_gcgd ,_ceegb ,_eegab :=_ecgcd .buildOutlineTree (_cbcea ,&_aebbe .PdfOutlineTreeNode ,nil ,_bcdbb );if _eegab !=nil {_dff .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_eegab );
}else {_aebbe .First =_gcgd ;_aebbe .Last =_ceegb ;};};};_ceagc :=_bcg .ResolveReference (_agaac .Get ("\u004e\u0065\u0078\u0074"));if _ ,_ggfbe :=_bcdbb [_ceagc ];_ceagc !=nil &&_ceagc !=_debd &&!_ggfbe {if !_bcg .IsNullObject (_ceagc ){_efbcc ,_aafgc ,_dfeea :=_ecgcd .buildOutlineTree (_ceagc ,_faaee ,&_aebbe .PdfOutlineTreeNode ,_bcdbb );
if _dfeea !=nil {_dff .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_dfeea );
}else {_aebbe .Next =_efbcc ;return &_aebbe .PdfOutlineTreeNode ,_aafgc ,nil ;};};};return &_aebbe .PdfOutlineTreeNode ,&_aebbe .PdfOutlineTreeNode ,nil ;};_dggga ,_cbfe :=_ebefa (_debd );if _cbfe !=nil {return nil ,nil ,_cbfe ;};_dggga .Parent =_faaee ;
if _fgec :=_agaac .Get ("\u0046\u0069\u0072s\u0074");_fgec !=nil {_fgec =_bcg .ResolveReference (_fgec );if _ ,_gabb :=_bcdbb [_fgec ];_fgec !=nil &&_fgec !=_debd &&!_gabb {_gaddd :=_bcg .TraceToDirectObject (_fgec );if _ ,_fefcf :=_gaddd .(*_bcg .PdfObjectNull );
!_fefcf &&_gaddd !=nil {_gdce ,_bdea ,_cgaeg :=_ecgcd .buildOutlineTree (_fgec ,&_dggga .PdfOutlineTreeNode ,nil ,_bcdbb );if _cgaeg !=nil {_dff .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_cgaeg );
}else {_dggga .First =_gdce ;_dggga .Last =_bdea ;};};};};return &_dggga .PdfOutlineTreeNode ,&_dggga .PdfOutlineTreeNode ,nil ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _bcg .PdfObject ;ColorSpace _bcg .PdfObject ;Pattern _bcg .PdfObject ;Shading _bcg .PdfObject ;XObject _bcg .PdfObject ;Font _bcg .PdfObject ;ProcSet _bcg .PdfObject ;Properties _bcg .PdfObject ;_bgbd *_bcg .PdfObjectDictionary ;
_eedf *PdfPageResourcesColorspaces ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_bcg .PdfObjectInteger ;BitsPerComponent *_bcg .PdfObjectInteger ;BitsPerFlag *_bcg .PdfObjectInteger ;Decode *_bcg .PdfObjectArray ;Function []PdfFunction ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_gedba *PdfPageResources )GetColorspaceByName (keyName _bcg .PdfObjectName )(PdfColorspace ,bool ){_bggag ,_ccggec :=_gedba .GetColorspaces ();if _ccggec !=nil {_dff .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_ccggec );
return nil ,false ;};if _bggag ==nil {return nil ,false ;};_gageb ,_cbdbf :=_bggag .Colorspaces [string (keyName )];if !_cbdbf {return nil ,false ;};return _gageb ,true ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_fbcdg *PdfFont )SubsetRegistered ()error {switch _cffd :=_fbcdg ._aabbg .(type ){case *pdfFontType0 :_dafef :=_cffd .subsetRegistered ();if _dafef !=nil {_dff .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_dafef );
return _dafef ;};if _cffd ._fdbcd !=nil {if _cffd ._eegb !=nil {_cffd ._eegb .ToPdfObject ();};_cffd .ToPdfObject ();};default:_dff .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_cffd );
};return nil ;};func _adfdc (_bdgf string )map[string ]string {_gaec :=_egaac .Split (_bdgf ,-1);_abaca :=map[string ]string {};for _ ,_aagce :=range _gaec {_gddeb :=_fgdf .FindStringSubmatch (_aagce );if _gddeb ==nil {continue ;};_cbfgd ,_gaag :=_gddeb [1],_gddeb [2];
_abaca [_cbfgd ]=_gaag ;};return _abaca ;};

// GetXObjectByName gets XObject by name.
func (_acffef *PdfPage )GetXObjectByName (name _bcg .PdfObjectName )(_bcg .PdfObject ,bool ){_adfb ,_ebdg :=_acffef .Resources .XObject .(*_bcg .PdfObjectDictionary );if !_ebdg {return nil ,false ;};if _fgadb :=_adfb .Get (name );_fgadb !=nil {return _fgadb ,true ;
};return nil ,false ;};func (_gccb *PdfReader )newPdfAnnotationSquareFromDict (_ffef *_bcg .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_baf :=PdfAnnotationSquare {};_edbg ,_ccf :=_gccb .newPdfAnnotationMarkupFromDict (_ffef );if _ccf !=nil {return nil ,_ccf ;
};_baf .PdfAnnotationMarkup =_edbg ;_baf .BS =_ffef .Get ("\u0042\u0053");_baf .IC =_ffef .Get ("\u0049\u0043");_baf .BE =_ffef .Get ("\u0042\u0045");_baf .RD =_ffef .Get ("\u0052\u0044");return &_baf ,nil ;};func (_dfab *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_eaafb _dg .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_bgdgf _af .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_egdc _af .Image )(*Image ,error );

// Compress an image.
Compress (_eeagc *Image ,_fgeb int64 )(*Image ,error );};

// R returns the value of the red component of the color.
func (_dde *PdfColorDeviceRGB )R ()float64 {return _dde [0]};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_ceaga *_bcg .PdfIndirectObject ;};func _eddc (_bcef *_bcg .PdfObjectDictionary )*VRI {_cgac ,_ :=_bcg .GetString (_bcef .Get ("\u0054\u0055"));_ffbe ,_ :=_bcg .GetString (_bcef .Get ("\u0054\u0053"));
return &VRI {Cert :_ceaa (_bcef .Get ("\u0043\u0065\u0072\u0074")),OCSP :_ceaa (_bcef .Get ("\u004f\u0043\u0053\u0050")),CRL :_ceaa (_bcef .Get ("\u0043\u0052\u004c")),TU :_cgac ,TS :_ffbe };};func (_gaccff *PdfWriter )writeObjects (){_dff .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_gaccff ._gbadec ));
_gaccff ._caaea =make (map[int ]crossReference );_gaccff ._caaea [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _gaccff ._afaff .ObjectMap !=nil {for _agaef ,_cgcc :=range _gaccff ._afaff .ObjectMap {if _agaef ==0{continue ;};if _cgcc .XType ==_bcg .XrefTypeObjectStream {_fcaege :=crossReference {Type :2,ObjectNumber :_cgcc .OsObjNumber ,Index :_cgcc .OsObjIndex };
_gaccff ._caaea [_agaef ]=_fcaege ;};if _cgcc .XType ==_bcg .XrefTypeTableEntry {_aefac :=crossReference {Type :1,ObjectNumber :_cgcc .ObjectNumber ,Offset :_cgcc .Offset };_gaccff ._caaea [_agaef ]=_aefac ;};};};};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _bcg .StreamEncoder )(*XObjectImage ,error ){_gaddfg :=NewXObjectImage ();return UpdateXObjectImageFromImage (_gaddfg ,img ,cs ,encoder );};func (_cab *PdfAnnotationMarkup )appendToPdfDictionary (_degg *_bcg .PdfObjectDictionary ){_degg .SetIfNotNil ("\u0054",_cab .T );
if _cab .Popup !=nil {_degg .Set ("\u0050\u006f\u0070u\u0070",_cab .Popup .ToPdfObject ());};_degg .SetIfNotNil ("\u0043\u0041",_cab .CA );_degg .SetIfNotNil ("\u0052\u0043",_cab .RC );_degg .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_cab .CreationDate );
_degg .SetIfNotNil ("\u0049\u0052\u0054",_cab .IRT );_degg .SetIfNotNil ("\u0053\u0075\u0062\u006a",_cab .Subj );_degg .SetIfNotNil ("\u0052\u0054",_cab .RT );_degg .SetIfNotNil ("\u0049\u0054",_cab .IT );_degg .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_cab .ExData );
};func _aca (_gdga _bcg .PdfObject )(*PdfColorspaceCalGray ,error ){_aeae :=NewPdfColorspaceCalGray ();if _edfcc ,_gaeb :=_gdga .(*_bcg .PdfIndirectObject );_gaeb {_aeae ._dfce =_edfcc ;};_gdga =_bcg .TraceToDirectObject (_gdga );_ecfgd ,_cedee :=_gdga .(*_bcg .PdfObjectArray );
if !_cedee {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ecfgd .Len ()!=2{return nil ,_g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_gdga =_bcg .TraceToDirectObject (_ecfgd .Get (0));_gedc ,_cedee :=_gdga .(*_bcg .PdfObjectName );if !_cedee {return nil ,_g .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};if *_gedc !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_g .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_gdga =_bcg .TraceToDirectObject (_ecfgd .Get (1));
_caag ,_cedee :=_gdga .(*_bcg .PdfObjectDictionary );if !_cedee {return nil ,_g .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_gdga =_caag .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_gdga =_bcg .TraceToDirectObject (_gdga );_cdfec ,_cedee :=_gdga .(*_bcg .PdfObjectArray );if !_cedee {return nil ,_g .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _cdfec .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_gdc ,_gefg :=_cdfec .GetAsFloat64Slice ();
if _gefg !=nil {return nil ,_gefg ;};_aeae .WhitePoint =_gdc ;_gdga =_caag .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gdga !=nil {_gdga =_bcg .TraceToDirectObject (_gdga );_cadc ,_fbbbe :=_gdga .(*_bcg .PdfObjectArray );if !_fbbbe {return nil ,_g .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");
};if _cadc .Len ()!=3{return nil ,_g .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_cgdf ,_dfgcb :=_cadc .GetAsFloat64Slice ();
if _dfgcb !=nil {return nil ,_dfgcb ;};_aeae .BlackPoint =_cgdf ;};_gdga =_caag .Get ("\u0047\u0061\u006dm\u0061");if _gdga !=nil {_gdga =_bcg .TraceToDirectObject (_gdga );_bgeb ,_bgfa :=_bcg .GetNumberAsFloat (_gdga );if _bgfa !=nil {return nil ,_g .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");
};_aeae .Gamma =_bgeb ;};return _aeae ,nil ;};