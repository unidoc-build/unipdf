//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_bg "bufio";_ga "bytes";_ed "crypto/sha1";_g "crypto/x509";_cc "encoding/binary";_cb "encoding/hex";_fb "errors";_e "fmt";_fbd "github.com/unidoc/pkcs7";_fa "github.com/unidoc/unipdf/v3/common";_ccg "github.com/unidoc/unipdf/v3/common/license";_gcb "github.com/unidoc/unipdf/v3/core";_fc "github.com/unidoc/unipdf/v3/core/security";_bde "github.com/unidoc/unipdf/v3/core/security/crypt";_ad "github.com/unidoc/unipdf/v3/internal/cmap";_efe "github.com/unidoc/unipdf/v3/internal/imageutil";_cg "github.com/unidoc/unipdf/v3/internal/sampling";_dee "github.com/unidoc/unipdf/v3/internal/textencoding";_aa "github.com/unidoc/unipdf/v3/model/internal/fonts";_ge "github.com/unidoc/unipdf/v3/model/sigutil";_ef "github.com/unidoc/unipdf/v3/ps";_ccb "github.com/unidoc/unitype";_egg "golang.org/x/xerrors";_a "image";_bd "image/color";_ "image/gif";_ "image/png";_dfb "io";_df "io/ioutil";_f "math";_ege "math/rand";_gc "os";_ba "regexp";_de "sort";_cf "strconv";_gb "strings";_eb "sync";_c "time";_eg "unicode";_bad "unicode/utf8";);

// G returns the value of the green component of the color.
func (_fgfb *PdfColorDeviceRGB )G ()float64 {return _fgfb [1]};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _gcb .PdfObject )(*PdfFilespec ,error ){_cebdc :=&PdfFilespec {};var _ffgb *_gcb .PdfObjectDictionary ;if _fgbge ,_abdb :=_gcb .GetIndirect (obj );_abdb {_cebdc ._afgd =_fgbge ;_aagda ,_cefd :=_gcb .GetDict (_fgbge .PdfObject );if !_cefd {_fa .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_gcb .ErrTypeError ;};_ffgb =_aagda ;}else if _efbdb ,_eddbb :=_gcb .GetDict (obj );_eddbb {_cebdc ._afgd =_efbdb ;_ffgb =_efbdb ;}else {_fa .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_gcb .ErrTypeError ;};if _ffgb ==nil {_fa .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_fb .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _gbdfa :=_ffgb .Get ("\u0054\u0079\u0070\u0065");_gbdfa !=nil {_ffba ,_cca :=_gbdfa .(*_gcb .PdfObjectName );if !_cca {_fa .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gbdfa );}else {if *_ffba !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_fa .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_ffba );};};};if _dace :=_ffgb .Get ("\u0046\u0053");_dace !=nil {_cebdc .FS =_dace ;};if _aaea :=_ffgb .Get ("\u0046");_aaea !=nil {_cebdc .F =_aaea ;};if _dfbae :=_ffgb .Get ("\u0055\u0046");_dfbae !=nil {_cebdc .UF =_dfbae ;};if _bdbaf :=_ffgb .Get ("\u0044\u004f\u0053");_bdbaf !=nil {_cebdc .DOS =_bdbaf ;};if _cdbfg :=_ffgb .Get ("\u004d\u0061\u0063");_cdbfg !=nil {_cebdc .Mac =_cdbfg ;};if _cbffe :=_ffgb .Get ("\u0055\u006e\u0069\u0078");_cbffe !=nil {_cebdc .Unix =_cbffe ;};if _bbfc :=_ffgb .Get ("\u0049\u0044");_bbfc !=nil {_cebdc .ID =_bbfc ;};if _ecgc :=_ffgb .Get ("\u0056");_ecgc !=nil {_cebdc .V =_ecgc ;};if _cefg :=_ffgb .Get ("\u0045\u0046");_cefg !=nil {_cebdc .EF =_cefg ;};if _fdgb :=_ffgb .Get ("\u0052\u0046");_fdgb !=nil {_cebdc .RF =_fdgb ;};if _gdbfg :=_ffgb .Get ("\u0044\u0065\u0073\u0063");_gdbfg !=nil {_cebdc .Desc =_gdbfg ;};if _babg :=_ffgb .Get ("\u0043\u0049");_babg !=nil {_cebdc .CI =_babg ;};return _cebdc ,nil ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// ToPdfObject returns the PDF representation of the colorspace.
func (_adbc *PdfColorspaceDeviceGray )ToPdfObject ()_gcb .PdfObject {return _gcb .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_ebde *PdfPageResources )GetColorspaceByName (keyName _gcb .PdfObjectName )(PdfColorspace ,bool ){_gebf ,_caedg :=_ebde .GetColorspaces ();if _caedg !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_caedg );return nil ,false ;};if _gebf ==nil {return nil ,false ;};_bbbfd ,_afdgb :=_gebf .Colorspaces [string (keyName )];if !_afdgb {return nil ,false ;};return _bbbfd ,true ;};

// ToPdfObject implements interface PdfModel.
func (_eac *PdfActionSound )ToPdfObject ()_gcb .PdfObject {_eac .PdfAction .ToPdfObject ();_geb :=_eac ._gg ;_geeg :=_geb .PdfObject .(*_gcb .PdfObjectDictionary );_geeg .SetIfNotNil ("\u0053",_gcb .MakeName (string (ActionTypeSound )));_geeg .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_eac .Sound );_geeg .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_eac .Volume );_geeg .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_eac .Synchronous );_geeg .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_eac .Repeat );_geeg .SetIfNotNil ("\u004d\u0069\u0078",_eac .Mix );return _geb ;};

// Items returns all children outline items.
func (_gdgbg *OutlineItem )Items ()[]*OutlineItem {return _gdgbg .Entries };

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_gdadd *PdfOutlineTreeNode )GetContext ()PdfModel {if _fddga ,_dfff :=_gdadd ._cgfc .(*PdfOutline );_dfff {return _fddga ;};if _cgadec ,_dddea :=_gdadd ._cgfc .(*PdfOutlineItem );_dddea {return _cgadec ;};_fa .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");return nil ;};

// ToPdfObject implements interface PdfModel.
func (_ca *PdfAction )ToPdfObject ()_gcb .PdfObject {_gf :=_ca ._gg ;_cd :=_gf .PdfObject .(*_gcb .PdfObjectDictionary );_cd .Clear ();_cd .Set ("\u0054\u0079\u0070\u0065",_gcb .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_cd .SetIfNotNil ("\u0053",_ca .S );_cd .SetIfNotNil ("\u004e\u0065\u0078\u0074",_ca .Next );return _gf ;};

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_beacb :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_beacb ;};

// ToPdfObject converts rectangle to a PDF object.
func (_cfbce *PdfRectangle )ToPdfObject ()_gcb .PdfObject {return _gcb .MakeArray (_gcb .MakeFloat (_cfbce .Llx ),_gcb .MakeFloat (_cfbce .Lly ),_gcb .MakeFloat (_cfbce .Urx ),_gcb .MakeFloat (_cfbce .Ury ));};func (_bedfd *LTV )enable (_beefb ,_fedaf []*_g .Certificate ,_fbfdfd string )error {_ffacd ,_gdcc ,_ggeg :=_bedfd .buildCertChain (_beefb ,_fedaf );if _ggeg !=nil {return _ggeg ;};_baaacb ,_ggeg :=_bedfd .getCerts (_ffacd );if _ggeg !=nil {return _ggeg ;};_cfgfa ,_ggeg :=_bedfd .getOCSPs (_ffacd ,_gdcc );if _ggeg !=nil {return _ggeg ;};_gebbd ,_ggeg :=_bedfd .getCRLs (_ffacd );if _ggeg !=nil {return _ggeg ;};_cgef :=_bedfd ._gcbbb ;_cffg ,_ggeg :=_cgef .addCerts (_baaacb );if _ggeg !=nil {return _ggeg ;};_ceed ,_ggeg :=_cgef .addOCSPs (_cfgfa );if _ggeg !=nil {return _ggeg ;};_bgdae ,_ggeg :=_cgef .addCRLs (_gebbd );if _ggeg !=nil {return _ggeg ;};if _fbfdfd !=""{_cgef .VRI [_fbfdfd ]=&VRI {Cert :_cffg ,OCSP :_ceed ,CRL :_bgdae };};_bedfd ._abcbc .SetDSS (_cgef );return nil ;};func (_bfedg *PdfReader )loadStructure ()error {if _bfedg ._efeb .GetCrypter ()!=nil &&!_bfedg ._efeb .IsAuthenticated (){return _e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_bcbb :=_bfedg ._efeb .GetTrailer ();if _bcbb ==nil {return _e .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_ccaa ,_bgcff :=_bcbb .Get ("\u0052\u006f\u006f\u0074").(*_gcb .PdfObjectReference );if !_bgcff {return _e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_bcbb );};_dabgd ,_egaab :=_bfedg ._efeb .LookupByReference (*_ccaa );if _egaab !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_egaab );return _egaab ;};_dcafb ,_bgcff :=_dabgd .(*_gcb .PdfIndirectObject );if !_bgcff {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_dabgd ,*_bcbb );return _fb .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_eafbde ,_bgcff :=(*_dcafb ).PdfObject .(*_gcb .PdfObjectDictionary );if !_bgcff {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_dcafb .PdfObject );return _fb .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_fa .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_eafbde );_debg ,_bgcff :=_eafbde .Get ("\u0050\u0061\u0067e\u0073").(*_gcb .PdfObjectReference );if !_bgcff {return _fb .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_fagac ,_egaab :=_bfedg ._efeb .LookupByReference (*_debg );if _egaab !=nil {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _egaab ;};_dgbdd ,_bgcff :=_fagac .(*_gcb .PdfIndirectObject );if !_bgcff {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");_fa .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_dgbdd );return _fb .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_baaaf ,_bgcff :=_dgbdd .PdfObject .(*_gcb .PdfObjectDictionary );if !_bgcff {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_dgbdd );return _fb .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_efcc ,_bgcff :=_gcb .GetInt (_baaaf .Get ("\u0043\u006f\u0075n\u0074"));if !_bgcff {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return _fb .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_bgcff =_gcb .GetName (_baaaf .Get ("\u0054\u0079\u0070\u0065"));!_bgcff {_fa .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");_baaaf .Set ("\u0054\u0079\u0070\u0065",_gcb .MakeName ("\u0050\u0061\u0067e\u0073"));};_bfedg ._acgaa =_ccaa ;_bfedg ._bgee =_eafbde ;_bfedg ._eccdg =_baaaf ;_bfedg ._fgddg =_dgbdd ;_bfedg ._gagda =int (*_efcc );_bfedg ._afcae =[]*_gcb .PdfIndirectObject {};_bccef :=map[_gcb .PdfObject ]struct{}{};_egaab =_bfedg .buildPageList (_dgbdd ,nil ,_bccef );if _egaab !=nil {return _egaab ;};_fa .Log .Trace ("\u002d\u002d\u002d");_fa .Log .Trace ("\u0054\u004f\u0043");_fa .Log .Trace ("\u0050\u0061\u0067e\u0073");_fa .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_bfedg ._afcae ),_bfedg ._afcae );_bfedg ._egdd ,_egaab =_bfedg .loadOutlines ();if _egaab !=nil {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_egaab );return _egaab ;};_bfedg .AcroForm ,_egaab =_bfedg .loadForms ();if _egaab !=nil {return _egaab ;};_bfedg .DSS ,_egaab =_bfedg .loadDSS ();if _egaab !=nil {return _egaab ;};return nil ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_gabg DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_eaace *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _abcbgg []*PdfField ;if _eaace .AcroForm !=nil {_abcbgg =_eaace .AcroForm .AllFields ();};_aecg :=make (map[*PdfField ]struct{},len (_abcbgg ));for _ ,_geggf :=range _abcbgg {_aecg [_geggf ]=struct{}{};};for _ ,_afdf :=range _eaace .PageList {_dgff ,_egfea :=_afdf .GetAnnotations ();if _egfea !=nil {return false ,_egfea ;};for _ ,_acdbe :=range _dgff {_bcaf ,_cbef :=_acdbe .GetContext ().(*PdfAnnotationWidget );if !_cbef {continue ;};_ebgge :=_bcaf .Field ();if _ebgge ==nil {return true ,nil ;};if _ ,_cdbag :=_aecg [_ebgge ];!_cdbag {return true ,nil ;};};};return false ,nil ;};

// IsShading specifies if the pattern is a shading pattern.
func (_gfaef *PdfPattern )IsShading ()bool {return _gfaef .PatternType ==2};func (_cegb *PdfAppender )updateObjectsDeep (_bbaf _gcb .PdfObject ,_agcf map[_gcb .PdfObject ]struct{}){if _agcf ==nil {_agcf =map[_gcb .PdfObject ]struct{}{};};if _ ,_gadd :=_agcf [_bbaf ];_gadd ||_bbaf ==nil {return ;};_agcf [_bbaf ]=struct{}{};_bfef :=_gcb .ResolveReferencesDeep (_bbaf ,_cegb ._dfde );if _bfef !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bfef );};switch _egde :=_bbaf .(type ){case *_gcb .PdfIndirectObject :switch {case _egde .GetParser ()==_cegb ._ggde ._efeb :return ;case _egde .GetParser ()==_cegb .Reader ._efeb :_ebae ,_ :=_cegb ._ggde .GetIndirectObjectByNumber (int (_egde .ObjectNumber ));_ccfe ,_dab :=_ebae .(*_gcb .PdfIndirectObject );if _dab &&_ccfe !=nil {if _ccfe .PdfObject !=_egde .PdfObject &&_ccfe .PdfObject .WriteString ()!=_egde .PdfObject .WriteString (){_cegb .addNewObject (_bbaf );_cegb ._bbdc [_bbaf ]=_egde .ObjectNumber ;};};default:_cegb .addNewObject (_bbaf );};_cegb .updateObjectsDeep (_egde .PdfObject ,_agcf );case *_gcb .PdfObjectArray :for _ ,_gaec :=range _egde .Elements (){_cegb .updateObjectsDeep (_gaec ,_agcf );};case *_gcb .PdfObjectDictionary :for _ ,_cbga :=range _egde .Keys (){_cegb .updateObjectsDeep (_egde .Get (_cbga ),_agcf );};case *_gcb .PdfObjectStreams :if _egde .GetParser ()!=_cegb ._ggde ._efeb {for _ ,_fdggg :=range _egde .Elements (){_cegb .updateObjectsDeep (_fdggg ,_agcf );};};case *_gcb .PdfObjectStream :switch {case _egde .GetParser ()==_cegb ._ggde ._efeb :return ;case _egde .GetParser ()==_cegb .Reader ._efeb :if _cdaa ,_fgdf :=_cegb ._ggde ._efeb .LookupByReference (_egde .PdfObjectReference );_fgdf ==nil {var _egac bool ;if _bae ,_fagg :=_gcb .GetStream (_cdaa );_fagg &&_ga .Equal (_bae .Stream ,_egde .Stream ){_egac =true ;};if _bdga ,_ccda :=_gcb .GetDict (_cdaa );_egac &&_ccda {_egac =_bdga .WriteString ()==_egde .PdfObjectDictionary .WriteString ();};if _egac {return ;};};if _egde .ObjectNumber !=0{_cegb ._bbdc [_bbaf ]=_egde .ObjectNumber ;};default:if _ ,_bdcb :=_cegb ._dea [_bbaf ];!_bdcb {_cegb .addNewObject (_bbaf );};};_cegb .updateObjectsDeep (_egde .PdfObjectDictionary ,_agcf );};};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_abcec :=&XObjectForm {};_eeabce :=&_gcb .PdfObjectStream {};_eeabce .PdfObjectDictionary =_gcb .MakeDict ();_abcec ._cfadb =_eeabce ;return _abcec ;};

// HasXObjectByName checks if has XObject resource by name.
func (_cgebe *PdfPage )HasXObjectByName (name _gcb .PdfObjectName )bool {_cddb ,_cfeac :=_cgebe .Resources .XObject .(*_gcb .PdfObjectDictionary );if !_cfeac {return false ;};if _cfga :=_cddb .Get (name );_cfga !=nil {return true ;};return false ;};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_gcb .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _gcb .PdfObject ;A _gcb .PdfObject ;SE _gcb .PdfObject ;C _gcb .PdfObject ;F _gcb .PdfObject ;_ccfec *_gcb .PdfIndirectObject ;};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_gcb .PdfObjectArray ;Domain *_gcb .PdfObjectArray ;Function []PdfFunction ;Extend *_gcb .PdfObjectArray ;};

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _gcb .PdfObject ;MK _gcb .PdfObject ;A _gcb .PdfObject ;AA _gcb .PdfObject ;BS _gcb .PdfObject ;Parent _gcb .PdfObject ;_fgb *PdfField ;_abc bool ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_cbgf *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_cega :=range pages {_cega =_cega .Duplicate ();_dgaef (_cega );_cbgf ._accd =append (_cbgf ._accd ,_cega );};};

// BaseFont returns the font's "BaseFont" field.
func (_dcfd *PdfFont )BaseFont ()string {return _dcfd .baseFields ()._eefc };

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_gede *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _gede .RunesToCharcodeBytes ([]rune (str ));};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_eaffa *PdfReader )GetObjectNums ()[]int {return _eaffa ._efeb .GetObjectNums ()};

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_cfcc *PdfField )GetContainingPdfObject ()_gcb .PdfObject {return _cfcc ._gcf };

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_bfdf *BorderStyle )GetPdfName ()string {switch *_bfdf {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";};return "";};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_acege :=&PdfColorspaceCalRGB {};_acege .BlackPoint =[]float64 {0.0,0.0,0.0};_acege .Gamma =[]float64 {1.0,1.0,1.0};_acege .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _acege ;};func (_cbe *PdfReader )newPdfActionGotoRFromDict (_bgg *_gcb .PdfObjectDictionary )(*PdfActionGoToR ,error ){_cbc ,_eef :=_eeb (_bgg .Get ("\u0046"));if _eef !=nil {return nil ,_eef ;};return &PdfActionGoToR {D :_bgg .Get ("\u0044"),NewWindow :_bgg .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_cbc },nil ;};func _eeb (_cee _gcb .PdfObject )(*PdfFilespec ,error ){if _cee ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_cee );};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_dgbe :=PdfColorDeviceGray (grayVal );return &_dgbe ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_addg *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_addg .HiVal )};};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_cebda *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_bacgc :=NewPdfOutlineItem ();_bacgc .Title =_gcb .MakeEncodedString (_cebda .Title ,true );_bacgc .Dest =_cebda .Dest .ToPdfObject ();var _cbegd []*PdfOutlineItem ;var _agde int64 ;var _gddec *PdfOutlineItem ;for _ ,_gaefa :=range _cebda .Entries {_ddgda ,_dbeff :=_gaefa .ToPdfOutlineItem ();_ddgda .Parent =&_bacgc .PdfOutlineTreeNode ;if _gddec !=nil {_gddec .Next =&_ddgda .PdfOutlineTreeNode ;_ddgda .Prev =&_gddec .PdfOutlineTreeNode ;};_cbegd =append (_cbegd ,_ddgda );_agde +=_dbeff ;_gddec =_ddgda ;};_ggaa :=len (_cbegd );_agde +=int64 (_ggaa );if _ggaa > 0{_bacgc .First =&_cbegd [0].PdfOutlineTreeNode ;_bacgc .Last =&_cbegd [_ggaa -1].PdfOutlineTreeNode ;_bacgc .Count =&_agde ;};return _bacgc ,_agde ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_gcb .PdfObjectArray ;ExtGState _gcb .PdfObject ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_beggf *PdfPageResources )SetColorspaceByName (keyName _gcb .PdfObjectName ,cs PdfColorspace )error {_gecf ,_dagba :=_beggf .GetColorspaces ();if _dagba !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_dagba );return _dagba ;};if _gecf ==nil {_gecf =NewPdfPageResourcesColorspaces ();_beggf .SetColorSpace (_gecf );};_gecf .Set (keyName ,cs );return nil ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _fc .Permissions ;Algorithm EncryptionAlgorithm ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_dacb *PdfColorspaceCalGray )ToPdfObject ()_gcb .PdfObject {_ecdf :=&_gcb .PdfObjectArray {};_ecdf .Append (_gcb .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_feaf :=_gcb .MakeDict ();if _dacb .WhitePoint !=nil {_feaf .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_gcb .MakeArray (_gcb .MakeFloat (_dacb .WhitePoint [0]),_gcb .MakeFloat (_dacb .WhitePoint [1]),_gcb .MakeFloat (_dacb .WhitePoint [2])));}else {_fa .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _dacb .BlackPoint !=nil {_feaf .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_gcb .MakeArray (_gcb .MakeFloat (_dacb .BlackPoint [0]),_gcb .MakeFloat (_dacb .BlackPoint [1]),_gcb .MakeFloat (_dacb .BlackPoint [2])));};_feaf .Set ("\u0047\u0061\u006dm\u0061",_gcb .MakeFloat (_dacb .Gamma ));_ecdf .Append (_feaf );if _dacb ._ffgcg !=nil {_dacb ._ffgcg .PdfObject =_ecdf ;return _dacb ._ffgcg ;};return _ecdf ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_dfcc PdfModel ;_dabce _gcb .PdfObject ;};

// C returns the value of the C component of the color.
func (_eddb *PdfColorCalRGB )C ()float64 {return _eddb [2]};func _dggbc ()string {_bfgga .Lock ();defer _bfgga .Unlock ();return _bgdcc };

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_ebacf *PdfOutline )GetContainingPdfObject ()_gcb .PdfObject {return _ebacf ._eggff };func (_ccf *PdfReader )newPdfAnnotationFromIndirectObject (_cgbf *_gcb .PdfIndirectObject )(*PdfAnnotation ,error ){_ddc ,_gcgf :=_cgbf .PdfObject .(*_gcb .PdfObjectDictionary );if !_gcgf {return nil ,_e .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_ccf ._ccdd .GetModelFromPrimitive (_ddc );model !=nil {_dba ,_fgdb :=model .(*PdfAnnotation );if !_fgdb {return nil ,_e .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");};return _dba ,nil ;};_bdbb :=&PdfAnnotation {};_bdbb ._dgc =_cgbf ;_ccf ._ccdd .Register (_ddc ,_bdbb );if _dedf :=_ddc .Get ("\u0054\u0079\u0070\u0065");_dedf !=nil {_fgbg ,_fbf :=_dedf .(*_gcb .PdfObjectName );if !_fbf {_fa .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_dedf );}else {if *_fgbg !="\u0041\u006e\u006eo\u0074"{_fa .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_fgbg );};};};if _ccgd :=_ddc .Get ("\u0052\u0065\u0063\u0074");_ccgd !=nil {_bdbb .Rect =_ccgd ;};if _cad :=_ddc .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_cad !=nil {_bdbb .Contents =_cad ;};if _fac :=_ddc .Get ("\u0050");_fac !=nil {_bdbb .P =_fac ;};if _afcg :=_ddc .Get ("\u004e\u004d");_afcg !=nil {_bdbb .NM =_afcg ;};if _fafg :=_ddc .Get ("\u004d");_fafg !=nil {_bdbb .M =_fafg ;};if _dccf :=_ddc .Get ("\u0046");_dccf !=nil {_bdbb .F =_dccf ;};if _dff :=_ddc .Get ("\u0041\u0050");_dff !=nil {_bdbb .AP =_dff ;};if _acg :=_ddc .Get ("\u0041\u0053");_acg !=nil {_bdbb .AS =_acg ;};if _gef :=_ddc .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_gef !=nil {_bdbb .Border =_gef ;};if _adcb :=_ddc .Get ("\u0043");_adcb !=nil {_bdbb .C =_adcb ;};if _cbee :=_ddc .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_cbee !=nil {_bdbb .StructParent =_cbee ;};if _gecec :=_ddc .Get ("\u004f\u0043");_gecec !=nil {_bdbb .OC =_gecec ;};_gage :=_ddc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _gage ==nil {_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");_bdbb ._gbad =nil ;return _bdbb ,nil ;};_geg ,_afcf :=_gage .(*_gcb .PdfObjectName );if !_afcf {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_gage );return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_gage );};switch *_geg {case "\u0054\u0065\u0078\u0074":_cadc ,_efga :=_ccf .newPdfAnnotationTextFromDict (_ddc );if _efga !=nil {return nil ,_efga ;};_cadc .PdfAnnotation =_bdbb ;_bdbb ._gbad =_cadc ;return _bdbb ,nil ;case "\u004c\u0069\u006e\u006b":_daeg ,_gfd :=_ccf .newPdfAnnotationLinkFromDict (_ddc );if _gfd !=nil {return nil ,_gfd ;};_daeg .PdfAnnotation =_bdbb ;_bdbb ._gbad =_daeg ;return _bdbb ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_fgbga ,_gfa :=_ccf .newPdfAnnotationFreeTextFromDict (_ddc );if _gfa !=nil {return nil ,_gfa ;};_fgbga .PdfAnnotation =_bdbb ;_bdbb ._gbad =_fgbga ;return _bdbb ,nil ;case "\u004c\u0069\u006e\u0065":_gfba ,_gdbb :=_ccf .newPdfAnnotationLineFromDict (_ddc );if _gdbb !=nil {return nil ,_gdbb ;};_gfba .PdfAnnotation =_bdbb ;_bdbb ._gbad =_gfba ;_fa .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_bdbb ,_bdbb );_fa .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_gfba ,_gfba );_fa .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_gfba .PdfAnnotationMarkup ,_gfba .PdfAnnotationMarkup );return _bdbb ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_fbc ,_geed :=_ccf .newPdfAnnotationSquareFromDict (_ddc );if _geed !=nil {return nil ,_geed ;};_fbc .PdfAnnotation =_bdbb ;_bdbb ._gbad =_fbc ;return _bdbb ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_eaba ,_gbea :=_ccf .newPdfAnnotationCircleFromDict (_ddc );if _gbea !=nil {return nil ,_gbea ;};_eaba .PdfAnnotation =_bdbb ;_bdbb ._gbad =_eaba ;return _bdbb ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_ebcd ,_aeb :=_ccf .newPdfAnnotationPolygonFromDict (_ddc );if _aeb !=nil {return nil ,_aeb ;};_ebcd .PdfAnnotation =_bdbb ;_bdbb ._gbad =_ebcd ;return _bdbb ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_fgc ,_facd :=_ccf .newPdfAnnotationPolyLineFromDict (_ddc );if _facd !=nil {return nil ,_facd ;};_fgc .PdfAnnotation =_bdbb ;_bdbb ._gbad =_fgc ;return _bdbb ,nil ;case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_dgbda ,_dbbc :=_ccf .newPdfAnnotationHighlightFromDict (_ddc );if _dbbc !=nil {return nil ,_dbbc ;};_dgbda .PdfAnnotation =_bdbb ;_bdbb ._gbad =_dgbda ;return _bdbb ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_ffcbd ,_bdfg :=_ccf .newPdfAnnotationUnderlineFromDict (_ddc );if _bdfg !=nil {return nil ,_bdfg ;};_ffcbd .PdfAnnotation =_bdbb ;_bdbb ._gbad =_ffcbd ;return _bdbb ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_dfbe ,_aggd :=_ccf .newPdfAnnotationSquigglyFromDict (_ddc );if _aggd !=nil {return nil ,_aggd ;};_dfbe .PdfAnnotation =_bdbb ;_bdbb ._gbad =_dfbe ;return _bdbb ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_ddbg ,_cgbe :=_ccf .newPdfAnnotationStrikeOut (_ddc );if _cgbe !=nil {return nil ,_cgbe ;};_ddbg .PdfAnnotation =_bdbb ;_bdbb ._gbad =_ddbg ;return _bdbb ,nil ;case "\u0043\u0061\u0072e\u0074":_dgbg ,_cbcg :=_ccf .newPdfAnnotationCaretFromDict (_ddc );if _cbcg !=nil {return nil ,_cbcg ;};_dgbg .PdfAnnotation =_bdbb ;_bdbb ._gbad =_dgbg ;return _bdbb ,nil ;case "\u0053\u0074\u0061m\u0070":_fdg ,_bab :=_ccf .newPdfAnnotationStampFromDict (_ddc );if _bab !=nil {return nil ,_bab ;};_fdg .PdfAnnotation =_bdbb ;_bdbb ._gbad =_fdg ;return _bdbb ,nil ;case "\u0049\u006e\u006b":_cfg ,_ccba :=_ccf .newPdfAnnotationInkFromDict (_ddc );if _ccba !=nil {return nil ,_ccba ;};_cfg .PdfAnnotation =_bdbb ;_bdbb ._gbad =_cfg ;return _bdbb ,nil ;case "\u0050\u006f\u0070u\u0070":_fbfa ,_gcd :=_ccf .newPdfAnnotationPopupFromDict (_ddc );if _gcd !=nil {return nil ,_gcd ;};_fbfa .PdfAnnotation =_bdbb ;_bdbb ._gbad =_fbfa ;return _bdbb ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_bec ,_effd :=_ccf .newPdfAnnotationFileAttachmentFromDict (_ddc );if _effd !=nil {return nil ,_effd ;};_bec .PdfAnnotation =_bdbb ;_bdbb ._gbad =_bec ;return _bdbb ,nil ;case "\u0053\u006f\u0075n\u0064":_eefg ,_ggag :=_ccf .newPdfAnnotationSoundFromDict (_ddc );if _ggag !=nil {return nil ,_ggag ;};_eefg .PdfAnnotation =_bdbb ;_bdbb ._gbad =_eefg ;return _bdbb ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_daab ,_bdag :=_ccf .newPdfAnnotationRichMediaFromDict (_ddc );if _bdag !=nil {return nil ,_bdag ;};_daab .PdfAnnotation =_bdbb ;_bdbb ._gbad =_daab ;return _bdbb ,nil ;case "\u004d\u006f\u0076i\u0065":_fbdd ,_bfac :=_ccf .newPdfAnnotationMovieFromDict (_ddc );if _bfac !=nil {return nil ,_bfac ;};_fbdd .PdfAnnotation =_bdbb ;_bdbb ._gbad =_fbdd ;return _bdbb ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_bbab ,_abcg :=_ccf .newPdfAnnotationScreenFromDict (_ddc );if _abcg !=nil {return nil ,_abcg ;};_bbab .PdfAnnotation =_bdbb ;_bdbb ._gbad =_bbab ;return _bdbb ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_fabf ,_cdf :=_ccf .newPdfAnnotationWidgetFromDict (_ddc );if _cdf !=nil {return nil ,_cdf ;};_fabf .PdfAnnotation =_bdbb ;_bdbb ._gbad =_fabf ;return _bdbb ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_feb ,_cde :=_ccf .newPdfAnnotationPrinterMarkFromDict (_ddc );if _cde !=nil {return nil ,_cde ;};_feb .PdfAnnotation =_bdbb ;_bdbb ._gbad =_feb ;return _bdbb ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_ccc ,_bccb :=_ccf .newPdfAnnotationTrapNetFromDict (_ddc );if _bccb !=nil {return nil ,_bccb ;};_ccc .PdfAnnotation =_bdbb ;_bdbb ._gbad =_ccc ;return _bdbb ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_adf ,_feda :=_ccf .newPdfAnnotationWatermarkFromDict (_ddc );if _feda !=nil {return nil ,_feda ;};_adf .PdfAnnotation =_bdbb ;_bdbb ._gbad =_adf ;return _bdbb ,nil ;case "\u0033\u0044":_gcge ,_ddea :=_ccf .newPdfAnnotation3DFromDict (_ddc );if _ddea !=nil {return nil ,_ddea ;};_gcge .PdfAnnotation =_bdbb ;_bdbb ._gbad =_gcge ;return _bdbb ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_cdeb ,_gfdd :=_ccf .newPdfAnnotationProjectionFromDict (_ddc );if _gfdd !=nil {return nil ,_gfdd ;};_cdeb .PdfAnnotation =_bdbb ;_bdbb ._gbad =_cdeb ;return _bdbb ,nil ;case "\u0052\u0065\u0064\u0061\u0063\u0074":_gcde ,_ffde :=_ccf .newPdfAnnotationRedactFromDict (_ddc );if _ffde !=nil {return nil ,_ffde ;};_gcde .PdfAnnotation =_bdbb ;_bdbb ._gbad =_gcde ;return _bdbb ,nil ;};_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_geg );return nil ,nil ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _gcb .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _gcb .PdfObject ;Contents _gcb .PdfObject ;Rotate *int64 ;Group _gcb .PdfObject ;Thumb _gcb .PdfObject ;B _gcb .PdfObject ;Dur _gcb .PdfObject ;Trans _gcb .PdfObject ;AA _gcb .PdfObject ;Metadata _gcb .PdfObject ;PieceInfo _gcb .PdfObject ;StructParents _gcb .PdfObject ;ID _gcb .PdfObject ;PZ _gcb .PdfObject ;SeparationInfo _gcb .PdfObject ;Tabs _gcb .PdfObject ;TemplateInstantiated _gcb .PdfObject ;PresSteps _gcb .PdfObject ;UserUnit _gcb .PdfObject ;VP _gcb .PdfObject ;Annots _gcb .PdfObject ;_eafecf []*PdfAnnotation ;_aafafd *_gcb .PdfObjectDictionary ;_gdeac *_gcb .PdfIndirectObject ;_caab *PdfReader ;};

// ToPdfObject implements interface PdfModel.
func (_bbc *PdfAnnotationRedact )ToPdfObject ()_gcb .PdfObject {_bbc .PdfAnnotation .ToPdfObject ();_abg :=_bbc ._dgc ;_acd :=_abg .PdfObject .(*_gcb .PdfObjectDictionary );_bbc .PdfAnnotationMarkup .appendToPdfDictionary (_acd );_acd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));_acd .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bbc .QuadPoints );_acd .SetIfNotNil ("\u0049\u0043",_bbc .IC );_acd .SetIfNotNil ("\u0052\u004f",_bbc .RO );_acd .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_bbc .OverlayText );_acd .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_bbc .Repeat );_acd .SetIfNotNil ("\u0044\u0041",_bbc .DA );_acd .SetIfNotNil ("\u0051",_bbc .Q );return _abg ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_ccab DefaultImageHandler )NewImageFromGoImage (goimg _a .Image )(*Image ,error ){_ddbcb ,_gfbbc :=_efe .FromGoImage (goimg );if _gfbbc !=nil {return nil ,_gfbbc ;};_ecdeb :=_dddf (_ddbcb .Base ());return &_ecdeb ,nil ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_fab :=NewPdfAnnotation ();_fgd :=&PdfAnnotationPopup {};_fgd .PdfAnnotation =_fab ;_fab .SetContext (_fgd );return _fgd ;};

// ToPdfObject implements interface PdfModel.
func (_gfb *PdfActionSubmitForm )ToPdfObject ()_gcb .PdfObject {_gfb .PdfAction .ToPdfObject ();_dge :=_gfb ._gg ;_gec :=_dge .PdfObject .(*_gcb .PdfObjectDictionary );_gec .SetIfNotNil ("\u0053",_gcb .MakeName (string (ActionTypeSubmitForm )));if _gfb .F !=nil {_gec .Set ("\u0046",_gfb .F .ToPdfObject ());};_gec .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_gfb .Fields );_gec .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_gfb .Flags );return _dge ;};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_dcce :=NewPdfAnnotation ();_fcfe :=&PdfAnnotationSquiggly {};_fcfe .PdfAnnotation =_dcce ;_fcfe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dcce .SetContext (_fcfe );return _fcfe ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_gceda :=&PdfOutlineItem {_ccfec :_gcb .MakeIndirectObject (_gcb .MakeDict ())};_gceda ._cgfc =_gceda ;return _gceda ;};

// WriteToFile writes the Appender output to file specified by path.
func (_adbg *PdfAppender )WriteToFile (outputPath string )error {_ffdf ,_ffad :=_gc .Create (outputPath );if _ffad !=nil {return _ffad ;};defer _ffdf .Close ();return _adbg .Write (_ffdf );};func _fdbc (_fefe _gcb .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_cbgaf :=&PdfColorspaceDeviceNAttributes {};var _edgba *_gcb .PdfObjectDictionary ;if _cddd ,_ecadb :=_fefe .(*_gcb .PdfIndirectObject );_ecadb {_cbgaf ._gceg =_cddd ;var _agad bool ;_edgba ,_agad =_cddd .PdfObject .(*_gcb .PdfObjectDictionary );if !_agad {_fa .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_fb .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};}else if _cgdb ,_acbb :=_fefe .(*_gcb .PdfObjectDictionary );_acbb {_edgba =_cgdb ;}else {_fa .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");return nil ,_fb .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cdda :=_edgba .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_cdda !=nil {_ddgdb ,_feae :=_gcb .TraceToDirectObject (_cdda ).(*_gcb .PdfObjectName );if !_feae {_fa .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");return nil ,_fb .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_cbgaf .Subtype =_ddgdb ;};if _cebbd :=_edgba .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_cebbd !=nil {_cbgaf .Colorants =_cebbd ;};if _dabgf :=_edgba .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");_dabgf !=nil {_cbgaf .Process =_dabgf ;};if _ccbg :=_edgba .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_ccbg !=nil {_cbgaf .MixingHints =_ccbg ;};return _cbgaf ,nil ;};

// ValidateSignatures validates digital signatures in the document.
func (_cbcged *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _cbcged .AcroForm ==nil {return nil ,nil ;};if _cbcged .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_bgced *PdfSignature ;_abcgg *PdfField ;_gcedd SignatureHandler ;};var _ddfdf []*sigFieldPair ;for _ ,_edcdb :=range _cbcged .AcroForm .AllFields (){if _edcdb .V ==nil {continue ;};if _beag ,_fafag :=_gcb .GetDict (_edcdb .V );_fafag {if _gfgc ,_cfcgf :=_gcb .GetNameVal (_beag .Get ("\u0054\u0079\u0070\u0065"));_cfcgf &&_gfgc =="\u0053\u0069\u0067"{_deaf ,_gbcc :=_gcb .GetIndirect (_edcdb .V );if !_gbcc {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");return nil ,ErrTypeCheck ;};_eeffc ,_cafee :=_cbcged .newPdfSignatureFromIndirect (_deaf );if _cafee !=nil {return nil ,_cafee ;};var _ddac SignatureHandler ;for _ ,_dbcdf :=range handlers {if _dbcdf .IsApplicable (_eeffc ){_ddac =_dbcdf ;break ;};};_ddfdf =append (_ddfdf ,&sigFieldPair {_bgced :_eeffc ,_abcgg :_edcdb ,_gcedd :_ddac });};};};var _fbad []SignatureValidationResult ;for _ ,_cdeaf :=range _ddfdf {_aaffa :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_cdeaf ._abcgg }};if _cdeaf ._gcedd ==nil {_aaffa .Errors =append (_aaffa .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");_fbad =append (_fbad ,_aaffa );continue ;};_egbf ,_aged :=_cdeaf ._gcedd .NewDigest (_cdeaf ._bgced );if _aged !=nil {_aaffa .Errors =append (_aaffa .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_aged .Error ());_fbad =append (_fbad ,_aaffa );continue ;};_dbdfa :=_cdeaf ._bgced .ByteRange ;if _dbdfa ==nil {_aaffa .Errors =append (_aaffa .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_fbad =append (_fbad ,_aaffa );continue ;};for _ecgfc :=0;_ecgfc < _dbdfa .Len ();_ecgfc =_ecgfc +2{_cdeafe ,_ :=_gcb .GetNumberAsInt64 (_dbdfa .Get (_ecgfc ));_acaf ,_ :=_gcb .GetIntVal (_dbdfa .Get (_ecgfc +1));if _ ,_bageg :=_cbcged ._efddb .Seek (_cdeafe ,_dfb .SeekStart );_bageg !=nil {return nil ,_bageg ;};_edbdb :=make ([]byte ,_acaf );if _ ,_adfc :=_cbcged ._efddb .Read (_edbdb );_adfc !=nil {return nil ,_adfc ;};_egbf .Write (_edbdb );};_agefc ,_aged :=_cdeaf ._gcedd .Validate (_cdeaf ._bgced ,_egbf );if _aged !=nil {return nil ,_aged ;};_agefc .Name =_cdeaf ._bgced .Name .Decoded ();_agefc .Reason =_cdeaf ._bgced .Reason .Decoded ();if _cdeaf ._bgced .M !=nil {_ecfc ,_dbaa :=NewPdfDate (_cdeaf ._bgced .M .String ());if _dbaa !=nil {_agefc .Errors =append (_agefc .Errors ,_dbaa .Error ());continue ;};_agefc .Date =_ecfc ;};_agefc .ContactInfo =_cdeaf ._bgced .ContactInfo .Decoded ();_agefc .Location =_cdeaf ._bgced .Location .Decoded ();_agefc .Fields =_aaffa .Fields ;_fbad =append (_fbad ,_agefc );};return _fbad ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cec *PdfActionThread )ToPdfObject ()_gcb .PdfObject {_cec .PdfAction .ToPdfObject ();_cgg :=_cec ._gg ;_fbb :=_cgg .PdfObject .(*_gcb .PdfObjectDictionary );_fbb .SetIfNotNil ("\u0053",_gcb .MakeName (string (ActionTypeThread )));if _cec .F !=nil {_fbb .Set ("\u0046",_cec .F .ToPdfObject ());};_fbb .SetIfNotNil ("\u0044",_cec .D );_fbb .SetIfNotNil ("\u0042",_cec .B );return _cgg ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bbac *PdfAnnotation )GetContainingPdfObject ()_gcb .PdfObject {return _bbac ._dgc };

// SetContext sets the sub action (context).
func (_bf *PdfAction )SetContext (ctx PdfModel ){_bf ._ebe =ctx };

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_dbdf []_gcb .PdfObject )([]_gcb .PdfObject ,error );};

// GetNamedDestinations returns the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_beecef *PdfReader )GetNamedDestinations ()(_gcb .PdfObject ,error ){_dccbg :=_gcb .ResolveReference (_beecef ._bgee .Get ("\u004e\u0061\u006de\u0073"));if _dccbg ==nil {return nil ,nil ;};if !_beecef ._dddfd {_gabac :=_beecef .traverseObjectData (_dccbg );if _gabac !=nil {return nil ,_gabac ;};};return _dccbg ,nil ;};

// String returns a string describing the font descriptor.
func (_efge *PdfFontDescriptor )String ()string {var _gdgea []string ;if _efge .FontName !=nil {_gdgea =append (_gdgea ,_efge .FontName .String ());};if _efge .FontFamily !=nil {_gdgea =append (_gdgea ,_efge .FontFamily .String ());};if _efge .fontFile !=nil {_gdgea =append (_gdgea ,_efge .fontFile .String ());};if _efge ._ccdfd !=nil {_gdgea =append (_gdgea ,_efge ._ccdfd .String ());};_gdgea =append (_gdgea ,_e .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_efge .FontFile3 !=nil ));return _e .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_gb .Join (_gdgea ,"\u002c\u0020"));};func (_cdeed fontCommon )coreString ()string {_cdafc :="";if _cdeed ._efff !=nil {_cdafc =_cdeed ._efff .String ();};return _e .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_cdeed ._caaad ,_cdeed ._eefc ,_cdeed ._gdec ,_cdeed ._cagg ,_cdeed ._faac !=nil ,_cdeed .fontFlags (),_cdafc );};func (_fbbag *DSS )addCerts (_bbeec [][]byte )([]*_gcb .PdfObjectStream ,error ){return _fbbag .add (&_fbbag .Certs ,_fbbag ._eaga ,_bbeec );};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _gcb .PdfObject ;Name _gcb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fga *PdfActionImportData )ToPdfObject ()_gcb .PdfObject {_fga .PdfAction .ToPdfObject ();_faf :=_fga ._gg ;_ffd :=_faf .PdfObject .(*_gcb .PdfObjectDictionary );_ffd .SetIfNotNil ("\u0053",_gcb .MakeName (string (ActionTypeImportData )));if _fga .F !=nil {_ffd .Set ("\u0046",_fga .F .ToPdfObject ());};return _faf ;};func (_acf *PdfReader )newPdfAnnotationMovieFromDict (_gbaf *_gcb .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_cfc :=PdfAnnotationMovie {};_cfc .T =_gbaf .Get ("\u0054");_cfc .Movie =_gbaf .Get ("\u004d\u006f\u0076i\u0065");_cfc .A =_gbaf .Get ("\u0041");return &_cfc ,nil ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;func _gddd (_decgd *_gcb .PdfObjectStream )(*PdfFunctionType0 ,error ){_cbebg :=&PdfFunctionType0 {};_cbebg ._gbcb =_decgd ;_eaff :=_decgd .PdfObjectDictionary ;_ddbdc ,_aafdd :=_gcb .TraceToDirectObject (_eaff .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gcb .PdfObjectArray );if !_aafdd {_fa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fb .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _ddbdc .Len ()< 0||_ddbdc .Len ()%2!=0{_fa .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fb .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_cbebg .NumInputs =_ddbdc .Len ()/2;_bbeba ,_adfge :=_ddbdc .ToFloat64Array ();if _adfge !=nil {return nil ,_adfge ;};_cbebg .Domain =_bbeba ;_ddbdc ,_aafdd =_gcb .TraceToDirectObject (_eaff .Get ("\u0052\u0061\u006eg\u0065")).(*_gcb .PdfObjectArray );if !_aafdd {_fa .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_fb .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _ddbdc .Len ()< 0||_ddbdc .Len ()%2!=0{return nil ,_fb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_cbebg .NumOutputs =_ddbdc .Len ()/2;_bafed ,_adfge :=_ddbdc .ToFloat64Array ();if _adfge !=nil {return nil ,_adfge ;};_cbebg .Range =_bafed ;_ddbdc ,_aafdd =_gcb .TraceToDirectObject (_eaff .Get ("\u0053\u0069\u007a\u0065")).(*_gcb .PdfObjectArray );if !_aafdd {_fa .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");return nil ,_fb .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_egcd ,_adfge :=_ddbdc .ToIntegerArray ();if _adfge !=nil {return nil ,_adfge ;};if len (_egcd )!=_cbebg .NumInputs {_fa .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbebg .Size =_egcd ;_ededb ,_aafdd :=_gcb .TraceToDirectObject (_eaff .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_gcb .PdfObjectInteger );if !_aafdd {_fa .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_fb .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if *_ededb !=1&&*_ededb !=2&&*_ededb !=4&&*_ededb !=8&&*_ededb !=12&&*_ededb !=16&&*_ededb !=24&&*_ededb !=32{_fa .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_ededb );return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbebg .BitsPerSample =int (*_ededb );_cbebg .Order =1;_gadeg ,_aafdd :=_gcb .TraceToDirectObject (_eaff .Get ("\u004f\u0072\u0064e\u0072")).(*_gcb .PdfObjectInteger );if _aafdd {if *_gadeg !=1&&*_gadeg !=3{_fa .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_gadeg );return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cbebg .Order =int (*_gadeg );};_ddbdc ,_aafdd =_gcb .TraceToDirectObject (_eaff .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_gcb .PdfObjectArray );if _aafdd {_ggeb ,_bddg :=_ddbdc .ToFloat64Array ();if _bddg !=nil {return nil ,_bddg ;};_cbebg .Encode =_ggeb ;};_ddbdc ,_aafdd =_gcb .TraceToDirectObject (_eaff .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_gcb .PdfObjectArray );if _aafdd {_fdede ,_gdag :=_ddbdc .ToFloat64Array ();if _gdag !=nil {return nil ,_gdag ;};_cbebg .Decode =_fdede ;};_edgdg ,_adfge :=_gcb .DecodeStream (_decgd );if _adfge !=nil {return nil ,_adfge ;};_cbebg ._ffdb =_edgdg ;return _cbebg ,nil ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _c .Time ){_bfgga .Lock ();defer _bfgga .Unlock ();_dbbd =modifiedDate ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_gdfa *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_gcb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ccce ,_bfag :=_gcb .GetNumbersAsFloat (objects );if _bfag !=nil {return nil ,_bfag ;};return _gdfa .ColorFromFloats (_ccce );};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;BorderStyleUnderline BorderStyle =iota ;);

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_cbfce *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _gcb .GetNumberAsFloat (_cbfce .CapHeight );};

// ToInteger convert to an integer format.
func (_ecec *PdfColorLab )ToInteger (bits int )[3]uint32 {_bcbdb :=_f .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_bcbdb *_ecec .L ()),uint32 (_bcbdb *_ecec .A ()),uint32 (_bcbdb *_ecec .B ())};};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_fcecf *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _egabc []*PdfOutlineTreeNode ;var _gedb []string ;var _feab func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_feab =func (_ggfdc *PdfOutlineTreeNode ,_edbb *[]*PdfOutlineTreeNode ,_cgeaf *[]string ,_fbgga int ){if _ggfdc ==nil {return ;};if _ggfdc ._cgfc ==nil {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_geged ,_egafc :=_ggfdc ._cgfc .(*PdfOutlineItem );if _egafc {*_edbb =append (*_edbb ,&_geged .PdfOutlineTreeNode );_dbgc :=_gb .Repeat ("\u0020",_fbgga *2)+_geged .Title .Decoded ();*_cgeaf =append (*_cgeaf ,_dbgc );};if _ggfdc .First !=nil {_aeda :=_gb .Repeat ("\u0020",_fbgga *2)+"\u002b";*_cgeaf =append (*_cgeaf ,_aeda );_feab (_ggfdc .First ,_edbb ,_cgeaf ,_fbgga +1);};if _egafc &&_geged .Next !=nil {_feab (_geged .Next ,_edbb ,_cgeaf ,_fbgga );};};_feab (_fcecf ._egdd ,&_egabc ,&_gedb ,0);return _egabc ,_gedb ,nil ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _gcb .PdfObject ;T _gcb .PdfObject ;Operation _gcb .PdfObject ;};func (_ecc *PdfReader )newPdfAnnotationPopupFromDict (_fae *_gcb .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_dbfe :=PdfAnnotationPopup {};_dbfe .Parent =_fae .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_dbfe .Open =_fae .Get ("\u004f\u0070\u0065\u006e");return &_dbfe ,nil ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_gcgee *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gcgee .Alternate ==nil {_fa .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _gcgee .N ==1{_fa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_fbfdd :=NewPdfColorspaceDeviceGray ();return _fbfdd .ColorToRGB (color );}else if _gcgee .N ==3{_fa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return color ,nil ;}else if _gcgee .N ==4{_fa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_efab :=NewPdfColorspaceDeviceCMYK ();return _efab .ColorToRGB (color );}else {return nil ,_fb .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_fa .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_gcgee );return _gcgee .Alternate .ColorToRGB (color );};func _cegeab (_gddbb *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_gddbb }};

// GetPage returns the PdfPage model for the specified page number.
func (_ccbff *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _ccbff ._efeb .GetCrypter ()!=nil &&!_ccbff ._efeb .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};if len (_ccbff ._afcae )< pageNumber {return nil ,_fb .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");};_caed :=pageNumber -1;if _caed < 0{return nil ,_e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_cggec :=_ccbff .PageList [_caed ];return _cggec ,nil ;};

// AllFields returns a flattened list of all fields in the form.
func (_gdebb *PdfAcroForm )AllFields ()[]*PdfField {if _gdebb ==nil {return nil ;};var _acdbd []*PdfField ;if _gdebb .Fields !=nil {for _ ,_deaeb :=range *_gdebb .Fields {_acdbd =append (_acdbd ,_dbda (_deaeb )...);};};return _acdbd ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_cafbd *PdfFont )ToPdfObject ()_gcb .PdfObject {if _cafbd ._ffag ==nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _gcb .MakeNull ();};return _cafbd ._ffag .ToPdfObject ();};

// ToPdfObject implements interface PdfModel.
func (_ebea *PdfAnnotationSquare )ToPdfObject ()_gcb .PdfObject {_ebea .PdfAnnotation .ToPdfObject ();_fca :=_ebea ._dgc ;_afeb :=_fca .PdfObject .(*_gcb .PdfObjectDictionary );if _ebea .PdfAnnotationMarkup !=nil {_ebea .PdfAnnotationMarkup .appendToPdfDictionary (_afeb );};_afeb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_afeb .SetIfNotNil ("\u0042\u0053",_ebea .BS );_afeb .SetIfNotNil ("\u0049\u0043",_ebea .IC );_afeb .SetIfNotNil ("\u0042\u0045",_ebea .BE );_afeb .SetIfNotNil ("\u0052\u0044",_ebea .RD );return _fca ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_eee :=NewPdfAction ();_gbf :=&PdfActionGoTo3DView {};_gbf .PdfAction =_eee ;_eee .SetContext (_gbf );return _gbf ;};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_cfac *PdfColorspaceDeviceN )GetNumComponents ()int {return _cfac .ColorantNames .Len ()};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_egaa *Image )GetParamsDict ()*_gcb .PdfObjectDictionary {_ccca :=_gcb .MakeDict ();_ccca .Set ("\u0057\u0069\u0064t\u0068",_gcb .MakeInteger (_egaa .Width ));_ccca .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_gcb .MakeInteger (_egaa .Height ));_ccca .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_gcb .MakeInteger (int64 (_egaa .ColorComponents )));_ccca .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gcb .MakeInteger (_egaa .BitsPerComponent ));return _ccca ;};var (_gcfc =_ba .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");_aeebg =_ba .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_gffcg =_ba .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");_bbbb ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_geedde ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_bgfbb ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";);

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_bfgga .Lock ();defer _bfgga .Unlock ();_ebbgb =subject };

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _gcb .PdfObject ;Dest _gcb .PdfObject ;H _gcb .PdfObject ;PA _gcb .PdfObject ;QuadPoints _gcb .PdfObject ;BS _gcb .PdfObject ;_adc *PdfAction ;_age *PdfReader ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_geee *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_gade ,_ ,_egfcd :=_geee .CharcodesToUnicodeWithStats (_geee .BytesToCharcodes (data ));_baca :=_dee .ExpandLigatures (_gade );return _baca ,_bad .RuneCountInString (_baca ),_egfcd ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_fbgd :=NewPdfAnnotation ();_ffa :=&PdfAnnotationHighlight {};_ffa .PdfAnnotation =_fbgd ;_ffa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fbgd .SetContext (_ffa );return _ffa ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_gcb .PdfObjectArray ;Matrix *_gcb .PdfObjectArray ;Function []PdfFunction ;};var _edcd =_ba .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");func _ecgeb ()*modelManager {_dgcbab :=modelManager {};_dgcbab ._aeaeg =map[PdfModel ]_gcb .PdfObject {};_dgcbab ._cfad =map[_gcb .PdfObject ]PdfModel {};return &_dgcbab ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_bdc :=NewPdfAction ();_fcg :=&PdfActionImportData {};_fcg .PdfAction =_bdc ;_bdc .SetContext (_fcg );return _fcg ;};func (_dcaf *PdfReader )newPdfActionLaunchFromDict (_bfd *_gcb .PdfObjectDictionary )(*PdfActionLaunch ,error ){_gga ,_gcg :=_eeb (_bfd .Get ("\u0046"));if _gcg !=nil {return nil ,_gcg ;};return &PdfActionLaunch {Win :_bfd .Get ("\u0057\u0069\u006e"),Mac :_bfd .Get ("\u004d\u0061\u0063"),Unix :_bfd .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_bfd .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_gga },nil ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_adbf *PdfFontDescriptor )ToPdfObject ()_gcb .PdfObject {_agbad :=_gcb .MakeDict ();if _adbf ._gafff ==nil {_adbf ._gafff =&_gcb .PdfIndirectObject {};};_adbf ._gafff .PdfObject =_agbad ;_agbad .Set ("\u0054\u0079\u0070\u0065",_gcb .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));if _adbf .FontName !=nil {_agbad .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_adbf .FontName );};if _adbf .FontFamily !=nil {_agbad .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_adbf .FontFamily );};if _adbf .FontStretch !=nil {_agbad .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_adbf .FontStretch );};if _adbf .FontWeight !=nil {_agbad .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_adbf .FontWeight );};if _adbf .Flags !=nil {_agbad .Set ("\u0046\u006c\u0061g\u0073",_adbf .Flags );};if _adbf .FontBBox !=nil {_agbad .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_adbf .FontBBox );};if _adbf .ItalicAngle !=nil {_agbad .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_adbf .ItalicAngle );};if _adbf .Ascent !=nil {_agbad .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_adbf .Ascent );};if _adbf .Descent !=nil {_agbad .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_adbf .Descent );};if _adbf .Leading !=nil {_agbad .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_adbf .Leading );};if _adbf .CapHeight !=nil {_agbad .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_adbf .CapHeight );};if _adbf .XHeight !=nil {_agbad .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_adbf .XHeight );};if _adbf .StemV !=nil {_agbad .Set ("\u0053\u0074\u0065m\u0056",_adbf .StemV );};if _adbf .StemH !=nil {_agbad .Set ("\u0053\u0074\u0065m\u0048",_adbf .StemH );};if _adbf .AvgWidth !=nil {_agbad .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_adbf .AvgWidth );};if _adbf .MaxWidth !=nil {_agbad .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_adbf .MaxWidth );};if _adbf .MissingWidth !=nil {_agbad .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_adbf .MissingWidth );};if _adbf .FontFile !=nil {_agbad .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_adbf .FontFile );};if _adbf .FontFile2 !=nil {_agbad .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_adbf .FontFile2 );};if _adbf .FontFile3 !=nil {_agbad .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_adbf .FontFile3 );};if _adbf .CharSet !=nil {_agbad .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_adbf .CharSet );};if _adbf .Style !=nil {_agbad .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_adbf .FontName );};if _adbf .Lang !=nil {_agbad .Set ("\u004c\u0061\u006e\u0067",_adbf .Lang );};if _adbf .FD !=nil {_agbad .Set ("\u0046\u0044",_adbf .FD );};if _adbf .CIDSet !=nil {_agbad .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_adbf .CIDSet );};return _adbf ._gafff ;};

// String implements interface PdfObject.
func (_gcbc *PdfAction )String ()string {_bgb ,_ab :=_gcbc .ToPdfObject ().(*_gcb .PdfIndirectObject );if _ab {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_gcbc ._ebe ,_bgb .PdfObject .String ());};return "";};func (_ebbeg *LTV )buildCertChain (_ggbbe ,_dabc []*_g .Certificate )([]*_g .Certificate ,map[string ]*_g .Certificate ,error ){_egdfe :=map[string ]*_g .Certificate {};for _ ,_agccd :=range _ggbbe {_egdfe [_agccd .Subject .CommonName ]=_agccd ;};_ebeca :=_ggbbe ;for _ ,_cagcg :=range _dabc {_egffa :=_cagcg .Subject .CommonName ;if _ ,_bcbcf :=_egdfe [_egffa ];_bcbcf {continue ;};_egdfe [_egffa ]=_cagcg ;_ebeca =append (_ebeca ,_cagcg );};if len (_ebeca )==0{return nil ,nil ,ErrSignNoCertificates ;};var _dgcba error ;for _eacc :=_ebeca [0];_eacc !=nil &&!_ebbeg .CertClient .IsCA (_eacc );{_gfbde ,_fdbae :=_egdfe [_eacc .Issuer .CommonName ];if !_fdbae {if _gfbde ,_dgcba =_ebbeg .CertClient .GetIssuer (_eacc );_dgcba !=nil {_fa .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_dgcba );break ;};_egdfe [_eacc .Issuer .CommonName ]=_gfbde ;_ebeca =append (_ebeca ,_gfbde );};_eacc =_gfbde ;};return _ebeca ,_egdfe ,nil ;};func (_adfe *PdfReader )newPdfAnnotationFreeTextFromDict (_dcb *_gcb .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_ffgd :=PdfAnnotationFreeText {};_cdee ,_ffb :=_adfe .newPdfAnnotationMarkupFromDict (_dcb );if _ffb !=nil {return nil ,_ffb ;};_ffgd .PdfAnnotationMarkup =_cdee ;_ffgd .DA =_dcb .Get ("\u0044\u0041");_ffgd .Q =_dcb .Get ("\u0051");_ffgd .RC =_dcb .Get ("\u0052\u0043");_ffgd .DS =_dcb .Get ("\u0044\u0053");_ffgd .CL =_dcb .Get ("\u0043\u004c");_ffgd .IT =_dcb .Get ("\u0049\u0054");_ffgd .BE =_dcb .Get ("\u0042\u0045");_ffgd .RD =_dcb .Get ("\u0052\u0044");_ffgd .BS =_dcb .Get ("\u0042\u0053");_ffgd .LE =_dcb .Get ("\u004c\u0045");return &_ffgd ,nil ;};func (_fagga *PdfReader )buildOutlineTree (_dcabeg _gcb .PdfObject ,_gfddb *PdfOutlineTreeNode ,_bbde *PdfOutlineTreeNode ,_cdafgc map[_gcb .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _cdafgc ==nil {_cdafgc =map[_gcb .PdfObject ]struct{}{};};_cdafgc [_dcabeg ]=struct{}{};_adcg ,_dafb :=_dcabeg .(*_gcb .PdfIndirectObject );if !_dafb {return nil ,nil ,_e .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_dcabeg );};_fadae ,_fbea :=_adcg .PdfObject .(*_gcb .PdfObjectDictionary );if !_fbea {return nil ,nil ,_fb .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fa .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_fadae ,_adcg ,_adcg );if _fgfg :=_fadae .Get ("\u0054\u0069\u0074l\u0065");_fgfg !=nil {_baag ,_ddcgf :=_fagga .newPdfOutlineItemFromIndirectObject (_adcg );if _ddcgf !=nil {return nil ,nil ,_ddcgf ;};_baag .Parent =_gfddb ;_baag .Prev =_bbde ;_bfbcc :=_gcb .ResolveReference (_fadae .Get ("\u0046\u0069\u0072s\u0074"));if _ ,_bbgaa :=_cdafgc [_bfbcc ];_bfbcc !=nil &&_bfbcc !=_adcg &&!_bbgaa {if !_gcb .IsNullObject (_bfbcc ){_egbcbe ,_dadbd ,_ffbb :=_fagga .buildOutlineTree (_bfbcc ,&_baag .PdfOutlineTreeNode ,nil ,_cdafgc );if _ffbb !=nil {_fa .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_ffbb );}else {_baag .First =_egbcbe ;_baag .Last =_dadbd ;};};};_eecfb :=_gcb .ResolveReference (_fadae .Get ("\u004e\u0065\u0078\u0074"));if _ ,_aaddd :=_cdafgc [_eecfb ];_eecfb !=nil &&_eecfb !=_adcg &&!_aaddd {if !_gcb .IsNullObject (_eecfb ){_aedbbc ,_deab ,_bgfaf :=_fagga .buildOutlineTree (_eecfb ,_gfddb ,&_baag .PdfOutlineTreeNode ,_cdafgc );if _bgfaf !=nil {_fa .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_bgfaf );}else {_baag .Next =_aedbbc ;return &_baag .PdfOutlineTreeNode ,_deab ,nil ;};};};return &_baag .PdfOutlineTreeNode ,&_baag .PdfOutlineTreeNode ,nil ;};_dcbgg ,_ddafg :=_cdbg (_adcg );if _ddafg !=nil {return nil ,nil ,_ddafg ;};_dcbgg .Parent =_gfddb ;if _eeacf :=_fadae .Get ("\u0046\u0069\u0072s\u0074");_eeacf !=nil {_eeacf =_gcb .ResolveReference (_eeacf );if _ ,_ggcce :=_cdafgc [_eeacf ];_eeacf !=nil &&_eeacf !=_adcg &&!_ggcce {_deefe :=_gcb .TraceToDirectObject (_eeacf );if _ ,_acbd :=_deefe .(*_gcb .PdfObjectNull );!_acbd &&_deefe !=nil {_gagdc ,_aeca ,_bcggb :=_fagga .buildOutlineTree (_eeacf ,&_dcbgg .PdfOutlineTreeNode ,nil ,_cdafgc );if _bcggb !=nil {_fa .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_bcggb );}else {_dcbgg .First =_gagdc ;_dcbgg .Last =_aeca ;};};};};return &_dcbgg .PdfOutlineTreeNode ,&_dcbgg .PdfOutlineTreeNode ,nil ;};

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_fgbe *PdfOutlineTreeNode )GetContainingPdfObject ()_gcb .PdfObject {return _fgbe .GetContext ().GetContainingPdfObject ();};func (_acgec *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};

// B returns the value of the B component of the color.
func (_ccffd *PdfColorLab )B ()float64 {return _ccffd [2]};

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _gcb .StreamEncoder )(*XObjectImage ,error ){_cbbca :=NewXObjectImage ();return UpdateXObjectImageFromImage (_cbbca ,img ,cs ,encoder );};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_cag :=NewPdfAnnotation ();_cagf :=&PdfAnnotationCaret {};_cagf .PdfAnnotation =_cag ;_cagf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cag .SetContext (_cagf );return _cagf ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_efddab *PdfShadingType2 )ToPdfObject ()_gcb .PdfObject {_efddab .PdfShading .ToPdfObject ();_dgga ,_agefg :=_efddab .getShadingDict ();if _agefg !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _dgga ==nil {_fa .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _efddab .Coords !=nil {_dgga .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_efddab .Coords );};if _efddab .Domain !=nil {_dgga .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_efddab .Domain );};if _efddab .Function !=nil {if len (_efddab .Function )==1{_dgga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_efddab .Function [0].ToPdfObject ());}else {_cafga :=_gcb .MakeArray ();for _ ,_faadg :=range _efddab .Function {_cafga .Append (_faadg .ToPdfObject ());};_dgga .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cafga );};};if _efddab .Extend !=nil {_dgga .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_efddab .Extend );};return _efddab ._bgcgd ;};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_agcd :=&PdfAnnotation {};_agcd ._dgc =_gcb .MakeIndirectObject (_gcb .MakeDict ());return _agcd ;};

// ToPdfObject converts the font to a PDF representation.
func (_agef *pdfFontType0 )ToPdfObject ()_gcb .PdfObject {if _agef ._dccc ==nil {_agef ._dccc =&_gcb .PdfIndirectObject {};};_ecga :=_agef .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_agef ._dccc .PdfObject =_ecga ;if _agef .Encoding !=nil {_ecga .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_agef .Encoding );}else if _agef ._bggef !=nil {_ecga .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_agef ._bggef .ToPdfObject ());};if _agef .DescendantFont !=nil {_ecga .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_gcb .MakeArray (_agef .DescendantFont .ToPdfObject ()));};return _agef ._dccc ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_be :=NewPdfAction ();_bag :=&PdfActionHide {};_bag .PdfAction =_be ;_be .SetContext (_bag );return _bag ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_bccec *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_gcb .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfde ,_agda :=_gcb .GetNumbersAsFloat (objects );if _agda !=nil {return nil ,_agda ;};return _bccec .ColorFromFloats (_cfde );};

// ToPdfObject implements interface PdfModel.
func (_fdcc *PdfAnnotationFreeText )ToPdfObject ()_gcb .PdfObject {_fdcc .PdfAnnotation .ToPdfObject ();_eabf :=_fdcc ._dgc ;_bdde :=_eabf .PdfObject .(*_gcb .PdfObjectDictionary );_fdcc .PdfAnnotationMarkup .appendToPdfDictionary (_bdde );_bdde .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));_bdde .SetIfNotNil ("\u0044\u0041",_fdcc .DA );_bdde .SetIfNotNil ("\u0051",_fdcc .Q );_bdde .SetIfNotNil ("\u0052\u0043",_fdcc .RC );_bdde .SetIfNotNil ("\u0044\u0053",_fdcc .DS );_bdde .SetIfNotNil ("\u0043\u004c",_fdcc .CL );_bdde .SetIfNotNil ("\u0049\u0054",_fdcc .IT );_bdde .SetIfNotNil ("\u0042\u0045",_fdcc .BE );_bdde .SetIfNotNil ("\u0052\u0044",_fdcc .RD );_bdde .SetIfNotNil ("\u0042\u0053",_fdcc .BS );_bdde .SetIfNotNil ("\u004c\u0045",_fdcc .LE );return _eabf ;};func (_bgad *PdfReader )newPdfAnnotationSquigglyFromDict (_cbfc *_gcb .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_cgea :=PdfAnnotationSquiggly {};_fff ,_deca :=_bgad .newPdfAnnotationMarkupFromDict (_cbfc );if _deca !=nil {return nil ,_deca ;};_cgea .PdfAnnotationMarkup =_fff ;_cgea .QuadPoints =_cbfc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_cgea ,nil ;};

// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _gcb .PdfObject ;Name _gcb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_bcg *PdfAnnotationWidget )ToPdfObject ()_gcb .PdfObject {_bcg .PdfAnnotation .ToPdfObject ();_bdeb :=_bcg ._dgc ;_cbb :=_bdeb .PdfObject .(*_gcb .PdfObjectDictionary );if _bcg ._abc {return _bdeb ;};_bcg ._abc =true ;_cbb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));_cbb .SetIfNotNil ("\u0048",_bcg .H );_cbb .SetIfNotNil ("\u004d\u004b",_bcg .MK );_cbb .SetIfNotNil ("\u0041",_bcg .A );_cbb .SetIfNotNil ("\u0041\u0041",_bcg .AA );_cbb .SetIfNotNil ("\u0042\u0053",_bcg .BS );_dbac :=_bcg .Parent ;if _bcg ._fgb !=nil {if _bcg ._fgb ._gcf ==_bcg ._dgc {_bcg ._fgb .ToPdfObject ();};_dbac =_bcg ._fgb .GetContainingPdfObject ();};if _dbac !=_bdeb {_cbb .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dbac );};_bcg ._abc =false ;return _bdeb ;};func _gacfb (_afcgf *_gcb .PdfObjectDictionary )(*PdfTilingPattern ,error ){_fbaad :=&PdfTilingPattern {};_febbd :=_afcgf .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _febbd ==nil {_fa .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cbdccf ,_fbcc :=_febbd .(*_gcb .PdfObjectInteger );if !_fbcc {_fa .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_febbd );return nil ,_gcb .ErrTypeError ;};_fbaad .PaintType =_cbdccf ;_febbd =_afcgf .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _febbd ==nil {_fa .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ffbc ,_fbcc :=_febbd .(*_gcb .PdfObjectInteger );if !_fbcc {_fa .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_febbd );return nil ,_gcb .ErrTypeError ;};_fbaad .TilingType =_ffbc ;_febbd =_afcgf .Get ("\u0042\u0042\u006f\u0078");if _febbd ==nil {_fa .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_febbd =_gcb .TraceToDirectObject (_febbd );_adafd ,_fbcc :=_febbd .(*_gcb .PdfObjectArray );if !_fbcc {_fa .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_febbd );return nil ,_gcb .ErrTypeError ;};_dcefe ,_gfgf :=NewPdfRectangle (*_adafd );if _gfgf !=nil {_fa .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_gfgf );return nil ,_gfgf ;};_fbaad .BBox =_dcefe ;_febbd =_afcgf .Get ("\u0058\u0053\u0074e\u0070");if _febbd ==nil {_fa .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_beffb ,_gfgf :=_gcb .GetNumberAsFloat (_febbd );if _gfgf !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_beffb );return nil ,_gfgf ;};_fbaad .XStep =_gcb .MakeFloat (_beffb );_febbd =_afcgf .Get ("\u0059\u0053\u0074e\u0070");if _febbd ==nil {_fa .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_feebf ,_gfgf :=_gcb .GetNumberAsFloat (_febbd );if _gfgf !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_feebf );return nil ,_gfgf ;};_fbaad .YStep =_gcb .MakeFloat (_feebf );_febbd =_afcgf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _febbd ==nil {_fa .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_afcgf ,_fbcc =_gcb .TraceToDirectObject (_febbd ).(*_gcb .PdfObjectDictionary );if !_fbcc {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_febbd );};_bgea ,_gfgf :=NewPdfPageResourcesFromDict (_afcgf );if _gfgf !=nil {return nil ,_gfgf ;};_fbaad .Resources =_bgea ;if _gbegd :=_afcgf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_gbegd !=nil {_bgfgb ,_edge :=_gbegd .(*_gcb .PdfObjectArray );if !_edge {_fa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gbegd );return nil ,_gcb .ErrTypeError ;};_fbaad .Matrix =_bgfgb ;};return _fbaad ,nil ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_bcgd ,_fbeg :=NewStandard14Font (basefont );if _fbeg !=nil {panic (_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));};return _bcgd ;};

// GetContainingPdfObject implements interface PdfModel.
func (_cebeb *PdfFilespec )GetContainingPdfObject ()_gcb .PdfObject {return _cebeb ._afgd };

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_fddac *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _accdc []_dee .TextEncoder ;if _fcfea :=_fddac .baseFields ()._gccbc ;_fcfea !=nil {_accdc =append (_accdc ,_dee .NewCMapEncoder ("",nil ,_fcfea ));};if _dbeea :=_fddac .Encoder ();_dbeea !=nil {_accdc =append (_accdc ,_dbeea );};var _bedg _ga .Buffer ;var _egdg int ;for _ ,_cegea :=range data {var _bdgc bool ;for _ ,_cdaf :=range _accdc {if _fcea :=_cdaf .Encode (string (_cegea ));len (_fcea )> 0{_bedg .Write (_fcea );_bdgc =true ;break ;};};if !_bdgc {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_cegea );_egdg ++;};};if _egdg !=0{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_egdg ,_fddac ,_accdc );};return _bedg .Bytes (),_egdg ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_fcfa *PdfPageResources )HasColorspaceByName (keyName _gcb .PdfObjectName )bool {_acfd ,_cbgb :=_fcfa .GetColorspaces ();if _cbgb !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_cbgb );return false ;};if _acfd ==nil {return false ;};_ ,_gcfb :=_acfd .Colorspaces [string (keyName )];return _gcfb ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_bede *PdfShadingType7 )ToPdfObject ()_gcb .PdfObject {_bede .PdfShading .ToPdfObject ();_afadd ,_fbeaf :=_bede .getShadingDict ();if _fbeaf !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _bede .BitsPerCoordinate !=nil {_afadd .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_bede .BitsPerCoordinate );};if _bede .BitsPerComponent !=nil {_afadd .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bede .BitsPerComponent );};if _bede .BitsPerFlag !=nil {_afadd .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_bede .BitsPerFlag );};if _bede .Decode !=nil {_afadd .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_bede .Decode );};if _bede .Function !=nil {if len (_bede .Function )==1{_afadd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bede .Function [0].ToPdfObject ());}else {_fdeca :=_gcb .MakeArray ();for _ ,_agfg :=range _bede .Function {_fdeca .Append (_agfg .ToPdfObject ());};_afadd .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fdeca );};};return _bede ._bgcgd ;};

// Write writes out the PDF.
func (_dfgc *PdfWriter )Write (writer _dfb .Writer )error {_fa .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_afeac :=_ccg .GetLicenseKey ();if (_afeac ==nil ||!_afeac .IsLicensed ())&&!_gbbbg {_e .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");_e .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");return _fb .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};if _dfgc ._dgfce !=nil {_fa .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_dfgc ._dgfce );_gada :=_dfgc ._dgfce .ToPdfObject ();_fa .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_gada ,_gada ,_gada );_dfgc ._gfdbe .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_gada );_dgcgg :=_dfgc .addObjects (_gada );if _dgcgg !=nil {return _dgcgg ;};};if _dfgc ._gacc !=nil {_fa .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");_beeegg :=_dfgc ._gacc .ToPdfObject ();_fa .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_beeegg );_dfgc ._gfdbe .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_beeegg );_eedcf :=_dfgc .addObjects (_beeegg );if _eedcf !=nil {return _eedcf ;};};for _eadef ,_bafab :=range _dfgc ._dbeg {if !_dfgc .hasObject (_eadef ){_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_eadef ,_eadef ,_eadef );for _ ,_cffd :=range _bafab {for _ ,_efefg :=range _cffd .Keys (){_fgedca :=_cffd .Get (_efefg );if _fgedca ==_eadef {_fa .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");_cffd .Set (_efefg ,_gcb .MakeNull ());break ;};};};};};_dfgc ._gfdbe .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_gcb .MakeName (_e .Sprintf ("\u0025\u0064\u002e%\u0064",_dfgc ._fdfdg ,_dfgc ._geadf )));_dfgc .copyObjects ();if _dfgc ._dcdaa !=nil {var _fbdag error ;_dfgc ._dfeee ,_fbdag =_dfgc ._dcdaa .Optimize (_dfgc ._dfeee );if _fbdag !=nil {return _fbdag ;};_bfbca :=make (map[_gcb .PdfObject ]struct{},len (_dfgc ._dfeee ));for _ ,_bddaf :=range _dfgc ._dfeee {_bfbca [_bddaf ]=struct{}{};};_dfgc ._cbgdbf =_bfbca ;};_dfgc ._ggecf =_dfgc ._cebfg ;_dfgc ._adfb =_bg .NewWriter (writer );_cdggf :=_dfgc ._fdfdg > 1||(_dfgc ._fdfdg ==1&&_dfgc ._geadf > 4);if _dfgc ._fcedd !=nil {_cdggf =*_dfgc ._fcedd ;};_dcceff :=make (map[_gcb .PdfObject ]bool );for _ ,_eccbg :=range _dfgc ._dfeee {if _cbgaa ,_aefcea :=_eccbg .(*_gcb .PdfObjectStreams );_aefcea {_cdggf =true ;for _ ,_cfegag :=range _cbgaa .Elements (){_dcceff [_cfegag ]=true ;if _bbddc ,_affbf :=_cfegag .(*_gcb .PdfIndirectObject );_affbf {_dcceff [_bbddc .PdfObject ]=true ;};};};};if _cdggf &&_dfgc ._fdfdg ==1&&_dfgc ._geadf < 5{_dfgc ._geadf =5;};if _dfgc ._cbaca {_dfgc .writeString ("\u000a");}else {_dfgc .writeString (_e .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_dfgc ._fdfdg ,_dfgc ._geadf ));_dfgc .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};_dfgc .updateObjectNumbers ();_fa .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_dfgc ._dfeee ));_dfgc ._agbae =make (map[int ]crossReference );_dfgc ._agbae [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _dfgc ._afdda .ObjectMap !=nil {for _ffbbf ,_dagc :=range _dfgc ._afdda .ObjectMap {if _ffbbf ==0{continue ;};if _dagc .XType ==_gcb .XrefTypeObjectStream {_adfea :=crossReference {Type :2,ObjectNumber :_dagc .OsObjNumber ,Index :_dagc .OsObjIndex };_dfgc ._agbae [_ffbbf ]=_adfea ;};if _dagc .XType ==_gcb .XrefTypeTableEntry {_feeaa :=crossReference {Type :1,ObjectNumber :_dagc .ObjectNumber ,Offset :_dagc .Offset };_dfgc ._agbae [_ffbbf ]=_feeaa ;};};};for _ ,_efbdbb :=range _dfgc ._dfeee {if _cacde :=_dcceff [_efbdbb ];_cacde {continue ;};_debba :=int64 (0);switch _fbdgfg :=_efbdbb .(type ){case *_gcb .PdfIndirectObject :_debba =_fbdgfg .ObjectNumber ;case *_gcb .PdfObjectStream :_debba =_fbdgfg .ObjectNumber ;case *_gcb .PdfObjectStreams :_debba =_fbdgfg .ObjectNumber ;default:_fa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_efbdbb );return ErrTypeCheck ;};if _dfgc ._cfcgff !=nil &&_efbdbb !=_dfgc ._acgfg {_gabga :=_dfgc ._cfcgff .Encrypt (_efbdbb ,_debba ,0);if _gabga !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_gabga );return _gabga ;};};_dfgc .writeObject (int (_debba ),_efbdbb );};_ddbfeg :=_dfgc ._ggecf ;var _fagad int ;for _bfeda :=range _dfgc ._agbae {if _bfeda > _fagad {_fagad =_bfeda ;};};if _cdggf {_eeafc :=_fagad +1;_dfgc ._agbae [_eeafc ]=crossReference {Type :1,ObjectNumber :_eeafc ,Offset :_ddbfeg };_eedbg :=_ga .NewBuffer (nil );_bace :=_gcb .MakeArray ();for _gcbdf :=0;_gcbdf <=_fagad ;{for ;_gcbdf <=_fagad ;_gcbdf ++{_bfbe ,_dfdde :=_dfgc ._agbae [_gcbdf ];if _dfdde &&(!_dfgc ._cbaca ||_dfgc ._cbaca &&(_bfbe .Type ==1&&_bfbe .Offset >=_dfgc ._gdac ||_bfbe .Type ==0)){break ;};};var _bgeeb int ;for _bgeeb =_gcbdf +1;_bgeeb <=_fagad ;_bgeeb ++{_bfgec ,_cecd :=_dfgc ._agbae [_bgeeb ];if _cecd &&(!_dfgc ._cbaca ||_dfgc ._cbaca &&(_bfgec .Type ==1&&_bfgec .Offset > _dfgc ._gdac )){continue ;};break ;};_bace .Append (_gcb .MakeInteger (int64 (_gcbdf )),_gcb .MakeInteger (int64 (_bgeeb -_gcbdf )));for _bfgcb :=_gcbdf ;_bfgcb < _bgeeb ;_bfgcb ++{_cebg :=_dfgc ._agbae [_bfgcb ];switch _cebg .Type {case 0:_cc .Write (_eedbg ,_cc .BigEndian ,byte (0));_cc .Write (_eedbg ,_cc .BigEndian ,uint32 (0));_cc .Write (_eedbg ,_cc .BigEndian ,uint16 (0xFFFF));case 1:_cc .Write (_eedbg ,_cc .BigEndian ,byte (1));_cc .Write (_eedbg ,_cc .BigEndian ,uint32 (_cebg .Offset ));_cc .Write (_eedbg ,_cc .BigEndian ,uint16 (_cebg .Generation ));case 2:_cc .Write (_eedbg ,_cc .BigEndian ,byte (2));_cc .Write (_eedbg ,_cc .BigEndian ,uint32 (_cebg .ObjectNumber ));_cc .Write (_eedbg ,_cc .BigEndian ,uint16 (_cebg .Index ));};};_gcbdf =_bgeeb +1;};_aebfg ,_bcbbg :=_gcb .MakeStream (_eedbg .Bytes (),_gcb .NewFlateEncoder ());if _bcbbg !=nil {return _bcbbg ;};_aebfg .ObjectNumber =int64 (_eeafc );_aebfg .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_gcb .MakeName ("\u0058\u0052\u0065\u0066"));_aebfg .PdfObjectDictionary .Set ("\u0057",_gcb .MakeArray (_gcb .MakeInteger (1),_gcb .MakeInteger (4),_gcb .MakeInteger (2)));_aebfg .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_bace );_aebfg .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_gcb .MakeInteger (int64 (_eeafc +1)));_aebfg .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_dfgc ._ebag );_aebfg .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_dfgc ._dafgf );if _dfgc ._cbaca &&_dfgc ._afcce > 0{_aebfg .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_gcb .MakeInteger (_dfgc ._afcce ));};if _dfgc ._cfcgff !=nil {_aebfg .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_dfgc ._acgfg );_aebfg .Set ("\u0049\u0044",_dfgc ._bbdad );_fa .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_dfgc ._bbdad );};_dfgc .writeObject (int (_aebfg .ObjectNumber ),_aebfg );}else {_dfgc .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");for _aeggd :=0;_aeggd <=_fagad ;{for ;_aeggd <=_fagad ;_aeggd ++{_bgffd ,_ffbf :=_dfgc ._agbae [_aeggd ];if _ffbf &&(!_dfgc ._cbaca ||_dfgc ._cbaca &&(_bgffd .Type ==1&&_bgffd .Offset >=_dfgc ._gdac ||_bgffd .Type ==0)){break ;};};var _eggdg int ;for _eggdg =_aeggd +1;_eggdg <=_fagad ;_eggdg ++{_cbebe ,_eefab :=_dfgc ._agbae [_eggdg ];if _eefab &&(!_dfgc ._cbaca ||_dfgc ._cbaca &&(_cbebe .Type ==1&&_cbebe .Offset > _dfgc ._gdac )){continue ;};break ;};_adbb :=_e .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_aeggd ,_eggdg -_aeggd );_dfgc .writeString (_adbb );for _fdded :=_aeggd ;_fdded < _eggdg ;_fdded ++{_bgbea :=_dfgc ._agbae [_fdded ];switch _bgbea .Type {case 0:_adbb =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);_dfgc .writeString (_adbb );case 1:_adbb =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_bgbea .Offset ,0);_dfgc .writeString (_adbb );};};_aeggd =_eggdg +1;};_cabdg :=_gcb .MakeDict ();_cabdg .Set ("\u0049\u006e\u0066\u006f",_dfgc ._ebag );_cabdg .Set ("\u0052\u006f\u006f\u0074",_dfgc ._dafgf );_cabdg .Set ("\u0053\u0069\u007a\u0065",_gcb .MakeInteger (int64 (_fagad +1)));if _dfgc ._cbaca &&_dfgc ._afcce > 0{_cabdg .Set ("\u0050\u0072\u0065\u0076",_gcb .MakeInteger (_dfgc ._afcce ));};if _dfgc ._cfcgff !=nil {_cabdg .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_dfgc ._acgfg );_cabdg .Set ("\u0049\u0044",_dfgc ._bbdad );_fa .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_dfgc ._bbdad );};_dfgc .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_dfgc .writeString (_cabdg .WriteString ());_dfgc .writeString ("\u000a");};_cgbeg :=_e .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_ddbfeg );_dfgc .writeString (_cgbeg );_dfgc .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");if _dfgc ._gbfffa ==nil {_dfgc ._gbfffa =_dfgc ._adfb .Flush ();};return _dfgc ._gbfffa ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_ceaaf *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_gcb .PdfObject )(PdfColor ,error ){if _ceaaf .Alternate ==nil {if _ceaaf .N ==1{_fcbd :=NewPdfColorspaceDeviceGray ();return _fcbd .ColorFromPdfObjects (objects );}else if _ceaaf .N ==3{_cbcf :=NewPdfColorspaceDeviceRGB ();return _cbcf .ColorFromPdfObjects (objects );}else if _ceaaf .N ==4{_gabc :=NewPdfColorspaceDeviceCMYK ();return _gabc .ColorFromPdfObjects (objects );}else {return nil ,_fb .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _ceaaf .Alternate .ColorFromPdfObjects (objects );};func (_dbcf *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_dbcde :=map[rune ]int {};for _ ,_cgge :=range text {_dbcde [_cgge ]++;};return _dbcde ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_edgda *DSS )GetContainingPdfObject ()_gcb .PdfObject {return _edgda ._fdab };

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_effdc *PdfPage )ToPdfObject ()_gcb .PdfObject {_gaaf :=_effdc ._gdeac ;_effdc .GetPageDict ();return _gaaf ;};var _ pdfFont =(*pdfCIDFontType0 )(nil );

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_gcb .PdfObjectArray ;Domain *_gcb .PdfObjectArray ;Function []PdfFunction ;Extend *_gcb .PdfObjectArray ;};

// ToPdfObject implements interface PdfModel.
func (_bge *PdfAnnotationScreen )ToPdfObject ()_gcb .PdfObject {_bge .PdfAnnotation .ToPdfObject ();_ffgf :=_bge ._dgc ;_ceaa :=_ffgf .PdfObject .(*_gcb .PdfObjectDictionary );_ceaa .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));_ceaa .SetIfNotNil ("\u0054",_bge .T );_ceaa .SetIfNotNil ("\u004d\u004b",_bge .MK );_ceaa .SetIfNotNil ("\u0041",_bge .A );_ceaa .SetIfNotNil ("\u0041\u0041",_bge .AA );return _ffgf ;};func _dbda (_cggg *PdfField )[]*PdfField {_fabba :=[]*PdfField {_cggg };for _ ,_egeab :=range _cggg .Kids {_fabba =append (_fabba ,_dbda (_egeab )...);};return _fabba ;};

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_agfa *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};var _ pdfFont =(*pdfFontType0 )(nil );

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _gcb .StreamEncoder ;Intent _gcb .PdfObject ;ImageMask _gcb .PdfObject ;Mask _gcb .PdfObject ;Matte _gcb .PdfObject ;Decode _gcb .PdfObject ;Interpolate _gcb .PdfObject ;Alternatives _gcb .PdfObject ;SMask _gcb .PdfObject ;SMaskInData _gcb .PdfObject ;Name _gcb .PdfObject ;StructParent _gcb .PdfObject ;ID _gcb .PdfObject ;OPI _gcb .PdfObject ;Metadata _gcb .PdfObject ;OC _gcb .PdfObject ;Stream []byte ;_cacbc *_gcb .PdfObjectStream ;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_eea *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_dcfb :=&PdfColorspaceSpecialSeparation {};return _dcfb ;};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _gcb .PdfObject ;};

// Encrypt encrypts the output file with a specified user/owner password.
func (_acbg *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_dfagd :=RC4_128bit ;if options !=nil {_dfagd =options .Algorithm ;};_fffbee :=_fc .PermOwner ;if options !=nil {_fffbee =options .Permissions ;};var _deaca _bde .Filter ;switch _dfagd {case RC4_128bit :_deaca =_bde .NewFilterV2 (16);case AES_128bit :_deaca =_bde .NewFilterAESV2 ();case AES_256bit :_deaca =_bde .NewFilterAESV3 ();default:return _e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );};_acdgc ,_dccae ,_eebade :=_gcb .PdfCryptNewEncrypt (_deaca ,userPass ,ownerPass ,_fffbee );if _eebade !=nil {return _eebade ;};_acbg ._cfcgff =_acdgc ;if _dccae .Major !=0{_acbg .SetVersion (_dccae .Major ,_dccae .Minor );};_acbg ._abaga =_dccae .Encrypt ;_acbg ._bbdad =_gcb .MakeArray (_gcb .MakeHexString (_dccae .ID0 ),_gcb .MakeHexString (_dccae .ID1 ));_efeac :=_gcb .MakeIndirectObject (_dccae .Encrypt );_acbg ._acgfg =_efeac ;_acbg .addObject (_efeac );return nil ;};func _gcbga (_dfdfc _gcb .PdfObject )(*PdfColorspaceICCBased ,error ){_gacb :=&PdfColorspaceICCBased {};if _cfcgc ,_fbfb :=_dfdfc .(*_gcb .PdfIndirectObject );_fbfb {_gacb ._adbe =_cfcgc ;};_dfdfc =_gcb .TraceToDirectObject (_dfdfc );_bgbd ,_bead :=_dfdfc .(*_gcb .PdfObjectArray );if !_bead {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _bgbd .Len ()!=2{return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_dfdfc =_gcb .TraceToDirectObject (_bgbd .Get (0));_ecbf ,_bead :=_dfdfc .(*_gcb .PdfObjectName );if !_bead {return nil ,_e .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_ecbf !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_e .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_dfdfc =_bgbd .Get (1);_fggc ,_bead :=_gcb .GetStream (_dfdfc );if !_bead {_fa .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_dfdfc );return nil ,_e .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_eecg :=_fggc .PdfObjectDictionary ;_aggb ,_bead :=_eecg .Get ("\u004e").(*_gcb .PdfObjectInteger );if !_bead {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_aggb !=1&&*_aggb !=3&&*_aggb !=4{return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");};_gacb .N =int (*_aggb );if _ccfgb :=_eecg .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_ccfgb !=nil {_bade ,_debf :=NewPdfColorspaceFromPdfObject (_ccfgb );if _debf !=nil {return nil ,_debf ;};_gacb .Alternate =_bade ;};if _cdd :=_eecg .Get ("\u0052\u0061\u006eg\u0065");_cdd !=nil {_cdd =_gcb .TraceToDirectObject (_cdd );_dgbc ,_gdgd :=_cdd .(*_gcb .PdfObjectArray );if !_gdgd {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");};if _dgbc .Len ()!=2*_gacb .N {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");};_cccc ,_befg :=_dgbc .GetAsFloat64Slice ();if _befg !=nil {return nil ,_befg ;};_gacb .Range =_cccc ;}else {_gacb .Range =make ([]float64 ,2*_gacb .N );for _edcc :=0;_edcc < _gacb .N ;_edcc ++{_gacb .Range [2*_edcc ]=0.0;_gacb .Range [2*_edcc +1]=1.0;};};if _dddga :=_eecg .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_dddga !=nil {_beg ,_fbdaa :=_dddga .(*_gcb .PdfObjectStream );if !_fbdaa {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");};_gacb .Metadata =_beg ;};_eagec ,_adagf :=_gcb .DecodeStream (_fggc );if _adagf !=nil {return nil ,_adagf ;};_gacb .Data =_eagec ;_gacb ._fbfd =_fggc ;return _gacb ,nil ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_gacfcb *PdfPageResources )GetXObjectImageByName (keyName _gcb .PdfObjectName )(*XObjectImage ,error ){_dfgee ,_ddegf :=_gacfcb .GetXObjectByName (keyName );if _dfgee ==nil {return nil ,nil ;};if _ddegf !=XObjectTypeImage {return nil ,_fb .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");};_fbdb ,_ggede :=NewXObjectImageFromStream (_dfgee );if _ggede !=nil {return nil ,_ggede ;};return _fbdb ,nil ;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_geffb *PdfFont )SubsetRegistered ()error {switch _ggcba :=_geffb ._ffag .(type ){case *pdfFontType0 :_bfbg :=_ggcba .subsetRegistered ();if _bfbg !=nil {_fa .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_bfbg );return _bfbg ;};if _ggcba ._dccc !=nil {if _ggcba ._bggef !=nil {_ggcba ._bggef .ToPdfObject ();};_ggcba .ToPdfObject ();};default:_fa .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_ggcba );};return nil ;};func (_aaff *fontFile )parseASCIIPart (_fddc []byte )error {if len (_fddc )< 2||string (_fddc [:2])!="\u0025\u0021"{return _fb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");};_gcdad ,_degdb ,_efade :=_cace (_fddc );if _efade !=nil {return _efade ;};_efecg :=_dbag (_gcdad );_aaff ._dcfde =_efecg ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _aaff ._dcfde ==""{_fa .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");};if _degdb !=""{_gacfd ,_cbcff :=_eebgd (_degdb );if _cbcff !=nil {return _cbcff ;};_gbfff ,_cbcff :=_dee .NewCustomSimpleTextEncoder (_gacfd ,nil );if _cbcff !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_cbcff );return nil ;};_aaff ._dfda =_gbfff ;};return nil ;};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_dadf *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _dadf ._dfcc .(*PdfTilingPattern );};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _gcb .StreamEncoder ;FormType _gcb .PdfObject ;BBox _gcb .PdfObject ;Matrix _gcb .PdfObject ;Resources *PdfPageResources ;Group _gcb .PdfObject ;Ref _gcb .PdfObject ;MetaData _gcb .PdfObject ;PieceInfo _gcb .PdfObject ;LastModified _gcb .PdfObject ;StructParent _gcb .PdfObject ;StructParents _gcb .PdfObject ;OPI _gcb .PdfObject ;OC _gcb .PdfObject ;Name _gcb .PdfObject ;

// Stream data.
Stream []byte ;_cfadb *_gcb .PdfObjectStream ;};func _fggdf (_gbaa *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_gbaa }};func (_efgg *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _efgg ._efeb .GetCrypter ()!=nil &&!_efgg ._efeb .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_gfacg :=_efgg ._bgee ;_agea :=_gfacg .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _agea ==nil {return nil ,nil ;};_fa .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_dgfaa :=_gcb .ResolveReference (_agea );_fa .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_dgfaa );if _dddc :=_gcb .IsNullObject (_dgfaa );_dddc {_fa .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");return nil ,nil ;};_bfccb ,_fcee :=_dgfaa .(*_gcb .PdfIndirectObject );if !_fcee {if _ ,_daace :=_gcb .GetDict (_dgfaa );!_daace {_fa .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");return nil ,nil ;};_fa .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");_bfccb =_gcb .MakeIndirectObject (_dgfaa );};_gegg ,_fcee :=_bfccb .PdfObject .(*_gcb .PdfObjectDictionary );if !_fcee {return nil ,_fb .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");};_fa .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_gegg );_beeefe ,_ ,_cedgc :=_efgg .buildOutlineTree (_bfccb ,nil ,nil ,nil );if _cedgc !=nil {return nil ,_cedgc ;};_fa .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_beeefe );return _beeefe ,nil ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_baaec *PdfFieldButton )ToPdfObject ()_gcb .PdfObject {_baaec .PdfField .ToPdfObject ();_bcbgd :=_baaec ._gcf ;_bdfda :=_bcbgd .PdfObject .(*_gcb .PdfObjectDictionary );_bdfda .Set ("\u0046\u0054",_gcb .MakeName ("\u0042\u0074\u006e"));if _baaec .Opt !=nil {_bdfda .Set ("\u004f\u0070\u0074",_baaec .Opt );};return _bcbgd ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;};func _adgbe (_cefaf _gcb .PdfObject )(string ,error ){_cefaf =_gcb .TraceToDirectObject (_cefaf );switch _bgege :=_cefaf .(type ){case *_gcb .PdfObjectString :return _bgege .Str (),nil ;case *_gcb .PdfObjectStream :_bdfba ,_fbaeg :=_gcb .DecodeStream (_bgege );if _fbaeg !=nil {return "",_fbaeg ;};return string (_bdfba ),nil ;};return "",_e .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_cefaf );};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_fggaac *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _fggaac .MediaBox !=nil {return _fggaac .MediaBox ,nil ;};_cafef :=_fggaac .Parent ;for _cafef !=nil {_fecdf ,_bbgg :=_gcb .GetDict (_cafef );if !_bbgg {return nil ,_fb .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");};if _geeca :=_fecdf .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_geeca !=nil {_egbbb ,_adbeb :=_gcb .GetArray (_geeca );if !_adbeb {return nil ,_fb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");};_cfbdc ,_bbdab :=NewPdfRectangle (*_egbbb );if _bbdab !=nil {return nil ,_bbdab ;};return _cfbdc ,nil ;};_cafef =_fecdf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_fb .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");};func (_cdae *pdfFontSimple )baseFields ()*fontCommon {return &_cdae .fontCommon };func _beb (_bfdae _gcb .PdfObject )(*PdfColorspaceLab ,error ){_gdgeb :=NewPdfColorspaceLab ();if _bafa ,_bedf :=_bfdae .(*_gcb .PdfIndirectObject );_bedf {_gdgeb ._cbbf =_bafa ;};_bfdae =_gcb .TraceToDirectObject (_bfdae );_cegf ,_fgcb :=_bfdae .(*_gcb .PdfObjectArray );if !_fgcb {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cegf .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_bfdae =_gcb .TraceToDirectObject (_cegf .Get (0));_eeff ,_fgcb :=_bfdae .(*_gcb .PdfObjectName );if !_fgcb {return nil ,_e .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_eeff !="\u004c\u0061\u0062"{return nil ,_e .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");};_bfdae =_gcb .TraceToDirectObject (_cegf .Get (1));_gfeag ,_fgcb :=_bfdae .(*_gcb .PdfObjectDictionary );if !_fgcb {return nil ,_e .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");};_bfdae =_gfeag .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_bfdae =_gcb .TraceToDirectObject (_bfdae );_ffff ,_fgcb :=_bfdae .(*_gcb .PdfObjectArray );if !_fgcb {return nil ,_e .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");};if _ffff .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_gagb ,_ddec :=_ffff .GetAsFloat64Slice ();if _ddec !=nil {return nil ,_ddec ;};_gdgeb .WhitePoint =_gagb ;_bfdae =_gfeag .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _bfdae !=nil {_bfdae =_gcb .TraceToDirectObject (_bfdae );_badbb ,_aeee :=_bfdae .(*_gcb .PdfObjectArray );if !_aeee {return nil ,_e .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _badbb .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_fcde ,_bceb :=_badbb .GetAsFloat64Slice ();if _bceb !=nil {return nil ,_bceb ;};_gdgeb .BlackPoint =_fcde ;};_bfdae =_gfeag .Get ("\u0052\u0061\u006eg\u0065");if _bfdae !=nil {_bfdae =_gcb .TraceToDirectObject (_bfdae );_eedc ,_fdgfb :=_bfdae .(*_gcb .PdfObjectArray );if !_fdgfb {_fa .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_e .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _eedc .Len ()!=4{_fa .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_fbgea ,_dbacf :=_eedc .GetAsFloat64Slice ();if _dbacf !=nil {return nil ,_dbacf ;};_gdgeb .Range =_fbgea ;};return _gdgeb ,nil ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_efeb *_gcb .PdfParser ;_acgaa _gcb .PdfObject ;_fgddg *_gcb .PdfIndirectObject ;_eccdg *_gcb .PdfObjectDictionary ;_afcae []*_gcb .PdfIndirectObject ;PageList []*PdfPage ;_gagda int ;_bgee *_gcb .PdfObjectDictionary ;_egdd *PdfOutlineTreeNode ;AcroForm *PdfAcroForm ;DSS *DSS ;_ccdd *modelManager ;_dddfd bool ;_bacb map[_gcb .PdfObject ]struct{};_efddb _dfb .ReadSeeker ;};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_cbag *PdfField )Flags ()FieldFlag {var _baeebd FieldFlag ;_gcec ,_dgba :=_cbag .inherit (func (_caga *PdfField )bool {if _caga .Ff !=nil {_baeebd =FieldFlag (*_cbag .Ff );return true ;};return false ;});if _dgba !=nil {_fa .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_dgba );};if !_gcec {_fa .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _baeebd ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_gcb .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_gcb .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_gcb .PdfObjectBool ;_febdg PdfModel ;_bgcgd _gcb .PdfObject ;};

// ColorToRGB converts an Indexed color to an RGB color.
func (_adgd *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _adgd .Base ==nil {return nil ,_fb .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _adgd .Base .ColorToRGB (color );};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_dcgg *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_gcdfa :=_cg .NewReader (img .getBase ());_ebfg :=_efe .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._gaecf ,img ._gdeafd );_geceg :=_cg .NewWriter (_ebfg );_cecf :=_f .Pow (2,float64 (img .BitsPerComponent ))-1;_cfed :=_dcgg .GetNumComponents ();_cbad :=make ([]uint32 ,_cfed );_geabc :=make ([]float64 ,_cfed );for {_gdbd :=_gcdfa .ReadSamples (_cbad );if _gdbd ==_dfb .EOF {break ;}else if _gdbd !=nil {return img ,_gdbd ;};for _fggdg :=0;_fggdg < _cfed ;_fggdg ++{_bdagb :=float64 (_cbad [_fggdg ])/_cecf ;_geabc [_fggdg ]=_bdagb ;};_efac ,_gdbd :=_dcgg .TintTransform .Evaluate (_geabc );if _gdbd !=nil {return img ,_gdbd ;};for _ ,_ddgd :=range _efac {_ddgd =_f .Min (_f .Max (0,_ddgd ),1.0);if _gdbd =_geceg .WriteSample (uint32 (_ddgd *_cecf ));_gdbd !=nil {return img ,_gdbd ;};};};return _dcgg .AlternateSpace .ImageToRGB (_dddf (&_ebfg ));};func (_aeadc *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_af :=NewPdfAction ();_aac :=&PdfActionGoToR {};_aac .PdfAction =_af ;_af .SetContext (_aac );return _aac ;};

// SetAnnotations sets the annotations list.
func (_gegc *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_gegc ._eafecf =annotations };

// A returns the value of the A component of the color.
func (_afec *PdfColorLab )A ()float64 {return _afec [1]};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_efba *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gcb .PdfObject ;};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _gcb .PdfObject ;_eaca []byte ;_abad *_gcb .PdfIndirectObject ;};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_cdefbg *_gcb .PdfIndirectObject ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_gece :=NewPdfAnnotation ();_ddb :=&PdfAnnotationInk {};_ddb .PdfAnnotation =_gece ;_ddb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gece .SetContext (_ddb );return _ddb ;};func (_acga *pdfCIDFontType2 )baseFields ()*fontCommon {return &_acga .fontCommon };func (_bgfag *PdfPattern )getDict ()*_gcb .PdfObjectDictionary {if _cfefg ,_bfege :=_bgfag ._dabce .(*_gcb .PdfIndirectObject );_bfege {_aeaed ,_geeee :=_cfefg .PdfObject .(*_gcb .PdfObjectDictionary );if !_geeee {return nil ;};return _aeaed ;}else if _efgd ,_accfd :=_bgfag ._dabce .(*_gcb .PdfObjectStream );_accfd {return _efgd .PdfObjectDictionary ;}else {_fa .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_bgfag ._dabce );return nil ;};};func _abbf (_aaefa _gcb .PdfObject )(*PdfPattern ,error ){_gfgg :=&PdfPattern {};var _bbgdb *_gcb .PdfObjectDictionary ;if _dagbf ,_cgbef :=_gcb .GetIndirect (_aaefa );_cgbef {_gfgg ._dabce =_dagbf ;_afgc ,_abgf :=_dagbf .PdfObject .(*_gcb .PdfObjectDictionary );if !_abgf {_fa .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_dagbf .PdfObject );return nil ,_gcb .ErrTypeError ;};_bbgdb =_afgc ;}else if _bfdc ,_dgefc :=_gcb .GetStream (_aaefa );_dgefc {_gfgg ._dabce =_bfdc ;_bbgdb =_bfdc .PdfObjectDictionary ;}else {_fa .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_aaefa );return nil ,_gcb .ErrTypeError ;};_bdce :=_bbgdb .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _bdce ==nil {_fa .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");return nil ,ErrRequiredAttributeMissing ;};_fabe ,_begb :=_bdce .(*_gcb .PdfObjectInteger );if !_begb {_fa .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bdce );return nil ,_gcb .ErrTypeError ;};if *_fabe !=1&&*_fabe !=2{_fa .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_fabe );return nil ,_gcb .ErrRangeError ;};_gfgg .PatternType =int64 (*_fabe );switch *_fabe {case 1:_edfff ,_befgd :=_gacfb (_bbgdb );if _befgd !=nil {return nil ,_befgd ;};_edfff .PdfPattern =_gfgg ;_gfgg ._dfcc =_edfff ;return _gfgg ,nil ;case 2:_aaffg ,_bgddd :=_bdead (_bbgdb );if _bgddd !=nil {return nil ,_bgddd ;};_aaffg .PdfPattern =_gfgg ;_gfgg ._dfcc =_aaffg ;return _gfgg ,nil ;};return nil ,_fb .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_dgdc *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_fb .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");};_dafda ,_dafg :=_efe .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._gaecf ,img ._gdeafd );if _dafg !=nil {return img ,_dafg ;};_agbc ,_dafg :=_efe .GrayConverter .Convert (_dafda );if _dafg !=nil {return img ,_dafg ;};return _dddf (_agbc .Base ()),nil ;};

// ReplacePage replaces the original page to a new page.
func (_bbgf *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_ffee :=pageNum -1;for _baed :=range _bbgf ._accd {if _baed ==_ffee {_baee :=page .Duplicate ();_dgaef (_baee );_bbgf ._accd [_baed ]=_baee ;};};};func (_cgcbd *PdfReader )newPdfSignatureFromIndirect (_dbgfa *_gcb .PdfIndirectObject )(*PdfSignature ,error ){_cbgdb ,_fffed :=_dbgfa .PdfObject .(*_gcb .PdfObjectDictionary );if !_fffed {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,ErrTypeCheck ;};if _edfga ,_cdfbc :=_cgcbd ._ccdd .GetModelFromPrimitive (_dbgfa ).(*PdfSignature );_cdfbc {return _edfga ,nil ;};_aaagb :=&PdfSignature {};_aaagb ._gddgg =_dbgfa ;_aaagb .Type ,_ =_gcb .GetName (_cbgdb .Get ("\u0054\u0079\u0070\u0065"));_aaagb .Filter ,_fffed =_gcb .GetName (_cbgdb .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_fffed {_fa .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_aaagb .SubFilter ,_ =_gcb .GetName (_cbgdb .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_aaagb .Contents ,_fffed =_gcb .GetString (_cbgdb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_fffed {_fa .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrInvalidAttribute ;};_aaagb .Cert =_cbgdb .Get ("\u0043\u0065\u0072\u0074");_aaagb .ByteRange ,_ =_gcb .GetArray (_cbgdb .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));_aaagb .Reference ,_ =_gcb .GetArray (_cbgdb .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_aaagb .Changes ,_ =_gcb .GetArray (_cbgdb .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_aaagb .Name ,_ =_gcb .GetString (_cbgdb .Get ("\u004e\u0061\u006d\u0065"));_aaagb .M ,_ =_gcb .GetString (_cbgdb .Get ("\u004d"));_aaagb .Location ,_ =_gcb .GetString (_cbgdb .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));_aaagb .Reason ,_ =_gcb .GetString (_cbgdb .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_aaagb .ContactInfo ,_ =_gcb .GetString (_cbgdb .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_aaagb .R ,_ =_gcb .GetInt (_cbgdb .Get ("\u0052"));_aaagb .V ,_ =_gcb .GetInt (_cbgdb .Get ("\u0056"));_aaagb .PropBuild ,_ =_gcb .GetDict (_cbgdb .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_aaagb .PropAuthTime ,_ =_gcb .GetInt (_cbgdb .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));_aaagb .PropAuthType ,_ =_gcb .GetName (_cbgdb .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));return _aaagb ,nil ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_gfcf *PdfPageResources )HasXObjectByName (keyName _gcb .PdfObjectName )bool {_affdb ,_ :=_gfcf .GetXObjectByName (keyName );return _affdb !=nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_feaa *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_fa .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return nil ,_fb .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};func _aafaf (_egfa _gcb .PdfObject )(*PdfFunctionType2 ,error ){_gbdae :=&PdfFunctionType2 {};var _caaac *_gcb .PdfObjectDictionary ;if _dgbge ,_fcab :=_egfa .(*_gcb .PdfIndirectObject );_fcab {_gdfffb ,_cadf :=_dgbge .PdfObject .(*_gcb .PdfObjectDictionary );if !_cadf {return nil ,_fb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gbdae ._cdefbg =_dgbge ;_caaac =_gdfffb ;}else if _gabcc ,_gfdcadd :=_egfa .(*_gcb .PdfObjectDictionary );_gfdcadd {_caaac =_gabcc ;}else {return nil ,_fb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fa .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_caaac .String ());_eeegf ,_bcag :=_gcb .TraceToDirectObject (_caaac .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gcb .PdfObjectArray );if !_bcag {_fa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fb .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _eeegf .Len ()< 0||_eeegf .Len ()%2!=0{_fa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");return nil ,_fb .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_cggdc ,_cfdgf :=_eeegf .ToFloat64Array ();if _cfdgf !=nil {return nil ,_cfdgf ;};_gbdae .Domain =_cggdc ;_eeegf ,_bcag =_gcb .TraceToDirectObject (_caaac .Get ("\u0052\u0061\u006eg\u0065")).(*_gcb .PdfObjectArray );if _bcag {if _eeegf .Len ()< 0||_eeegf .Len ()%2!=0{return nil ,_fb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_aceaa ,_ffbg :=_eeegf .ToFloat64Array ();if _ffbg !=nil {return nil ,_ffbg ;};_gbdae .Range =_aceaa ;};_eeegf ,_bcag =_gcb .TraceToDirectObject (_caaac .Get ("\u0043\u0030")).(*_gcb .PdfObjectArray );if _bcag {_ceegeb ,_acee :=_eeegf .ToFloat64Array ();if _acee !=nil {return nil ,_acee ;};_gbdae .C0 =_ceegeb ;};_eeegf ,_bcag =_gcb .TraceToDirectObject (_caaac .Get ("\u0043\u0031")).(*_gcb .PdfObjectArray );if _bcag {_beggc ,_efedf :=_eeegf .ToFloat64Array ();if _efedf !=nil {return nil ,_efedf ;};_gbdae .C1 =_beggc ;};if len (_gbdae .C0 )!=len (_gbdae .C1 ){_fa .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");return nil ,_gcb .ErrRangeError ;};N ,_cfdgf :=_gcb .GetNumberAsFloat (_gcb .TraceToDirectObject (_caaac .Get ("\u004e")));if _cfdgf !=nil {_fa .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_caaac .String ());return nil ,_cfdgf ;};_gbdae .N =N ;return _gbdae ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_dcbb *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _dcbb .UnderlyingCS ==nil {return nil ,_fb .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");};return _dcbb .UnderlyingCS .ColorFromFloats (vals );};

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_gccda *PdfOutlineItem )GetContainingPdfObject ()_gcb .PdfObject {return _gccda ._ccfec };

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_fdda FieldFlag )Has (fl FieldFlag )bool {return (_fdda .Mask ()&fl .Mask ())> 0};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_dafd _dfb .ReadSeeker ;_cgda *_gcb .PdfParser ;_ggde *PdfReader ;Reader *PdfReader ;_accd []*PdfPage ;_gbed *PdfAcroForm ;_gce *DSS ;_acfb _gcb .XrefTable ;_defc int64 ;_aagf int ;_efec []_gcb .PdfObject ;_dea map[_gcb .PdfObject ]struct{};_bbdc map[_gcb .PdfObject ]int64 ;_fdbag map[_gcb .PdfObject ]struct{};_dfde map[_gcb .PdfObject ]struct{};_aggda int64 ;_cgeab bool ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_babf _dfb .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_fdfb _a .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_bbgeb _a .Image )(*Image ,error );

// Compress an image.
Compress (_caff *Image ,_dcad int64 )(*Image ,error );};func _ggbca (_caggb *_gcb .PdfObjectDictionary )(*PdfShadingType6 ,error ){_fdfbb :=PdfShadingType6 {};_ebdg :=_caggb .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _ebdg ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_aafef ,_gcaaf :=_ebdg .(*_gcb .PdfObjectInteger );if !_gcaaf {_fa .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ebdg );return nil ,_gcb .ErrTypeError ;};_fdfbb .BitsPerCoordinate =_aafef ;_ebdg =_caggb .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ebdg ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_aafef ,_gcaaf =_ebdg .(*_gcb .PdfObjectInteger );if !_gcaaf {_fa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ebdg );return nil ,_gcb .ErrTypeError ;};_fdfbb .BitsPerComponent =_aafef ;_ebdg =_caggb .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _ebdg ==nil {_fa .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_aafef ,_gcaaf =_ebdg .(*_gcb .PdfObjectInteger );if !_gcaaf {_fa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ebdg );return nil ,_gcb .ErrTypeError ;};_fdfbb .BitsPerComponent =_aafef ;_ebdg =_caggb .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ebdg ==nil {_fa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_aagec ,_gcaaf :=_ebdg .(*_gcb .PdfObjectArray );if !_gcaaf {_fa .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ebdg );return nil ,_gcb .ErrTypeError ;};_fdfbb .Decode =_aagec ;if _cbbgb :=_caggb .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_cbbgb !=nil {_fdfbb .Function =[]PdfFunction {};if _cbeed ,_gcaec :=_cbbgb .(*_gcb .PdfObjectArray );_gcaec {for _ ,_dcacd :=range _cbeed .Elements (){_gcgcgc ,_deac :=_gaeabb (_dcacd );if _deac !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_deac );return nil ,_deac ;};_fdfbb .Function =append (_fdfbb .Function ,_gcgcgc );};}else {_dadebb ,_fdedb :=_gaeabb (_cbbgb );if _fdedb !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fdedb );return nil ,_fdedb ;};_fdfbb .Function =append (_fdfbb .Function ,_dadebb );};};return &_fdfbb ,nil ;};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_gced *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cebef pdfCIDFontType0 )GetRuneMetrics (r rune )(_aa .CharMetrics ,bool ){return _aa .CharMetrics {Wx :_cebef ._ggfdb },true ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_bacb :map[_gcb .PdfObject ]struct{}{},_ccdd :_ecgeb (),_efeb :_gcb .NewParserFromString (txt )};};func (_gdc *PdfReader )newPdfAnnotationRedactFromDict (_gcaa *_gcb .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_fbba :=PdfAnnotationRedact {};_gdfe ,_fdb :=_gdc .newPdfAnnotationMarkupFromDict (_gcaa );if _fdb !=nil {return nil ,_fdb ;};_fbba .PdfAnnotationMarkup =_gdfe ;_fbba .QuadPoints =_gcaa .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_fbba .IC =_gcaa .Get ("\u0049\u0043");_fbba .RO =_gcaa .Get ("\u0052\u004f");_fbba .OverlayText =_gcaa .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");_fbba .Repeat =_gcaa .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_fbba .DA =_gcaa .Get ("\u0044\u0041");_fbba .Q =_gcaa .Get ("\u0051");return &_fbba ,nil ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_bbef *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _gcb .GetNumberAsFloat (_bbef .Ascent );};func (_adedb *PdfReader )newPdfFieldSignatureFromDict (_eeeg *_gcb .PdfObjectDictionary )(*PdfFieldSignature ,error ){_eada :=&PdfFieldSignature {};_fdbab ,_fbbe :=_gcb .GetIndirect (_eeeg .Get ("\u0056"));if _fbbe {var _fabb error ;_eada .V ,_fabb =_adedb .newPdfSignatureFromIndirect (_fdbab );if _fabb !=nil {return nil ,_fabb ;};};_eada .Lock ,_ =_gcb .GetIndirect (_eeeg .Get ("\u004c\u006f\u0063\u006b"));_eada .SV ,_ =_gcb .GetIndirect (_eeeg .Get ("\u0053\u0056"));return _eada ,nil ;};func (_bcfd *PdfWriter )copyObjects (){_dcabc :=make (map[_gcb .PdfObject ]_gcb .PdfObject );_ebdc :=make ([]_gcb .PdfObject ,0,len (_bcfd ._dfeee ));_abbc :=make (map[_gcb .PdfObject ]struct{},len (_bcfd ._dfeee ));_becag :=make (map[_gcb .PdfObject ]struct{});for _ ,_aebe :=range _bcfd ._dfeee {_aefge :=_bcfd .copyObject (_aebe ,_dcabc ,_becag ,false );if _ ,_ddbe :=_becag [_aebe ];_ddbe {continue ;};_ebdc =append (_ebdc ,_aefge );_abbc [_aefge ]=struct{}{};};_bcfd ._dfeee =_ebdc ;_bcfd ._cbgdbf =_abbc ;_bcfd ._ebag =_bcfd .copyObject (_bcfd ._ebag ,_dcabc ,nil ,false ).(*_gcb .PdfIndirectObject );_bcfd ._dafgf =_bcfd .copyObject (_bcfd ._dafgf ,_dcabc ,nil ,false ).(*_gcb .PdfIndirectObject );if _bcfd ._acgfg !=nil {_bcfd ._acgfg =_bcfd .copyObject (_bcfd ._acgfg ,_dcabc ,nil ,false ).(*_gcb .PdfIndirectObject );};if _bcfd ._cbaca {_caacf :=make (map[_gcb .PdfObject ]int64 );for _egbd ,_caafd :=range _bcfd ._cdbgf {if _adac ,_eebfa :=_dcabc [_egbd ];_eebfa {_caacf [_adac ]=_caafd ;}else {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");};};_bcfd ._cdbgf =_caacf ;};};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_faafc ,_fbdge :=_gc .Open (filePath );if _fbdge !=nil {_fa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_fbdge );return nil ,_fbdge ;};defer _faafc .Close ();return NewCompositePdfFontFromTTF (_faafc );};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_fcbf *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_ddaf :=_cg .NewReader (img .getBase ());_cdfc :=_efe .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_agdg :=_cg .NewWriter (_cdfc );_bfefc :=_f .Pow (2,float64 (img .BitsPerComponent ))-1;_dgbef :=make ([]uint32 ,3);var (_dgdf error ;_agga ,_aegg ,_cecggf ,_bdgd ,_gdae ,_acff float64 ;);for {_dgdf =_ddaf .ReadSamples (_dgbef );if _dgdf ==_dfb .EOF {break ;}else if _dgdf !=nil {return img ,_dgdf ;};_agga =float64 (_dgbef [0])/_bfefc ;_aegg =float64 (_dgbef [1])/_bfefc ;_cecggf =float64 (_dgbef [2])/_bfefc ;_bdgd =_fcbf .Matrix [0]*_f .Pow (_agga ,_fcbf .Gamma [0])+_fcbf .Matrix [3]*_f .Pow (_aegg ,_fcbf .Gamma [1])+_fcbf .Matrix [6]*_f .Pow (_cecggf ,_fcbf .Gamma [2]);_gdae =_fcbf .Matrix [1]*_f .Pow (_agga ,_fcbf .Gamma [0])+_fcbf .Matrix [4]*_f .Pow (_aegg ,_fcbf .Gamma [1])+_fcbf .Matrix [7]*_f .Pow (_cecggf ,_fcbf .Gamma [2]);_acff =_fcbf .Matrix [2]*_f .Pow (_agga ,_fcbf .Gamma [0])+_fcbf .Matrix [5]*_f .Pow (_aegg ,_fcbf .Gamma [1])+_fcbf .Matrix [8]*_f .Pow (_cecggf ,_fcbf .Gamma [2]);_agga =3.240479*_bdgd +-1.537150*_gdae +-0.498535*_acff ;_aegg =-0.969256*_bdgd +1.875992*_gdae +0.041556*_acff ;_cecggf =0.055648*_bdgd +-0.204043*_gdae +1.057311*_acff ;_agga =_f .Min (_f .Max (_agga ,0),1.0);_aegg =_f .Min (_f .Max (_aegg ,0),1.0);_cecggf =_f .Min (_f .Max (_cecggf ,0),1.0);_dgbef [0]=uint32 (_agga *_bfefc );_dgbef [1]=uint32 (_aegg *_bfefc );_dgbef [2]=uint32 (_cecggf *_bfefc );if _dgdf =_agdg .WriteSamples (_dgbef );_dgdf !=nil {return img ,_dgdf ;};};return _dddf (&_cdfc ),nil ;};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_ddbc *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _ddbc .Alternate ==nil {_fa .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");if _ddbc .N ==1{_fa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");_dgdcd :=NewPdfColorspaceDeviceGray ();return _dgdcd .ImageToRGB (img );}else if _ddbc .N ==3{_fa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");return img ,nil ;}else if _ddbc .N ==4{_fa .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");_ecddb :=NewPdfColorspaceDeviceCMYK ();return _ecddb .ImageToRGB (img );}else {return img ,_fb .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};_fa .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_ddbc );_fcfc ,_ffefd :=_ddbc .Alternate .ImageToRGB (img );_fa .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_fa .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_fcfc );return _fcfc ,_ffefd ;};func _ggaea (_befec *_gcb .PdfObjectDictionary )(*PdfShadingType3 ,error ){_egad :=PdfShadingType3 {};_efefec :=_befec .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _efefec ==nil {_fa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");return nil ,ErrRequiredAttributeMissing ;};_gcdba ,_fgddc :=_efefec .(*_gcb .PdfObjectArray );if !_fgddc {_fa .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_efefec );return nil ,_gcb .ErrTypeError ;};if _gcdba .Len ()!=6{_fa .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_gcdba .Len ());return nil ,ErrInvalidAttribute ;};_egad .Coords =_gcdba ;if _bebb :=_befec .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_bebb !=nil {_bebb =_gcb .TraceToDirectObject (_bebb );_cede ,_dacad :=_bebb .(*_gcb .PdfObjectArray );if !_dacad {_fa .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bebb );return nil ,_gcb .ErrTypeError ;};_egad .Domain =_cede ;};_efefec =_befec .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _efefec ==nil {_fa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_egad .Function =[]PdfFunction {};if _ffadg ,_ecfeag :=_efefec .(*_gcb .PdfObjectArray );_ecfeag {for _ ,_bdgab :=range _ffadg .Elements (){_egdgf ,_bdcg :=_gaeabb (_bdgab );if _bdcg !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bdcg );return nil ,_bdcg ;};_egad .Function =append (_egad .Function ,_egdgf );};}else {_feca ,_abagd :=_gaeabb (_efefec );if _abagd !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_abagd );return nil ,_abagd ;};_egad .Function =append (_egad .Function ,_feca );};if _egcaa :=_befec .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_egcaa !=nil {_egcaa =_gcb .TraceToDirectObject (_egcaa );_daeea ,_gcefa :=_egcaa .(*_gcb .PdfObjectArray );if !_gcefa {_fa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_egcaa );return nil ,_gcb .ErrTypeError ;};if _daeea .Len ()!=2{_fa .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_daeea .Len ());return nil ,ErrInvalidAttribute ;};_egad .Extend =_daeea ;};return &_egad ,nil ;};

// C returns the value of the cyan component of the color.
func (_dfef *PdfColorDeviceCMYK )C ()float64 {return _dfef [0]};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_dddce *PdfWriter )SetOptimizer (optimizer Optimizer ){_dddce ._dcdaa =optimizer };

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _gcb .PdfObject ;FS _gcb .PdfObject ;F _gcb .PdfObject ;UF _gcb .PdfObject ;DOS _gcb .PdfObject ;Mac _gcb .PdfObject ;Unix _gcb .PdfObject ;ID _gcb .PdfObject ;V _gcb .PdfObject ;EF _gcb .PdfObject ;RF _gcb .PdfObject ;Desc _gcb .PdfObject ;CI _gcb .PdfObject ;_afgd _gcb .PdfObject ;};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _gcb .PdfObjectName ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};func (_aebc *PdfReader )newPdfAnnotationMarkupFromDict (_dda *_gcb .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_caa :=&PdfAnnotationMarkup {};if _gdbf :=_dda .Get ("\u0054");_gdbf !=nil {_caa .T =_gdbf ;};if _fgg :=_dda .Get ("\u0050\u006f\u0070u\u0070");_fgg !=nil {_ceg ,_cff :=_fgg .(*_gcb .PdfIndirectObject );if !_cff {if _ ,_ecgg :=_fgg .(*_gcb .PdfObjectNull );!_ecgg {return nil ,_fb .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");};}else {_ceag ,_bfcd :=_aebc .newPdfAnnotationFromIndirectObject (_ceg );if _bfcd !=nil {return nil ,_bfcd ;};if _ceag !=nil {_egba ,_bfe :=_ceag ._gbad .(*PdfAnnotationPopup );if !_bfe {return nil ,_fb .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");};_caa .Popup =_egba ;};};};if _fcb :=_dda .Get ("\u0043\u0041");_fcb !=nil {_caa .CA =_fcb ;};if _gdba :=_dda .Get ("\u0052\u0043");_gdba !=nil {_caa .RC =_gdba ;};if _dfbc :=_dda .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");_dfbc !=nil {_caa .CreationDate =_dfbc ;};if _cccg :=_dda .Get ("\u0049\u0052\u0054");_cccg !=nil {_caa .IRT =_cccg ;};if _cade :=_dda .Get ("\u0053\u0075\u0062\u006a");_cade !=nil {_caa .Subj =_cade ;};if _ggfe :=_dda .Get ("\u0052\u0054");_ggfe !=nil {_caa .RT =_ggfe ;};if _cege :=_dda .Get ("\u0049\u0054");_cege !=nil {_caa .IT =_cege ;};if _eba :=_dda .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_eba !=nil {_caa .ExData =_eba ;};return _caa ,nil ;};var (_bfgga _eb .Mutex ;_bgdcc ="";_bffc _c .Time ;_daefc ="";_cfgbgg ="";_dbbd _c .Time ;_adddc ="";_ebbgb ="";_eacgb ="";);

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_ffgcg *_gcb .PdfIndirectObject ;};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_fbaaa *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {return _fbaaa .fill (provider ,appGen );};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _gcb .PdfObject ;BS _gcb .PdfObject ;LE _gcb .PdfObject ;IC _gcb .PdfObject ;LL _gcb .PdfObject ;LLE _gcb .PdfObject ;Cap _gcb .PdfObject ;IT _gcb .PdfObject ;LLO _gcb .PdfObject ;CP _gcb .PdfObject ;Measure _gcb .PdfObject ;CO _gcb .PdfObject ;};func (_bddf *PdfReader )flattenFieldsWithOpts (_ecddc bool ,_begg FieldAppearanceGenerator ,_bafc *FieldFlattenOpts )error {if _bafc ==nil {_bafc =&FieldFlattenOpts {};};var _cadaa bool ;_abdg :=map[*PdfAnnotation ]bool {};{var _bgfc []*PdfField ;_eefa :=_bddf .AcroForm ;if _eefa !=nil {if _bafc .FilterFunc !=nil {_bgfc =_eefa .filteredFields (_bafc .FilterFunc ,true );_cadaa =_eefa .Fields !=nil &&len (*_eefa .Fields )> 0;}else {_bgfc =_eefa .AllFields ();};};for _ ,_ccef :=range _bgfc {for _ ,_eadd :=range _ccef .Annotations {_abdg [_eadd .PdfAnnotation ]=_ccef .V !=nil ;if _begg !=nil {_beba ,_edfef :=_begg .GenerateAppearanceDict (_eefa ,_ccef ,_eadd );if _edfef !=nil {return _edfef ;};_eadd .AP =_beba ;};};};};if _ecddc {for _ ,_ebcc :=range _bddf .PageList {_bgbde ,_dbbg :=_ebcc .GetAnnotations ();if _dbbg !=nil {return _dbbg ;};for _ ,_fadg :=range _bgbde {_abdg [_fadg ]=true ;};};};for _ ,_egbg :=range _bddf .PageList {var _aega []*PdfAnnotation ;if _begg !=nil {if _afaba :=_begg .WrapContentStream (_egbg );_afaba !=nil {return _afaba ;};};_cagaa ,_daed :=_egbg .GetAnnotations ();if _daed !=nil {return _daed ;};for _ ,_ccbc :=range _cagaa {_ggefg ,_dccfa :=_abdg [_ccbc ];if !_dccfa {_aega =append (_aega ,_ccbc );continue ;};switch _ccbc .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;};_cefdb ,_bffa ,_dccd :=_beccb (_ccbc );if _dccd !=nil {if !_ggefg {_fa .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");continue ;};_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_dccd );continue ;};if _cefdb ==nil {continue ;};_ddbd :=_egbg .Resources .GenerateXObjectName ();_egbg .Resources .SetXObjectFormByName (_ddbd ,_cefdb );_eecf :=_f .Min (_bffa .Llx ,_bffa .Urx );_fdgfd :=_f .Min (_bffa .Lly ,_bffa .Ury );var _cfafg []string ;_cfafg =append (_cfafg ,"\u0071");_cfafg =append (_cfafg ,_e .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_eecf ,_fdgfd ));_cfafg =append (_cfafg ,_e .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_ddbd .String ()));_cfafg =append (_cfafg ,"\u0051");_ebeb :=_gb .Join (_cfafg ,"\u000a");_dccd =_egbg .AppendContentStream (_ebeb );if _dccd !=nil {return _dccd ;};if _cefdb .Resources !=nil {_gaaa ,_deaea :=_gcb .GetDict (_cefdb .Resources .Font );if _deaea {for _ ,_gdbbb :=range _gaaa .Keys (){if !_egbg .Resources .HasFontByName (_gdbbb ){_egbg .Resources .SetFontByName (_gdbbb ,_gaaa .Get (_gdbbb ));};};};};};if len (_aega )> 0{_egbg ._eafecf =_aega ;}else {_egbg ._eafecf =[]*PdfAnnotation {};};};if !_cadaa {_bddf .AcroForm =nil ;};return nil ;};

// R returns the value of the red component of the color.
func (_cebe *PdfColorDeviceRGB )R ()float64 {return _cebe [0]};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_gbc :=NewPdfAnnotation ();_gcgc :=&PdfAnnotationWatermark {};_gcgc .PdfAnnotation =_gbc ;_gbc .SetContext (_gcgc );return _gcgc ;};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _gcb .PdfObject )(PdfColorspace ,error ){var _fgaaf *_gcb .PdfIndirectObject ;var _gace *_gcb .PdfObjectName ;var _ecd *_gcb .PdfObjectArray ;if _efbd ,_edcb :=obj .(*_gcb .PdfIndirectObject );_edcb {_fgaaf =_efbd ;};obj =_gcb .TraceToDirectObject (obj );switch _eccgd :=obj .(type ){case *_gcb .PdfObjectArray :_ecd =_eccgd ;case *_gcb .PdfObjectName :_gace =_eccgd ;};if _gace !=nil {switch *_gace {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;default:_fa .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_gace );return nil ,_ggbb ;};};if _ecd !=nil &&_ecd .Len ()> 0{var _egcc _gcb .PdfObject =_fgaaf ;if _fgaaf ==nil {_egcc =_ecd ;};if _gea ,_dffg :=_gcb .GetName (_ecd .Get (0));_dffg {switch _gea .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _ecd .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _ecd .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _ecd .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _fgfa (_egcc );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _ebcdd (_egcc );case "\u004c\u0061\u0062":return _beb (_egcc );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _gcbga (_egcc );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _ceff (_egcc );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _cfcgb (_egcc );case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _bdgb (_egcc );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _afea (_egcc );default:_fa .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_gea );};};};_fa .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());return nil ,ErrTypeCheck ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_eabeb ,_gbeb :=_gc .Open (filePath );if _gbeb !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_gbeb );return nil ,_gbeb ;};defer _eabeb .Close ();return NewPdfFontFromTTF (_eabeb );};type pdfSignDictionary struct{*_gcb .PdfObjectDictionary ;_feage *SignatureHandler ;_cebdg *PdfSignature ;_daaff int64 ;_eagcd int ;_bacab int ;_edcdg int ;_gcdc int ;};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_gcb .PdfObjectStream )(*XObjectForm ,error ){_eabdf :=&XObjectForm {};_eabdf ._cfadb =stream ;_febde :=*(stream .PdfObjectDictionary );_degge ,_caea :=_gcb .NewEncoderFromStream (stream );if _caea !=nil {return nil ,_caea ;};_eabdf .Filter =_degge ;if _aeec :=_febde .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_aeec !=nil {_egcec ,_bddgg :=_aeec .(*_gcb .PdfObjectName );if !_bddgg {return nil ,_fb .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if *_egcec !="\u0046\u006f\u0072\u006d"{_fa .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_fb .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");};};if _dgfdb :=_febde .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_dgfdb !=nil {_eabdf .FormType =_dgfdb ;};if _cfggf :=_febde .Get ("\u0042\u0042\u006f\u0078");_cfggf !=nil {_eabdf .BBox =_cfggf ;};if _gdgg :=_febde .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_gdgg !=nil {_eabdf .Matrix =_gdgg ;};if _fbcb :=_febde .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_fbcb !=nil {_fbcb =_gcb .TraceToDirectObject (_fbcb );_badeg ,_eeacc :=_fbcb .(*_gcb .PdfObjectDictionary );if !_eeacc {_fa .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_gcb .ErrTypeError ;};_fgdeae ,_ebdgd :=NewPdfPageResourcesFromDict (_badeg );if _ebdgd !=nil {_fa .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");return nil ,_ebdgd ;};_eabdf .Resources =_fgdeae ;_fa .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_eabdf .Resources );};_eabdf .Group =_febde .Get ("\u0047\u0072\u006fu\u0070");_eabdf .Ref =_febde .Get ("\u0052\u0065\u0066");_eabdf .MetaData =_febde .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_eabdf .PieceInfo =_febde .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_eabdf .LastModified =_febde .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_eabdf .StructParent =_febde .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_eabdf .StructParents =_febde .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_eabdf .OPI =_febde .Get ("\u004f\u0050\u0049");_eabdf .OC =_febde .Get ("\u004f\u0043");_eabdf .Name =_febde .Get ("\u004e\u0061\u006d\u0065");_eabdf .Stream =stream .Stream ;return _eabdf ,nil ;};func (_afd *PdfReader )newPdfAnnotationCircleFromDict (_efdb *_gcb .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_fgff :=PdfAnnotationCircle {};_eacd ,_gddf :=_afd .newPdfAnnotationMarkupFromDict (_efdb );if _gddf !=nil {return nil ,_gddf ;};_fgff .PdfAnnotationMarkup =_eacd ;_fgff .BS =_efdb .Get ("\u0042\u0053");_fgff .IC =_efdb .Get ("\u0049\u0043");_fgff .BE =_efdb .Get ("\u0042\u0045");_fgff .RD =_efdb .Get ("\u0052\u0044");return &_fgff ,nil ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_bgfa *PdfField )FullName ()(string ,error ){var _bgbe _ga .Buffer ;_ebcbc :=[]string {};if _bgfa .T !=nil {_ebcbc =append (_ebcbc ,_bgfa .T .Decoded ());};_febd :=map[*PdfField ]bool {};_febd [_bgfa ]=true ;_ccgda :=_bgfa .Parent ;for _ccgda !=nil {if _ ,_dgfbc :=_febd [_ccgda ];_dgfbc {return _bgbe .String (),_fb .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _ccgda .T ==nil {return _bgbe .String (),_fb .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");};_ebcbc =append (_ebcbc ,_ccgda .T .Decoded ());_febd [_ccgda ]=true ;_ccgda =_ccgda .Parent ;};for _dgec :=len (_ebcbc )-1;_dgec >=0;_dgec --{_bgbe .WriteString (_ebcbc [_dgec ]);if _dgec > 0{_bgbe .WriteString ("\u002e");};};return _bgbe .String (),nil ;};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_efdec *_gcb .PdfIndirectObject ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_fcgb *PdfReader )GetTrailer ()(*_gcb .PdfObjectDictionary ,error ){_ebdba :=_fcgb ._efeb .GetTrailer ();if _ebdba ==nil {return nil ,_fb .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _ebdba ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_cfgg *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eeeaf :=vals [0];_aeff :=[]float64 {_eeeaf };_aggf ,_dddgc :=_cfgg .TintTransform .Evaluate (_aeff );if _dddgc !=nil {_fa .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_dddgc );_fa .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_cfgg .TintTransform );return nil ,_dddgc ;};_fa .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_aggf ,_cfgg .AlternateSpace );_bebd ,_dddgc :=_cfgg .AlternateSpace .ColorFromFloats (_aggf );if _dddgc !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_dddgc );return nil ,_dddgc ;};return _bebd ,nil ;};func _cbgdg (_bagd *PdfField ,_cbddb _gcb .PdfObject ){for _ ,_geade :=range _bagd .Annotations {_geade .AS =_cbddb ;_geade .ToPdfObject ();};};

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _dfb .ReadSeeker )(*PdfFont ,error ){const _bfab =_dee .CharCode (32);const _befag =_dee .CharCode (255);_agdd ,_edcgd :=_df .ReadAll (r );if _edcgd !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_edcgd );return nil ,_edcgd ;};_eeafb ,_edcgd :=_aa .TtfParse (_ga .NewReader (_agdd ));if _edcgd !=nil {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_edcgd );return nil ,_edcgd ;};_dbdg :=&pdfFontSimple {_egbc :make (map[_dee .CharCode ]float64 ),fontCommon :fontCommon {_caaad :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_dbdg ._cgeba =_dee .NewWinAnsiEncoder ();_dbdg ._eefc =_eeafb .PostScriptName ;_dbdg .FirstChar =_gcb .MakeInteger (int64 (_bfab ));_dbdg .LastChar =_gcb .MakeInteger (int64 (_befag ));_bgae :=1000.0/float64 (_eeafb .UnitsPerEm );if len (_eeafb .Widths )<=0{return nil ,_fb .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_efgag :=_bgae *float64 (_eeafb .Widths [0]);_eecfe :=make ([]float64 ,0,_befag -_bfab +1);for _bfcb :=_bfab ;_bfcb <=_befag ;_bfcb ++{_eaac ,_eafec :=_dbdg .Encoder ().CharcodeToRune (_bfcb );if !_eafec {_fa .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_bfcb );_eecfe =append (_eecfe ,_efgag );continue ;};_cgfd ,_fege :=_eeafb .Chars [_eaac ];if !_fege {_fa .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_eecfe =append (_eecfe ,_efgag );continue ;};_ededc :=_bgae *float64 (_eeafb .Widths [_cgfd ]);_eecfe =append (_eecfe ,_ededc );};_dbdg .Widths =_gcb .MakeIndirectObject (_gcb .MakeArrayFromFloats (_eecfe ));if len (_eecfe )< int (_befag -_bfab +1){_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_eecfe ),255-32+1);return nil ,_gcb .ErrRangeError ;};for _adabc :=_bfab ;_adabc <=_befag ;_adabc ++{_dbdg ._egbc [_adabc ]=_eecfe [_adabc -_bfab ];};_dbdg .Encoding =_gcb .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_cdfbag :=&PdfFontDescriptor {};_cdfbag .FontName =_gcb .MakeName (_eeafb .PostScriptName );_cdfbag .Ascent =_gcb .MakeFloat (_bgae *float64 (_eeafb .TypoAscender ));_cdfbag .Descent =_gcb .MakeFloat (_bgae *float64 (_eeafb .TypoDescender ));_cdfbag .CapHeight =_gcb .MakeFloat (_bgae *float64 (_eeafb .CapHeight ));_cdfbag .FontBBox =_gcb .MakeArrayFromFloats ([]float64 {_bgae *float64 (_eeafb .Xmin ),_bgae *float64 (_eeafb .Ymin ),_bgae *float64 (_eeafb .Xmax ),_bgae *float64 (_eeafb .Ymax )});_cdfbag .ItalicAngle =_gcb .MakeFloat (_eeafb .ItalicAngle );_cdfbag .MissingWidth =_gcb .MakeFloat (_bgae *float64 (_eeafb .Widths [0]));_cdafg ,_edcgd :=_gcb .MakeStream (_agdd ,_gcb .NewFlateEncoder ());if _edcgd !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_edcgd );return nil ,_edcgd ;};_cdafg .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_gcb .MakeInteger (int64 (len (_agdd ))));_cdfbag .FontFile2 =_cdafg ;if _eeafb .Bold {_cdfbag .StemV =_gcb .MakeInteger (120);}else {_cdfbag .StemV =_gcb .MakeInteger (70);};_gdgbb :=_abgd ;if _eeafb .IsFixedPitch {_gdgbb |=_bbdaf ;};if _eeafb .ItalicAngle !=0{_gdgbb |=_fdgbg ;};_cdfbag .Flags =_gcb .MakeInteger (int64 (_gdgbb ));_dbdg ._efff =_cdfbag ;_aabae :=&PdfFont {_ffag :_dbdg };return _aabae ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_faeg *PdfAnnotationTrapNet )ToPdfObject ()_gcb .PdfObject {_faeg .PdfAnnotation .ToPdfObject ();_egfc :=_faeg ._dgc ;_fdd :=_egfc .PdfObject .(*_gcb .PdfObjectDictionary );_fdd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));return _egfc ;};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_ef .PSProgram ;_gaeec *_ef .PSExecutor ;_ccgae []byte ;_beffa *_gcb .PdfObjectStream ;};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _gcb .PdfObject ;B _gcb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_dgef *PdfAnnotationPopup )ToPdfObject ()_gcb .PdfObject {_dgef .PdfAnnotation .ToPdfObject ();_deda :=_dgef ._dgc ;_bgda :=_deda .PdfObject .(*_gcb .PdfObjectDictionary );_bgda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0050\u006f\u0070u\u0070"));_bgda .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_dgef .Parent );_bgda .SetIfNotNil ("\u004f\u0070\u0065\u006e",_dgef .Open );return _deda ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_afdc :=PdfColorCalGray (grayVal );return &_afdc ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_dg :=NewPdfAction ();_cfe :=&PdfActionURI {};_cfe .PdfAction =_dg ;_dg .SetContext (_cfe );return _cfe ;};

// Encoder returns the font's text encoder.
func (_daafe *pdfFontSimple )Encoder ()_dee .TextEncoder {if _daafe ._cgeba !=nil {return _daafe ._cgeba ;};if _daafe ._dfece !=nil {return _daafe ._dfece ;};_agcbe ,_ :=_dee .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );return _agcbe ;};

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_adfg pdfFontSimple )GetRuneMetrics (r rune )(_aa .CharMetrics ,bool ){if _adfg ._cbbab !=nil {_dbdbb ,_adfa :=_adfg ._cbbab [r ];if _adfa {return _dbdbb ,true ;};};_dcbbf :=_adfg .Encoder ();if _dcbbf ==nil {_fa .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_adfg );return _aa .CharMetrics {},false ;};_gbga ,_aefdg :=_dcbbf .RuneToCharcode (r );if !_aefdg {if r !=' '{_fa .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_adfg );};return _aa .CharMetrics {},false ;};_cfbc ,_cece :=_adfg .GetCharMetrics (_gbga );return _cfbc ,_cece ;};func _gffc (_eedf *PdfPage )map[_gcb .PdfObjectName ]_gcb .PdfObject {_acda :=make (map[_gcb .PdfObjectName ]_gcb .PdfObject );if _eedf .Resources ==nil {return _acda ;};if _eedf .Resources .Font !=nil {if _bgdc ,_acae :=_gcb .GetDict (_eedf .Resources .Font );_acae {for _ ,_abcga :=range _bgdc .Keys (){_acda [_abcga ]=_bgdc .Get (_abcga );};};};if _eedf .Resources .ExtGState !=nil {if _eadc ,_bdcd :=_gcb .GetDict (_eedf .Resources .ExtGState );_bdcd {for _ ,_dfa :=range _eadc .Keys (){_acda [_dfa ]=_eadc .Get (_dfa );};};};if _eedf .Resources .XObject !=nil {if _cbd ,_ddba :=_gcb .GetDict (_eedf .Resources .XObject );_ddba {for _ ,_badf :=range _cbd .Keys (){_acda [_badf ]=_cbd .Get (_badf );};};};if _eedf .Resources .Pattern !=nil {if _bfaff ,_gfbg :=_gcb .GetDict (_eedf .Resources .Pattern );_gfbg {for _ ,_bgaf :=range _bfaff .Keys (){_acda [_bgaf ]=_bfaff .Get (_bgaf );};};};if _eedf .Resources .Shading !=nil {if _gbff ,_gcef :=_gcb .GetDict (_eedf .Resources .Shading );_gcef {for _ ,_dfdb :=range _gbff .Keys (){_acda [_dfdb ]=_gbff .Get (_dfdb );};};};if _eedf .Resources .ProcSet !=nil {if _bada ,_aacd :=_gcb .GetDict (_eedf .Resources .ProcSet );_aacd {for _ ,_ageg :=range _bada .Keys (){_acda [_ageg ]=_bada .Get (_ageg );};};};if _eedf .Resources .Properties !=nil {if _dfcb ,_dedg :=_gcb .GetDict (_eedf .Resources .Properties );_dedg {for _ ,_gfce :=range _dfcb .Keys (){_acda [_gfce ]=_dfcb .Get (_gfce );};};};return _acda ;};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_bcff *PdfReader )Decrypt (password []byte )(bool ,error ){_cffgf ,_fcbgc :=_bcff ._efeb .Decrypt (password );if _fcbgc !=nil {return false ,_fcbgc ;};if !_cffgf {return false ,nil ;};_fcbgc =_bcff .loadStructure ();if _fcbgc !=nil {_fa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_fcbgc );return false ,_fcbgc ;};return true ,nil ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _gcb .PdfObject ;LE _gcb .PdfObject ;BS _gcb .PdfObject ;IC _gcb .PdfObject ;BE _gcb .PdfObject ;IT _gcb .PdfObject ;Measure _gcb .PdfObject ;};func (_adb *PdfReader )newPdfActionNamedFromDict (_aga *_gcb .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_aga .Get ("\u004e")},nil ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_ecae :=PdfColorLab {l ,a ,b };return &_ecae };

// AddExtGState adds a graphics state to the XObject resources.
func (_effcc *PdfPage )AddExtGState (name _gcb .PdfObjectName ,egs *_gcb .PdfObjectDictionary )error {if _effcc .Resources ==nil {_effcc .Resources =NewPdfPageResources ();};if _effcc .Resources .ExtGState ==nil {_effcc .Resources .ExtGState =_gcb .MakeDict ();};_gcee ,_cdgbg :=_gcb .TraceToDirectObject (_effcc .Resources .ExtGState ).(*_gcb .PdfObjectDictionary );if !_cdgbg {_fa .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_gcb .TraceToDirectObject (_effcc .Resources .ExtGState ));return _fb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gcee .Set (name ,egs );return nil ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_bb :=NewPdfAction ();_ff :=&PdfActionGoTo {};_ff .PdfAction =_bb ;_bb .SetContext (_ff );return _ff ;};func _cecb (_defa *_gcb .PdfObjectDictionary )(*PdfShadingType5 ,error ){_eccdb :=PdfShadingType5 {};_cdcdb :=_defa .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _cdcdb ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_fecef ,_gdffa :=_cdcdb .(*_gcb .PdfObjectInteger );if !_gdffa {_fa .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cdcdb );return nil ,_gcb .ErrTypeError ;};_eccdb .BitsPerCoordinate =_fecef ;_cdcdb =_defa .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _cdcdb ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_fecef ,_gdffa =_cdcdb .(*_gcb .PdfObjectInteger );if !_gdffa {_fa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_cdcdb );return nil ,_gcb .ErrTypeError ;};_eccdb .BitsPerComponent =_fecef ;_cdcdb =_defa .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _cdcdb ==nil {_fa .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");return nil ,ErrRequiredAttributeMissing ;};_fecef ,_gdffa =_cdcdb .(*_gcb .PdfObjectInteger );if !_gdffa {_fa .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_cdcdb );return nil ,_gcb .ErrTypeError ;};_eccdb .VerticesPerRow =_fecef ;_cdcdb =_defa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _cdcdb ==nil {_fa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_bccfe ,_gdffa :=_cdcdb .(*_gcb .PdfObjectArray );if !_gdffa {_fa .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cdcdb );return nil ,_gcb .ErrTypeError ;};_eccdb .Decode =_bccfe ;if _bgeee :=_defa .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_bgeee !=nil {_eccdb .Function =[]PdfFunction {};if _fabfd ,_fcfdc :=_bgeee .(*_gcb .PdfObjectArray );_fcfdc {for _ ,_cdeedb :=range _fabfd .Elements (){_ffdcg ,_fecac :=_gaeabb (_cdeedb );if _fecac !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fecac );return nil ,_fecac ;};_eccdb .Function =append (_eccdb .Function ,_ffdcg );};}else {_bgbfa ,_fddaa :=_gaeabb (_bgeee );if _fddaa !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fddaa );return nil ,_fddaa ;};_eccdb .Function =append (_eccdb .Function ,_bgbfa );};};return &_eccdb ,nil ;};

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_ecba *PdfField )GetContext ()PdfModel {return _ecba ._abe };

// ToPdfObject implements interface PdfModel.
func (_gcdf *PdfAnnotationWatermark )ToPdfObject ()_gcb .PdfObject {_gcdf .PdfAnnotation .ToPdfObject ();_eege :=_gcdf ._dgc ;_aded :=_eege .PdfObject .(*_gcb .PdfObjectDictionary );_aded .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));_aded .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_gcdf .FixedPrint );return _eege ;};func (_bcfae *fontFile )loadFromSegments (_cbgd ,_dfgdf []byte )error {_fa .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_cbgd ),len (_dfgdf ));_ebad :=_bcfae .parseASCIIPart (_cbgd );if _ebad !=nil {return _ebad ;};_fa .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_bcfae );if len (_dfgdf )==0{return nil ;};_fa .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_bcfae );return nil ;};func _ggcac ()_c .Time {_bfgga .Lock ();defer _bfgga .Unlock ();return _dbbd };func _aadc (_eaggf StdFontName )(pdfFontSimple ,error ){_edbgd ,_daaa :=_aa .NewStdFontByName (_eaggf );if !_daaa {return pdfFontSimple {},ErrFontNotSupported ;};_efdf :=_fgfe (_edbgd );return _efdf ,nil ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_fed :=NewPdfAnnotation ();_cbec :=&PdfAnnotationPolygon {};_cbec .PdfAnnotation =_fed ;_cbec .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fed .SetContext (_cbec );return _cbec ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_eebe *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_eebeg *PdfPageResources )AddExtGState (gsName _gcb .PdfObjectName ,gsDict _gcb .PdfObject )error {if _eebeg .ExtGState ==nil {_eebeg .ExtGState =_gcb .MakeDict ();};_bbbag :=_eebeg .ExtGState ;_befed ,_dgfd :=_gcb .TraceToDirectObject (_bbbag ).(*_gcb .PdfObjectDictionary );if !_dgfd {_fa .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_bbbag ,_gcb .TraceToDirectObject (_bbbag ));return _gcb .ErrTypeError ;};_befed .Set (gsName ,gsDict );return nil ;};

// ToPdfObject returns a PDF object representation of the outline destination.
func (_febae OutlineDest )ToPdfObject ()_gcb .PdfObject {if (_febae .PageObj ==nil &&_febae .Page < 0)||_febae .Mode ==""{return _gcb .MakeNull ();};_gdcba :=_gcb .MakeArray ();if _febae .PageObj !=nil {_gdcba .Append (_febae .PageObj );}else {_gdcba .Append (_gcb .MakeInteger (_febae .Page ));};_gdcba .Append (_gcb .MakeName (_febae .Mode ));switch _febae .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_gdcba .Append (_gcb .MakeFloat (_febae .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_gdcba .Append (_gcb .MakeFloat (_febae .X ));case "\u0058\u0059\u005a":_gdcba .Append (_gcb .MakeFloat (_febae .X ));_gdcba .Append (_gcb .MakeFloat (_febae .Y ));_gdcba .Append (_gcb .MakeFloat (_febae .Zoom ));default:_gdcba .Set (1,_gcb .MakeName ("\u0046\u0069\u0074"));};return _gdcba ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_dfeb *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _dfeb .UnderlyingCS .GetNumComponents ();};func _debe (_cedg *_gcb .PdfObjectDictionary )(*PdfFieldChoice ,error ){_egeb :=&PdfFieldChoice {};_egeb .Opt ,_ =_gcb .GetArray (_cedg .Get ("\u004f\u0070\u0074"));_egeb .TI ,_ =_gcb .GetInt (_cedg .Get ("\u0054\u0049"));_egeb .I ,_ =_gcb .GetArray (_cedg .Get ("\u0049"));return _egeb ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_fbdde *PdfAnnotation3D )ToPdfObject ()_gcb .PdfObject {_fbdde .PdfAnnotation .ToPdfObject ();_fde :=_fbdde ._dgc ;_fgbb :=_fde .PdfObject .(*_gcb .PdfObjectDictionary );_fgbb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0033\u0044"));_fgbb .SetIfNotNil ("\u0033\u0044\u0044",_fbdde .T3DD );_fgbb .SetIfNotNil ("\u0033\u0044\u0056",_fbdde .T3DV );_fgbb .SetIfNotNil ("\u0033\u0044\u0041",_fbdde .T3DA );_fgbb .SetIfNotNil ("\u0033\u0044\u0049",_fbdde .T3DI );_fgbb .SetIfNotNil ("\u0033\u0044\u0042",_fbdde .T3DB );return _fde ;};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_fdbd *PdfAppender )Write (w _dfb .Writer )error {if _fdbd ._cgeab {return _fb .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");};_befa :=NewPdfWriter ();_fcaf ,_dgbf :=_gcb .GetDict (_befa ._ddfea );if !_dgbf {return _fb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_abfb ,_dgbf :=_fcaf .Get ("\u004b\u0069\u0064\u0073").(*_gcb .PdfObjectArray );if !_dgbf {return _fb .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_fce ,_dgbf :=_fcaf .Get ("\u0043\u006f\u0075n\u0074").(*_gcb .PdfObjectInteger );if !_dgbf {return _fb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};_ggcd :=_fdbd ._ggde ._efeb ;_cfcg :=_ggcd .GetTrailer ();if _cfcg ==nil {return _fb .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_effc ,_dgbf :=_gcb .GetIndirect (_cfcg .Get ("\u0052\u006f\u006f\u0074"));if !_dgbf {return _fb .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_baeeb ,_dgbf :=_gcb .GetDict (_effc );if !_dgbf {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_effc ,*_cfcg );return _fb .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_ggef :=range _baeeb .Keys (){if _befa ._gfdbe .Get (_ggef )==nil {_aaced :=_baeeb .Get (_ggef );_befa ._gfdbe .Set (_ggef ,_aaced );};};if _fdbd ._gbed !=nil {_befa ._gfdbe .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_fdbd ._gbed .ToPdfObject ());_fdbd .updateObjectsDeep (_fdbd ._gbed .ToPdfObject (),nil );};if _fdbd ._gce !=nil {_fdbd .updateObjectsDeep (_fdbd ._gce .ToPdfObject (),nil );_befa ._gfdbe .Set ("\u0044\u0053\u0053",_fdbd ._gce .GetContainingPdfObject ());};if _befa ._fdfdg < 2{_befa .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);_befa .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};_fdbd .addNewObject (_befa ._ebag );_fdbd .addNewObject (_befa ._dafgf );_bbcg :=false ;if len (_fdbd ._ggde .PageList )!=len (_fdbd ._accd ){_bbcg =true ;}else {for _ccbec :=range _fdbd ._ggde .PageList {switch {case _fdbd ._accd [_ccbec ]==_fdbd ._ggde .PageList [_ccbec ]:case _fdbd ._accd [_ccbec ]==_fdbd .Reader .PageList [_ccbec ]:default:_bbcg =true ;};if _bbcg {break ;};};};if _bbcg {_fdbd .updateObjectsDeep (_befa ._ddfea ,nil );}else {_fdbd ._fdbag [_befa ._ddfea ]=struct{}{};};_befa ._ddfea .ObjectNumber =_fdbd .Reader ._fgddg .ObjectNumber ;_fdbd ._bbdc [_befa ._ddfea ]=_fdbd .Reader ._fgddg .ObjectNumber ;_cdg :=[]_gcb .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_ddfe :=range _fdbd ._accd {_acgc :=_ddfe .ToPdfObject ();*_fce =*_fce +1;if _bbaa ,_ccfc :=_acgc .(*_gcb .PdfIndirectObject );_ccfc &&_bbaa .GetParser ()==_fdbd ._ggde ._efeb {_abfb .Append (&_bbaa .PdfObjectReference );continue ;};if _dgee ,_egbe :=_gcb .GetDict (_acgc );_egbe {_eabb ,_fade :=_dgee .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_gcb .PdfIndirectObject );for _fade {_fa .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_eabb );_aefe ,_ffac :=_eabb .PdfObject .(*_gcb .PdfObjectDictionary );if !_ffac {return _fb .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_dcab :=range _cdg {_fa .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_dcab );if _dgee .Get (_dcab )!=nil {_fa .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _ebg :=_aefe .Get (_dcab );_ebg !=nil {_fa .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_dcab );_dgee .Set (_dcab ,_ebg );};};_eabb ,_fade =_aefe .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_gcb .PdfIndirectObject );_fa .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_aefe .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_dgee .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_befa ._ddfea );};_fdbd .updateObjectsDeep (_acgc ,nil );_abfb .Append (_acgc );};if _ ,_bgdb :=_fdbd ._dafd .Seek (0,_dfb .SeekStart );_bgdb !=nil {return _bgdb ;};_dgbgb :=make (map[SignatureHandler ]_dfb .Writer );_ffef :=_gcb .MakeArray ();for _ ,_dcdd :=range _fdbd ._efec {if _bgdf ,_fba :=_gcb .GetIndirect (_dcdd );_fba {if _bccg ,_aefd :=_bgdf .PdfObject .(*pdfSignDictionary );_aefd {_cgc :=*_bccg ._feage ;var _edde error ;_dgbgb [_cgc ],_edde =_cgc .NewDigest (_bccg ._cebdg );if _edde !=nil {return _edde ;};_ffef .Append (_gcb .MakeInteger (0xfffff),_gcb .MakeInteger (0xfffff));};};};if _ffef .Len ()> 0{_ffef .Append (_gcb .MakeInteger (0xfffff),_gcb .MakeInteger (0xfffff));};for _ ,_acde :=range _fdbd ._efec {if _eefb ,_ecag :=_gcb .GetIndirect (_acde );_ecag {if _fedf ,_aaag :=_eefb .PdfObject .(*pdfSignDictionary );_aaag {_fedf .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_ffef );};};};_gbd :=len (_dgbgb )> 0;var _eafd _dfb .Reader =_fdbd ._dafd ;if _gbd {_ffge :=make ([]_dfb .Writer ,0,len (_dgbgb ));for _ ,_gbdb :=range _dgbgb {_ffge =append (_ffge ,_gbdb );};_eafd =_dfb .TeeReader (_fdbd ._dafd ,_dfb .MultiWriter (_ffge ...));};_cgdcf ,_ggdf :=_dfb .Copy (w ,_eafd );if _ggdf !=nil {return _ggdf ;};if len (_fdbd ._efec )==0{return nil ;};_befa ._cebfg =_cgdcf ;_befa .ObjNumOffset =_fdbd ._aagf ;_befa ._cbaca =true ;_befa ._afdda =_fdbd ._acfb ;_befa ._afcce =_fdbd ._defc ;_befa ._gdac =_fdbd ._aggda ;_befa ._geadf =_fdbd ._ggde .PdfVersion ().Minor ;_befa ._cdbgf =_fdbd ._bbdc ;_ddaa :=_fdbd ._cgda .GetXrefType ();if _ddaa !=nil {_eafdf :=*_ddaa ==_gcb .XrefTypeObjectStream ;_befa ._fcedd =&_eafdf ;};_befa ._cbgdbf =map[_gcb .PdfObject ]struct{}{};_befa ._dfeee =[]_gcb .PdfObject {};for _ ,_gefea :=range _fdbd ._efec {if _ ,_dadb :=_fdbd ._fdbag [_gefea ];_dadb {continue ;};_befa .addObject (_gefea );};_baef :=w ;if _gbd {_baef =_ga .NewBuffer (nil );};if _gebb :=_befa .Write (_baef );_gebb !=nil {return _gebb ;};if _gbd {_bacf :=_baef .(*_ga .Buffer ).Bytes ();_effde :=_gcb .MakeArray ();var _cbbc []*pdfSignDictionary ;var _aeeg int64 ;for _ ,_gfg :=range _befa ._dfeee {if _bcbd ,_edbd :=_gcb .GetIndirect (_gfg );_edbd {if _cabf ,_defb :=_bcbd .PdfObject .(*pdfSignDictionary );_defb {_cbbc =append (_cbbc ,_cabf );_ffabd :=_cabf ._daaff +int64 (_cabf ._eagcd );_effde .Append (_gcb .MakeInteger (_aeeg ),_gcb .MakeInteger (_ffabd -_aeeg ));_aeeg =_cabf ._daaff +int64 (_cabf ._bacab );};};};_effde .Append (_gcb .MakeInteger (_aeeg ),_gcb .MakeInteger (_cgdcf +int64 (len (_bacf ))-_aeeg ));_aaba :=[]byte (_effde .WriteString ());for _ ,_dcbd :=range _cbbc {_cfca :=int (_dcbd ._daaff -_cgdcf );for _eace :=_dcbd ._edcdg ;_eace < _dcbd ._gcdc ;_eace ++{_bacf [_cfca +_eace ]=' ';};_dfgg :=_bacf [_cfca +_dcbd ._edcdg :_cfca +_dcbd ._gcdc ];copy (_dfgg ,_aaba );};var _gcac int ;for _ ,_fedc :=range _cbbc {_egdf :=int (_fedc ._daaff -_cgdcf );_ebec :=_bacf [_gcac :_egdf +_fedc ._eagcd ];_dfe :=*_fedc ._feage ;_dgbgb [_dfe ].Write (_ebec );_gcac =_egdf +_fedc ._bacab ;};for _ ,_ddab :=range _cbbc {_bagec :=_bacf [_gcac :];_fgfdg :=*_ddab ._feage ;_dgbgb [_fgfdg ].Write (_bagec );};for _ ,_dceb :=range _cbbc {_agca :=int (_dceb ._daaff -_cgdcf );_gaea :=*_dceb ._feage ;_gccb :=_dgbgb [_gaea ];if _bff :=_gaea .Sign (_dceb ._cebdg ,_gccb );_bff !=nil {return _bff ;};_dceb ._cebdg .ByteRange =_effde ;_dddg :=[]byte (_dceb ._cebdg .Contents .WriteString ());for _abdd :=_dceb ._edcdg ;_abdd < _dceb ._gcdc ;_abdd ++{_bacf [_agca +_abdd ]=' ';};for _aagd :=_dceb ._eagcd ;_aagd < _dceb ._bacab ;_aagd ++{_bacf [_agca +_aagd ]=' ';};_eegbe :=_bacf [_agca +_dceb ._edcdg :_agca +_dceb ._gcdc ];copy (_eegbe ,_aaba );_eegbe =_bacf [_agca +_dceb ._eagcd :_agca +_dceb ._bacab ];copy (_eegbe ,_dddg );};_geegd :=_ga .NewBuffer (_bacf );_ ,_ggdf =_dfb .Copy (w ,_geegd );if _ggdf !=nil {return _ggdf ;};};_fdbd ._cgeab =true ;return nil ;};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_edeab *XObjectImage )GetContainingPdfObject ()_gcb .PdfObject {return _edeab ._cacbc };

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_dcebb *PdfReader )GetEncryptionMethod ()string {_dfedb :=_dcebb ._efeb .GetCrypter ();return _dfedb .String ();};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_fcgcg *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_defg ,_dbff :=color .(*PdfColorDeviceRGB );if !_dbff {_fa .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");return nil ,_fb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _defg ,nil ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_aa .CharMetrics ;func (_ccad *LTV )getOCSPs (_ddfb []*_g .Certificate ,_aafaa map[string ]*_g .Certificate )([][]byte ,error ){_adgbb :=make ([][]byte ,0,len (_ddfb ));for _ ,_dgdec :=range _ddfb {for _ ,_dfeba :=range _dgdec .OCSPServer {if _ccad .CertClient .IsCA (_dgdec ){continue ;};_daga ,_cgbea :=_aafaa [_dgdec .Issuer .CommonName ];if !_cgbea {_fa .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");continue ;};_ ,_cccebf ,_defgb :=_ccad .OCSPClient .MakeRequest (_dfeba ,_dgdec ,_daga );if _defgb !=nil {_fa .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_defgb );continue ;};_adgbb =append (_adgbb ,_cccebf );};};return _adgbb ,nil ;};

// WriteString outputs the object as it is to be written to file.
func (_fdcf *pdfSignDictionary )WriteString ()string {_fdcf ._eagcd =0;_fdcf ._bacab =0;_fdcf ._edcdg =0;_fdcf ._gcdc =0;_efbbe :=_ga .NewBuffer (nil );_efbbe .WriteString ("\u003c\u003c");for _ ,_gaafa :=range _fdcf .Keys (){_gfag :=_fdcf .Get (_gaafa );switch _gaafa {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_efbbe .WriteString (_gaafa .WriteString ());_efbbe .WriteString ("\u0020");_fdcf ._edcdg =_efbbe .Len ();_efbbe .WriteString (_gfag .WriteString ());_efbbe .WriteString ("\u0020");_fdcf ._gcdc =_efbbe .Len ()-1;case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_efbbe .WriteString (_gaafa .WriteString ());_efbbe .WriteString ("\u0020");_fdcf ._eagcd =_efbbe .Len ();_efbbe .WriteString (_gfag .WriteString ());_efbbe .WriteString ("\u0020");_fdcf ._bacab =_efbbe .Len ()-1;default:_efbbe .WriteString (_gaafa .WriteString ());_efbbe .WriteString ("\u0020");_efbbe .WriteString (_gfag .WriteString ());};};_efbbe .WriteString ("\u003e\u003e");return _efbbe .String ();};

// GetNumComponents returns the number of color components (1 for Indexed).
func (_bbbfe *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};

// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_aaaef *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _aaaef ._eafecf !=nil {return _aaaef ._eafecf ,nil ;};if _aaaef .Annots ==nil {_aaaef ._eafecf =[]*PdfAnnotation {};return nil ,nil ;};if _aaaef ._caab ==nil {_aaaef ._eafecf =[]*PdfAnnotation {};return nil ,nil ;};_bfgd ,_cbfbd :=_aaaef ._caab .loadAnnotations (_aaaef .Annots );if _cbfbd !=nil {return nil ,_cbfbd ;};if _bfgd ==nil {_aaaef ._eafecf =[]*PdfAnnotation {};};_aaaef ._eafecf =_bfgd ;return _aaaef ._eafecf ,nil ;};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_fbec :=NewPdfAnnotation ();_ccgf :=&PdfAnnotationPrinterMark {};_ccgf .PdfAnnotation =_fbec ;_fbec .SetContext (_ccgf );return _ccgf ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_gag :=NewPdfAction ();_ccdf :=&PdfActionSetOCGState {};_ccdf .PdfAction =_gag ;_gag .SetContext (_ccdf );return _ccdf ;};var (CourierName =_aa .CourierName ;CourierBoldName =_aa .CourierBoldName ;CourierObliqueName =_aa .CourierObliqueName ;CourierBoldObliqueName =_aa .CourierBoldObliqueName ;HelveticaName =_aa .HelveticaName ;HelveticaBoldName =_aa .HelveticaBoldName ;HelveticaObliqueName =_aa .HelveticaObliqueName ;HelveticaBoldObliqueName =_aa .HelveticaBoldObliqueName ;SymbolName =_aa .SymbolName ;ZapfDingbatsName =_aa .ZapfDingbatsName ;TimesRomanName =_aa .TimesRomanName ;TimesBoldName =_aa .TimesBoldName ;TimesItalicName =_aa .TimesItalicName ;TimesBoldItalicName =_aa .TimesBoldItalicName ;);

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_gcgfd *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_ccdg ,_edfd :=color .(*PdfColorDeviceCMYK );if !_edfd {_fa .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");return nil ,_fb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bgcg :=_ccdg .C ();_gfee :=_ccdg .M ();_geefd :=_ccdg .Y ();_add :=_ccdg .K ();_bgcg =_bgcg *(1-_add )+_add ;_gfee =_gfee *(1-_add )+_add ;_geefd =_geefd *(1-_add )+_add ;_adbd :=1-_bgcg ;_afccg :=1-_gfee ;_edgb :=1-_geefd ;return NewPdfColorDeviceRGB (_adbd ,_afccg ,_edgb ),nil ;};func (_bbd *PdfReader )newPdfAnnotationSquareFromDict (_egf *_gcb .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_fec :=PdfAnnotationSquare {};_fdgf ,_abf :=_bbd .newPdfAnnotationMarkupFromDict (_egf );if _abf !=nil {return nil ,_abf ;};_fec .PdfAnnotationMarkup =_fdgf ;_fec .BS =_egf .Get ("\u0042\u0053");_fec .IC =_egf .Get ("\u0049\u0043");_fec .BE =_egf .Get ("\u0042\u0045");_fec .RD =_egf .Get ("\u0052\u0044");return &_fec ,nil ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_cbbf *_gcb .PdfIndirectObject ;};

// Fill populates `form` with values provided by `provider`.
func (_bgca *PdfAcroForm )Fill (provider FieldValueProvider )error {return _bgca .fill (provider ,nil )};func _ffagb ()string {_gafe :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";var _ggae _ga .Buffer ;for _aggfg :=0;_aggfg < 6;_aggfg ++{_ggae .WriteRune (rune (_gafe [_ege .Intn (len (_gafe ))]));};return _ggae .String ();};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gcb .PdfObject ;};

// ToInteger convert to an integer format.
func (_cccb *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_dabg :=_f .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_dabg *_cccb .C ()),uint32 (_dabg *_cccb .M ()),uint32 (_dabg *_cccb .Y ()),uint32 (_dabg *_cccb .K ())};};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_adfab *PdfShading )GetContext ()PdfModel {return _adfab ._febdg };

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_cagd :=NewPdfAnnotation ();_bfda :=&PdfAnnotationTrapNet {};_bfda .PdfAnnotation =_cagd ;_cagd .SetContext (_bfda );return _bfda ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_fcca *PdfFieldButton )GetType ()ButtonType {_abeb :=ButtonTypeCheckbox ;if _fcca .Ff !=nil {if (uint32 (*_fcca .Ff )&FieldFlagPushbutton .Mask ())> 0{_abeb =ButtonTypePush ;}else if (uint32 (*_fcca .Ff )&FieldFlagRadio .Mask ())> 0{_abeb =ButtonTypeRadio ;};};return _abeb ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_dfab *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_dfab .Base .GetNumComponents ();_adagg :=int (vals [0])*N ;if _adagg < 0||(_adagg +N -1)>=len (_dfab ._eaca ){return nil ,_fb .New ("\u006f\u0075\u0074\u0073\u0069\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065");};_bdagg :=_dfab ._eaca [_adagg :_adagg +N ];var _geffc []float64 ;for _ ,_fecdc :=range _bdagg {_geffc =append (_geffc ,float64 (_fecdc )/255.0);};_cebbe ,_decb :=_dfab .Base .ColorFromFloats (_geffc );if _decb !=nil {return nil ,_decb ;};return _cebbe ,nil ;};func _aacge ()string {_bfgga .Lock ();defer _bfgga .Unlock ();_aagbf :=_ccg .GetLicenseKey ();if len (_adddc )> 0&&(_aagbf .IsLicensed ()||_gbbbg ){return _adddc ;};return _e .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_fbccd (),_aagbf .TypeToString ());};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _gcb .PdfObjectArray )(*PdfRectangle ,error ){_eedad :=PdfRectangle {};if arr .Len ()!=4{return nil ,_fb .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");};var _egffc error ;_eedad .Llx ,_egffc =_gcb .GetNumberAsFloat (arr .Get (0));if _egffc !=nil {return nil ,_egffc ;};_eedad .Lly ,_egffc =_gcb .GetNumberAsFloat (arr .Get (1));if _egffc !=nil {return nil ,_egffc ;};_eedad .Urx ,_egffc =_gcb .GetNumberAsFloat (arr .Get (2));if _egffc !=nil {return nil ,_egffc ;};_eedad .Ury ,_egffc =_gcb .GetNumberAsFloat (arr .Get (3));if _egffc !=nil {return nil ,_egffc ;};return &_eedad ,nil ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_fdgae ,_abbea :=_aadc (basefont );if _abbea !=nil {return nil ,_abbea ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_fdgae ._cgeba =_dee .NewWinAnsiEncoder ();};return &PdfFont {_ffag :&_fdgae },nil ;};func (_afcc *PdfReader )newPdfAnnotationTextFromDict (_eage *_gcb .PdfObjectDictionary )(*PdfAnnotationText ,error ){_aceg :=PdfAnnotationText {};_ffab ,_afce :=_afcc .newPdfAnnotationMarkupFromDict (_eage );if _afce !=nil {return nil ,_afce ;};_aceg .PdfAnnotationMarkup =_ffab ;_aceg .Open =_eage .Get ("\u004f\u0070\u0065\u006e");_aceg .Name =_eage .Get ("\u004e\u0061\u006d\u0065");_aceg .State =_eage .Get ("\u0053\u0074\u0061t\u0065");_aceg .StateModel =_eage .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_aceg ,nil ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_gececb *modelManager )GetPrimitiveFromModel (model PdfModel )_gcb .PdfObject {_bddea ,_daceg :=_gececb ._aeaeg [model ];if !_daceg {return nil ;};return _bddea ;};

// SetDate sets the `M` field of the signature.
func (_dbdbf *PdfSignature )SetDate (date _c .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_dbdbf .M =_gcb .MakeString (date .Format (format ));};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_egeea *PdfShadingType3 )ToPdfObject ()_gcb .PdfObject {_egeea .PdfShading .ToPdfObject ();_dfaab ,_afagb :=_egeea .getShadingDict ();if _afagb !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _egeea .Coords !=nil {_dfaab .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_egeea .Coords );};if _egeea .Domain !=nil {_dfaab .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_egeea .Domain );};if _egeea .Function !=nil {if len (_egeea .Function )==1{_dfaab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_egeea .Function [0].ToPdfObject ());}else {_cffge :=_gcb .MakeArray ();for _ ,_eabbf :=range _egeea .Function {_cffge .Append (_eabbf .ToPdfObject ());};_dfaab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cffge );};};if _egeea .Extend !=nil {_dfaab .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_egeea .Extend );};return _egeea ._bgcgd ;};func _beccb (_bbgfd *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_ggbea ,_edbf :=_gcb .GetDict (_bbgfd .AP );if !_edbf {return nil ,nil ,_fb .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _ggbea ==nil {return nil ,nil ,nil ;};_dddb ,_edbf :=_gcb .GetArray (_bbgfd .Rect );if !_edbf ||_dddb .Len ()!=4{return nil ,nil ,_fb .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_affa ,_fdbgff :=NewPdfRectangle (*_dddb );if _fdbgff !=nil {return nil ,nil ,_fdbgff ;};_cbce :=_gcb .TraceToDirectObject (_ggbea .Get ("\u004e"));switch _ffdd :=_cbce .(type ){case *_gcb .PdfObjectStream :_adfedd :=_ffdd ;_bega ,_gbdc :=NewXObjectFormFromStream (_adfedd );return _bega ,_affa ,_gbdc ;case *_gcb .PdfObjectDictionary :_cgbed :=_ffdd ;_dacf ,_bfaad :=_gcb .GetName (_bbgfd .AS );if !_bfaad {return nil ,nil ,nil ;};if _cgbed .Get (*_dacf )==nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");return nil ,nil ,nil ;};_ebaf ,_bfaad :=_gcb .GetStream (_cgbed .Get (*_dacf ));if !_bfaad {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_dacf );return nil ,nil ,_fb .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_eaed ,_aefcc :=NewXObjectFormFromStream (_ebaf );return _eaed ,_affa ,_aefcc ;};_fa .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_cbce );return nil ,nil ,_fb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};func (_eeee *PdfReader )newPdfAnnotationLineFromDict (_bdea *_gcb .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_cfb :=PdfAnnotationLine {};_fgdg ,_cdab :=_eeee .newPdfAnnotationMarkupFromDict (_bdea );if _cdab !=nil {return nil ,_cdab ;};_cfb .PdfAnnotationMarkup =_fgdg ;_cfb .L =_bdea .Get ("\u004c");_cfb .BS =_bdea .Get ("\u0042\u0053");_cfb .LE =_bdea .Get ("\u004c\u0045");_cfb .IC =_bdea .Get ("\u0049\u0043");_cfb .LL =_bdea .Get ("\u004c\u004c");_cfb .LLE =_bdea .Get ("\u004c\u004c\u0045");_cfb .Cap =_bdea .Get ("\u0043\u0061\u0070");_cfb .IT =_bdea .Get ("\u0049\u0054");_cfb .LLO =_bdea .Get ("\u004c\u004c\u004f");_cfb .CP =_bdea .Get ("\u0043\u0050");_cfb .Measure =_bdea .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_cfb .CO =_bdea .Get ("\u0043\u004f");return &_cfb ,nil ;};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_gcb .PdfObjectArray ;TI *_gcb .PdfObjectInteger ;I *_gcb .PdfObjectArray ;};func (_bege *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _bege ._efff };

// AddOutlineTree adds outlines to a PDF file.
func (_dbcfg *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_dbcfg ._dgfce =outlineTree };func (_daaec *Image )resampleLowBits (_bdbbg []uint32 ){_bdefg :=_efe .BytesPerLine (int (_daaec .Width ),int (_daaec .BitsPerComponent ),_daaec .ColorComponents );_egdec :=make ([]byte ,_daaec .ColorComponents *_bdefg *int (_daaec .Height ));_faeeb :=int (_daaec .BitsPerComponent )*_daaec .ColorComponents *int (_daaec .Width );_ddgc :=uint8 (8);var (_eged ,_ddffb int ;_edbfg uint32 ;);for _dceed :=0;_dceed < int (_daaec .Height );_dceed ++{_ddffb =_dceed *_bdefg ;for _ffdc :=0;_ffdc < _faeeb ;_ffdc ++{_edbfg =_bdbbg [_eged ];_ddgc -=uint8 (_daaec .BitsPerComponent );_egdec [_ddffb ]|=byte (_edbfg )<<_ddgc ;if _ddgc ==0{_ddgc =8;_ddffb ++;};_eged ++;};};_daaec .Data =_egdec ;};func _afea (_ecfbd _gcb .PdfObject )(*PdfColorspaceDeviceN ,error ){_bcebg :=NewPdfColorspaceDeviceN ();if _bebe ,_fbddd :=_ecfbd .(*_gcb .PdfIndirectObject );_fbddd {_bcebg ._fadaa =_bebe ;};_ecfbd =_gcb .TraceToDirectObject (_ecfbd );_cgcbe ,_dbef :=_ecfbd .(*_gcb .PdfObjectArray );if !_dbef {return nil ,_e .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");};if _cgcbe .Len ()!=4&&_cgcbe .Len ()!=5{return nil ,_e .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_ecfbd =_cgcbe .Get (0);_fggdd ,_dbef :=_ecfbd .(*_gcb .PdfObjectName );if !_dbef {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_fggdd !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_e .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_ecfbd =_cgcbe .Get (1);_ecfbd =_gcb .TraceToDirectObject (_ecfbd );_bbcc ,_dbef :=_ecfbd .(*_gcb .PdfObjectArray );if !_dbef {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");};_bcebg .ColorantNames =_bbcc ;_ecfbd =_cgcbe .Get (2);_addf ,_fgeb :=NewPdfColorspaceFromPdfObject (_ecfbd );if _fgeb !=nil {return nil ,_fgeb ;};_bcebg .AlternateSpace =_addf ;_fcae ,_fgeb :=_gaeabb (_cgcbe .Get (3));if _fgeb !=nil {return nil ,_fgeb ;};_bcebg .TintTransform =_fcae ;if _cgcbe .Len ()==5{_ggdc ,_dgdb :=_fdbc (_cgcbe .Get (4));if _dgdb !=nil {return nil ,_dgdb ;};_bcebg .Attributes =_ggdc ;};return _bcebg ,nil ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _c .Time )(PdfDate ,error ){_fegd :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_fcbbd ,_ :=_cf .ParseInt (_fegd [1:3],10,32);_dafc ,_ :=_cf .ParseInt (_fegd [4:6],10,32);return PdfDate {_bgfd :int64 (timeObj .Year ()),_daeeed :int64 (timeObj .Month ()),_bbcdc :int64 (timeObj .Day ()),_feecf :int64 (timeObj .Hour ()),_fcad :int64 (timeObj .Minute ()),_efabe :int64 (timeObj .Second ()),_ddead :_fegd [0],_gaafg :_fcbbd ,_bgdfc :_dafc },nil ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_gbfgg *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gbfgg .AlternateSpace ==nil {return nil ,_fb .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");};return _gbfgg .AlternateSpace .ColorToRGB (color );};

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_eec :=NewPdfAnnotation ();_agf :=&PdfAnnotationPolyLine {};_agf .PdfAnnotation =_eec ;_agf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eec .SetContext (_agf );return _agf ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_dbbce *PdfColorspaceLab )ToPdfObject ()_gcb .PdfObject {_fggf :=_gcb .MakeArray ();_fggf .Append (_gcb .MakeName ("\u004c\u0061\u0062"));_dfbd :=_gcb .MakeDict ();if _dbbce .WhitePoint !=nil {_fbdgd :=_gcb .MakeArray (_gcb .MakeFloat (_dbbce .WhitePoint [0]),_gcb .MakeFloat (_dbbce .WhitePoint [1]),_gcb .MakeFloat (_dbbce .WhitePoint [2]));_dfbd .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fbdgd );}else {_fa .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};if _dbbce .BlackPoint !=nil {_agdfe :=_gcb .MakeArray (_gcb .MakeFloat (_dbbce .BlackPoint [0]),_gcb .MakeFloat (_dbbce .BlackPoint [1]),_gcb .MakeFloat (_dbbce .BlackPoint [2]));_dfbd .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_agdfe );};if _dbbce .Range !=nil {_fcfd :=_gcb .MakeArray (_gcb .MakeFloat (_dbbce .Range [0]),_gcb .MakeFloat (_dbbce .Range [1]),_gcb .MakeFloat (_dbbce .Range [2]),_gcb .MakeFloat (_dbbce .Range [3]));_dfbd .Set ("\u0052\u0061\u006eg\u0065",_fcfd );};_fggf .Append (_dfbd );if _dbbce ._cbbf !=nil {_dbbce ._cbbf .PdfObject =_fggf ;return _dbbce ._cbbf ;};return _fggf ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_ffag pdfFont };func (_dad *PdfReader )newPdfAnnotationTrapNetFromDict (_fbcd *_gcb .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_ebb :=PdfAnnotationTrapNet {};return &_ebb ,nil ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;XObjectTypePS ;XObjectTypeUnknown ;);

// GetBorderWidth returns the border style's width.
func (_dfc *PdfBorderStyle )GetBorderWidth ()float64 {if _dfc .W ==nil {return 1;};return *_dfc .W ;};

// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_gefc *PdfPage )GetContainingPdfObject ()_gcb .PdfObject {return _gefc ._gdeac };

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_cggd *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_gcb .PdfObject )(PdfColor ,error ){if len (objects )!=_cggd .GetNumComponents (){return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbgdg ,_baff :=_gcb .GetNumbersAsFloat (objects );if _baff !=nil {return nil ,_baff ;};return _cggd .ColorFromFloats (_fbgdg );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_ecaa *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bfegf :=vals [0];if _bfegf < 0.0||_bfegf > 1.0{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bdae :=vals [1];if _bdae < 0.0||_bdae > 1.0{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ebge :=vals [2];if _ebge < 0.0||_ebge > 1.0{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aaf :=NewPdfColorDeviceRGB (_bfegf ,_bdae ,_ebge );return _aaf ,nil ;};

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_ecgcf *PdfPattern )GetContext ()PdfModel {return _ecgcf ._dfcc };

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_bfgga .Lock ();defer _bfgga .Unlock ();_adddc =producer };func (_bagcf *XObjectImage )getParamsDict ()*_gcb .PdfObjectDictionary {_fdbbg :=_gcb .MakeDict ();_fdbbg .Set ("\u0057\u0069\u0064t\u0068",_gcb .MakeInteger (*_bagcf .Width ));_fdbbg .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_gcb .MakeInteger (*_bagcf .Height ));_fdbbg .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_gcb .MakeInteger (int64 (_bagcf .ColorSpace .GetNumComponents ())));_fdbbg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gcb .MakeInteger (*_bagcf .BitsPerComponent ));return _fdbbg ;};func (_eacf *DSS )generateHashMaps ()error {_bfaca ,_ccbgd :=_eacf .generateHashMap (_eacf .Certs );if _ccbgd !=nil {return _ccbgd ;};_cdcd ,_ccbgd :=_eacf .generateHashMap (_eacf .OCSPs );if _ccbgd !=nil {return _ccbgd ;};_bbcag ,_ccbgd :=_eacf .generateHashMap (_eacf .CRLs );if _ccbgd !=nil {return _ccbgd ;};_eacf ._eaga =_bfaca ;_eacf ._cgdge =_cdcd ;_eacf ._gbef =_bbcag ;return nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_bgaff *PdfFunctionType4 )ToPdfObject ()_gcb .PdfObject {_abadc :=_bgaff ._beffa ;if _abadc ==nil {_bgaff ._beffa =&_gcb .PdfObjectStream {};_abadc =_bgaff ._beffa ;};_fgda :=_gcb .MakeDict ();_fgda .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gcb .MakeInteger (4));_cebbda :=&_gcb .PdfObjectArray {};for _ ,_cgdce :=range _bgaff .Domain {_cebbda .Append (_gcb .MakeFloat (_cgdce ));};_fgda .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_cebbda );_gfca :=&_gcb .PdfObjectArray {};for _ ,_dfcg :=range _bgaff .Range {_gfca .Append (_gcb .MakeFloat (_dfcg ));};_fgda .Set ("\u0052\u0061\u006eg\u0065",_gfca );if _bgaff ._ccgae ==nil &&_bgaff .Program !=nil {_bgaff ._ccgae =[]byte (_bgaff .Program .String ());};_fgda .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gcb .MakeInteger (int64 (len (_bgaff ._ccgae ))));_abadc .Stream =_bgaff ._ccgae ;_abadc .PdfObjectDictionary =_fgda ;return _abadc ;};

// L returns the value of the L component of the color.
func (_ggfdg *PdfColorLab )L ()float64 {return _ggfdg [0]};

// GetOptimizer returns current PDF optimizer.
func (_eggg *PdfWriter )GetOptimizer ()Optimizer {return _eggg ._dcdaa };func (_eacff *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _eacff ._efff };func (_eded *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};func (_gecd *PdfAnnotation )String ()string {_gaba :="";_cgb ,_ccgg :=_gecd .ToPdfObject ().(*_gcb .PdfIndirectObject );if _ccgg {_gaba =_e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_gecd ._gbad ,_cgb .PdfObject .String ());};return _gaba ;};

// GetContentStreams returns the content stream as an array of strings.
func (_gbeef *PdfPage )GetContentStreams ()([]string ,error ){_faggf :=_gbeef .GetContentStreamObjs ();var _efda []string ;for _ ,_bbgeg :=range _faggf {_geegeb ,_fdbed :=_adgbe (_bbgeg );if _fdbed !=nil {return nil ,_fdbed ;};_efda =append (_efda ,_geegeb );};return _efda ,nil ;};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_ebd *PdfFont )CharcodesToUnicode (charcodes []_dee .CharCode )[]rune {_acaefa ,_ ,_ :=_ebd .CharcodesToUnicodeWithStats (charcodes );return _acaefa ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_gbgfg DefaultImageHandler )NewGrayImageFromGoImage (goimg _a .Image )(*Image ,error ){_fgdd :=goimg .Bounds ();_fdbgb :=&Image {Width :int64 (_fgdd .Dx ()),Height :int64 (_fgdd .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _fbgdc :=goimg .(type ){case *_a .Gray :if len (_fbgdc .Pix )!=_fgdd .Dx ()*_fgdd .Dy (){_abcbg ,_cagcf :=_efe .GrayConverter .Convert (goimg );if _cagcf !=nil {return nil ,_cagcf ;};_fdbgb .Data =_abcbg .Pix ();}else {_fdbgb .Data =_fbgdc .Pix ;};case *_a .Gray16 :_fdbgb .BitsPerComponent =16;if len (_fbgdc .Pix )!=_fgdd .Dx ()*_fgdd .Dy ()*2{_eagea ,_ecebd :=_efe .Gray16Converter .Convert (goimg );if _ecebd !=nil {return nil ,_ecebd ;};_fdbgb .Data =_eagea .Pix ();}else {_fdbgb .Data =_fbgdc .Pix ;};default:_bcdc ,_fegfb :=_efe .GrayConverter .Convert (goimg );if _fegfb !=nil {return nil ,_fegfb ;};_fdbgb .Data =_bcdc .Pix ();};return _fdbgb ,nil ;};func (_gcad *PdfReader )newPdfActionGotoFromDict (_bdf *_gcb .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_bdf .Get ("\u0044")},nil ;};func _bdgb (_gaefg _gcb .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_fegf :=NewPdfColorspaceSpecialSeparation ();if _ced ,_geegf :=_gaefg .(*_gcb .PdfIndirectObject );_geegf {_fegf ._egfe =_ced ;};_gaefg =_gcb .TraceToDirectObject (_gaefg );_edaga ,_dbee :=_gaefg .(*_gcb .PdfObjectArray );if !_dbee {return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");};if _edaga .Len ()!=4{return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_gaefg =_edaga .Get (0);_cgbd ,_dbee :=_gaefg .(*_gcb .PdfObjectName );if !_dbee {return nil ,_e .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};if *_cgbd !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_e .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");};_gaefg =_edaga .Get (1);_cgbd ,_dbee =_gaefg .(*_gcb .PdfObjectName );if !_dbee {return nil ,_e .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");};_fegf .ColorantName =_cgbd ;_gaefg =_edaga .Get (2);_gaeb ,_dbcd :=NewPdfColorspaceFromPdfObject (_gaefg );if _dbcd !=nil {return nil ,_dbcd ;};_fegf .AlternateSpace =_gaeb ;_bceec ,_dbcd :=_gaeabb (_edaga .Get (3));if _dbcd !=nil {return nil ,_dbcd ;};_fegf .TintTransform =_bceec ;return _fegf ,nil ;};var _gbbbg =false ;

// PartialName returns the partial name of the field.
func (_afca *PdfField )PartialName ()string {_eeda :="";if _afca .T !=nil {_eeda =_afca .T .Decoded ();}else {_fa .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");};return _eeda ;};

// Add appends a top level outline item to the outline.
func (_dcfdb *Outline )Add (item *OutlineItem ){_dcfdb .Entries =append (_dcfdb .Entries ,item )};

// String returns the name of the colorspace (DeviceN).
func (_eaecf *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_cegcd *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_gcddc ,_eaedg :=_gcb .GetDict (_cegcd ._gfdbe .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_eaedg {_gcddc =_gcb .MakeDict ();_cegcd ._gfdbe .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_gcddc );};_dcffa ,_eaedg :=_gcb .GetDict (_gcddc .Get (_gcb .PdfObjectName (extName )));if !_eaedg {_dcffa =_gcb .MakeDict ();_gcddc .Set (_gcb .PdfObjectName (extName ),_dcffa );};if _fgdad ,_ :=_gcb .GetNameVal (_dcffa .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));_fgdad !=baseVersion {_dcffa .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_gcb .MakeName (baseVersion ));};if _baedg ,_ :=_gcb .GetIntVal (_dcffa .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));_baedg !=extLevel {_dcffa .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_gcb .MakeInteger (int64 (extLevel )));};};

// ColorToRGB converts a Lab color to an RGB color.
func (_accae *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_bfcc :=func (_bdda float64 )float64 {if _bdda >=6.0/29{return _bdda *_bdda *_bdda ;};return 108.0/841*(_bdda -4/29);};_afbg ,_aeae :=color .(*PdfColorLab );if !_aeae {_fa .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");return nil ,_fb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_afbg .L ();AStar :=_afbg .A ();BStar :=_afbg .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;X :=_accae .WhitePoint [0]*_bfcc (L );Y :=_accae .WhitePoint [1]*_bfcc (M );Z :=_accae .WhitePoint [2]*_bfcc (N );_fbdc :=3.240479*X +-1.537150*Y +-0.498535*Z ;_cgeaba :=-0.969256*X +1.875992*Y +0.041556*Z ;_cdec :=0.055648*X +-0.204043*Y +1.057311*Z ;_fbdc =_f .Min (_f .Max (_fbdc ,0),1.0);_cgeaba =_f .Min (_f .Max (_cgeaba ,0),1.0);_cdec =_f .Min (_f .Max (_cdec ,0),1.0);return NewPdfColorDeviceRGB (_fbdc ,_cgeaba ,_cdec ),nil ;};func _bdeg (_bfcf []rune ,_dffe map[rune ]int ,_gaeab map[rune ]_aa .GID )*_gcb .PdfObjectArray {_fegg :=&_gcb .PdfObjectArray {};for _dagd :=0;_dagd < len (_bfcf );{_efagd :=_dffe [_bfcf [_dagd ]];_daedf :=_dagd ;for _ebgg :=_dagd +1;_ebgg < len (_bfcf );_ebgg ++{_caac :=_dffe [_bfcf [_ebgg ]];if _efagd ==_caac {_daedf =_ebgg ;}else {break ;};};_ecece :=_gaeab [_bfcf [_dagd ]];_dfdfd :=_gaeab [_bfcf [_daedf ]];_fegg .Append (_gcb .MakeInteger (int64 (_ecece )));_fegg .Append (_gcb .MakeInteger (int64 (_dfdfd )));_fegg .Append (_gcb .MakeInteger (int64 (_efagd )));_dagd =_daedf +1;};return _fegg ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_eadcf *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _eadcf .Alternate ==nil {if _eadcf .N ==1{_adgb :=NewPdfColorspaceDeviceGray ();return _adgb .ColorFromFloats (vals );}else if _eadcf .N ==3{_efc :=NewPdfColorspaceDeviceRGB ();return _efc .ColorFromFloats (vals );}else if _eadcf .N ==4{_daff :=NewPdfColorspaceDeviceCMYK ();return _daff .ColorFromFloats (vals );}else {return nil ,_fb .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");};};return _eadcf .Alternate .ColorFromFloats (vals );};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fcdab *PdfColorspaceSpecialSeparation )ToPdfObject ()_gcb .PdfObject {_effbc :=_gcb .MakeArray (_gcb .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_effbc .Append (_fcdab .ColorantName );_effbc .Append (_fcdab .AlternateSpace .ToPdfObject ());_effbc .Append (_fcdab .TintTransform .ToPdfObject ());if _fcdab ._egfe !=nil {_fcdab ._egfe .PdfObject =_effbc ;return _fcdab ._egfe ;};return _effbc ;};func (_agagc *PdfSignature )extractChainFromCert ()([]*_g .Certificate ,error ){var _gbgae *_gcb .PdfObjectArray ;switch _ggbbd :=_agagc .Cert .(type ){case *_gcb .PdfObjectString :_gbgae =_gcb .MakeArray (_ggbbd );case *_gcb .PdfObjectArray :_gbgae =_ggbbd ;default:return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_ggbbd );};var _geeba _ga .Buffer ;for _ ,_dgddc :=range _gbgae .Elements (){_feaad ,_abced :=_gcb .GetString (_dgddc );if !_abced {return nil ,_e .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_dgddc );};if _ ,_cbde :=_geeba .Write (_feaad .Bytes ());_cbde !=nil {return nil ,_cbde ;};};return _g .ParseCertificates (_geeba .Bytes ());};func _dafa (_acaef _gcb .PdfObject ,_cdgff bool )(*PdfFont ,error ){_fedfe ,_fdbef ,_cafa :=_bged (_acaef );if _cafa !=nil {if _cafa ==ErrType3FontNotSupported ||_cafa ==ErrType1CFontNotSupported {_efcg ,_gfeaf :=_dgddd (_fedfe ,_fdbef ,nil );if _gfeaf !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_fdbef ,_gfeaf );return nil ,_cafa ;};return &PdfFont {_ffag :_efcg },_cafa ;};return nil ,_cafa ;};_gcfg :=&PdfFont {};switch _fdbef ._caaad {case "\u0054\u0079\u0070e\u0030":if !_cdgff {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fdbef );return nil ,_fb .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_bgde ,_affd :=_gacg (_fedfe ,_fdbef );if _affd !=nil {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fdbef ,_affd );return nil ,_affd ;};_gcfg ._ffag =_bgde ;case "\u0054\u0079\u0070e\u0031","\u0054\u0079\u0070e\u0033","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _egaf *pdfFontSimple ;_dbeef ,_cagdb :=_aa .NewStdFontByName (_aa .StdFontName (_fdbef ._eefc ));if _cagdb {_bgge :=_fgfe (_dbeef );_gcfg ._ffag =&_bgge ;_egbb :=_gcb .TraceToDirectObject (_bgge .ToPdfObject ());_abgg ,_gfbgg ,_eeba :=_bged (_egbb );if _eeba !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_fdbef ,_bgge );return nil ,_eeba ;};for _ ,_dgfe :=range _fedfe .Keys (){_abgg .Set (_dgfe ,_fedfe .Get (_dgfe ));};_egaf ,_eeba =_dgddd (_abgg ,_gfbgg ,_bgge ._dfece );if _eeba !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_fdbef ,_bgge );return nil ,_eeba ;};_egaf ._egbc =_bgge ._egbc ;_egaf ._cbbab =_bgge ._cbbab ;}else {_egaf ,_cafa =_dgddd (_fedfe ,_fdbef ,nil );if _cafa !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_fdbef ,_cafa );return nil ,_cafa ;};};_cafa =_egaf .addEncoding ();if _cafa !=nil {return nil ,_cafa ;};if _cagdb {_egaf .updateStandard14Font ();};if _cagdb &&_egaf ._cgeba ==nil &&_egaf ._dfece ==nil {_fa .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_egaf );_fa .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_dbeef );};if len (_egaf ._egbc )==0{_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_egaf );};_gcfg ._ffag =_egaf ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_ddff ,_fgdfa :=_aeba (_fedfe ,_fdbef );if _fgdfa !=nil {_fa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_fgdfa );return nil ,_fgdfa ;};_gcfg ._ffag =_ddff ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_eebad ,_aeeeb :=_cbdcc (_fedfe ,_fdbef );if _aeeeb !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fdbef ,_aeeeb );return nil ,_aeeeb ;};_gcfg ._ffag =_eebad ;default:_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_fdbef );return nil ,_e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fdbef );};return _gcfg ,nil ;};func _aade (_gcba ,_fafbb string )string {if _gb .Contains (_gcba ,"\u002b"){_abea :=_gb .Split (_gcba ,"\u002b");if len (_abea )==2{_gcba =_abea [1];};};return _fafbb +"\u002b"+_gcba ;};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _gcb .PdfObject ;FontFamily _gcb .PdfObject ;FontStretch _gcb .PdfObject ;FontWeight _gcb .PdfObject ;Flags _gcb .PdfObject ;FontBBox _gcb .PdfObject ;ItalicAngle _gcb .PdfObject ;Ascent _gcb .PdfObject ;Descent _gcb .PdfObject ;Leading _gcb .PdfObject ;CapHeight _gcb .PdfObject ;XHeight _gcb .PdfObject ;StemV _gcb .PdfObject ;StemH _gcb .PdfObject ;AvgWidth _gcb .PdfObject ;MaxWidth _gcb .PdfObject ;MissingWidth _gcb .PdfObject ;FontFile _gcb .PdfObject ;FontFile2 _gcb .PdfObject ;FontFile3 _gcb .PdfObject ;CharSet _gcb .PdfObject ;_egae int ;_gfae float64 ;*fontFile ;_ccdfd *_aa .TtfType ;

// Additional entries for CIDFonts
Style _gcb .PdfObject ;Lang _gcb .PdfObject ;FD _gcb .PdfObject ;CIDSet _gcb .PdfObject ;_gafff *_gcb .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_bac *PdfActionGoToE )ToPdfObject ()_gcb .PdfObject {_bac .PdfAction .ToPdfObject ();_cab :=_bac ._gg ;_fd :=_cab .PdfObject .(*_gcb .PdfObjectDictionary );_fd .SetIfNotNil ("\u0053",_gcb .MakeName (string (ActionTypeGoToE )));if _bac .F !=nil {_fd .Set ("\u0046",_bac .F .ToPdfObject ());};_fd .SetIfNotNil ("\u0044",_bac .D );_fd .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_bac .NewWindow );_fd .SetIfNotNil ("\u0054",_bac .T );return _cab ;};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_gagdag *PdfPageResources )HasFontByName (keyName _gcb .PdfObjectName )bool {_ ,_bacgce :=_gagdag .GetFontByName (keyName );return _bacgce ;};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_bcb :=NewPdfAnnotation ();_ggc :=&PdfAnnotationSound {};_ggc .PdfAnnotation =_bcb ;_ggc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bcb .SetContext (_ggc );return _ggc ;};func (_gcfaf *PdfReader )lookupPageByObject (_dedgg _gcb .PdfObject )(*PdfPage ,error ){return nil ,_fb .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func _deefb (_deff *XObjectImage )error {if _deff .SMask ==nil {return nil ;};_eacfaf ,_bcbgeb :=_deff .SMask .(*_gcb .PdfObjectStream );if !_bcbgeb {_fa .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");return _gcb .ErrTypeError ;};_dffde :=_eacfaf .PdfObjectDictionary ;_dgdg :=_dffde .Get ("\u004d\u0061\u0074t\u0065");if _dgdg ==nil {return nil ;};_afbd ,_gggfd :=_eeddb (_dgdg .(*_gcb .PdfObjectArray ));if _gggfd !=nil {return _gggfd ;};_fbcae :=_gcb .MakeArrayFromFloats ([]float64 {_afbd });_dffde .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_fbcae );return nil ;};

// ToPdfObject implements interface PdfModel.
func (_cdc *PdfAnnotationStrikeOut )ToPdfObject ()_gcb .PdfObject {_cdc .PdfAnnotation .ToPdfObject ();_bbag :=_cdc ._dgc ;_face :=_bbag .PdfObject .(*_gcb .PdfObjectDictionary );_cdc .PdfAnnotationMarkup .appendToPdfDictionary (_face );_face .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));_face .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cdc .QuadPoints );return _bbag ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_cdbc *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_fb .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");};_gadf ,_geaf :=_efe .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._gaecf ,img ._gdeafd );if _geaf !=nil {return img ,_geaf ;};_bcce ,_geaf :=_efe .NRGBAConverter .Convert (_gadf );if _geaf !=nil {return img ,_geaf ;};_gdfd :=_dddf (_bcce .Base ());_fa .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_fa .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );_fa .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_gdfd .Data );_fa .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_gdfd );return _gdfd ,nil ;};

// ToPdfObject returns a stream object.
func (_bgdec *XObjectImage )ToPdfObject ()_gcb .PdfObject {_gfefe :=_bgdec ._cacbc ;_ccgc :=_gfefe .PdfObjectDictionary ;if _bgdec .Filter !=nil {_ccgc =_bgdec .Filter .MakeStreamDict ();_gfefe .PdfObjectDictionary =_ccgc ;};_ccgc .Set ("\u0054\u0079\u0070\u0065",_gcb .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_ccgc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0049\u006d\u0061g\u0065"));_ccgc .Set ("\u0057\u0069\u0064t\u0068",_gcb .MakeInteger (*(_bgdec .Width )));_ccgc .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_gcb .MakeInteger (*(_bgdec .Height )));if _bgdec .BitsPerComponent !=nil {_ccgc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gcb .MakeInteger (*(_bgdec .BitsPerComponent )));};if _bgdec .ColorSpace !=nil {_ccgc .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_bgdec .ColorSpace .ToPdfObject ());};_ccgc .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_bgdec .Intent );_ccgc .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_bgdec .ImageMask );_ccgc .SetIfNotNil ("\u004d\u0061\u0073\u006b",_bgdec .Mask );_ccgc .SetIfNotNil ("\u0044\u0065\u0063\u006f\u0064\u0065",_bgdec .Decode );_ccgc .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_bgdec .Interpolate );_ccgc .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_bgdec .Alternatives );_ccgc .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_bgdec .SMask );_ccgc .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_bgdec .SMaskInData );_ccgc .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_bgdec .Matte );_ccgc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_bgdec .Name );_ccgc .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_bgdec .StructParent );_ccgc .SetIfNotNil ("\u0049\u0044",_bgdec .ID );_ccgc .SetIfNotNil ("\u004f\u0050\u0049",_bgdec .OPI );_ccgc .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bgdec .Metadata );_ccgc .SetIfNotNil ("\u004f\u0043",_bgdec .OC );_ccgc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gcb .MakeInteger (int64 (len (_bgdec .Stream ))));_gfefe .Stream =_bgdec .Stream ;return _gfefe ;};

// SetFontByName sets the font specified by keyName to the given object.
func (_aageg *PdfPageResources )SetFontByName (keyName _gcb .PdfObjectName ,obj _gcb .PdfObject )error {if _aageg .Font ==nil {_aageg .Font =_gcb .MakeDict ();};_adccb ,_bgaee :=_gcb .TraceToDirectObject (_aageg .Font ).(*_gcb .PdfObjectDictionary );if !_bgaee {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_gcb .TraceToDirectObject (_aageg .Font ));return _gcb .ErrTypeError ;};_adccb .Set (keyName ,obj );return nil ;};

// String returns a string representation of what flags are set.
func (_cdfb FieldFlag )String ()string {_fdfc :="";if _cdfb ==FieldFlagClear {_fdfc ="\u0043\u006c\u0065a\u0072";return _fdfc ;};if _cdfb &FieldFlagReadOnly > 0{_fdfc +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _cdfb &FieldFlagRequired > 0{_fdfc +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _cdfb &FieldFlagNoExport > 0{_fdfc +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _cdfb &FieldFlagNoToggleToOff > 0{_fdfc +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _cdfb &FieldFlagRadio > 0{_fdfc +="\u007c\u0052\u0061\u0064\u0069\u006f";};if _cdfb &FieldFlagPushbutton > 0{_fdfc +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _cdfb &FieldFlagRadiosInUnision > 0{_fdfc +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _cdfb &FieldFlagMultiline > 0{_fdfc +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";};if _cdfb &FieldFlagPassword > 0{_fdfc +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _cdfb &FieldFlagFileSelect > 0{_fdfc +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _cdfb &FieldFlagDoNotScroll > 0{_fdfc +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";};if _cdfb &FieldFlagComb > 0{_fdfc +="\u007c\u0043\u006fm\u0062";};if _cdfb &FieldFlagRichText > 0{_fdfc +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _cdfb &FieldFlagDoNotSpellCheck > 0{_fdfc +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";};if _cdfb &FieldFlagCombo > 0{_fdfc +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _cdfb &FieldFlagEdit > 0{_fdfc +="\u007c\u0045\u0064i\u0074";};if _cdfb &FieldFlagSort > 0{_fdfc +="\u007c\u0053\u006fr\u0074";};if _cdfb &FieldFlagMultiSelect > 0{_fdfc +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";};if _cdfb &FieldFlagCommitOnSelChange > 0{_fdfc +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _gb .Trim (_fdfc ,"\u007c");};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _gcb .PdfObject ;V _gcb .PdfObject ;};func (_fag *PdfReader )newPdfActionFromIndirectObject (_agg *_gcb .PdfIndirectObject )(*PdfAction ,error ){_cbf ,_gba :=_agg .PdfObject .(*_gcb .PdfObjectDictionary );if !_gba {return nil ,_e .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};if model :=_fag ._ccdd .GetModelFromPrimitive (_cbf );model !=nil {_ggfb ,_ebc :=model .(*PdfAction );if !_ebc {return nil ,_e .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");};return _ggfb ,nil ;};_efd :=&PdfAction {};_efd ._gg =_agg ;_fag ._ccdd .Register (_cbf ,_efd );if _afc :=_cbf .Get ("\u0054\u0079\u0070\u0065");_afc !=nil {_gfe ,_def :=_afc .(*_gcb .PdfObjectName );if !_def {_fa .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_afc );}else {if *_gfe !="\u0041\u0063\u0074\u0069\u006f\u006e"{_fa .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_gfe );};_efd .Type =_gfe ;};};if _gccfc :=_cbf .Get ("\u004e\u0065\u0078\u0074");_gccfc !=nil {_efd .Next =_gccfc ;};if _eade :=_cbf .Get ("\u0053");_eade !=nil {_efd .S =_eade ;};_ace ,_fafb :=_efd .S .(*_gcb .PdfObjectName );if !_fafb {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_efd .S );return nil ,_e .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_efd .S );};_gd :=PdfActionType (_ace .String ());switch _gd {case ActionTypeGoTo :_fda ,_effg :=_fag .newPdfActionGotoFromDict (_cbf );if _effg !=nil {return nil ,_effg ;};_fda .PdfAction =_efd ;_efd ._ebe =_fda ;return _efd ,nil ;case ActionTypeGoToR :_baa ,_bbg :=_fag .newPdfActionGotoRFromDict (_cbf );if _bbg !=nil {return nil ,_bbg ;};_baa .PdfAction =_efd ;_efd ._ebe =_baa ;return _efd ,nil ;case ActionTypeGoToE :_fagc ,_ffc :=_fag .newPdfActionGotoEFromDict (_cbf );if _ffc !=nil {return nil ,_ffc ;};_fagc .PdfAction =_efd ;_efd ._ebe =_fagc ;return _efd ,nil ;case ActionTypeLaunch :_daf ,_bca :=_fag .newPdfActionLaunchFromDict (_cbf );if _bca !=nil {return nil ,_bca ;};_daf .PdfAction =_efd ;_efd ._ebe =_daf ;return _efd ,nil ;case ActionTypeThread :_ec ,_gfea :=_fag .newPdfActionThreadFromDict (_cbf );if _gfea !=nil {return nil ,_gfea ;};_ec .PdfAction =_efd ;_efd ._ebe =_ec ;return _efd ,nil ;case ActionTypeURI :_gbbf ,_gbac :=_fag .newPdfActionURIFromDict (_cbf );if _gbac !=nil {return nil ,_gbac ;};_gbbf .PdfAction =_efd ;_efd ._ebe =_gbbf ;return _efd ,nil ;case ActionTypeSound :_gdf ,_eaf :=_fag .newPdfActionSoundFromDict (_cbf );if _eaf !=nil {return nil ,_eaf ;};_gdf .PdfAction =_efd ;_efd ._ebe =_gdf ;return _efd ,nil ;case ActionTypeMovie :_gca ,_gde :=_fag .newPdfActionMovieFromDict (_cbf );if _gde !=nil {return nil ,_gde ;};_gca .PdfAction =_efd ;_efd ._ebe =_gca ;return _efd ,nil ;case ActionTypeHide :_gdd ,_bcc :=_fag .newPdfActionHideFromDict (_cbf );if _bcc !=nil {return nil ,_bcc ;};_gdd .PdfAction =_efd ;_efd ._ebe =_gdd ;return _efd ,nil ;case ActionTypeNamed :_eafe ,_cgdc :=_fag .newPdfActionNamedFromDict (_cbf );if _cgdc !=nil {return nil ,_cgdc ;};_eafe .PdfAction =_efd ;_efd ._ebe =_eafe ;return _efd ,nil ;case ActionTypeSubmitForm :_acc ,_bdg :=_fag .newPdfActionSubmitFormFromDict (_cbf );if _bdg !=nil {return nil ,_bdg ;};_acc .PdfAction =_efd ;_efd ._ebe =_acc ;return _efd ,nil ;case ActionTypeResetForm :_aec ,_agc :=_fag .newPdfActionResetFormFromDict (_cbf );if _agc !=nil {return nil ,_agc ;};_aec .PdfAction =_efd ;_efd ._ebe =_aec ;return _efd ,nil ;case ActionTypeImportData :_dgf ,_bdge :=_fag .newPdfActionImportDataFromDict (_cbf );if _bdge !=nil {return nil ,_bdge ;};_dgf .PdfAction =_efd ;_efd ._ebe =_dgf ;return _efd ,nil ;case ActionTypeSetOCGState :_cecgg ,_dce :=_fag .newPdfActionSetOCGStateFromDict (_cbf );if _dce !=nil {return nil ,_dce ;};_cecgg .PdfAction =_efd ;_efd ._ebe =_cecgg ;return _efd ,nil ;case ActionTypeRendition :_bbbe ,_caf :=_fag .newPdfActionRenditionFromDict (_cbf );if _caf !=nil {return nil ,_caf ;};_bbbe .PdfAction =_efd ;_efd ._ebe =_bbbe ;return _efd ,nil ;case ActionTypeTrans :_dfbf ,_ccbe :=_fag .newPdfActionTransFromDict (_cbf );if _ccbe !=nil {return nil ,_ccbe ;};_dfbf .PdfAction =_efd ;_efd ._ebe =_dfbf ;return _efd ,nil ;case ActionTypeGoTo3DView :_bfb ,_dgb :=_fag .newPdfActionGoTo3DViewFromDict (_cbf );if _dgb !=nil {return nil ,_dgb ;};_bfb .PdfAction =_efd ;_efd ._ebe =_bfb ;return _efd ,nil ;case ActionTypeJavaScript :_edc ,_dfd :=_fag .newPdfActionJavaScriptFromDict (_cbf );if _dfd !=nil {return nil ,_dfd ;};_edc .PdfAction =_efd ;_efd ._ebe =_edc ;return _efd ,nil ;};_fa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_gd );return nil ,nil ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_cge :=NewPdfAnnotation ();_aee :=&PdfAnnotationFreeText {};_aee .PdfAnnotation =_cge ;_aee .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cge .SetContext (_aee );return _aee ;};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;func (_cbacg *LTV )getCRLs (_bcbeb []*_g .Certificate )([][]byte ,error ){_feaea :=make ([][]byte ,0,len (_bcbeb ));for _ ,_abfae :=range _bcbeb {for _ ,_cbebgd :=range _abfae .CRLDistributionPoints {if _cbacg .CertClient .IsCA (_abfae ){continue ;};_eeabc ,_bcaca :=_cbacg .CRLClient .MakeRequest (_cbebgd ,_abfae );if _bcaca !=nil {_fa .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_bcaca );continue ;};_feaea =append (_feaea ,_eeabc );};};return _feaea ,nil ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_eedab *PdfReader )GetOutlines ()(*Outline ,error ){if _eedab ==nil {return nil ,_fb .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");};_beggce :=_eedab .GetOutlineTree ();if _beggce ==nil {return nil ,_fb .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");};var _gcdfbc func (_bgafc *PdfOutlineTreeNode ,_fffe *[]*OutlineItem );_gcdfbc =func (_bdff *PdfOutlineTreeNode ,_dabe *[]*OutlineItem ){if _bdff ==nil {return ;};if _bdff ._cgfc ==nil {_fa .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");return ;};var _fcbcg *OutlineItem ;if _bbefg ,_gcgcg :=_bdff ._cgfc .(*PdfOutlineItem );_gcgcg {_feccc :=_bbefg .Dest ;if (_feccc ==nil ||_gcb .IsNullObject (_feccc ))&&_bbefg .A !=nil {if _bdaf ,_dgfga :=_gcb .GetDict (_bbefg .A );_dgfga {_feccc ,_ =_gcb .GetArray (_bdaf .Get ("\u0044"));};};var _ceccc OutlineDest ;if _feccc !=nil &&!_gcb .IsNullObject (_feccc ){if _gaead ,_ddbfe :=_dcea (_feccc ,_eedab );_ddbfe ==nil {_ceccc =*_gaead ;}else {_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_feccc ,_ddbfe );};};_fcbcg =NewOutlineItem (_bbefg .Title .Decoded (),_ceccc );*_dabe =append (*_dabe ,_fcbcg );if _bbefg .Next !=nil {_gcdfbc (_bbefg .Next ,_dabe );};};if _bdff .First !=nil {if _fcbcg !=nil {_dabe =&_fcbcg .Entries ;};_gcdfbc (_bdff .First ,_dabe );};};_afff :=NewOutline ();_gcdfbc (_beggce ,&_afff .Entries );return _afff ,nil ;};type modelManager struct{_aeaeg map[PdfModel ]_gcb .PdfObject ;_cfad map[_gcb .PdfObject ]PdfModel ;};

// ToPdfObject implements interface PdfModel.
func (_ffg *PdfActionMovie )ToPdfObject ()_gcb .PdfObject {_ffg .PdfAction .ToPdfObject ();_eff :=_ffg ._gg ;_gab :=_eff .PdfObject .(*_gcb .PdfObjectDictionary );_gab .SetIfNotNil ("\u0053",_gcb .MakeName (string (ActionTypeMovie )));_gab .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_ffg .Annotation );_gab .SetIfNotNil ("\u0054",_ffg .T );_gab .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_ffg .Operation );return _eff ;};

// GetContentStream returns the pattern cell's content stream
func (_fbega *PdfTilingPattern )GetContentStream ()([]byte ,error ){_bfcdg ,_ ,_ccbdf :=_fbega .GetContentStreamWithEncoder ();return _bfcdg ,_ccbdf ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_gcb .PdfIndirectObject )*PdfOutlineItem {_dada :=PdfOutlineItem {};_dada ._cgfc =&_dada ;_dada .Title =_gcb .MakeString (title );_gabe :=_gcb .MakeArray ();_gabe .Append (page );_gabe .Append (_gcb .MakeName ("\u0046\u0069\u0074"));_dada .Dest =_gabe ;return &_dada ;};

// ColorToRGB converts gray -> rgb for a single color component.
func (_gfdb *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_cafg ,_gfdce :=color .(*PdfColorDeviceGray );if !_gfdce {_fa .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );return nil ,_fb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_cafg ),float64 (*_cafg ),float64 (*_cafg )),nil ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gcb .PdfObject ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_dgeee *PdfPageResources )SetXObjectByName (keyName _gcb .PdfObjectName ,stream *_gcb .PdfObjectStream )error {if _dgeee .XObject ==nil {_dgeee .XObject =_gcb .MakeDict ();};_ccabd :=_gcb .TraceToDirectObject (_dgeee .XObject );_acba ,_fgffa :=_ccabd .(*_gcb .PdfObjectDictionary );if !_fgffa {_fa .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_dgeee .XObject ,_ccabd );return _fb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_acba .Set (keyName ,stream );return nil ;};

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_gbfg :=&PdfBorderStyle {};return _gbfg };const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_gbbfg *PdfPage )SetContentStreams (cStreams []string ,encoder _gcb .StreamEncoder )error {if len (cStreams )==0{_gbbfg .Contents =nil ;return nil ;};if encoder ==nil {encoder =_gcb .NewRawEncoder ();};var _dagf []*_gcb .PdfObjectStream ;for _ ,_beacf :=range cStreams {_egbea :=&_gcb .PdfObjectStream {};_edggad :=encoder .MakeStreamDict ();_aeadg ,_agage :=encoder .EncodeBytes ([]byte (_beacf ));if _agage !=nil {return _agage ;};_edggad .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gcb .MakeInteger (int64 (len (_aeadg ))));_egbea .PdfObjectDictionary =_edggad ;_egbea .Stream =_aeadg ;_dagf =append (_dagf ,_egbea );};if len (_dagf )==1{_gbbfg .Contents =_dagf [0];}else {_bgeb :=_gcb .MakeArray ();for _ ,_gfgdf :=range _dagf {_bgeb .Append (_gfgdf );};_gbbfg .Contents =_bgeb ;};return nil ;};

// String returns a string that describes `base`.
func (_gdfaa fontCommon )String ()string {return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_gdfaa .coreString ());};func (_gcfa *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _gcfa ._efff ==nil &&_gcfa .DescendantFont !=nil {return _gcfa .DescendantFont .FontDescriptor ();};return _gcfa ._efff ;};

// ToInteger convert to an integer format.
func (_acfc *PdfColorDeviceGray )ToInteger (bits int )uint32 {_gebd :=_f .Pow (2,float64 (bits ))-1;return uint32 (_gebd *_acfc .Val ());};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_bbca *DSS )ToPdfObject ()_gcb .PdfObject {_fbeb :=_bbca ._fdab .PdfObject .(*_gcb .PdfObjectDictionary );_fbeb .Clear ();_bccff :=_gcb .MakeDict ();for _ebbd ,_gdaa :=range _bbca .VRI {_bccff .Set (*_gcb .MakeName (_ebbd ),_gdaa .ToPdfObject ());};_fbeb .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_gecad (_bbca .Certs ));_fbeb .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_gecad (_bbca .OCSPs ));_fbeb .SetIfNotNil ("\u0043\u0052\u004c\u0073",_gecad (_bbca .CRLs ));_fbeb .Set ("\u0056\u0052\u0049",_bccff );return _bbca ._fdab ;};

// M returns the value of the magenta component of the color.
func (_cdgb *PdfColorDeviceCMYK )M ()float64 {return _cdgb [1]};func (_bfba *PdfReader )newPdfAnnotationScreenFromDict (_fee *_gcb .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_agd :=PdfAnnotationScreen {};_agd .T =_fee .Get ("\u0054");_agd .MK =_fee .Get ("\u004d\u004b");_agd .A =_fee .Get ("\u0041");_agd .AA =_fee .Get ("\u0041\u0041");return &_agd ,nil ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_gcb .PdfObjectInteger ;BitsPerComponent *_gcb .PdfObjectInteger ;VerticesPerRow *_gcb .PdfObjectInteger ;Decode *_gcb .PdfObjectArray ;Function []PdfFunction ;};func (_egd *PdfReader )newPdfAnnotationFileAttachmentFromDict (_ceeb *_gcb .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_ddd :=PdfAnnotationFileAttachment {};_dbg ,_fedag :=_egd .newPdfAnnotationMarkupFromDict (_ceeb );if _fedag !=nil {return nil ,_fedag ;};_ddd .PdfAnnotationMarkup =_dbg ;_ddd .FS =_ceeb .Get ("\u0046\u0053");_ddd .Name =_ceeb .Get ("\u004e\u0061\u006d\u0065");return &_ddd ,nil ;};

// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_gcddb *PdfPattern )SetContext (ctx PdfModel ){_gcddb ._dfcc =ctx };

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _gcb .PdfObject ;Sy _gcb .PdfObject ;};func (_cdcc *pdfFontSimple )updateStandard14Font (){_feeg ,_bbbg :=_cdcc .Encoder ().(_dee .SimpleEncoder );if !_bbbg {_fa .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_cdcc .Encoder (),_cdcc );return ;};_aage :=_feeg .Charcodes ();_cdcc ._egbc =make (map[_dee .CharCode ]float64 ,len (_aage ));for _ ,_edcca :=range _aage {_gceb ,_ :=_feeg .CharcodeToRune (_edcca );_cdcc ._egbc [_edcca ]=_cdcc ._cbbab [_gceb ].Wx ;};};

// GetNumComponents returns the number of color components (3 for Lab).
func (_bgfg *PdfColorLab )GetNumComponents ()int {return 3};

// ToInteger convert to an integer format.
func (_gfgd *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_gfde :=_f .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_gfde *_gfgd .A ()),uint32 (_gfde *_gfgd .B ()),uint32 (_gfde *_gfgd .C ())};};func _ffdfb (_bfgf _gcb .PdfObject ){_fa .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_bfgf ,_bfgf .String ());if _ggcgef ,_cgaf :=_bfgf .(*_gcb .PdfObjectStream );_cgaf {_fbefa ,_bfee :=_gcb .DecodeStream (_ggcgef );if _bfee !=nil {_fa .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_bfee );return ;};_fa .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_fbefa );}else if _dbad ,_ggcf :=_bfgf .(*_gcb .PdfIndirectObject );_ggcf {_fa .Log .Debug ("\u0025\u0054\u0020%\u0076",_dbad .PdfObject ,_dbad .PdfObject );_fa .Log .Debug ("\u0025\u0073",_dbad .PdfObject .String ());};};

// ToPdfObject implements interface PdfModel.
func (_aagcf *PdfFilespec )ToPdfObject ()_gcb .PdfObject {_fgcg :=_aagcf .getDict ();_fgcg .Clear ();_fgcg .Set ("\u0054\u0079\u0070\u0065",_gcb .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_fgcg .SetIfNotNil ("\u0046\u0053",_aagcf .FS );_fgcg .SetIfNotNil ("\u0046",_aagcf .F );_fgcg .SetIfNotNil ("\u0055\u0046",_aagcf .UF );_fgcg .SetIfNotNil ("\u0044\u004f\u0053",_aagcf .DOS );_fgcg .SetIfNotNil ("\u004d\u0061\u0063",_aagcf .Mac );_fgcg .SetIfNotNil ("\u0055\u006e\u0069\u0078",_aagcf .Unix );_fgcg .SetIfNotNil ("\u0049\u0044",_aagcf .ID );_fgcg .SetIfNotNil ("\u0056",_aagcf .V );_fgcg .SetIfNotNil ("\u0045\u0046",_aagcf .EF );_fgcg .SetIfNotNil ("\u0052\u0046",_aagcf .RF );_fgcg .SetIfNotNil ("\u0044\u0065\u0073\u0063",_aagcf .Desc );_fgcg .SetIfNotNil ("\u0043\u0049",_aagcf .CI );return _aagcf ._afgd ;};

// ToPdfObject implements interface PdfModel.
func (_cgbg *PdfAnnotationText )ToPdfObject ()_gcb .PdfObject {_cgbg .PdfAnnotation .ToPdfObject ();_aeg :=_cgbg ._dgc ;_eaag :=_aeg .PdfObject .(*_gcb .PdfObjectDictionary );if _cgbg .PdfAnnotationMarkup !=nil {_cgbg .PdfAnnotationMarkup .appendToPdfDictionary (_eaag );};_eaag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0054\u0065\u0078\u0074"));_eaag .SetIfNotNil ("\u004f\u0070\u0065\u006e",_cgbg .Open );_eaag .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cgbg .Name );_eaag .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_cgbg .State );_eaag .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_cgbg .StateModel );return _aeg ;};func (_eedd fontCommon )asPdfObjectDictionary (_efca string )*_gcb .PdfObjectDictionary {if _efca !=""&&_eedd ._caaad !=""&&_efca !=_eedd ._caaad {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_efca ,_eedd );}else if _efca ==""&&_eedd ._caaad ==""{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_eedd );}else if _eedd ._caaad ==""{_eedd ._caaad =_efca ;};_eecff :=_gcb .MakeDict ();_eecff .Set ("\u0054\u0079\u0070\u0065",_gcb .MakeName ("\u0046\u006f\u006e\u0074"));_eecff .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_gcb .MakeName (_eedd ._eefc ));_eecff .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName (_eedd ._caaad ));if _eedd ._efff !=nil {_eecff .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_eedd ._efff .ToPdfObject ());};if _eedd ._faac !=nil {_eecff .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_eedd ._faac );}else if _eedd ._gccbc !=nil {_fcec ,_ffefde :=_eedd ._gccbc .Stream ();if _ffefde !=nil {_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_ffefde );}else {_eecff .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_fcec );};};return _eecff ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_abec *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_abec .ToPdfOutline ().PdfOutlineTreeNode ;};func _dgea (_decg _gcb .PdfObject )(*PdfBorderStyle ,error ){_beeg :=&PdfBorderStyle {};_beeg ._afcd =_decg ;var _cfeg *_gcb .PdfObjectDictionary ;_decg =_gcb .TraceToDirectObject (_decg );_cfeg ,_dcdg :=_decg .(*_gcb .PdfObjectDictionary );if !_dcdg {return nil ,_fb .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _acge :=_cfeg .Get ("\u0054\u0079\u0070\u0065");_acge !=nil {_ede ,_debdd :=_acge .(*_gcb .PdfObjectName );if !_debdd {_fa .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_acge );}else {if *_ede !="\u0042\u006f\u0072\u0064\u0065\u0072"{_fa .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_ede );};};};if _fffb :=_cfeg .Get ("\u0057");_fffb !=nil {_cebb ,_fcge :=_gcb .GetNumberAsFloat (_fffb );if _fcge !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_fcge );return nil ,_fcge ;};_beeg .W =&_cebb ;};if _aace :=_cfeg .Get ("\u0053");_aace !=nil {_effb ,_eaaa :=_aace .(*_gcb .PdfObjectName );if !_eaaa {return nil ,_fb .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};var _faaa BorderStyle ;switch *_effb {case "\u0053":_faaa =BorderStyleSolid ;case "\u0044":_faaa =BorderStyleDashed ;case "\u0042":_faaa =BorderStyleBeveled ;case "\u0049":_faaa =BorderStyleInset ;case "\u0055":_faaa =BorderStyleUnderline ;default:_fa .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_effb );return nil ,_fb .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_beeg .S =&_faaa ;};if _aaad :=_cfeg .Get ("\u0044");_aaad !=nil {_cebf ,_bddc :=_aaad .(*_gcb .PdfObjectArray );if !_bddc {_fa .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_aaad );return nil ,_fb .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");};_ggfd ,_dffd :=_cebf .ToIntegerArray ();if _dffd !=nil {_fa .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_dffd );return nil ,_dffd ;};_beeg .D =&_ggfd ;};return _beeg ,nil ;};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_gcb .PdfObjectArray ;};var _ _gcb .PdfObject =&pdfSignDictionary {};func (_gfbe *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// HasFontByName checks if has font resource by name.
func (_cddbd *PdfPage )HasFontByName (name _gcb .PdfObjectName )bool {_fffgd ,_cdfbe :=_cddbd .Resources .Font .(*_gcb .PdfObjectDictionary );if !_cdfbe {return false ;};if _edbcd :=_fffgd .Get (name );_edbcd !=nil {return true ;};return false ;};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_gcb .PdfObjectDictionary )(*PdfPageResources ,error ){_dfac :=NewPdfPageResources ();if _fafbbg :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_fafbbg !=nil {_dfac .ExtGState =_fafbbg ;};if _cebea :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");_cebea !=nil &&!_gcb .IsNullObject (_cebea ){_dfac .ColorSpace =_cebea ;};if _gafae :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_gafae !=nil {_dfac .Pattern =_gafae ;};if _agbddg :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_agbddg !=nil {_dfac .Shading =_agbddg ;};if _fdde :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_fdde !=nil {_dfac .XObject =_fdde ;};if _aaafb :=_gcb .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_aaafb !=nil {_dfac .Font =_aaafb ;};if _fgdca :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");_fgdca !=nil {_dfac .ProcSet =_fgdca ;};if _aaggf :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_aaggf !=nil {_dfac .Properties =_aaggf ;};return _dfac ,nil ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _gcb .PdfObject ;H _gcb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fbe *PdfActionRendition )ToPdfObject ()_gcb .PdfObject {_fbe .PdfAction .ToPdfObject ();_bba :=_fbe ._gg ;_deg :=_bba .PdfObject .(*_gcb .PdfObjectDictionary );_deg .SetIfNotNil ("\u0053",_gcb .MakeName (string (ActionTypeRendition )));_deg .SetIfNotNil ("\u0052",_fbe .R );_deg .SetIfNotNil ("\u0041\u004e",_fbe .AN );_deg .SetIfNotNil ("\u004f\u0050",_fbe .OP );_deg .SetIfNotNil ("\u004a\u0053",_fbe .JS );return _bba ;};type pdfCIDFontType0 struct{fontCommon ;_gbfd *_gcb .PdfIndirectObject ;_ffcf _dee .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_gcb .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _gcb .PdfObject ;W _gcb .PdfObject ;DW2 _gcb .PdfObject ;W2 _gcb .PdfObject ;_bcgge map[_dee .CharCode ]float64 ;_ggfdb float64 ;};func (_fgbgb *PdfReader )traverseObjectData (_dfcbg _gcb .PdfObject )error {return _gcb .ResolveReferencesDeep (_dfcbg ,_fgbgb ._bacb );};

// GetContainingPdfObject implements interface PdfModel.
func (_eaee *PdfSignature )GetContainingPdfObject ()_gcb .PdfObject {return _eaee ._gddgg };

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _gcb .PdfObject ;NewWindow _gcb .PdfObject ;T _gcb .PdfObject ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// Evaluate runs the function on the passed in slice and returns the results.
func (_aafc *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_fa .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffgfe :=[]float64 {0.0};if _aafc .C0 !=nil {_ffgfe =_aafc .C0 ;};_gfcd :=[]float64 {1.0};if _aafc .C1 !=nil {_gfcd =_aafc .C1 ;};var _cdgg []float64 ;for _fggfe :=0;_fggfe < len (_ffgfe );_fggfe ++{_febdc :=_ffgfe [_fggfe ]+_f .Pow (x [0],_aafc .N )*(_gfcd [_fggfe ]-_ffgfe [_fggfe ]);_cdgg =append (_cdgg ,_febdc );};return _cdgg ,nil ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_gcb .PdfObjectInteger ;BitsPerComponent *_gcb .PdfObjectInteger ;BitsPerFlag *_gcb .PdfObjectInteger ;Decode *_gcb .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_gcgdc *PdfFieldText )ToPdfObject ()_gcb .PdfObject {_gcgdc .PdfField .ToPdfObject ();_gbdef :=_gcgdc ._gcf ;_ddce :=_gbdef .PdfObject .(*_gcb .PdfObjectDictionary );_ddce .Set ("\u0046\u0054",_gcb .MakeName ("\u0054\u0078"));if _gcgdc .DA !=nil {_ddce .Set ("\u0044\u0041",_gcgdc .DA );};if _gcgdc .Q !=nil {_ddce .Set ("\u0051",_gcgdc .Q );};if _gcgdc .DS !=nil {_ddce .Set ("\u0044\u0053",_gcgdc .DS );};if _gcgdc .RV !=nil {_ddce .Set ("\u0052\u0056",_gcgdc .RV );};if _gcgdc .MaxLen !=nil {_ddce .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_gcgdc .MaxLen );};return _gbdef ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _gcb .PdfObject ;ColorSpace _gcb .PdfObject ;Pattern _gcb .PdfObject ;Shading _gcb .PdfObject ;XObject _gcb .PdfObject ;Font _gcb .PdfObject ;ProcSet _gcb .PdfObject ;Properties _gcb .PdfObject ;_ededf *_gcb .PdfObjectDictionary ;_dabea *PdfPageResourcesColorspaces ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_dacdf :=&PdfSignature {Type :_gcb .MakeName ("\u0053\u0069\u0067"),Handler :handler };_ggfgb :=&pdfSignDictionary {PdfObjectDictionary :_gcb .MakeDict (),_feage :&handler ,_cebdg :_dacdf };_dacdf ._gddgg =_gcb .MakeIndirectObject (_ggfgb );return _dacdf ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_gcb .PdfObjectBool ;SigFlags *_gcb .PdfObjectInteger ;CO *_gcb .PdfObjectArray ;DR *PdfPageResources ;DA *_gcb .PdfObjectString ;Q *_gcb .PdfObjectInteger ;XFA _gcb .PdfObject ;_cbaa *_gcb .PdfIndirectObject ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};func (_ceb *PdfReader )newPdfActionImportDataFromDict (_bce *_gcb .PdfObjectDictionary )(*PdfActionImportData ,error ){_bdfb ,_dcg :=_eeb (_bce .Get ("\u0046"));if _dcg !=nil {return nil ,_dcg ;};return &PdfActionImportData {F :_bdfb },nil ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_eccb *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_deeg *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _deeg .Range };

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_abaf *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _abaf ._dabea !=nil {return _abaf ._dabea ,nil ;};if _abaf .ColorSpace ==nil {return nil ,nil ;};_abagc ,_aceea :=_ebaca (_abaf .ColorSpace );if _aceea !=nil {return nil ,_aceea ;};_abaf ._dabea =_abagc ;return _abaf ._dabea ,nil ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};func _bcfg (_gbdf *_gcb .PdfIndirectObject ,_faaaa *_gcb .PdfObjectDictionary )(*DSS ,error ){if _gbdf ==nil {_gbdf =_gcb .MakeIndirectObject (nil );};_gbdf .PdfObject =_gcb .MakeDict ();_bdcc :=map[string ]*VRI {};if _eafb ,_geac :=_gcb .GetDict (_faaaa .Get ("\u0056\u0052\u0049"));_geac {for _ ,_fagca :=range _eafb .Keys (){if _gded ,_efbg :=_gcb .GetDict (_eafb .Get (_fagca ));_efbg {_bdcc [_gb .ToUpper (_fagca .String ())]=_cdeg (_gded );};};};return &DSS {Certs :_aagba (_faaaa .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_aagba (_faaaa .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_aagba (_faaaa .Get ("\u0043\u0052\u004c\u0073")),VRI :_bdcc ,_fdab :_gbdf },nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_ababe *PdfColorspaceLab )ColorFromPdfObjects (objects []_gcb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_addc ,_edbg :=_gcb .GetNumbersAsFloat (objects );if _edbg !=nil {return nil ,_edbg ;};return _ababe .ColorFromFloats (_addc );};func (_aabb *pdfFontSimple )addEncoding ()error {var (_gbab string ;_adegf map[_dee .CharCode ]_dee .GlyphName ;_dfaa _dee .SimpleEncoder ;);if _aabb .Encoder ()!=nil {_geedd ,_aedd :=_aabb .Encoder ().(_dee .SimpleEncoder );if _aedd &&_geedd !=nil {_gbab =_geedd .BaseName ();};};if _aabb .Encoding !=nil {_fgbd ,_gdeca ,_ceeg :=_aabb .getFontEncoding ();if _ceeg !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_aabb ._eefc ,_aabb ._caaad ,_aabb .Encoding ,_aabb .Encoding ,_ceeg );return _ceeg ;};if _fgbd !=""{_gbab =_fgbd ;};_adegf =_gdeca ;_dfaa ,_ceeg =_dee .NewSimpleTextEncoder (_gbab ,_adegf );if _ceeg !=nil {return _ceeg ;};};if _dfaa ==nil {_ffffe :=_aabb ._efff ;if _ffffe !=nil {switch _aabb ._caaad {case "\u0054\u0079\u0070e\u0031":if _ffffe .fontFile !=nil &&_ffffe .fontFile ._dfda !=nil {_fa .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");_dfaa =_ffffe .fontFile ._dfda ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _ffffe ._ccdfd !=nil {_fa .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_feeb ,_eebg :=_ffffe ._ccdfd .MakeEncoder ();if _eebg ==nil {_dfaa =_feeb ;};};};};};if _dfaa !=nil {if _adegf !=nil {_fa .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_adegf ,_aabb .baseFields ());_dfaa =_dee .ApplyDifferences (_dfaa ,_adegf );};_aabb .SetEncoder (_dfaa );};return nil ;};func _eebgd (_aedbg string )(map[_dee .CharCode ]_dee .GlyphName ,error ){_cdff :=_gb .Split (_aedbg ,"\u000a");_cfbd :=make (map[_dee .CharCode ]_dee .GlyphName );for _ ,_fbbgf :=range _cdff {_cbgde :=_gffcg .FindStringSubmatch (_fbbgf );if _cbgde ==nil {continue ;};_becd ,_gcbb :=_cbgde [1],_cbgde [2];_fgebd ,_dcde :=_cf .Atoi (_becd );if _dcde !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_fbbgf );return nil ,_gcb .ErrTypeError ;};_cfbd [_dee .CharCode (_fgebd )]=_dee .GlyphName (_gcbb );};_fa .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_cfbd );return _cfbd ,nil ;};

// GetAllContentStreams gets all the content streams for a page as one string.
func (_fefff *PdfPage )GetAllContentStreams ()(string ,error ){_gaeae ,_cabfb :=_fefff .GetContentStreams ();if _cabfb !=nil {return "",_cabfb ;};return _gb .Join (_gaeae ,"\u0020"),nil ;};func _fgfe (_geacc _aa .StdFont )pdfFontSimple {_gegdb :=_geacc .Descriptor ();return pdfFontSimple {fontCommon :fontCommon {_caaad :"\u0054\u0079\u0070e\u0031",_eefc :_geacc .Name ()},_cbbab :_geacc .GetMetricsTable (),_dgdd :&PdfFontDescriptor {FontName :_gcb .MakeName (string (_gegdb .Name )),FontFamily :_gcb .MakeName (_gegdb .Family ),FontWeight :_gcb .MakeFloat (float64 (_gegdb .Weight )),Flags :_gcb .MakeInteger (int64 (_gegdb .Flags )),FontBBox :_gcb .MakeArrayFromFloats (_gegdb .BBox [:]),ItalicAngle :_gcb .MakeFloat (_gegdb .ItalicAngle ),Ascent :_gcb .MakeFloat (_gegdb .Ascent ),Descent :_gcb .MakeFloat (_gegdb .Descent ),CapHeight :_gcb .MakeFloat (_gegdb .CapHeight ),XHeight :_gcb .MakeFloat (_gegdb .XHeight ),StemV :_gcb .MakeFloat (_gegdb .StemV ),StemH :_gcb .MakeFloat (_gegdb .StemH )},_dfece :_geacc .Encoder ()};};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_cgd :=NewPdfAction ();_gbb :=&PdfActionLaunch {};_gbb .PdfAction =_cgd ;_cgd .SetContext (_gbb );return _gbb ;};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_gcb .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_fadaa *_gcb .PdfIndirectObject ;};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_facca :=&PdfPageResources {};_facca ._ededf =_gcb .MakeDict ();return _facca ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_eagdb FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_eagdb .Mask ()&^fl .Mask ())};func (_daa *PdfReader )newPdfActionThreadFromDict (_efeaf *_gcb .PdfObjectDictionary )(*PdfActionThread ,error ){_gdb ,_ffga :=_eeb (_efeaf .Get ("\u0046"));if _ffga !=nil {return nil ,_ffga ;};return &PdfActionThread {D :_efeaf .Get ("\u0044"),B :_efeaf .Get ("\u0042"),F :_gdb },nil ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};func (_aafb *pdfCIDFontType0 )baseFields ()*fontCommon {return &_aafb .fontCommon };

// GetDescent returns the Descent of the font `descriptor`.
func (_bfae *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _gcb .GetNumberAsFloat (_bfae .Descent );};func (_dbca *PdfWriter )seekByName (_abgbd _gcb .PdfObject ,_bbdge []string ,_gcaae string )([]_gcb .PdfObject ,error ){_fa .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_abgbd );var _cddaf []_gcb .PdfObject ;if _cadee ,_fdbfe :=_abgbd .(*_gcb .PdfIndirectObject );_fdbfe {return _dbca .seekByName (_cadee .PdfObject ,_bbdge ,_gcaae );};if _cbbb ,_cgdeda :=_abgbd .(*_gcb .PdfObjectStream );_cgdeda {return _dbca .seekByName (_cbbb .PdfObjectDictionary ,_bbdge ,_gcaae );};if _abfbc ,_bdgdf :=_abgbd .(*_gcb .PdfObjectDictionary );_bdgdf {_fa .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_cbaec :=range _abfbc .Keys (){_dabee :=_abfbc .Get (_cbaec );if string (_cbaec )==_gcaae {_cddaf =append (_cddaf ,_dabee );};for _ ,_fcba :=range _bbdge {if string (_cbaec )==_fcba {_fa .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_fcba );_ccbfb ,_aggdd :=_dbca .seekByName (_dabee ,_bbdge ,_gcaae );if _aggdd !=nil {return _cddaf ,_aggdd ;};_cddaf =append (_cddaf ,_ccbfb ...);break ;};};};return _cddaf ,nil ;};return _cddaf ,nil ;};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_acecf *PdfPageResources )GetExtGState (keyName _gcb .PdfObjectName )(_gcb .PdfObject ,bool ){if _acecf .ExtGState ==nil {return nil ,false ;};_bffgf ,_bccfa :=_gcb .TraceToDirectObject (_acecf .ExtGState ).(*_gcb .PdfObjectDictionary );if !_bccfa {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_acecf .ExtGState );return nil ,false ;};if _cgfcd :=_bffgf .Get (keyName );_cgfcd !=nil {return _cgfcd ,true ;};return nil ,false ;};

// GetContainingPdfObject implements interface PdfModel.
func (_ae *PdfAction )GetContainingPdfObject ()_gcb .PdfObject {return _ae ._gg };

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_cbdf *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_gcb .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_fb .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");};_bddab :=&PdfColorPattern {};_bfge ,_feafc :=objects [len (objects )-1].(*_gcb .PdfObjectName );if !_feafc {_fa .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);return nil ,ErrTypeCheck ;};_bddab .PatternName =*_bfge ;if len (objects )> 1{_dbde :=objects [0:len (objects )-1];if _cbdf .UnderlyingCS ==nil {_fa .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");return nil ,_fb .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_egce ,_eabgf :=_cbdf .UnderlyingCS .ColorFromPdfObjects (_dbde );if _eabgf !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_eabgf );return nil ,_eabgf ;};_bddab .Color =_egce ;};return _bddab ,nil ;};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _gcb .PdfObject ;AN _gcb .PdfObject ;OP _gcb .PdfObject ;JS _gcb .PdfObject ;};

// IsEncrypted returns true if the PDF file is encrypted.
func (_egccc *PdfReader )IsEncrypted ()(bool ,error ){return _egccc ._efeb .IsEncrypted ()};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_abe PdfModel ;_gcf *_gcb .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_gcb .PdfObjectName ;T *_gcb .PdfObjectString ;TU *_gcb .PdfObjectString ;TM *_gcb .PdfObjectString ;Ff *_gcb .PdfObjectInteger ;V _gcb .PdfObject ;DV _gcb .PdfObject ;AA _gcb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_fgbc *PdfAnnotationInk )ToPdfObject ()_gcb .PdfObject {_fgbc .PdfAnnotation .ToPdfObject ();_bgdd :=_fgbc ._dgc ;_bbbff :=_bgdd .PdfObject .(*_gcb .PdfObjectDictionary );_fgbc .PdfAnnotationMarkup .appendToPdfDictionary (_bbbff );_bbbff .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0049\u006e\u006b"));_bbbff .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_fgbc .InkList );_bbbff .SetIfNotNil ("\u0042\u0053",_fgbc .BS );return _bgdd ;};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _gcb .PdfObject ;Popup *PdfAnnotationPopup ;CA _gcb .PdfObject ;RC _gcb .PdfObject ;CreationDate _gcb .PdfObject ;IRT _gcb .PdfObject ;Subj _gcb .PdfObject ;RT _gcb .PdfObject ;IT _gcb .PdfObject ;ExData _gcb .PdfObject ;};func _ebaca (_edead _gcb .PdfObject )(*PdfPageResourcesColorspaces ,error ){_gaebc :=&PdfPageResourcesColorspaces {};if _gcdfgb ,_gefdd :=_edead .(*_gcb .PdfIndirectObject );_gefdd {_gaebc ._fbab =_gcdfgb ;_edead =_gcdfgb .PdfObject ;};_dgcdb ,_aabfg :=_gcb .GetDict (_edead );if !_aabfg {return nil ,_fb .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_gaebc .Names =[]string {};_gaebc .Colorspaces =map[string ]PdfColorspace {};for _ ,_defdf :=range _dgcdb .Keys (){_cfada :=_dgcdb .Get (_defdf );_gaebc .Names =append (_gaebc .Names ,string (_defdf ));_eacbb ,_ebccb :=NewPdfColorspaceFromPdfObject (_cfada );if _ebccb !=nil {return nil ,_ebccb ;};_gaebc .Colorspaces [string (_defdf )]=_eacbb ;};return _gaebc ,nil ;};

// B returns the value of the blue component of the color.
func (_gdeb *PdfColorDeviceRGB )B ()float64 {return _gdeb [2]};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_acbec *PdfFieldButton )IsCheckbox ()bool {return _acbec .GetType ()==ButtonTypeCheckbox };func (_abfdg *PdfPage )setContainer (_baac *_gcb .PdfIndirectObject ){_baac .PdfObject =_abfdg ._aafafd ;_abfdg ._gdeac =_baac ;};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_geab *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");return img ,_fb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// GetNumPages returns the number of pages in the document.
func (_bgbfc *PdfReader )GetNumPages ()(int ,error ){if _bgbfc ._efeb .GetCrypter ()!=nil &&!_bgbfc ._efeb .IsAuthenticated (){return 0,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};return len (_bgbfc ._afcae ),nil ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_afcdg *PdfPageResources )GetContainingPdfObject ()_gcb .PdfObject {return _afcdg ._ededf };func _fdbdg (_fabg *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_fabg }};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _gcb .PdfObject ;};

// ToPdfObject implements interface PdfModel.
func (_ada *PdfActionGoTo3DView )ToPdfObject ()_gcb .PdfObject {_ada .PdfAction .ToPdfObject ();_dcd :=_ada ._gg ;_dca :=_dcd .PdfObject .(*_gcb .PdfObjectDictionary );_dca .SetIfNotNil ("\u0053",_gcb .MakeName (string (ActionTypeGoTo3DView )));_dca .SetIfNotNil ("\u0054\u0041",_ada .TA );_dca .SetIfNotNil ("\u0056",_ada .V );return _dcd ;};func (_fccd *PdfReader )newPdfOutlineItemFromIndirectObject (_geba *_gcb .PdfIndirectObject )(*PdfOutlineItem ,error ){_gecegd ,_agbe :=_geba .PdfObject .(*_gcb .PdfObjectDictionary );if !_agbe {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_faggb :=NewPdfOutlineItem ();_ffcda :=_gecegd .Get ("\u0054\u0069\u0074l\u0065");if _ffcda ==nil {return nil ,_e .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");};_gdfgc ,_dffa :=_gcb .GetString (_ffcda );if !_dffa {return nil ,_e .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_ffcda );};_faggb .Title =_gdfgc ;if _abef :=_gecegd .Get ("\u0043\u006f\u0075n\u0074");_abef !=nil {_dfca ,_cbfbg :=_abef .(*_gcb .PdfObjectInteger );if !_cbfbg {return nil ,_e .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_abef );};_bebdd :=int64 (*_dfca );_faggb .Count =&_bebdd ;};if _abce :=_gecegd .Get ("\u0044\u0065\u0073\u0074");_abce !=nil {_faggb .Dest =_gcb .ResolveReference (_abce );if !_fccd ._dddfd {_ddfc :=_fccd .traverseObjectData (_faggb .Dest );if _ddfc !=nil {return nil ,_ddfc ;};};};if _baedd :=_gecegd .Get ("\u0041");_baedd !=nil {_faggb .A =_gcb .ResolveReference (_baedd );if !_fccd ._dddfd {_aadba :=_fccd .traverseObjectData (_faggb .A );if _aadba !=nil {return nil ,_aadba ;};};};if _eddcg :=_gecegd .Get ("\u0053\u0045");_eddcg !=nil {_faggb .SE =nil ;};if _efbgc :=_gecegd .Get ("\u0043");_efbgc !=nil {_faggb .C =_gcb .ResolveReference (_efbgc );};if _gegeg :=_gecegd .Get ("\u0046");_gegeg !=nil {_faggb .F =_gcb .ResolveReference (_gegeg );};return _faggb ,nil ;};func (_cbcd *PdfReader )newPdfAnnotationPolyLineFromDict (_dfdc *_gcb .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_gfc :=PdfAnnotationPolyLine {};_eae ,_ece :=_cbcd .newPdfAnnotationMarkupFromDict (_dfdc );if _ece !=nil {return nil ,_ece ;};_gfc .PdfAnnotationMarkup =_eae ;_gfc .Vertices =_dfdc .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_gfc .LE =_dfdc .Get ("\u004c\u0045");_gfc .BS =_dfdc .Get ("\u0042\u0053");_gfc .IC =_dfdc .Get ("\u0049\u0043");_gfc .BE =_dfdc .Get ("\u0042\u0045");_gfc .IT =_dfdc .Get ("\u0049\u0054");_gfc .Measure =_dfdc .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_gfc ,nil ;};func _ddeca (_ggcdc []byte )[]byte {const _babab =52845;const _gcfabb =22719;_dfbaef :=55665;for _ ,_gcedf :=range _ggcdc [:4]{_dfbaef =(int (_gcedf )+_dfbaef )*_babab +_gcfabb ;};_ebafe :=make ([]byte ,len (_ggcdc )-4);for _gfef ,_dcbf :=range _ggcdc [4:]{_ebafe [_gfef ]=byte (int (_dcbf )^_dfbaef >>8);_dfbaef =(int (_dcbf )+_dfbaef )*_babab +_gcfabb ;};return _ebafe ;};func (_gdcbe *LTV )generateVRIKey (_ecbdc *PdfSignature )(string ,error ){_gfff ,_eaebb :=_fadda (_ecbdc .Contents .Bytes ());if _eaebb !=nil {return "",_eaebb ;};return _gb .ToUpper (_cb .EncodeToString (_gfff )),nil ;};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_becc :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");};_becc .N =N ;return _becc ,nil ;};

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_fgcbf *PdfFont )BytesToCharcodes (data []byte )[]_dee .CharCode {_fa .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );if _feff ,_ddbf :=_fgcbf ._ffag .(*pdfFontType0 );_ddbf &&_feff ._gfecec !=nil {if _adbgg ,_cdefb :=_feff .bytesToCharcodes (data );_cdefb {return _adbgg ;};};_baadd :=make ([]_dee .CharCode ,0,len (data )+len (data )%2);if _fgcbf .baseFields ().isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};};if len (data )%2!=0{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );data =append (data ,0);};for _bbeb :=0;_bbeb < len (data );_bbeb +=2{_abdba :=uint16 (data [_bbeb ])<<8|uint16 (data [_bbeb +1]);_baadd =append (_baadd ,_dee .CharCode (_abdba ));};}else {for _ ,_gbadg :=range data {_baadd =append (_baadd ,_dee .CharCode (_gbadg ));};};return _baadd ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_ggf :=NewPdfAction ();_aad :=&PdfActionGoToE {};_aad .PdfAction =_ggf ;_ggf .SetContext (_aad );return _aad ;};var _agae =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_gaed *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};func (_cgbc *PdfReader )buildPageList (_fgebe *_gcb .PdfIndirectObject ,_fcccb *_gcb .PdfIndirectObject ,_bdefgg map[_gcb .PdfObject ]struct{})error {if _fgebe ==nil {return nil ;};if _ ,_ddccf :=_bdefgg [_fgebe ];_ddccf {_fa .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_fgebe .ObjectNumber );return nil ;};_bdefgg [_fgebe ]=struct{}{};_edbad ,_cccgd :=_fgebe .PdfObject .(*_gcb .PdfObjectDictionary );if !_cccgd {return _fb .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_ddef ,_cccgd :=(*_edbad ).Get ("\u0054\u0079\u0070\u0065").(*_gcb .PdfObjectName );if !_cccgd {if _edbad .Get ("\u004b\u0069\u0064\u0073")==nil {return _fb .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_fa .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");_ddef =_gcb .MakeName ("\u0050\u0061\u0067e\u0073");_edbad .Set ("\u0054\u0079\u0070\u0065",_ddef );};_fa .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_ddef ,_fgebe );if *_ddef =="\u0050\u0061\u0067\u0065"{_gdagab ,_dbecg :=_cgbc .newPdfPageFromDict (_edbad );if _dbecg !=nil {return _dbecg ;};_gdagab .setContainer (_fgebe );if _fcccb !=nil {_edbad .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fcccb );};_cgbc ._afcae =append (_cgbc ._afcae ,_fgebe );_cgbc .PageList =append (_cgbc .PageList ,_gdagab );return nil ;};if *_ddef !="\u0050\u0061\u0067e\u0073"{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_ddef );return _fb .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");};if _fcccb !=nil {_edbad .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_fcccb );};if !_cgbc ._dddfd {_fadc :=_cgbc .traverseObjectData (_fgebe );if _fadc !=nil {return _fadc ;};};_fggdgd ,_dagad :=_cgbc ._efeb .Resolve (_edbad .Get ("\u004b\u0069\u0064\u0073"));if _dagad !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _dagad ;};var _caeb *_gcb .PdfObjectArray ;_caeb ,_cccgd =_fggdgd .(*_gcb .PdfObjectArray );if !_cccgd {_dgcc ,_fdfca :=_fggdgd .(*_gcb .PdfIndirectObject );if !_fdfca {return _fb .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_caeb ,_cccgd =_dgcc .PdfObject .(*_gcb .PdfObjectArray );if !_cccgd {return _fb .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_fa .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_caeb );for _fdbca ,_edbfgg :=range _caeb .Elements (){_cdfgb ,_agfeg :=_gcb .GetIndirect (_edbfgg );if !_agfeg {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_cdfgb );return _fb .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_caeb .Set (_fdbca ,_cdfgb );_dagad =_cgbc .buildPageList (_cdfgb ,_fgebe ,_bdefgg );if _dagad !=nil {return _dagad ;};};return nil ;};func (_cacfc *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _beaa []*PdfFieldSignature ;for _ ,_ddeg :=range _cacfc .AllFields (){switch _afccgg :=_ddeg .GetContext ().(type ){case *PdfFieldSignature :_effa :=_afccgg ;_beaa =append (_beaa ,_effa );};};return _beaa ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_gcb .PdfObjectInteger ;BitsPerComponent *_gcb .PdfObjectInteger ;BitsPerFlag *_gcb .PdfObjectInteger ;Decode *_gcb .PdfObjectArray ;Function []PdfFunction ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_gcb .PdfObject ;GetContainingPdfObject ()_gcb .PdfObject ;};func (_bbgd fontCommon )fontFlags ()int {if _bbgd ._efff ==nil {return 0;};return _bbgd ._efff ._egae ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_faedc :=&XObjectImage {};_fefeb :=&_gcb .PdfObjectStream {};_fefeb .PdfObjectDictionary =_gcb .MakeDict ();_faedc ._cacbc =_fefeb ;return _faedc ;};

// IsColored specifies if the pattern is colored.
func (_fbcfg *PdfTilingPattern )IsColored ()bool {if _fbcfg .PaintType !=nil &&*_fbcfg .PaintType ==1{return true ;};return false ;};var _ pdfFont =(*pdfCIDFontType2 )(nil );

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_gdebc *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _gdebc .baseFields ()._efff !=nil {return _gdebc .baseFields ()._efff ;};if _aaca :=_gdebc ._ffag .getFontDescriptor ();_aaca !=nil {return _aaca ;};_fa .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_gdebc );return nil ;};

// String returns a string representation of the field.
func (_abff *PdfField )String ()string {if _degaf ,_ceee :=_abff .ToPdfObject ().(*_gcb .PdfIndirectObject );_ceee {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_abff ._abe ,_degaf .PdfObject .String ());};return "";};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_cfd :=NewPdfAction ();_egb :=&PdfActionSound {};_egb .PdfAction =_cfd ;_cfd .SetContext (_egb );return _egb ;};func _aafa (_ggbc _gcb .PdfObject )(*fontFile ,error ){_fa .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_ggbc );_gaag :=&fontFile {};_ggbc =_gcb .TraceToDirectObject (_ggbc );_cafcf ,_egbga :=_ggbc .(*_gcb .PdfObjectStream );if !_egbga {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_ggbc );return nil ,_gcb .ErrTypeError ;};_fgeeg :=_cafcf .PdfObjectDictionary ;_gegeb ,_abbeb :=_gcb .DecodeStream (_cafcf );if _abbeb !=nil {return nil ,_abbeb ;};_badd ,_egbga :=_gcb .GetNameVal (_fgeeg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_egbga {_gaag ._afag =_badd ;if _badd =="\u0054\u0079\u0070\u0065\u0031\u0043"{_fa .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");return nil ,ErrType1CFontNotSupported ;};};_gfbd ,_ :=_gcb .GetIntVal (_fgeeg .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_acaefe ,_ :=_gcb .GetIntVal (_fgeeg .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _gfbd > len (_gegeb ){_gfbd =len (_gegeb );};if _gfbd +_acaefe > len (_gegeb ){_acaefe =len (_gegeb )-_gfbd ;};_cgcgg :=_gegeb [:_gfbd ];var _bfbf []byte ;if _acaefe > 0{_bfbf =_gegeb [_gfbd :_gfbd +_acaefe ];};if _gfbd > 0&&_acaefe > 0{_fbbad :=_gaag .loadFromSegments (_cgcgg ,_bfbf );if _fbbad !=nil {return nil ,_fbbad ;};};return _gaag ,nil ;};var ImageHandling ImageHandler =DefaultImageHandler {};func (_edfbb *pdfFontType0 )subsetRegistered ()error {_gdcg ,_aegcc :=_edfbb .DescendantFont ._ffag .(*pdfCIDFontType2 );if !_aegcc {_fa .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_edfbb .DescendantFont );return nil ;};if _gdcg ==nil {return nil ;};if _gdcg ._efff ==nil {_fa .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _edfbb ._bggef ==nil {_fa .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");return nil ;};_cage ,_aegcc :=_gcb .GetStream (_gdcg ._efff .FontFile2 );if !_aegcc {_fa .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");return _fb .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_fded ,_ccbde :=_gcb .DecodeStream (_cage );if _ccbde !=nil {_fa .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_ccbde );return _ccbde ;};_dcgd ,_ccbde :=_ccb .Parse (_ga .NewReader (_fded ));if _ccbde !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_cage .Stream ));return _ccbde ;};var _cgbge []rune ;var _edbee *_ccb .Font ;switch _afed :=_edfbb ._bggef .(type ){case *_dee .TrueTypeFontEncoder :_cgbge =_afed .RegisteredRunes ();_edbee ,_ccbde =_dcgd .SubsetKeepRunes (_cgbge );if _ccbde !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ccbde );return _ccbde ;};_afed .SubsetRegistered ();case *_dee .IdentityEncoder :_cgbge =_afed .RegisteredRunes ();_dddag :=make ([]_ccb .GlyphIndex ,len (_cgbge ));for _gccd ,_eagdf :=range _cgbge {_dddag [_gccd ]=_ccb .GlyphIndex (_eagdf );};_edbee ,_ccbde =_dcgd .SubsetKeepIndices (_dddag );if _ccbde !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ccbde );return _ccbde ;};case _dee .SimpleEncoder :_cegd :=_afed .Charcodes ();for _ ,_bcggc :=range _cegd {_bdgef ,_feec :=_afed .CharcodeToRune (_bcggc );if !_feec {_fa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_bcggc );continue ;};_cgbge =append (_cgbge ,_bdgef );};default:return _e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_edfbb ._bggef );};var _adef _ga .Buffer ;_ccbde =_edbee .Write (&_adef );if _ccbde !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ccbde );return _ccbde ;};if _edfbb ._gccbc !=nil {_gegb :=make (map[_ad .CharCode ]rune ,len (_cgbge ));for _ ,_dddgcb :=range _cgbge {_egebe ,_adbaaf :=_edfbb ._bggef .RuneToCharcode (_dddgcb );if !_adbaaf {continue ;};_gegb [_ad .CharCode (_egebe )]=_dddgcb ;};_edfbb ._gccbc =_ad .NewToUnicodeCMap (_gegb );};_cage ,_ccbde =_gcb .MakeStream (_adef .Bytes (),_gcb .NewFlateEncoder ());if _ccbde !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ccbde );return _ccbde ;};_cage .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_gcb .MakeInteger (int64 (_adef .Len ())));if _gefed ,_ccfa :=_gcb .GetStream (_gdcg ._efff .FontFile2 );_ccfa {*_gefed =*_cage ;}else {_gdcg ._efff .FontFile2 =_cage ;};_gfbef :=_ffagb ();if len (_edfbb ._eefc )> 0{_edfbb ._eefc =_aade (_edfbb ._eefc ,_gfbef );};if len (_gdcg ._eefc )> 0{_gdcg ._eefc =_aade (_gdcg ._eefc ,_gfbef );};if len (_edfbb ._gdec )> 0{_edfbb ._gdec =_aade (_edfbb ._gdec ,_gfbef );};if _gdcg ._efff !=nil {_cegdd ,_eeeab :=_gcb .GetName (_gdcg ._efff .FontName );if _eeeab &&len (_cegdd .String ())> 0{_fdca :=_aade (_cegdd .String (),_gfbef );_gdcg ._efff .FontName =_gcb .MakeName (_fdca );};};return nil ;};func _fadda (_gadfg []byte )([]byte ,error ){_dfbde :=_ed .New ();if _ ,_bccag :=_dfb .Copy (_dfbde ,_ga .NewReader (_gadfg ));_bccag !=nil {return nil ,_bccag ;};return _dfbde .Sum (nil ),nil ;};

// Encoder returns the font's text encoder.
func (_ccefc *PdfFont )Encoder ()_dee .TextEncoder {_efag :=_ccefc .actualFont ();if _efag ==nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_ccefc ._ffag );return nil ;};return _efag .Encoder ();};func _cdeg (_feafd *_gcb .PdfObjectDictionary )*VRI {_aeeb ,_ :=_gcb .GetString (_feafd .Get ("\u0054\u0055"));_ebbf ,_ :=_gcb .GetString (_feafd .Get ("\u0054\u0053"));return &VRI {Cert :_aagba (_feafd .Get ("\u0043\u0065\u0072\u0074")),OCSP :_aagba (_feafd .Get ("\u004f\u0043\u0053\u0050")),CRL :_aagba (_feafd .Get ("\u0043\u0052\u004c")),TU :_aeeb ,TS :_ebbf };};func _edcga (_eccc *_gcb .PdfObjectDictionary )(*PdfShadingType2 ,error ){_gdfgb :=PdfShadingType2 {};_ggge :=_eccc .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _ggge ==nil {_fa .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");return nil ,ErrRequiredAttributeMissing ;};_dfggeg ,_dcbc :=_ggge .(*_gcb .PdfObjectArray );if !_dcbc {_fa .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggge );return nil ,_fb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _dfggeg .Len ()!=4{_fa .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dfggeg .Len ());return nil ,_fb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_gdfgb .Coords =_dfggeg ;if _ecdfc :=_eccc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_ecdfc !=nil {_ecdfc =_gcb .TraceToDirectObject (_ecdfc );_efadee ,_abcgf :=_ecdfc .(*_gcb .PdfObjectArray );if !_abcgf {_fa .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ecdfc );return nil ,_fb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gdfgb .Domain =_efadee ;};_ggge =_eccc .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ggge ==nil {_fa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_gdfgb .Function =[]PdfFunction {};if _fccg ,_eabgg :=_ggge .(*_gcb .PdfObjectArray );_eabgg {for _ ,_cgdgc :=range _fccg .Elements (){_fgedc ,_ddebc :=_gaeabb (_cgdgc );if _ddebc !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ddebc );return nil ,_ddebc ;};_gdfgb .Function =append (_gdfgb .Function ,_fgedc );};}else {_ffdde ,_bbgca :=_gaeabb (_ggge );if _bbgca !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bbgca );return nil ,_bbgca ;};_gdfgb .Function =append (_gdfgb .Function ,_ffdde );};if _gdaad :=_eccc .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_gdaad !=nil {_gdaad =_gcb .TraceToDirectObject (_gdaad );_effdcf ,_ebdae :=_gdaad .(*_gcb .PdfObjectArray );if !_ebdae {_fa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_gdaad );return nil ,_gcb .ErrTypeError ;};if _effdcf .Len ()!=2{_fa .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_effdcf .Len ());return nil ,ErrInvalidAttribute ;};_gdfgb .Extend =_effdcf ;};return &_gdfgb ,nil ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _gcb .PdfObject ;};

// SetOCProperties sets the optional content properties.
func (_cegfg *PdfWriter )SetOCProperties (ocProperties _gcb .PdfObject )error {_ecddg :=_cegfg ._gfdbe ;if ocProperties !=nil {_fa .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");_ecddg .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _cegfg .addObjects (ocProperties );};return nil ;};

// SetContext sets the sub annotation (context).
func (_cba *PdfAnnotation )SetContext (ctx PdfModel ){_cba ._gbad =ctx };func (_dfec *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_gcda *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_gcda .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_gcda ._gbed =acroForm ;};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_aedc *PdfPage )GetContentStreamObjs ()[]_gcb .PdfObject {if _aedc .Contents ==nil {return nil ;};_eedag :=_gcb .TraceToDirectObject (_aedc .Contents );if _cggbg ,_ffagd :=_eedag .(*_gcb .PdfObjectArray );_ffagd {return _cggbg .Elements ();};return []_gcb .PdfObject {_eedag };};

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _c .Time ){_bfgga .Lock ();defer _bfgga .Unlock ();_bffc =creationDate ;};

// SetShadingByName sets a shading resource specified by keyName.
func (_gfced *PdfPageResources )SetShadingByName (keyName _gcb .PdfObjectName ,shadingObj _gcb .PdfObject )error {if _gfced .Shading ==nil {_gfced .Shading =_gcb .MakeDict ();};_ggagg ,_fceag :=_gfced .Shading .(*_gcb .PdfObjectDictionary );if !_fceag {return _gcb .ErrTypeError ;};_ggagg .Set (keyName ,shadingObj );return nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_gegef *PdfOutlineItem )ToPdfObject ()_gcb .PdfObject {_bcddb :=_gegef ._ccfec ;_gccbaf :=_bcddb .PdfObject .(*_gcb .PdfObjectDictionary );_gccbaf .Set ("\u0054\u0069\u0074l\u0065",_gegef .Title );if _gegef .A !=nil {_gccbaf .Set ("\u0041",_gegef .A );};if _ecfea :=_gccbaf .Get ("\u0053\u0045");_ecfea !=nil {_gccbaf .Remove ("\u0053\u0045");};if _gegef .C !=nil {_gccbaf .Set ("\u0043",_gegef .C );};if _gegef .Dest !=nil {_gccbaf .Set ("\u0044\u0065\u0073\u0074",_gegef .Dest );};if _gegef .F !=nil {_gccbaf .Set ("\u0046",_gegef .F );};if _gegef .Count !=nil {_gccbaf .Set ("\u0043\u006f\u0075n\u0074",_gcb .MakeInteger (*_gegef .Count ));};if _gegef .Next !=nil {_gccbaf .Set ("\u004e\u0065\u0078\u0074",_gegef .Next .ToPdfObject ());};if _gegef .First !=nil {_gccbaf .Set ("\u0046\u0069\u0072s\u0074",_gegef .First .ToPdfObject ());};if _gegef .Prev !=nil {_gccbaf .Set ("\u0050\u0072\u0065\u0076",_gegef .Prev .GetContext ().GetContainingPdfObject ());};if _gegef .Last !=nil {_gccbaf .Set ("\u004c\u0061\u0073\u0074",_gegef .Last .GetContext ().GetContainingPdfObject ());};if _gegef .Parent !=nil {_gccbaf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gegef .Parent .GetContext ().GetContainingPdfObject ());};return _bcddb ;};func _ebcdd (_aaade _gcb .PdfObject )(*PdfColorspaceCalRGB ,error ){_adgg :=NewPdfColorspaceCalRGB ();if _gegec ,_gdbfd :=_aaade .(*_gcb .PdfIndirectObject );_gdbfd {_adgg ._cfdf =_gegec ;};_aaade =_gcb .TraceToDirectObject (_aaade );_cgaa ,_aced :=_aaade .(*_gcb .PdfObjectArray );if !_aced {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cgaa .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_aaade =_gcb .TraceToDirectObject (_cgaa .Get (0));_gdcd ,_aced :=_aaade .(*_gcb .PdfObjectName );if !_aced {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};if *_gdcd !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_e .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_aaade =_gcb .TraceToDirectObject (_cgaa .Get (1));_fdfdd ,_aced :=_aaade .(*_gcb .PdfObjectDictionary );if !_aced {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");};_aaade =_fdfdd .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_aaade =_gcb .TraceToDirectObject (_aaade );_bgfe ,_aced :=_aaade .(*_gcb .PdfObjectArray );if !_aced {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");};if _bgfe .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_abab ,_adfeb :=_bgfe .GetAsFloat64Slice ();if _adfeb !=nil {return nil ,_adfeb ;};_adgg .WhitePoint =_abab ;_aaade =_fdfdd .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _aaade !=nil {_aaade =_gcb .TraceToDirectObject (_aaade );_aefee ,_fceg :=_aaade .(*_gcb .PdfObjectArray );if !_fceg {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");};if _aefee .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_acgd ,_ddfeg :=_aefee .GetAsFloat64Slice ();if _ddfeg !=nil {return nil ,_ddfeg ;};_adgg .BlackPoint =_acgd ;};_aaade =_fdfdd .Get ("\u0047\u0061\u006dm\u0061");if _aaade !=nil {_aaade =_gcb .TraceToDirectObject (_aaade );_bdeaf ,_dddae :=_aaade .(*_gcb .PdfObjectArray );if !_dddae {return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");};if _bdeaf .Len ()!=3{return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_acbe ,_gbdd :=_bdeaf .GetAsFloat64Slice ();if _gbdd !=nil {return nil ,_gbdd ;};_adgg .Gamma =_acbe ;};_aaade =_fdfdd .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _aaade !=nil {_aaade =_gcb .TraceToDirectObject (_aaade );_ddg ,_eeaf :=_aaade .(*_gcb .PdfObjectArray );if !_eeaf {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");};if _ddg .Len ()!=9{_fa .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_ddg .String ());return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");};_adba ,_fcbc :=_ddg .GetAsFloat64Slice ();if _fcbc !=nil {return nil ,_fcbc ;};_adgg .Matrix =_adba ;};return _adgg ,nil ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_dgeaf *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_dgeaf .NumInputs {_fa .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");return nil ,_fb .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _dgeaf ._dacd ==nil {_gcbeg :=_dgeaf .processSamples ();if _gcbeg !=nil {return nil ,_gcbeg ;};};_abfa :=_dgeaf .Encode ;if _abfa ==nil {_abfa =[]float64 {};for _eadag :=0;_eadag < len (_dgeaf .Size );_eadag ++{_abfa =append (_abfa ,0);_abfa =append (_abfa ,float64 (_dgeaf .Size [_eadag ]-1));};};_eeeeg :=_dgeaf .Decode ;if _eeeeg ==nil {_eeeeg =_dgeaf .Range ;};_aggeg :=make ([]int ,len (x ));for _fedac :=0;_fedac < len (x );_fedac ++{_dgfc :=x [_fedac ];_eegf :=_f .Min (_f .Max (_dgfc ,_dgeaf .Domain [2*_fedac ]),_dgeaf .Domain [2*_fedac +1]);_efcgd :=_efe .LinearInterpolate (_eegf ,_dgeaf .Domain [2*_fedac ],_dgeaf .Domain [2*_fedac +1],_abfa [2*_fedac ],_abfa [2*_fedac +1]);_ffegf :=_f .Min (_f .Max (_efcgd ,0),float64 (_dgeaf .Size [_fedac ]-1));_deeac :=int (_f .Floor (_ffegf +0.5));if _deeac < 0{_deeac =0;}else if _deeac > _dgeaf .Size [_fedac ]{_deeac =_dgeaf .Size [_fedac ]-1;};_aggeg [_fedac ]=_deeac ;};_aaagc :=_aggeg [0];for _bfbab :=1;_bfbab < _dgeaf .NumInputs ;_bfbab ++{_gdgf :=_aggeg [_bfbab ];for _afbf :=0;_afbf < _bfbab ;_afbf ++{_gdgf *=_dgeaf .Size [_afbf ];};_aaagc +=_gdgf ;};_aaagc *=_dgeaf .NumOutputs ;var _fbddc []float64 ;for _bddcc :=0;_bddcc < _dgeaf .NumOutputs ;_bddcc ++{_bdee :=_aaagc +_bddcc ;if _bdee >=len (_dgeaf ._dacd ){_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");continue ;};_adce :=_dgeaf ._dacd [_bdee ];_bddb :=_efe .LinearInterpolate (float64 (_adce ),0,_f .Pow (2,float64 (_dgeaf .BitsPerSample )),_eeeeg [2*_bddcc ],_eeeeg [2*_bddcc +1]);_bffb :=_f .Min (_f .Max (_bddb ,_dgeaf .Range [2*_bddcc ]),_dgeaf .Range [2*_bddcc +1]);_fbddc =append (_fbddc ,_bffb );};return _fbddc ,nil ;};func _gdeaf (_eebgdc []byte )bool {if len (_eebgdc )< 4{return true ;};for _ceefa :=range _eebgdc [:4]{_abed :=rune (_ceefa );if !_eg .Is (_eg .ASCII_Hex_Digit ,_abed )&&!_eg .IsSpace (_abed ){return true ;};};return false ;};func (_cbfa *PdfReader )newPdfAnnotationWatermarkFromDict (_fdf *_gcb .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_eaa :=PdfAnnotationWatermark {};_eaa .FixedPrint =_fdf .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_eaa ,nil ;};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _gcb .PdfObject ;};func _afedc (_adbcd *_gcb .PdfObjectDictionary )(*PdfShadingType4 ,error ){_ccdda :=PdfShadingType4 {};_bgecc :=_adbcd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _bgecc ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_cfdgb ,_dgag :=_bgecc .(*_gcb .PdfObjectInteger );if !_dgag {_fa .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bgecc );return nil ,_gcb .ErrTypeError ;};_ccdda .BitsPerCoordinate =_cfdgb ;_bgecc =_adbcd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _bgecc ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_cfdgb ,_dgag =_bgecc .(*_gcb .PdfObjectInteger );if !_dgag {_fa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_bgecc );return nil ,_gcb .ErrTypeError ;};_ccdda .BitsPerComponent =_cfdgb ;_bgecc =_adbcd .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _bgecc ==nil {_fa .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_cfdgb ,_dgag =_bgecc .(*_gcb .PdfObjectInteger );if !_dgag {_fa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_bgecc );return nil ,_gcb .ErrTypeError ;};_ccdda .BitsPerComponent =_cfdgb ;_bgecc =_adbcd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _bgecc ==nil {_fa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_gcfabg ,_dgag :=_bgecc .(*_gcb .PdfObjectArray );if !_dgag {_fa .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bgecc );return nil ,_gcb .ErrTypeError ;};_ccdda .Decode =_gcfabg ;_bgecc =_adbcd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bgecc ==nil {_fa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_ccdda .Function =[]PdfFunction {};if _edbabf ,_bbfb :=_bgecc .(*_gcb .PdfObjectArray );_bbfb {for _ ,_cgddb :=range _edbabf .Elements (){_cadeg ,_fgddcc :=_gaeabb (_cgddb );if _fgddcc !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fgddcc );return nil ,_fgddcc ;};_ccdda .Function =append (_ccdda .Function ,_cadeg );};}else {_edaf ,_bgac :=_gaeabb (_bgecc );if _bgac !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_bgac );return nil ,_bgac ;};_ccdda .Function =append (_ccdda .Function ,_edaf );};return &_ccdda ,nil ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_ecgf *PdfAnnotationWidget )Field ()*PdfField {return _ecgf ._fgb };

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_dgbbd *PdfPage )AddContentStreamByString (contentStr string )error {_ggfg ,_gcdbe :=_gcb .MakeStream ([]byte (contentStr ),_gcb .NewFlateEncoder ());if _gcdbe !=nil {return _gcdbe ;};if _dgbbd .Contents ==nil {_dgbbd .Contents =_ggfg ;}else {_fcfed :=_gcb .TraceToDirectObject (_dgbbd .Contents );_eafa ,_gcegd :=_fcfed .(*_gcb .PdfObjectArray );if !_gcegd {_eafa =_gcb .MakeArray (_fcfed );};_eafa .Append (_ggfg );_dgbbd .Contents =_eafa ;};return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_ecbb *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ffgef :=vals [0];if _ffgef < 0.0||_ffgef > 1.0{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddfd :=vals [1];if _ddfd < 0.0||_ddfd > 1.0{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gdad :=vals [2];if _gdad < 0.0||_gdad > 1.0{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_babd :=NewPdfColorCalRGB (_ffgef ,_ddfd ,_gdad );return _babd ,nil ;};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_bfec *PdfColorspaceLab )DecodeArray ()[]float64 {_afdbc :=[]float64 {0,100};if _bfec .Range !=nil &&len (_bfec .Range )==4{_afdbc =append (_afdbc ,_bfec .Range ...);}else {_afdbc =append (_afdbc ,-100,100,-100,100);};return _afdbc ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_ggcbaa *PdfWriter )AddPage (page *PdfPage )error {_dgaef (page );_agffc :=page .ToPdfObject ();_fa .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");_fa .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_agffc );_gfcb ,_cefbg :=_gcb .GetIndirect (_agffc );if !_cefbg {return _fb .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");};_fa .Log .Trace ("\u0025\u0073",_gfcb );_fa .Log .Trace ("\u0025\u0073",_gfcb .PdfObject );_adagec ,_cefbg :=_gcb .GetDict (_gfcb .PdfObject );if !_cefbg {return _fb .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_fdeec ,_cefbg :=_gcb .GetName (_adagec .Get ("\u0054\u0079\u0070\u0065"));if !_cefbg {return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_adagec .Get ("\u0054\u0079\u0070\u0065"));};if _fdeec .String ()!="\u0050\u0061\u0067\u0065"{return _fb .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_acaa :=[]_gcb .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};_fcdag ,_ggace :=_gcb .GetIndirect (_adagec .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_fa .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_adagec .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_ggace );for _ggace {_fa .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_fcdag );_ccdba ,_efffc :=_gcb .GetDict (_fcdag .PdfObject );if !_efffc {return _fb .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};for _ ,_adcga :=range _acaa {_fa .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_adcga );if _adagec .Get (_adcga )!=nil {_fa .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;};if _afcbg :=_ccdba .Get (_adcga );_afcbg !=nil {_fa .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_adcga );_adagec .Set (_adcga ,_afcbg );};};_fcdag ,_ggace =_gcb .GetIndirect (_ccdba .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_fa .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ccdba .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_fa .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");_adagec .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ggcbaa ._ddfea );_gfcb .PdfObject =_adagec ;_gdebf ,_cefbg :=_gcb .GetDict (_ggcbaa ._ddfea .PdfObject );if !_cefbg {return _fb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");};_ecbcg ,_cefbg :=_gcb .GetArray (_gdebf .Get ("\u004b\u0069\u0064\u0073"));if !_cefbg {return _fb .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");};_ecbcg .Append (_gfcb );_ggcbaa ._dccdd [_adagec ]=struct{}{};_baccb ,_cefbg :=_gcb .GetInt (_gdebf .Get ("\u0043\u006f\u0075n\u0074"));if !_cefbg {return _fb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");};*_baccb =*_baccb +1;_ggcbaa .addObject (_gfcb );_eaea :=_ggcbaa .addObjects (_adagec );if _eaea !=nil {return _eaea ;};return nil ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};func (_bga *PdfReader )newPdfActionGoTo3DViewFromDict (_bdb *_gcb .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_bdb .Get ("\u0054\u0041"),V :_bdb .Get ("\u0056")},nil ;};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_eed :=NewPdfAnnotation ();_efdd :=&PdfAnnotationStrikeOut {};_efdd .PdfAnnotation =_eed ;_efdd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eed .SetContext (_efdd );return _efdd ;};func _dcea (_gdgc _gcb .PdfObject ,_adfde *PdfReader )(*OutlineDest ,error ){_aacfg ,_gefdb :=_gcb .GetArray (_gdgc );if !_gefdb {return nil ,_fb .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};_edagd :=_aacfg .Len ();if _edagd < 2{return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_edagd );};_dacbg :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_efbga :=_aacfg .Get (0);if _ddaec ,_dbfbd :=_gcb .GetIndirect (_efbga );_dbfbd {if _ ,_fddb ,_gaaab :=_adfde .PageFromIndirectObject (_ddaec );_gaaab ==nil {_dacbg .Page =int64 (_fddb -1);}else {_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_ddaec );};_dacbg .PageObj =_ddaec ;}else if _dbfa ,_fceb :=_gcb .GetIntVal (_efbga );_fceb {if _dbfa >=0&&_dbfa < len (_adfde .PageList ){_dacbg .PageObj =_adfde .PageList [_dbfa ].GetPageAsIndirectObject ();}else {_fa .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_dbfa );};_dacbg .Page =int64 (_dbfa );}else {return nil ,_e .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_efbga );};_abegc ,_gefdb :=_gcb .GetNameVal (_aacfg .Get (1));if !_gefdb {_fa .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_aacfg .Get (1));return _dacbg ,nil ;};switch _abegc {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _edagd > 2{_dacbg .Y ,_ =_gcb .GetNumberAsFloat (_gcb .TraceToDirectObject (_aacfg .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _edagd > 2{_dacbg .X ,_ =_gcb .GetNumberAsFloat (_gcb .TraceToDirectObject (_aacfg .Get (2)));};case "\u0058\u0059\u005a":if _edagd > 4{_dacbg .X ,_ =_gcb .GetNumberAsFloat (_gcb .TraceToDirectObject (_aacfg .Get (2)));_dacbg .Y ,_ =_gcb .GetNumberAsFloat (_gcb .TraceToDirectObject (_aacfg .Get (3)));_dacbg .Zoom ,_ =_gcb .GetNumberAsFloat (_gcb .TraceToDirectObject (_aacfg .Get (4)));};default:_abegc ="\u0046\u0069\u0074";};_dacbg .Mode =_abegc ;return _dacbg ,nil ;};

// ToGoTime returns the date in time.Time format.
func (_fggfc PdfDate )ToGoTime ()_c .Time {_deaba :=int (_fggfc ._gaafg *60*60+_fggfc ._bgdfc *60);switch _fggfc ._ddead {case '-':_deaba =-_deaba ;case 'Z':_deaba =0;};_eecdd :=_e .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_fggfc ._ddead ,_fggfc ._gaafg ,_fggfc ._bgdfc );_aedbc :=_c .FixedZone (_eecdd ,_deaba );return _c .Date (int (_fggfc ._bgfd ),_c .Month (_fggfc ._daeeed ),int (_fggfc ._bbcdc ),int (_fggfc ._feecf ),int (_fggfc ._fcad ),int (_fggfc ._efabe ),0,_aedbc );};func (_eccg *PdfReader )newPdfAnnotationRichMediaFromDict (_dagb *_gcb .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_ccde :=&PdfAnnotationRichMedia {};_ccde .RichMediaSettings =_dagb .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_ccde .RichMediaContent =_dagb .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");return _ccde ,nil ;};

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_efcb ,_ddbca :=_aa .NewStdFontByName (HelveticaName );if !_ddbca {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");};_eedb :=_fgfe (_efcb );return &PdfFont {_ffag :&_eedb };};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_adfd *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_beec ,_gccba :=color .(*PdfColorCalRGB );if !_gccba {_fa .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");return nil ,_fb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ffbd :=_beec .A ();_cacba :=_beec .B ();_becg :=_beec .C ();X :=_adfd .Matrix [0]*_f .Pow (_ffbd ,_adfd .Gamma [0])+_adfd .Matrix [3]*_f .Pow (_cacba ,_adfd .Gamma [1])+_adfd .Matrix [6]*_f .Pow (_becg ,_adfd .Gamma [2]);Y :=_adfd .Matrix [1]*_f .Pow (_ffbd ,_adfd .Gamma [0])+_adfd .Matrix [4]*_f .Pow (_cacba ,_adfd .Gamma [1])+_adfd .Matrix [7]*_f .Pow (_becg ,_adfd .Gamma [2]);Z :=_adfd .Matrix [2]*_f .Pow (_ffbd ,_adfd .Gamma [0])+_adfd .Matrix [5]*_f .Pow (_cacba ,_adfd .Gamma [1])+_adfd .Matrix [8]*_f .Pow (_becg ,_adfd .Gamma [2]);_dbgb :=3.240479*X +-1.537150*Y +-0.498535*Z ;_cfef :=-0.969256*X +1.875992*Y +0.041556*Z ;_degd :=0.055648*X +-0.204043*Y +1.057311*Z ;_dbgb =_f .Min (_f .Max (_dbgb ,0),1.0);_cfef =_f .Min (_f .Max (_cfef ,0),1.0);_degd =_f .Min (_f .Max (_degd ,0),1.0);return NewPdfColorDeviceRGB (_dbgb ,_cfef ,_degd ),nil ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_eced *PdfPageResources )SetXObjectFormByName (keyName _gcb .PdfObjectName ,xform *XObjectForm )error {_debgg :=xform .ToPdfObject ().(*_gcb .PdfObjectStream );_bdaea :=_eced .SetXObjectByName (keyName ,_debgg );return _bdaea ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_geda *PdfFieldSignature )ToPdfObject ()_gcb .PdfObject {if _geda .PdfAnnotationWidget !=nil {_geda .PdfAnnotationWidget .ToPdfObject ();};_geda .PdfField .ToPdfObject ();_bdgf :=_geda ._gcf ;_fbbg :=_bdgf .PdfObject .(*_gcb .PdfObjectDictionary );_fbbg .SetIfNotNil ("\u0046\u0054",_gcb .MakeName ("\u0053\u0069\u0067"));_fbbg .SetIfNotNil ("\u004c\u006f\u0063\u006b",_geda .Lock );_fbbg .SetIfNotNil ("\u0053\u0056",_geda .SV );if _geda .V !=nil {_fbbg .SetIfNotNil ("\u0056",_geda .V .ToPdfObject ());};return _bdgf ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gcb .PdfObject ;IC _gcb .PdfObject ;RO _gcb .PdfObject ;OverlayText _gcb .PdfObject ;Repeat _gcb .PdfObject ;DA _gcb .PdfObject ;Q _gcb .PdfObject ;};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_eggff *_gcb .PdfIndirectObject ;};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _gcb .PdfObject ;Open _gcb .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fffcf *PdfPageResourcesColorspaces )ToPdfObject ()_gcb .PdfObject {_ecbfd :=_gcb .MakeDict ();for _ ,_bebaga :=range _fffcf .Names {_ecbfd .Set (_gcb .PdfObjectName (_bebaga ),_fffcf .Colorspaces [_bebaga ].ToPdfObject ());};if _fffcf ._fbab !=nil {_fffcf ._fbab .PdfObject =_ecbfd ;return _fffcf ._fbab ;};return _ecbfd ;};func _cged (_ebfb *_gcb .PdfObjectDictionary )(*PdfFieldText ,error ){_caafc :=&PdfFieldText {};_caafc .DA ,_ =_gcb .GetString (_ebfb .Get ("\u0044\u0041"));_caafc .Q ,_ =_gcb .GetInt (_ebfb .Get ("\u0051"));_caafc .DS ,_ =_gcb .GetString (_ebfb .Get ("\u0044\u0053"));_caafc .RV =_ebfb .Get ("\u0052\u0056");_caafc .MaxLen ,_ =_gcb .GetInt (_ebfb .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));return _caafc ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dcbbd *PdfShadingType1 )ToPdfObject ()_gcb .PdfObject {_dcbbd .PdfShading .ToPdfObject ();_fffbe ,_dffedc :=_dcbbd .getShadingDict ();if _dffedc !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _dcbbd .Domain !=nil {_fffbe .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dcbbd .Domain );};if _dcbbd .Matrix !=nil {_fffbe .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_dcbbd .Matrix );};if _dcbbd .Function !=nil {if len (_dcbbd .Function )==1{_fffbe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dcbbd .Function [0].ToPdfObject ());}else {_dbeaa :=_gcb .MakeArray ();for _ ,_cbcbe :=range _dcbbd .Function {_dbeaa .Append (_cbcbe .ToPdfObject ());};_fffbe .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dbeaa );};};return _dcbbd ._bgcgd ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_bdd :=NewPdfAction ();_ead :=&PdfActionRendition {};_ead .PdfAction =_bdd ;_bdd .SetContext (_ead );return _ead ;};func (_cggf *PdfReader )newPdfPageFromDict (_gdfef *_gcb .PdfObjectDictionary )(*PdfPage ,error ){_afcad :=NewPdfPage ();_afcad ._aafafd =_gdfef ;_bafgb :=*_gdfef ;_cbgea ,_fggfg :=_bafgb .Get ("\u0054\u0079\u0070\u0065").(*_gcb .PdfObjectName );if !_fggfg {return nil ,_fb .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");};if *_cbgea !="\u0050\u0061\u0067\u0065"{return nil ,_fb .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _fadgg :=_bafgb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");_fadgg !=nil {_afcad .Parent =_fadgg ;};if _cfbe :=_bafgb .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_cfbe !=nil {_aagab ,_cdbd :=_gcb .GetString (_cfbe );if !_cdbd {return nil ,_fb .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");};_cgefb ,_cgfcc :=NewPdfDate (_aagab .Str ());if _cgfcc !=nil {return nil ,_cgfcc ;};_afcad .LastModified =&_cgefb ;};if _gfdac :=_bafgb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gfdac !=nil &&!_gcb .IsNullObject (_gfdac ){_ebebb ,_decfb :=_gcb .GetDict (_gfdac );if !_decfb {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gfdac );};var _cbcge error ;_afcad .Resources ,_cbcge =NewPdfPageResourcesFromDict (_ebebb );if _cbcge !=nil {return nil ,_cbcge ;};}else {_fgge ,_defbe :=_afcad .getParentResources ();if _defbe !=nil {return nil ,_defbe ;};if _fgge ==nil {_fgge =NewPdfPageResources ();};_afcad .Resources =_fgge ;};if _debfd :=_bafgb .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_debfd !=nil {_dfdgf ,_dfbab :=_gcb .GetArray (_debfd );if !_dfbab {return nil ,_fb .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _dfeeg error ;_afcad .MediaBox ,_dfeeg =NewPdfRectangle (*_dfdgf );if _dfeeg !=nil {return nil ,_dfeeg ;};};if _eeecc :=_bafgb .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_eeecc !=nil {_ecggg ,_bebab :=_gcb .GetArray (_eeecc );if !_bebab {return nil ,_fb .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _gbbdb error ;_afcad .CropBox ,_gbbdb =NewPdfRectangle (*_ecggg );if _gbbdb !=nil {return nil ,_gbbdb ;};};if _dcbgd :=_bafgb .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_dcbgd !=nil {_becca ,_ccfca :=_gcb .GetArray (_dcbgd );if !_ccfca {return nil ,_fb .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _fbeea error ;_afcad .BleedBox ,_fbeea =NewPdfRectangle (*_becca );if _fbeea !=nil {return nil ,_fbeea ;};};if _cegdc :=_bafgb .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_cegdc !=nil {_bgec ,_cafd :=_gcb .GetArray (_cegdc );if !_cafd {return nil ,_fb .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");};var _bbade error ;_afcad .TrimBox ,_bbade =NewPdfRectangle (*_bgec );if _bbade !=nil {return nil ,_bbade ;};};if _fdad :=_bafgb .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_fdad !=nil {_ccacb ,_cdaga :=_gcb .GetArray (_fdad );if !_cdaga {return nil ,_fb .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _gcdbb error ;_afcad .ArtBox ,_gcdbb =NewPdfRectangle (*_ccacb );if _gcdbb !=nil {return nil ,_gcdbb ;};};if _fggag :=_bafgb .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_fggag !=nil {_afcad .BoxColorInfo =_fggag ;};if _ggebd :=_bafgb .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_ggebd !=nil {_afcad .Contents =_ggebd ;};if _agdde :=_bafgb .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_agdde !=nil {_gccff ,_bbba :=_gcb .GetInt (_agdde );if !_bbba {return nil ,_fb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};_gggf :=int64 (*_gccff );_afcad .Rotate =&_gggf ;};if _dfcac :=_bafgb .Get ("\u0047\u0072\u006fu\u0070");_dfcac !=nil {_afcad .Group =_dfcac ;};if _bdeec :=_bafgb .Get ("\u0054\u0068\u0075m\u0062");_bdeec !=nil {_afcad .Thumb =_bdeec ;};if _fffbc :=_bafgb .Get ("\u0042");_fffbc !=nil {_afcad .B =_fffbc ;};if _afcga :=_bafgb .Get ("\u0044\u0075\u0072");_afcga !=nil {_afcad .Dur =_afcga ;};if _gcgba :=_bafgb .Get ("\u0054\u0072\u0061n\u0073");_gcgba !=nil {_afcad .Trans =_gcgba ;};if _abcab :=_bafgb .Get ("\u0041\u0041");_abcab !=nil {_afcad .AA =_abcab ;};if _eafbd :=_bafgb .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_eafbd !=nil {_afcad .Metadata =_eafbd ;};if _bebg :=_bafgb .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_bebg !=nil {_afcad .PieceInfo =_bebg ;};if _cagcfa :=_bafgb .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_cagcfa !=nil {_afcad .StructParents =_cagcfa ;};if _gbgd :=_bafgb .Get ("\u0049\u0044");_gbgd !=nil {_afcad .ID =_gbgd ;};if _egdc :=_bafgb .Get ("\u0050\u005a");_egdc !=nil {_afcad .PZ =_egdc ;};if _ecdca :=_bafgb .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");_ecdca !=nil {_afcad .SeparationInfo =_ecdca ;};if _cbed :=_bafgb .Get ("\u0054\u0061\u0062\u0073");_cbed !=nil {_afcad .Tabs =_cbed ;};if _ffacda :=_bafgb .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");_ffacda !=nil {_afcad .TemplateInstantiated =_ffacda ;};if _accac :=_bafgb .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_accac !=nil {_afcad .PresSteps =_accac ;};if _gdaga :=_bafgb .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_gdaga !=nil {_afcad .UserUnit =_gdaga ;};if _defd :=_bafgb .Get ("\u0056\u0050");_defd !=nil {_afcad .VP =_defd ;};if _ddege :=_bafgb .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_ddege !=nil {_afcad .Annots =_ddege ;};_afcad ._caab =_cggf ;return _afcad ,nil ;};

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_dafbd *PdfPageResources )SetXObjectImageByName (keyName _gcb .PdfObjectName ,ximg *XObjectImage )error {_bgbfe :=ximg .ToPdfObject ().(*_gcb .PdfObjectStream );_aacga :=_dafbd .SetXObjectByName (keyName ,_bgbfe );return _aacga ;};func (_cffb *PdfWriter )writeString (_dafgg string ){if _cffb ._gbfffa !=nil {return ;};_cfbdd ,_ccdbe :=_cffb ._adfb .WriteString (_dafgg );_cffb ._ggecf +=int64 (_cfbdd );_cffb ._gbfffa =_ccdbe ;};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_ecbc *Image )ToGoImage ()(_a .Image ,error ){_fa .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_abdbaa ,_adefd :=_efe .NewImage (int (_ecbc .Width ),int (_ecbc .Height ),int (_ecbc .BitsPerComponent ),_ecbc .ColorComponents ,_ecbc .Data ,_ecbc ._gaecf ,_ecbc ._gdeafd );if _adefd !=nil {return nil ,_adefd ;};return _abdbaa ,nil ;};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_aae :=NewPdfAnnotation ();_daee :=&PdfAnnotationMovie {};_daee .PdfAnnotation =_aae ;_aae .SetContext (_daee );return _daee ;};func _cfcgb (_ggdg _gcb .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_dcgc :=NewPdfColorspaceSpecialIndexed ();if _edbga ,_ebcb :=_ggdg .(*_gcb .PdfIndirectObject );_ebcb {_dcgc ._abad =_edbga ;};_ggdg =_gcb .TraceToDirectObject (_ggdg );_caee ,_acagf :=_ggdg .(*_gcb .PdfObjectArray );if !_acagf {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _caee .Len ()!=4{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_ggdg =_caee .Get (0);_eabd ,_acagf :=_ggdg .(*_gcb .PdfObjectName );if !_acagf {return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_eabd !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");};_ggdg =_caee .Get (1);_bggcb ,_gfeeg :=DetermineColorspaceNameFromPdfObject (_ggdg );if _gfeeg !=nil {return nil ,_gfeeg ;};if _bggcb =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_bggcb =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_fa .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_bggcb );return nil ,_ggbb ;};_aaaa ,_gfeeg :=NewPdfColorspaceFromPdfObject (_ggdg );if _gfeeg !=nil {return nil ,_gfeeg ;};_dcgc .Base =_aaaa ;_ggdg =_caee .Get (2);_bfacg ,_gfeeg :=_gcb .GetNumberAsInt64 (_ggdg );if _gfeeg !=nil {return nil ,_gfeeg ;};if _bfacg > 255{return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");};_dcgc .HiVal =int (_bfacg );_ggdg =_caee .Get (3);_dcgc .Lookup =_ggdg ;_ggdg =_gcb .TraceToDirectObject (_ggdg );var _ggg []byte ;if _cgbfg ,_fdgggg :=_ggdg .(*_gcb .PdfObjectString );_fdgggg {_ggg =_cgbfg .Bytes ();_fa .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_ggg );}else if _efad ,_bcca :=_ggdg .(*_gcb .PdfObjectStream );_bcca {_fa .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_ggdg .String ());_fa .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_efad .Stream ),_efad .Stream );_acec ,_eeea :=_gcb .DecodeStream (_efad );if _eeea !=nil {return nil ,_eeea ;};_fa .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_acec ),_acec );_ggg =_acec ;}else {_fa .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_ggdg );return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_ggg )< _dcgc .Base .GetNumComponents ()*(_dcgc .HiVal +1){_fa .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");_fa .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_ggg ),_dcgc .Base .GetNumComponents (),_dcgc .HiVal );}else {_ggg =_ggg [:_dcgc .Base .GetNumComponents ()*(_dcgc .HiVal +1)];};_dcgc ._eaca =_ggg ;return _dcgc ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_agbd *PdfAnnotationFileAttachment )ToPdfObject ()_gcb .PdfObject {_agbd .PdfAnnotation .ToPdfObject ();_gfdf :=_agbd ._dgc ;_afdb :=_gfdf .PdfObject .(*_gcb .PdfObjectDictionary );_agbd .PdfAnnotationMarkup .appendToPdfDictionary (_afdb );_afdb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));_afdb .SetIfNotNil ("\u0046\u0053",_agbd .FS );_afdb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_agbd .Name );return _gfdf ;};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_gcb .PdfObjectStream ;OCSP []*_gcb .PdfObjectStream ;CRL []*_gcb .PdfObjectStream ;TU *_gcb .PdfObjectString ;TS *_gcb .PdfObjectString ;};

// ToPdfObject implements interface PdfModel.
func (_fg *PdfActionGoToR )ToPdfObject ()_gcb .PdfObject {_fg .PdfAction .ToPdfObject ();_bef :=_fg ._gg ;_gccf :=_bef .PdfObject .(*_gcb .PdfObjectDictionary );_gccf .SetIfNotNil ("\u0053",_gcb .MakeName (string (ActionTypeGoToR )));if _fg .F !=nil {_gccf .Set ("\u0046",_fg .F .ToPdfObject ());};_gccf .SetIfNotNil ("\u0044",_fg .D );_gccf .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_fg .NewWindow );return _bef ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_bdbfe *Image )AlphaMap (mapFunc AlphaMapFunc ){for _abag ,_gafg :=range _bdbfe ._gaecf {_bdbfe ._gaecf [_abag ]=mapFunc (_gafg );};};func (_fdcg *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";};

// SetDecode sets the decode image float slice.
func (_addcf *Image )SetDecode (decode []float64 ){_addcf ._gdeafd =decode };

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_gbbd :=NewPdfAnnotation ();_bbf :=&PdfAnnotationUnderline {};_bbf .PdfAnnotation =_gbbd ;_bbf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gbbd .SetContext (_bbf );return _bbf ;};

// ToPdfObject implements interface PdfModel.
func (_bfca *PdfAnnotationUnderline )ToPdfObject ()_gcb .PdfObject {_bfca .PdfAnnotation .ToPdfObject ();_bcbg :=_bfca ._dgc ;_egfb :=_bcbg .PdfObject .(*_gcb .PdfObjectDictionary );_bfca .PdfAnnotationMarkup .appendToPdfDictionary (_egfb );_egfb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));_egfb .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bfca .QuadPoints );return _bcbg ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_dbf :=NewPdfAnnotation ();_daaf :=&PdfAnnotationLink {};_daaf .PdfAnnotation =_dbf ;_dbf .SetContext (_daaf );return _daaf ;};

// ToPdfObject implements interface PdfModel.
func (_gddfc *PdfAnnotationPolygon )ToPdfObject ()_gcb .PdfObject {_gddfc .PdfAnnotation .ToPdfObject ();_debd :=_gddfc ._dgc ;_cdfe :=_debd .PdfObject .(*_gcb .PdfObjectDictionary );_gddfc .PdfAnnotationMarkup .appendToPdfDictionary (_cdfe );_cdfe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));_cdfe .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_gddfc .Vertices );_cdfe .SetIfNotNil ("\u004c\u0045",_gddfc .LE );_cdfe .SetIfNotNil ("\u0042\u0053",_gddfc .BS );_cdfe .SetIfNotNil ("\u0049\u0043",_gddfc .IC );_cdfe .SetIfNotNil ("\u0042\u0045",_gddfc .BE );_cdfe .SetIfNotNil ("\u0049\u0054",_gddfc .IT );_cdfe .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_gddfc .Measure );return _debd ;};func (_egeg *PdfReader )newPdfActionMovieFromDict (_ade *_gcb .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_ade .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_ade .Get ("\u0054"),Operation :_ade .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;};

// ToPdfObject implements interface PdfModel.
func (_ccbd *PdfAnnotationProjection )ToPdfObject ()_gcb .PdfObject {_ccbd .PdfAnnotation .ToPdfObject ();_aea :=_ccbd ._dgc ;_bdfd :=_aea .PdfObject .(*_gcb .PdfObjectDictionary );_ccbd .PdfAnnotationMarkup .appendToPdfDictionary (_bdfd );return _aea ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _gcb .PdfObject ;MK _gcb .PdfObject ;A _gcb .PdfObject ;AA _gcb .PdfObject ;};

// Encoder returns the font's text encoder.
func (_gggc pdfCIDFontType0 )Encoder ()_dee .TextEncoder {return _gggc ._ffcf };func (_bcdg *PdfReader )newPdfAnnotationLinkFromDict (_edbc *_gcb .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_edcg :=PdfAnnotationLink {};_edcg .A =_edbc .Get ("\u0041");_edcg .Dest =_edbc .Get ("\u0044\u0065\u0073\u0074");_edcg .H =_edbc .Get ("\u0048");_edcg .PA =_edbc .Get ("\u0050\u0041");_edcg .QuadPoints =_edbc .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_edcg .BS =_edbc .Get ("\u0042\u0053");return &_edcg ,nil ;};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _gcb .PdfObject ;Mac _gcb .PdfObject ;Unix _gcb .PdfObject ;NewWindow _gcb .PdfObject ;};

// GetCerts returns the signature certificate chain.
func (_ggcge *PdfSignature )GetCerts ()([]*_g .Certificate ,error ){var _ebcdc []func ()([]*_g .Certificate ,error );switch _egcab ,_ :=_gcb .GetNameVal (_ggcge .SubFilter );_egcab {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_ebcdc =append (_ebcdc ,_ggcge .extractChainFromPKCS7 ,_ggcge .extractChainFromCert );case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_ebcdc =append (_ebcdc ,_ggcge .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_ebcdc =append (_ebcdc ,_ggcge .extractChainFromPKCS7 );default:return nil ,_e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_egcab );};for _ ,_fcdg :=range _ebcdc {_dcbdd ,_fgccd :=_fcdg ();if _fgccd !=nil {return nil ,_fgccd ;};if len (_dcbdd )> 0{return _dcbdd ,nil ;};};return nil ,ErrSignNoCertificates ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_cdedb pdfFontType0 )GetCharMetrics (code _dee .CharCode )(_aa .CharMetrics ,bool ){if _cdedb .DescendantFont ==nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_cdedb );return _aa .CharMetrics {},false ;};return _cdedb .DescendantFont .GetCharMetrics (code );};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_bface *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_cgbb :=_bface .actualFont ();if _cgbb ==nil {_fa .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_bface ._ffag );return _aa .CharMetrics {},false ;};if _deeaf ,_bagfe :=_cgbb .GetRuneMetrics (r );_bagfe {return _deeaf ,true ;};if _ggcc ,_fcfec :=_bface .GetFontDescriptor ();_fcfec ==nil &&_ggcc !=nil {return _aa .CharMetrics {Wx :_ggcc ._gfae },true ;};_fa .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_bface );return _aa .CharMetrics {},false ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _dfb .ReadSeeker )(*PdfReader ,error ){_dbab :=&PdfReader {_efddb :rs ,_bacb :map[_gcb .PdfObject ]struct{}{},_ccdd :_ecgeb (),_dddfd :true };_dbcdg ,_geaa :=_gcb .NewParser (rs );if _geaa !=nil {return nil ,_geaa ;};_dbab ._efeb =_dbcdg ;_cbadb ,_geaa :=_dbab .IsEncrypted ();if _geaa !=nil {return nil ,_geaa ;};if !_cbadb {_geaa =_dbab .loadStructure ();if _geaa !=nil {return nil ,_geaa ;};};return _dbab ,nil ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_fbcga *PdfPattern )GetContainingPdfObject ()_gcb .PdfObject {return _fbcga ._dabce };

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_cbae :=NewPdfAnnotation ();_cfdc :=&PdfAnnotationWidget {};_cfdc .PdfAnnotation =_cbae ;_cbae .SetContext (_cfdc );return _cfdc ;};func (_adbgc *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_gddfcd :=PdfDate {};_ebbc :=_beagd .FindAllStringSubmatch (dateStr ,1);if len (_ebbc )< 1{return _gddfcd ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0065\u0020s\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0073\u0029",dateStr );};if len (_ebbc [0])!=10{return _gddfcd ,_fb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0067\u0065\u0078p\u0020\u0067\u0072\u006f\u0075\u0070 \u006d\u0061\u0074\u0063\u0068\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020!\u003d\u0020\u0031\u0030");};_gddfcd ._bgfd ,_ =_cf .ParseInt (_ebbc [0][1],10,32);_gddfcd ._daeeed ,_ =_cf .ParseInt (_ebbc [0][2],10,32);_gddfcd ._bbcdc ,_ =_cf .ParseInt (_ebbc [0][3],10,32);_gddfcd ._feecf ,_ =_cf .ParseInt (_ebbc [0][4],10,32);_gddfcd ._fcad ,_ =_cf .ParseInt (_ebbc [0][5],10,32);_gddfcd ._efabe ,_ =_cf .ParseInt (_ebbc [0][6],10,32);if len (_ebbc [0][7])> 0{_gddfcd ._ddead =_ebbc [0][7][0];}else {_gddfcd ._ddead ='+';};if len (_ebbc [0][8])> 0{_gddfcd ._gaafg ,_ =_cf .ParseInt (_ebbc [0][8],10,32);}else {_gddfcd ._gaafg =0;};if len (_ebbc [0][9])> 0{_gddfcd ._bgdfc ,_ =_cf .ParseInt (_ebbc [0][9],10,32);}else {_gddfcd ._bgdfc =0;};return _gddfcd ,nil ;};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_bfg :=NewPdfAction ();_gee :=&PdfActionNamed {};_gee .PdfAction =_bfg ;_bfg .SetContext (_gee );return _gee ;};

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_afcd _gcb .PdfObject ;};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_geege *PdfFieldButton )IsRadio ()bool {return _geege .GetType ()==ButtonTypeRadio };

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_ffdb []byte ;_dacd []uint32 ;_gbcb *_gcb .PdfObjectStream ;};

// Initialize initializes the PdfSignature.
func (_gabd *PdfSignature )Initialize ()error {if _gabd .Handler ==nil {return _fb .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};return _gabd .Handler .InitSignature (_gabd );};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_ceeeg *PdfOutlineTreeNode )ToPdfObject ()_gcb .PdfObject {return _ceeeg .GetContext ().ToPdfObject ();};func _gccg (_gfecf _gcb .PdfObject )(*PdfShading ,error ){_ffade :=&PdfShading {};var _cebeg *_gcb .PdfObjectDictionary ;if _cbfg ,_bcaa :=_gcb .GetIndirect (_gfecf );_bcaa {_ffade ._bgcgd =_cbfg ;_deddf ,_aegaa :=_cbfg .PdfObject .(*_gcb .PdfObjectDictionary );if !_aegaa {_fa .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_gcb .ErrTypeError ;};_cebeg =_deddf ;}else if _ggega ,_ccedg :=_gcb .GetStream (_gfecf );_ccedg {_ffade ._bgcgd =_ggega ;_cebeg =_ggega .PdfObjectDictionary ;}else if _ecgfa ,_dfdd :=_gcb .GetDict (_gfecf );_dfdd {_ffade ._bgcgd =_ecgfa ;_cebeg =_ecgfa ;}else {_fa .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_gfecf );return nil ,_gcb .ErrTypeError ;};if _cebeg ==nil {_fa .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_fb .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_gfecf =_cebeg .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _gfecf ==nil {_fa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_gfecf =_gcb .TraceToDirectObject (_gfecf );_accb ,_cgcde :=_gfecf .(*_gcb .PdfObjectInteger );if !_cgcde {_fa .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_gfecf );return nil ,_gcb .ErrTypeError ;};if *_accb < 1||*_accb > 7{_fa .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_accb );return nil ,_gcb .ErrTypeError ;};_ffade .ShadingType =_accb ;_gfecf =_cebeg .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _gfecf ==nil {_fa .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_ccgbb ,_bafae :=NewPdfColorspaceFromPdfObject (_gfecf );if _bafae !=nil {_fa .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_bafae );return nil ,_bafae ;};_ffade .ColorSpace =_ccgbb ;_gfecf =_cebeg .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _gfecf !=nil {_gfecf =_gcb .TraceToDirectObject (_gfecf );_egcag ,_ddadf :=_gfecf .(*_gcb .PdfObjectArray );if !_ddadf {_fa .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gfecf );return nil ,_gcb .ErrTypeError ;};_ffade .Background =_egcag ;};_gfecf =_cebeg .Get ("\u0042\u0042\u006f\u0078");if _gfecf !=nil {_gfecf =_gcb .TraceToDirectObject (_gfecf );_eede ,_eeead :=_gfecf .(*_gcb .PdfObjectArray );if !_eeead {_fa .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_gfecf );return nil ,_gcb .ErrTypeError ;};_fdcac ,_fafcc :=NewPdfRectangle (*_eede );if _fafcc !=nil {_fa .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_fafcc );return nil ,_fafcc ;};_ffade .BBox =_fdcac ;};_gfecf =_cebeg .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");if _gfecf !=nil {_gfecf =_gcb .TraceToDirectObject (_gfecf );_acdgg ,_gffd :=_gfecf .(*_gcb .PdfObjectBool );if !_gffd {_fa .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gfecf );return nil ,_gcb .ErrTypeError ;};_ffade .AntiAlias =_acdgg ;};switch *_accb {case 1:_bfcfa ,_cegab :=_deaac (_cebeg );if _cegab !=nil {return nil ,_cegab ;};_bfcfa .PdfShading =_ffade ;_ffade ._febdg =_bfcfa ;return _ffade ,nil ;case 2:_aeega ,_ccfaa :=_edcga (_cebeg );if _ccfaa !=nil {return nil ,_ccfaa ;};_aeega .PdfShading =_ffade ;_ffade ._febdg =_aeega ;return _ffade ,nil ;case 3:_aebb ,_eecge :=_ggaea (_cebeg );if _eecge !=nil {return nil ,_eecge ;};_aebb .PdfShading =_ffade ;_ffade ._febdg =_aebb ;return _ffade ,nil ;case 4:_ebdaf ,_gedca :=_afedc (_cebeg );if _gedca !=nil {return nil ,_gedca ;};_ebdaf .PdfShading =_ffade ;_ffade ._febdg =_ebdaf ;return _ffade ,nil ;case 5:_bddfg ,_afebg :=_cecb (_cebeg );if _afebg !=nil {return nil ,_afebg ;};_bddfg .PdfShading =_ffade ;_ffade ._febdg =_bddfg ;return _ffade ,nil ;case 6:_dbeead ,_fgec :=_ggbca (_cebeg );if _fgec !=nil {return nil ,_fgec ;};_dbeead .PdfShading =_ffade ;_ffade ._febdg =_dbeead ;return _ffade ,nil ;case 7:_cdbfe ,_bedd :=_eadgf (_cebeg );if _bedd !=nil {return nil ,_bedd ;};_cdbfe .PdfShading =_ffade ;_ffade ._febdg =_cdbfe ;return _ffade ,nil ;};return nil ,_fb .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// ToPdfObject implements interface PdfModel.
func (_ebfgg *PdfSignature )ToPdfObject ()_gcb .PdfObject {_acef :=_ebfgg ._gddgg ;var _dfea *_gcb .PdfObjectDictionary ;if _dggb ,_cdaec :=_acef .PdfObject .(*pdfSignDictionary );_cdaec {_dfea =_dggb .PdfObjectDictionary ;}else {_dfea =_acef .PdfObject .(*_gcb .PdfObjectDictionary );};_dfea .SetIfNotNil ("\u0054\u0079\u0070\u0065",_ebfgg .Type );_dfea .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_ebfgg .Filter );_dfea .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_ebfgg .SubFilter );_dfea .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_ebfgg .ByteRange );_dfea .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_ebfgg .Contents );_dfea .SetIfNotNil ("\u0043\u0065\u0072\u0074",_ebfgg .Cert );_dfea .SetIfNotNil ("\u004e\u0061\u006d\u0065",_ebfgg .Name );_dfea .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_ebfgg .Reason );_dfea .SetIfNotNil ("\u004d",_ebfgg .M );_dfea .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_ebfgg .Reference );_dfea .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_ebfgg .Changes );_dfea .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_ebfgg .ContactInfo );return _acef ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_bfgga .Lock ();defer _bfgga .Unlock ();_eacgb =title };

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_dadc FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_dadc .Mask ()|fl .Mask ())};const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// ToPdfObject implements interface PdfModel.
func (_gcbe *PdfActionURI )ToPdfObject ()_gcb .PdfObject {_gcbe .PdfAction .ToPdfObject ();_egc :=_gcbe ._gg ;_bc :=_egc .PdfObject .(*_gcb .PdfObjectDictionary );_bc .SetIfNotNil ("\u0053",_gcb .MakeName (string (ActionTypeURI )));_bc .SetIfNotNil ("\u0055\u0052\u0049",_gcbe .URI );_bc .SetIfNotNil ("\u0049\u0073\u004da\u0070",_gcbe .IsMap );return _egc ;};

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_eacb *PdfFieldChoice )ToPdfObject ()_gcb .PdfObject {_eacb .PdfField .ToPdfObject ();_ceda :=_eacb ._gcf ;_abbdg :=_ceda .PdfObject .(*_gcb .PdfObjectDictionary );_abbdg .Set ("\u0046\u0054",_gcb .MakeName ("\u0043\u0068"));if _eacb .Opt !=nil {_abbdg .Set ("\u004f\u0070\u0074",_eacb .Opt );};if _eacb .TI !=nil {_abbdg .Set ("\u0054\u0049",_eacb .TI );};if _eacb .I !=nil {_abbdg .Set ("\u0049",_eacb .I );};return _ceda ;};

// HasExtGState checks whether a font is defined by the specified keyName.
func (_cced *PdfPageResources )HasExtGState (keyName _gcb .PdfObjectName )bool {_ ,_cbfac :=_cced .GetFontByName (keyName );return _cbfac ;};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_aecgb *XObjectForm )GetContainingPdfObject ()_gcb .PdfObject {return _aecgb ._cfadb };

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_baba *PdfFieldButton )SetType (btype ButtonType ){_baaa :=uint32 (0);if _baba .Ff !=nil {_baaa =uint32 (*_baba .Ff );};switch btype {case ButtonTypePush :_baaa |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_baaa |=FieldFlagRadio .Mask ();};_baba .Ff =_gcb .MakeInteger (int64 (_baaa ));};

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_aag :=NewPdfAnnotation ();_eacg :=&PdfAnnotationRichMedia {};_eacg .PdfAnnotation =_aag ;_aag .SetContext (_eacg );return _eacg ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_deed *LTV )EnableByName (name string ,extraCerts []*_g .Certificate )error {_gfccd :=_deed ._abcbc ._ggde .AcroForm ;for _ ,_ebcbg :=range _gfccd .AllFields (){_cabd ,_ :=_ebcbg .GetContext ().(*PdfFieldSignature );if _cabd ==nil {continue ;};if _ffbda :=_cabd .PartialName ();_ffbda !=name {continue ;};return _deed .Enable (_cabd .V ,extraCerts );};return nil ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_feag *PdfPageResourcesColorspaces )Set (key _gcb .PdfObjectName ,val PdfColorspace ){if _ ,_bbfe :=_feag .Colorspaces [string (key )];!_bbfe {_feag .Names =append (_feag .Names ,string (key ));};_feag .Colorspaces [string (key )]=val ;};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_gcb .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_egfe *_gcb .PdfIndirectObject ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_dgfge *_gcb .PdfIndirectObject ;};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_faegf *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _fgbgd []float64 ;for _gagba :=0;_gagba < _faegf .GetNumComponents ();_gagba ++{_fgbgd =append (_fgbgd ,0.0,1.0);};return _fgbgd ;};

// SetNamedDestinations sets the Names entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_bcfe *PdfWriter )SetNamedDestinations (names _gcb .PdfObject )error {if names ==nil {return nil ;};_fa .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");_bcfe ._gfdbe .Set ("\u004e\u0061\u006de\u0073",names );return _bcfe .addObjects (names );};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_gcb .PdfObject ,error );};

// GetCharMetrics returns the char metrics for character code `code`.
func (_ecdaf pdfCIDFontType0 )GetCharMetrics (code _dee .CharCode )(_aa .CharMetrics ,bool ){_fabd :=_ecdaf ._ggfdb ;if _ccbca ,_dfcff :=_ecdaf ._bcgge [code ];_dfcff {_fabd =_ccbca ;};return _aa .CharMetrics {Wx :_fabd },true ;};

// GetXObjectByName gets XObject by name.
func (_cgded *PdfPage )GetXObjectByName (name _gcb .PdfObjectName )(_gcb .PdfObject ,bool ){_bagfee ,_gfacee :=_cgded .Resources .XObject .(*_gcb .PdfObjectDictionary );if !_gfacee {return nil ,false ;};if _agaa :=_bagfee .Get (name );_agaa !=nil {return _agaa ,true ;};return nil ,false ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_debc *PdfColorspaceCalRGB )ToPdfObject ()_gcb .PdfObject {_bffg :=&_gcb .PdfObjectArray {};_bffg .Append (_gcb .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_cbgab :=_gcb .MakeDict ();if _debc .WhitePoint !=nil {_fcgg :=_gcb .MakeArray (_gcb .MakeFloat (_debc .WhitePoint [0]),_gcb .MakeFloat (_debc .WhitePoint [1]),_gcb .MakeFloat (_debc .WhitePoint [2]));_cbgab .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_fcgg );}else {_fa .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");};if _debc .BlackPoint !=nil {_deae :=_gcb .MakeArray (_gcb .MakeFloat (_debc .BlackPoint [0]),_gcb .MakeFloat (_debc .BlackPoint [1]),_gcb .MakeFloat (_debc .BlackPoint [2]));_cbgab .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_deae );};if _debc .Gamma !=nil {_bgdde :=_gcb .MakeArray (_gcb .MakeFloat (_debc .Gamma [0]),_gcb .MakeFloat (_debc .Gamma [1]),_gcb .MakeFloat (_debc .Gamma [2]));_cbgab .Set ("\u0047\u0061\u006dm\u0061",_bgdde );};if _debc .Matrix !=nil {_abae :=_gcb .MakeArray (_gcb .MakeFloat (_debc .Matrix [0]),_gcb .MakeFloat (_debc .Matrix [1]),_gcb .MakeFloat (_debc .Matrix [2]),_gcb .MakeFloat (_debc .Matrix [3]),_gcb .MakeFloat (_debc .Matrix [4]),_gcb .MakeFloat (_debc .Matrix [5]),_gcb .MakeFloat (_debc .Matrix [6]),_gcb .MakeFloat (_debc .Matrix [7]),_gcb .MakeFloat (_debc .Matrix [8]));_cbgab .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_abae );};_bffg .Append (_cbgab );if _debc ._cfdf !=nil {_debc ._cfdf .PdfObject =_bffg ;return _debc ._cfdf ;};return _bffg ;};func (_gcfe *PdfReader )resolveReference (_cddee *_gcb .PdfObjectReference )(_gcb .PdfObject ,bool ,error ){_eeeag ,_bgbg :=_gcfe ._efeb .ObjCache [int (_cddee .ObjectNumber )];if !_bgbg {_fa .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_cddee );_ddgdaa ,_cfag :=_gcfe ._efeb .LookupByReference (*_cddee );if _cfag !=nil {return nil ,false ,_cfag ;};_gcfe ._efeb .ObjCache [int (_cddee .ObjectNumber )]=_ddgdaa ;return _ddgdaa ,false ,nil ;};return _eeeag ,true ,nil ;};

// B returns the value of the B component of the color.
func (_gcdfg *PdfColorCalRGB )B ()float64 {return _gcdfg [1]};func _dadccf ()string {_bfgga .Lock ();defer _bfgga .Unlock ();return _ebbgb };

// ToPdfObject returns the PDF representation of the pattern.
func (_efcgg *PdfPattern )ToPdfObject ()_gcb .PdfObject {_fafc :=_efcgg .getDict ();_fafc .Set ("\u0054\u0079\u0070\u0065",_gcb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_fafc .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_gcb .MakeInteger (_efcgg .PatternType ));return _efcgg ._dabce ;};func (_ddcfd *PdfFilespec )getDict ()*_gcb .PdfObjectDictionary {if _fedab ,_fbgcf :=_ddcfd ._afgd .(*_gcb .PdfIndirectObject );_fbgcf {_ccbb ,_eadff :=_fedab .PdfObject .(*_gcb .PdfObjectDictionary );if !_eadff {return nil ;};return _ccbb ;}else if _bcfa ,_gbcf :=_ddcfd ._afgd .(*_gcb .PdfObjectDictionary );_gbcf {return _bcfa ;}else {_fa .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_ddcfd ._afgd );return nil ;};};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _gcb .PdfObject ;RichMediaContent _gcb .PdfObject ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_fcbb *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _eegbeb []*PdfField ;_bdecf :=map[*_gcb .PdfIndirectObject ]struct{}{};for _ ,_dfga :=range _fcbb .PageList {_cdgeg ,_abbde :=_dfga .GetAnnotations ();if _abbde !=nil {return _abbde ;};for _ ,_bfbaa :=range _cdgeg {var _ffaad *PdfField ;switch _dcae :=_bfbaa .GetContext ().(type ){case *PdfAnnotationWidget :if _dcae ._fgb !=nil {_ffaad =_dcae ._fgb ;break ;};if _dbcg ,_eecfa :=_gcb .GetIndirect (_dcae .Parent );_eecfa {_ffaad ,_abbde =_fcbb .newPdfFieldFromIndirectObject (_dbcg ,nil );if _abbde ==nil {break ;};_fa .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_dbcg ,_abbde );};if _dcae ._dgc !=nil {_ffaad ,_abbde =_fcbb .newPdfFieldFromIndirectObject (_dcae ._dgc ,nil );if _abbde ==nil {break ;};_fa .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_dcae ._dgc ,_abbde );};};if _ffaad ==nil {continue ;};if _ ,_eafde :=_bdecf [_ffaad ._gcf ];_eafde {continue ;};_bdecf [_ffaad ._gcf ]=struct{}{};_eegbeb =append (_eegbeb ,_ffaad );};};if len (_eegbeb )==0{return nil ;};if _fcbb .AcroForm ==nil {_fcbb .AcroForm =NewPdfAcroForm ();};_fcbb .AcroForm .Fields =&_eegbeb ;return nil ;};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_gcb .PdfObject ;};var (ErrRequiredAttributeMissing =_fb .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_fb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");ErrTypeCheck =_fb .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_ggbb =_fb .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_fb .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");ErrNoFont =_fb .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_egg .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_gcb .ErrNotSupported );ErrType1CFontNotSupported =_egg .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_gcb .ErrNotSupported );ErrType3FontNotSupported =_egg .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_gcb .ErrNotSupported );ErrTTCmapNotSupported =_egg .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_gcb .ErrNotSupported );ErrSignNotEnoughSpace =_egg .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");ErrSignNoCertificates =_egg .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _gcb .PdfObject ;Q _gcb .PdfObject ;RC _gcb .PdfObject ;DS _gcb .PdfObject ;CL _gcb .PdfObject ;IT _gcb .PdfObject ;BE _gcb .PdfObject ;RD _gcb .PdfObject ;BS _gcb .PdfObject ;LE _gcb .PdfObject ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _gcb .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_gcb .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_beeb ,_adfgg :=encoder .EncodeBytes (img .Data );if _adfgg !=nil {_fa .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_adfgg );return nil ,_adfgg ;};_edefc :=NewXObjectImage ();_facb :=img .Width ;_gbcg :=img .Height ;_edefc .Width =&_facb ;_edefc .Height =&_gbcg ;_dfaaf :=img .BitsPerComponent ;_edefc .BitsPerComponent =&_dfaaf ;_edefc .Filter =encoder ;_edefc .Stream =_beeb ;if cs ==nil {if img .ColorComponents ==1{_edefc .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_edefc .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_edefc .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_fb .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_edefc .ColorSpace =cs ;};if len (img ._gaecf )!=0{_ccecf :=NewXObjectImage ();_ccecf .Filter =encoder ;_ebgb ,_cafgb :=encoder .EncodeBytes (img ._gaecf );if _cafgb !=nil {_fa .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_cafgb );return nil ,_cafgb ;};_ccecf .Stream =_ebgb ;_ccecf .BitsPerComponent =_edefc .BitsPerComponent ;_ccecf .Width =&img .Width ;_ccecf .Height =&img .Height ;_ccecf .ColorSpace =NewPdfColorspaceDeviceGray ();_edefc .SMask =_ccecf .ToPdfObject ();}else {_edefc .SMask =xobjIn .SMask ;_edefc .ImageMask =xobjIn .ImageMask ;if _edefc .ColorSpace .GetNumComponents ()==1{_deefb (_edefc );};};return _edefc ,nil ;};func (_bgbf *PdfReader )newPdfAnnotationUnderlineFromDict (_beff *_gcb .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_badb :=PdfAnnotationUnderline {};_ccff ,_egbad :=_bgbf .newPdfAnnotationMarkupFromDict (_beff );if _egbad !=nil {return nil ,_egbad ;};_badb .PdfAnnotationMarkup =_ccff ;_badb .QuadPoints =_beff .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_badb ,nil ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_gafa *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _gafa ._gaeec ==nil {_gafa ._gaeec =_ef .NewPSExecutor (_gafa .Program );};var _bfbc []_ef .PSObject ;for _ ,_gfaecd :=range xVec {_bfbc =append (_bfbc ,_ef .MakeReal (_gfaecd ));};_gcdg ,_gbdbf :=_gafa ._gaeec .Execute (_bfbc );if _gbdbf !=nil {return nil ,_gbdbf ;};_geegdf ,_gbdbf :=_ef .PSObjectArrayToFloat64Array (_gcdg );if _gbdbf !=nil {return nil ,_gbdbf ;};return _geegdf ,nil ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_cbbfc *PdfField )ToPdfObject ()_gcb .PdfObject {_bccd :=_cbbfc ._gcf ;_cgce :=_bccd .PdfObject .(*_gcb .PdfObjectDictionary );_addde :=_gcb .MakeArray ();for _ ,_bdgga :=range _cbbfc .Kids {_addde .Append (_bdgga .ToPdfObject ());};for _ ,_bafe :=range _cbbfc .Annotations {if _bafe ._dgc !=_cbbfc ._gcf {_addde .Append (_bafe .GetContext ().ToPdfObject ());};};if _cbbfc .Parent !=nil {_cgce .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_cbbfc .Parent .GetContainingPdfObject ());};if _addde .Len ()> 0{_cgce .Set ("\u004b\u0069\u0064\u0073",_addde );};_cgce .SetIfNotNil ("\u0046\u0054",_cbbfc .FT );_cgce .SetIfNotNil ("\u0054",_cbbfc .T );_cgce .SetIfNotNil ("\u0054\u0055",_cbbfc .TU );_cgce .SetIfNotNil ("\u0054\u004d",_cbbfc .TM );_cgce .SetIfNotNil ("\u0046\u0066",_cbbfc .Ff );_cgce .SetIfNotNil ("\u0056",_cbbfc .V );_cgce .SetIfNotNil ("\u0044\u0056",_cbbfc .DV );_cgce .SetIfNotNil ("\u0041\u0041",_cbbfc .AA );return _bccd ;};func _cdag (_beee _gcb .PdfObject )(*PdfFontDescriptor ,error ){_cbbcd :=&PdfFontDescriptor {};_beee =_gcb .ResolveReference (_beee );if _gfead ,_dcge :=_beee .(*_gcb .PdfIndirectObject );_dcge {_cbbcd ._gafff =_gfead ;_beee =_gfead .PdfObject ;};_eeab ,_edee :=_gcb .GetDict (_beee );if !_edee {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_beee );return nil ,_gcb .ErrTypeError ;};if _eebadb :=_eeab .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_eebadb !=nil {_cbbcd .FontName =_eebadb ;}else {_fa .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");};_eceb ,_ :=_gcb .GetName (_cbbcd .FontName );if _gbbcf :=_eeab .Get ("\u0054\u0079\u0070\u0065");_gbbcf !=nil {_egaeb ,_accc :=_gbbcf .(*_gcb .PdfObjectName );if !_accc ||string (*_egaeb )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_fa .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_gbbcf ,_eceb ,_cbbcd .FontName );};}else {_fa .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_eceb ,_cbbcd .FontName );};_cbbcd .FontFamily =_eeab .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_cbbcd .FontStretch =_eeab .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_cbbcd .FontWeight =_eeab .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");_cbbcd .Flags =_eeab .Get ("\u0046\u006c\u0061g\u0073");_cbbcd .FontBBox =_eeab .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_cbbcd .ItalicAngle =_eeab .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_cbbcd .Ascent =_eeab .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");_cbbcd .Descent =_eeab .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_cbbcd .Leading =_eeab .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_cbbcd .CapHeight =_eeab .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_cbbcd .XHeight =_eeab .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");_cbbcd .StemV =_eeab .Get ("\u0053\u0074\u0065m\u0056");_cbbcd .StemH =_eeab .Get ("\u0053\u0074\u0065m\u0048");_cbbcd .AvgWidth =_eeab .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_cbbcd .MaxWidth =_eeab .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");_cbbcd .MissingWidth =_eeab .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_cbbcd .FontFile =_eeab .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_cbbcd .FontFile2 =_eeab .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");_cbbcd .FontFile3 =_eeab .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_cbbcd .CharSet =_eeab .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_cbbcd .Style =_eeab .Get ("\u0053\u0074\u0079l\u0065");_cbbcd .Lang =_eeab .Get ("\u004c\u0061\u006e\u0067");_cbbcd .FD =_eeab .Get ("\u0046\u0044");_cbbcd .CIDSet =_eeab .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _cbbcd .Flags !=nil {if _cgad ,_eccge :=_gcb .GetIntVal (_cbbcd .Flags );_eccge {_cbbcd ._egae =_cgad ;};};if _cbbcd .MissingWidth !=nil {if _acdeee ,_ffae :=_gcb .GetNumberAsFloat (_cbbcd .MissingWidth );_ffae ==nil {_cbbcd ._gfae =_acdeee ;};};if _cbbcd .FontFile !=nil {_dfdeg ,_ccffb :=_aafa (_cbbcd .FontFile );if _ccffb !=nil {return _cbbcd ,_ccffb ;};_fa .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_dfdeg );_cbbcd .fontFile =_dfdeg ;};if _cbbcd .FontFile2 !=nil {_dccef ,_agbab :=_aa .NewFontFile2FromPdfObject (_cbbcd .FontFile2 );if _agbab !=nil {return _cbbcd ,_agbab ;};_fa .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_dccef .String ());_cbbcd ._ccdfd =&_dccef ;};return _cbbcd ,nil ;};

// RemovePage removes a page by number.
func (_baggg *PdfAppender )RemovePage (pageNum int ){_cggb :=pageNum -1;_baggg ._accd =append (_baggg ._accd [0:_cggb ],_baggg ._accd [pageNum :]...);};func _gcdb (_abfdb *[]*PdfField ,_gggg FieldFilterFunc ,_debae bool )[]*PdfField {if _abfdb ==nil {return nil ;};_bebdbc :=*_abfdb ;if len (*_abfdb )==0{return nil ;};_egee :=_bebdbc [:0];if _gggg ==nil {_gggg =func (*PdfField )bool {return true };};var _dece []*PdfField ;for _ ,_ffdg :=range _bebdbc {_dffed :=_gggg (_ffdg );if _dffed {_dece =append (_dece ,_ffdg );if len (_ffdg .Kids )> 0{_dece =append (_dece ,_gcdb (&_ffdg .Kids ,_gggg ,_debae )...);};};if !_debae ||!_dffed ||len (_ffdg .Kids )> 0{_egee =append (_egee ,_ffdg );};};*_abfdb =_egee ;return _dece ;};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};func (_bdbgb *pdfFontType0 )bytesToCharcodes (_bgff []byte )([]_dee .CharCode ,bool ){if _bdbgb ._gfecec ==nil {return nil ,false ;};_addcb ,_bebag :=_bdbgb ._gfecec .BytesToCharcodes (_bgff );if !_bebag {return nil ,false ;};_eedac :=make ([]_dee .CharCode ,len (_addcb ));for _acdg ,_ccac :=range _addcb {_eedac [_acdg ]=_dee .CharCode (_ccac );};return _eedac ,true ;};

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_caede *PdfShadingType5 )ToPdfObject ()_gcb .PdfObject {_caede .PdfShading .ToPdfObject ();_dcdab ,_afeg :=_caede .getShadingDict ();if _afeg !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _caede .BitsPerCoordinate !=nil {_dcdab .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_caede .BitsPerCoordinate );};if _caede .BitsPerComponent !=nil {_dcdab .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_caede .BitsPerComponent );};if _caede .VerticesPerRow !=nil {_dcdab .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_caede .VerticesPerRow );};if _caede .Decode !=nil {_dcdab .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_caede .Decode );};if _caede .Function !=nil {if len (_caede .Function )==1{_dcdab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_caede .Function [0].ToPdfObject ());}else {_dcffc :=_gcb .MakeArray ();for _ ,_gdbff :=range _caede .Function {_dcffc .Append (_gdbff .ToPdfObject ());};_dcdab .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dcffc );};};return _caede ._bgcgd ;};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _c .Time ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_gfdca *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_gcb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bbea ,_fbcdf :=_gcb .GetNumbersAsFloat (objects );if _fbcdf !=nil {return nil ,_fbcdf ;};return _gfdca .ColorFromFloats (_bbea );};

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_ddbde *PdfFont )CharcodesToUnicodeWithStats (charcodes []_dee .CharCode )(_cdedf []rune ,_gbda ,_bgdba int ){_daeed ,_gbda ,_bgdba :=_ddbde .CharcodesToStrings (charcodes );return []rune (_gb .Join (_daeed ,"")),_gbda ,_bgdba ;};func (_cgdg *PdfReader )newPdfActionJavaScriptFromDict (_bcd *_gcb .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_bcd .Get ("\u004a\u0053")},nil ;};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;

// GetNumComponents returns the number of color components.
func (_ababg *PdfColorspaceICCBased )GetNumComponents ()int {return _ababg .N };

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_fggaa :=&PdfFieldSignature {};_fggaa .PdfField =NewPdfField ();_fggaa .PdfField .SetContext (_fggaa );_fggaa .PdfAnnotationWidget =NewPdfAnnotationWidget ();_fggaa .PdfAnnotationWidget .SetContext (_fggaa );_fggaa .PdfAnnotationWidget ._dgc =_fggaa .PdfField ._gcf ;_fggaa .T =_gcb .MakeString ("");_fggaa .F =_gcb .MakeInteger (132);_fggaa .V =signature ;return _fggaa ;};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_ebe PdfModel ;Type _gcb .PdfObject ;S _gcb .PdfObject ;Next _gcb .PdfObject ;_gg *_gcb .PdfIndirectObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_gfdcf *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_gcb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abgb ,_egea :=_gcb .GetNumbersAsFloat (objects );if _egea !=nil {return nil ,_egea ;};return _gfdcf .ColorFromFloats (_abgb );};

// ToPdfObject returns the PDF representation of the function.
func (_eccaa *PdfFunctionType2 )ToPdfObject ()_gcb .PdfObject {_cdfca :=_gcb .MakeDict ();_cdfca .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gcb .MakeInteger (2));_faca :=&_gcb .PdfObjectArray {};for _ ,_edbab :=range _eccaa .Domain {_faca .Append (_gcb .MakeFloat (_edbab ));};_cdfca .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_faca );if _eccaa .Range !=nil {_aedbb :=&_gcb .PdfObjectArray {};for _ ,_aabd :=range _eccaa .Range {_aedbb .Append (_gcb .MakeFloat (_aabd ));};_cdfca .Set ("\u0052\u0061\u006eg\u0065",_aedbb );};if _eccaa .C0 !=nil {_dbgg :=&_gcb .PdfObjectArray {};for _ ,_dcfe :=range _eccaa .C0 {_dbgg .Append (_gcb .MakeFloat (_dcfe ));};_cdfca .Set ("\u0043\u0030",_dbgg );};if _eccaa .C1 !=nil {_dcfaf :=&_gcb .PdfObjectArray {};for _ ,_aegfe :=range _eccaa .C1 {_dcfaf .Append (_gcb .MakeFloat (_aegfe ));};_cdfca .Set ("\u0043\u0031",_dcfaf );};_cdfca .Set ("\u004e",_gcb .MakeFloat (_eccaa .N ));if _eccaa ._cdefbg !=nil {_eccaa ._cdefbg .PdfObject =_cdfca ;return _eccaa ._cdefbg ;};return _cdfca ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_dde :=NewPdfAnnotation ();_eab :=&PdfAnnotationText {};_eab .PdfAnnotation =_dde ;_eab .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dde .SetContext (_eab );return _eab ;};func (_dfgb *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_cbaa :_gcb .MakeIndirectObject (_gcb .MakeDict ())};};

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_cdgc :=&PdfColorspaceDeviceN {};return _cdgc };

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_fgba :=NewPdfAnnotation ();_gdea :=&PdfAnnotation3D {};_gdea .PdfAnnotation =_fgba ;_fgba .SetContext (_gdea );return _gdea ;};func _gbgg ()string {_bfgga .Lock ();defer _bfgga .Unlock ();return _cfgbgg };

// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_dbdgc *LTV )EnableAll (extraCerts []*_g .Certificate )error {_beaac :=_dbdgc ._abcbc ._ggde .AcroForm ;for _ ,_fabdg :=range _beaac .AllFields (){_fadd ,_ :=_fabdg .GetContext ().(*PdfFieldSignature );if _fadd ==nil {continue ;};_ecgcd :=_fadd .V ;if _fgce :=_dbdgc .validateSig (_ecgcd );_fgce !=nil {_fa .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_fgce );};if _dfefa :=_dbdgc .Enable (_ecgcd ,extraCerts );_dfefa !=nil {return _dfefa ;};};return nil ;};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_gcb .PdfIndirectObject ;SV *_gcb .PdfIndirectObject ;};func (_ecg *PdfReader )newPdfActionRenditionFromDict (_gadc *_gcb .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_gadc .Get ("\u0052"),AN :_gadc .Get ("\u0041\u004e"),OP :_gadc .Get ("\u004f\u0050"),JS :_gadc .Get ("\u004a\u0053")},nil ;};

// AddImageResource adds an image to the XObject resources.
func (_bgfeb *PdfPage )AddImageResource (name _gcb .PdfObjectName ,ximg *XObjectImage )error {var _cefa *_gcb .PdfObjectDictionary ;if _bgfeb .Resources .XObject ==nil {_cefa =_gcb .MakeDict ();_bgfeb .Resources .XObject =_cefa ;}else {var _ebfe bool ;_cefa ,_ebfe =(_bgfeb .Resources .XObject ).(*_gcb .PdfObjectDictionary );if !_ebfe {return _fb .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_cefa .Set (name ,ximg .ToPdfObject ());return nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_deea *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_gcb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cfae ,_cfgb :=_gcb .GetNumbersAsFloat (objects );if _cfgb !=nil {return nil ,_cfgb ;};return _deea .ColorFromFloats (_cfae );};

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_badc *pdfFontSimple )SetEncoder (encoder _dee .TextEncoder ){_badc ._cgeba =encoder };func (_fcbg *PdfReader )newPdfAnnotationStampFromDict (_gaa *_gcb .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_faa :=PdfAnnotationStamp {};_aagb ,_eddg :=_fcbg .newPdfAnnotationMarkupFromDict (_gaa );if _eddg !=nil {return nil ,_eddg ;};_faa .PdfAnnotationMarkup =_aagb ;_faa .Name =_gaa .Get ("\u004e\u0061\u006d\u0065");return &_faa ,nil ;};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _gcb .PdfObject ;IC _gcb .PdfObject ;BE _gcb .PdfObject ;RD _gcb .PdfObject ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_cdaba *PdfWriter )SetPageLabels (pageLabels _gcb .PdfObject )error {if pageLabels ==nil {return nil ;};_fa .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");_cdaba ._gfdbe .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _cdaba .addObjects (pageLabels );};func (_fegcf *PdfWriter )copyObject (_ddece _gcb .PdfObject ,_beage map[_gcb .PdfObject ]_gcb .PdfObject ,_feea map[_gcb .PdfObject ]struct{},_bffbd bool )_gcb .PdfObject {_daaee :=!_fegcf ._cbaca &&_feea !=nil ;if _gfefb ,_aeab :=_beage [_ddece ];_aeab {if _daaee &&!_bffbd {delete (_feea ,_ddece );};return _gfefb ;};_cegabc :=_ddece ;switch _ebga :=_ddece .(type ){case *_gcb .PdfObjectArray :_dbadf :=_gcb .MakeArray ();_cegabc =_dbadf ;_beage [_ddece ]=_cegabc ;for _ ,_ggdfc :=range _ebga .Elements (){_dbadf .Append (_fegcf .copyObject (_ggdfc ,_beage ,_feea ,_bffbd ));};case *_gcb .PdfObjectStreams :_cddg :=&_gcb .PdfObjectStreams {PdfObjectReference :_ebga .PdfObjectReference };_cegabc =_cddg ;_beage [_ddece ]=_cegabc ;for _ ,_gbgff :=range _ebga .Elements (){_cddg .Append (_fegcf .copyObject (_gbgff ,_beage ,_feea ,_bffbd ));};case *_gcb .PdfObjectStream :_cgbbc :=&_gcb .PdfObjectStream {Stream :_ebga .Stream ,PdfObjectReference :_ebga .PdfObjectReference };_cegabc =_cgbbc ;_beage [_ddece ]=_cegabc ;_cgbbc .PdfObjectDictionary =_fegcf .copyObject (_ebga .PdfObjectDictionary ,_beage ,_feea ,_bffbd ).(*_gcb .PdfObjectDictionary );case *_gcb .PdfObjectDictionary :var _abgcd bool ;if _daaee &&!_bffbd {if _accea ,_ :=_gcb .GetNameVal (_ebga .Get ("\u0054\u0079\u0070\u0065"));_accea =="\u0050\u0061\u0067\u0065"{_ ,_gcadcg :=_fegcf ._dccdd [_ebga ];_bffbd =!_gcadcg ;_abgcd =_bffbd ;};};_aedf :=_gcb .MakeDict ();_cegabc =_aedf ;_beage [_ddece ]=_cegabc ;for _ ,_cfbcf :=range _ebga .Keys (){_aedf .Set (_cfbcf ,_fegcf .copyObject (_ebga .Get (_cfbcf ),_beage ,_feea ,_bffbd ));};if _abgcd {_cegabc =_gcb .MakeNull ();_bffbd =false ;};case *_gcb .PdfIndirectObject :_dgcg :=&_gcb .PdfIndirectObject {PdfObjectReference :_ebga .PdfObjectReference };_cegabc =_dgcg ;_beage [_ddece ]=_cegabc ;_dgcg .PdfObject =_fegcf .copyObject (_ebga .PdfObject ,_beage ,_feea ,_bffbd );case *_gcb .PdfObjectString :_eadagg :=*_ebga ;_cegabc =&_eadagg ;_beage [_ddece ]=_cegabc ;case *_gcb .PdfObjectName :_ggccc :=*_ebga ;_cegabc =&_ggccc ;_beage [_ddece ]=_cegabc ;case *_gcb .PdfObjectNull :_cegabc =_gcb .MakeNull ();_beage [_ddece ]=_cegabc ;case *_gcb .PdfObjectInteger :_ccbbb :=*_ebga ;_cegabc =&_ccbbb ;_beage [_ddece ]=_cegabc ;case *_gcb .PdfObjectReference :_ddgg :=*_ebga ;_cegabc =&_ddgg ;_beage [_ddece ]=_cegabc ;case *_gcb .PdfObjectFloat :_dadde :=*_ebga ;_cegabc =&_dadde ;_beage [_ddece ]=_cegabc ;case *_gcb .PdfObjectBool :_cdebc :=*_ebga ;_cegabc =&_cdebc ;_beage [_ddece ]=_cegabc ;case *pdfSignDictionary :_gdcgc :=&pdfSignDictionary {PdfObjectDictionary :_gcb .MakeDict (),_feage :_ebga ._feage ,_cebdg :_ebga ._cebdg };_cegabc =_gdcgc ;_beage [_ddece ]=_cegabc ;for _ ,_acbba :=range _ebga .Keys (){_gdcgc .Set (_acbba ,_fegcf .copyObject (_ebga .Get (_acbba ),_beage ,_feea ,_bffbd ));};default:_fa .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_ddece );};if _daaee &&_bffbd {_feea [_ddece ]=struct{}{};};return _cegabc ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_cbcec *PdfPageResources )SetPatternByName (keyName _gcb .PdfObjectName ,pattern _gcb .PdfObject )error {if _cbcec .Pattern ==nil {_cbcec .Pattern =_gcb .MakeDict ();};_cfaeb ,_agab :=_cbcec .Pattern .(*_gcb .PdfObjectDictionary );if !_agab {return _gcb .ErrTypeError ;};_cfaeb .Set (keyName ,pattern );return nil ;};

// ToInteger convert to an integer format.
func (_aacdf *PdfColorCalGray )ToInteger (bits int )uint32 {_fea :=_f .Pow (2,float64 (bits ))-1;return uint32 (_fea *_aacdf .Val ());};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _gcb .PdfObject ;};

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_bage *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_bage .updateObjectsDeep (dss .ToPdfObject (),nil );};_bage ._gce =dss ;};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_gcf :_gcb .MakeIndirectObject (_gcb .MakeDict ())}};func (_gda *PdfReader )newPdfAnnotationStrikeOut (_debb *_gcb .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_fcgc :=PdfAnnotationStrikeOut {};_cada ,_gge :=_gda .newPdfAnnotationMarkupFromDict (_debb );if _gge !=nil {return nil ,_gge ;};_fcgc .PdfAnnotationMarkup =_cada ;_fcgc .QuadPoints =_debb .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fcgc ,nil ;};

// SetBorderWidth sets the style's border width.
func (_dbdb *PdfBorderStyle )SetBorderWidth (width float64 ){_dbdb .W =&width };

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_edef :=PdfColorCalRGB {a ,b ,c };return &_edef ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_gbe *PdfAction )GetContext ()PdfModel {if _gbe ==nil {return nil ;};return _gbe ._ebe ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_dadge *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _dadge ._dfcc .(*PdfShadingPattern );};func (_dgbec *DSS )addOCSPs (_baefg [][]byte )([]*_gcb .PdfObjectStream ,error ){return _dgbec .add (&_dgbec .OCSPs ,_dgbec ._cgdge ,_baefg );};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_ee :=NewPdfAction ();_efg :=&PdfActionResetForm {};_efg .PdfAction =_ee ;_ee .SetContext (_efg );return _efg ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_cea :=NewPdfAction ();_edb :=&PdfActionTrans {};_edb .PdfAction =_cea ;_cea .SetContext (_edb );return _edb ;};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_gfaa :=NewPdfOutline ();_gfaa ._cgfc =&_gfaa ;return _gfaa };

// PdfVersion returns version of the PDF file.
func (_dfed *PdfReader )PdfVersion ()_gcb .Version {return _dfed ._efeb .PdfVersion ()};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_gbde *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_bbda :=_cg .NewReader (img .getBase ());_fgaf :=_efe .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_gbde .AlternateSpace .GetNumComponents (),nil ,img ._gaecf ,nil );_adeg :=_cg .NewWriter (_fgaf );_ggac :=_f .Pow (2,float64 (img .BitsPerComponent ))-1;_fa .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");_fa .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_gbde .TintTransform );_bfeff :=_gbde .AlternateSpace .DecodeArray ();var (_dabd uint32 ;_afdg error ;);for {_dabd ,_afdg =_bbda .ReadSample ();if _afdg ==_dfb .EOF {break ;};if _afdg !=nil {return img ,_afdg ;};_fefb :=float64 (_dabd )/_ggac ;_fdaa ,_bgfbd :=_gbde .TintTransform .Evaluate ([]float64 {_fefb });if _bgfbd !=nil {return img ,_bgfbd ;};for _affg ,_gbgc :=range _fdaa {_fdea :=_efe .LinearInterpolate (_gbgc ,_bfeff [_affg *2],_bfeff [_affg *2+1],0,1);if _bgfbd =_adeg .WriteSample (uint32 (_fdea *_ggac ));_bgfbd !=nil {return img ,_bgfbd ;};};};return _gbde .AlternateSpace .ImageToRGB (_dddf (&_fgaf ));};func (_cbac *PdfAcroForm )fill (_aecb FieldValueProvider ,_gefef FieldAppearanceGenerator )error {if _cbac ==nil {return nil ;};_gfgde ,_cedgd :=_aecb .FieldValues ();if _cedgd !=nil {return _cedgd ;};for _ ,_fefag :=range _cbac .AllFields (){_acdgd :=_fefag .PartialName ();_eagc ,_bbbgg :=_gfgde [_acdgd ];if !_bbbgg {if _aaef ,_baafa :=_fefag .FullName ();_baafa ==nil {_eagc ,_bbbgg =_gfgde [_aaef ];};};if !_bbbgg {_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_acdgd );continue ;};if _ccgb :=_aafba (_fefag ,_eagc );_ccgb !=nil {return _ccgb ;};if _gefef ==nil {continue ;};for _ ,_adcf :=range _fefag .Annotations {_ggbcd ,_abdeg :=_gefef .GenerateAppearanceDict (_cbac ,_fefag ,_adcf );if _abdeg !=nil {return _abdeg ;};_adcf .AP =_ggbcd ;_adcf .ToPdfObject ();};};return nil ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_dae :=NewPdfAnnotation ();_fagcf :=&PdfAnnotationCircle {};_fagcf .PdfAnnotation =_dae ;_fagcf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dae .SetContext (_fagcf );return _fagcf ;};func _eadgf (_dacfd *_gcb .PdfObjectDictionary )(*PdfShadingType7 ,error ){_bfbaaf :=PdfShadingType7 {};_eafdgg :=_dacfd .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _eafdgg ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");return nil ,ErrRequiredAttributeMissing ;};_bfcgc ,_gbbcc :=_eafdgg .(*_gcb .PdfObjectInteger );if !_gbbcc {_fa .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_eafdgg );return nil ,_gcb .ErrTypeError ;};_bfbaaf .BitsPerCoordinate =_bfcgc ;_eafdgg =_dacfd .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _eafdgg ==nil {_fa .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");return nil ,ErrRequiredAttributeMissing ;};_bfcgc ,_gbbcc =_eafdgg .(*_gcb .PdfObjectInteger );if !_gbbcc {_fa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_eafdgg );return nil ,_gcb .ErrTypeError ;};_bfbaaf .BitsPerComponent =_bfcgc ;_eafdgg =_dacfd .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _eafdgg ==nil {_fa .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");return nil ,ErrRequiredAttributeMissing ;};_bfcgc ,_gbbcc =_eafdgg .(*_gcb .PdfObjectInteger );if !_gbbcc {_fa .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_eafdgg );return nil ,_gcb .ErrTypeError ;};_bfbaaf .BitsPerComponent =_bfcgc ;_eafdgg =_dacfd .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _eafdgg ==nil {_fa .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");return nil ,ErrRequiredAttributeMissing ;};_bdfbc ,_gbbcc :=_eafdgg .(*_gcb .PdfObjectArray );if !_gbbcc {_fa .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_eafdgg );return nil ,_gcb .ErrTypeError ;};_bfbaaf .Decode =_bdfbc ;if _bfga :=_dacfd .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_bfga !=nil {_bfbaaf .Function =[]PdfFunction {};if _ceced ,_dbgfd :=_bfga .(*_gcb .PdfObjectArray );_dbgfd {for _ ,_becb :=range _ceced .Elements (){_dcadc ,_gdbg :=_gaeabb (_becb );if _gdbg !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gdbg );return nil ,_gdbg ;};_bfbaaf .Function =append (_bfbaaf .Function ,_dcadc );};}else {_dbcfbc ,_cdfa :=_gaeabb (_bfga );if _cdfa !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cdfa );return nil ,_cdfa ;};_bfbaaf .Function =append (_bfbaaf .Function ,_dbcfbc );};};return &_bfbaaf ,nil ;};

// AddAnnotation appends `annot` to the list of page annotations.
func (_egca *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _egca ._eafecf ==nil {_egca .GetAnnotations ();};_egca ._eafecf =append (_egca ._eafecf ,annot );};

// SetContentStream sets the pattern cell's content stream.
func (_bddae *PdfTilingPattern )SetContentStream (content []byte ,encoder _gcb .StreamEncoder )error {_eebca ,_bebf :=_bddae ._dabce .(*_gcb .PdfObjectStream );if !_bebf {_fa .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bddae ._dabce );return _gcb .ErrTypeError ;};if encoder ==nil {encoder =_gcb .NewRawEncoder ();};_gdaae :=_eebca .PdfObjectDictionary ;_gbcec :=encoder .MakeStreamDict ();_gdaae .Merge (_gbcec );_eefgb ,_ddcc :=encoder .EncodeBytes (content );if _ddcc !=nil {return _ddcc ;};_gdaae .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gcb .MakeInteger (int64 (len (_eefgb ))));_eebca .Stream =_eefgb ;return nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_gcddg *PdfOutline )ToPdfObject ()_gcb .PdfObject {_fagde :=_gcddg ._eggff ;_fbffa :=_fagde .PdfObject .(*_gcb .PdfObjectDictionary );_fbffa .Set ("\u0054\u0079\u0070\u0065",_gcb .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _gcddg .First !=nil {_fbffa .Set ("\u0046\u0069\u0072s\u0074",_gcddg .First .ToPdfObject ());};if _gcddg .Last !=nil {_fbffa .Set ("\u004c\u0061\u0073\u0074",_gcddg .Last .GetContext ().GetContainingPdfObject ());};if _gcddg .Parent !=nil {_fbffa .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gcddg .Parent .GetContext ().GetContainingPdfObject ());};if _gcddg .Count !=nil {_fbffa .Set ("\u0043\u006f\u0075n\u0074",_gcb .MakeInteger (*_gcddg .Count ));};return _fagde ;};

// ToPdfObject implements interface PdfModel.
func (_gbce *PdfAnnotationMovie )ToPdfObject ()_gcb .PdfObject {_gbce .PdfAnnotation .ToPdfObject ();_cae :=_gbce ._dgc ;_fdbaf :=_cae .PdfObject .(*_gcb .PdfObjectDictionary );_fdbaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u004d\u006f\u0076i\u0065"));_fdbaf .SetIfNotNil ("\u0054",_gbce .T );_fdbaf .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_gbce .Movie );_fdbaf .SetIfNotNil ("\u0041",_gbce .A );return _cae ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_geedg *PdfColorspaceICCBased )ToPdfObject ()_gcb .PdfObject {_ddbad :=&_gcb .PdfObjectArray {};_ddbad .Append (_gcb .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _bddd *_gcb .PdfObjectStream ;if _geedg ._fbfd !=nil {_bddd =_geedg ._fbfd ;}else {_bddd =&_gcb .PdfObjectStream {};};_bdaa :=_gcb .MakeDict ();_bdaa .Set ("\u004e",_gcb .MakeInteger (int64 (_geedg .N )));if _geedg .Alternate !=nil {_bdaa .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_geedg .Alternate .ToPdfObject ());};if _geedg .Metadata !=nil {_bdaa .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_geedg .Metadata );};if _geedg .Range !=nil {var _fcgga []_gcb .PdfObject ;for _ ,_accdg :=range _geedg .Range {_fcgga =append (_fcgga ,_gcb .MakeFloat (_accdg ));};_bdaa .Set ("\u0052\u0061\u006eg\u0065",_gcb .MakeArray (_fcgga ...));};_bdaa .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gcb .MakeInteger (int64 (len (_geedg .Data ))));_bddd .Stream =_geedg .Data ;_bddd .PdfObjectDictionary =_bdaa ;_ddbad .Append (_bddd );if _geedg ._adbe !=nil {_geedg ._adbe .PdfObject =_ddbad ;return _geedg ._adbe ;};return _ddbad ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_ggefb *PdfAcroForm ,_eaeb *PdfField ,_cdga *PdfAnnotationWidget )(*_gcb .PdfObjectDictionary ,error );};

// SetAction sets the PDF action for the annotation link.
func (_dec *PdfAnnotationLink )SetAction (action *PdfAction ){_dec ._adc =action ;if action ==nil {_dec .A =nil ;};};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_bcgcg *PdfShadingPattern )ToPdfObject ()_gcb .PdfObject {_bcgcg .PdfPattern .ToPdfObject ();_adgbc :=_bcgcg .getDict ();if _bcgcg .Shading !=nil {_adgbc .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bcgcg .Shading .ToPdfObject ());};if _bcgcg .Matrix !=nil {_adgbc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bcgcg .Matrix );};if _bcgcg .ExtGState !=nil {_adgbc .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bcgcg .ExtGState );};return _bcgcg ._dabce ;};

// ToPdfObject implements interface PdfModel.
func (_faee *PdfAnnotationSound )ToPdfObject ()_gcb .PdfObject {_faee .PdfAnnotation .ToPdfObject ();_eegb :=_faee ._dgc ;_ecf :=_eegb .PdfObject .(*_gcb .PdfObjectDictionary );_faee .PdfAnnotationMarkup .appendToPdfDictionary (_ecf );_ecf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0053\u006f\u0075n\u0064"));_ecf .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_faee .Sound );_ecf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_faee .Name );return _eegb ;};func (_gcbef *PdfShading )getShadingDict ()(*_gcb .PdfObjectDictionary ,error ){_gabca :=_gcbef ._bgcgd ;if _ecbff ,_bcccf :=_gabca .(*_gcb .PdfIndirectObject );_bcccf {_cebbee ,_eddec :=_ecbff .PdfObject .(*_gcb .PdfObjectDictionary );if !_eddec {return nil ,_gcb .ErrTypeError ;};return _cebbee ,nil ;}else if _bgfae ,_gbddf :=_gabca .(*_gcb .PdfObjectStream );_gbddf {return _bgfae .PdfObjectDictionary ,nil ;}else if _ggbeg ,_debgc :=_gabca .(*_gcb .PdfObjectDictionary );_debgc {return _ggbeg ,nil ;}else {_fa .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_gcb .ErrTypeError ;};};type fontFile struct{_dcfde string ;_afag string ;_dfda _dee .SimpleEncoder ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_aagcb *PdfShadingType6 )ToPdfObject ()_gcb .PdfObject {_aagcb .PdfShading .ToPdfObject ();_efdg ,_bddaa :=_aagcb .getShadingDict ();if _bddaa !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _aagcb .BitsPerCoordinate !=nil {_efdg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_aagcb .BitsPerCoordinate );};if _aagcb .BitsPerComponent !=nil {_efdg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_aagcb .BitsPerComponent );};if _aagcb .BitsPerFlag !=nil {_efdg .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_aagcb .BitsPerFlag );};if _aagcb .Decode !=nil {_efdg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_aagcb .Decode );};if _aagcb .Function !=nil {if len (_aagcb .Function )==1{_efdg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aagcb .Function [0].ToPdfObject ());}else {_befd :=_gcb .MakeArray ();for _ ,_feggd :=range _aagcb .Function {_befd .Append (_feggd .ToPdfObject ());};_efdg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_befd );};};return _aagcb ._bgcgd ;};

// Add appends an outline item as a child of the current outline item.
func (_acfcd *OutlineItem )Add (item *OutlineItem ){_acfcd .Entries =append (_acfcd .Entries ,item )};

// GetAction returns the PDF action for the annotation link.
func (_fbg *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _fbg ._adc !=nil {return _fbg ._adc ,nil ;};if _fbg .A ==nil {return nil ,nil ;};if _fbg ._age ==nil {return nil ,nil ;};_dd ,_fbdg :=_fbg ._age .loadAction (_fbg .A );if _fbdg !=nil {return nil ,_fbdg ;};_fbg ._adc =_dd ;return _fbg ._adc ,nil ;};func (_gfbb fontCommon )isCIDFont ()bool {if _gfbb ._caaad ==""{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gfbb );};_afcbf :=false ;switch _gfbb ._caaad {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_afcbf =true ;};_fa .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_afcbf ,_gfbb );return _afcbf ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{IsApplicable (_dgfcde *PdfSignature )bool ;Validate (_bebfg *PdfSignature ,_ceade Hasher )(SignatureValidationResult ,error );

// InitSignature sets the PdfSignature parameters.
InitSignature (*PdfSignature )error ;NewDigest (_gegdba *PdfSignature )(Hasher ,error );Sign (_dbdc *PdfSignature ,_fdedd Hasher )error ;};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_acgb *Image )ConvertToBinary ()error {if _acgb .ColorComponents ==1&&_acgb .BitsPerComponent ==1{return nil ;};_gcdaaa ,_agagb :=_acgb .ToGoImage ();if _agagb !=nil {return _agagb ;};_bbfab ,_agagb :=_efe .MonochromeConverter .Convert (_gcdaaa );if _agagb !=nil {return _agagb ;};_acgb .BitsPerComponent =1;_acgb .ColorComponents =1;_acgb .Data =_bbfab .Base ().Data ;return nil ;};

// A returns the value of the A component of the color.
func (_cdfeg *PdfColorCalRGB )A ()float64 {return _cdfeg [0]};func (_daddb *PdfSignature )extractChainFromPKCS7 ()([]*_g .Certificate ,error ){_ccgbbd ,_baea :=_fbd .Parse (_daddb .Contents .Bytes ());if _baea !=nil {return nil ,_baea ;};return _ccgbbd .Certificates ,nil ;};func _bdead (_bgcc *_gcb .PdfObjectDictionary )(*PdfShadingPattern ,error ){_abaae :=&PdfShadingPattern {};_accdcf :=_bgcc .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _accdcf ==nil {_fa .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_aadad ,_fgacc :=_gccg (_accdcf );if _fgacc !=nil {_fa .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_fgacc );return nil ,_fgacc ;};_abaae .Shading =_aadad ;if _ecaeg :=_bgcc .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_ecaeg !=nil {_dgbgg ,_dadeb :=_ecaeg .(*_gcb .PdfObjectArray );if !_dadeb {_fa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ecaeg );return nil ,_gcb .ErrTypeError ;};_abaae .Matrix =_dgbgg ;};if _ccacbc :=_bgcc .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_ccacbc !=nil {_abaae .ExtGState =_ccacbc ;};return _abaae ,nil ;};func (_abee *Image )samplesAddPadding (_dgbfa []uint32 )[]uint32 {_ggcgc :=_efe .BytesPerLine (int (_abee .Width ),int (_abee .BitsPerComponent ),_abee .ColorComponents )*(8/int (_abee .BitsPerComponent ));_ffeb :=_ggcgc *int (_abee .Height );if len (_dgbfa )==_ffeb {return _dgbfa ;};_eadfd :=make ([]uint32 ,_ffeb );_beggca :=int (_abee .Width )*_abee .ColorComponents ;for _bfefb :=0;_bfefb < int (_abee .Height );_bfefb ++{_ebfgd :=_bfefb *int (_abee .Width );_acfa :=_bfefb *_ggcgc ;for _cddc :=0;_cddc < _beggca ;_cddc ++{_eadfd [_acfa +_cddc ]=_dgbfa [_ebfgd +_cddc ];};};return _eadfd ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_gcdee pdfCIDFontType2 )GetRuneMetrics (r rune )(_aa .CharMetrics ,bool ){_fgafc ,_ebcddb :=_gcdee ._efcf [r ];if !_ebcddb {_bbfd ,_gbafc :=_gcb .GetInt (_gcdee .DW );if !_gbafc {return _aa .CharMetrics {},false ;};_fgafc =int (*_bbfd );};return _aa .CharMetrics {Wx :float64 (_fgafc )},true ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_fdab *_gcb .PdfIndirectObject ;Certs []*_gcb .PdfObjectStream ;OCSPs []*_gcb .PdfObjectStream ;CRLs []*_gcb .PdfObjectStream ;VRI map[string ]*VRI ;_eaga map[string ]*_gcb .PdfObjectStream ;_cgdge map[string ]*_gcb .PdfObjectStream ;_gbef map[string ]*_gcb .PdfObjectStream ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_bbcge *pdfFontSimple )ToPdfObject ()_gcb .PdfObject {if _bbcge ._fecf ==nil {_bbcge ._fecf =&_gcb .PdfIndirectObject {};};_fgdga :=_bbcge .baseFields ().asPdfObjectDictionary ("");_bbcge ._fecf .PdfObject =_fgdga ;if _bbcge .FirstChar !=nil {_fgdga .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_bbcge .FirstChar );};if _bbcge .LastChar !=nil {_fgdga .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_bbcge .LastChar );};if _bbcge .Widths !=nil {_fgdga .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_bbcge .Widths );};if _bbcge .Encoding !=nil {_fgdga .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_bbcge .Encoding );}else if _bbcge ._cgeba !=nil {_adgdg :=_bbcge ._cgeba .ToPdfObject ();if _adgdg !=nil {_fgdga .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_adgdg );};};return _bbcge ._fecf ;};func (_affdf *LTV )validateSig (_aadgg *PdfSignature )error {if _aadgg ==nil ||_aadgg .Contents ==nil ||len (_aadgg .Contents .Bytes ())==0{return _e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_aadgg );};return nil ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_edfe *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_adbaa ,_beca :=color .(*PdfColorPattern );if !_beca {_fa .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );return nil ,ErrTypeCheck ;};if _adbaa .Color ==nil {return color ,nil ;};if _edfe .UnderlyingCS ==nil {return nil ,_fb .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _edfe .UnderlyingCS .ColorToRGB (_adbaa .Color );};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_bgce *PdfField )SetContext (ctx PdfModel ){_bgce ._abe =ctx };func _dddf (_effab *_efe .ImageBase )(_fggcd Image ){_fggcd .Width =int64 (_effab .Width );_fggcd .Height =int64 (_effab .Height );_fggcd .BitsPerComponent =int64 (_effab .BitsPerComponent );_fggcd .ColorComponents =_effab .ColorComponents ;_fggcd .Data =_effab .Data ;_fggcd ._gdeafd =_effab .Decode ;_fggcd ._gaecf =_effab .Alpha ;return _fggcd ;};

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_ea :=NewPdfAction ();_ac :=&PdfActionMovie {};_ac .PdfAction =_ea ;_ea .SetContext (_ac );return _ac ;};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _gcb .PdfObject ;};var _dgecf =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_faga *LTV )Enable (sig *PdfSignature ,extraCerts []*_g .Certificate )error {if _gegdec :=_faga .validateSig (sig );_gegdec !=nil {return _gegdec ;};_ccaba ,_abggg :=_faga .generateVRIKey (sig );if _abggg !=nil {return _abggg ;};if _ ,_afad :=_faga ._gcbbb .VRI [_ccaba ];_afad &&_faga .SkipExisting {return nil ;};_bfggg ,_abggg :=sig .GetCerts ();if _abggg !=nil {return _abggg ;};return _faga .enable (_bfggg ,extraCerts ,_ccaba );};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_cfcb *Outline )ToPdfOutline ()*PdfOutline {_fggfea :=NewPdfOutline ();var _cgdbc []*PdfOutlineItem ;var _eeed int64 ;var _bafcb *PdfOutlineItem ;for _ ,_efafb :=range _cfcb .Entries {_fggfd ,_fcafc :=_efafb .ToPdfOutlineItem ();_fggfd .Parent =&_fggfea .PdfOutlineTreeNode ;if _bafcb !=nil {_bafcb .Next =&_fggfd .PdfOutlineTreeNode ;_fggfd .Prev =&_bafcb .PdfOutlineTreeNode ;};_cgdbc =append (_cgdbc ,_fggfd );_eeed +=_fcafc ;_bafcb =_fggfd ;};_bbgbg :=int64 (len (_cgdbc ));_eeed +=_bbgbg ;if _bbgbg > 0{_fggfea .First =&_cgdbc [0].PdfOutlineTreeNode ;_fggfea .Last =&_cgdbc [_bbgbg -1].PdfOutlineTreeNode ;_fggfea .Count =&_eeed ;};return _fggfea ;};func (_decf *PdfAnnotationMarkup )appendToPdfDictionary (_bfaf *_gcb .PdfObjectDictionary ){_bfaf .SetIfNotNil ("\u0054",_decf .T );if _decf .Popup !=nil {_bfaf .Set ("\u0050\u006f\u0070u\u0070",_decf .Popup .ToPdfObject ());};_bfaf .SetIfNotNil ("\u0043\u0041",_decf .CA );_bfaf .SetIfNotNil ("\u0052\u0043",_decf .RC );_bfaf .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_decf .CreationDate );_bfaf .SetIfNotNil ("\u0049\u0052\u0054",_decf .IRT );_bfaf .SetIfNotNil ("\u0053\u0075\u0062\u006a",_decf .Subj );_bfaf .SetIfNotNil ("\u0052\u0054",_decf .RT );_bfaf .SetIfNotNil ("\u0049\u0054",_decf .IT );_bfaf .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_decf .ExData );};

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_dcfge *PdfReader )CheckAccessRights (password []byte )(bool ,_fc .Permissions ,error ){return _dcfge ._efeb .CheckAccessRights (password );};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_acfe *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_gcb .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _dfb .ReadSeeker )(*PdfFont ,error ){_acad ,_ggbd :=_df .ReadAll (r );if _ggbd !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_ggbd );return nil ,_ggbd ;};_faccc ,_ggbd :=_aa .TtfParse (_ga .NewReader (_acad ));if _ggbd !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_ggbd );return nil ,_ggbd ;};_beggb :=&pdfCIDFontType2 {fontCommon :fontCommon {_caaad :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_gcb .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};_agbf :=make ([]rune ,0,len (_faccc .Chars ));for _cddab :=range _faccc .Chars {_agbf =append (_agbf ,_cddab );};_de .Slice (_agbf ,func (_bbbec ,_fbdf int )bool {return _agbf [_bbbec ]< _agbf [_fbdf ]});_dddab :=1000.0/float64 (_faccc .UnitsPerEm );if len (_faccc .Widths )<=0{return nil ,_fb .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");};_fafgb :=_dddab *float64 (_faccc .Widths [0]);_efdee :=make (map[rune ]int );for _ ,_caba :=range _agbf {_ddad :=_faccc .Chars [_caba ];_agag :=_dddab *float64 (_faccc .Widths [_ddad ]);_efdee [_caba ]=int (_agag );};_beggb ._efcf =_efdee ;_beggb .DW =_gcb .MakeInteger (int64 (_fafgb ));_cagef :=_bdeg (_agbf ,_efdee ,_faccc .Chars );_beggb .W =_gcb .MakeIndirectObject (_cagef );_fegfa :=_gcb .MakeDict ();_fegfa .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_gcb .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_fegfa .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_gcb .MakeString ("\u0041\u0064\u006fb\u0065"));_fegfa .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_gcb .MakeInteger (0));_beggb .CIDSystemInfo =_fegfa ;_ccccd :=&PdfFontDescriptor {FontName :_gcb .MakeName (_faccc .PostScriptName ),Ascent :_gcb .MakeFloat (_dddab *float64 (_faccc .TypoAscender )),Descent :_gcb .MakeFloat (_dddab *float64 (_faccc .TypoDescender )),CapHeight :_gcb .MakeFloat (_dddab *float64 (_faccc .CapHeight )),FontBBox :_gcb .MakeArrayFromFloats ([]float64 {_dddab *float64 (_faccc .Xmin ),_dddab *float64 (_faccc .Ymin ),_dddab *float64 (_faccc .Xmax ),_dddab *float64 (_faccc .Ymax )}),ItalicAngle :_gcb .MakeFloat (_faccc .ItalicAngle ),MissingWidth :_gcb .MakeFloat (_dddab *float64 (_faccc .Widths [0]))};_gaddd ,_ggbd :=_gcb .MakeStream (_acad ,_gcb .NewFlateEncoder ());if _ggbd !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_ggbd );return nil ,_ggbd ;};_gaddd .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_gcb .MakeInteger (int64 (len (_acad ))));_ccccd .FontFile2 =_gaddd ;if _faccc .Bold {_ccccd .StemV =_gcb .MakeInteger (120);}else {_ccccd .StemV =_gcb .MakeInteger (70);};_fefa :=_bbbd ;if _faccc .IsFixedPitch {_fefa |=_bbdaf ;};if _faccc .ItalicAngle !=0{_fefa |=_fdgbg ;};_ccccd .Flags =_gcb .MakeInteger (int64 (_fefa ));_beggb ._eefc =_faccc .PostScriptName ;_beggb ._efff =_ccccd ;_cfcd :=pdfFontType0 {fontCommon :fontCommon {_caaad :"\u0054\u0079\u0070e\u0030",_eefc :_faccc .PostScriptName },DescendantFont :&PdfFont {_ffag :_beggb },Encoding :_gcb .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_bggef :_faccc .NewEncoder ()};if len (_faccc .Chars )> 0{_agdac :=make (map[_ad .CharCode ]rune ,len (_faccc .Chars ));for _dfbbg ,_aegfg :=range _faccc .Chars {_gcece :=_ad .CharCode (_aegfg );if _gabb ,_gface :=_agdac [_gcece ];!_gface ||(_gface &&_gabb > _dfbbg ){_agdac [_gcece ]=_dfbbg ;};};_cfcd ._gccbc =_ad .NewToUnicodeCMap (_agdac );};_fagb :=PdfFont {_ffag :&_cfcd };return &_fagb ,nil ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_gfec *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _gfec .AlternateSpace ==nil {return nil ,_fb .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};return _gfec .AlternateSpace .ColorToRGB (color );};

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_abbeg *PdfFont )GetCharMetrics (code _dee .CharCode )(CharMetrics ,bool ){var _bagfg _aa .CharMetrics ;switch _efcd :=_abbeg ._ffag .(type ){case *pdfFontSimple :if _gdde ,_baaag :=_efcd .GetCharMetrics (code );_baaag {return _gdde ,_baaag ;};case *pdfFontType0 :if _ggfbf ,_gadg :=_efcd .GetCharMetrics (code );_gadg {return _ggfbf ,_gadg ;};case *pdfCIDFontType0 :if _efed ,_eabec :=_efcd .GetCharMetrics (code );_eabec {return _efed ,_eabec ;};case *pdfCIDFontType2 :if _cbeb ,_bcbe :=_efcd .GetCharMetrics (code );_bcbe {return _cbeb ,_bcbe ;};default:_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_abbeg ._ffag );return _bagfg ,false ;};if _efbbf ,_cfega :=_abbeg .GetFontDescriptor ();_cfega ==nil &&_efbbf !=nil {return _aa .CharMetrics {Wx :_efbbf ._gfae },true ;};_fa .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_abbeg );return _bagfg ,false ;};func _fgfa (_gedf _gcb .PdfObject )(*PdfColorspaceCalGray ,error ){_fdec :=NewPdfColorspaceCalGray ();if _addd ,_cfgf :=_gedf .(*_gcb .PdfIndirectObject );_cfgf {_fdec ._ffgcg =_addd ;};_gedf =_gcb .TraceToDirectObject (_gedf );_cadd ,_acag :=_gedf .(*_gcb .PdfObjectArray );if !_acag {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _cadd .Len ()!=2{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_gedf =_gcb .TraceToDirectObject (_cadd .Get (0));_ecdd ,_acag :=_gedf .(*_gcb .PdfObjectName );if !_acag {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_ecdd !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_e .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_gedf =_gcb .TraceToDirectObject (_cadd .Get (1));_daag ,_acag :=_gedf .(*_gcb .PdfObjectDictionary );if !_acag {return nil ,_e .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");};_gedf =_daag .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_gedf =_gcb .TraceToDirectObject (_gedf );_fbee ,_acag :=_gedf .(*_gcb .PdfObjectArray );if !_acag {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");};if _fbee .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_febf ,_dcbg :=_fbee .GetAsFloat64Slice ();if _dcbg !=nil {return nil ,_dcbg ;};_fdec .WhitePoint =_febf ;_gedf =_daag .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _gedf !=nil {_gedf =_gcb .TraceToDirectObject (_gedf );_fbgc ,_aagc :=_gedf .(*_gcb .PdfObjectArray );if !_aagc {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _fbgc .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_ffgcgb ,_ccceb :=_fbgc .GetAsFloat64Slice ();if _ccceb !=nil {return nil ,_ccceb ;};_fdec .BlackPoint =_ffgcgb ;};_gedf =_daag .Get ("\u0047\u0061\u006dm\u0061");if _gedf !=nil {_gedf =_gcb .TraceToDirectObject (_gedf );_edea ,_cacb :=_gcb .GetNumberAsFloat (_gedf );if _cacb !=nil {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_fdec .Gamma =_edea ;};return _fdec ,nil ;};

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};func (_dbcag *PdfWriter )writeBytes (_dcgge []byte ){if _dbcag ._gbfffa !=nil {return ;};_dbcdd ,_fefca :=_dbcag ._adfb .Write (_dcgge );_dbcag ._ggecf +=int64 (_dbcdd );_dbcag ._gbfffa =_fefca ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_baae *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_gcb .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gfed ,_adfec :=_gcb .GetNumbersAsFloat (objects );if _adfec !=nil {return nil ,_adfec ;};return _baae .ColorFromFloats (_gfed );};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_dagbe DefaultImageHandler )Read (reader _dfb .Reader )(*Image ,error ){_acaeb ,_ ,_gddga :=_a .Decode (reader );if _gddga !=nil {_fa .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_gddga );return nil ,_gddga ;};return _dagbe .NewImageFromGoImage (_acaeb );};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_ebccg *PdfTilingPattern )ToPdfObject ()_gcb .PdfObject {_ebccg .PdfPattern .ToPdfObject ();_fegga :=_ebccg .getDict ();if _ebccg .PaintType !=nil {_fegga .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_ebccg .PaintType );};if _ebccg .TilingType !=nil {_fegga .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_ebccg .TilingType );};if _ebccg .BBox !=nil {_fegga .Set ("\u0042\u0042\u006f\u0078",_ebccg .BBox .ToPdfObject ());};if _ebccg .XStep !=nil {_fegga .Set ("\u0058\u0053\u0074e\u0070",_ebccg .XStep );};if _ebccg .YStep !=nil {_fegga .Set ("\u0059\u0053\u0074e\u0070",_ebccg .YStep );};if _ebccg .Resources !=nil {_fegga .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ebccg .Resources .ToPdfObject ());};if _ebccg .Matrix !=nil {_fegga .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_ebccg .Matrix );};return _ebccg ._dabce ;};

// AddWatermarkImage adds a watermark to the page.
func (_bccc *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_ecfge ,_dfge :=_bccc .GetMediaBox ();if _dfge !=nil {return _dfge ;};_fbgdgf :=_ecfge .Urx -_ecfge .Llx ;_dded :=_ecfge .Ury -_ecfge .Lly ;_aaac :=float64 (*ximg .Width );_ceebe :=(_fbgdgf -_aaac )/2;if opt .FitToWidth {_aaac =_fbgdgf ;_ceebe =0;};_cbbfg :=_dded ;_ccec :=float64 (0);if opt .PreserveAspectRatio {_cbbfg =_aaac *float64 (*ximg .Height )/float64 (*ximg .Width );_ccec =(_dded -_cbbfg )/2;};if _bccc .Resources ==nil {_bccc .Resources =NewPdfPageResources ();};_ccgga :=0;_fgcgb :=_gcb .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_ccgga ));for _bccc .Resources .HasXObjectByName (_fgcgb ){_ccgga ++;_fgcgb =_gcb .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_ccgga ));};_dfge =_bccc .AddImageResource (_fgcgb ,ximg );if _dfge !=nil {return _dfge ;};_ccgga =0;_ecfd :=_gcb .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_ccgga ));for _bccc .HasExtGState (_ecfd ){_ccgga ++;_ecfd =_gcb .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_ccgga ));};_fbae :=_gcb .MakeDict ();_fbae .Set ("\u0042\u004d",_gcb .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_fbae .Set ("\u0043\u0041",_gcb .MakeFloat (opt .Alpha ));_fbae .Set ("\u0063\u0061",_gcb .MakeFloat (opt .Alpha ));_dfge =_bccc .AddExtGState (_ecfd ,_fbae );if _dfge !=nil {return _dfge ;};_eccff :=_e .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_ecfd ,_aaac ,_cbbfg ,_ceebe ,_ccec ,_fgcgb );_bccc .AddContentStreamByString (_eccff );return nil ;};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_gcb .PdfObjectInteger ;TilingType *_gcb .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_gcb .PdfObjectFloat ;YStep *_gcb .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_gcb .PdfObjectArray ;};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_gcb .PdfObjectString ;Q *_gcb .PdfObjectInteger ;DS *_gcb .PdfObjectString ;RV _gcb .PdfObject ;MaxLen *_gcb .PdfObjectInteger ;};

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_eaaf :=&PdfOutline {_eggff :_gcb .MakeIndirectObject (_gcb .MakeDict ())};_eaaf ._cgfc =_eaaf ;return _eaaf ;};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_da :=&PdfAction {};_da ._gg =_gcb .MakeIndirectObject (_gcb .MakeDict ());return _da ;};func (_ecefb *PdfReader )newPdfFieldFromIndirectObject (_abde *_gcb .PdfIndirectObject ,_eadf *PdfField )(*PdfField ,error ){if _eegde ,_bcgg :=_ecefb ._ccdd .GetModelFromPrimitive (_abde ).(*PdfField );_bcgg {return _eegde ,nil ;};_eaeg ,_fccc :=_gcb .GetDict (_abde );if !_fccc {return nil ,_e .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_abbab :=NewPdfField ();_abbab ._gcf =_abde ;_abbab ._gcf .PdfObject =_eaeg ;if _bdbge ,_gbbc :=_gcb .GetName (_eaeg .Get ("\u0046\u0054"));_gbbc {_abbab .FT =_bdbge ;};if _eadf !=nil {_abbab .Parent =_eadf ;};_abbab .T ,_ =_eaeg .Get ("\u0054").(*_gcb .PdfObjectString );_abbab .TU ,_ =_eaeg .Get ("\u0054\u0055").(*_gcb .PdfObjectString );_abbab .TM ,_ =_eaeg .Get ("\u0054\u004d").(*_gcb .PdfObjectString );_abbab .Ff ,_ =_eaeg .Get ("\u0046\u0066").(*_gcb .PdfObjectInteger );_abbab .V =_eaeg .Get ("\u0056");_abbab .DV =_eaeg .Get ("\u0044\u0056");_abbab .AA =_eaeg .Get ("\u0041\u0041");_dgde :=_abbab .FT ;if _dgde ==nil &&_eadf !=nil {_dgde =_eadf .FT ;};if _dgde !=nil {switch *_dgde {case "\u0054\u0078":_aacg ,_ffgdb :=_cged (_eaeg );if _ffgdb !=nil {return nil ,_ffgdb ;};_aacg .PdfField =_abbab ;_abbab ._abe =_aacg ;case "\u0043\u0068":_aagfe ,_ffgac :=_debe (_eaeg );if _ffgac !=nil {return nil ,_ffgac ;};_aagfe .PdfField =_abbab ;_abbab ._abe =_aagfe ;case "\u0042\u0074\u006e":_fcbdg ,_accaf :=_aeag (_eaeg );if _accaf !=nil {return nil ,_accaf ;};_fcbdg .PdfField =_abbab ;_abbab ._abe =_fcbdg ;case "\u0053\u0069\u0067":_bcga ,_bfgc :=_ecefb .newPdfFieldSignatureFromDict (_eaeg );if _bfgc !=nil {return nil ,_bfgc ;};_bcga .PdfField =_abbab ;_abbab ._abe =_bcga ;default:_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_abbab .FT );return nil ,_fb .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");};};if _dfcd ,_aaga :=_gcb .GetName (_eaeg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_aaga {if *_dfcd =="\u0057\u0069\u0064\u0067\u0065\u0074"{_degg ,_bbacc :=_ecefb .newPdfAnnotationFromIndirectObject (_abde );if _bbacc !=nil {return nil ,_bbacc ;};_ccfee ,_eddbe :=_degg .GetContext ().(*PdfAnnotationWidget );if !_eddbe {return nil ,_fb .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_ccfee ._fgb =_abbab ;_ccfee .Parent =_abbab ._gcf ;_abbab .Annotations =append (_abbab .Annotations ,_ccfee );return _abbab ,nil ;};};_eddbef :=true ;if _cdddc ,_gedc :=_gcb .GetArray (_eaeg .Get ("\u004b\u0069\u0064\u0073"));_gedc {_cfba :=make ([]*_gcb .PdfIndirectObject ,0,_cdddc .Len ());for _ ,_afee :=range _cdddc .Elements (){_ggcg ,_dbffa :=_gcb .GetIndirect (_afee );if !_dbffa {_dcdac ,_acgcg :=_gcb .GetStream (_afee );if _acgcg &&_dcdac .PdfObjectDictionary !=nil {_edfg ,_gefb :=_gcb .GetNameVal (_dcdac .Get ("\u0054\u0079\u0070\u0065"));if _gefb &&_edfg =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_fa .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");continue ;};};return nil ,_fb .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_bfgee ,_edfeb :=_gcb .GetDict (_ggcg );if !_edfeb {return nil ,ErrTypeCheck ;};if _eddbef {_eddbef =!_daca (_bfgee );};_cfba =append (_cfba ,_ggcg );};for _ ,_eecd :=range _cfba {if _eddbef {_bdba ,_egceg :=_ecefb .newPdfAnnotationFromIndirectObject (_eecd );if _egceg !=nil {_fa .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_egceg );return nil ,_egceg ;};_fffg ,_afcba :=_bdba ._gbad .(*PdfAnnotationWidget );if !_afcba {return nil ,ErrTypeCheck ;};_fffg ._fgb =_abbab ;_abbab .Annotations =append (_abbab .Annotations ,_fffg );}else {_ecdad ,_faadc :=_ecefb .newPdfFieldFromIndirectObject (_eecd ,_abbab );if _faadc !=nil {_fa .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_faadc );return nil ,_faadc ;};_abbab .Kids =append (_abbab .Kids ,_ecdad );};};};return _abbab ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_efdc *PdfAnnotationPolyLine )ToPdfObject ()_gcb .PdfObject {_efdc .PdfAnnotation .ToPdfObject ();_gcdec :=_efdc ._dgc ;_bgd :=_gcdec .PdfObject .(*_gcb .PdfObjectDictionary );_efdc .PdfAnnotationMarkup .appendToPdfDictionary (_bgd );_bgd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));_bgd .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_efdc .Vertices );_bgd .SetIfNotNil ("\u004c\u0045",_efdc .LE );_bgd .SetIfNotNil ("\u0042\u0053",_efdc .BS );_bgd .SetIfNotNil ("\u0049\u0043",_efdc .IC );_bgd .SetIfNotNil ("\u0042\u0045",_efdc .BE );_bgd .SetIfNotNil ("\u0049\u0054",_efdc .IT );_bgd .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_efdc .Measure );return _gcdec ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_ffcb :=NewPdfAnnotation ();_fcf :=&PdfAnnotationLine {};_fcf .PdfAnnotation =_ffcb ;_fcf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffcb .SetContext (_fcf );return _fcf ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_bdef :=PdfColorDeviceRGB {r ,g ,b };return &_bdef ;};

// ToPdfObject implements interface PdfModel.
func (_bfc *PdfActionJavaScript )ToPdfObject ()_gcb .PdfObject {_bfc .PdfAction .ToPdfObject ();_eag :=_bfc ._gg ;_agb :=_eag .PdfObject .(*_gcb .PdfObjectDictionary );_agb .SetIfNotNil ("\u0053",_gcb .MakeName (string (ActionTypeJavaScript )));_agb .SetIfNotNil ("\u004a\u0053",_bfc .JS );return _eag ;};func _cdbg (_gdffc *_gcb .PdfIndirectObject )(*PdfOutline ,error ){_fcce ,_deef :=_gdffc .PdfObject .(*_gcb .PdfObjectDictionary );if !_deef {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_bafg :=NewPdfOutline ();if _acded :=_fcce .Get ("\u0054\u0079\u0070\u0065");_acded !=nil {_fbdac ,_abddg :=_acded .(*_gcb .PdfObjectName );if _abddg {if *_fbdac !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_fbdac );};};};if _eafc :=_fcce .Get ("\u0043\u006f\u0075n\u0074");_eafc !=nil {_cccda ,_cgbac :=_gcb .GetNumberAsInt64 (_eafc );if _cgbac !=nil {return nil ,_cgbac ;};_bafg .Count =&_cccda ;};return _bafg ,nil ;};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_bcgc *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _bcgc .flattenFieldsWithOpts (false ,appgen ,opts );};func (_agce *pdfFontSimple )getFontEncoding ()(_bdbd string ,_gegde map[_dee .CharCode ]_dee .GlyphName ,_acce error ){_bdbd ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _gdfg ,_fbfaf :=_agae [_agce ._eefc ];_fbfaf {_bdbd =_gdfg ;}else if _agce .fontFlags ()&_bbbd !=0{for _ffcc ,_bbdd :=range _agae {if _gb .Contains (_agce ._eefc ,_ffcc ){_bdbd =_bbdd ;break ;};};};if _agce .Encoding ==nil {return _bdbd ,nil ,nil ;};switch _fddg :=_agce .Encoding .(type ){case *_gcb .PdfObjectName :return string (*_fddg ),nil ,nil ;case *_gcb .PdfObjectDictionary :_caaca ,_cdfba :=_gcb .GetName (_fddg .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _cdfba {_bdbd =_caaca .String ();};if _afbc :=_fddg .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");_afbc !=nil {_egef ,_edcad :=_gcb .GetArray (_afbc );if !_edcad {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_fddg ,_fddg .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));return "",nil ,_gcb .ErrTypeError ;};_gegde ,_acce =_dee .FromFontDifferences (_egef );};return _bdbd ,_gegde ,_acce ;default:_fa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_agce .Encoding ,_agce .Encoding );return "",nil ,_gcb .ErrTypeError ;};};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_gcce *PdfColorCalGray )GetNumComponents ()int {return 1};func _aagba (_fgcd _gcb .PdfObject )[]*_gcb .PdfObjectStream {if _fgcd ==nil {return nil ;};_ccbacf ,_baefa :=_gcb .GetArray (_fgcd );if !_baefa ||_ccbacf .Len ()==0{return nil ;};_begeg :=make ([]*_gcb .PdfObjectStream ,0,_ccbacf .Len ());for _ ,_aefb :=range _ccbacf .Elements (){if _aagbd ,_ecdb :=_gcb .GetStream (_aefb );_ecdb {_begeg =append (_begeg ,_aagbd );};};return _begeg ;};func (_fdbe *PdfAppender )addNewObject (_bggc _gcb .PdfObject ){if _ ,_gged :=_fdbe ._dea [_bggc ];!_gged {_fdbe ._efec =append (_fdbe ._efec ,_bggc );_fdbe ._dea [_bggc ]=struct{}{};};};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_aadcf *PdfPage )GetPageAsIndirectObject ()*_gcb .PdfIndirectObject {return _aadcf ._gdeac };

// Width returns the width of `rect`.
func (_gafeg *PdfRectangle )Width ()float64 {return _f .Abs (_gafeg .Urx -_gafeg .Llx )};

// ToPdfObject implements interface PdfModel.
func (_bbe *PdfActionResetForm )ToPdfObject ()_gcb .PdfObject {_bbe .PdfAction .ToPdfObject ();_cef :=_bbe ._gg ;_eeg :=_cef .PdfObject .(*_gcb .PdfObjectDictionary );_eeg .SetIfNotNil ("\u0053",_gcb .MakeName (string (ActionTypeResetForm )));_eeg .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_bbe .Fields );_eeg .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_bbe .Flags );return _cef ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_bdac :=NewPdfAnnotation ();_dgbd :=&PdfAnnotationRedact {};_dgbd .PdfAnnotation =_bdac ;_dgbd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bdac .SetContext (_dgbd );return _dgbd ;};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _gcb .PdfObject ;Flags _gcb .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_fdfd *PdfColorspaceDeviceRGB )ToPdfObject ()_gcb .PdfObject {return _gcb .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};func (_abbe *PdfField )inherit (_gead func (*PdfField )bool )(bool ,error ){_dcfc :=map[*PdfField ]bool {};_bcebea :=false ;_bbcd :=_abbe ;for _bbcd !=nil {if _ ,_adgdc :=_dcfc [_bbcd ];_adgdc {return false ,_fb .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_ddeaf :=_gead (_bbcd );if _ddeaf {_bcebea =true ;break ;};_dcfc [_bbcd ]=true ;_bbcd =_bbcd .Parent ;};return _bcebea ,nil ;};func (_dabef *PdfWriter )writeObject (_bacca int ,_cdbaf _gcb .PdfObject ){_fa .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_bacca );if _aeadea ,_fdeeb :=_cdbaf .(*_gcb .PdfIndirectObject );_fdeeb {_dabef ._agbae [_bacca ]=crossReference {Type :1,Offset :_dabef ._ggecf ,Generation :_aeadea .GenerationNumber };_fcga :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bacca );if _facac ,_fdge :=_aeadea .PdfObject .(*pdfSignDictionary );_fdge {_facac ._daaff =_dabef ._ggecf +int64 (len (_fcga ));};if _aeadea .PdfObject ==nil {_fa .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");_aeadea .PdfObject =_gcb .MakeNull ();};_fcga +=_aeadea .PdfObject .WriteString ();_fcga +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_dabef .writeString (_fcga );return ;};if _gdebff ,_acaae :=_cdbaf .(*_gcb .PdfObjectStream );_acaae {_dabef ._agbae [_bacca ]=crossReference {Type :1,Offset :_dabef ._ggecf ,Generation :_gdebff .GenerationNumber };_cgcf :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bacca );_cgcf +=_gdebff .PdfObjectDictionary .WriteString ();_cgcf +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_dabef .writeString (_cgcf );_dabef .writeBytes (_gdebff .Stream );_dabef .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _cecef ,_bcgaf :=_cdbaf .(*_gcb .PdfObjectStreams );_bcgaf {_dabef ._agbae [_bacca ]=crossReference {Type :1,Offset :_dabef ._ggecf ,Generation :_cecef .GenerationNumber };_ecbg :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_bacca );var _deggf []string ;var _bcdde string ;var _ddcae int64 ;for _gagef ,_caacfe :=range _cecef .Elements (){_ccdbag ,_gfcae :=_caacfe .(*_gcb .PdfIndirectObject );if !_gfcae {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_bacca ,_caacfe );continue ;};_facdg :=_ccdbag .PdfObject .WriteString ()+"\u0020";_bcdde =_bcdde +_facdg ;_deggf =append (_deggf ,_e .Sprintf ("\u0025\u0064\u0020%\u0064",_ccdbag .ObjectNumber ,_ddcae ));_dabef ._agbae [int (_ccdbag .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_bacca ,Index :_gagef };_ddcae =_ddcae +int64 (len ([]byte (_facdg )));};_aaeg :=_gb .Join (_deggf ,"\u0020")+"\u0020";_fddacf :=_gcb .NewFlateEncoder ();_cfcgd :=_fddacf .MakeStreamDict ();_cfcgd .Set (_gcb .PdfObjectName ("\u0054\u0079\u0070\u0065"),_gcb .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));_bfecb :=int64 (_cecef .Len ());_cfcgd .Set (_gcb .PdfObjectName ("\u004e"),_gcb .MakeInteger (_bfecb ));_fdeaf :=int64 (len (_aaeg ));_cfcgd .Set (_gcb .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_gcb .MakeInteger (_fdeaf ));_bagb ,_ :=_fddacf .EncodeBytes ([]byte (_aaeg +_bcdde ));_bagcg :=int64 (len (_bagb ));_cfcgd .Set (_gcb .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_gcb .MakeInteger (_bagcg ));_ecbg +=_cfcgd .WriteString ();_ecbg +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_dabef .writeString (_ecbg );_dabef .writeBytes (_bagb );_dabef .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_dabef .writeString (_cdbaf .WriteString ());};

// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_fdbaa PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_gcb .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_egag []_gcb .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_efeg []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_gbeg *PdfColorspaceLab )GetNumComponents ()int {return 3};func _bged (_dbbbe _gcb .PdfObject )(*_gcb .PdfObjectDictionary ,*fontCommon ,error ){_cdafcd :=&fontCommon {};if _ceage ,_ccae :=_dbbbe .(*_gcb .PdfIndirectObject );_ccae {_cdafcd ._cagg =_ceage .ObjectNumber ;};_abge ,_dggc :=_gcb .GetDict (_dbbbe );if !_dggc {_fa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_dbbbe );return nil ,nil ,ErrFontNotSupported ;};_cabfc ,_dggc :=_gcb .GetNameVal (_abge .Get ("\u0054\u0079\u0070\u0065"));if !_dggc {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};if _cabfc !="\u0046\u006f\u006e\u0074"{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_cabfc ,"\u0046\u006f\u006e\u0074");return nil ,nil ,_gcb .ErrTypeError ;};_ecca ,_dggc :=_gcb .GetNameVal (_abge .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_dggc {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,nil ,ErrRequiredAttributeMissing ;};_cdafcd ._caaad =_ecca ;_cfgd ,_dggc :=_gcb .GetNameVal (_abge .Get ("\u004e\u0061\u006d\u0065"));if _dggc {_cdafcd ._gdec =_cfgd ;};if _ecca =="\u0054\u0079\u0070e\u0033"{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0033\u0020\u0066\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0073u\u0070\u0070\u006f\u0072\u0074e\u0064\u002e \u0064\u003d\u0025\u0073",_abge );return _abge ,_cdafcd ,ErrType3FontNotSupported ;};_gdbc ,_dggc :=_gcb .GetNameVal (_abge .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_dggc {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return _abge ,_cdafcd ,ErrRequiredAttributeMissing ;};_cdafcd ._eefc =_gdbc ;_aafd :=_abge .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _aafd !=nil {_baaf ,_dead :=_cdag (_aafd );if _dead !=nil {_fa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dead );return _abge ,_cdafcd ,_dead ;};_cdafcd ._efff =_baaf ;};_edgdb :=_abge .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _edgdb !=nil {_cdafcd ._faac =_gcb .TraceToDirectObject (_edgdb );_agba ,_dbgd :=_ffaa (_cdafcd ._faac ,_cdafcd );if _dbgd !=nil {return _abge ,_cdafcd ,_dbgd ;};_cdafcd ._gccbc =_agba ;}else if _ecca =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_ecca =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_bdfc ,_cbeg :=_ad .NewCIDSystemInfo (_abge .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if _cbeg !=nil {return _abge ,_cdafcd ,_cbeg ;};_gaeg :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_bdfc .Registry ,_bdfc .Ordering );if _ad .IsPredefinedCMap (_gaeg ){_cdafcd ._gccbc ,_cbeg =_ad .LoadPredefinedCMap (_gaeg );if _cbeg !=nil {_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_gaeg ,_cbeg );};};};return _abge ,_cdafcd ,nil ;};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_dbeca *LTV )EnableChain (chain []*_g .Certificate )error {return _dbeca .enable (nil ,chain ,"")};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_fddd *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dgfg :=vals [0];if _dgfg < 0.0||_dgfg > 100.0{_fa .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_dgfg );return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cdbf :=vals [1];_dfag :=float64 (-100);_gefd :=float64 (100);if len (_fddd .Range )> 1{_dfag =_fddd .Range [0];_gefd =_fddd .Range [1];};if _cdbf < _dfag ||_cdbf > _gefd {_fa .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_cdbf ,_dfag ,_gefd );return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eecb :=vals [2];_dfdbc :=float64 (-100);_acage :=float64 (100);if len (_fddd .Range )> 3{_dfdbc =_fddd .Range [2];_acage =_fddd .Range [3];};if _eecb < _dfdbc ||_eecb > _acage {_fa .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_eecb ,_dfdbc ,_acage );return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecea :=NewPdfColorLab (_dgfg ,_cdbf ,_eecb );return _ecea ,nil ;};func _afdbd ()_c .Time {_bfgga .Lock ();defer _bfgga .Unlock ();return _bffc };

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_ebbgd *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_ebbgd ._dabea =colorspace ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_cfdd *PdfPageResources )GetShadingByName (keyName _gcb .PdfObjectName )(*PdfShading ,bool ){if _cfdd .Shading ==nil {return nil ,false ;};_dfbcg ,_daffe :=_gcb .TraceToDirectObject (_cfdd .Shading ).(*_gcb .PdfObjectDictionary );if !_daffe {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cfdd .Shading );return nil ,false ;};if _gecg :=_dfbcg .Get (keyName );_gecg !=nil {_dfcgd ,_fbgdd :=_gccg (_gecg );if _fbgdd !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_fbgdd );return nil ,false ;};return _dfcgd ,true ;};return nil ,false ;};func _gacg (_cefgd *_gcb .PdfObjectDictionary ,_cdde *fontCommon )(*pdfFontType0 ,error ){_efdda ,_fdbgfc :=_gcb .GetArray (_cefgd .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));if !_fdbgfc {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_cdde );return nil ,_gcb .ErrRangeError ;};if _efdda .Len ()!=1{_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_efdda .Len ());return nil ,_gcb .ErrRangeError ;};_dbbgd ,_abca :=_dafa (_efdda .Get (0),false );if _abca !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_abca ,_cdde );return nil ,_abca ;};_gcfab :=_fdbdg (_cdde );_gcfab .DescendantFont =_dbbgd ;_gcabe ,_fdbgfc :=_gcb .GetNameVal (_cefgd .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _fdbgfc {if _gcabe =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_gcabe =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_gcfab ._bggef =_dee .NewIdentityTextEncoder (_gcabe );}else if _ad .IsPredefinedCMap (_gcabe ){_gcfab ._gfecec ,_abca =_ad .LoadPredefinedCMap (_gcabe );if _abca !=nil {_fa .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_gcabe ,_abca );};}else {_fa .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_gcabe );};};if _feba :=_dbbgd .baseFields ()._gccbc ;_feba !=nil {if _fdbgc :=_feba .Name ();_fdbgc =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_fdbgc =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_fdbgc =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_fdbgc =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_gcfab ._bggef =_dee .NewCMapEncoder (_gcabe ,_gcfab ._gfecec ,_feba );};};return _gcfab ,nil ;};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _gcb .PdfObject ;NewWindow _gcb .PdfObject ;};func (_gad *PdfReader )newPdfActionSetOCGStateFromDict (_fdc *_gcb .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_fdc .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_fdc .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_dbfae *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_gcb .StreamEncoder ,error ){_cfbca ,_egfff :=_dbfae ._dabce .(*_gcb .PdfObjectStream );if !_egfff {_fa .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbfae ._dabce );return nil ,nil ,_gcb .ErrTypeError ;};_agdfb ,_fged :=_gcb .DecodeStream (_cfbca );if _fged !=nil {_fa .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_fged );return nil ,nil ,_fged ;};_cgca ,_fged :=_gcb .NewEncoderFromStream (_cfbca );if _fged !=nil {_fa .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_fged );return nil ,nil ,_fged ;};return _agdfb ,_cgca ,nil ;};func _deaac (_ebcf *_gcb .PdfObjectDictionary )(*PdfShadingType1 ,error ){_gbacd :=PdfShadingType1 {};if _fbcdb :=_ebcf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_fbcdb !=nil {_fbcdb =_gcb .TraceToDirectObject (_fbcdb );_ggggd ,_dbcfb :=_fbcdb .(*_gcb .PdfObjectArray );if !_dbcfb {_fa .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fbcdb );return nil ,_fb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gbacd .Domain =_ggggd ;};if _afgbb :=_ebcf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_afgbb !=nil {_afgbb =_gcb .TraceToDirectObject (_afgbb );_cfggg ,_gecfb :=_afgbb .(*_gcb .PdfObjectArray );if !_gecfb {_fa .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_afgbb );return nil ,_fb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gbacd .Matrix =_cfggg ;};_bddbb :=_ebcf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _bddbb ==nil {_fa .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");return nil ,ErrRequiredAttributeMissing ;};_gbacd .Function =[]PdfFunction {};if _badbf ,_agbfc :=_bddbb .(*_gcb .PdfObjectArray );_agbfc {for _ ,_ffggbc :=range _badbf .Elements (){_ceaad ,_ggbaf :=_gaeabb (_ffggbc );if _ggbaf !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_ggbaf );return nil ,_ggbaf ;};_gbacd .Function =append (_gbacd .Function ,_ceaad );};}else {_aebfd ,_cebbef :=_gaeabb (_bddbb );if _cebbef !=nil {_fa .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cebbef );return nil ,_cebbef ;};_gbacd .Function =append (_gbacd .Function ,_aebfd );};return &_gbacd ,nil ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _gcb .PdfObject )(_gcb .PdfObjectName ,error ){var _agfe *_gcb .PdfObjectName ;var _ddda *_gcb .PdfObjectArray ;if _gfccc ,_edac :=obj .(*_gcb .PdfIndirectObject );_edac {if _aaae ,_dggd :=_gfccc .PdfObject .(*_gcb .PdfObjectArray );_dggd {_ddda =_aaae ;}else if _bbgee ,_ccbac :=_gfccc .PdfObject .(*_gcb .PdfObjectName );_ccbac {_agfe =_bbgee ;};}else if _fcda ,_cbff :=obj .(*_gcb .PdfObjectArray );_cbff {_ddda =_fcda ;}else if _aedb ,_aaceb :=obj .(*_gcb .PdfObjectName );_aaceb {_agfe =_aedb ;};if _agfe !=nil {switch *_agfe {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_agfe ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_agfe ,nil ;};};if _ddda !=nil &&_ddda .Len ()> 0{if _cbdc ,_bcdf :=_ddda .Get (0).(*_gcb .PdfObjectName );_bcdf {switch *_cbdc {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _ddda .Len ()==1{return *_cbdc ,nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_cbdc ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_cbdc ,nil ;case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_cbdc ,nil ;};};};return "",nil ;};func (_afef *PdfReader )loadAction (_dgbdag _gcb .PdfObject )(*PdfAction ,error ){if _dfba ,_adcd :=_gcb .GetIndirect (_dgbdag );_adcd {_afb ,_gcbg :=_afef .newPdfActionFromIndirectObject (_dfba );if _gcbg !=nil {return nil ,_gcbg ;};return _afb ,nil ;}else if !_gcb .IsNullObject (_dgbdag ){return nil ,_fb .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};return nil ,nil ;};func (_bcbga *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _bcbga ._efeb .GetCrypter ()!=nil &&!_bcbga ._efeb .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_fafce :=_bcbga ._bgee ;_adage :=_fafce .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _adage ==nil {return nil ,nil ;};_fddcc ,_ :=_gcb .GetIndirect (_adage );_adage =_gcb .TraceToDirectObject (_adage );if _gcb .IsNullObject (_adage ){_fa .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");return nil ,nil ;};_geaed ,_eggdd :=_gcb .GetDict (_adage );if !_eggdd {_fa .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_adage );_fa .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_adage );};_fa .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");_fa .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_bcbga ._dddfd {_dafe :=_bcbga .traverseObjectData (_geaed );if _dafe !=nil {_fa .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_dafe );return nil ,_dafe ;};};_cbcgg ,_fdfe :=_bcbga .newPdfAcroFormFromDict (_fddcc ,_geaed );if _fdfe !=nil {return nil ,_fdfe ;};return _cbcgg ,nil ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_gabea *PdfPattern )IsTiling ()bool {return _gabea .PatternType ==1};func (_adegd *Image )samplesTrimPadding (_dcgdg []uint32 )[]uint32 {_dbeeg :=_adegd .ColorComponents *int (_adegd .Width )*int (_adegd .Height );if len (_dcgdg )==_dbeeg {return _dcgdg ;};_cagdbd :=make ([]uint32 ,_dbeeg );_geca :=int (_adegd .Width )*_adegd .ColorComponents ;var _baffd ,_bcab ,_bfcdd ,_bgdg int ;_cbcb :=_efe .BytesPerLine (int (_adegd .Width ),int (_adegd .BitsPerComponent ),_adegd .ColorComponents );for _baffd =0;_baffd < int (_adegd .Height );_baffd ++{_bcab =_baffd *int (_adegd .Width );_bfcdd =_baffd *_cbcb ;for _bgdg =0;_bgdg < _geca ;_bgdg ++{_cagdbd [_bcab +_bgdg ]=_dcgdg [_bfcdd +_bgdg ];};};return _cagdbd ;};func (_cggfb *PdfReader )loadDSS ()(*DSS ,error ){if _cggfb ._efeb .GetCrypter ()!=nil &&!_cggfb ._efeb .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");};_fbffe :=_cggfb ._bgee .Get ("\u0044\u0053\u0053");if _fbffe ==nil {return nil ,nil ;};_bfada ,_ :=_gcb .GetIndirect (_fbffe );_fbffe =_gcb .TraceToDirectObject (_fbffe );switch _adbee :=_fbffe .(type ){case *_gcb .PdfObjectNull :return nil ,nil ;case *_gcb .PdfObjectDictionary :return _bcfg (_bfada ,_adbee );};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_fbffe );};func _fbccd ()string {return _fa .Version };type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bdbg *PdfColorspaceDeviceCMYK )ToPdfObject ()_gcb .PdfObject {return _gcb .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// SetReason sets the `Reason` field of the signature.
func (_gaafb *PdfSignature )SetReason (reason string ){_gaafb .Reason =_gcb .MakeString (reason )};func _ecbfdb ()string {_bfgga .Lock ();defer _bfgga .Unlock ();return _eacgb };

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// SetForms sets the Acroform for a PDF file.
func (_fcbdf *PdfWriter )SetForms (form *PdfAcroForm )error {_fcbdf ._gacc =form ;return nil };

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_gddgg *_gcb .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_gcb .PdfObjectName ;Filter *_gcb .PdfObjectName ;SubFilter *_gcb .PdfObjectName ;Contents *_gcb .PdfObjectString ;Cert _gcb .PdfObject ;ByteRange *_gcb .PdfObjectArray ;Reference *_gcb .PdfObjectArray ;Changes *_gcb .PdfObjectArray ;Name *_gcb .PdfObjectString ;M *_gcb .PdfObjectString ;Location *_gcb .PdfObjectString ;Reason *_gcb .PdfObjectString ;ContactInfo *_gcb .PdfObjectString ;R *_gcb .PdfObjectInteger ;V *_gcb .PdfObjectInteger ;PropBuild *_gcb .PdfObjectDictionary ;PropAuthTime *_gcb .PdfObjectInteger ;PropAuthType *_gcb .PdfObjectName ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_cdb :=NewPdfAction ();_afe :=&PdfActionSubmitForm {};_afe .PdfAction =_cdb ;_cdb .SetContext (_afe );return _afe ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_ccfg *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _fb .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");};_baeg :=field .V ;if _baeg ==nil {return _fb .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_aeaf :=pageNum -1;if _aeaf < 0||_aeaf > len (_ccfg ._accd )-1{return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );};_baad :=_ccfg .Reader .PageList [_aeaf ];field .P =_baad .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_gcb .MakeString (_e .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_baad .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );if _ccfg ._gbed ==_ccfg ._ggde .AcroForm {_ccfg ._gbed =_ccfg .Reader .AcroForm ;};_gfdc :=_ccfg ._gbed ;if _gfdc ==nil {_gfdc =NewPdfAcroForm ();};_gfdc .SigFlags =_gcb .MakeInteger (3);_eegd :=append (_gfdc .AllFields (),field .PdfField );_gfdc .Fields =&_eegd ;_ccfg .ReplaceAcroForm (_gfdc );_ccfg .UpdatePage (_baad );_ccfg ._accd [_aeaf ]=_baad ;return nil ;};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_fgccf *PdfPage )Duplicate ()*PdfPage {_dfdgc :=*_fgccf ;_dfdgc ._aafafd =_gcb .MakeDict ();_dfdgc ._gdeac =_gcb .MakeIndirectObject (_dfdgc ._aafafd );return &_dfdgc ;};func _gaeabb (_dfee _gcb .PdfObject )(PdfFunction ,error ){_dfee =_gcb .ResolveReference (_dfee );if _efbcb ,_daec :=_dfee .(*_gcb .PdfObjectStream );_daec {_agaeg :=_efbcb .PdfObjectDictionary ;_gaca ,_dbfbb :=_agaeg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_gcb .PdfObjectInteger );if !_dbfbb {_fa .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fb .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_gaca ==0{return _gddd (_efbcb );}else if *_gaca ==4{return _cgcc (_efbcb );}else {return nil ,_fb .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _beecc ,_cgba :=_dfee .(*_gcb .PdfIndirectObject );_cgba {_gedcg ,_cegbf :=_beecc .PdfObject .(*_gcb .PdfObjectDictionary );if !_cegbf {_fa .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");return nil ,_fb .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_ababd ,_cegbf :=_gedcg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_gcb .PdfObjectInteger );if !_cegbf {_fa .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fb .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_ababd ==2{return _aafaf (_beecc );}else if *_ababd ==3{return _affb (_beecc );}else {return nil ,_fb .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _dcgcb ,_ceba :=_dfee .(*_gcb .PdfObjectDictionary );_ceba {_afba ,_adege :=_dcgcb .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_gcb .PdfObjectInteger );if !_adege {_fa .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_fb .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_afba ==2{return _aafaf (_dcgcb );}else if *_afba ==3{return _affb (_dcgcb );}else {return nil ,_fb .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_fa .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_dfee );return nil ,_fb .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_adegb *PdfPageResources )GetFontByName (keyName _gcb .PdfObjectName )(_gcb .PdfObject ,bool ){if _adegb .Font ==nil {return nil ,false ;};_eacfa ,_dgdee :=_gcb .TraceToDirectObject (_adegb .Font ).(*_gcb .PdfObjectDictionary );if !_dgdee {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_gcb .TraceToDirectObject (_adegb .Font ));return nil ,false ;};if _fgffc :=_eacfa .Get (keyName );_fgffc !=nil {return _fgffc ,true ;};return nil ,false ;};

// Val returns the color value.
func (_bccf *PdfColorDeviceGray )Val ()float64 {return float64 (*_bccf )};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_fdab :_gcb .MakeIndirectObject (_gcb .MakeDict ()),VRI :map[string ]*VRI {}};};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_efaba *PdfFieldButton )IsPush ()bool {return _efaba .GetType ()==ButtonTypePush };

// ToPdfObject implements interface PdfModel.
func (_efea *PdfActionHide )ToPdfObject ()_gcb .PdfObject {_efea .PdfAction .ToPdfObject ();_geef :=_efea ._gg ;_ggd :=_geef .PdfObject .(*_gcb .PdfObjectDictionary );_ggd .SetIfNotNil ("\u0053",_gcb .MakeName (string (ActionTypeHide )));_ggd .SetIfNotNil ("\u0054",_efea .T );_ggd .SetIfNotNil ("\u0048",_efea .H );return _geef ;};func (_fgf *PdfReader )newPdfActionHideFromDict (_aaa *_gcb .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_aaa .Get ("\u0054"),H :_aaa .Get ("\u0048")},nil ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_eecga *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_bfgga .Lock ();defer _bfgga .Unlock ();_cfgbgg =keywords };

// GetCharMetrics returns the char metrics for character code `code`.
func (_ggacb pdfCIDFontType2 )GetCharMetrics (code _dee .CharCode )(_aa .CharMetrics ,bool ){if _abaab ,_faacg :=_ggacb ._egga [code ];_faacg {return _aa .CharMetrics {Wx :_abaab },true ;};_aabfa :=rune (code );_edcf ,_dbec :=_ggacb ._efcf [_aabfa ];if !_dbec {_edcf =int (_ggacb ._fgeg );};return _aa .CharMetrics {Wx :float64 (_edcf )},true ;};func (_ggdd *PdfReader )newPdfAcroFormFromDict (_ccaea *_gcb .PdfIndirectObject ,_gagd *_gcb .PdfObjectDictionary )(*PdfAcroForm ,error ){_aege :=NewPdfAcroForm ();if _ccaea !=nil {_aege ._cbaa =_ccaea ;_ccaea .PdfObject =_gcb .MakeDict ();};if _fcegf :=_gagd .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_fcegf !=nil {_gfaec ,_ggba :=_gcb .GetArray (_fcegf );if !_ggba {return nil ,_e .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_fcegf );};var _bgdcg []*PdfField ;for _ ,_cdabc :=range _gfaec .Elements (){_fggaf ,_bbgef :=_gcb .GetIndirect (_cdabc );if !_bbgef {if _ ,_dedff :=_cdabc .(*_gcb .PdfObjectNull );_dedff {_fa .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");continue ;};_fa .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_cdabc );return nil ,_e .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dadcb ,_cbge :=_ggdd .newPdfFieldFromIndirectObject (_fggaf ,nil );if _cbge !=nil {return nil ,_cbge ;};_fa .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_dadcb );_bgdcg =append (_bgdcg ,_dadcb );};_aege .Fields =&_bgdcg ;};if _fced :=_gagd .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");_fced !=nil {_geeb ,_acgdg :=_gcb .GetBool (_fced );if _acgdg {_aege .NeedAppearances =_geeb ;}else {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_fced );};};if _bfddc :=_gagd .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_bfddc !=nil {_aaaf ,_dfad :=_gcb .GetInt (_bfddc );if _dfad {_aege .SigFlags =_aaaf ;}else {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bfddc );};};if _dadcc :=_gagd .Get ("\u0043\u004f");_dadcc !=nil {_beea ,_fgcca :=_gcb .GetArray (_dadcc );if _fgcca {_aege .CO =_beea ;}else {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_dadcc );};};if _dcee :=_gagd .Get ("\u0044\u0052");_dcee !=nil {if _aacdc ,_bgcf :=_gcb .GetDict (_dcee );_bgcf {_egafa ,_gcdfb :=NewPdfPageResourcesFromDict (_aacdc );if _gcdfb !=nil {_fa .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_gcdfb );return nil ,_gcdfb ;};_aege .DR =_egafa ;}else {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_dcee );};};if _fggb :=_gagd .Get ("\u0044\u0041");_fggb !=nil {_ceege ,_gdfff :=_gcb .GetString (_fggb );if _gdfff {_aege .DA =_ceege ;}else {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_fggb );};};if _beeeg :=_gagd .Get ("\u0051");_beeeg !=nil {_fdgbc ,_bfage :=_gcb .GetInt (_beeeg );if _bfage {_aege .Q =_fdgbc ;}else {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_beeeg );};};if _gaee :=_gagd .Get ("\u0058\u0046\u0041");_gaee !=nil {_aege .XFA =_gaee ;};return _aege ,nil ;};func (_dccfe *PdfFont )baseFields ()*fontCommon {if _dccfe ._ffag ==nil {_fa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");return nil ;};return _dccfe ._ffag .baseFields ();};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_gaac *Image )GetSamples ()[]uint32 {_bbgb :=_cg .ResampleBytes (_gaac .Data ,int (_gaac .BitsPerComponent ));if _gaac .BitsPerComponent < 8{_bbgb =_gaac .samplesTrimPadding (_bbgb );};_gddbbd :=int (_gaac .Width )*int (_gaac .Height )*_gaac .ColorComponents ;if len (_bbgb )< _gddbbd {_fa .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_bbgb ),_gddbbd );return _bbgb ;}else if len (_bbgb )> _gddbbd {_fa .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_bbgb ),_gddbbd );_bbgb =_bbgb [:_gddbbd ];};return _bbgb ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_gcb .PdfObjectInteger ;BitsPerComponent *_gcb .PdfObjectInteger ;BitsPerFlag *_gcb .PdfObjectInteger ;Decode *_gcb .PdfObjectArray ;Function []PdfFunction ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_bfgga .Lock ();defer _bfgga .Unlock ();_daefc =creator };

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;func _adgfg ()string {_bfgga .Lock ();defer _bfgga .Unlock ();if len (_daefc )> 0{return _daefc ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};

// AddFont adds a font dictionary to the Font resources.
func (_cdfbad *PdfPage )AddFont (name _gcb .PdfObjectName ,font _gcb .PdfObject )error {if _cdfbad .Resources ==nil {_cdfbad .Resources =NewPdfPageResources ();};if _cdfbad .Resources .Font ==nil {_cdfbad .Resources .Font =_gcb .MakeDict ();};_degb ,_gdgaa :=_gcb .TraceToDirectObject (_cdfbad .Resources .Font ).(*_gcb .PdfObjectDictionary );if !_gdgaa {_fa .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_gcb .TraceToDirectObject (_cdfbad .Resources .Font ));return _fb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_degb .Set (name ,font );return nil ;};type fontCommon struct{_eefc string ;_caaad string ;_gdec string ;_faac _gcb .PdfObject ;_gccbc *_ad .CMap ;_efff *PdfFontDescriptor ;_cagg int64 ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_bgfd int64 ;_daeeed int64 ;_bbcdc int64 ;_feecf int64 ;_fcad int64 ;_efabe int64 ;_ddead byte ;_gaafg int64 ;_bgdfc int64 ;};

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_efgcg *PdfPageResources )GetXObjectFormByName (keyName _gcb .PdfObjectName )(*XObjectForm ,error ){_ccdee ,_gcecd :=_efgcg .GetXObjectByName (keyName );if _ccdee ==nil {return nil ,nil ;};if _gcecd !=XObjectTypeForm {return nil ,_fb .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");};_aadbf ,_dfbdf :=NewXObjectFormFromStream (_ccdee );if _dfbdf !=nil {return nil ,_dfbdf ;};return _aadbf ,nil ;};func (_aef *PdfReader )newPdfActionTransFromDict (_gcadc *_gcb .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_gcadc .Get ("\u0054\u0072\u0061n\u0073")},nil ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_bfed *PdfColorCalRGB )GetNumComponents ()int {return 3};

// GetSubFilter returns SubFilter value or empty string.
func (_adgda *pdfSignDictionary )GetSubFilter ()string {_gdddd :=_adgda .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _gdddd ==nil {return "";};if _eaada ,_aece :=_gcb .GetNameVal (_gdddd );_aece {return _eaada ;};return "";};

// HasExtGState checks if ExtGState name is available.
func (_ecagd *PdfPage )HasExtGState (name _gcb .PdfObjectName )bool {if _ecagd .Resources ==nil {return false ;};if _ecagd .Resources .ExtGState ==nil {return false ;};_dbeee ,_aegce :=_gcb .TraceToDirectObject (_ecagd .Resources .ExtGState ).(*_gcb .PdfObjectDictionary );if !_aegce {_fa .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_gcb .TraceToDirectObject (_ecagd .Resources .ExtGState ));return false ;};_aabe :=_dbeee .Get (name );_gefaa :=_aabe !=nil ;return _gefaa ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_ggec *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_bbff *PdfFont )CharcodesToStrings (charcodes []_dee .CharCode )([]string ,int ,int ){_fbbd :=_bbff .baseFields ();_fedb :=make ([]string ,0,len (charcodes ));_efbdd :=0;for _ ,_dgcaa :=range charcodes {if _fbbd ._gccbc !=nil {if _daabb ,_agafa :=_fbbd ._gccbc .CharcodeToUnicode (_ad .CharCode (_dgcaa ));_agafa {_fedb =append (_fedb ,_daabb );continue ;};};_adfda :=_bbff .Encoder ();if _adfda !=nil {if _acbbe ,_dcac :=_adfda .CharcodeToRune (_dgcaa );_dcac {_fedb =append (_fedb ,string (_acbbe ));continue ;};};_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_dgcaa ,charcodes ,_fbbd .isCIDFont (),_bbff ,_adfda );_efbdd ++;_fedb =append (_fedb ,_ad .MissingCodeString );};if _efbdd !=0{_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_efbdd ,_bbff );};return _fedb ,len (_fedb ),_efbdd ;};func (_cdefc Image )getBase ()_efe .ImageBase {return _efe .NewImageBase (int (_cdefc .Width ),int (_cdefc .Height ),int (_cdefc .BitsPerComponent ),_cdefc .ColorComponents ,_cdefc .Data ,_cdefc ._gaecf ,_cdefc ._gdeafd );};func (_babgc *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _bcbc :=_babgc ._efff ;_bcbc !=nil {return _bcbc ;};return _babgc ._dgdd ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dacec *PdfShading )ToPdfObject ()_gcb .PdfObject {_acfg :=_dacec ._bgcgd ;_fecdg ,_addfg :=_dacec .getShadingDict ();if _addfg !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _dacec .ShadingType !=nil {_fecdg .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_dacec .ShadingType );};if _dacec .ColorSpace !=nil {_fecdg .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_dacec .ColorSpace .ToPdfObject ());};if _dacec .Background !=nil {_fecdg .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_dacec .Background );};if _dacec .BBox !=nil {_fecdg .Set ("\u0042\u0042\u006f\u0078",_dacec .BBox .ToPdfObject ());};if _dacec .AntiAlias !=nil {_fecdg .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_dacec .AntiAlias );};return _acfg ;};var _ pdfFont =(*pdfFontSimple )(nil );

// ToPdfObject returns a PDF object representation of the outline item.
func (_aebcg *OutlineItem )ToPdfObject ()_gcb .PdfObject {_bbfaa ,_ :=_aebcg .ToPdfOutlineItem ();return _bbfaa .ToPdfObject ();};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_ccd :=NewPdfAction ();_bbb :=&PdfActionThread {};_bbb .PdfAction =_ccd ;_ccd .SetContext (_bbb );return _bbb ;};func (_caae *PdfAppender )replaceObject (_agcg ,_bbdg _gcb .PdfObject ){switch _edag :=_agcg .(type ){case *_gcb .PdfIndirectObject :_caae ._bbdc [_bbdg ]=_edag .ObjectNumber ;case *_gcb .PdfObjectStream :_caae ._bbdc [_bbdg ]=_edag .ObjectNumber ;};};

// ToPdfObject implements interface PdfModel.
func (_bagf *PdfBorderStyle )ToPdfObject ()_gcb .PdfObject {_cdcf :=_gcb .MakeDict ();if _bagf ._afcd !=nil {if _dcdb ,_decc :=_bagf ._afcd .(*_gcb .PdfIndirectObject );_decc {_dcdb .PdfObject =_cdcf ;};};_cdcf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));if _bagf .W !=nil {_cdcf .Set ("\u0057",_gcb .MakeFloat (*_bagf .W ));};if _bagf .S !=nil {_cdcf .Set ("\u0053",_gcb .MakeName (_bagf .S .GetPdfName ()));};if _bagf .D !=nil {_cdcf .Set ("\u0044",_gcb .MakeArrayFromIntegers (*_bagf .D ));};if _bagf ._afcd !=nil {return _bagf ._afcd ;};return _cdcf ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cbba *PdfColorspaceSpecialPattern )ToPdfObject ()_gcb .PdfObject {if _cbba .UnderlyingCS ==nil {return _gcb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_aegb :=_gcb .MakeArray (_gcb .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_aegb .Append (_cbba .UnderlyingCS .ToPdfObject ());if _cbba ._dgfge !=nil {_cbba ._dgfge .PdfObject =_aegb ;return _cbba ._dgfge ;};return _aegb ;};

// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_babaa byte )byte ;

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_ggbdf :=&PdfPageResourcesColorspaces {};_ggbdf .Names =[]string {};_ggbdf .Colorspaces =map[string ]PdfColorspace {};_ggbdf ._fbab =&_gcb .PdfIndirectObject {};return _ggbdf ;};func _cbdcc (_dfgdg *_gcb .PdfObjectDictionary ,_ffea *fontCommon )(*pdfCIDFontType2 ,error ){if _ffea ._caaad !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_fa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_ffea );return nil ,_gcb .ErrRangeError ;};_edgg :=_dafga (_ffea );_bgadg ,_ebda :=_gcb .GetDict (_dfgdg .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_ebda {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_ffea );return nil ,ErrRequiredAttributeMissing ;};_edgg .CIDSystemInfo =_bgadg ;_edgg .DW =_dfgdg .Get ("\u0044\u0057");_edgg .W =_dfgdg .Get ("\u0057");_edgg .DW2 =_dfgdg .Get ("\u0044\u0057\u0032");_edgg .W2 =_dfgdg .Get ("\u0057\u0032");_edgg .CIDToGIDMap =_dfgdg .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");_edgg ._fgeg =1000.0;if _beeef ,_cgade :=_gcb .GetNumberAsFloat (_edgg .DW );_cgade ==nil {_edgg ._fgeg =_beeef ;};_bbcab ,_bcgdg :=_cgcg (_edgg .W );if _bcgdg !=nil {return nil ,_bcgdg ;};if _bbcab ==nil {_bbcab =map[_dee .CharCode ]float64 {};};_edgg ._egga =_bbcab ;return _edgg ,nil ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_dbcgg *PdfPageResources )GetPatternByName (keyName _gcb .PdfObjectName )(*PdfPattern ,bool ){if _dbcgg .Pattern ==nil {return nil ,false ;};_eegfg ,_ffaec :=_gcb .TraceToDirectObject (_dbcgg .Pattern ).(*_gcb .PdfObjectDictionary );if !_ffaec {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dbcgg .Pattern );return nil ,false ;};if _aggfb :=_eegfg .Get (keyName );_aggfb !=nil {_aabaa ,_gbdaf :=_abbf (_aggfb );if _gbdaf !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_gbdaf );return nil ,false ;};return _aabaa ,true ;};return nil ,false ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_dgbcg *XObjectForm )SetContentStream (content []byte ,encoder _gcb .StreamEncoder )error {_beccad :=content ;if encoder ==nil {if _dgbcg .Filter !=nil {encoder =_dgbcg .Filter ;}else {encoder =_gcb .NewRawEncoder ();};};_cdacf ,_fgedag :=encoder .EncodeBytes (_beccad );if _fgedag !=nil {return _fgedag ;};_beccad =_cdacf ;_dgbcg .Stream =_beccad ;_dgbcg .Filter =encoder ;return nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_ddeaa *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};

// ToPdfObject implements interface PdfModel.
func (_bea *PdfAnnotationLine )ToPdfObject ()_gcb .PdfObject {_bea .PdfAnnotation .ToPdfObject ();_ebf :=_bea ._dgc ;_dega :=_ebf .PdfObject .(*_gcb .PdfObjectDictionary );_bea .PdfAnnotationMarkup .appendToPdfDictionary (_dega );_dega .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u004c\u0069\u006e\u0065"));_dega .SetIfNotNil ("\u004c",_bea .L );_dega .SetIfNotNil ("\u0042\u0053",_bea .BS );_dega .SetIfNotNil ("\u004c\u0045",_bea .LE );_dega .SetIfNotNil ("\u0049\u0043",_bea .IC );_dega .SetIfNotNil ("\u004c\u004c",_bea .LL );_dega .SetIfNotNil ("\u004c\u004c\u0045",_bea .LLE );_dega .SetIfNotNil ("\u0043\u0061\u0070",_bea .Cap );_dega .SetIfNotNil ("\u0049\u0054",_bea .IT );_dega .SetIfNotNil ("\u004c\u004c\u004f",_bea .LLO );_dega .SetIfNotNil ("\u0043\u0050",_bea .CP );_dega .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bea .Measure );_dega .SetIfNotNil ("\u0043\u004f",_bea .CO );return _ebf ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_afefc *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggcb :=vals [0];if _ggcb < 0.0||_ggcb > 1.0{_fa .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");};if _ggcb < 0.0{_ggcb =0.0;}else if _ggcb > 1.0{_ggcb =1.0;};return NewPdfColorDeviceGray (_ggcb ),nil ;};

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_gaecf []byte ;_gdeafd []float64 ;};func (_ccdea *PdfWriter )addObject (_caeee _gcb .PdfObject )bool {_fecg :=_ccdea .hasObject (_caeee );if !_fecg {_ccbga :=_gcb .ResolveReferencesDeep (_caeee ,_ccdea ._ffdfe );if _ccbga !=nil {_fa .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_ccbga );};_ccdea ._dfeee =append (_ccdea ._dfeee ,_caeee );_ccdea ._cbgdbf [_caeee ]=struct{}{};return true ;};return false ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_gaf *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_egdff :=0.3*_gaf .R ()+0.59*_gaf .G ()+0.11*_gaf .B ();_egdff =_f .Min (_f .Max (_egdff ,0.0),1.0);return NewPdfColorDeviceGray (_egdff );};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_fbcf *PdfAcroForm )GetContainingPdfObject ()_gcb .PdfObject {return _fbcf ._cbaa };

// SetVersion sets the PDF version of the output file.
func (_dbdag *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_dbdag ._fdfdg =majorVersion ;_dbdag ._geadf =minorVersion ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_aecbb *PdfReader )PageFromIndirectObject (ind *_gcb .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_aecbb .PageList )!=len (_aecbb ._afcae ){return nil ,0,_fb .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};for _dffag ,_effe :=range _aecbb ._afcae {if _effe ==ind {return _aecbb .PageList [_dffag ],_dffag +1,nil ;};};return nil ,0,_fb .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_dgcb *Image )ColorAt (x ,y int )(_bd .Color ,error ){_gcbba :=_efe .BytesPerLine (int (_dgcb .Width ),int (_dgcb .BitsPerComponent ),_dgcb .ColorComponents );switch _dgcb .ColorComponents {case 1:return _efe .ColorAtGrayscale (x ,y ,int (_dgcb .BitsPerComponent ),_gcbba ,_dgcb .Data ,_dgcb ._gdeafd );case 3:return _efe .ColorAtNRGBA (x ,y ,int (_dgcb .Width ),_gcbba ,int (_dgcb .BitsPerComponent ),_dgcb .Data ,_dgcb ._gaecf ,_dgcb ._gdeafd );case 4:return _efe .ColorAtCMYK (x ,y ,int (_dgcb .Width ),_dgcb .Data ,_dgcb ._gdeafd );};_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dgcb .ColorComponents ,_dgcb .BitsPerComponent );return nil ,_fb .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_fgfc *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_bda :=NewPdfAnnotation ();_gac :=&PdfAnnotationProjection {};_gac .PdfAnnotation =_bda ;_gac .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bda .SetContext (_gac );return _gac ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_fbdgf :=NewPdfAnnotation ();_gagf :=&PdfAnnotationSquare {};_gagf .PdfAnnotation =_fbdgf ;_gagf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fbdgf .SetContext (_gagf );return _gagf ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_egcg *Outline )ToPdfObject ()_gcb .PdfObject {return _egcg .ToPdfOutline ().ToPdfObject ()};func _aafba (_bfbd *PdfField ,_dddgg _gcb .PdfObject )error {switch _bfbd .GetContext ().(type ){case *PdfFieldText :switch _abadd :=_dddgg .(type ){case *_gcb .PdfObjectName :_cdba :=_abadd ;_fa .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_cdba .String ());_bfbd .V =_gcb .MakeEncodedString (_abadd .String (),true );case *_gcb .PdfObjectString :_bfbd .V =_gcb .MakeEncodedString (_abadd .String (),true );default:_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_abadd ,_abadd );};case *PdfFieldButton :switch _dddgg .(type ){case *_gcb .PdfObjectName :if len (_dddgg .String ())> 0{_bfbd .V =_dddgg ;_cbgdg (_bfbd ,_dddgg );};case *_gcb .PdfObjectString :if len (_dddgg .String ())> 0{_bfbd .V =_gcb .MakeName (_dddgg .String ());_cbgdg (_bfbd ,_bfbd .V );};default:_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_bfbd .PartialName (),_dddgg );_bfbd .V =_dddgg ;};case *PdfFieldChoice :switch _dddgg .(type ){case *_gcb .PdfObjectName :if len (_dddgg .String ())> 0{_bfbd .V =_gcb .MakeString (_dddgg .String ());_cbgdg (_bfbd ,_dddgg );};case *_gcb .PdfObjectString :if len (_dddgg .String ())> 0{_bfbd .V =_dddgg ;_cbgdg (_bfbd ,_gcb .MakeName (_dddgg .String ()));};default:_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_bfbd .PartialName (),_dddgg );_bfbd .V =_dddgg ;};case *PdfFieldSignature :_fa .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_bfbd .PartialName (),_dddgg );};return nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_addgf pdfFontType0 )GetRuneMetrics (r rune )(_aa .CharMetrics ,bool ){if _addgf .DescendantFont ==nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_addgf );return _aa .CharMetrics {},false ;};return _addgf .DescendantFont .GetRuneMetrics (r );};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_acb :=NewPdfAction ();_db :=&PdfActionJavaScript {};_db .PdfAction =_acb ;_acb .SetContext (_db );return _db ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_aeade *Image )Resample (targetBitsPerComponent int64 ){if _aeade .BitsPerComponent ==targetBitsPerComponent {return ;};_fecc :=_aeade .GetSamples ();if targetBitsPerComponent < _aeade .BitsPerComponent {_ecbfc :=_aeade .BitsPerComponent -targetBitsPerComponent ;for _dcfff :=range _fecc {_fecc [_dcfff ]>>=uint (_ecbfc );};}else if targetBitsPerComponent > _aeade .BitsPerComponent {_ffefg :=targetBitsPerComponent -_aeade .BitsPerComponent ;for _gefdf :=range _fecc {_fecc [_gefdf ]<<=uint (_ffefg );};};_aeade .BitsPerComponent =targetBitsPerComponent ;if _aeade .BitsPerComponent < 8{_aeade .resampleLowBits (_fecc );return ;};_ggbba :=_efe .BytesPerLine (int (_aeade .Width ),int (_aeade .BitsPerComponent ),_aeade .ColorComponents );_eabaf :=make ([]byte ,_ggbba *int (_aeade .Height ));var (_eadg ,_bfegg ,_dadca ,_cgedb int ;_adfgc uint32 ;);for _dadca =0;_dadca < int (_aeade .Height );_dadca ++{_eadg =_dadca *_ggbba ;_bfegg =(_dadca +1)*_ggbba -1;_gcegc :=_cg .ResampleUint32 (_fecc [_eadg :_bfegg ],int (targetBitsPerComponent ),8);for _cgedb ,_adfgc =range _gcegc {_eabaf [_cgedb +_eadg ]=byte (_adfgc );};};_aeade .Data =_eabaf ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_gbad PdfModel ;Rect _gcb .PdfObject ;Contents _gcb .PdfObject ;P _gcb .PdfObject ;NM _gcb .PdfObject ;M _gcb .PdfObject ;F _gcb .PdfObject ;AP _gcb .PdfObject ;AS _gcb .PdfObject ;Border _gcb .PdfObject ;C _gcb .PdfObject ;StructParent _gcb .PdfObject ;OC _gcb .PdfObject ;_dgc *_gcb .PdfIndirectObject ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_gcb .PdfObjectStream )(*XObjectImage ,error ){_eaeef :=&XObjectImage {};_eaeef ._cacbc =stream ;_fbebf :=*(stream .PdfObjectDictionary );_cbgc ,_dgeg :=_gcb .NewEncoderFromStream (stream );if _dgeg !=nil {return nil ,_dgeg ;};_eaeef .Filter =_cbgc ;if _eddcb :=_gcb .TraceToDirectObject (_fbebf .Get ("\u0057\u0069\u0064t\u0068"));_eddcb !=nil {_ggff ,_cfdga :=_eddcb .(*_gcb .PdfObjectInteger );if !_cfdga {return nil ,_fb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");};_eegbd :=int64 (*_ggff );_eaeef .Width =&_eegbd ;}else {return nil ,_fb .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _cgcdc :=_gcb .TraceToDirectObject (_fbebf .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_cgcdc !=nil {_bgcb ,_ecaab :=_cgcdc .(*_gcb .PdfObjectInteger );if !_ecaab {return nil ,_fb .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_bgcedd :=int64 (*_bgcb );_eaeef .Height =&_bgcedd ;}else {return nil ,_fb .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _egeag :=_gcb .TraceToDirectObject (_fbebf .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));_egeag !=nil {_dgagc ,_bbgad :=NewPdfColorspaceFromPdfObject (_egeag );if _bbgad !=nil {return nil ,_bbgad ;};_eaeef .ColorSpace =_dgagc ;}else {_fa .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063t\u0020\u0049\u006d\u0061\u0067e\u0020\u0063\u006f\u006c\u006f\u0072s\u0070\u0061\u0063\u0065\u0020n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064 \u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u0031\u0020\u0063\u006fl\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074");_eaeef .ColorSpace =NewPdfColorspaceDeviceGray ();};if _dagge :=_gcb .TraceToDirectObject (_fbebf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_dagge !=nil {_abeda ,_gdcdg :=_dagge .(*_gcb .PdfObjectInteger );if !_gdcdg {return nil ,_fb .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_efgaf :=int64 (*_abeda );_eaeef .BitsPerComponent =&_efgaf ;};_eaeef .Intent =_fbebf .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");_eaeef .ImageMask =_fbebf .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_eaeef .Mask =_fbebf .Get ("\u004d\u0061\u0073\u006b");_eaeef .Decode =_fbebf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_eaeef .Interpolate =_fbebf .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");_eaeef .Alternatives =_fbebf .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_eaeef .SMask =_fbebf .Get ("\u0053\u004d\u0061s\u006b");_eaeef .SMaskInData =_fbebf .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");_eaeef .Matte =_fbebf .Get ("\u004d\u0061\u0074t\u0065");_eaeef .Name =_fbebf .Get ("\u004e\u0061\u006d\u0065");_eaeef .StructParent =_fbebf .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_eaeef .ID =_fbebf .Get ("\u0049\u0044");_eaeef .OPI =_fbebf .Get ("\u004f\u0050\u0049");_eaeef .Metadata =_fbebf .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_eaeef .OC =_fbebf .Get ("\u004f\u0043");_eaeef .Stream =stream .Stream ;return _eaeef ,nil ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_ceaf []byte )(_bffbe int ,_fbedf error );};

// GetNumComponents returns the number of color components (3 for RGB).
func (_ddcg *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _gcb .PdfObject ;BS _gcb .PdfObject ;};

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_fefc *PdfColorspaceDeviceNAttributes )ToPdfObject ()_gcb .PdfObject {_ddcf :=_gcb .MakeDict ();if _fefc .Subtype !=nil {_ddcf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fefc .Subtype );};_ddcf .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_fefc .Colorants );_ddcf .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_fefc .Process );_ddcf .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_fefc .MixingHints );if _fefc ._gceg !=nil {_fefc ._gceg .PdfObject =_ddcf ;return _fefc ._gceg ;};return _ddcf ;};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_fdga *PdfField )IsTerminal ()bool {return len (_fdga .Kids )==0};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_beac *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};func _ceff (_dadbc _gcb .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_fa .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_dadbc .String (),_dadbc );_fge :=NewPdfColorspaceSpecialPattern ();if _edca ,_ecad :=_dadbc .(*_gcb .PdfIndirectObject );_ecad {_fge ._dgfge =_edca ;};_dadbc =_gcb .TraceToDirectObject (_dadbc );if _fgcbg ,_cbgfb :=_dadbc .(*_gcb .PdfObjectName );_cbgfb {if *_fgcbg !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};return _fge ,nil ;};_faaf ,_acgf :=_dadbc .(*_gcb .PdfObjectArray );if !_acgf {_fa .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_dadbc );return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _faaf .Len ()!=1&&_faaf .Len ()!=2{_fa .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_faaf );return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_dadbc =_faaf .Get (0);if _adaf ,_cabe :=_dadbc .(*_gcb .PdfObjectName );_cabe {if *_adaf !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_fa .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_adaf );return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _faaf .Len ()> 1{_dadbc =_faaf .Get (1);_dadbc =_gcb .TraceToDirectObject (_dadbc );_acea ,_agcb :=NewPdfColorspaceFromPdfObject (_dadbc );if _agcb !=nil {return nil ,_agcb ;};_fge .UnderlyingCS =_acea ;};_fa .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_fge .UnderlyingCS );return _fge ,nil ;};var _beagd =_ba .MustCompile ("\u005c\u0073\u002a\u0044\u005c\u0073\u002a:\u005c\u0073\u002a\u0028\u005c\u0064\u007b\u0034\u007d\u0029\u0028\u005c\u0064\u007b2\u007d)\u0028\u005c\u0064\u007b\u0032\u007d)\u0028\u005c\u0064\u007b\u0032\u007d\u0029(\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005c\u0064\u007b\u0032\u007d\u0029\u0028\u005b\u002b\u002d\u005a\u005d\u0029\u003f\u0028\u005cd\u007b\u0032\u007d\u0029\u003f\u0027\u003f\u0028\u005c\u0064\u007b\u0032\u007d)\u003f");func (_febb *DSS )generateHashMap (_fbddf []*_gcb .PdfObjectStream )(map[string ]*_gcb .PdfObjectStream ,error ){_cbbg :=map[string ]*_gcb .PdfObjectStream {};for _ ,_afcb :=range _fbddf {_gfdcad ,_cdeba :=_gcb .DecodeStream (_afcb );if _cdeba !=nil {return nil ,_cdeba ;};_eagg ,_cdeba :=_fadda (_gfdcad );if _cdeba !=nil {return nil ,_cdeba ;};_cbbg [string (_eagg )]=_afcb ;};return _cbbg ,nil ;};func (_daafa *PdfReader )newPdfAnnotationWidgetFromDict (_cfa *_gcb .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_ddf :=PdfAnnotationWidget {};_ddf .H =_cfa .Get ("\u0048");_ddf .MK =_cfa .Get ("\u004d\u004b");_ddf .A =_cfa .Get ("\u0041");_ddf .AA =_cfa .Get ("\u0041\u0041");_ddf .BS =_cfa .Get ("\u0042\u0053");_ddf .Parent =_cfa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_ddf ,nil ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_gcb .PdfObjectName ;Colorants _gcb .PdfObject ;Process _gcb .PdfObject ;MixingHints _gcb .PdfObject ;_gceg *_gcb .PdfIndirectObject ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_fedbe *PdfReader )GetPageLabels ()(_gcb .PdfObject ,error ){_cdebe :=_gcb .ResolveReference (_fedbe ._bgee .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _cdebe ==nil {return nil ,nil ;};if !_fedbe ._dddfd {_fegc :=_fedbe .traverseObjectData (_cdebe );if _fegc !=nil {return nil ,_fegc ;};};return _cdebe ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gff *PdfActionSetOCGState )ToPdfObject ()_gcb .PdfObject {_gff .PdfAction .ToPdfObject ();_bee :=_gff ._gg ;_cecg :=_bee .PdfObject .(*_gcb .PdfObjectDictionary );_cecg .SetIfNotNil ("\u0053",_gcb .MakeName (string (ActionTypeSetOCGState )));_cecg .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_gff .State );_cecg .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_gff .PreserveRB );return _bee ;};

// Subtype returns the font's "Subtype" field.
func (_ebaee *PdfFont )Subtype ()string {_gfedf :=_ebaee .baseFields ()._caaad ;if _dbce ,_cacf :=_ebaee ._ffag .(*pdfFontType0 );_cacf {_gfedf =_gfedf +"\u003a"+_dbce .DescendantFont .Subtype ();};return _gfedf ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_bfaa *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };func _daca (_dadg *_gcb .PdfObjectDictionary )bool {for _ ,_geae :=range _dadg .Keys (){if _ ,_gacd :=_dgecf [_geae .String ()];_gacd {return true ;};};return false ;};func _cgcc (_ecbd *_gcb .PdfObjectStream )(*PdfFunctionType4 ,error ){_ecde :=&PdfFunctionType4 {};_ecde ._beffa =_ecbd ;_ffccd :=_ecbd .PdfObjectDictionary ;_dabda ,_aefec :=_gcb .TraceToDirectObject (_ffccd .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gcb .PdfObjectArray );if !_aefec {_fa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fb .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _dabda .Len ()%2!=0{_fa .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fb .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_cfafa ,_cfdcb :=_dabda .ToFloat64Array ();if _cfdcb !=nil {return nil ,_cfdcb ;};_ecde .Domain =_cfafa ;_dabda ,_aefec =_gcb .TraceToDirectObject (_ffccd .Get ("\u0052\u0061\u006eg\u0065")).(*_gcb .PdfObjectArray );if _aefec {if _dabda .Len ()< 0||_dabda .Len ()%2!=0{return nil ,_fb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_begd ,_bagc :=_dabda .ToFloat64Array ();if _bagc !=nil {return nil ,_bagc ;};_ecde .Range =_begd ;};_aabfd ,_cfdcb :=_gcb .DecodeStream (_ecbd );if _cfdcb !=nil {return nil ,_cfdcb ;};_ecde ._ccgae =_aabfd ;_bbga :=_ef .NewPSParser (_aabfd );_dafgd ,_cfdcb :=_bbga .Parse ();if _cfdcb !=nil {return nil ,_cfdcb ;};_ecde .Program =_dafgd ;return _ecde ,nil ;};

// GetPageDict converts the Page to a PDF object dictionary.
func (_bbgc *PdfPage )GetPageDict ()*_gcb .PdfObjectDictionary {_dcabe :=_bbgc ._aafafd ;_dcabe .Clear ();_dcabe .Set ("\u0054\u0079\u0070\u0065",_gcb .MakeName ("\u0050\u0061\u0067\u0065"));_dcabe .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_bbgc .Parent );if _bbgc .LastModified !=nil {_dcabe .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_bbgc .LastModified .ToPdfObject ());};if _bbgc .Resources !=nil {_dcabe .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_bbgc .Resources .ToPdfObject ());};if _bbgc .CropBox !=nil {_dcabe .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_bbgc .CropBox .ToPdfObject ());};if _bbgc .MediaBox !=nil {_dcabe .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_bbgc .MediaBox .ToPdfObject ());};if _bbgc .BleedBox !=nil {_dcabe .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_bbgc .BleedBox .ToPdfObject ());};if _bbgc .TrimBox !=nil {_dcabe .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_bbgc .TrimBox .ToPdfObject ());};if _bbgc .ArtBox !=nil {_dcabe .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_bbgc .ArtBox .ToPdfObject ());};_dcabe .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_bbgc .BoxColorInfo );_dcabe .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_bbgc .Contents );if _bbgc .Rotate !=nil {_dcabe .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_gcb .MakeInteger (*_bbgc .Rotate ));};_dcabe .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_bbgc .Group );_dcabe .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_bbgc .Thumb );_dcabe .SetIfNotNil ("\u0042",_bbgc .B );_dcabe .SetIfNotNil ("\u0044\u0075\u0072",_bbgc .Dur );_dcabe .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_bbgc .Trans );_dcabe .SetIfNotNil ("\u0041\u0041",_bbgc .AA );_dcabe .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bbgc .Metadata );_dcabe .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_bbgc .PieceInfo );_dcabe .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_bbgc .StructParents );_dcabe .SetIfNotNil ("\u0049\u0044",_bbgc .ID );_dcabe .SetIfNotNil ("\u0050\u005a",_bbgc .PZ );_dcabe .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_bbgc .SeparationInfo );_dcabe .SetIfNotNil ("\u0054\u0061\u0062\u0073",_bbgc .Tabs );_dcabe .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_bbgc .TemplateInstantiated );_dcabe .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_bbgc .PresSteps );_dcabe .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_bbgc .UserUnit );_dcabe .SetIfNotNil ("\u0056\u0050",_bbgc .VP );if _bbgc ._eafecf !=nil {_afabd :=_gcb .MakeArray ();for _ ,_aafe :=range _bbgc ._eafecf {if _cfdcg :=_aafe .GetContext ();_cfdcg !=nil {_afabd .Append (_cfdcg .ToPdfObject ());}else {_afabd .Append (_aafe .ToPdfObject ());};};if _afabd .Len ()> 0{_dcabe .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_afabd );};}else if _bbgc .Annots !=nil {_dcabe .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_bbgc .Annots );};return _dcabe ;};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_gbdfaf *XObjectImage )SetFilter (encoder _gcb .StreamEncoder )error {_cgeac :=_gbdfaf .Stream ;_gceef ,_fffgc :=_gbdfaf .Filter .DecodeBytes (_cgeac );if _fffgc !=nil {return _fffgc ;};_gbdfaf .Filter =encoder ;encoder .UpdateParams (_gbdfaf .getParamsDict ());_cgeac ,_fffgc =encoder .EncodeBytes (_gceef );if _fffgc !=nil {return _fffgc ;};_gbdfaf .Stream =_cgeac ;return nil ;};

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_cgfc interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_gbba *PdfRectangle )Normalize (){if _gbba .Llx > _gbba .Urx {_gbba .Llx ,_gbba .Urx =_gbba .Urx ,_gbba .Llx ;};if _gbba .Lly > _gbba .Ury {_gbba .Lly ,_gbba .Ury =_gbba .Ury ,_gbba .Lly ;};};func (_geec *PdfReader )newPdfActionSoundFromDict (_cda *_gcb .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_cda .Get ("\u0053\u006f\u0075n\u0064"),Volume :_cda .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_cda .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_cda .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_cda .Get ("\u004d\u0069\u0078")},nil ;};func _dgddd (_fgcad *_gcb .PdfObjectDictionary ,_eegg *fontCommon ,_aede _dee .TextEncoder )(*pdfFontSimple ,error ){_fbca :=_fggdf (_eegg );_fbca ._dfece =_aede ;if _aede ==nil {_dffc :=_fgcad .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _dffc ==nil {_dffc =_gcb .MakeInteger (0);};_fbca .FirstChar =_dffc ;_cabac ,_daagb :=_gcb .GetIntVal (_dffc );if !_daagb {_fa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_dffc );return nil ,_gcb .ErrTypeError ;};_gebdf :=_dee .CharCode (_cabac );_dffc =_fgcad .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _dffc ==nil {_dffc =_gcb .MakeInteger (255);};_fbca .LastChar =_dffc ;_cabac ,_daagb =_gcb .GetIntVal (_dffc );if !_daagb {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_dffc );return nil ,_gcb .ErrTypeError ;};_ggaf :=_dee .CharCode (_cabac );_fbca ._egbc =make (map[_dee .CharCode ]float64 );_dffc =_fgcad .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _dffc !=nil {_fbca .Widths =_dffc ;_bbcdg ,_dbecf :=_gcb .GetArray (_dffc );if !_dbecf {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_dffc );return nil ,_gcb .ErrTypeError ;};_aadd ,_cbgfbc :=_bbcdg .ToFloat64Array ();if _cbgfbc !=nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");return nil ,_cbgfbc ;};if len (_aadd )!=int (_ggaf -_gebdf +1){_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_ggaf -_gebdf +1,len (_aadd ));return nil ,_gcb .ErrRangeError ;};for _cbece ,_daef :=range _aadd {_fbca ._egbc [_gebdf +_dee .CharCode (_cbece )]=_daef ;};};};_fbca .Encoding =_gcb .TraceToDirectObject (_fgcad .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _fbca ,nil ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _gcb .PdfObject ;IsMap _gcb .PdfObject ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_cadga *PdfShadingType4 )ToPdfObject ()_gcb .PdfObject {_cadga .PdfShading .ToPdfObject ();_gffgf ,_geeed :=_cadga .getShadingDict ();if _geeed !=nil {_fa .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");return nil ;};if _cadga .BitsPerCoordinate !=nil {_gffgf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_cadga .BitsPerCoordinate );};if _cadga .BitsPerComponent !=nil {_gffgf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_cadga .BitsPerComponent );};if _cadga .BitsPerFlag !=nil {_gffgf .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_cadga .BitsPerFlag );};if _cadga .Decode !=nil {_gffgf .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_cadga .Decode );};if _cadga .Function !=nil {if len (_cadga .Function )==1{_gffgf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_cadga .Function [0].ToPdfObject ());}else {_befeda :=_gcb .MakeArray ();for _ ,_bcae :=range _cadga .Function {_befeda .Append (_bcae .ToPdfObject ());};_gffgf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_befeda );};};return _cadga ._bgcgd ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_dgfa *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_ebaa :=_cg .NewReader (img .getBase ());_adag :=_efe .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_faed :=_cg .NewWriter (_adag );_ebgc :=_f .Pow (2,float64 (img .BitsPerComponent ))-1;_cfaf :=make ([]uint32 ,3);var (_afgb uint32 ;ANorm ,X ,Y ,Z ,_fecd ,_fddf ,_dged float64 ;_effdb error ;);for {_afgb ,_effdb =_ebaa .ReadSample ();if _effdb ==_dfb .EOF {break ;}else if _effdb !=nil {return img ,_effdb ;};ANorm =float64 (_afgb )/_ebgc ;X =_dgfa .WhitePoint [0]*_f .Pow (ANorm ,_dgfa .Gamma );Y =_dgfa .WhitePoint [1]*_f .Pow (ANorm ,_dgfa .Gamma );Z =_dgfa .WhitePoint [2]*_f .Pow (ANorm ,_dgfa .Gamma );_fecd =3.240479*X +-1.537150*Y +-0.498535*Z ;_fddf =-0.969256*X +1.875992*Y +0.041556*Z ;_dged =0.055648*X +-0.204043*Y +1.057311*Z ;_fecd =_f .Min (_f .Max (_fecd ,0),1.0);_fddf =_f .Min (_f .Max (_fddf ,0),1.0);_dged =_f .Min (_f .Max (_dged ,0),1.0);_cfaf [0]=uint32 (_fecd *_ebgc );_cfaf [1]=uint32 (_fddf *_ebgc );_cfaf [2]=uint32 (_dged *_ebgc );if _effdb =_faed .WriteSamples (_cfaf );_effdb !=nil {return img ,_effdb ;};};return _dddf (&_adag ),nil ;};func _aeag (_dadd *_gcb .PdfObjectDictionary )(*PdfFieldButton ,error ){_bggf :=&PdfFieldButton {};_bggf .Opt ,_ =_gcb .GetArray (_dadd .Get ("\u004f\u0070\u0074"));return _bggf ,nil ;};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _gcb .PdfObject ;Movie _gcb .PdfObject ;A _gcb .PdfObject ;};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_ebfc *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_acfbd :=vals [0];if _acfbd < 0.0||_acfbd > 1.0{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fedd :=vals [1];if _fedd < 0.0||_fedd > 1.0{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aead :=vals [2];if _aead < 0.0||_aead > 1.0{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cgcb :=vals [3];if _cgcb < 0.0||_cgcb > 1.0{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecda :=NewPdfColorDeviceCMYK (_acfbd ,_fedd ,_aead ,_cgcb );return _ecda ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cgbgf *PdfAnnotationPrinterMark )ToPdfObject ()_gcb .PdfObject {_cgbgf .PdfAnnotation .ToPdfObject ();_abcb :=_cgbgf ._dgc ;_edg :=_abcb .PdfObject .(*_gcb .PdfObjectDictionary );_edg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));_edg .SetIfNotNil ("\u004d\u004e",_cgbgf .MN );return _abcb ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_dbcc *OutlineItem )Insert (index uint ,item *OutlineItem ){_daabg :=uint (len (_dbcc .Entries ));if index > _daabg {index =_daabg ;};_dbcc .Entries =append (_dbcc .Entries [:index ],append ([]*OutlineItem {item },_dbcc .Entries [index :]...)...);};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_edccd *Image )ToJBIG2Image ()(*_gcb .JBIG2Image ,error ){_fbfdf ,_agcfd :=_edccd .ToGoImage ();if _agcfd !=nil {return nil ,_agcfd ;};return _gcb .GoImageToJBIG2 (_fbfdf ,_gcb .JB2ImageAutoThreshold );};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_ggbe *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_fa .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_fa .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );_fa .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_fa .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );_agdf ,_ecgb :=_efe .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._gaecf ,img ._gdeafd );if _ecgb !=nil {return Image {},_ecgb ;};_ebac ,_ecgb :=_efe .NRGBAConverter .Convert (_agdf );if _ecgb !=nil {return Image {},_ecgb ;};return _dddf (_ebac .Base ()),nil ;};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_eebgc *PdfPageResources )GenerateXObjectName ()_gcb .PdfObjectName {_dafef :=1;for {_adefa :=_gcb .MakeName (_e .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_dafef ));if !_eebgc .HasXObjectByName (*_adefa ){return *_adefa ;};_dafef ++;};};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_cacdf *PdfReader )GetIndirectObjectByNumber (number int )(_gcb .PdfObject ,error ){_aaed ,_gcfgb :=_cacdf ._efeb .LookupByNumber (number );return _aaed ,_gcfgb ;};func (_ecbaf *PdfWriter )updateObjectNumbers (){_gbbfe :=_ecbaf .ObjNumOffset ;_fgdea :=0;for _ ,_fecfg :=range _ecbaf ._dfeee {_febe :=int64 (_fgdea +1+_gbbfe );_cgec :=true ;if _ecbaf ._cbaca {if _dgeca ,_gacaa :=_ecbaf ._cdbgf [_fecfg ];_gacaa {_febe =_dgeca ;_cgec =false ;};};switch _ebebc :=_fecfg .(type ){case *_gcb .PdfIndirectObject :_ebebc .ObjectNumber =_febe ;_ebebc .GenerationNumber =0;case *_gcb .PdfObjectStream :_ebebc .ObjectNumber =_febe ;_ebebc .GenerationNumber =0;case *_gcb .PdfObjectStreams :_ebebc .ObjectNumber =_febe ;_ebebc .GenerationNumber =0;default:_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_ebebc );continue ;};if _cgec {_fgdea ++;};};_cfff :=func (_ebdeg _gcb .PdfObject )int64 {switch _fefef :=_ebdeg .(type ){case *_gcb .PdfIndirectObject :return _fefef .ObjectNumber ;case *_gcb .PdfObjectStream :return _fefef .ObjectNumber ;case *_gcb .PdfObjectStreams :return _fefef .ObjectNumber ;};return 0;};_de .SliceStable (_ecbaf ._dfeee ,func (_bbgdbb ,_afaa int )bool {return _cfff (_ecbaf ._dfeee [_bbgdbb ])< _cfff (_ecbaf ._dfeee [_afaa ])});};const (_bbdaf =0x00001;_cgeg =0x00002;_bbbd =0x00004;_dacfa =0x00008;_abgd =0x00020;_fdgbg =0x00040;_gcab =0x10000;_cdegd =0x20000;_gacfc =0x40000;);

// Height returns the height of `rect`.
func (_fcfdae *PdfRectangle )Height ()float64 {return _f .Abs (_fcfdae .Ury -_fcfdae .Lly )};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_aeaa *PdfPage )AppendContentStream (contentStr string )error {_bgadf ,_adccg :=_aeaa .GetContentStreams ();if _adccg !=nil {return _adccg ;};if len (_bgadf )==0{_bgadf =[]string {contentStr };return _aeaa .SetContentStreams (_bgadf ,_gcb .NewFlateEncoder ());};var _ggbeaa _ga .Buffer ;_ggbeaa .WriteString (_bgadf [len (_bgadf )-1]);_ggbeaa .WriteString ("\u000a");_ggbeaa .WriteString (contentStr );_bgadf [len (_bgadf )-1]=_ggbeaa .String ();return _aeaa .SetContentStreams (_bgadf ,_gcb .NewFlateEncoder ());};func _dafga (_eagb *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_eagb }};const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _gcb .PdfObject ;T3DV _gcb .PdfObject ;T3DA _gcb .PdfObject ;T3DI _gcb .PdfObject ;T3DB _gcb .PdfObject ;};func _aeba (_gdcb *_gcb .PdfObjectDictionary ,_gdecb *fontCommon )(*pdfCIDFontType0 ,error ){if _gdecb ._caaad !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_fa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_gdecb );return nil ,_gcb .ErrRangeError ;};_dbfc :=_cegeab (_gdecb );_abbac ,_bgeg :=_gcb .GetDict (_gdcb .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_bgeg {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_gdecb );return nil ,ErrRequiredAttributeMissing ;};_dbfc .CIDSystemInfo =_abbac ;_dbfc .DW =_gdcb .Get ("\u0044\u0057");_dbfc .W =_gdcb .Get ("\u0057");_dbfc .DW2 =_gdcb .Get ("\u0044\u0057\u0032");_dbfc .W2 =_gdcb .Get ("\u0057\u0032");_dbfc ._ggfdb =1000.0;if _cdac ,_cabb :=_gcb .GetNumberAsFloat (_dbfc .DW );_cabb ==nil {_dbfc ._ggfdb =_cdac ;};_bgbcg ,_fbfff :=_cgcg (_dbfc .W );if _fbfff !=nil {return nil ,_fbfff ;};if _bgbcg ==nil {_bgbcg =map[_dee .CharCode ]float64 {};};_dbfc ._bcgge =_bgbcg ;return _dbfc ,nil ;};func (_gbee *PdfReader )newPdfAnnotationSoundFromDict (_aefc *_gcb .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_bcf :=PdfAnnotationSound {};_efbb ,_dcf :=_gbee .newPdfAnnotationMarkupFromDict (_aefc );if _dcf !=nil {return nil ,_dcf ;};_bcf .PdfAnnotationMarkup =_efbb ;_bcf .Name =_aefc .Get ("\u004e\u0061\u006d\u0065");_bcf .Sound =_aefc .Get ("\u0053\u006f\u0075n\u0064");return &_bcf ,nil ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<25);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);FieldFlagCommitOnSelChange FieldFlag =(1<<26););

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_bdfdc *PdfFont )ToUnicode ()string {if _bdfdc .baseFields ()._gccbc ==nil {return "";};return _bdfdc .baseFields ()._gccbc .Name ();};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _dfb .ReadSeeker )(*PdfReader ,error ){_eeac :=&PdfReader {_efddb :rs ,_bacb :map[_gcb .PdfObject ]struct{}{},_ccdd :_ecgeb (),_dddfd :false };_dceag ,_agbda :=_gcb .NewParser (rs );if _agbda !=nil {return nil ,_agbda ;};_eeac ._efeb =_dceag ;_efdeb ,_agbda :=_eeac .IsEncrypted ();if _agbda !=nil {return nil ,_agbda ;};if !_efdeb {_agbda =_eeac .loadStructure ();if _agbda !=nil {return nil ,_agbda ;};};return _eeac ,nil ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_ffce *PdfReader )Inspect ()(map[string ]int ,error ){return _ffce ._efeb .Inspect ()};

// Encoder returns the font's text encoder.
func (_bfdfb pdfFontType0 )Encoder ()_dee .TextEncoder {return _bfdfb ._bggef };

// ToPdfObject implements interface PdfModel.
func (_cgf *PdfAnnotationHighlight )ToPdfObject ()_gcb .PdfObject {_cgf .PdfAnnotation .ToPdfObject ();_fggd :=_cgf ._dgc ;_gege :=_fggd .PdfObject .(*_gcb .PdfObjectDictionary );_cgf .PdfAnnotationMarkup .appendToPdfDictionary (_gege );_gege .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));_gege .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cgf .QuadPoints );return _fggd ;};

// ToPdfObject converts date to a PDF string object.
func (_ggebdg *PdfDate )ToPdfObject ()_gcb .PdfObject {_acedf :=_e .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_ggebdg ._bgfd ,_ggebdg ._daeeed ,_ggebdg ._bbcdc ,_ggebdg ._feecf ,_ggebdg ._fcad ,_ggebdg ._efabe ,_ggebdg ._ddead ,_ggebdg ._gaafg ,_ggebdg ._bgdfc );return _gcb .MakeString (_acedf );};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_fada *_gcb .PdfObjectDictionary ;_cfdf *_gcb .PdfIndirectObject ;};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_edd :=NewPdfAnnotation ();_ebeg :=&PdfAnnotationFileAttachment {};_ebeg .PdfAnnotation =_edd ;_ebeg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_edd .SetContext (_ebeg );return _ebeg ;};

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_fdbg *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};func (_gbgf *PdfAcroForm )filteredFields (_aaee FieldFilterFunc ,_baede bool )[]*PdfField {if _gbgf ==nil {return nil ;};return _gcdb (_gbgf .Fields ,_aaee ,_baede );};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _gcb .PdfObject ;};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _gcb .PdfObject ;Flags _gcb .PdfObject ;};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_feef *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_feef .GetNumComponents (){return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cafe ,_ddafa :=_feef .TintTransform .Evaluate (vals );if _ddafa !=nil {return nil ,_ddafa ;};_decca ,_ddafa :=_feef .AlternateSpace .ColorFromFloats (_cafe );if _ddafa !=nil {return nil ,_ddafa ;};return _decca ,nil ;};

// String returns a string that describes `font`.
func (_gdga *PdfFont )String ()string {_beece :="";if _gdga ._ffag .Encoder ()!=nil {_beece =_gdga ._ffag .Encoder ().String ();};return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_gdga ._ffag ,_gdga .baseFields ().coreString (),_beece );};

// SetName sets the `Name` field of the signature.
func (_egaba *PdfSignature )SetName (name string ){_egaba .Name =_gcb .MakeString (name )};

// ToPdfObject implements interface PdfModel.
func (_edda *PdfAnnotationCaret )ToPdfObject ()_gcb .PdfObject {_edda .PdfAnnotation .ToPdfObject ();_facg :=_edda ._dgc ;_dfg :=_facg .PdfObject .(*_gcb .PdfObjectDictionary );_edda .PdfAnnotationMarkup .appendToPdfDictionary (_dfg );_dfg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0043\u0061\u0072e\u0074"));_dfg .SetIfNotNil ("\u0052\u0044",_edda .RD );_dfg .SetIfNotNil ("\u0053\u0079",_edda .Sy );return _facg ;};func (_gdff *PdfReader )newPdfActionSubmitFormFromDict (_dag *_gcb .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_dbb ,_fcd :=_eeb (_dag .Get ("\u0046"));if _fcd !=nil {return nil ,_fcd ;};return &PdfActionSubmitForm {F :_dbb ,Fields :_dag .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_dag .Get ("\u0046\u006c\u0061g\u0073")},nil ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_abba *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_faceb ,_egab :=color .(*PdfColorCalGray );if !_egab {_fa .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");return nil ,_fb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_faceb .Val ();X :=_abba .WhitePoint [0]*_f .Pow (ANorm ,_abba .Gamma );Y :=_abba .WhitePoint [1]*_f .Pow (ANorm ,_abba .Gamma );Z :=_abba .WhitePoint [2]*_f .Pow (ANorm ,_abba .Gamma );_bgdbe :=3.240479*X +-1.537150*Y +-0.498535*Z ;_dfgge :=-0.969256*X +1.875992*Y +0.041556*Z ;_bcge :=0.055648*X +-0.204043*Y +1.057311*Z ;_bgdbe =_f .Min (_f .Max (_bgdbe ,0),1.0);_dfgge =_f .Min (_f .Max (_dfgge ,0),1.0);_bcge =_f .Min (_f .Max (_bcge ,0),1.0);return NewPdfColorDeviceRGB (_bgdbe ,_dfgge ,_bcge ),nil ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_begda *PdfPageResources )GetXObjectByName (keyName _gcb .PdfObjectName )(*_gcb .PdfObjectStream ,XObjectType ){if _begda .XObject ==nil {return nil ,XObjectTypeUndefined ;};_bgdddb ,_ccfcg :=_gcb .TraceToDirectObject (_begda .XObject ).(*_gcb .PdfObjectDictionary );if !_ccfcg {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_gcb .TraceToDirectObject (_begda .XObject ));return nil ,XObjectTypeUndefined ;};if _dgae :=_bgdddb .Get (keyName );_dgae !=nil {_dabdd ,_eefgbg :=_gcb .GetStream (_dgae );if !_eefgbg {_fa .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_dgae );return nil ,XObjectTypeUndefined ;};_ebggf :=_dabdd .PdfObjectDictionary ;_fcdd ,_eefgbg :=_gcb .TraceToDirectObject (_ebggf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_gcb .PdfObjectName );if !_eefgbg {_fa .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_ebggf .String ());return nil ,XObjectTypeUndefined ;};if *_fcdd =="\u0049\u006d\u0061g\u0065"{return _dabdd ,XObjectTypeImage ;}else if *_fcdd =="\u0046\u006f\u0072\u006d"{return _dabdd ,XObjectTypeForm ;}else if *_fcdd =="\u0050\u0053"{return _dabdd ,XObjectTypePS ;}else {_fa .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_fcdd );return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_fbbagf *PdfShading )GetContainingPdfObject ()_gcb .PdfObject {return _fbbagf ._bgcgd };

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_dee .SimpleEncoder ,error ){_agbdd ,_deaa :=_aadc (basefont );if _deaa !=nil {return nil ,nil ,_deaa ;};_fgebb ,_gfac :=_agbdd .Encoder ().(_dee .SimpleEncoder );if !_gfac {return nil ,nil ,_e .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_agbdd .Encoder ());};_decga :=make (map[rune ]_dee .GlyphName );for _acffd :=range alphabet {if _ ,_fgee :=_fgebb .RuneToCharcode (_acffd );!_fgee {_ ,_fcdc :=_agbdd ._cbbab [_acffd ];if !_fcdc {_fa .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_acffd ,_acffd );continue ;};_gddc ,_fcdc :=_dee .RuneToGlyph (_acffd );if !_fcdc {_fa .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_acffd ,_acffd );continue ;};if len (_decga )>=255{return nil ,nil ,_fb .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");};_decga [_acffd ]=_gddc ;};};var (_ffgfg []_dee .CharCode ;_abeg []_dee .CharCode ;);for _dgca :=_dee .CharCode (1);_dgca <=0xff;_dgca ++{_fgae ,_ebefg :=_fgebb .CharcodeToRune (_dgca );if !_ebefg {_ffgfg =append (_ffgfg ,_dgca );continue ;};if _ ,_ebefg =alphabet [_fgae ];!_ebefg {_abeg =append (_abeg ,_dgca );};};_caaa :=append (_ffgfg ,_abeg ...);if len (_caaa )< len (_decga ){return nil ,nil ,_e .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_decga ),len (_caaa ));};_edba :=make ([]rune ,0,len (_decga ));for _bcgf :=range _decga {_edba =append (_edba ,_bcgf );};_de .Slice (_edba ,func (_efdbb ,_gebbg int )bool {return _edba [_efdbb ]< _edba [_gebbg ]});_dbbb :=make (map[_dee .CharCode ]_dee .GlyphName ,len (_edba ));for _ ,_bgbec :=range _edba {_dage :=_caaa [0];_caaa =_caaa [1:];_dbbb [_dage ]=_decga [_bgbec ];};_fgebb =_dee .ApplyDifferences (_fgebb ,_dbbb );_agbdd .SetEncoder (_fgebb );return &PdfFont {_ffag :&_agbdd },_fgebb ,nil ;};

// SetLocation sets the `Location` field of the signature.
func (_cgag *PdfSignature )SetLocation (location string ){_cgag .Location =_gcb .MakeString (location )};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _gcb .PdfObject )(*PdfFont ,error ){return _dafa (fontObj ,true )};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_bfdd *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_ccbfe pdfFontSimple )GetCharMetrics (code _dee .CharCode )(_aa .CharMetrics ,bool ){if _cead ,_deaaf :=_ccbfe ._egbc [code ];_deaaf {return _aa .CharMetrics {Wx :_cead },true ;};if _aa .IsStdFont (_aa .StdFontName (_ccbfe ._eefc )){return _aa .CharMetrics {Wx :250},true ;};return _aa .CharMetrics {},false ;};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _gcb .PdfObject ;Volume _gcb .PdfObject ;Synchronous _gcb .PdfObject ;Repeat _gcb .PdfObject ;Mix _gcb .PdfObject ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_aaaga *Image )SetSamples (samples []uint32 ){if _aaaga .BitsPerComponent < 8{samples =_aaaga .samplesAddPadding (samples );};_ddae :=_cg .ResampleUint32 (samples ,int (_aaaga .BitsPerComponent ),8);_gfdcb :=make ([]byte ,len (_ddae ));for _efgc ,_fffga :=range _ddae {_gfdcb [_efgc ]=byte (_fffga );};_aaaga .Data =_gfdcb ;};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_bfgga .Lock ();defer _bfgga .Unlock ();_bgdcc =author };

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_gcb .PdfObjectStream ;Data []byte ;_adbe *_gcb .PdfIndirectObject ;_fbfd *_gcb .PdfObjectStream ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _gcb .PdfObject ;LE _gcb .PdfObject ;BS _gcb .PdfObject ;IC _gcb .PdfObject ;BE _gcb .PdfObject ;IT _gcb .PdfObject ;Measure _gcb .PdfObject ;};

// Register registers (caches) a model to primitive object relationship.
func (_ggdga *modelManager )Register (primitive _gcb .PdfObject ,model PdfModel ){_ggdga ._aeaeg [model ]=primitive ;_ggdga ._cfad [primitive ]=model ;};

// ToPdfObject implements interface PdfModel.
func (_cdef *PdfAnnotationSquiggly )ToPdfObject ()_gcb .PdfObject {_cdef .PdfAnnotation .ToPdfObject ();_aacb :=_cdef ._dgc ;_gdbe :=_aacb .PdfObject .(*_gcb .PdfObjectDictionary );_cdef .PdfAnnotationMarkup .appendToPdfDictionary (_gdbe );_gdbe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));_gdbe .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cdef .QuadPoints );return _aacb ;};

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_gdaeb *PdfColorspaceSpecialIndexed )ToPdfObject ()_gcb .PdfObject {_cfeb :=_gcb .MakeArray (_gcb .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_cfeb .Append (_gdaeb .Base .ToPdfObject ());_cfeb .Append (_gcb .MakeInteger (int64 (_gdaeb .HiVal )));_cfeb .Append (_gdaeb .Lookup );if _gdaeb ._abad !=nil {_gdaeb ._abad .PdfObject =_cfeb ;return _gdaeb ._abad ;};return _cfeb ;};

// GetContentStream returns the XObject Form's content stream.
func (_ebfga *XObjectForm )GetContentStream ()([]byte ,error ){_efgb ,_dbdab :=_gcb .DecodeStream (_ebfga ._cfadb );if _dbdab !=nil {return nil ,_dbdab ;};return _efgb ,nil ;};func (_eaad *LTV )getCerts (_ccfef []*_g .Certificate )([][]byte ,error ){_eaaac :=make ([][]byte ,0,len (_ccfef ));for _ ,_eebc :=range _ccfef {_eaaac =append (_eaaac ,_eebc .Raw );};return _eaaac ,nil ;};

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};type pdfFontType0 struct{fontCommon ;_dccc *_gcb .PdfIndirectObject ;_bggef _dee .TextEncoder ;Encoding _gcb .PdfObject ;DescendantFont *PdfFont ;_gfecec *_ad .CMap ;};func (_fbggd *PdfWriter )hasObject (_dfgf _gcb .PdfObject )bool {_ ,_egffad :=_fbggd ._cbgdbf [_dfgf ];return _egffad ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_agge *PdfAnnotation )GetContext ()PdfModel {if _agge ==nil {return nil ;};return _agge ._gbad ;};

// ToInteger convert to an integer format.
func (_faeb *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_fbda :=_f .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_fbda *_faeb .R ()),uint32 (_fbda *_faeb .G ()),uint32 (_fbda *_faeb .B ())};};func (_gegd *PdfAppender )mergeResources (_ggb ,_fgaa _gcb .PdfObject ,_dbfba map[_gcb .PdfObjectName ]_gcb .PdfObjectName )_gcb .PdfObject {if _fgaa ==nil &&_ggb ==nil {return nil ;};if _fgaa ==nil {return _ggb ;};_cbdd ,_ecfb :=_gcb .GetDict (_fgaa );if !_ecfb {return _ggb ;};if _ggb ==nil {_eaec :=_gcb .MakeDict ();_eaec .Merge (_cbdd );return _fgaa ;};_dccb ,_ecfb :=_gcb .GetDict (_ggb );if !_ecfb {_fa .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");_dccb =_gcb .MakeDict ();};for _ ,_abd :=range _cbdd .Keys (){if _gadca ,_cgde :=_dbfba [_abd ];_cgde {_dccb .Set (_gadca ,_cbdd .Get (_abd ));}else {_dccb .Set (_abd ,_cbdd .Get (_abd ));};};return _dccb ;};func (_ecge PdfFont )actualFont ()pdfFont {if _ecge ._ffag ==nil {_fa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_ecge );};return _ecge ._ffag ;};

// ToPdfObject implements interface PdfModel.
func (_afga *PdfAnnotationCircle )ToPdfObject ()_gcb .PdfObject {_afga .PdfAnnotation .ToPdfObject ();_ebab :=_afga ._dgc ;_gdge :=_ebab .PdfObject .(*_gcb .PdfObjectDictionary );_afga .PdfAnnotationMarkup .appendToPdfDictionary (_gdge );_gdge .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));_gdge .SetIfNotNil ("\u0042\u0053",_afga .BS );_gdge .SetIfNotNil ("\u0049\u0043",_afga .IC );_gdge .SetIfNotNil ("\u0042\u0045",_afga .BE );_gdge .SetIfNotNil ("\u0052\u0044",_afga .RD );return _ebab ;};

// ToPdfObject returns the PDF representation of the page resources.
func (_cgcd *PdfPageResources )ToPdfObject ()_gcb .PdfObject {_effdf :=_cgcd ._ededf ;_effdf .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_cgcd .ExtGState );if _cgcd ._dabea !=nil {_cgcd .ColorSpace =_cgcd ._dabea .ToPdfObject ();};_effdf .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_cgcd .ColorSpace );_effdf .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_cgcd .Pattern );_effdf .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_cgcd .Shading );_effdf .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_cgcd .XObject );_effdf .SetIfNotNil ("\u0046\u006f\u006e\u0074",_cgcd .Font );_effdf .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_cgcd .ProcSet );_effdf .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_cgcd .Properties );return _effdf ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_fgfd *PdfAppender )UpdatePage (page *PdfPage ){_fgfd .updateObjectsDeep (page .ToPdfObject (),nil )};func (_accg *PdfReader )newPdfAnnotationHighlightFromDict (_accf *_gcb .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_ffe :=PdfAnnotationHighlight {};_ffcd ,_daeee :=_accg .newPdfAnnotationMarkupFromDict (_accf );if _daeee !=nil {return nil ,_daeee ;};_ffe .PdfAnnotationMarkup =_ffcd ;_ffe .QuadPoints =_accf .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_ffe ,nil ;};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_fedca *PdfWriter )SetDocInfo (info *PdfInfo ){if _fedca .hasObject (_fedca ._ebag ){delete (_fedca ._cbgdbf ,_fedca ._ebag );delete (_fedca ._ffdfe ,_fedca ._ebag );for _adcca ,_ffcdf :=range _fedca ._dfeee {if _ffcdf ==_fedca ._ebag {copy (_fedca ._dfeee [_adcca :],_fedca ._dfeee [_adcca +1:]);_fedca ._dfeee [len (_fedca ._dfeee )-1]=nil ;_fedca ._dfeee =_fedca ._dfeee [:len (_fedca ._dfeee )-1];break ;};};};_bgcee :=_gcb .PdfIndirectObject {};_bgcee .PdfObject =info .ToPdfObject ();_fedca ._ebag =&_bgcee ;_fedca .addObject (&_bgcee );};func _eeddb (_cadgg *_gcb .PdfObjectArray )(float64 ,error ){_aafbd ,_ddbdf :=_cadgg .ToFloat64Array ();if _ddbdf !=nil {_fa .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cadgg ,_ddbdf );};switch len (_aafbd ){case 1:return _aafbd [0],nil ;case 3:_effee :=PdfColorspaceDeviceRGB {};_ffcg ,_gfaefa :=_effee .ColorFromFloats (_aafbd );if _gfaefa !=nil {return 0.0,_gfaefa ;};return _ffcg .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_beab :=PdfColorspaceDeviceCMYK {};_afegd ,_gcff :=_beab .ColorFromFloats (_aafbd );if _gcff !=nil {return 0.0,_gcff ;};_dfcacf ,_gcff :=_beab .ColorToRGB (_afegd .(*PdfColorDeviceCMYK ));if _gcff !=nil {return 0.0,_gcff ;};return _dfcacf .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_ddbdf =_fb .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");_fa .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_cadgg ,_ddbdf );return 0.0,_ddbdf ;};

// GetPdfInfo returns the PDF info dictionary.
func (_agegb *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_cbaac :=PdfInfo {};_bcacg ,_aegga :=_agegb .GetTrailer ();if _aegga !=nil {return nil ,_aegga ;};var _eccbc *_gcb .PdfObjectDictionary ;_bfdeb :=_bcacg .Get ("\u0049\u006e\u0066\u006f");switch _bfdb :=_bfdeb .(type ){case *_gcb .PdfObjectReference :_accdb :=_bfdb ;_bfdeb ,_aegga =_agegb .GetIndirectObjectByNumber (int (_accdb .ObjectNumber ));_bfdeb =_gcb .TraceToDirectObject (_bfdeb );if _aegga !=nil {return nil ,_aegga ;};_eccbc ,_ =_bfdeb .(*_gcb .PdfObjectDictionary );case *_gcb .PdfObjectDictionary :_eccbc =_bfdb ;};if _eccbc ==nil {return nil ,_fb .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_cbaac .Title ,_ =_gcb .GetString (_eccbc .Get ("\u0054\u0069\u0074l\u0065"));_cbaac .Author ,_ =_gcb .GetString (_eccbc .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));_cbaac .Subject ,_ =_gcb .GetString (_eccbc .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));_cbaac .Keywords ,_ =_gcb .GetString (_eccbc .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));_cbaac .Creator ,_ =_gcb .GetString (_eccbc .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));_cbaac .Producer ,_ =_gcb .GetString (_eccbc .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));_cbaac .Trapped ,_ =_gcb .GetName (_eccbc .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));if _ecdg ,_bgaec :=_eccbc .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065").(*_gcb .PdfObjectString );_bgaec {_fcedc ,_aabc :=NewPdfDate (_ecdg .String ());if _aabc !=nil {return nil ,_aabc ;};_cbaac .CreationDate =&_fcedc ;};if _cabeg ,_ebgf :=_eccbc .Get ("\u004do\u0064\u0044\u0061\u0074\u0065").(*_gcb .PdfObjectString );_ebgf {_efefe ,_cbcfa :=NewPdfDate (_cabeg .String ());if _cbcfa !=nil {return nil ,_cbcfa ;};_cbaac .ModifiedDate =&_efefe ;};return &_cbaac ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bgf *PdfActionGoTo )ToPdfObject ()_gcb .PdfObject {_bgf .PdfAction .ToPdfObject ();_fe :=_bgf ._gg ;_gcc :=_fe .PdfObject .(*_gcb .PdfObjectDictionary );_gcc .SetIfNotNil ("\u0053",_gcb .MakeName (string (ActionTypeGoTo )));_gcc .SetIfNotNil ("\u0044",_bgf .D );return _fe ;};func (_aff *PdfReader )newPdfAnnotationPrinterMarkFromDict (_fbff *_gcb .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_fbge :=PdfAnnotationPrinterMark {};_fbge .MN =_fbff .Get ("\u004d\u004e");return &_fbge ,nil ;};func (_dbd *PdfReader )newPdfActionGotoEFromDict (_eda *_gcb .PdfObjectDictionary )(*PdfActionGoToE ,error ){_dcda ,_ega :=_eeb (_eda .Get ("\u0046"));if _ega !=nil {return nil ,_ega ;};return &PdfActionGoToE {D :_eda .Get ("\u0044"),NewWindow :_eda .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_eda .Get ("\u0054"),F :_dcda },nil ;};

// StdFontName represents name of a standard font.
type StdFontName =_aa .StdFontName ;

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_caaf :=&PdfColorspaceLab {};_caaf .BlackPoint =[]float64 {0.0,0.0,0.0};_caaf .Range =[]float64 {-100,100,-100,100};return _caaf ;};type pdfCIDFontType2 struct{fontCommon ;_bbfcb *_gcb .PdfIndirectObject ;_ebbdf _dee .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_gcb .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _gcb .PdfObject ;W _gcb .PdfObject ;DW2 _gcb .PdfObject ;W2 _gcb .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _gcb .PdfObject ;_egga map[_dee .CharCode ]float64 ;_fgeg float64 ;_efcf map[rune ]int ;};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_ffgg *PdfAcroForm )ToPdfObject ()_gcb .PdfObject {_gcfad :=_ffgg ._cbaa ;_addfe :=_gcfad .PdfObject .(*_gcb .PdfObjectDictionary );if _ffgg .Fields !=nil {_edfc :=_gcb .PdfObjectArray {};for _ ,_eafdg :=range *_ffgg .Fields {_ffeg :=_eafdg .GetContext ();if _ffeg !=nil {_edfc .Append (_ffeg .ToPdfObject ());}else {_edfc .Append (_eafdg .ToPdfObject ());};};_addfe .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_edfc );};if _ffgg .NeedAppearances !=nil {_addfe .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_ffgg .NeedAppearances );};if _ffgg .SigFlags !=nil {_addfe .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_ffgg .SigFlags );};if _ffgg .CO !=nil {_addfe .Set ("\u0043\u004f",_ffgg .CO );};if _ffgg .DR !=nil {_addfe .Set ("\u0044\u0052",_ffgg .DR .ToPdfObject ());};if _ffgg .DA !=nil {_addfe .Set ("\u0044\u0041",_ffgg .DA );};if _ffgg .Q !=nil {_addfe .Set ("\u0051",_ffgg .Q );};if _ffgg .XFA !=nil {_addfe .Set ("\u0058\u0046\u0041",_ffgg .XFA );};return _gcfad ;};func _gecad (_cgabb []*_gcb .PdfObjectStream )*_gcb .PdfObjectArray {if len (_cgabb )==0{return nil ;};_fdbf :=make ([]_gcb .PdfObject ,0,len (_cgabb ));for _ ,_fgcf :=range _cgabb {_fdbf =append (_fdbf ,_fgcf );};return _gcb .MakeArray (_fdbf ...);};

// ToPdfObject convert PdfInfo to pdf object.
func (_gdeae *PdfInfo )ToPdfObject ()_gcb .PdfObject {_eaaab :=_gcb .MakeDict ();_eaaab .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_gdeae .Title );_eaaab .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_gdeae .Author );_eaaab .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_gdeae .Subject );_eaaab .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_gdeae .Keywords );_eaaab .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_gdeae .Creator );_eaaab .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_gdeae .Producer );_eaaab .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_gdeae .Trapped );if _gdeae .CreationDate !=nil {_eaaab .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_gdeae .CreationDate .ToPdfObject ());};if _gdeae .ModifiedDate !=nil {_eaaab .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_gdeae .ModifiedDate .ToPdfObject ());};return _eaaab ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _gcb .PdfObject ;Name _gcb .PdfObject ;State _gcb .PdfObject ;StateModel _gcb .PdfObject ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// ToPdfObject returns the PDF representation of the function.
func (_edgga *PdfFunctionType0 )ToPdfObject ()_gcb .PdfObject {if _edgga ._gbcb ==nil {_edgga ._gbcb =&_gcb .PdfObjectStream {};};_fdee :=_gcb .MakeDict ();_fdee .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gcb .MakeInteger (0));_bfgg :=&_gcb .PdfObjectArray {};for _ ,_efeag :=range _edgga .Domain {_bfgg .Append (_gcb .MakeFloat (_efeag ));};_fdee .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_bfgg );_gdcbb :=&_gcb .PdfObjectArray {};for _ ,_bcdfb :=range _edgga .Range {_gdcbb .Append (_gcb .MakeFloat (_bcdfb ));};_fdee .Set ("\u0052\u0061\u006eg\u0065",_gdcbb );_cbeab :=&_gcb .PdfObjectArray {};for _ ,_dgdeg :=range _edgga .Size {_cbeab .Append (_gcb .MakeInteger (int64 (_dgdeg )));};_fdee .Set ("\u0053\u0069\u007a\u0065",_cbeab );_fdee .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_gcb .MakeInteger (int64 (_edgga .BitsPerSample )));if _edgga .Order !=1{_fdee .Set ("\u004f\u0072\u0064e\u0072",_gcb .MakeInteger (int64 (_edgga .Order )));};_fdee .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gcb .MakeInteger (int64 (len (_edgga ._ffdb ))));_edgga ._gbcb .Stream =_edgga ._ffdb ;_edgga ._gbcb .PdfObjectDictionary =_fdee ;return _edgga ._gbcb ;};

// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_abaa :=NewPdfAnnotation ();_efef :=&PdfAnnotationStamp {};_efef .PdfAnnotation =_abaa ;_efef .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abaa .SetContext (_efef );return _efef ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_afbfb *modelManager )GetModelFromPrimitive (primitive _gcb .PdfObject )PdfModel {model ,_ggaeb :=_afbfb ._cfad [primitive ];if !_ggaeb {return nil ;};return model ;};type pdfFont interface{_aa .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_gcb .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};func (_bdbbc *PdfReader )loadAnnotations (_afge _gcb .PdfObject )([]*PdfAnnotation ,error ){_gebdb ,_bebed :=_gcb .GetArray (_afge );if !_bebed {return nil ,_e .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");};var _bgfce []*PdfAnnotation ;for _ ,_egbcb :=range _gebdb .Elements (){_egbcb =_gcb .ResolveReference (_egbcb );if _ ,_afbca :=_egbcb .(*_gcb .PdfObjectNull );_afbca {continue ;};_eccd ,_fffc :=_egbcb .(*_gcb .PdfObjectDictionary );_eeaa ,_fbgg :=_egbcb .(*_gcb .PdfIndirectObject );if _fffc {_eeaa =&_gcb .PdfIndirectObject {};_eeaa .PdfObject =_eccd ;}else {if !_fbgg {return nil ,_e .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");};};_fagbg ,_aaaae :=_bdbbc .newPdfAnnotationFromIndirectObject (_eeaa );if _aaaae !=nil {return nil ,_aaaae ;};switch _ebdb :=_fagbg .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_ffbde :=range _bdbbc .AcroForm .AllFields (){if _ffbde ._gcf ==_ebdb .Parent {_ebdb ._fgb =_ffbde ;break ;};};};if _fagbg !=nil {_bgfce =append (_bgfce ,_fagbg );};};return _bgfce ,nil ;};

// ToPdfObject returns the PDF representation of the function.
func (_gdbaa *PdfFunctionType3 )ToPdfObject ()_gcb .PdfObject {_bbdae :=_gcb .MakeDict ();_bbdae .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_gcb .MakeInteger (3));_dddbg :=&_gcb .PdfObjectArray {};for _ ,_agcdf :=range _gdbaa .Domain {_dddbg .Append (_gcb .MakeFloat (_agcdf ));};_bbdae .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dddbg );if _gdbaa .Range !=nil {_eacaf :=&_gcb .PdfObjectArray {};for _ ,_cfgbg :=range _gdbaa .Range {_eacaf .Append (_gcb .MakeFloat (_cfgbg ));};_bbdae .Set ("\u0052\u0061\u006eg\u0065",_eacaf );};if _gdbaa .Functions !=nil {_abda :=&_gcb .PdfObjectArray {};for _ ,_bfcbb :=range _gdbaa .Functions {_abda .Append (_bfcbb .ToPdfObject ());};_bbdae .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_abda );};if _gdbaa .Bounds !=nil {_fgde :=&_gcb .PdfObjectArray {};for _ ,_fcdf :=range _gdbaa .Bounds {_fgde .Append (_gcb .MakeFloat (_fcdf ));};_bbdae .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_fgde );};if _gdbaa .Encode !=nil {_bagdg :=&_gcb .PdfObjectArray {};for _ ,_gfga :=range _gdbaa .Encode {_bagdg .Append (_gcb .MakeFloat (_gfga ));};_bbdae .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_bagdg );};if _gdbaa ._efdec !=nil {_gdbaa ._efdec .PdfObject =_bbdae ;return _gdbaa ._efdec ;};return _bbdae ;};func (_efagc SignatureValidationResult )String ()string {var _addce _ga .Buffer ;_addce .WriteString (_e .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_efagc .Name ));if _efagc .Date ._bgfd > 0{_addce .WriteString (_e .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_efagc .Date .ToGoTime ().String ()));}else {_addce .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_efagc .Reason )> 0{_addce .WriteString (_e .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_efagc .Reason ));}else {_addce .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");};if len (_efagc .Location )> 0{_addce .WriteString (_e .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_efagc .Location ));}else {_addce .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");};if len (_efagc .ContactInfo )> 0{_addce .WriteString (_e .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_efagc .ContactInfo ));}else {_addce .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");};_addce .WriteString (_e .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_efagc .Fields )));if _efagc .IsSigned {_addce .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");}else {_addce .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _efagc .IsVerified {_addce .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");}else {_addce .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _efagc .IsTrusted {_addce .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");}else {_addce .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_efagc .GeneralizedTime .IsZero (){_addce .WriteString (_e .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_efagc .GeneralizedTime .String ()));};return _addce .String ();};func (_dcfa *PdfReader )newPdfAnnotationProjectionFromDict (_ecb *_gcb .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_bgc :=&PdfAnnotationProjection {};_fdgg ,_eddc :=_dcfa .newPdfAnnotationMarkupFromDict (_ecb );if _eddc !=nil {return nil ,_eddc ;};_bgc .PdfAnnotationMarkup =_fdgg ;return _bgc ,nil ;};

// K returns the value of the key component of the color.
func (_cegbb *PdfColorDeviceCMYK )K ()float64 {return _cegbb [3]};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_ceefb :=&PdfColorspaceCalGray {};_ceefb .BlackPoint =[]float64 {0.0,0.0,0.0};_ceefb .Gamma =1;return _ceefb ;};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;func (_eggf *PdfFunctionType0 )processSamples ()error {_agdb :=_cg .ResampleBytes (_eggf ._ffdb ,_eggf .BitsPerSample );_eggf ._dacd =_agdb ;return nil ;};func (_cga *PdfReader )newPdfAnnotation3DFromDict (_gddg *_gcb .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_fcc :=PdfAnnotation3D {};_fcc .T3DD =_gddg .Get ("\u0033\u0044\u0044");_fcc .T3DV =_gddg .Get ("\u0033\u0044\u0056");_fcc .T3DA =_gddg .Get ("\u0033\u0044\u0041");_fcc .T3DI =_gddg .Get ("\u0033\u0044\u0049");_fcc .T3DB =_gddg .Get ("\u0033\u0044\u0042");return &_fcc ,nil ;};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_baf *PdfAnnotation )ToPdfObject ()_gcb .PdfObject {_ffgc :=_baf ._dgc ;_afdd :=_ffgc .PdfObject .(*_gcb .PdfObjectDictionary );_afdd .Clear ();_afdd .Set ("\u0054\u0079\u0070\u0065",_gcb .MakeName ("\u0041\u006e\u006eo\u0074"));_afdd .SetIfNotNil ("\u0052\u0065\u0063\u0074",_baf .Rect );_afdd .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_baf .Contents );_afdd .SetIfNotNil ("\u0050",_baf .P );_afdd .SetIfNotNil ("\u004e\u004d",_baf .NM );_afdd .SetIfNotNil ("\u004d",_baf .M );_afdd .SetIfNotNil ("\u0046",_baf .F );_afdd .SetIfNotNil ("\u0041\u0050",_baf .AP );_afdd .SetIfNotNil ("\u0041\u0053",_baf .AS );_afdd .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_baf .Border );_afdd .SetIfNotNil ("\u0043",_baf .C );_afdd .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_baf .StructParent );_afdd .SetIfNotNil ("\u004f\u0043",_baf .OC );return _ffgc ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_cebec *pdfCIDFontType2 )ToPdfObject ()_gcb .PdfObject {if _cebec ._bbfcb ==nil {_cebec ._bbfcb =&_gcb .PdfIndirectObject {};};_edce :=_cebec .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");_cebec ._bbfcb .PdfObject =_edce ;if _cebec .CIDSystemInfo !=nil {_edce .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_cebec .CIDSystemInfo );};if _cebec .DW !=nil {_edce .Set ("\u0044\u0057",_cebec .DW );};if _cebec .DW2 !=nil {_edce .Set ("\u0044\u0057\u0032",_cebec .DW2 );};if _cebec .W !=nil {_edce .Set ("\u0057",_cebec .W );};if _cebec .W2 !=nil {_edce .Set ("\u0057\u0032",_cebec .W2 );};if _cebec .CIDToGIDMap !=nil {_edce .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_cebec .CIDToGIDMap );};return _cebec ._bbfcb ;};

// Mask returns the uin32 bitmask for the specific flag.
func (_faad FieldFlag )Mask ()uint32 {return uint32 (_faad )};func (_bed *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";};

// Y returns the value of the yellow component of the color.
func (_eebf *PdfColorDeviceCMYK )Y ()float64 {return _eebf [2]};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_bdad *PdfPage )error ;};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_fbab *_gcb .PdfIndirectObject ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_fgfag *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_gcb .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abfd ,_gefa :=_gcb .GetNumbersAsFloat (objects );if _gefa !=nil {return nil ,_gefa ;};return _fgfag .ColorFromFloats (_abfd );};

// ImageToRGB convert an indexed image to RGB.
func (_fece *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_fece .Base .GetNumComponents ();if N < 1{return Image {},_e .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );};_bcee :=_efe .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._gaecf ,img ._gdeafd );_eagd :=_cg .NewReader (img .getBase ());_afa :=_cg .NewWriter (_bcee );var (_afda uint32 ;_bgbc int ;_cgeb error ;);for {_afda ,_cgeb =_eagd .ReadSample ();if _cgeb ==_dfb .EOF {break ;}else if _cgeb !=nil {return img ,_cgeb ;};_bgbc =int (_afda );_fa .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_bgbc ,N ,len (_fece ._eaca ));if (_bgbc +1)*N > len (_fece ._eaca ){_bgbc =len (_fece ._eaca )/N -1;_fa .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_bgbc );if _bgbc < 0{_fa .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");break ;};};for _fcbdc :=_bgbc *N ;_fcbdc < (_bgbc +1)*N ;_fcbdc ++{if _cgeb =_afa .WriteSample (uint32 (_fece ._eaca [_fcbdc ]));_cgeb !=nil {return img ,_cgeb ;};};};return _fece .Base .ImageToRGB (_dddf (&_bcee ));};func (_dfcbf *pdfFontType0 )baseFields ()*fontCommon {return &_dfcbf .fontCommon };

// Encoder returns the font's text encoder.
func (_ccgfg pdfCIDFontType2 )Encoder ()_dee .TextEncoder {return _ccgfg ._ebbdf };

// SetContext set the sub annotation (context).
func (_cbadf *PdfShading )SetContext (ctx PdfModel ){_cbadf ._febdg =ctx };func (_afadc *PdfPage )getParentResources ()(*PdfPageResources ,error ){_dfcgf :=_afadc .Parent ;for _dfcgf !=nil {_caeeg ,_egfbg :=_gcb .GetDict (_dfcgf );if !_egfbg {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_fb .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");};if _fecbe :=_caeeg .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_fecbe !=nil {_ebfbc ,_faccb :=_gcb .GetDict (_fecbe );if !_faccb {return nil ,_fb .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");};_fdadf ,_ebgcb :=NewPdfPageResourcesFromDict (_ebfbc );if _ebgcb !=nil {return nil ,_ebgcb ;};return _fdadf ,nil ;};_dfcgf =_caeeg .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};func (_fffa *DSS )add (_gfece *[]*_gcb .PdfObjectStream ,_aacda map[string ]*_gcb .PdfObjectStream ,_aefg [][]byte )([]*_gcb .PdfObjectStream ,error ){_adbgf :=make ([]*_gcb .PdfObjectStream ,0,len (_aefg ));for _ ,_ccbf :=range _aefg {_fcgf ,_gadcg :=_fadda (_ccbf );if _gadcg !=nil {return nil ,_gadcg ;};_egff ,_aaaed :=_aacda [string (_fcgf )];if !_aaaed {_egff ,_gadcg =_gcb .MakeStream (_ccbf ,_gcb .NewRawEncoder ());if _gadcg !=nil {return nil ,_gadcg ;};_aacda [string (_fcgf )]=_egff ;*_gfece =append (*_gfece ,_egff );};_adbgf =append (_adbgf ,_egff );};return _adbgf ,nil ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_acgdc *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _acgdc .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_daac *pdfCIDFontType0 )ToPdfObject ()_gcb .PdfObject {return _gcb .MakeNull ()};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_dbfb :=NewPdfAnnotation ();_gae :=&PdfAnnotationScreen {};_gae .PdfAnnotation =_dbfb ;_dbfb .SetContext (_gae );return _gae ;};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_bacc :=&PdfFilespec {};_bacc ._afgd =_gcb .MakeIndirectObject (_gcb .MakeDict ());return _bacc ;};func _dgaef (_bgdgd *PdfPage ){_fgaed :=_ccg .GetLicenseKey ();if _fgaed !=nil &&_fgaed .IsLicensed (){return ;};_dcca :=_gcb .PdfObjectName ("\u0055\u0046\u0031");if !_bgdgd .Resources .HasFontByName (_dcca ){_bgdgd .Resources .SetFontByName (_dcca ,DefaultFont ().ToPdfObject ());};var _cggbc []string ;_cggbc =append (_cggbc ,"\u0071");_cggbc =append (_cggbc ,"\u0042\u0054");_cggbc =append (_cggbc ,_e .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_dcca .String ()));_cggbc =append (_cggbc ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_cggbc =append (_cggbc ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_dbeab :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";_cggbc =append (_cggbc ,_e .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_dbeab ));_cggbc =append (_cggbc ,"\u0045\u0054");_cggbc =append (_cggbc ,"\u0051");_dddbe :=_gb .Join (_cggbc ,"\u000a");_bgdgd .AddContentStreamByString (_dddbe );_bgdgd .ToPdfObject ();};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_cce :=&PdfAppender {_dafd :reader ._efddb ,Reader :reader ,_cgda :reader ._efeb ,_dfde :reader ._bacb };_bbee ,_cbg :=_cce ._dafd .Seek (0,_dfb .SeekEnd );if _cbg !=nil {return nil ,_cbg ;};_cce ._aggda =_bbee ;if _ ,_cbg =_cce ._dafd .Seek (0,_dfb .SeekStart );_cbg !=nil {return nil ,_cbg ;};_cce ._ggde ,_cbg =NewPdfReader (_cce ._dafd );if _cbg !=nil {return nil ,_cbg ;};for _ ,_bgga :=range _cce .Reader .GetObjectNums (){if _cce ._aagf < _bgga {_cce ._aagf =_bgga ;};};_cce ._acfb =_cce ._cgda .GetXrefTable ();_cce ._defc =_cce ._cgda .GetXrefOffset ();_cce ._accd =append (_cce ._accd ,_cce ._ggde .PageList ...);_cce ._dea =make (map[_gcb .PdfObject ]struct{});_cce ._bbdc =make (map[_gcb .PdfObject ]int64 );_cce ._fdbag =make (map[_gcb .PdfObject ]struct{});_cce ._gbed =_cce ._ggde .AcroForm ;_cce ._gce =_cce ._ggde .DSS ;return _cce ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dfdf *PdfAnnotationStamp )ToPdfObject ()_gcb .PdfObject {_dfdf .PdfAnnotation .ToPdfObject ();_aab :=_dfdf ._dgc ;_fdba :=_aab .PdfObject .(*_gcb .PdfObjectDictionary );_dfdf .PdfAnnotationMarkup .appendToPdfDictionary (_fdba );_fdba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0053\u0074\u0061m\u0070"));_fdba .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dfdf .Name );return _aab ;};

// Items returns all children outline items.
func (_dbbf *Outline )Items ()[]*OutlineItem {return _dbbf .Entries };

// ToPdfObject returns a stream object.
func (_eafgd *XObjectForm )ToPdfObject ()_gcb .PdfObject {_dgfcee :=_eafgd ._cfadb ;_dfbac :=_dgfcee .PdfObjectDictionary ;if _eafgd .Filter !=nil {_dfbac =_eafgd .Filter .MakeStreamDict ();_dgfcee .PdfObjectDictionary =_dfbac ;};_dfbac .Set ("\u0054\u0079\u0070\u0065",_gcb .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));_dfbac .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0046\u006f\u0072\u006d"));_dfbac .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_eafgd .FormType );_dfbac .SetIfNotNil ("\u0042\u0042\u006f\u0078",_eafgd .BBox );_dfbac .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_eafgd .Matrix );if _eafgd .Resources !=nil {_dfbac .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_eafgd .Resources .ToPdfObject ());};_dfbac .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_eafgd .Group );_dfbac .SetIfNotNil ("\u0052\u0065\u0066",_eafgd .Ref );_dfbac .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_eafgd .MetaData );_dfbac .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_eafgd .PieceInfo );_dfbac .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_eafgd .LastModified );_dfbac .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_eafgd .StructParent );_dfbac .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_eafgd .StructParents );_dfbac .SetIfNotNil ("\u004f\u0050\u0049",_eafgd .OPI );_dfbac .SetIfNotNil ("\u004f\u0043",_eafgd .OC );_dfbac .SetIfNotNil ("\u004e\u0061\u006d\u0065",_eafgd .Name );_dfbac .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_gcb .MakeInteger (int64 (len (_eafgd .Stream ))));_dgfcee .Stream =_eafgd .Stream ;return _dgfcee ;};

// GetOutlineTree returns the outline tree.
func (_egcea *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _egcea ._egdd };

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_gcb .PdfObjectString ;Author *_gcb .PdfObjectString ;Subject *_gcb .PdfObjectString ;Keywords *_gcb .PdfObjectString ;Creator *_gcb .PdfObjectString ;Producer *_gcb .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;Trapped *_gcb .PdfObjectName ;};

// ToPdfObject implements interface PdfModel.
func (_afg *PdfActionLaunch )ToPdfObject ()_gcb .PdfObject {_afg .PdfAction .ToPdfObject ();_aca :=_afg ._gg ;_ag :=_aca .PdfObject .(*_gcb .PdfObjectDictionary );_ag .SetIfNotNil ("\u0053",_gcb .MakeName (string (ActionTypeLaunch )));if _afg .F !=nil {_ag .Set ("\u0046",_afg .F .ToPdfObject ());};_ag .SetIfNotNil ("\u0057\u0069\u006e",_afg .Win );_ag .SetIfNotNil ("\u004d\u0061\u0063",_afg .Mac );_ag .SetIfNotNil ("\u0055\u006e\u0069\u0078",_afg .Unix );_ag .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_afg .NewWindow );return _aca ;};

// SetImage updates XObject Image with new image data.
func (_gfdba *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_gfdba .Filter .UpdateParams (img .GetParamsDict ());_bcaaf ,_dcgeb :=_gfdba .Filter .EncodeBytes (img .Data );if _dcgeb !=nil {return _dcgeb ;};_gfdba .Stream =_bcaaf ;_ebgcbg :=img .Width ;_gfdba .Width =&_ebgcbg ;_ccbgc :=img .Height ;_gfdba .Height =&_ccbgc ;_dddfc :=img .BitsPerComponent ;_gfdba .BitsPerComponent =&_dddfc ;if cs ==nil {if img .ColorComponents ==1{_gfdba .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_gfdba .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_gfdba .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _fb .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_gfdba .ColorSpace =cs ;};return nil ;};

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_ge .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_ge .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_ge .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_abcbc *PdfAppender ;_gcbbb *DSS ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_bfefa *PdfAppender )UpdateObject (obj _gcb .PdfObject ){_bfefa .replaceObject (obj ,obj );if _ ,_cccd :=_bfefa ._dea [obj ];!_cccd {_bfefa ._efec =append (_bfefa ._efec ,obj );_bfefa ._dea [obj ]=struct{}{};};};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _gcb .PdfObject ;IC _gcb .PdfObject ;BE _gcb .PdfObject ;RD _gcb .PdfObject ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_gffff *PdfReader )GetOCProperties ()(_gcb .PdfObject ,error ){_bedgb :=_gffff ._bgee ;_afdaf :=_bedgb .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_afdaf =_gcb .ResolveReference (_afdaf );if !_gffff ._dddfd {_gfffb :=_gffff .traverseObjectData (_afdaf );if _gfffb !=nil {return nil ,_gfffb ;};};return _afdaf ,nil ;};func _ffaa (_dbge _gcb .PdfObject ,_ecdc *fontCommon )(*_ad .CMap ,error ){_efbf ,_edeg :=_gcb .GetStream (_dbge );if !_edeg {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_dbge );return nil ,_gcb .ErrTypeError ;};_dbgbf ,_daedd :=_gcb .DecodeStream (_efbf );if _daedd !=nil {return nil ,_daedd ;};_edbe ,_daedd :=_ad .LoadCmapFromData (_dbgbf ,!_ecdc .isCIDFont ());if _daedd !=nil {_fa .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_efbf .ObjectNumber ,_daedd );};return _edbe ,_daedd ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_efaf *PdfColorspaceDeviceN )ToPdfObject ()_gcb .PdfObject {_bdgg :=_gcb .MakeArray (_gcb .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_bdgg .Append (_efaf .ColorantNames );_bdgg .Append (_efaf .AlternateSpace .ToPdfObject ());_bdgg .Append (_efaf .TintTransform .ToPdfObject ());if _efaf .Attributes !=nil {_bdgg .Append (_efaf .Attributes .ToPdfObject ());};if _efaf ._fadaa !=nil {_efaf ._fadaa .PdfObject =_bdgg ;return _efaf ._fadaa ;};return _bdgg ;};func _cace (_faba []byte )(_aadb ,_gfda string ,_fgcc error ){_fa .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_faba ));_cebdb :=_gcfc .FindIndex (_faba );if _cebdb ==nil {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");return "","",_gcb .ErrTypeError ;};_ccga :=_cebdb [1];_fbaa :=_gb .Index (string (_faba [_ccga :]),_bbbb );if _fbaa < 0{_aadb =string (_faba [_ccga :]);return _aadb ,"",nil ;};_ecgae :=_ccga +_fbaa ;_aadb =string (_faba [_ccga :_ecgae ]);_gcdaa :=_ecgae ;_fbaa =_gb .Index (string (_faba [_gcdaa :]),_geedde );if _fbaa < 0{_fa .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fgcc );return "","",_gcb .ErrTypeError ;};_agcc :=_gcdaa +_fbaa ;_gfda =string (_faba [_gcdaa :_agcc ]);return _aadb ,_gfda ,nil ;};func _dbag (_fgea string )map[string ]string {_fgdc :=_edcd .Split (_fgea ,-1);_gcgg :=map[string ]string {};for _ ,_dgbb :=range _fgdc {_abgcc :=_aeebg .FindStringSubmatch (_dgbb );if _abgcc ==nil {continue ;};_eadda ,_ddbag :=_abgcc [1],_abgcc [2];_gcgg [_eadda ]=_ddbag ;};return _gcgg ;};func (_abb *PdfReader )newPdfAnnotationPolygonFromDict (_adcc *_gcb .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_aed :=PdfAnnotationPolygon {};_cdfg ,_egfg :=_abb .newPdfAnnotationMarkupFromDict (_adcc );if _egfg !=nil {return nil ,_egfg ;};_aed .PdfAnnotationMarkup =_cdfg ;_aed .Vertices =_adcc .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_aed .LE =_adcc .Get ("\u004c\u0045");_aed .BS =_adcc .Get ("\u0042\u0053");_aed .IC =_adcc .Get ("\u0049\u0043");_aed .BE =_adcc .Get ("\u0042\u0045");_aed .IT =_adcc .Get ("\u0049\u0054");_aed .Measure =_adcc .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_aed ,nil ;};

// Val returns the value of the color.
func (_acac *PdfColorCalGray )Val ()float64 {return float64 (*_acac )};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _gcb .PdfObject ;PreserveRB _gcb .PdfObject ;};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_afagf *XObjectImage )ToImage ()(*Image ,error ){_cecba :=&Image {};if _afagf .Height ==nil {return nil ,_fb .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_cecba .Height =*_afagf .Height ;if _afagf .Width ==nil {return nil ,_fb .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_cecba .Width =*_afagf .Width ;if _afagf .BitsPerComponent ==nil {return nil ,_fb .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");};_cecba .BitsPerComponent =*_afagf .BitsPerComponent ;_cecba .ColorComponents =_afagf .ColorSpace .GetNumComponents ();_afagf ._cacbc .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_gcb .MakeInteger (int64 (_cecba .ColorComponents )));_fbggf ,_aeafd :=_gcb .DecodeStream (_afagf ._cacbc );if _aeafd !=nil {return nil ,_aeafd ;};_cecba .Data =_fbggf ;if _afagf .Decode !=nil {_gedae ,_acegd :=_afagf .Decode .(*_gcb .PdfObjectArray );if !_acegd {_fa .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");return nil ,_fb .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_efbbc ,_fcdfa :=_gedae .ToFloat64Array ();if _fcdfa !=nil {return nil ,_fcdfa ;};_cecba ._gdeafd =_efbbc ;};return _cecba ,nil ;};func (_bfeg *PdfReader )newPdfAnnotationInkFromDict (_bbbf *_gcb .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_gfbc :=PdfAnnotationInk {};_dgg ,_dbaf :=_bfeg .newPdfAnnotationMarkupFromDict (_bbbf );if _dbaf !=nil {return nil ,_dbaf ;};_gfbc .PdfAnnotationMarkup =_dgg ;_gfbc .InkList =_bbbf .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_gfbc .BS =_bbbf .Get ("\u0042\u0053");return &_gfbc ,nil ;};

// GetFontDescriptor returns the font descriptor for `font`.
func (_cfcga PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _cfcga ._ffag .getFontDescriptor (),nil ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_eafg *VRI )ToPdfObject ()*_gcb .PdfObjectDictionary {_cgebf :=_gcb .MakeDict ();_cgebf .SetIfNotNil (_gcb .PdfObjectName ("\u0043\u0065\u0072\u0074"),_gecad (_eafg .Cert ));_cgebf .SetIfNotNil (_gcb .PdfObjectName ("\u004f\u0043\u0053\u0050"),_gecad (_eafg .OCSP ));_cgebf .SetIfNotNil (_gcb .PdfObjectName ("\u0043\u0052\u004c"),_gecad (_eafg .CRL ));_cgebf .SetIfNotNil ("\u0054\u0055",_eafg .TU );_cgebf .SetIfNotNil ("\u0054\u0053",_eafg .TS );return _cgebf ;};

// ToPdfObject implements interface PdfModel.
func (_bgfb *PdfActionNamed )ToPdfObject ()_gcb .PdfObject {_bgfb .PdfAction .ToPdfObject ();_cac :=_bgfb ._gg ;_efb :=_cac .PdfObject .(*_gcb .PdfObjectDictionary );_efb .SetIfNotNil ("\u0053",_gcb .MakeName (string (ActionTypeNamed )));_efb .SetIfNotNil ("\u004e",_bgfb .N );return _cac ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_daeeec :=appender .Reader .DSS ;if _daeeec ==nil {_daeeec =NewDSS ();};if _fcegg :=_daeeec .generateHashMaps ();_fcegg !=nil {return nil ,_fcegg ;};return &LTV {CertClient :_ge .NewCertClient (),OCSPClient :_ge .NewOCSPClient (),CRLClient :_ge .NewCRLClient (),SkipExisting :true ,_abcbc :appender ,_gcbbb :_daeeec },nil ;};func (_deggc *PdfWriter )addObjects (_bbgae _gcb .PdfObject )error {_fa .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _fgeda ,_ffaeg :=_bbgae .(*_gcb .PdfIndirectObject );_ffaeg {_fa .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_fa .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_bbgae ,_fgeda );_fa .Log .Trace ("\u002d\u0020\u0025\u0073",_fgeda .PdfObject );if _deggc .addObject (_fgeda ){_begf :=_deggc .addObjects (_fgeda .PdfObject );if _begf !=nil {return _begf ;};};return nil ;};if _ebgd ,_ebfag :=_bbgae .(*_gcb .PdfObjectStream );_ebfag {_fa .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_fa .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_bbgae ,_bbgae );if _deggc .addObject (_ebgd ){_bcdb :=_deggc .addObjects (_ebgd .PdfObjectDictionary );if _bcdb !=nil {return _bcdb ;};};return nil ;};if _gafd ,_dffcb :=_bbgae .(*_gcb .PdfObjectDictionary );_dffcb {_fa .Log .Trace ("\u0044\u0069\u0063\u0074");_fa .Log .Trace ("\u002d\u0020\u0025\u0073",_bbgae );for _ ,_gagfb :=range _gafd .Keys (){_bece :=_gafd .Get (_gagfb );if _eacge ,_bfeb :=_bece .(*_gcb .PdfObjectReference );_bfeb {_bece =_eacge .Resolve ();_gafd .Set (_gagfb ,_bece );};if _gagfb !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _acada :=_deggc .addObjects (_bece );_acada !=nil {return _acada ;};}else {if _ ,_adegec :=_bece .(*_gcb .PdfObjectNull );_adegec {continue ;};if _gacbe :=_deggc .hasObject (_bece );!_gacbe {_fa .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_bece ,_bece ,_bece );_deggc ._dbeg [_bece ]=append (_deggc ._dbeg [_bece ],_gafd );};};};return nil ;};if _eegec ,_cggdb :=_bbgae .(*_gcb .PdfObjectArray );_cggdb {_fa .Log .Trace ("\u0041\u0072\u0072a\u0079");_fa .Log .Trace ("\u002d\u0020\u0025\u0073",_bbgae );if _eegec ==nil {return _fb .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};for _aadggb ,_edbgf :=range _eegec .Elements (){if _dfcfc ,_dbaef :=_edbgf .(*_gcb .PdfObjectReference );_dbaef {_edbgf =_dfcfc .Resolve ();_eegec .Set (_aadggb ,_edbgf );};if _cdbe :=_deggc .addObjects (_edbgf );_cdbe !=nil {return _cdbe ;};};return nil ;};if _ ,_acdeb :=_bbgae .(*_gcb .PdfObjectReference );_acdeb {_fa .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_bbgae );return _fb .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};func (_cebd *DSS )addCRLs (_dga [][]byte )([]*_gcb .PdfObjectStream ,error ){return _cebd .add (&_cebd .CRLs ,_cebd ._gbef ,_dga );};

// ToPdfObject implements interface PdfModel.
func (_dfgd *PdfAnnotationRichMedia )ToPdfObject ()_gcb .PdfObject {_dfgd .PdfAnnotation .ToPdfObject ();_cafc :=_dfgd ._dgc ;_fgac :=_cafc .PdfObject .(*_gcb .PdfObjectDictionary );_fgac .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));_fgac .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_dfgd .RichMediaSettings );_fgac .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_dfgd .RichMediaContent );return _cafc ;};func (_dcc *PdfReader )newPdfActionResetFormFromDict (_ded *_gcb .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_ded .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_ded .Get ("\u0046\u006c\u0061g\u0073")},nil ;};func (_degf *PdfReader )newPdfActionURIFromDict (_cafb *_gcb .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_cafb .Get ("\u0055\u0052\u0049"),IsMap :_cafb .Get ("\u0049\u0073\u004da\u0070")},nil ;};func _cgcg (_efce _gcb .PdfObject )(map[_dee .CharCode ]float64 ,error ){if _efce ==nil {return nil ,nil ;};_cgab ,_ffcba :=_gcb .GetArray (_efce );if !_ffcba {return nil ,nil ;};_fccaa :=map[_dee .CharCode ]float64 {};_fagd :=_cgab .Len ();for _cdgd :=0;_cdgd < _fagd -1;_cdgd ++{_bcbge :=_gcb .TraceToDirectObject (_cgab .Get (_cdgd ));_ecee ,_aaada :=_gcb .GetIntVal (_bcbge );if !_aaada {return nil ,_e .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_cdgd ,_bcbge );};_cdgd ++;if _cdgd > _fagd -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_cgab );};_efde :=_gcb .TraceToDirectObject (_cgab .Get (_cdgd ));switch _efde .(type ){case *_gcb .PdfObjectArray :_ebbga ,_ :=_gcb .GetArray (_efde );if _dfdg ,_fcfda :=_ebbga .ToFloat64Array ();_fcfda ==nil {for _dcaa :=0;_dcaa < len (_dfdg );_dcaa ++{_fccaa [_dee .CharCode (_ecee +_dcaa )]=_dfdg [_dcaa ];};}else {return nil ,_e .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_cdgd ,_efde );};case *_gcb .PdfObjectInteger :_befe ,_ecfe :=_gcb .GetIntVal (_efde );if !_ecfe {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_cdgd ,_efde );};_cdgd ++;if _cdgd > _fagd -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_cgab );};_adegc :=_cgab .Get (_cdgd );_dgbfe ,_ceae :=_gcb .GetNumberAsFloat (_adegc );if _ceae !=nil {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_cdgd ,_adegc );};for _deaad :=_ecee ;_deaad <=_befe ;_deaad ++{_fccaa [_dee .CharCode (_deaad )]=_dgbfe ;};default:return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_cdgd ,_efde );};};return _fccaa ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_cegg *PdfAnnotationLink )ToPdfObject ()_gcb .PdfObject {_cegg .PdfAnnotation .ToPdfObject ();_fafa :=_cegg ._dgc ;_gdg :=_fafa .PdfObject .(*_gcb .PdfObjectDictionary );_gdg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_gcb .MakeName ("\u004c\u0069\u006e\u006b"));if _cegg ._adc !=nil &&_cegg ._adc ._ebe !=nil {_gdg .Set ("\u0041",_cegg ._adc ._ebe .ToPdfObject ());}else if _cegg .A !=nil {_gdg .Set ("\u0041",_cegg .A );};_gdg .SetIfNotNil ("\u0044\u0065\u0073\u0074",_cegg .Dest );_gdg .SetIfNotNil ("\u0048",_cegg .H );_gdg .SetIfNotNil ("\u0050\u0041",_cegg .PA );_gdg .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cegg .QuadPoints );_gdg .SetIfNotNil ("\u0042\u0053",_cegg .BS );return _fafa ;};func _affb (_cagc _gcb .PdfObject )(*PdfFunctionType3 ,error ){_acdd :=&PdfFunctionType3 {};var _dcfg *_gcb .PdfObjectDictionary ;if _dcff ,_bfcg :=_cagc .(*_gcb .PdfIndirectObject );_bfcg {_bdbc ,_cegcf :=_dcff .PdfObject .(*_gcb .PdfObjectDictionary );if !_cegcf {return nil ,_fb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_acdd ._efdec =_dcff ;_dcfg =_bdbc ;}else if _dbbgc ,_babad :=_cagc .(*_gcb .PdfObjectDictionary );_babad {_dcfg =_dbbgc ;}else {return nil ,_fb .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_ecfg ,_cbebd :=_gcb .TraceToDirectObject (_dcfg .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_gcb .PdfObjectArray );if !_cbebd {_fa .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fb .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _ecfg .Len ()!=2{_fa .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_fb .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_ggbf ,_dbfee :=_ecfg .ToFloat64Array ();if _dbfee !=nil {return nil ,_dbfee ;};_acdd .Domain =_ggbf ;_ecfg ,_cbebd =_gcb .TraceToDirectObject (_dcfg .Get ("\u0052\u0061\u006eg\u0065")).(*_gcb .PdfObjectArray );if _cbebd {if _ecfg .Len ()< 0||_ecfg .Len ()%2!=0{return nil ,_fb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_dcdad ,_afgbd :=_ecfg .ToFloat64Array ();if _afgbd !=nil {return nil ,_afgbd ;};_acdd .Range =_dcdad ;};_ecfg ,_cbebd =_gcb .TraceToDirectObject (_dcfg .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_gcb .PdfObjectArray );if !_cbebd {_fa .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");return nil ,_fb .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_acdd .Functions =[]PdfFunction {};for _ ,_egcee :=range _ecfg .Elements (){_acagec ,_abdge :=_gaeabb (_egcee );if _abdge !=nil {return nil ,_abdge ;};_acdd .Functions =append (_acdd .Functions ,_acagec );};_ecfg ,_cbebd =_gcb .TraceToDirectObject (_dcfg .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_gcb .PdfObjectArray );if !_cbebd {_fa .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fb .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_eceae ,_dbfee :=_ecfg .ToFloat64Array ();if _dbfee !=nil {return nil ,_dbfee ;};_acdd .Bounds =_eceae ;if len (_acdd .Bounds )!=len (_acdd .Functions )-1{_fa .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_acdd .Bounds ),len (_acdd .Functions ));return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ecfg ,_cbebd =_gcb .TraceToDirectObject (_dcfg .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_gcb .PdfObjectArray );if !_cbebd {_fa .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_fb .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_fgafg ,_dbfee :=_ecfg .ToFloat64Array ();if _dbfee !=nil {return nil ,_dbfee ;};_acdd .Encode =_fgafg ;if len (_acdd .Encode )!=2*len (_acdd .Functions ){_fa .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_acdd .Encode ),len (_acdd .Functions ));return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _acdd ,nil ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_cbddd *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_bdaee :=func (_cded float64 )float64 {if _cded >=6.0/29{return _cded *_cded *_cded ;};return 108.0/841*(_cded -4/29);};_cfdg :=img ._gdeafd ;if len (_cfdg )!=6{_fa .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");_cfdg =_cbddd .DecodeArray ();};_fbbc :=_cg .NewReader (img .getBase ());_dbae :=_efe .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._gaecf ,img ._gdeafd );_bbad :=_cg .NewWriter (_dbae );_dbe :=_f .Pow (2,float64 (img .BitsPerComponent ))-1;_aefce :=make ([]uint32 ,3);var (_gaff error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_ffefa ,_efa ,_bbcf float64 ;);for {_gaff =_fbbc .ReadSamples (_aefce );if _gaff ==_dfb .EOF {break ;}else if _gaff !=nil {return img ,_gaff ;};Ls =float64 (_aefce [0])/_dbe ;As =float64 (_aefce [1])/_dbe ;Bs =float64 (_aefce [2])/_dbe ;Ls =_efe .LinearInterpolate (Ls ,0.0,1.0,_cfdg [0],_cfdg [1]);As =_efe .LinearInterpolate (As ,0.0,1.0,_cfdg [2],_cfdg [3]);Bs =_efe .LinearInterpolate (Bs ,0.0,1.0,_cfdg [4],_cfdg [5]);L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_cbddd .WhitePoint [0]*_bdaee (L );Y =_cbddd .WhitePoint [1]*_bdaee (M );Z =_cbddd .WhitePoint [2]*_bdaee (N );_ffefa =3.240479*X +-1.537150*Y +-0.498535*Z ;_efa =-0.969256*X +1.875992*Y +0.041556*Z ;_bbcf =0.055648*X +-0.204043*Y +1.057311*Z ;_ffefa =_f .Min (_f .Max (_ffefa ,0),1.0);_efa =_f .Min (_f .Max (_efa ,0),1.0);_bbcf =_f .Min (_f .Max (_bbcf ,0),1.0);_aefce [0]=uint32 (_ffefa *_dbe );_aefce [1]=uint32 (_efa *_dbe );_aefce [2]=uint32 (_bbcf *_dbe );if _gaff =_bbad .WriteSamples (_aefce );_gaff !=nil {return img ,_gaff ;};};return _dddf (&_dbae ),nil ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_ccdfa :=PdfPage {};_ccdfa ._aafafd =_gcb .MakeDict ();_ccdfa .Resources =NewPdfPageResources ();_ffggb :=_gcb .PdfIndirectObject {};_ffggb .PdfObject =_ccdfa ._aafafd ;_ccdfa ._gdeac =&_ffggb ;return &_ccdfa ;};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};type pdfFontSimple struct{fontCommon ;_fecf *_gcb .PdfIndirectObject ;_egbc map[_dee .CharCode ]float64 ;_cgeba _dee .TextEncoder ;_dfece _dee .TextEncoder ;_dgdd *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _gcb .PdfObject ;LastChar _gcb .PdfObject ;Widths _gcb .PdfObject ;Encoding _gcb .PdfObject ;_cbbab map[rune ]_aa .CharMetrics ;};

// IsCID returns true if the underlying font is CID.
func (_bdbf *PdfFont )IsCID ()bool {return _bdbf .baseFields ().isCIDFont ()};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_dgcd *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_cacc :=vals [0];if _cacc < 0.0||_cacc > 1.0{return nil ,_fb .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_adfed :=NewPdfColorCalGray (_cacc );return _adfed ,nil ;};

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_fcdea :=PdfWriter {};_fcdea ._cbgdbf =map[_gcb .PdfObject ]struct{}{};_fcdea ._dfeee =[]_gcb .PdfObject {};_fcdea ._dbeg =map[_gcb .PdfObject ][]*_gcb .PdfObjectDictionary {};_fcdea ._ffdfe =map[_gcb .PdfObject ]struct{}{};_fcdea ._fdfdg =1;_fcdea ._geadf =3;_ggafb :=_gcb .MakeDict ();_fgbf :=[]struct{_ddbfea _gcb .PdfObjectName ;_agegba string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_aacge ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_adgfg ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_dggbc ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_dadccf ()},{"\u0054\u0069\u0074l\u0065",_ecbfdb ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_gbgg ()}};for _ ,_bbeag :=range _fgbf {if _bbeag ._agegba !=""{_ggafb .Set (_bbeag ._ddbfea ,_gcb .MakeString (_bbeag ._agegba ));};};if _bdcbb :=_afdbd ();!_bdcbb .IsZero (){if _dgedf ,_adcdd :=NewPdfDateFromTime (_bdcbb );_adcdd ==nil {_ggafb .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_dgedf .ToPdfObject ());};};if _dedfc :=_ggcac ();!_dedfc .IsZero (){if _eafdfb ,_bgddg :=NewPdfDateFromTime (_dedfc );_bgddg ==nil {_ggafb .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_eafdfb .ToPdfObject ());};};_efcga :=_gcb .PdfIndirectObject {};_efcga .PdfObject =_ggafb ;_fcdea ._ebag =&_efcga ;_fcdea .addObject (&_efcga );_efcab :=_gcb .PdfIndirectObject {};_dcggc :=_gcb .MakeDict ();_dcggc .Set ("\u0054\u0079\u0070\u0065",_gcb .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_efcab .PdfObject =_dcggc ;_fcdea ._dafgf =&_efcab ;_fcdea .addObject (_fcdea ._dafgf );_gecea :=_gcb .PdfIndirectObject {};_abcedb :=_gcb .MakeDict ();_abcedb .Set ("\u0054\u0079\u0070\u0065",_gcb .MakeName ("\u0050\u0061\u0067e\u0073"));_dddaea :=_gcb .PdfObjectArray {};_abcedb .Set ("\u004b\u0069\u0064\u0073",&_dddaea );_abcedb .Set ("\u0043\u006f\u0075n\u0074",_gcb .MakeInteger (0));_gecea .PdfObject =_abcedb ;_fcdea ._ddfea =&_gecea ;_fcdea ._dccdd =map[_gcb .PdfObject ]struct{}{};_fcdea .addObject (_fcdea ._ddfea );_dcggc .Set ("\u0050\u0061\u0067e\u0073",&_gecea );_fcdea ._gfdbe =_dcggc ;_fa .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_efcab );return _fcdea ;};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_gcbd *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_addgfa :=_gcbd .GetContentStreamObjs ();wrapContents =wrapContents &&len (_addgfa )> 0;_gcea :=_gcb .NewFlateEncoder ();_acdaf :=_gcb .MakeArray ();if wrapContents {_fgcgd ,_dcef :=_gcb .MakeStream ([]byte ("\u0071\u000a"),_gcea );if _dcef !=nil {return _dcef ;};_acdaf .Append (_fgcgd );};_acdaf .Append (_addgfa ...);if wrapContents {_bdec ,_gbdbfa :=_gcb .MakeStream ([]byte ("\u000a\u0051\u000a"),_gcea );if _gbdbfa !=nil {return _gbdbfa ;};_acdaf .Append (_bdec );};_baab ,_adec :=_gcb .MakeStream (cs ,_gcea );if _adec !=nil {return _adec ;};_acdaf .Append (_baab );_gcbd .Contents =_acdaf ;return nil ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _gcb .PdfObject ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_dgfcd *Outline )Insert (index uint ,item *OutlineItem ){_fcgea :=uint (len (_dgfcd .Entries ));if index > _fcgea {index =_fcgea ;};_dgfcd .Entries =append (_dgfcd .Entries [:index ],append ([]*OutlineItem {item },_dgfcd .Entries [index :]...)...);};func (_aadg *PdfReader )newPdfAnnotationCaretFromDict (_deba *_gcb .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_gfad :=PdfAnnotationCaret {};_ggad ,_abbd :=_aadg .newPdfAnnotationMarkupFromDict (_deba );if _abbd !=nil {return nil ,_abbd ;};_gfad .PdfAnnotationMarkup =_ggad ;_gfad .RD =_deba .Get ("\u0052\u0044");_gfad .Sy =_deba .Get ("\u0053\u0079");return &_gfad ,nil ;};

// String returns a human readable description of `fontfile`.
func (_cagde *fontFile )String ()string {_gbdac :="\u005b\u004e\u006f\u006e\u0065\u005d";if _cagde ._dfda !=nil {_gbdac =_cagde ._dfda .String ();};return _e .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_cagde ._dcfde ,_gbdac );};

// ToPdfObject implements interface PdfModel.
func (_deb *PdfActionTrans )ToPdfObject ()_gcb .PdfObject {_deb .PdfAction .ToPdfObject ();_dc :=_deb ._gg ;_deec :=_dc .PdfObject .(*_gcb .PdfObjectDictionary );_deec .SetIfNotNil ("\u0053",_gcb .MakeName (string (ActionTypeTrans )));_deec .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_deb .Trans );return _dc ;};

// MergePageWith appends page content to source Pdf file page content.
func (_acca *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_cegc :=pageNum -1;var _dbc *PdfPage ;for _fgga ,_adab :=range _acca ._accd {if _fgga ==_cegc {_dbc =_adab ;};};if _dbc ==nil {return _e .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );};if _dbc ._gdeac !=nil &&_dbc ._gdeac .GetParser ()==_acca ._ggde ._efeb {_dbc =_dbc .Duplicate ();_acca ._accd [_cegc ]=_dbc ;};page =page .Duplicate ();_dgaef (page );_eca :=_gffc (_dbc );_bbge :=_gffc (page );_bafb :=make (map[_gcb .PdfObjectName ]_gcb .PdfObjectName );for _ged :=range _bbge {if _ ,_gcga :=_eca [_ged ];_gcga {for _beef :=1;true ;_beef ++{_fgca :=_gcb .PdfObjectName (string (_ged )+_cf .Itoa (_beef ));if _ ,_gfcc :=_eca [_fgca ];!_gfcc {_bafb [_ged ]=_fgca ;break ;};};};};_gcgb ,_fad :=page .GetContentStreams ();if _fad !=nil {return _fad ;};_edf ,_fad :=_dbc .GetContentStreams ();if _fad !=nil {return _fad ;};for _agac ,_ebef :=range _gcgb {for _bcac ,_ggda :=range _bafb {_ebef =_gb .Replace (_ebef ,"\u002f"+string (_bcac ),"\u002f"+string (_ggda ),-1);};_gcgb [_agac ]=_ebef ;};_edf =append (_edf ,_gcgb ...);if _gabf :=_dbc .SetContentStreams (_edf ,_gcb .NewFlateEncoder ());_gabf !=nil {return _gabf ;};_dbc ._eafecf =append (_dbc ._eafecf ,page ._eafecf ...);if _dbc .Resources ==nil {_dbc .Resources =NewPdfPageResources ();};if page .Resources !=nil {_dbc .Resources .Font =_acca .mergeResources (_dbc .Resources .Font ,page .Resources .Font ,_bafb );_dbc .Resources .XObject =_acca .mergeResources (_dbc .Resources .XObject ,page .Resources .XObject ,_bafb );_dbc .Resources .Properties =_acca .mergeResources (_dbc .Resources .Properties ,page .Resources .Properties ,_bafb );if _dbc .Resources .ProcSet ==nil {_dbc .Resources .ProcSet =page .Resources .ProcSet ;};_dbc .Resources .Shading =_acca .mergeResources (_dbc .Resources .Shading ,page .Resources .Shading ,_bafb );_dbc .Resources .ExtGState =_acca .mergeResources (_dbc .Resources .ExtGState ,page .Resources .ExtGState ,_bafb );};_fef ,_fad :=_dbc .GetMediaBox ();if _fad !=nil {return _fad ;};_aabf ,_fad :=page .GetMediaBox ();if _fad !=nil {return _fad ;};var _gddb bool ;if _fef .Llx > _aabf .Llx {_fef .Llx =_aabf .Llx ;_gddb =true ;};if _fef .Lly > _aabf .Lly {_fef .Lly =_aabf .Lly ;_gddb =true ;};if _fef .Urx < _aabf .Urx {_fef .Urx =_aabf .Urx ;_gddb =true ;};if _fef .Ury < _aabf .Ury {_fef .Ury =_aabf .Ury ;_gddb =true ;};if _gddb {_dbc .MediaBox =_fef ;};return nil ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_dafgf *_gcb .PdfIndirectObject ;_ddfea *_gcb .PdfIndirectObject ;_dccdd map[_gcb .PdfObject ]struct{};_dfeee []_gcb .PdfObject ;_cbgdbf map[_gcb .PdfObject ]struct{};_adebc []*_gcb .PdfIndirectObject ;_dgfce *PdfOutlineTreeNode ;_gfdbe *_gcb .PdfObjectDictionary ;_ccdaa []_gcb .PdfObject ;_ebag *_gcb .PdfIndirectObject ;_adfb *_bg .Writer ;_ggecf int64 ;_gbfffa error ;_cfcgff *_gcb .PdfCrypt ;_abaga *_gcb .PdfObjectDictionary ;_acgfg *_gcb .PdfIndirectObject ;_bbdad *_gcb .PdfObjectArray ;_fdfdg int ;_geadf int ;_fcedd *bool ;_dbeg map[_gcb .PdfObject ][]*_gcb .PdfObjectDictionary ;_gacc *PdfAcroForm ;_dcdaa Optimizer ;_agbae map[int ]crossReference ;_cebfg int64 ;ObjNumOffset int ;_cbaca bool ;_afdda _gcb .XrefTable ;_afcce int64 ;_gdac int64 ;_cdbgf map[_gcb .PdfObject ]int64 ;_ffdfe map[_gcb .PdfObject ]struct{};};

// SetFlag sets the flag for the field.
func (_dgfgc *PdfField )SetFlag (flag FieldFlag ){_dgfgc .Ff =_gcb .MakeInteger (int64 (flag ))};