//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package mdp ;import (_d "errors";_db "fmt";_cd "github.com/unidoc/unipdf/v3/core";);

// IsPermitted returns true if changes permitted.
func (_gcb *DiffResults )IsPermitted ()bool {return len (_gcb .Errors )==0};

// ReviewFile implementation of DiffPolicy interface
// The default policy only checks the next types of objects:
// Page, Pages (container for page objects), Annot, Annots (container for annotation objects), Field.
// It checks adding, removing and modifying objects of these types.
func (_a *defaultDiffPolicy )ReviewFile (oldParser *_cd .PdfParser ,newParser *_cd .PdfParser ,params *MDPParameters )(*DiffResults ,error ){if oldParser .GetRevisionNumber ()> newParser .GetRevisionNumber (){return nil ,_d .New ("\u006f\u006c\u0064\u0020\u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020\u006e\u0065\u0077\u0020r\u0065\u0076i\u0073\u0069\u006f\u006e");
};if oldParser .GetRevisionNumber ()==newParser .GetRevisionNumber (){if oldParser !=newParser {return nil ,_d .New ("\u0073\u0061m\u0065\u0020\u0072\u0065v\u0069\u0073i\u006f\u006e\u0073\u002c\u0020\u0062\u0075\u0074 \u0064\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0074\u0020\u0070\u0061r\u0073\u0065\u0072\u0073");
};return &DiffResults {},nil ;};if params ==nil {_a ._f =NoRestrictions ;}else {_a ._f =params .DocMDPLevel ;};_dbc :=&DiffResults {};for _ad :=oldParser .GetRevisionNumber ()+1;_ad <=newParser .GetRevisionNumber ();_ad ++{_g ,_cc :=newParser .GetRevision (_ad -1);
if _cc !=nil {return nil ,_cc ;};_gg ,_cc :=newParser .GetRevision (_ad );if _cc !=nil {return nil ,_cc ;};_ca ,_cc :=_a .compareRevisions (_g ,_gg );if _cc !=nil {return nil ,_cc ;};_dbc .Warnings =append (_dbc .Warnings ,_ca .Warnings ...);_dbc .Errors =append (_dbc .Errors ,_ca .Errors ...);
};return _dbc ,nil ;};

// DocMDPPermission is values for set up access permissions for DocMDP.
// (Section 12.8.2.2, Table 254 - Entries in a signature dictionary p. 471 in PDF32000_2008).
type DocMDPPermission int64 ;

// String returns the state of the warning.
func (_efdb *DiffResult )String ()string {return _db .Sprintf ("\u0025\u0073\u0020\u0069n \u0072\u0065\u0076\u0069\u0073\u0069\u006f\u006e\u0073\u0020\u0023\u0025\u0064",_efdb .Description ,_efdb .Revision );};func _fda (_agg _cd .PdfObject )([]_cd .PdfObject ,error ){_dgf :=make ([]_cd .PdfObject ,0);
if _agg !=nil {_fab :=_agg ;if _bec ,_fdab :=_cd .GetIndirect (_agg );_fdab {_fab =_bec .PdfObject ;};if _cef ,_egeg :=_cd .GetArray (_fab );_egeg {_dgf =_cef .Elements ();}else {return nil ,_d .New ("\u0075n\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0061n\u006eo\u0074s\u0027\u0020\u006f\u0062\u006a\u0065\u0063t");
};};return _dgf ,nil ;};

// DiffResults describes the results of the DiffPolicy.
type DiffResults struct{Warnings []*DiffResult ;Errors []*DiffResult ;};

// DiffPolicy interface for comparing two revisions of the Pdf document.
type DiffPolicy interface{

// ReviewFile should check the revisions of the old and new parsers
// and evaluate the differences between the revisions.
// Each implementation of this interface must decide
// how to handle cases where there are multiple revisions between the old and new revisions.
ReviewFile (_abge *_cd .PdfParser ,_cfge *_cd .PdfParser ,_eda *MDPParameters )(*DiffResults ,error );};

// DiffResult describes the warning or the error for the DiffPolicy results.
type DiffResult struct{Revision int ;Description string ;};func NewDefaultDiffPolicy ()DiffPolicy {return &defaultDiffPolicy {_cdb :nil ,_dd :&DiffResults {},_f :0};};func (_ce *defaultDiffPolicy )compareRevisions (_e *_cd .PdfParser ,_de *_cd .PdfParser )(*DiffResults ,error ){var _ccg error ;
_ce ._cdb ,_ccg =_de .GetUpdatedObjects (_e );if _ccg !=nil {return &DiffResults {},_ccg ;};if len (_ce ._cdb )==0{return &DiffResults {},nil ;};_cf :=_de .GetRevisionNumber ();_gd ,_ae :=_cd .GetIndirect (_cd .ResolveReference (_e .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));
_b ,_gdc :=_cd .GetIndirect (_cd .ResolveReference (_de .GetTrailer ().Get ("\u0052\u006f\u006f\u0074")));if !_ae ||!_gdc {return &DiffResults {},_d .New ("\u0065\u0072\u0072o\u0072\u0020\u0077\u0068i\u006c\u0065\u0020\u0067\u0065\u0074\u0074i\u006e\u0067\u0020\u0072\u006f\u006f\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_fa ,_ae :=_cd .GetDict (_cd .ResolveReference (_gd .PdfObject ));_ddd ,_gdc :=_cd .GetDict (_cd .ResolveReference (_b .PdfObject ));if !_ae ||!_gdc {return &DiffResults {},_d .New ("\u0065\u0072\u0072\u006f\u0072\u0020\u0077\u0068\u0069\u006c\u0065\u0020\u0067e\u0074\u0074\u0069\u006e\u0067\u0020a\u0020\u0072\u006f\u006f\u0074\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _ab ,_cb :=_cd .GetIndirect (_ddd .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_cb {_fc ,_fce :=_cd .GetDict (_ab );if !_fce {return &DiffResults {},_d .New ("\u0065\u0072\u0072\u006f\u0072 \u0077\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_eg :=make ([]_cd .PdfObject ,0);if _ff ,_ga :=_cd .GetIndirect (_fa .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d"));_ga {if _ffg ,_fb :=_cd .GetDict (_ff );_fb {if _gc ,_bd :=_cd .GetArray (_ffg .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));
_bd {_eg =_gc .Elements ();};};};_fg ,_fce :=_cd .GetArray (_fc .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));if !_fce {return &DiffResults {},_d .New ("\u0065\u0072r\u006f\u0072\u0020\u0077h\u0069\u006ce\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067 \u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u0027\u0073\u0020\u0066i\u0065\u006c\u0064\u0073");
};if _ea :=_ce .compareFields (_cf ,_eg ,_fg .Elements ());_ea !=nil {return &DiffResults {},_ea ;};};_aec ,_aea :=_cd .GetIndirect (_ddd .Get ("\u0050\u0061\u0067e\u0073"));if !_aea {return &DiffResults {},_d .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};_bb ,_aea :=_cd .GetIndirect (_fa .Get ("\u0050\u0061\u0067e\u0073"));if !_aea {return &DiffResults {},_d .New ("\u0065\u0072\u0072\u006f\u0072\u0020w\u0068\u0069\u006c\u0065\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020p\u0061\u0067\u0065\u0073\u0027\u0020\u006fb\u006a\u0065\u0063\u0074");
};if _fac :=_ce .comparePages (_cf ,_bb ,_aec );_fac !=nil {return &DiffResults {},_fac ;};return _ce ._dd ,nil ;};

// MDPParameters describes parameters for the MDP checks (now only DocMDP).
type MDPParameters struct{DocMDPLevel DocMDPPermission ;};func (_ge *defaultDiffPolicy )compareFields (_ba int ,_cfg ,_cdf []_cd .PdfObject )error {_fbg :=make (map[int64 ]*_cd .PdfObjectDictionary );for _ ,_adg :=range _cfg {_fgg ,_ffe :=_cd .GetIndirect (_adg );
if !_ffe {return _d .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_adf ,_ffe :=_cd .GetDict (_fgg .PdfObject );if !_ffe {return _d .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_fbg [_fgg .ObjectNumber ]=_adf ;};for _ ,_cbb :=range _cdf {_fcg ,_fbf :=_cd .GetIndirect (_cbb );if !_fbf {return _d .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_ed ,_fbf :=_cd .GetDict (_fcg .PdfObject );if !_fbf {return _d .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006cd\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};T :=_ed .Get ("\u0054");if _ ,_efd :=_ge ._cdb [_fcg .ObjectNumber ];
_efd {switch _ge ._f {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_ge ._dd .addWarningWithDescription (_ba ,_db .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));default:_ge ._dd .addErrorWithDescription (_ba ,_db .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",T ));
};};if _ ,_cfgb :=_fbg [_fcg .ObjectNumber ];!_cfgb {switch _ge ._f {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_ge ._dd .addWarningWithDescription (_ba ,_db .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_ed .Get ("\u0054")));
default:_ge ._dd .addErrorWithDescription (_ba ,_db .Sprintf ("\u0046i\u0065l\u0064\u0020\u0025\u0073\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_ed .Get ("\u0054")));};}else {delete (_fbg ,_fcg .ObjectNumber );if _ ,_bfb :=_ge ._cdb [_fcg .ObjectNumber ];
_bfb {switch _ge ._f {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_ge ._dd .addWarningWithDescription (_ba ,_db .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_ed .Get ("\u0054")));default:_ge ._dd .addErrorWithDescription (_ba ,_db .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0063\u0068\u0061ng\u0065\u0064",_ed .Get ("\u0054")));
};};};if FT ,_bdd :=_cd .GetNameVal (_ed .Get ("\u0046\u0054"));_bdd {if FT =="\u0053\u0069\u0067"{if _cg ,_abg :=_cd .GetIndirect (_ed .Get ("\u0056"));_abg {if _ ,_abc :=_ge ._cdb [_cg .ObjectNumber ];_abc {switch _ge ._f {case NoRestrictions ,FillForms ,FillFormsAndAnnots :_ge ._dd .addWarningWithDescription (_ba ,_db .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));
default:_ge ._dd .addErrorWithDescription (_ba ,_db .Sprintf ("\u0053\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0066\u006f\u0072\u0020%\u0073 \u0066i\u0065l\u0064\u0020\u0077\u0061\u0073\u0020\u0063\u0068\u0061\u006e\u0067\u0065\u0064",T ));};};};};
};};for _ ,_aee :=range _fbg {switch _ge ._f {case NoRestrictions :_ge ._dd .addWarningWithDescription (_ba ,_db .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_aee .Get ("\u0054")));default:_ge ._dd .addErrorWithDescription (_ba ,_db .Sprintf ("F\u0069e\u006c\u0064\u0020\u0025\u0073\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_aee .Get ("\u0054")));
};};return nil ;};const (NoRestrictions DocMDPPermission =0;NoChanges DocMDPPermission =1;FillForms DocMDPPermission =2;FillFormsAndAnnots DocMDPPermission =3;);type defaultDiffPolicy struct{_cdb map[int64 ]_cd .PdfObject ;_dd *DiffResults ;_f DocMDPPermission ;
};func (_gbg *DiffResults )addError (_fdc *DiffResult ){if _gbg .Errors ==nil {_gbg .Errors =make ([]*DiffResult ,0);};_gbg .Errors =append (_gbg .Errors ,_fdc );};func (_agbb *DiffResults )addErrorWithDescription (_caec int ,_ged string ){if _agbb .Errors ==nil {_agbb .Errors =make ([]*DiffResult ,0);
};_agbb .Errors =append (_agbb .Errors ,&DiffResult {Revision :_caec ,Description :_ged });};func (_ee *defaultDiffPolicy )comparePages (_gb int ,_cea ,_aab *_cd .PdfIndirectObject )error {if _ ,_efc :=_ee ._cdb [_aab .ObjectNumber ];_efc {_ee ._dd .addErrorWithDescription (_gb ,"\u0050a\u0067e\u0073\u0020\u0077\u0065\u0072e\u0020\u0063h\u0061\u006e\u0067\u0065\u0064");
};_ced ,_dde :=_cd .GetDict (_aab .PdfObject );_ccd ,_af :=_cd .GetDict (_cea .PdfObject );if !_dde ||!_af {return _d .New ("\u0075n\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061g\u0065\u0073\u0027\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_bbb ,_dde :=_cd .GetArray (_ced .Get ("\u004b\u0069\u0064\u0073"));_bdf ,_af :=_cd .GetArray (_ccd .Get ("\u004b\u0069\u0064\u0073"));if !_dde ||!_af {return _d .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0050\u0061\u0067\u0065s\u0027 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");
};_egg :=_bbb .Len ();if _egg > _bdf .Len (){_egg =_bdf .Len ();};for _cce :=0;_cce < _egg ;_cce ++{_eaf ,_fd :=_cd .GetIndirect (_cd .ResolveReference (_bdf .Get (_cce )));_afg ,_bc :=_cd .GetIndirect (_cd .ResolveReference (_bbb .Get (_cce )));if !_fd ||!_bc {return _d .New ("\u0075\u006e\u0065\u0078pe\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006f\u0062\u006a\u0065c\u0074");
};if _eaf .ObjectNumber !=_afg .ObjectNumber {_ee ._dd .addErrorWithDescription (_gb ,_db .Sprintf ("p\u0061\u0067\u0065\u0020#%\u0064 \u0077\u0061\u0073\u0020\u0072e\u0070\u006c\u0061\u0063\u0065\u0064",_cce ));};_aag ,_fd :=_cd .GetDict (_afg );_cac ,_bc :=_cd .GetDict (_eaf );
if !_fd ||!_bc {return _d .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0067\u0065'\u0073 \u0064\u0069\u0063\u0074\u0069\u006f\u006ea\u0072\u0079");};_fdf ,_ege :=_fda (_aag .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));
if _ege !=nil {return _ege ;};_dg ,_ege :=_fda (_cac .Get ("\u0041\u006e\u006e\u006f\u0074\u0073"));if _ege !=nil {return _ege ;};if _cec :=_ee .compareAnnots (_gb ,_dg ,_fdf );_cec !=nil {return _cec ;};};for _ac :=_egg +1;_ac <=_bbb .Len ();_ac ++{_ee ._dd .addErrorWithDescription (_gb ,_db .Sprintf ("\u0070a\u0067e\u0020\u0023\u0025\u0064\u0020w\u0061\u0073 \u0061\u0064\u0064\u0065\u0064",_ac ));
};for _cgd :=_egg +1;_cgd <=_bdf .Len ();_cgd ++{_ee ._dd .addErrorWithDescription (_gb ,_db .Sprintf ("p\u0061g\u0065\u0020\u0023\u0025\u0064\u0020\u0077\u0061s\u0020\u0072\u0065\u006dov\u0065\u0064",_cgd ));};return nil ;};func (_cae *defaultDiffPolicy )compareAnnots (_ffeb int ,_deb ,_ffed []_cd .PdfObject )error {_cedd :=make (map[int64 ]*_cd .PdfObjectDictionary );
for _ ,_eee :=range _deb {_dddd ,_aeag :=_cd .GetIndirect (_eee );if !_aeag {return _d .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_gf ,_aeag :=_cd .GetDict (_dddd .PdfObject );
if !_aeag {return _d .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_cedd [_dddd .ObjectNumber ]=_gf ;};for _ ,_cbg :=range _ffed {_fcd ,_bcg :=_cd .GetIndirect (_cbg );
if !_bcg {return _d .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");};_dc ,_bcg :=_cd .GetDict (_fcd .PdfObject );if !_bcg {return _d .New ("\u0075\u006e\u0065\u0078p\u0065\u0063\u0074\u0065\u0064\u0020\u0061\u006e\u006e\u006ft\u0027s\u0020\u0073\u0074\u0072\u0075\u0063\u0074u\u0072\u0065");
};_cee ,_ :=_cd .GetStringVal (_dc .Get ("\u0054"));_def ,_ :=_cd .GetNameVal (_dc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if _ ,_ece :=_cedd [_fcd .ObjectNumber ];!_ece {switch _cae ._f {case NoRestrictions ,FillFormsAndAnnots :_cae ._dd .addWarningWithDescription (_ffeb ,_db .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_def ,_cee ));
default:_eggf ,_bg :=_cd .GetDict (_fcd .PdfObject );if !_bg {return _d .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_ccb ,_bg :=_cd .GetNameVal (_eggf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));
if !_bg {return _d .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");};if _ccb =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _cae ._f {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_cae ._dd .addWarningWithDescription (_ffeb ,_db .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_def ,_cee ));
default:_cae ._dd .addErrorWithDescription (_ffeb ,_db .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_def ,_cee ));};}else {_cae ._dd .addErrorWithDescription (_ffeb ,_db .Sprintf ("\u0025\u0073\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0025\u0073\u0020\u0077\u0061\u0073\u0020\u0061d\u0064\u0065\u0064",_def ,_cee ));
};};}else {delete (_cedd ,_fcd .ObjectNumber );if _ccf ,_ggf :=_cae ._cdb [_fcd .ObjectNumber ];_ggf {switch _cae ._f {case NoRestrictions ,FillFormsAndAnnots :_cae ._dd .addWarningWithDescription (_ffeb ,_db .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_def ,_cee ));
default:_gff ,_be :=_cd .GetIndirect (_ccf );if !_be {return _d .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");};_gaa ,_be :=_cd .GetDict (_gff .PdfObject );if !_be {return _d .New ("u\u006ed\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0061n\u006e\u006f\u0074\u0061ti\u006f\u006e");
};_ag ,_be :=_cd .GetNameVal (_gaa .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_be {return _d .New ("\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0027\u0073\u0020\u0073\u0075\u0062\u0074\u0079\u0070\u0065");
};if _ag =="\u0057\u0069\u0064\u0067\u0065\u0074"{switch _cae ._f {case NoRestrictions ,FillFormsAndAnnots ,FillForms :_cae ._dd .addWarningWithDescription (_ffeb ,_db .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_def ,_cee ));
default:_cae ._dd .addErrorWithDescription (_ffeb ,_db .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_def ,_cee ));};}else {_cae ._dd .addErrorWithDescription (_ffeb ,_db .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0063\u0068\u0061\u006eg\u0065\u0064",_def ,_cee ));
};};};};};for _ ,_agb :=range _cedd {_caeb ,_ :=_cd .GetStringVal (_agb .Get ("\u0054"));_bgb ,_ :=_cd .GetNameVal (_agb .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));switch _cae ._f {case NoRestrictions ,FillFormsAndAnnots :_cae ._dd .addWarningWithDescription (_ffeb ,_db .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_bgb ,_caeb ));
default:_cae ._dd .addErrorWithDescription (_ffeb ,_db .Sprintf ("\u0025\u0073\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0025s\u0020w\u0061\u0073\u0020\u0072\u0065\u006d\u006fv\u0065\u0064",_bgb ,_caeb ));};};return nil ;};func (_bbbc *DiffResults )addWarningWithDescription (_dcd int ,_fgc string ){if _bbbc .Warnings ==nil {_bbbc .Warnings =make ([]*DiffResult ,0);
};_bbbc .Warnings =append (_bbbc .Warnings ,&DiffResult {Revision :_dcd ,Description :_fgc });};func (_eec *DiffResults )addWarning (_feb *DiffResult ){if _eec .Warnings ==nil {_eec .Warnings =make ([]*DiffResult ,0);};_eec .Warnings =append (_eec .Warnings ,_feb );
};