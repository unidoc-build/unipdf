//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package docutil ;import (_ga "errors";_gb "fmt";_f "github.com/unidoc/unipdf/v3/common";_c "github.com/unidoc/unipdf/v3/core";);func (_eg *Catalog )GetMetadata ()(*_c .PdfObjectStream ,bool ){_db ,_fa :=_c .GetStream (_eg .Object .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"));
return _db ,_fa ;};func (_cgg *Document )AddIndirectObject (indirect *_c .PdfIndirectObject ){for _ ,_bc :=range _cgg .Objects {if _bc ==indirect {return ;};};_cgg .Objects =append (_cgg .Objects ,indirect );};type Image struct{Name string ;Width int ;
Height int ;Colorspace _c .PdfObjectName ;ColorComponents int ;BitsPerComponent int ;SMask *ImageSMask ;Stream *_c .PdfObjectStream ;};func (_afg Page )GetContents ()([]Content ,bool ){_ggcd ,_gdfg :=_c .GetArray (_afg .Object .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));
if !_gdfg {return nil ,false ;};_dbc :=make ([]Content ,_ggcd .Len ());for _bba ,_geb :=range _ggcd .Elements (){_ffg ,_dgg :=_c .GetStream (_geb );if !_dgg {continue ;};_dbc [_bba ]=Content {Stream :_ffg ,_agf :_afg ,_cfce :_bba };};return _dbc ,true ;
};type Page struct{_ec int ;Object *_c .PdfObjectDictionary ;_dbb *Document ;};type ImageSMask struct{Image *Image ;Stream *_c .PdfObjectStream ;};func (_ebf *Document )FindCatalog ()(*Catalog ,bool ){var _cc *_c .PdfObjectDictionary ;for _ ,_gf :=range _ebf .Objects {_ffa ,_aa :=_c .GetDict (_gf );
if !_aa {continue ;};if _edg ,_fgf :=_c .GetName (_ffa .Get ("\u0054\u0079\u0070\u0065"));_fgf &&*_edg =="\u0043a\u0074\u0061\u006c\u006f\u0067"{_cc =_ffa ;break ;};};if _cc ==nil {return nil ,false ;};return &Catalog {Object :_cc ,_e :_ebf },true ;};type OutputIntent struct{Object *_c .PdfObjectDictionary ;
};func (_cgf *Document )AddStream (stream *_c .PdfObjectStream ){for _ ,_dac :=range _cgf .Objects {if _dac ==stream {return ;};};_cgf .Objects =append (_cgf .Objects ,stream );};func (_ge *Catalog )SetMetadata (data []byte )error {_gd ,_a :=_c .MakeStream (data ,nil );
if _a !=nil {return _a ;};_gd .Set ("\u0054\u0079\u0070\u0065",_c .MakeName ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"));_gd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_c .MakeName ("\u0058\u004d\u004c"));_ge .Object .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_gd );
_ge ._e .Objects =append (_ge ._e .Objects ,_gd );return nil ;};func (_eacd *Content )SetData (data []byte )error {_ceg ,_dda :=_c .MakeStream (data ,_c .NewFlateEncoder ());if _dda !=nil {return _dda ;};_cbb ,_ :=_c .GetArray (_eacd ._agf .Object .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));
if _dda =_cbb .Set (_eacd ._cfce ,_ceg );_dda !=nil {return _dda ;};_eacd ._agf ._dbb .Objects =append (_eacd ._agf ._dbb .Objects ,_ceg );return nil ;};func (_gbf *Catalog )HasMetadata ()bool {_cag :=_gbf .Object .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");
return _cag !=nil ;};type OutputIntents struct{_cad *_c .PdfObjectArray ;_bb *Document ;_dbe *_c .PdfIndirectObject ;};func (_de Page )GetResources ()(*_c .PdfObjectDictionary ,bool ){return _c .GetDict (_de .Object .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s"));
};func (_af *Catalog )GetMarkInfo ()(*_c .PdfObjectDictionary ,bool ){_ag ,_fga :=_c .GetDict (_af .Object .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f"));return _ag ,_fga ;};func (_fd Page )FindXObjectForms ()[]*_c .PdfObjectStream {_def ,_bbf :=_fd .GetResourcesXObject ();
if !_bbf {return nil ;};_cdc :=map[*_c .PdfObjectStream ]struct{}{};for _ ,_dfd :=range _def .Keys (){_ecf ,_eee :=_c .GetStream (_def .Get (_dfd ));if !_eee {continue ;};if _ ,_aaa :=_cdc [_ecf ];_aaa {continue ;};_gcg ,_aea :=_c .GetName (_ecf .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));
if !_aea ||_gcg .String ()!="\u0046\u006f\u0072\u006d"{continue ;};_cdc [_ecf ]=struct{}{};};var _cea []*_c .PdfObjectStream ;for _bce :=range _cdc {_cea =append (_cea ,_bce );};return _cea ;};func (_cbe *Page )Number ()int {return _cbe ._ec };func (_ecd Page )FindXObjectImages ()([]*Image ,error ){_bbg ,_bfe :=_ecd .GetResourcesXObject ();
if !_bfe {return nil ,nil ;};var _be []*Image ;var _dd error ;_gfg :=map[*_c .PdfObjectStream ]int {};_bff :=map[*_c .PdfObjectStream ]struct{}{};var _ab int ;for _ ,_bd :=range _bbg .Keys (){_ace ,_bge :=_c .GetStream (_bbg .Get (_bd ));if !_bge {continue ;
};if _ ,_bdb :=_gfg [_ace ];_bdb {continue ;};_fbe ,_aee :=_c .GetName (_ace .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_aee ||_fbe .String ()!="\u0049\u006d\u0061g\u0065"{continue ;};_gdb :=Image {BitsPerComponent :8,Stream :_ace ,Name :string (_bd )};
if _gdb .Colorspace ,_dd =_ffe (_ace .PdfObjectDictionary .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));_dd !=nil {_f .Log .Error ("\u0045\u0072\u0072\u006f\u0072\u0020\u0064\u0065\u0074\u0065r\u006d\u0069\u006e\u0065\u0020\u0063\u006fl\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u0025\u0073",_dd );
continue ;};if _eec ,_cde :=_c .GetIntVal (_ace .PdfObjectDictionary .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_cde {_gdb .BitsPerComponent =_eec ;};if _deg ,_cae :=_c .GetIntVal (_ace .PdfObjectDictionary .Get ("\u0057\u0069\u0064t\u0068"));
_cae {_gdb .Width =_deg ;};if _bfeb ,_dga :=_c .GetIntVal (_ace .PdfObjectDictionary .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));_dga {_gdb .Height =_bfeb ;};if _bfc ,_eab :=_c .GetStream (_ace .Get ("\u0053\u004d\u0061s\u006b"));_eab {_gdb .SMask =&ImageSMask {Image :&_gdb ,Stream :_bfc };
_bff [_bfc ]=struct{}{};};switch _gdb .Colorspace {case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":_gdb .ColorComponents =3;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":_gdb .ColorComponents =1;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":_gdb .ColorComponents =4;
default:_gdb .ColorComponents =-1;};_gfg [_ace ]=_ab ;_be =append (_be ,&_gdb );_ab ++;};var _baa []int ;for _ ,_aed :=range _be {if _aed .SMask !=nil {_abg ,_eae :=_gfg [_aed .SMask .Stream ];if _eae {_baa =append (_baa ,_abg );};};};_ebb :=make ([]*Image ,len (_be )-len (_baa ));
_ab =0;_afa :for _gc ,_fc :=range _be {for _ ,_gebe :=range _baa {if _gc ==_gebe {continue _afa ;};};_ebb [_ab ]=_fc ;_ab ++;};return _be ,nil ;};func (_cf *Catalog )SetOutputIntents (outputIntents *OutputIntents ){if _gda :=_cf .Object .Get ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073");
_gda !=nil {for _ae ,_dg :=range _cf ._e .Objects {if _dg ==_gda {if outputIntents ._dbe ==_gda {return ;};_cf ._e .Objects =append (_cf ._e .Objects [:_ae ],_cf ._e .Objects [_ae +1:]...);break ;};};};_bad :=outputIntents ._dbe ;if _bad ==nil {_bad =_c .MakeIndirectObject (outputIntents ._cad );
};_cf .Object .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_bad );_cf ._e .Objects =append (_cf ._e .Objects ,_bad );};func (_gdf *OutputIntents )Add (oi _c .PdfObject )error {_ac ,_caa :=oi .(*_c .PdfObjectDictionary );
if !_caa {return _ga .New ("\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006et\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0061\u006e\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if _bbc ,_gbfe :=_c .GetStream (_ac .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));_gbfe {_gdf ._bb .Objects =append (_gdf ._bb .Objects ,_bbc );};_ee ,_egb :=oi .(*_c .PdfIndirectObject );
if !_egb {_ee =_c .MakeIndirectObject (oi );};if _gdf ._cad ==nil {_gdf ._cad =_c .MakeArray (_ee );}else {_gdf ._cad .Append (_ee );};_gdf ._bb .Objects =append (_gdf ._bb .Objects ,_ee );return nil ;};type Catalog struct{Object *_c .PdfObjectDictionary ;
_e *Document ;};func (_age *OutputIntents )Len ()int {return _age ._cad .Len ()};func _ffe (_cce _c .PdfObject )(_c .PdfObjectName ,error ){var _fb *_c .PdfObjectName ;var _dgd *_c .PdfObjectArray ;if _fbf ,_efb :=_cce .(*_c .PdfIndirectObject );_efb {if _acd ,_egd :=_fbf .PdfObject .(*_c .PdfObjectArray );
_egd {_dgd =_acd ;}else if _ce ,_ffae :=_fbf .PdfObject .(*_c .PdfObjectName );_ffae {_fb =_ce ;};}else if _fgb ,_gdfa :=_cce .(*_c .PdfObjectArray );_gdfa {_dgd =_fgb ;}else if _bg ,_ggc :=_cce .(*_c .PdfObjectName );_ggc {_fb =_bg ;};if _fb !=nil {switch *_fb {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_fb ,nil ;
case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_fb ,nil ;};};if _dgd !=nil &&_dgd .Len ()> 0{if _effc ,_feg :=_dgd .Get (0).(*_c .PdfObjectName );_feg {switch *_effc {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _dgd .Len ()==1{return *_effc ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_effc ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_effc ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_effc ,nil ;};};};return "",nil ;};type Document struct{ID [2]string ;Version _c .Version ;Objects []_c .PdfObject ;Info _c .PdfObject ;
Crypt *_c .PdfCrypt ;UseHashBasedID bool ;};func (_eac Page )GetResourcesXObject ()(*_c .PdfObjectDictionary ,bool ){_ad ,_ccg :=_eac .GetResources ();if !_ccg {return nil ,false ;};return _c .GetDict (_ad .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
};func (_bf *Catalog )GetOutputIntents ()(*OutputIntents ,bool ){_eb :=_bf .Object .Get ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073");if _eb ==nil {return nil ,false ;};_cb ,_faa :=_c .GetIndirect (_eb );if !_faa {return nil ,false ;
};_df ,_cfc :=_c .GetArray (_cb .PdfObject );if !_cfc {return nil ,false ;};return &OutputIntents {_dbe :_cb ,_cad :_df ,_bb :_bf ._e },true ;};func (_fgc *Document )GetPages ()([]Page ,bool ){_ccb ,_da :=_fgc .FindCatalog ();if !_da {return nil ,false ;
};return _ccb .GetPages ();};type Content struct{Stream *_c .PdfObjectStream ;_cfce int ;_agf Page ;};func (_cg *Catalog )NewOutputIntents ()*OutputIntents {return &OutputIntents {_bb :_cg ._e }};func (_ef *Catalog )SetMarkInfo (mi _c .PdfObject ){_ef .Object .Set ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f",mi );
_ef ._e .Objects =append (_ef ._e .Objects ,mi );};func (_ed *Catalog )SetVersion (){_ed .Object .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_c .MakeName (_gb .Sprintf ("\u0025\u0064\u002e%\u0064",_ed ._e .Version .Major ,_ed ._e .Version .Minor )));
};func (_fge *OutputIntents )Get (i int )(OutputIntent ,bool ){if _fge ._cad ==nil {return OutputIntent {},false ;};if i >=_fge ._cad .Len (){return OutputIntent {},false ;};_caf :=_fge ._cad .Get (i );_aca ,_cbg :=_c .GetIndirect (_caf );if !_cbg {_dc ,_dfc :=_c .GetDict (_caf );
return OutputIntent {Object :_dc },_dfc ;};_ffb ,_eda :=_c .GetDict (_aca .PdfObject );return OutputIntent {Object :_ffb },_eda ;};func (_fe *Catalog )GetPages ()([]Page ,bool ){_d ,_ff :=_c .GetDict (_fe .Object .Get ("\u0050\u0061\u0067e\u0073"));if !_ff {return nil ,false ;
};_edf ,_b :=_c .GetArray (_d .Get ("\u004b\u0069\u0064\u0073"));if !_b {return nil ,false ;};_ea :=make ([]Page ,_edf .Len ());for _ba ,_fg :=range _edf .Elements (){_ca ,_gg :=_c .GetDict (_fg );if !_gg {continue ;};_ea [_ba ]=Page {Object :_ca ,_ec :_ba +1,_dbb :_fe ._e };
};return _ea ,true ;};func (_gdae Content )GetData ()([]byte ,error ){_bfg ,_ccee :=_c .NewEncoderFromStream (_gdae .Stream );if _ccee !=nil {return nil ,_ccee ;};_gdg ,_ccee :=_bfg .DecodeStream (_gdae .Stream );if _ccee !=nil {return nil ,_ccee ;};return _gdg ,nil ;
};