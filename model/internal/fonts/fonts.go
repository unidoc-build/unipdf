//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_bf "bytes";_cg "encoding/binary";_c "errors";_d "fmt";_gg "github.com/unidoc/unipdf/v3/common";_e "github.com/unidoc/unipdf/v3/core";_cf "github.com/unidoc/unipdf/v3/internal/cmap";_g "github.com/unidoc/unipdf/v3/internal/textencoding";
_f "golang.org/x/xerrors";_dd "io";_bd "os";_de "regexp";_ba "sort";_a "strings";_bg "sync";);var _fbc *RuneCharSafeMap ;func (_feec *ttfParser )parseCmapFormat6 ()error {_dcec :=int (_feec .ReadUShort ());_eade :=int (_feec .ReadUShort ());_gg .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_feec ._bfea .String (),_dcec ,_eade );
for _eadf :=0;_eadf < _eade ;_eadf ++{_aceg :=GID (_feec .ReadUShort ());_feec ._bfea .Chars [rune (_eadf +_dcec )]=_aceg ;};return nil ;};var _afe *RuneCharSafeMap ;func (_ce StdFont )ToPdfObject ()_e .PdfObject {_fdb :=_e .MakeDict ();_fdb .Set ("\u0054\u0079\u0070\u0065",_e .MakeName ("\u0046\u006f\u006e\u0074"));
_fdb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_e .MakeName ("\u0054\u0079\u0070e\u0031"));_fdb .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_e .MakeName (_ce .Name ()));_fdb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ce ._bbf .ToPdfObject ());
return _e .MakeIndirectObject (_fdb );};var _gdc *RuneCharSafeMap ;func (_fbe *ttfParser )ParseComponents ()error {if _fc :=_fbe .ParseHead ();_fc !=nil {return _fc ;};if _deca :=_fbe .ParseHhea ();_deca !=nil {return _deca ;};if _bdfg :=_fbe .ParseMaxp ();
_bdfg !=nil {return _bdfg ;};if _ead :=_fbe .ParseHmtx ();_ead !=nil {return _ead ;};if _ ,_dbad :=_fbe ._fea ["\u006e\u0061\u006d\u0065"];_dbad {if _ggf :=_fbe .ParseName ();_ggf !=nil {return _ggf ;};};if _ ,_fg :=_fbe ._fea ["\u004f\u0053\u002f\u0032"];
_fg {if _gac :=_fbe .ParseOS2 ();_gac !=nil {return _gac ;};};if _ ,_deec :=_fbe ._fea ["\u0070\u006f\u0073\u0074"];_deec {if _gcc :=_fbe .ParsePost ();_gcc !=nil {return _gcc ;};};if _ ,_bgb :=_fbe ._fea ["\u0063\u006d\u0061\u0070"];_bgb {if _cec :=_fbe .ParseCmap ();
_cec !=nil {return _cec ;};};return nil ;};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _g .TextEncoder )StdFont {var _eda rune =0xA0;if _ ,_aga :=metrics .Read (_eda );!_aga {_dac ,_ :=metrics .Read (0x20);metrics .Write (_eda ,_dac );
};return StdFont {_bc :desc ,_cfe :metrics ,_bbf :encoder };};func (_ccge *ttfParser )ParseOS2 ()error {if _eccg :=_ccge .Seek ("\u004f\u0053\u002f\u0032");_eccg !=nil {return _eccg ;};_gca :=_ccge .ReadUShort ();_ccge .Skip (4*2);_ccge .Skip (11*2+10+4*4+4);
_cee :=_ccge .ReadUShort ();_ccge ._bfea .Bold =(_cee &32)!=0;_ccge .Skip (2*2);_ccge ._bfea .TypoAscender =_ccge .ReadShort ();_ccge ._bfea .TypoDescender =_ccge .ReadShort ();if _gca >=2{_ccge .Skip (3*2+2*4+2);_ccge ._bfea .CapHeight =_ccge .ReadShort ();
}else {_ccge ._bfea .CapHeight =0;};return nil ;};func (_eg *fontMap )write (_ee StdFontName ,_cgg func ()StdFont ){_eg .Lock ();defer _eg .Unlock ();_eg ._ea [_ee ]=_cgg ;};const (_dfg ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");
TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
);func (_fdf *ttfParser )ParseMaxp ()error {if _cfed :=_fdf .Seek ("\u006d\u0061\u0078\u0070");_cfed !=nil {return _cfed ;};_fdf .Skip (4);_fdf ._ega =_fdf .ReadUShort ();return nil ;};func _adg ()StdFont {_bcg .Do (_dcc );_eeb :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_eeb ,_fe );};func (_fge *ttfParser )ParseCmap ()error {var _ace int64 ;if _gfd :=_fge .Seek ("\u0063\u006d\u0061\u0070");_gfd !=nil {return _gfd ;};_gg .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_fge .ReadUShort ();
_fdcd :=int (_fge .ReadUShort ());_bee :=int64 (0);_dcca :=int64 (0);_fgd :=int64 (0);for _bgf :=0;_bgf < _fdcd ;_bgf ++{_gcec :=_fge .ReadUShort ();_bcgc :=_fge .ReadUShort ();_ace =int64 (_fge .ReadULong ());if _gcec ==3&&_bcgc ==1{_dcca =_ace ;}else if _gcec ==3&&_bcgc ==10{_fgd =_ace ;
}else if _gcec ==1&&_bcgc ==0{_bee =_ace ;};};if _bee !=0{if _adga :=_fge .parseCmapVersion (_bee );_adga !=nil {return _adga ;};};if _dcca !=0{if _ccga :=_fge .parseCmapSubtable31 (_dcca );_ccga !=nil {return _ccga ;};};if _fgd !=0{if _eefb :=_fge .parseCmapVersion (_fgd );
_eefb !=nil {return _eefb ;};};if _dcca ==0&&_bee ==0&&_fgd ==0{_gg .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func (_bgcd *ttfParser )Parse ()(TtfType ,error ){_eeag ,_bcc :=_bgcd .ReadStr (4);if _bcc !=nil {return TtfType {},_bcc ;};if _eeag =="\u004f\u0054\u0054\u004f"{return TtfType {},_f .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_e .ErrNotSupported );
};if _eeag !="\u0000\u0001\u0000\u0000"&&_eeag !="\u0074\u0072\u0075\u0065"{_gg .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_eeag );
};_cca :=int (_bgcd .ReadUShort ());_bgcd .Skip (3*2);_bgcd ._fea =make (map[string ]uint32 );var _bfeg string ;for _cbc :=0;_cbc < _cca ;_cbc ++{_bfeg ,_bcc =_bgcd .ReadStr (4);if _bcc !=nil {return TtfType {},_bcc ;};_bgcd .Skip (4);_abcc :=_bgcd .ReadULong ();
_bgcd .Skip (4);_bgcd ._fea [_bfeg ]=_abcc ;};_gg .Log .Trace (_eae (_bgcd ._fea ));if _bcc =_bgcd .ParseComponents ();_bcc !=nil {return TtfType {},_bcc ;};return _bgcd ._bfea ,nil ;};type RuneCharSafeMap struct{_ef map[rune ]CharMetrics ;_cfc _bg .RWMutex ;
};func _dfa ()StdFont {_gda .Do (_ebc );_dad :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_dad ,_ecb );};var _bcg _bg .Once ;func (_bbge *ttfParser )Skip (n int ){_bbge ._bef .Seek (int64 (n ),_dd .SeekCurrent )};var _dg =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););var _gdb =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func (_dddf *ttfParser )ReadUShort ()(_ecfe uint16 ){_cg .Read (_dddf ._bef ,_cg .BigEndian ,&_ecfe );return _ecfe ;};func (_fdg *RuneCharSafeMap )Length ()int {_fdg ._cfc .RLock ();defer _fdg ._cfc .RUnlock ();return len (_fdg ._ef );};func (_deg *ttfParser )ParseHead ()error {if _ggc :=_deg .Seek ("\u0068\u0065\u0061\u0064");
_ggc !=nil {return _ggc ;};_deg .Skip (3*4);_aeb :=_deg .ReadULong ();if _aeb !=0x5F0F3CF5{_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_deg );
};_deg .Skip (2);_deg ._bfea .UnitsPerEm =_deg .ReadUShort ();_deg .Skip (2*8);_deg ._bfea .Xmin =_deg .ReadShort ();_deg ._bfea .Ymin =_deg .ReadShort ();_deg ._bfea .Xmax =_deg .ReadShort ();_deg ._bfea .Ymax =_deg .ReadShort ();return nil ;};func _bcb ()StdFont {_bce .Do (_aec );
_fda :=Descriptor {Name :TimesRomanName ,Family :_dfg ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};return NewStdFont (_fda ,_dgb );
};func _bgc ()StdFont {_fec :=_g .NewSymbolEncoder ();_ebf :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_ebf ,_bdd ,_fec );};func IsStdFont (name StdFontName )bool {_ ,_da :=_ad .read (name );return _da };var _ Font =StdFont {};type CharMetrics struct{Wx float64 ;Wy float64 ;};func (_fed *TtfType )String ()string {return _d .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_fed .PostScriptName ,_fed .UnitsPerEm ,_fed .Bold ,_fed .ItalicAngle ,_fed .CapHeight ,len (_fed .Chars ),len (_fed .GlyphNames ));
};func (_aee *ttfParser )parseCmapVersion (_gbd int64 )error {_gg .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_gbd );if _aee ._bfea .Chars ==nil {_aee ._bfea .Chars =make (map[rune ]GID );
};_aee ._bef .Seek (int64 (_aee ._fea ["\u0063\u006d\u0061\u0070"])+_gbd ,_dd .SeekStart );var _bgd ,_fgec uint32 ;_bbcg :=_aee .ReadUShort ();if _bbcg < 8{_bgd =uint32 (_aee .ReadUShort ());_fgec =uint32 (_aee .ReadUShort ());}else {_aee .ReadUShort ();
_bgd =_aee .ReadULong ();_fgec =_aee .ReadULong ();};_gg .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_bbcg ,_bgd ,_fgec );
switch _bbcg {case 0:return _aee .parseCmapFormat0 ();case 6:return _aee .parseCmapFormat6 ();case 12:return _aee .parseCmapFormat12 ();default:_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_bbcg );
return nil ;};};func _gbbe ()StdFont {_gda .Do (_ebc );_ecg :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_ecg ,_gf );};func init (){RegisterStdFont (CourierName ,_eb ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");RegisterStdFont (CourierBoldName ,_gbbe ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (CourierObliqueName ,_dfa ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");RegisterStdFont (CourierBoldObliqueName ,_dbg ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");
};func _ffa ()StdFont {_bce .Do (_aec );_afea :=Descriptor {Name :TimesBoldName ,Family :_dfg ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_afea ,_afef );};func (_ecec *ttfParser )parseCmapFormat0 ()error {_egf ,_edg :=_ecec .ReadStr (256);if _edg !=nil {return _edg ;};_fee :=[]byte (_egf );_gg .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_ecec ._bfea .String (),_egf ,_fee );
for _eff ,_gdda :=range _fee {_ecec ._bfea .Chars [rune (_eff )]=GID (_gdda );};return nil ;};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");
CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
);func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_adb :=_ad .read (name );_adb {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_ad .write (name ,fnc );for _ ,_gge :=range aliases {RegisterStdFont (_gge ,fnc );};};func (_cea *ttfParser )Seek (tag string )error {_cfdd ,_bced :=_cea ._fea [tag ];if !_bced {return _d .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );
};_cea ._bef .Seek (int64 (_cfdd ),_dd .SeekStart );return nil ;};type ttfParser struct{_bfea TtfType ;_bef _dd .ReadSeeker ;_fea map[string ]uint32 ;_dba uint16 ;_ega uint16 ;};var _efd =&RuneCharSafeMap {_ef :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func (_cdd StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_gdd ,_agaa :=_cdd ._cfe .Read (r );return _gdd ,_agaa ;};type fontMap struct{_bg .Mutex ;_ea map[StdFontName ]func ()StdFont ;};func (_gdg *TtfType )MakeEncoder ()(_g .SimpleEncoder ,error ){_dae :=make (map[_g .CharCode ]GlyphName );
for _afeg :=_g .CharCode (0);_afeg <=256;_afeg ++{_bafg :=rune (_afeg );_fae ,_ccf :=_gdg .Chars [_bafg ];if !_ccf {continue ;};var _cce GlyphName ;if int (_fae )>=0&&int (_fae )< len (_gdg .GlyphNames ){_cce =_gdg .GlyphNames [_fae ];}else {_bbc :=rune (_fae );
if _efcb ,_cfcg :=_g .RuneToGlyph (_bbc );_cfcg {_cce =_efcb ;};};if _cce !=""{_dae [_afeg ]=_cce ;};};if len (_dae )==0{_gg .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_gdg ,_gdg .Chars );
};return _g .NewCustomSimpleTextEncoder (_dae ,nil );};var _bdd =&RuneCharSafeMap {_ef :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func init (){RegisterStdFont (HelveticaName ,_bff ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_bcd ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_adg ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (HelveticaBoldObliqueName ,_cddc ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");};var _bce _bg .Once ;func _eae (_ggec map[string ]uint32 )string {var _ggb []string ;for _abe :=range _ggec {_ggb =append (_ggb ,_abe );
};_ba .Slice (_ggb ,func (_aea ,_dfga int )bool {return _ggec [_ggb [_aea ]]< _ggec [_ggb [_dfga ]]});_ccg :=[]string {_d .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_ggec ))};
for _ ,_gfe :=range _ggb {_ccg =append (_ccg ,_d .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_gfe ,_ggec [_gfe ]));};return _a .Join (_ccg ,"\u000a");};var _gf *RuneCharSafeMap ;var _afef *RuneCharSafeMap ;func (_gga *ttfParser )parseCmapSubtable10 (_ffbd int64 )error {if _gga ._bfea .Chars ==nil {_gga ._bfea .Chars =make (map[rune ]GID );
};_gga ._bef .Seek (int64 (_gga ._fea ["\u0063\u006d\u0061\u0070"])+_ffbd ,_dd .SeekStart );var _dbe ,_bfb uint32 ;_gff :=_gga .ReadUShort ();if _gff < 8{_dbe =uint32 (_gga .ReadUShort ());_bfb =uint32 (_gga .ReadUShort ());}else {_gga .ReadUShort ();_dbe =_gga .ReadULong ();
_bfb =_gga .ReadULong ();};_gg .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_gff ,_dbe ,_bfb );
if _gff !=0{return _c .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ffg ,_ddd :=_gga .ReadStr (256);if _ddd !=nil {return _ddd ;
};_fbb :=[]byte (_ffg );for _dea ,_ac :=range _fbb {_gga ._bfea .Chars [rune (_dea )]=GID (_ac );if _ac !=0{_d .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_dea ,_ac ,rune (_ac ));
};};return nil ;};var _ab *RuneCharSafeMap ;var _fca =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
func _aec (){_dgb =MakeRuneCharSafeMap (len (_gdb ));_afef =MakeRuneCharSafeMap (len (_gdb ));_fbc =MakeRuneCharSafeMap (len (_gdb ));_gdc =MakeRuneCharSafeMap (len (_gdb ));for _faa ,_cbde :=range _gdb {_dgb .Write (_cbde ,CharMetrics {Wx :float64 (_bcbg [_faa ])});
_afef .Write (_cbde ,CharMetrics {Wx :float64 (_gba [_faa ])});_fbc .Write (_cbde ,CharMetrics {Wx :float64 (_ceb [_faa ])});_gdc .Write (_cbde ,CharMetrics {Wx :float64 (_cfd [_faa ])});};};var _bcbg =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func _dbg ()StdFont {_gda .Do (_ebc );_fbd :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_fbd ,_ab );};func _bff ()StdFont {_bcg .Do (_dcc );_agg :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_agg ,_bae );};func (_ccce *ttfParser )ReadStr (length int )(string ,error ){_bge :=make ([]byte ,length );_edbd ,_eee :=_ccce ._bef .Read (_bge );if _eee !=nil {return "",_eee ;}else if _edbd !=length {return "",_d .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_bge ),nil ;};func _fbff ()StdFont {_bce .Do (_aec );_ffb :=Descriptor {Name :TimesItalicName ,Family :_dfg ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_ffb ,_gdc );};func init (){RegisterStdFont (SymbolName ,_bgc ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_cbd );};func _cddc ()StdFont {_bcg .Do (_dcc );_cc :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_cc ,_eef );};func (_gcaa *ttfParser )ReadULong ()(_efded uint32 ){_cg .Read (_gcaa ._bef ,_cg .BigEndian ,&_efded );return _efded ;};func (_cgd StdFont )Name ()string {return string (_cgd ._bc .Name )};func _ebc (){const _dec =600;_be =MakeRuneCharSafeMap (len (_gdb ));
for _ ,_agb :=range _gdb {_be .Write (_agb ,CharMetrics {Wx :_dec });};_gf =_be .Copy ();_ab =_be .Copy ();_ecb =_be .Copy ();};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");
HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065");
);func init (){RegisterStdFont (TimesRomanName ,_bcb ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_ffa ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_fbff ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_edd ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func NewFontFile2FromPdfObject (obj _e .PdfObject )(TtfType ,error ){obj =_e .TraceToDirectObject (obj );_ebe ,_ccea :=obj .(*_e .PdfObjectStream );if !_ccea {_gg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_e .ErrTypeError ;};_agf ,_aed :=_e .DecodeStream (_ebe );if _aed !=nil {return TtfType {},_aed ;};_gdcb :=ttfParser {_bef :_bf .NewReader (_agf )};return _gdcb .Parse ();};func (_df StdFont )GetMetricsTable ()*RuneCharSafeMap {return _df ._cfe };
type StdFontName string ;func (_bafa *RuneCharSafeMap )Range (f func (_efc rune ,_ca CharMetrics )(_dc bool )){_bafa ._cfc .RLock ();defer _bafa ._cfc .RUnlock ();for _bfe ,_dee :=range _bafa ._ef {if f (_bfe ,_dee ){break ;};};};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_ef :make (map[rune ]CharMetrics ,length )};
};type StdFont struct{_bc Descriptor ;_cfe *RuneCharSafeMap ;_bbf _g .TextEncoder ;};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_gd ,_aa :=_ad .read (name );if !_aa {return StdFont {},false ;};return _gd (),true ;};func (_fa StdFont )Encoder ()_g .TextEncoder {return _fa ._bbf };
type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;
Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func _bcd ()StdFont {_bcg .Do (_dcc );_cb :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_cb ,_afe );};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_g .NewStandardEncoder ());};var _ad =&fontMap {_ea :make (map[StdFontName ]func ()StdFont )};func _dcc (){_bae =MakeRuneCharSafeMap (len (_gdb ));
_afe =MakeRuneCharSafeMap (len (_gdb ));for _eea ,_fdc :=range _gdb {_bae .Write (_fdc ,CharMetrics {Wx :float64 (_dg [_eea ])});_afe .Write (_fdc ,CharMetrics {Wx :float64 (_dab [_eea ])});};_fe =_bae .Copy ();_eef =_afe .Copy ();};func (_ga CharMetrics )String ()string {return _d .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_ga .Wx ,_ga .Wy );
};func (_ecc *ttfParser )ParseName ()error {if _gdde :=_ecc .Seek ("\u006e\u0061\u006d\u0065");_gdde !=nil {return _gdde ;};_efg ,_ :=_ecc ._bef .Seek (0,_dd .SeekCurrent );_ecc ._bfea .PostScriptName ="";_ecc .Skip (2);_fgee :=_ecc .ReadUShort ();_gaf :=_ecc .ReadUShort ();
for _ccc :=uint16 (0);_ccc < _fgee &&_ecc ._bfea .PostScriptName =="";_ccc ++{_ecc .Skip (3*2);_aff :=_ecc .ReadUShort ();_ddda :=_ecc .ReadUShort ();_gaec :=_ecc .ReadUShort ();if _aff ==6{_ecc ._bef .Seek (_efg +int64 (_gaf )+int64 (_gaec ),_dd .SeekStart );
_acb ,_bdc :=_ecc .ReadStr (int (_ddda ));if _bdc !=nil {return _bdc ;};_acb =_a .Replace (_acb ,"\u0000","",-1);_abb ,_bdc :=_de .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _bdc !=nil {return _bdc ;};
_ecc ._bfea .PostScriptName =_abb .ReplaceAllString (_acb ,"");};};if _ecc ._bfea .PostScriptName ==""{_gg .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func _cbd ()StdFont {_ae :=_g .NewZapfDingbatsEncoder ();_ede :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_ede ,_efd ,_ae );};func (_bdf StdFont )Descriptor ()Descriptor {return _bdf ._bc };var _ceb =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
var _ecb *RuneCharSafeMap ;var _eef *RuneCharSafeMap ;func (_ece *ttfParser )ParseHmtx ()error {if _bea :=_ece .Seek ("\u0068\u006d\u0074\u0078");_bea !=nil {return _bea ;};_ece ._bfea .Widths =make ([]uint16 ,0,8);for _gae :=uint16 (0);_gae < _ece ._dba ;
_gae ++{_ece ._bfea .Widths =append (_ece ._bfea .Widths ,_ece .ReadUShort ());_ece .Skip (2);};if _ece ._dba < _ece ._ega &&_ece ._dba > 0{_dfe :=_ece ._bfea .Widths [_ece ._dba -1];for _gce :=_ece ._dba ;_gce < _ece ._ega ;_gce ++{_ece ._bfea .Widths =append (_ece ._bfea .Widths ,_dfe );
};};return nil ;};func (_fgg *ttfParser )Read32Fixed ()float64 {_eaaa :=float64 (_fgg .ReadShort ());_cggg :=float64 (_fgg .ReadUShort ())/65536.0;return _eaaa +_cggg ;};var _gda _bg .Once ;func (_feg *ttfParser )ParsePost ()error {if _abg :=_feg .Seek ("\u0070\u006f\u0073\u0074");
_abg !=nil {return _abg ;};_eeg :=_feg .Read32Fixed ();_feg ._bfea .ItalicAngle =_feg .Read32Fixed ();_feg ._bfea .UnderlinePosition =_feg .ReadShort ();_feg ._bfea .UnderlineThickness =_feg .ReadShort ();_feg ._bfea .IsFixedPitch =_feg .ReadULong ()!=0;
_feg .ReadULong ();_feg .ReadULong ();_feg .ReadULong ();_feg .ReadULong ();_gg .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_eeg );switch _eeg {case 1.0:_feg ._bfea .GlyphNames =_fca ;
case 2.0:_gbe :=int (_feg .ReadUShort ());_cba :=make ([]int ,_gbe );_feg ._bfea .GlyphNames =make ([]GlyphName ,_gbe );_aecb :=-1;for _eafc :=0;_eafc < _gbe ;_eafc ++{_bda :=int (_feg .ReadUShort ());_cba [_eafc ]=_bda ;if _bda <=0x7fff&&_bda > _aecb {_aecb =_bda ;
};};var _bfbd []GlyphName ;if _aecb >=len (_fca ){_bfbd =make ([]GlyphName ,_aecb -len (_fca )+1);for _gaeb :=0;_gaeb < _aecb -len (_fca )+1;_gaeb ++{_gddad :=int (_feg .readByte ());_fcf ,_ffe :=_feg .ReadStr (_gddad );if _ffe !=nil {return _ffe ;};_bfbd [_gaeb ]=GlyphName (_fcf );
};};for _fede :=0;_fede < _gbe ;_fede ++{_adbf :=_cba [_fede ];if _adbf < len (_fca ){_feg ._bfea .GlyphNames [_fede ]=_fca [_adbf ];}else if _adbf >=len (_fca )&&_adbf <=32767{_feg ._bfea .GlyphNames [_fede ]=_bfbd [_adbf -len (_fca )];}else {_feg ._bfea .GlyphNames [_fede ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";
};};case 2.5:_eag :=make ([]int ,_feg ._ega );for _cbe :=0;_cbe < len (_eag );_cbe ++{_cda :=int (_feg .ReadSByte ());_eag [_cbe ]=_cbe +1+_cda ;};_feg ._bfea .GlyphNames =make ([]GlyphName ,len (_eag ));for _add :=0;_add < len (_feg ._bfea .GlyphNames );
_add ++{_baa :=_fca [_eag [_add ]];_feg ._bfea .GlyphNames [_add ]=_baa ;};case 3.0:_gg .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_gg .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_eeg );};return nil ;};func TtfParse (r _dd .ReadSeeker )(TtfType ,error ){_efde :=&ttfParser {_bef :r };
return _efde .Parse ()};func (_bbe *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_bbe ._cfc .RLock ();defer _bbe ._cfc .RUnlock ();_db ,_bac :=_bbe ._ef [b ];return _db ,_bac ;};func (_bcde *ttfParser )ParseHhea ()error {if _dada :=_bcde .Seek ("\u0068\u0068\u0065\u0061");
_dada !=nil {return _dada ;};_bcde .Skip (4+15*2);_bcde ._dba =_bcde .ReadUShort ();return nil ;};func (_gfed *ttfParser )ReadSByte ()(_ddfd int8 ){_cg .Read (_gfed ._bef ,_cg .BigEndian ,&_ddfd );return _ddfd ;};func (_cgb *TtfType )MakeToUnicode ()*_cf .CMap {_bbg :=make (map[_cf .CharCode ]rune );
if len (_cgb .GlyphNames )==0{return _cf .NewToUnicodeCMap (_bbg );};for _age ,_fbda :=range _cgb .Chars {_bafd :=_cf .CharCode (_age );_abc :=_cgb .GlyphNames [_fbda ];_cggb ,_dadg :=_g .GlyphToRune (_abc );if !_dadg {_gg .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_age ,_abc );
_cggb =_g .MissingCodeRune ;};_bbg [_bafd ]=_cggb ;};return _cf .NewToUnicodeCMap (_bbg );};func (_cdg *TtfType )NewEncoder ()_g .TextEncoder {return _g .NewTrueTypeFontEncoder (_cdg .Chars )};var _dab =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func _eb ()StdFont {_gda .Do (_ebc );_fdd :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_fdd ,_be );};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);var _be *RuneCharSafeMap ;var _gba =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
type GID =_g .GID ;func _edd ()StdFont {_bce .Do (_aec );_afed :=Descriptor {Name :TimesBoldItalicName ,Family :_dfg ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_afed ,_fbc );};var _fe *RuneCharSafeMap ;type Font interface{Encoder ()_g .TextEncoder ;GetRuneMetrics (_fd rune )(CharMetrics ,bool );};func (_ec *fontMap )read (_ddf StdFontName )(func ()StdFont ,bool ){_ec .Lock ();defer _ec .Unlock ();
_fbf ,_ff :=_ec ._ea [_ddf ];return _fbf ,_ff ;};type FontWeight int ;func (_fb *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_fb ._cfc .Lock ();defer _fb ._cfc .Unlock ();_fb ._ef [b ]=r ;};var _bae *RuneCharSafeMap ;func (_edf *ttfParser )parseCmapFormat12 ()error {_fef :=_edf .ReadULong ();
_gg .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_edf ._bfea .String (),_fef );for _aeg :=uint32 (0);_aeg < _fef ;
_aeg ++{_dga :=_edf .ReadULong ();_fbbe :=_edf .ReadULong ();_ggda :=_edf .ReadULong ();if _dga > 0x0010FFFF||(0xD800<=_dga &&_dga <=0xDFFF){return _c .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _fbbe < _dga ||_fbbe > 0x0010FFFF||(0xD800<=_fbbe &&_fbbe <=0xDFFF){return _c .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _decf :=_dga ;_decf <=_fbbe ;
_decf ++{if _decf > 0x10FFFF{_gg .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_edf ._bfea .Chars [rune (_decf )]=GID (_ggda );_ggda ++;};};return nil ;};var _dgb *RuneCharSafeMap ;func (_cd *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_ed :=MakeRuneCharSafeMap (_cd .Length ());_cd .Range (func (_gb rune ,_baf CharMetrics )(_bb bool ){_ed ._ef [_gb ]=_baf ;
return false });return _ed ;};func TtfParseFile (fileStr string )(TtfType ,error ){_cbg ,_bed :=_bd .Open (fileStr );if _bed !=nil {return TtfType {},_bed ;};defer _cbg .Close ();return TtfParse (_cbg );};func (_abd *ttfParser )parseCmapSubtable31 (_fcg int64 )error {_ge :=make ([]rune ,0,8);
_decc :=make ([]rune ,0,8);_ccfc :=make ([]int16 ,0,8);_bbda :=make ([]uint16 ,0,8);_abd ._bfea .Chars =make (map[rune ]GID );_abd ._bef .Seek (int64 (_abd ._fea ["\u0063\u006d\u0061\u0070"])+_fcg ,_dd .SeekStart );_agee :=_abd .ReadUShort ();if _agee !=4{return _f .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_agee ,_e .ErrNotSupported );
};_abd .Skip (2*2);_beb :=int (_abd .ReadUShort ()/2);_abd .Skip (3*2);for _agga :=0;_agga < _beb ;_agga ++{_decc =append (_decc ,rune (_abd .ReadUShort ()));};_abd .Skip (2);for _ddc :=0;_ddc < _beb ;_ddc ++{_ge =append (_ge ,rune (_abd .ReadUShort ()));
};for _ffd :=0;_ffd < _beb ;_ffd ++{_ccfc =append (_ccfc ,_abd .ReadShort ());};_gfee ,_ :=_abd ._bef .Seek (int64 (0),_dd .SeekCurrent );for _aaa :=0;_aaa < _beb ;_aaa ++{_bbda =append (_bbda ,_abd .ReadUShort ());};for _edae :=0;_edae < _beb ;_edae ++{_dge :=_ge [_edae ];
_gcb :=_decc [_edae ];_fbec :=_ccfc [_edae ];_cag :=_bbda [_edae ];if _cag > 0{_abd ._bef .Seek (_gfee +2*int64 (_edae )+int64 (_cag ),_dd .SeekStart );};for _ebg :=_dge ;_ebg <=_gcb ;_ebg ++{if _ebg ==0xFFFF{break ;};var _dgf int32 ;if _cag > 0{_dgf =int32 (_abd .ReadUShort ());
if _dgf > 0{_dgf +=int32 (_fbec );};}else {_dgf =_ebg +int32 (_fbec );};if _dgf >=65536{_dgf -=65536;};if _dgf > 0{_abd ._bfea .Chars [_ebg ]=GID (_dgf );};};};return nil ;};var _cfd =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};type GlyphName =_g .GlyphName ;
func (_ccd *ttfParser )ReadShort ()(_aegf int16 ){_cg .Read (_ccd ._bef ,_cg .BigEndian ,&_aegf );return _aegf ;};func (_bedg *ttfParser )readByte ()(_dbc uint8 ){_cg .Read (_bedg ._bef ,_cg .BigEndian ,&_dbc );return _dbc ;};