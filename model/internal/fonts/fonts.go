//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_gd "bytes";_cf "encoding/binary";_eg "errors";_e "fmt";_ga "github.com/unidoc/unipdf/v3/common";_f "github.com/unidoc/unipdf/v3/core";_b "github.com/unidoc/unipdf/v3/internal/cmap";_ed "github.com/unidoc/unipdf/v3/internal/textencoding";
_gca "golang.org/x/xerrors";_gc "io";_d "os";_ce "regexp";_ee "sort";_c "strings";_gf "sync";);func (_ddab *TtfType )MakeEncoder ()(_ed .SimpleEncoder ,error ){_cdg :=make (map[_ed .CharCode ]GlyphName );for _fbd :=_ed .CharCode (0);_fbd <=256;_fbd ++{_gccg :=rune (_fbd );
_fa ,_aab :=_ddab .Chars [_gccg ];if !_aab {continue ;};var _dfg GlyphName ;if int (_fa )>=0&&int (_fa )< len (_ddab .GlyphNames ){_dfg =_ddab .GlyphNames [_fa ];}else {_fgg :=rune (_fa );if _aded ,_cfa :=_ed .RuneToGlyph (_fgg );_cfa {_dfg =_aded ;};};
if _dfg !=""{_cdg [_fbd ]=_dfg ;};};if len (_cdg )==0{_ga .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_ddab ,_ddab .Chars );
};return _ed .NewCustomSimpleTextEncoder (_cdg ,nil );};func NewFontFile2FromPdfObject (obj _f .PdfObject )(TtfType ,error ){obj =_f .TraceToDirectObject (obj );_baf ,_dca :=obj .(*_f .PdfObjectStream );if !_dca {_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_f .ErrTypeError ;};_ddcd ,_gdf :=_f .DecodeStream (_baf );if _gdf !=nil {return TtfType {},_gdf ;};_fbce :=ttfParser {_dcfa :_gd .NewReader (_ddcd )};return _fbce .Parse ();};func (_feaf *TtfType )NewEncoder ()_ed .TextEncoder {return _ed .NewTrueTypeFontEncoder (_feaf .Chars )};
func _fea ()StdFont {_cdf .Do (_dgg );_daa :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_daa ,_ea );};type Font interface{Encoder ()_ed .TextEncoder ;GetRuneMetrics (_eeg rune )(CharMetrics ,bool );};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_cdc ,_ge :=_cb .read (name );if !_ge {return StdFont {},false ;
};return _cdc (),true ;};func _egff ()StdFont {_dga .Do (_ffe );_ebdc :=Descriptor {Name :TimesItalicName ,Family :_fge ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_ebdc ,_adg );};func (_ddb *ttfParser )ParseHead ()error {if _ace :=_ddb .Seek ("\u0068\u0065\u0061\u0064");_ace !=nil {return _ace ;};_ddb .Skip (3*4);_agc :=_ddb .ReadULong ();if _agc !=0x5F0F3CF5{_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_ddb );
};_ddb .Skip (2);_ddb ._afb .UnitsPerEm =_ddb .ReadUShort ();_ddb .Skip (2*8);_ddb ._afb .Xmin =_ddb .ReadShort ();_ddb ._afb .Ymin =_ddb .ReadShort ();_ddb ._afb .Xmax =_ddb .ReadShort ();_ddb ._afb .Ymax =_ddb .ReadShort ();return nil ;};var _beg *RuneCharSafeMap ;
const (_fge ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");
TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););func TtfParseFile (fileStr string )(TtfType ,error ){_dbf ,_cda :=_d .Open (fileStr );if _cda !=nil {return TtfType {},_cda ;};
defer _dbf .Close ();return TtfParse (_dbf );};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_dd :make (map[rune ]CharMetrics ,length )};};func _cddc (_cad map[string ]uint32 )string {var _dea []string ;for _cfcd :=range _cad {_dea =append (_dea ,_cfcd );
};_ee .Slice (_dea ,func (_dbg ,_ccce int )bool {return _cad [_dea [_dbg ]]< _cad [_dea [_ccce ]]});_aegfa :=[]string {_e .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_cad ))};
for _ ,_cde :=range _dea {_aegfa =append (_aegfa ,_e .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_cde ,_cad [_cde ]));};return _c .Join (_aegfa ,"\u000a");};var _daag *RuneCharSafeMap ;var _caa =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func (_da StdFont )Descriptor ()Descriptor {return _da ._aeb };var _cfc =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func (_dba *ttfParser )ParseOS2 ()error {if _gaeg :=_dba .Seek ("\u004f\u0053\u002f\u0032");_gaeg !=nil {return _gaeg ;};_aaf :=_dba .ReadUShort ();_dba .Skip (4*2);_dba .Skip (11*2+10+4*4+4);_acde :=_dba .ReadUShort ();_dba ._afb .Bold =(_acde &32)!=0;
_dba .Skip (2*2);_dba ._afb .TypoAscender =_dba .ReadShort ();_dba ._afb .TypoDescender =_dba .ReadShort ();if _aaf >=2{_dba .Skip (3*2+2*4+2);_dba ._afb .CapHeight =_dba .ReadShort ();}else {_dba ._afb .CapHeight =0;};return nil ;};var _dcb _gf .Once ;
func (_bfa StdFont )Name ()string {return string (_bfa ._aeb .Name )};func (_ddcb *ttfParser )ReadShort ()(_fgcg int16 ){_cf .Read (_ddcb ._dcfa ,_cf .BigEndian ,&_fgcg );return _fgcg ;};func (_cd *fontMap )write (_ae StdFontName ,_ebe func ()StdFont ){_cd .Lock ();
defer _cd .Unlock ();_cd ._ccb [_ae ]=_ebe ;};func (_db StdFont )ToPdfObject ()_f .PdfObject {_bb :=_f .MakeDict ();_bb .Set ("\u0054\u0079\u0070\u0065",_f .MakeName ("\u0046\u006f\u006e\u0074"));_bb .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_f .MakeName ("\u0054\u0079\u0070e\u0031"));
_bb .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_f .MakeName (_db .Name ()));_bb .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_db ._fb .ToPdfObject ());return _f .MakeIndirectObject (_bb );};func _dg ()StdFont {_dcb .Do (_cbed );
_bgea :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};return NewStdFont (_bgea ,_ade );
};func (_ca StdFont )GetMetricsTable ()*RuneCharSafeMap {return _ca ._fdf };type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;
XHeight float64 ;StemV float64 ;StemH float64 ;};var _cgd =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func (_bee *ttfParser )readByte ()(_edfa uint8 ){_cf .Read (_bee ._dcfa ,_cf .BigEndian ,&_edfa );return _edfa ;};func IsStdFont (name StdFontName )bool {_ ,_gdb :=_cb .read (name );return _gdb };func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_bgge :=_cb .read (name );
_bgge {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));};_cb .write (name ,fnc );for _ ,_cbe :=range aliases {RegisterStdFont (_cbe ,fnc );};};var _acag =&RuneCharSafeMap {_dd :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func _dcf ()StdFont {_dga .Do (_ffe );_gbc :=Descriptor {Name :TimesRomanName ,Family :_fge ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_gbc ,_bcd );};func init (){RegisterStdFont (CourierName ,_aegf ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");RegisterStdFont (CourierBoldName ,_ccd ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (CourierObliqueName ,_fdg ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");RegisterStdFont (CourierBoldObliqueName ,_dg ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_ebbf *ttfParser )parseCmapFormat12 ()error {_efc :=_ebbf .ReadULong ();_ga .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_ebbf ._afb .String (),_efc );
for _gbgf :=uint32 (0);_gbgf < _efc ;_gbgf ++{_dec :=_ebbf .ReadULong ();_fgab :=_ebbf .ReadULong ();_agcf :=_ebbf .ReadULong ();if _dec > 0x0010FFFF||(0xD800<=_dec &&_dec <=0xDFFF){return _eg .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _fgab < _dec ||_fgab > 0x0010FFFF||(0xD800<=_fgab &&_fgab <=0xDFFF){return _eg .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _ead :=_dec ;_ead <=_fgab ;
_ead ++{if _ead > 0x10FFFF{_ga .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_ebbf ._afb .Chars [rune (_ead )]=GID (_agcf );_agcf ++;};};return nil ;};var _gce *RuneCharSafeMap ;func _ddc ()StdFont {_dga .Do (_ffe );_ged :=Descriptor {Name :TimesBoldItalicName ,Family :_fge ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_ged ,_geb );};func (_gfb *TtfType )MakeToUnicode ()*_b .CMap {_ccab :=make (map[_b .CharCode ]rune );if len (_gfb .GlyphNames )==0{return _b .NewToUnicodeCMap (_ccab );};for _gbd ,_aadg :=range _gfb .Chars {_gfbd :=_b .CharCode (_gbd );
_geg :=_gfb .GlyphNames [_aadg ];_cgf ,_fbc :=_ed .GlyphToRune (_geg );if !_fbc {_ga .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_gbd ,_geg );
_cgf =_ed .MissingCodeRune ;};_ccab [_gfbd ]=_cgf ;};return _b .NewToUnicodeCMap (_ccab );};func (_egb StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_efd ,_aeg :=_egb ._fdf .Read (r );return _efd ,_aeg ;};func _ffe (){_bcd =MakeRuneCharSafeMap (len (_bd ));
_beg =MakeRuneCharSafeMap (len (_bd ));_geb =MakeRuneCharSafeMap (len (_bd ));_adg =MakeRuneCharSafeMap (len (_bd ));for _bc ,_aeca :=range _bd {_bcd .Write (_aeca ,CharMetrics {Wx :float64 (_cgd [_bc ])});_beg .Write (_aeca ,CharMetrics {Wx :float64 (_cfc [_bc ])});
_geb .Write (_aeca ,CharMetrics {Wx :float64 (_caa [_bc ])});_adg .Write (_aeca ,CharMetrics {Wx :float64 (_eegd [_bc ])});};};func (_bdf *ttfParser )Parse ()(TtfType ,error ){_ffc ,_eea :=_bdf .ReadStr (4);if _eea !=nil {return TtfType {},_eea ;};if _ffc =="\u004f\u0054\u0054\u004f"{return TtfType {},_gca .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_f .ErrNotSupported );
};if _ffc !="\u0000\u0001\u0000\u0000"&&_ffc !="\u0074\u0072\u0075\u0065"{_ga .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_ffc );
};_gaac :=int (_bdf .ReadUShort ());_bdf .Skip (3*2);_bdf ._bgd =make (map[string ]uint32 );var _ccc string ;for _cba :=0;_cba < _gaac ;_cba ++{_ccc ,_eea =_bdf .ReadStr (4);if _eea !=nil {return TtfType {},_eea ;};_bdf .Skip (4);_eff :=_bdf .ReadULong ();
_bdf .Skip (4);_bdf ._bgd [_ccc ]=_eff ;};_ga .Log .Trace (_cddc (_bdf ._bgd ));if _eea =_bdf .ParseComponents ();_eea !=nil {return TtfType {},_eea ;};return _bdf ._afb ,nil ;};func (_ddg *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_fe :=MakeRuneCharSafeMap (_ddg .Length ());
_ddg .Range (func (_ac rune ,_bg CharMetrics )(_eb bool ){_fe ._dd [_ac ]=_bg ;return false });return _fe ;};func (_fee *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_fee ._a .RLock ();defer _fee ._a .RUnlock ();_bf ,_cc :=_fee ._dd [b ];return _bf ,_cc ;
};type fontMap struct{_gf .Mutex ;_ccb map[StdFontName ]func ()StdFont ;};func _aegf ()StdFont {_dcb .Do (_cbed );_dde :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_dde ,_acd );};func init (){RegisterStdFont (HelveticaName ,_gae ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_dda ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_be ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (HelveticaBoldObliqueName ,_fea ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");};var _egf =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func _be ()StdFont {_cdf .Do (_dgg );_ba :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_ba ,_beb );};func (_eeba *ttfParser )Skip (n int ){_eeba ._dcfa .Seek (int64 (n ),_gc .SeekCurrent )};func (_bfg *RuneCharSafeMap )Range (f func (_ag rune ,_bge CharMetrics )(_cef bool )){_bfg ._a .RLock ();defer _bfg ._a .RUnlock ();
for _gcc ,_ebd :=range _bfg ._dd {if f (_gcc ,_ebd ){break ;};};};func (_fdd *ttfParser )parseCmapSubtable31 (_dbfe int64 )error {_dfb :=make ([]rune ,0,8);_feg :=make ([]rune ,0,8);_bba :=make ([]int16 ,0,8);_dbfg :=make ([]uint16 ,0,8);_fdd ._afb .Chars =make (map[rune ]GID );
_fdd ._dcfa .Seek (int64 (_fdd ._bgd ["\u0063\u006d\u0061\u0070"])+_dbfe ,_gc .SeekStart );_ddgb :=_fdd .ReadUShort ();if _ddgb !=4{return _gca .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_ddgb ,_f .ErrNotSupported );
};_fdd .Skip (2*2);_adge :=int (_fdd .ReadUShort ()/2);_fdd .Skip (3*2);for _aae :=0;_aae < _adge ;_aae ++{_feg =append (_feg ,rune (_fdd .ReadUShort ()));};_fdd .Skip (2);for _gcfb :=0;_gcfb < _adge ;_gcfb ++{_dfb =append (_dfb ,rune (_fdd .ReadUShort ()));
};for _fccf :=0;_fccf < _adge ;_fccf ++{_bba =append (_bba ,_fdd .ReadShort ());};_cce ,_ :=_fdd ._dcfa .Seek (int64 (0),_gc .SeekCurrent );for _afa :=0;_afa < _adge ;_afa ++{_dbfg =append (_dbfg ,_fdd .ReadUShort ());};for _adcc :=0;_adcc < _adge ;_adcc ++{_fgc :=_dfb [_adcc ];
_bfe :=_feg [_adcc ];_gebe :=_bba [_adcc ];_fgcd :=_dbfg [_adcc ];if _fgcd > 0{_fdd ._dcfa .Seek (_cce +2*int64 (_adcc )+int64 (_fgcd ),_gc .SeekStart );};for _bbb :=_fgc ;_bbb <=_bfe ;_bbb ++{if _bbb ==0xFFFF{break ;};var _fbb int32 ;if _fgcd > 0{_fbb =int32 (_fdd .ReadUShort ());
if _fbb > 0{_fbb +=int32 (_gebe );};}else {_fbb =_bbb +int32 (_gebe );};if _fbb >=65536{_fbb -=65536;};if _fbb > 0{_fdd ._afb .Chars [_bbb ]=GID (_fbb );};};};return nil ;};var _bd =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func TtfParse (r _gc .ReadSeeker )(TtfType ,error ){_aea :=&ttfParser {_dcfa :r };return _aea .Parse ()};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");
CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
);var _bcd *RuneCharSafeMap ;var _geb *RuneCharSafeMap ;func (_eag *ttfParser )ReadULong ()(_ccae uint32 ){_cf .Read (_eag ._dcfa ,_cf .BigEndian ,&_ccae );return _ccae ;};func (_dbgf *ttfParser )parseCmapFormat0 ()error {_fde ,_ebge :=_dbgf .ReadStr (256);
if _ebge !=nil {return _ebge ;};_dbfc :=[]byte (_fde );_ga .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_dbgf ._afb .String (),_fde ,_dbfc );
for _gdfc ,_bgb :=range _dbfc {_dbgf ._afb .Chars [rune (_gdfc )]=GID (_bgb );};return nil ;};func (_eef *ttfParser )ParseHmtx ()error {if _fggd :=_eef .Seek ("\u0068\u006d\u0074\u0078");_fggd !=nil {return _fggd ;};_eef ._afb .Widths =make ([]uint16 ,0,8);
for _ccgg :=uint16 (0);_ccgg < _eef ._gbb ;_ccgg ++{_eef ._afb .Widths =append (_eef ._afb .Widths ,_eef .ReadUShort ());_eef .Skip (2);};if _eef ._gbb < _eef ._gac &&_eef ._gbb > 0{_gacb :=_eef ._afb .Widths [_eef ._gbb -1];for _add :=_eef ._gbb ;_add < _eef ._gac ;
_add ++{_eef ._afb .Widths =append (_eef ._afb .Widths ,_gacb );};};return nil ;};func init (){RegisterStdFont (SymbolName ,_aad ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_gab );};type StdFont struct{_aeb Descriptor ;_fdf *RuneCharSafeMap ;_fb _ed .TextEncoder ;};var _dga _gf .Once ;var _acd *RuneCharSafeMap ;func (_fg *fontMap )read (_fd StdFontName )(func ()StdFont ,bool ){_fg .Lock ();
defer _fg .Unlock ();_aca ,_ad :=_fg ._ccb [_fd ];return _aca ,_ad ;};func (_fbg *ttfParser )parseCmapVersion (_dcg int64 )error {_ga .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_dcg );
if _fbg ._afb .Chars ==nil {_fbg ._afb .Chars =make (map[rune ]GID );};_fbg ._dcfa .Seek (int64 (_fbg ._bgd ["\u0063\u006d\u0061\u0070"])+_dcg ,_gc .SeekStart );var _dab ,_ffcc uint32 ;_edf :=_fbg .ReadUShort ();if _edf < 8{_dab =uint32 (_fbg .ReadUShort ());
_ffcc =uint32 (_fbg .ReadUShort ());}else {_fbg .ReadUShort ();_dab =_fbg .ReadULong ();_ffcc =_fbg .ReadULong ();};_ga .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_edf ,_dab ,_ffcc );
switch _edf {case 0:return _fbg .parseCmapFormat0 ();case 6:return _fbg .parseCmapFormat6 ();case 12:return _fbg .parseCmapFormat12 ();default:_ga .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_edf );
return nil ;};};func init (){RegisterStdFont (TimesRomanName ,_dcf ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_bebc ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (TimesItalicName ,_egff ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_ddc ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};type StdFontName string ;func _ccd ()StdFont {_dcb .Do (_cbed );_dbb :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_dbb ,_fc );};type FontWeight int ;func (_cdd *TtfType )String ()string {return _e .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_cdd .PostScriptName ,_cdd .UnitsPerEm ,_cdd .Bold ,_cdd .ItalicAngle ,_cdd .CapHeight ,len (_cdd .Chars ),len (_cdd .GlyphNames ));
};type GID =_ed .GID ;func (_acae *ttfParser )ReadUShort ()(_gdbc uint16 ){_cf .Read (_acae ._dcfa ,_cf .BigEndian ,&_gdbc );return _gdbc ;};type GlyphName =_ed .GlyphName ;func (_ffeg *ttfParser )ParseCmap ()error {var _gff int64 ;if _eeb :=_ffeg .Seek ("\u0063\u006d\u0061\u0070");
_eeb !=nil {return _eeb ;};_ga .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_ffeg .ReadUShort ();_ffd :=int (_ffeg .ReadUShort ());_eac :=int64 (0);_ceb :=int64 (0);_dac :=int64 (0);for _afba :=0;_afba < _ffd ;_afba ++{_ded :=_ffeg .ReadUShort ();
_ebdb :=_ffeg .ReadUShort ();_gff =int64 (_ffeg .ReadULong ());if _ded ==3&&_ebdb ==1{_ceb =_gff ;}else if _ded ==3&&_ebdb ==10{_dac =_gff ;}else if _ded ==1&&_ebdb ==0{_eac =_gff ;};};if _eac !=0{if _ced :=_ffeg .parseCmapVersion (_eac );_ced !=nil {return _ced ;
};};if _ceb !=0{if _bgeg :=_ffeg .parseCmapSubtable31 (_ceb );_bgeg !=nil {return _bgeg ;};};if _dac !=0{if _fcf :=_ffeg .parseCmapVersion (_dac );_fcf !=nil {return _fcf ;};};if _ceb ==0&&_eac ==0&&_dac ==0{_ga .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};var _cb =&fontMap {_ccb :make (map[StdFontName ]func ()StdFont )};var _eegd =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func (_efdg *ttfParser )parseCmapFormat6 ()error {_gaeb :=int (_efdg .ReadUShort ());_bebd :=int (_efdg .ReadUShort ());_ga .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_efdg ._afb .String (),_gaeb ,_bebd );
for _ebb :=0;_ebb < _bebd ;_ebb ++{_fbcf :=GID (_efdg .ReadUShort ());_efdg ._afb .Chars [rune (_ebb +_gaeb )]=_fbcf ;};return nil ;};func _dda ()StdFont {_cdf .Do (_dgg );_fdc :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_fdc ,_daag );};func (_fbe *ttfParser )ParseMaxp ()error {if _acad :=_fbe .Seek ("\u006d\u0061\u0078\u0070");_acad !=nil {return _acad ;};_fbe .Skip (4);_fbe ._gac =_fbe .ReadUShort ();return nil ;};type ttfParser struct{_afb TtfType ;
_dcfa _gc .ReadSeeker ;_bgd map[string ]uint32 ;_gbb uint16 ;_gac uint16 ;};func (_bgg *RuneCharSafeMap )Length ()int {_bgg ._a .RLock ();defer _bgg ._a .RUnlock ();return len (_bgg ._dd );};func (_dcd *ttfParser )ParseComponents ()error {if _gfd :=_dcd .ParseHead ();
_gfd !=nil {return _gfd ;};if _gg :=_dcd .ParseHhea ();_gg !=nil {return _gg ;};if _ebg :=_dcd .ParseMaxp ();_ebg !=nil {return _ebg ;};if _eead :=_dcd .ParseHmtx ();_eead !=nil {return _eead ;};if _ ,_feec :=_dcd ._bgd ["\u006e\u0061\u006d\u0065"];_feec {if _bfdg :=_dcd .ParseName ();
_bfdg !=nil {return _bfdg ;};};if _ ,_efff :=_dcd ._bgd ["\u004f\u0053\u002f\u0032"];_efff {if _gcf :=_dcd .ParseOS2 ();_gcf !=nil {return _gcf ;};};if _ ,_bed :=_dcd ._bgd ["\u0070\u006f\u0073\u0074"];_bed {if _fcc :=_dcd .ParsePost ();_fcc !=nil {return _fcc ;
};};if _ ,_ebf :=_dcd ._bgd ["\u0063\u006d\u0061\u0070"];_ebf {if _bbe :=_dcd .ParseCmap ();_bbe !=nil {return _bbe ;};};return nil ;};func _aad ()StdFont {_cg :=_ed .NewSymbolEncoder ();_ebc :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_ebc ,_dge ,_cg );};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _ed .TextEncoder )StdFont {var _gbg rune =0xA0;if _ ,_df :=metrics .Read (_gbg );!_df {_dc ,_ :=metrics .Read (0x20);metrics .Write (_gbg ,_dc );
};return StdFont {_aeb :desc ,_fdf :metrics ,_fb :encoder };};func (_abg *ttfParser )ReadSByte ()(_cddb int8 ){_cf .Read (_abg ._dcfa ,_cf .BigEndian ,&_cddb );return _cddb ;};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;
IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func _gab ()StdFont {_bae :=_ed .NewZapfDingbatsEncoder ();
_bbf :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};return NewStdFontWithEncoding (_bbf ,_acag ,_bae );
};func (_fgf *ttfParser )ParseName ()error {if _bce :=_fgf .Seek ("\u006e\u0061\u006d\u0065");_bce !=nil {return _bce ;};_fgcf ,_ :=_fgf ._dcfa .Seek (0,_gc .SeekCurrent );_fgf ._afb .PostScriptName ="";_fgf .Skip (2);_ab :=_fgf .ReadUShort ();_ddd :=_fgf .ReadUShort ();
for _gdbb :=uint16 (0);_gdbb < _ab &&_fgf ._afb .PostScriptName =="";_gdbb ++{_fgf .Skip (3*2);_fac :=_fgf .ReadUShort ();_aaa :=_fgf .ReadUShort ();_dce :=_fgf .ReadUShort ();if _fac ==6{_fgf ._dcfa .Seek (_fgcf +int64 (_ddd )+int64 (_dce ),_gc .SeekStart );
_aebcd ,_aecf :=_fgf .ReadStr (int (_aaa ));if _aecf !=nil {return _aecf ;};_aebcd =_c .Replace (_aebcd ,"\u0000","",-1);_eec ,_aecf :=_ce .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _aecf !=nil {return _aecf ;
};_fgf ._afb .PostScriptName =_eec .ReplaceAllString (_aebcd ,"");};};if _fgf ._afb .PostScriptName ==""{_ga .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_ed .NewStandardEncoder ());};func _dgg (){_gce =MakeRuneCharSafeMap (len (_bd ));_daag =MakeRuneCharSafeMap (len (_bd ));
for _ec ,_ccg :=range _bd {_gce .Write (_ccg ,CharMetrics {Wx :float64 (_egf [_ec ])});_daag .Write (_ccg ,CharMetrics {Wx :float64 (_ccge [_ec ])});};_beb =_gce .Copy ();_ea =_daag .Copy ();};var _acdc =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
var _ade *RuneCharSafeMap ;var _dge =&RuneCharSafeMap {_dd :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func (_bgdf *ttfParser )Seek (tag string )error {_agcc ,_fed :=_bgdf ._bgd [tag ];if !_fed {return _e .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_bgdf ._dcfa .Seek (int64 (_agcc ),_gc .SeekStart );
return nil ;};func (_bfc *ttfParser )Read32Fixed ()float64 {_gafa :=float64 (_bfc .ReadShort ());_fgb :=float64 (_bfc .ReadUShort ())/65536.0;return _gafa +_fgb ;};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);var _cdf _gf .Once ;
func (_cff CharMetrics )String ()string {return _e .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_cff .Wx ,_cff .Wy );};func (_ff StdFont )Encoder ()_ed .TextEncoder {return _ff ._fb };var _adg *RuneCharSafeMap ;const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");
ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););var _fc *RuneCharSafeMap ;var _cbd *RuneCharSafeMap ;type RuneCharSafeMap struct{_dd map[rune ]CharMetrics ;_a _gf .RWMutex ;};var _beb *RuneCharSafeMap ;
var _ea *RuneCharSafeMap ;const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");
HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););func _bebc ()StdFont {_dga .Do (_ffe );_adc :=Descriptor {Name :TimesBoldName ,Family :_fge ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_adc ,_beg );};func _gae ()StdFont {_cdf .Do (_dgg );_aebc :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_aebc ,_gce );};func _cbed (){const _gaf =600;_acd =MakeRuneCharSafeMap (len (_bd ));for _ ,_cca :=range _bd {_acd .Write (_cca ,CharMetrics {Wx :_gaf });};_fc =_acd .Copy ();_ade =_acd .Copy ();_cbd =_acd .Copy ();};func (_cbea *ttfParser )ParseHhea ()error {if _deb :=_cbea .Seek ("\u0068\u0068\u0065\u0061");
_deb !=nil {return _deb ;};_cbea .Skip (4+15*2);_cbea ._gbb =_cbea .ReadUShort ();return nil ;};func _fdg ()StdFont {_dcb .Do (_cbed );_gcg :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_gcg ,_cbd );};func (_gb *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_gb ._a .Lock ();defer _gb ._a .Unlock ();_gb ._dd [b ]=r ;};type CharMetrics struct{Wx float64 ;Wy float64 ;};func (_fbba *ttfParser )parseCmapSubtable10 (_dfe int64 )error {if _fbba ._afb .Chars ==nil {_fbba ._afb .Chars =make (map[rune ]GID );
};_fbba ._dcfa .Seek (int64 (_fbba ._bgd ["\u0063\u006d\u0061\u0070"])+_dfe ,_gc .SeekStart );var _eba ,_dgef uint32 ;_aebd :=_fbba .ReadUShort ();if _aebd < 8{_eba =uint32 (_fbba .ReadUShort ());_dgef =uint32 (_fbba .ReadUShort ());}else {_fbba .ReadUShort ();
_eba =_fbba .ReadULong ();_dgef =_fbba .ReadULong ();};_ga .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_aebd ,_eba ,_dgef );
if _aebd !=0{return _eg .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_edb ,_fegb :=_fbba .ReadStr (256);
if _fegb !=nil {return _fegb ;};_bfb :=[]byte (_edb );for _bbbd ,_bab :=range _bfb {_fbba ._afb .Chars [rune (_bbbd )]=GID (_bab );if _bab !=0{_e .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_bbbd ,_bab ,rune (_bab ));
};};return nil ;};func (_fag *ttfParser )ParsePost ()error {if _babf :=_fag .Seek ("\u0070\u006f\u0073\u0074");_babf !=nil {return _babf ;};_fbf :=_fag .Read32Fixed ();_fag ._afb .ItalicAngle =_fag .Read32Fixed ();_fag ._afb .UnderlinePosition =_fag .ReadShort ();
_fag ._afb .UnderlineThickness =_fag .ReadShort ();_fag ._afb .IsFixedPitch =_fag .ReadULong ()!=0;_fag .ReadULong ();_fag .ReadULong ();_fag .ReadULong ();_fag .ReadULong ();_ga .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_fbf );
switch _fbf {case 1.0:_fag ._afb .GlyphNames =_acdc ;case 2.0:_agce :=int (_fag .ReadUShort ());_cdgf :=make ([]int ,_agce );_fag ._afb .GlyphNames =make ([]GlyphName ,_agce );_cedd :=-1;for _babg :=0;_babg < _agce ;_babg ++{_ecb :=int (_fag .ReadUShort ());
_cdgf [_babg ]=_ecb ;if _ecb <=0x7fff&&_ecb > _cedd {_cedd =_ecb ;};};var _ada []GlyphName ;if _cedd >=len (_acdc ){_ada =make ([]GlyphName ,_cedd -len (_acdc )+1);for _cdgg :=0;_cdgg < _cedd -len (_acdc )+1;_cdgg ++{_bggb :=int (_fag .readByte ());_fab ,_gee :=_fag .ReadStr (_bggb );
if _gee !=nil {return _gee ;};_ada [_cdgg ]=GlyphName (_fab );};};for _dcgc :=0;_dcgc < _agce ;_dcgc ++{_ebdg :=_cdgf [_dcgc ];if _ebdg < len (_acdc ){_fag ._afb .GlyphNames [_dcgc ]=_acdc [_ebdg ];}else if _ebdg >=len (_acdc )&&_ebdg <=32767{_fag ._afb .GlyphNames [_dcgc ]=_ada [_ebdg -len (_acdc )];
}else {_fag ._afb .GlyphNames [_dcgc ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_dff :=make ([]int ,_fag ._gac );for _ebea :=0;_ebea < len (_dff );_ebea ++{_gga :=int (_fag .ReadSByte ());_dff [_ebea ]=_ebea +1+_gga ;
};_fag ._afb .GlyphNames =make ([]GlyphName ,len (_dff ));for _fdde :=0;_fdde < len (_fag ._afb .GlyphNames );_fdde ++{_abe :=_acdc [_dff [_fdde ]];_fag ._afb .GlyphNames [_fdde ]=_abe ;};case 3.0:_ga .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_ga .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_fbf );};return nil ;};var _ Font =StdFont {};var _ccge =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func (_caf *ttfParser )ReadStr (length int )(string ,error ){_cea :=make ([]byte ,length );_feb ,_adac :=_caf ._dcfa .Read (_cea );if _adac !=nil {return "",_adac ;}else if _feb !=length {return "",_e .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_cea ),nil ;};