//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_g "bytes";_fe "encoding/binary";_fc "errors";_b "fmt";_gb "github.com/unidoc/unipdf/v3/common";_fcd "github.com/unidoc/unipdf/v3/core";_ee "github.com/unidoc/unipdf/v3/internal/cmap";_fcf "github.com/unidoc/unipdf/v3/internal/textencoding";
_d "golang.org/x/xerrors";_c "io";_bb "os";_bg "regexp";_fd "sort";_e "strings";_ge "sync";);var _bba _ge .Once ;func (_dbe StdFont )Descriptor ()Descriptor {return _dbe ._aa };type Font interface{Encoder ()_fcf .TextEncoder ;GetRuneMetrics (_a rune )(CharMetrics ,bool );
};func (_bcba *ttfParser )parseCmapFormat12 ()error {_bgf :=_bcba .ReadULong ();_gb .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_bcba ._dfc .String (),_bgf );
for _gcbb :=uint32 (0);_gcbb < _bgf ;_gcbb ++{_deee :=_bcba .ReadULong ();_fgba :=_bcba .ReadULong ();_ega :=_bcba .ReadULong ();if _deee > 0x0010FFFF||(0xD800<=_deee &&_deee <=0xDFFF){return _fc .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _fgba < _deee ||_fgba > 0x0010FFFF||(0xD800<=_fgba &&_fgba <=0xDFFF){return _fc .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _gfad :=_deee ;_gfad <=_fgba ;
_gfad ++{if _gfad > 0x10FFFF{_gb .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_bcba ._dfc .Chars [rune (_gfad )]=GID (_ega );_ega ++;};};return nil ;};var _cff =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
type StdFontName string ;func (_af *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_af ._gd .Lock ();defer _af ._gd .Unlock ();_af ._ed [b ]=r ;};func (_gee *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_ba :=MakeRuneCharSafeMap (_gee .Length ());_gee .Range (func (_ga rune ,_bae CharMetrics )(_dd bool ){_ba ._ed [_ga ]=_bae ;
return false });return _ba ;};func (_dee *ttfParser )ParseCmap ()error {var _fbf int64 ;if _fgbb :=_dee .Seek ("\u0063\u006d\u0061\u0070");_fgbb !=nil {return _fgbb ;};_gb .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_dee .ReadUShort ();
_gcg :=int (_dee .ReadUShort ());_bfd :=int64 (0);_cdb :=int64 (0);_egf :=int64 (0);for _gad :=0;_gad < _gcg ;_gad ++{_cea :=_dee .ReadUShort ();_ceb :=_dee .ReadUShort ();_fbf =int64 (_dee .ReadULong ());if _cea ==3&&_ceb ==1{_cdb =_fbf ;}else if _cea ==3&&_ceb ==10{_egf =_fbf ;
}else if _cea ==1&&_ceb ==0{_bfd =_fbf ;};};if _bfd !=0{if _agd :=_dee .parseCmapVersion (_bfd );_agd !=nil {return _agd ;};};if _cdb !=0{if _bedg :=_dee .parseCmapSubtable31 (_cdb );_bedg !=nil {return _bedg ;};};if _egf !=0{if _ace :=_dee .parseCmapVersion (_egf );
_ace !=nil {return _ace ;};};if _cdb ==0&&_bfd ==0&&_egf ==0{_gb .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func (_cffg *TtfType )String ()string {return _b .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_cffg .PostScriptName ,_cffg .UnitsPerEm ,_cffg .Bold ,_cffg .ItalicAngle ,_cffg .CapHeight ,len (_cffg .Chars ),len (_cffg .GlyphNames ));
};func (_fag *TtfType )MakeEncoder ()(_fcf .SimpleEncoder ,error ){_ffg :=make (map[_fcf .CharCode ]GlyphName );for _dbg :=_fcf .CharCode (0);_dbg <=256;_dbg ++{_gfg :=rune (_dbg );_bdb ,_egc :=_fag .Chars [_gfg ];if !_egc {continue ;};var _aed GlyphName ;
if int (_bdb )>=0&&int (_bdb )< len (_fag .GlyphNames ){_aed =_fag .GlyphNames [_bdb ];}else {_cdd :=rune (_bdb );if _fdd ,_aff :=_fcf .RuneToGlyph (_cdd );_aff {_aed =_fdd ;};};if _aed !=""{_ffg [_dbg ]=_aed ;};};if len (_ffg )==0{_gb .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_fag ,_fag .Chars );
};return _fcf .NewCustomSimpleTextEncoder (_ffg ,nil );};func (_eacc *ttfParser )ReadSByte ()(_bac int8 ){_fe .Read (_eacc ._dgd ,_fe .BigEndian ,&_bac );return _bac ;};type StdFont struct{_aa Descriptor ;_fa *RuneCharSafeMap ;_edg _fcf .TextEncoder ;};
var _gbf *RuneCharSafeMap ;func (_baad *fontMap )write (_agb StdFontName ,_de func ()StdFont ){_baad .Lock ();defer _baad .Unlock ();_baad ._eb [_agb ]=_de ;};func _cf ()StdFont {_bba .Do (_deb );_gfa :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_gfa ,_bdd );};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_def :=_ea .read (name );_def {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_ea .write (name ,fnc );for _ ,_fda :=range aliases {RegisterStdFont (_fda ,fnc );};};var _aag =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func (_bddd *ttfParser )Seek (tag string )error {_gab ,_gadb :=_bddd ._ggddg [tag ];if !_gadb {return _b .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_bddd ._dgd .Seek (int64 (_gab ),_c .SeekStart );
return nil ;};var _adcf *RuneCharSafeMap ;var _gfcc =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func (_gefa *TtfType )NewEncoder ()_fcf .TextEncoder {return _fcf .NewTrueTypeFontEncoder (_gefa .Chars )};var _ea =&fontMap {_eb :make (map[StdFontName ]func ()StdFont )};func _fde ()StdFont {_bf .Do (_deg );_afe :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_afe ,_ddd );};func _gcf ()StdFont {_dge .Do (_cac );_cd :=Descriptor {Name :TimesBoldName ,Family :_dcg ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_cd ,_df );};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););type fontMap struct{_ge .Mutex ;_eb map[StdFontName ]func ()StdFont ;};var _ Font =StdFont {};func _deb (){const _ggeg =600;
_bdd =MakeRuneCharSafeMap (len (_ggd ));for _ ,_bd :=range _ggd {_bdd .Write (_bd ,CharMetrics {Wx :_ggeg });};_adc =_bdd .Copy ();_bbab =_bdd .Copy ();_gbf =_bdd .Copy ();};type CharMetrics struct{Wx float64 ;Wy float64 ;};func (_ffc *ttfParser )ParseComponents ()error {if _fb :=_ffc .ParseHead ();
_fb !=nil {return _fb ;};if _agg :=_ffc .ParseHhea ();_agg !=nil {return _agg ;};if _dfb :=_ffc .ParseMaxp ();_dfb !=nil {return _dfb ;};if _fdaf :=_ffc .ParseHmtx ();_fdaf !=nil {return _fdaf ;};if _ ,_bea :=_ffc ._ggddg ["\u006e\u0061\u006d\u0065"];_bea {if _aad :=_ffc .ParseName ();
_aad !=nil {return _aad ;};};if _ ,_ddec :=_ffc ._ggddg ["\u004f\u0053\u002f\u0032"];_ddec {if _cfc :=_ffc .ParseOS2 ();_cfc !=nil {return _cfc ;};};if _ ,_fgb :=_ffc ._ggddg ["\u0070\u006f\u0073\u0074"];_fgb {if _dcdb :=_ffc .ParsePost ();_dcdb !=nil {return _dcdb ;
};};if _ ,_ddga :=_ffc ._ggddg ["\u0063\u006d\u0061\u0070"];_ddga {if _cbf :=_ffc .ParseCmap ();_cbf !=nil {return _cbf ;};};return nil ;};func _ged ()StdFont {_bba .Do (_deb );_fcdf :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_fcdf ,_bbab );};func init (){RegisterStdFont (CourierName ,_cf ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");RegisterStdFont (CourierBoldName ,_eeda ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (CourierObliqueName ,_gdc ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");RegisterStdFont (CourierBoldObliqueName ,_ged ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_gge *RuneCharSafeMap )Length ()int {_gge ._gd .RLock ();defer _gge ._gd .RUnlock ();return len (_gge ._ed );};func _fgg ()StdFont {_bf .Do (_deg );_be :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_be ,_fce );};func _deg (){_fce =MakeRuneCharSafeMap (len (_ggd ));_ddd =MakeRuneCharSafeMap (len (_ggd ));for _fge ,_ggdd :=range _ggd {_fce .Write (_ggdd ,CharMetrics {Wx :float64 (_eaf [_fge ])});_ddd .Write (_ggdd ,CharMetrics {Wx :float64 (_gfcc [_fge ])});
};_adcf =_fce .Copy ();_gdd =_ddd .Copy ();};var _fce *RuneCharSafeMap ;var _df *RuneCharSafeMap ;var _ddd *RuneCharSafeMap ;func (_feb StdFont )ToPdfObject ()_fcd .PdfObject {_dde :=_fcd .MakeDict ();_dde .Set ("\u0054\u0079\u0070\u0065",_fcd .MakeName ("\u0046\u006f\u006e\u0074"));
_dde .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_fcd .MakeName ("\u0054\u0079\u0070e\u0031"));_dde .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_fcd .MakeName (_feb .Name ()));_dde .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_feb ._edg .ToPdfObject ());
return _fcd .MakeIndirectObject (_dde );};func _gaf ()StdFont {_dge .Do (_cac );_agbb :=Descriptor {Name :TimesBoldItalicName ,Family :_dcg ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_agbb ,_fff );};func _ege (_dbge map[string ]uint32 )string {var _egd []string ;for _faeg :=range _dbge {_egd =append (_egd ,_faeg );};_fd .Slice (_egd ,func (_afbc ,_eec int )bool {return _dbge [_egd [_afbc ]]< _dbge [_egd [_eec ]]});
_geb :=[]string {_b .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_dbge ))};for _ ,_ce :=range _egd {_geb =append (_geb ,_b .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_ce ,_dbge [_ce ]));
};return _e .Join (_geb ,"\u000a");};type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;
};var _eaf =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func init (){RegisterStdFont (HelveticaName ,_fgg ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_fde ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_dc ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (HelveticaBoldObliqueName ,_bgd ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");};func (_eeb *ttfParser )ParseMaxp ()error {if _eafc :=_eeb .Seek ("\u006d\u0061\u0078\u0070");_eafc !=nil {return _eafc ;
};_eeb .Skip (4);_eeb ._gfb =_eeb .ReadUShort ();return nil ;};var _ggb =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
var _bf _ge .Once ;func TtfParseFile (fileStr string )(TtfType ,error ){_ddg ,_acg :=_bb .Open (fileStr );if _acg !=nil {return TtfType {},_acg ;};defer _ddg .Close ();return TtfParse (_ddg );};func (_eae *ttfParser )ParseHead ()error {if _dcb :=_eae .Seek ("\u0068\u0065\u0061\u0064");
_dcb !=nil {return _dcb ;};_eae .Skip (3*4);_gdda :=_eae .ReadULong ();if _gdda !=0x5F0F3CF5{_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_eae );
};_eae .Skip (2);_eae ._dfc .UnitsPerEm =_eae .ReadUShort ();_eae .Skip (2*8);_eae ._dfc .Xmin =_eae .ReadShort ();_eae ._dfc .Ymin =_eae .ReadShort ();_eae ._dfc .Xmax =_eae .ReadShort ();_eae ._dfc .Ymax =_eae .ReadShort ();return nil ;};func (_gfcf *ttfParser )ParseOS2 ()error {if _gfdc :=_gfcf .Seek ("\u004f\u0053\u002f\u0032");
_gfdc !=nil {return _gfdc ;};_fef :=_gfcf .ReadUShort ();_gfcf .Skip (4*2);_gfcf .Skip (11*2+10+4*4+4);_fcge :=_gfcf .ReadUShort ();_gfcf ._dfc .Bold =(_fcge &32)!=0;_gfcf .Skip (2*2);_gfcf ._dfc .TypoAscender =_gfcf .ReadShort ();_gfcf ._dfc .TypoDescender =_gfcf .ReadShort ();
if _fef >=2{_gfcf .Skip (3*2+2*4+2);_gfcf ._dfc .CapHeight =_gfcf .ReadShort ();}else {_gfcf ._dfc .CapHeight =0;};return nil ;};func (_bcbb *ttfParser )ParseHmtx ()error {if _ef :=_bcbb .Seek ("\u0068\u006d\u0074\u0078");_ef !=nil {return _ef ;};_bcbb ._dfc .Widths =make ([]uint16 ,0,8);
for _cfe :=uint16 (0);_cfe < _bcbb ._dcf ;_cfe ++{_bcbb ._dfc .Widths =append (_bcbb ._dfc .Widths ,_bcbb .ReadUShort ());_bcbb .Skip (2);};if _bcbb ._dcf < _bcbb ._gfb &&_bcbb ._dcf > 0{_eeca :=_bcbb ._dfc .Widths [_bcbb ._dcf -1];for _cbfb :=_bcbb ._dcf ;
_cbfb < _bcbb ._gfb ;_cbfb ++{_bcbb ._dfc .Widths =append (_bcbb ._dfc .Widths ,_eeca );};};return nil ;};func _dc ()StdFont {_bf .Do (_deg );_cb :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_cb ,_adcf );};func _gdc ()StdFont {_bba .Do (_deb );_edd :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_edd ,_gbf );};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););type ttfParser struct{_dfc TtfType ;_dgd _c .ReadSeeker ;
_ggddg map[string ]uint32 ;_dcf uint16 ;_gfb uint16 ;};type GlyphName =_fcf .GlyphName ;func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_fcf .NewStandardEncoder ());};func init (){RegisterStdFont (SymbolName ,_cfd ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_dbf );};var _gdd *RuneCharSafeMap ;var _fdf *RuneCharSafeMap ;func _cfd ()StdFont {_cad :=_fcf .NewSymbolEncoder ();_defd :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_defd ,_cba ,_cad );};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);func (_dggg *ttfParser )Skip (n int ){_dggg ._dgd .Seek (int64 (n ),_c .SeekCurrent )};func init (){RegisterStdFont (TimesRomanName ,_gdb ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");
RegisterStdFont (TimesBoldName ,_gcf ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (TimesItalicName ,_fae ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (TimesBoldItalicName ,_gaf ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_eff *ttfParser )readByte ()(_dae uint8 ){_fe .Read (_eff ._dgd ,_fe .BigEndian ,&_dae );return _dae ;};func (_baa *RuneCharSafeMap )Range (f func (_ff rune ,_gfc CharMetrics )(_gfd bool )){_baa ._gd .RLock ();defer _baa ._gd .RUnlock ();for _bgc ,_baf :=range _baa ._ed {if f (_bgc ,_baf ){break ;
};};};var _aca *RuneCharSafeMap ;func _cac (){_fdf =MakeRuneCharSafeMap (len (_ggd ));_df =MakeRuneCharSafeMap (len (_ggd ));_fff =MakeRuneCharSafeMap (len (_ggd ));_aca =MakeRuneCharSafeMap (len (_ggd ));for _bbb ,_gac :=range _ggd {_fdf .Write (_gac ,CharMetrics {Wx :float64 (_cff [_bbb ])});
_df .Write (_gac ,CharMetrics {Wx :float64 (_gfde [_bbb ])});_fff .Write (_gac ,CharMetrics {Wx :float64 (_bec [_bbb ])});_aca .Write (_gac ,CharMetrics {Wx :float64 (_aag [_bbb ])});};};func (_gg *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_gg ._gd .RLock ();
defer _gg ._gd .RUnlock ();_gf ,_bc :=_gg ._ed [b ];return _gf ,_bc ;};func (_beb *ttfParser )Read32Fixed ()float64 {_ddbf :=float64 (_beb .ReadShort ());_dabe :=float64 (_beb .ReadUShort ())/65536.0;return _ddbf +_dabe ;};var _gfde =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func (_cae *ttfParser )ParsePost ()error {if _gebd :=_cae .Seek ("\u0070\u006f\u0073\u0074");_gebd !=nil {return _gebd ;};_gafe :=_cae .Read32Fixed ();_cae ._dfc .ItalicAngle =_cae .Read32Fixed ();_cae ._dfc .UnderlinePosition =_cae .ReadShort ();_cae ._dfc .UnderlineThickness =_cae .ReadShort ();
_cae ._dfc .IsFixedPitch =_cae .ReadULong ()!=0;_cae .ReadULong ();_cae .ReadULong ();_cae .ReadULong ();_cae .ReadULong ();_gb .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_gafe );
switch _gafe {case 1.0:_cae ._dfc .GlyphNames =_ggb ;case 2.0:_abb :=int (_cae .ReadUShort ());_beg :=make ([]int ,_abb );_cae ._dfc .GlyphNames =make ([]GlyphName ,_abb );_dbdg :=-1;for _afd :=0;_afd < _abb ;_afd ++{_dfga :=int (_cae .ReadUShort ());_beg [_afd ]=_dfga ;
if _dfga <=0x7fff&&_dfga > _dbdg {_dbdg =_dfga ;};};var _aeda []GlyphName ;if _dbdg >=len (_ggb ){_aeda =make ([]GlyphName ,_dbdg -len (_ggb )+1);for _fgec :=0;_fgec < _dbdg -len (_ggb )+1;_fgec ++{_edc :=int (_cae .readByte ());_dgg ,_eca :=_cae .ReadStr (_edc );
if _eca !=nil {return _eca ;};_aeda [_fgec ]=GlyphName (_dgg );};};for _cacg :=0;_cacg < _abb ;_cacg ++{_fccd :=_beg [_cacg ];if _fccd < len (_ggb ){_cae ._dfc .GlyphNames [_cacg ]=_ggb [_fccd ];}else if _fccd >=len (_ggb )&&_fccd <=32767{_cae ._dfc .GlyphNames [_cacg ]=_aeda [_fccd -len (_ggb )];
}else {_cae ._dfc .GlyphNames [_cacg ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_dggf :=make ([]int ,_cae ._gfb );for _cbeb :=0;_cbeb < len (_dggf );_cbeb ++{_bcg :=int (_cae .ReadSByte ());_dggf [_cbeb ]=_cbeb +1+_bcg ;
};_cae ._dfc .GlyphNames =make ([]GlyphName ,len (_dggf ));for _dea :=0;_dea < len (_cae ._dfc .GlyphNames );_dea ++{_cfdd :=_ggb [_dggf [_dea ]];_cae ._dfc .GlyphNames [_dea ]=_cfdd ;};case 3.0:_gb .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_gb .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_gafe );};return nil ;};func _gdb ()StdFont {_dge .Do (_cac );_gef :=Descriptor {Name :TimesRomanName ,Family :_dcg ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_gef ,_fdf );};func _dbf ()StdFont {_fac :=_fcf .NewZapfDingbatsEncoder ();_aeb :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_aeb ,_cbg ,_fac );};var _cbg =&RuneCharSafeMap {_ed :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func (_dg *fontMap )read (_ae StdFontName )(func ()StdFont ,bool ){_dg .Lock ();defer _dg .Unlock ();_db ,_eg :=_dg ._eb [_ae ];return _db ,_eg ;};func (_eab *ttfParser )ReadULong ()(_cfg uint32 ){_fe .Read (_eab ._dgd ,_fe .BigEndian ,&_cfg );return _cfg ;
};func NewFontFile2FromPdfObject (obj _fcd .PdfObject )(TtfType ,error ){obj =_fcd .TraceToDirectObject (obj );_cbae ,_dfg :=obj .(*_fcd .PdfObjectStream );if !_dfg {_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_fcd .ErrTypeError ;};_afb ,_gbfc :=_fcd .DecodeStream (_cbae );if _gbfc !=nil {return TtfType {},_gbfc ;};_adcfa :=ttfParser {_dgd :_g .NewReader (_afb )};return _adcfa .Parse ();};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;
Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;
};func (_gde StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_bga ,_fcc :=_gde ._fa .Read (r );return _bga ,_fcc ;};func (_ag CharMetrics )String ()string {return _b .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_ag .Wx ,_ag .Wy );
};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_ed :make (map[rune ]CharMetrics ,length )};};func (_bfc *ttfParser )parseCmapVersion (_bdbf int64 )error {_gb .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_bdbf );
if _bfc ._dfc .Chars ==nil {_bfc ._dfc .Chars =make (map[rune ]GID );};_bfc ._dgd .Seek (int64 (_bfc ._ggddg ["\u0063\u006d\u0061\u0070"])+_bdbf ,_c .SeekStart );var _gaa ,_ddge uint32 ;_eebg :=_bfc .ReadUShort ();if _eebg < 8{_gaa =uint32 (_bfc .ReadUShort ());
_ddge =uint32 (_bfc .ReadUShort ());}else {_bfc .ReadUShort ();_gaa =_bfc .ReadULong ();_ddge =_bfc .ReadULong ();};_gb .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_eebg ,_gaa ,_ddge );
switch _eebg {case 0:return _bfc .parseCmapFormat0 ();case 6:return _bfc .parseCmapFormat6 ();case 12:return _bfc .parseCmapFormat12 ();default:_gb .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_eebg );
return nil ;};};var _bbab *RuneCharSafeMap ;var _adc *RuneCharSafeMap ;const (_dcg ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");
TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););func (_caeb *ttfParser )ReadShort ()(_eecc int16 ){_fe .Read (_caeb ._dgd ,_fe .BigEndian ,&_eecc );
return _eecc ;};func (_ggc *ttfParser )ParseName ()error {if _acb :=_ggc .Seek ("\u006e\u0061\u006d\u0065");_acb !=nil {return _acb ;};_aagg ,_ :=_ggc ._dgd .Seek (0,_c .SeekCurrent );_ggc ._dfc .PostScriptName ="";_ggc .Skip (2);_bbec :=_ggc .ReadUShort ();
_fgbe :=_ggc .ReadUShort ();for _fad :=uint16 (0);_fad < _bbec &&_ggc ._dfc .PostScriptName =="";_fad ++{_ggc .Skip (3*2);_bbabe :=_ggc .ReadUShort ();_baaa :=_ggc .ReadUShort ();_gba :=_ggc .ReadUShort ();if _bbabe ==6{_ggc ._dgd .Seek (_aagg +int64 (_fgbe )+int64 (_gba ),_c .SeekStart );
_adb ,_ggddc :=_ggc .ReadStr (int (_baaa ));if _ggddc !=nil {return _ggddc ;};_adb =_e .Replace (_adb ,"\u0000","",-1);_bcd ,_ggddc :=_bg .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _ggddc !=nil {return _ggddc ;
};_ggc ._dfc .PostScriptName =_bcd .ReplaceAllString (_adb ,"");};};if _ggc ._dfc .PostScriptName ==""{_gb .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func _fae ()StdFont {_dge .Do (_cac );_cfb :=Descriptor {Name :TimesItalicName ,Family :_dcg ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_cfb ,_aca );};type RuneCharSafeMap struct{_ed map[rune ]CharMetrics ;_gd _ge .RWMutex ;};var _fff *RuneCharSafeMap ;func (_eda *ttfParser )ParseHhea ()error {if _bbbe :=_eda .Seek ("\u0068\u0068\u0065\u0061");_bbbe !=nil {return _bbbe ;
};_eda .Skip (4+15*2);_eda ._dcf =_eda .ReadUShort ();return nil ;};func _eeda ()StdFont {_bba .Do (_deb );_adg :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_adg ,_adc );};var _bdd *RuneCharSafeMap ;func (_ad StdFont )Encoder ()_fcf .TextEncoder {return _ad ._edg };func (_ec *TtfType )MakeToUnicode ()*_ee .CMap {_bfa :=make (map[_ee .CharCode ]rune );if len (_ec .GlyphNames )==0{return _ee .NewToUnicodeCMap (_bfa );
};for _bcb ,_cbe :=range _ec .Chars {_dcd :=_ee .CharCode (_bcb );_faf :=_ec .GlyphNames [_cbe ];_egb ,_aga :=_fcf .GlyphToRune (_faf );if !_aga {_gb .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_bcb ,_faf );
_egb =_fcf .MissingCodeRune ;};_bfa [_dcd ]=_egb ;};return _ee .NewToUnicodeCMap (_bfa );};func (_febf *ttfParser )parseCmapSubtable10 (_ab int64 )error {if _febf ._dfc .Chars ==nil {_febf ._dfc .Chars =make (map[rune ]GID );};_febf ._dgd .Seek (int64 (_febf ._ggddg ["\u0063\u006d\u0061\u0070"])+_ab ,_c .SeekStart );
var _fab ,_fggg uint32 ;_cde :=_febf .ReadUShort ();if _cde < 8{_fab =uint32 (_febf .ReadUShort ());_fggg =uint32 (_febf .ReadUShort ());}else {_febf .ReadUShort ();_fab =_febf .ReadULong ();_fggg =_febf .ReadULong ();};_gb .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_cde ,_fab ,_fggg );
if _cde !=0{return _fc .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dec ,_deba :=_febf .ReadStr (256);
if _deba !=nil {return _deba ;};_dfgf :=[]byte (_dec );for _cdfd ,_gbb :=range _dfgf {_febf ._dfc .Chars [rune (_cdfd )]=GID (_gbb );if _gbb !=0{_b .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_cdfd ,_gbb ,rune (_gbb ));
};};return nil ;};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_ggg ,_ac :=_ea .read (name );if !_ac {return StdFont {},false ;};return _ggg (),true ;};func TtfParse (r _c .ReadSeeker )(TtfType ,error ){_gaca :=&ttfParser {_dgd :r };return _gaca .Parse ()};
func (_ceg *ttfParser )ReadStr (length int )(string ,error ){_dfa :=make ([]byte ,length );_gcbf ,_fdfg :=_ceg ._dgd .Read (_dfa );if _fdfg !=nil {return "",_fdfg ;}else if _gcbf !=length {return "",_b .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_dfa ),nil ;};func (_ddb *ttfParser )parseCmapFormat0 ()error {_cfcc ,_cffa :=_ddb .ReadStr (256);if _cffa !=nil {return _cffa ;};_dda :=[]byte (_cfcc );_gb .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_ddb ._dfc .String (),_cfcc ,_dda );
for _bbe ,_fddd :=range _dda {_ddb ._dfc .Chars [rune (_bbe )]=GID (_fddd );};return nil ;};var _cba =&RuneCharSafeMap {_ed :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");
HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););type FontWeight int ;func IsStdFont (name StdFontName )bool {_ ,_aee :=_ea .read (name );return _aee };func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _fcf .TextEncoder )StdFont {var _aec rune =0xA0;
if _ ,_gc :=metrics .Read (_aec );!_gc {_eac ,_ :=metrics .Read (0x20);metrics .Write (_aec ,_eac );};return StdFont {_aa :desc ,_fa :metrics ,_edg :encoder };};var _bec =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
var _ggd =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
type GID =_fcf .GID ;func _bgd ()StdFont {_bf .Do (_deg );_ddfc :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_ddfc ,_gdd );};var _dge _ge .Once ;func (_gag *ttfParser )ReadUShort ()(_bbecg uint16 ){_fe .Read (_gag ._dgd ,_fe .BigEndian ,&_bbecg );return _bbecg ;};func (_gebg *ttfParser )parseCmapFormat6 ()error {_edab :=int (_gebg .ReadUShort ());
_bfde :=int (_gebg .ReadUShort ());_gb .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_gebg ._dfc .String (),_edab ,_bfde );
for _fba :=0;_fba < _bfde ;_fba ++{_ccb :=GID (_gebg .ReadUShort ());_gebg ._dfc .Chars [rune (_fba +_edab )]=_ccb ;};return nil ;};func (_bbd *ttfParser )Parse ()(TtfType ,error ){_acae ,_acgf :=_bbd .ReadStr (4);if _acgf !=nil {return TtfType {},_acgf ;
};if _acae =="\u004f\u0054\u0054\u004f"{return TtfType {},_d .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_fcd .ErrNotSupported );
};if _acae !="\u0000\u0001\u0000\u0000"&&_acae !="\u0074\u0072\u0075\u0065"{_gb .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_acae );
};_bfg :=int (_bbd .ReadUShort ());_bbd .Skip (3*2);_bbd ._ggddg =make (map[string ]uint32 );var _da string ;for _daf :=0;_daf < _bfg ;_daf ++{_da ,_acgf =_bbd .ReadStr (4);if _acgf !=nil {return TtfType {},_acgf ;};_bbd .Skip (4);_bed :=_bbd .ReadULong ();
_bbd .Skip (4);_bbd ._ggddg [_da ]=_bed ;};_gb .Log .Trace (_ege (_bbd ._ggddg ));if _acgf =_bbd .ParseComponents ();_acgf !=nil {return TtfType {},_acgf ;};return _bbd ._dfc ,nil ;};func (_geee StdFont )Name ()string {return string (_geee ._aa .Name )};
func (_gae *ttfParser )parseCmapSubtable31 (_eafca int64 )error {_gcb :=make ([]rune ,0,8);_cdf :=make ([]rune ,0,8);_bddg :=make ([]int16 ,0,8);_cc :=make ([]uint16 ,0,8);_gae ._dfc .Chars =make (map[rune ]GID );_gae ._dgd .Seek (int64 (_gae ._ggddg ["\u0063\u006d\u0061\u0070"])+_eafca ,_c .SeekStart );
_agf :=_gae .ReadUShort ();if _agf !=4{return _d .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_agf ,_fcd .ErrNotSupported );
};_gae .Skip (2*2);_cda :=int (_gae .ReadUShort ()/2);_gae .Skip (3*2);for _dac :=0;_dac < _cda ;_dac ++{_cdf =append (_cdf ,rune (_gae .ReadUShort ()));};_gae .Skip (2);for _gea :=0;_gea < _cda ;_gea ++{_gcb =append (_gcb ,rune (_gae .ReadUShort ()));
};for _fbg :=0;_fbg < _cda ;_fbg ++{_bddg =append (_bddg ,_gae .ReadShort ());};_dab ,_ :=_gae ._dgd .Seek (int64 (0),_c .SeekCurrent );for _gddc :=0;_gddc < _cda ;_gddc ++{_cc =append (_cc ,_gae .ReadUShort ());};for _bedc :=0;_bedc < _cda ;_bedc ++{_gda :=_gcb [_bedc ];
_dddd :=_cdf [_bedc ];_fbd :=_bddg [_bedc ];_cbfd :=_cc [_bedc ];if _cbfd > 0{_gae ._dgd .Seek (_dab +2*int64 (_bedc )+int64 (_cbfd ),_c .SeekStart );};for _fccb :=_gda ;_fccb <=_dddd ;_fccb ++{if _fccb ==0xFFFF{break ;};var _egdf int32 ;if _cbfd > 0{_egdf =int32 (_gae .ReadUShort ());
if _egdf > 0{_egdf +=int32 (_fbd );};}else {_egdf =_fccb +int32 (_fbd );};if _egdf >=65536{_egdf -=65536;};if _egdf > 0{_gae ._dfc .Chars [_fccb ]=GID (_egdf );};};};return nil ;};func (_eed StdFont )GetMetricsTable ()*RuneCharSafeMap {return _eed ._fa };
