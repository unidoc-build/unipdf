//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_gf "bytes";_ad "encoding/binary";_ga "errors";_d "fmt";_ab "github.com/unidoc/unipdf/v3/common";_bd "github.com/unidoc/unipdf/v3/core";_gfd "github.com/unidoc/unipdf/v3/internal/cmap";_cc "github.com/unidoc/unipdf/v3/internal/textencoding";_cf "golang.org/x/xerrors";_g "io";_a "os";_c "regexp";_b "sort";_ec "strings";_f "sync";);var _bge =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};func (_facd *ttfParser )ParseHmtx ()error {if _edgc :=_facd .Seek ("\u0068\u006d\u0074\u0078");_edgc !=nil {return _edgc ;};_facd ._cfaf .Widths =make ([]uint16 ,0,8);for _geab :=uint16 (0);_geab < _facd ._dge ;_geab ++{_facd ._cfaf .Widths =append (_facd ._cfaf .Widths ,_facd .ReadUShort ());_facd .Skip (2);};if _facd ._dge < _facd ._bfe &&_facd ._dge > 0{_fbbe :=_facd ._cfaf .Widths [_facd ._dge -1];for _abdb :=_facd ._dge ;_abdb < _facd ._bfe ;_abdb ++{_facd ._cfaf .Widths =append (_facd ._cfaf .Widths ,_fbbe );};};return nil ;};func _bad ()StdFont {_ega .Do (_fdd );_bf :=Descriptor {Name :TimesItalicName ,Family :_gfbc ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};return NewStdFont (_bf ,_ddf );};var _gef _f .Once ;func _fbe ()StdFont {_gef .Do (_ag );_edb :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};return NewStdFont (_edb ,_bed );};var _bed map[rune ]CharMetrics ;var _ff =map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}};func (_bea *ttfParser )ParseHead ()error {if _bggb :=_bea .Seek ("\u0068\u0065\u0061\u0064");_bggb !=nil {return _bggb ;};_bea .Skip (3*4);_dbeb :=_bea .ReadULong ();if _dbeb !=0x5F0F3CF5{_ab .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_bea );};_bea .Skip (2);_bea ._cfaf .UnitsPerEm =_bea .ReadUShort ();_bea .Skip (2*8);_bea ._cfaf .Xmin =_bea .ReadShort ();_bea ._cfaf .Ymin =_bea .ReadShort ();_bea ._cfaf .Xmax =_bea .ReadShort ();_bea ._cfaf .Ymax =_bea .ReadShort ();return nil ;};var _bdb map[rune ]CharMetrics ;func _ecd ()StdFont {_eb :=_cc .NewSymbolEncoder ();_aac :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};return NewStdFontWithEncoding (_aac ,_cbb ,_eb );};type GlyphName =_cc .GlyphName ;func _ba ()StdFont {_gef .Do (_ag );_fa :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};return NewStdFont (_fa ,_fba );};func (_gc StdFont )Encoder ()_cc .TextEncoder {return _gc ._ed };func _edf ()StdFont {_eec .Do (_fac );_edga :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};return NewStdFont (_edga ,_gcc );};var _fae =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};func (_fea *TtfType )String ()string {return _d .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_fea .PostScriptName ,_fea .UnitsPerEm ,_fea .Bold ,_fea .ItalicAngle ,_fea .CapHeight ,len (_fea .Chars ),len (_fea .GlyphNames ));};func _dbg ()StdFont {_gef .Do (_ag );_eed :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};return NewStdFont (_eed ,_agf );};func TtfParseFile (fileStr string )(TtfType ,error ){_ege ,_abd :=_a .Open (fileStr );if _abd !=nil {return TtfType {},_abd ;};defer _ege .Close ();return TtfParse (_ege );};func (_fb StdFont )Name ()string {return string (_fb ._bg .Name )};func (_cg *ttfParser )ParseComponents ()error {if _fde :=_cg .ParseHead ();_fde !=nil {return _fde ;};if _fgc :=_cg .ParseHhea ();_fgc !=nil {return _fgc ;};if _daa :=_cg .ParseMaxp ();_daa !=nil {return _daa ;};if _cae :=_cg .ParseHmtx ();_cae !=nil {return _cae ;};if _ ,_ceed :=_cg ._acf ["\u006e\u0061\u006d\u0065"];_ceed {if _bgga :=_cg .ParseName ();_bgga !=nil {return _bgga ;};};if _ ,_fdde :=_cg ._acf ["\u004f\u0053\u002f\u0032"];_fdde {if _caa :=_cg .ParseOS2 ();_caa !=nil {return _caa ;};};if _ ,_fec :=_cg ._acf ["\u0070\u006f\u0073\u0074"];_fec {if _ebf :=_cg .ParsePost ();_ebf !=nil {return _ebf ;};};if _ ,_bfc :=_cg ._acf ["\u0063\u006d\u0061\u0070"];_bfc {if _bdbe :=_cg .ParseCmap ();_bdbe !=nil {return _bdbe ;};};return nil ;};func (_gee *ttfParser )ParsePost ()error {if _gfae :=_gee .Seek ("\u0070\u006f\u0073\u0074");_gfae !=nil {return _gfae ;};_cbfe :=_gee .Read32Fixed ();_gee ._cfaf .ItalicAngle =_gee .Read32Fixed ();_gee ._cfaf .UnderlinePosition =_gee .ReadShort ();_gee ._cfaf .UnderlineThickness =_gee .ReadShort ();_gee ._cfaf .IsFixedPitch =_gee .ReadULong ()!=0;_gee .ReadULong ();_gee .ReadULong ();_gee .ReadULong ();_gee .ReadULong ();_ab .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_cbfe );switch _cbfe {case 1.0:_gee ._cfaf .GlyphNames =_cceg ;case 2.0:_badc :=int (_gee .ReadUShort ());_bfg :=make ([]int ,_badc );_gee ._cfaf .GlyphNames =make ([]GlyphName ,_badc );_bebc :=-1;for _fbfd :=0;_fbfd < _badc ;_fbfd ++{_dcf :=int (_gee .ReadUShort ());_bfg [_fbfd ]=_dcf ;if _dcf <=0x7fff&&_dcf > _bebc {_bebc =_dcf ;};};var _abg []GlyphName ;if _bebc >=len (_cceg ){_abg =make ([]GlyphName ,_bebc -len (_cceg )+1);for _bgeeg :=0;_bgeeg < _bebc -len (_cceg )+1;_bgeeg ++{_ged :=int (_gee .readByte ());_cge ,_aec :=_gee .ReadStr (_ged );if _aec !=nil {return _aec ;};_abg [_bgeeg ]=GlyphName (_cge );};};for _cbc :=0;_cbc < _badc ;_cbc ++{_gdgb :=_bfg [_cbc ];if _gdgb < len (_cceg ){_gee ._cfaf .GlyphNames [_cbc ]=_cceg [_gdgb ];}else if _gdgb >=len (_cceg )&&_gdgb <=32767{_gee ._cfaf .GlyphNames [_cbc ]=_abg [_gdgb -len (_cceg )];}else {_gee ._cfaf .GlyphNames [_cbc ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_egcf :=make ([]int ,_gee ._bfe );for _ebfa :=0;_ebfa < len (_egcf );_ebfa ++{_fedc :=int (_gee .ReadSByte ());_egcf [_ebfa ]=_ebfa +1+_fedc ;};_gee ._cfaf .GlyphNames =make ([]GlyphName ,len (_egcf ));for _beaaa :=0;_beaaa < len (_gee ._cfaf .GlyphNames );_beaaa ++{_fbac :=_cceg [_egcf [_beaaa ]];_gee ._cfaf .GlyphNames [_beaaa ]=_fbac ;};case 3.0:_ab .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");default:_ab .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_cbfe );};return nil ;};var _bc =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};func init (){RegisterStdFont (CourierName ,_ac ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");RegisterStdFont (CourierBoldName ,_ba ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_dbg ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");RegisterStdFont (CourierBoldObliqueName ,_fbe ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););var _gcc map[rune ]CharMetrics ;func (_dad *ttfParser )parseCmapFormat0 ()error {_gdb ,_cgc :=_dad .ReadStr (256);if _cgc !=nil {return _cgc ;};_ace :=[]byte (_gdb );_ab .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_dad ._cfaf .String (),_gdb ,_ace );for _ffe ,_gadd :=range _ace {_dad ._cfaf .Chars [rune (_ffe )]=GID (_gadd );};return nil ;};func (_cda *TtfType )MakeToUnicode ()*_gfd .CMap {_gfa :=make (map[_gfd .CharCode ]rune );if len (_cda .GlyphNames )==0{return _gfd .NewToUnicodeCMap (_gfa );};for _fafc ,_bcb :=range _cda .Chars {_dc :=_gfd .CharCode (_fafc );_aba :=_cda .GlyphNames [_bcb ];_fbec ,_eff :=_cc .GlyphToRune (_aba );if !_eff {_ab .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_fafc ,_aba );_fbec =_cc .MissingCodeRune ;};_gfa [_dc ]=_fbec ;};return _gfd .NewToUnicodeCMap (_gfa );};func _fdd (){_egg =make (map[rune ]CharMetrics ,len (_bge ));_dbgf =make (map[rune ]CharMetrics ,len (_bge ));_bdb =make (map[rune ]CharMetrics ,len (_bge ));_ddf =make (map[rune ]CharMetrics ,len (_bge ));for _edgaf ,_bdc :=range _bge {_egg [_bdc ]=CharMetrics {Wx :float64 (_cfaa [_edgaf ])};_dbgf [_bdc ]=CharMetrics {Wx :float64 (_fgd [_edgaf ])};_bdb [_bdc ]=CharMetrics {Wx :float64 (_bdf [_edgaf ])};_ddf [_bdc ]=CharMetrics {Wx :float64 (_fae [_edgaf ])};};};func (_be StdFont )ToPdfObject ()_bd .PdfObject {_eg :=_bd .MakeDict ();_eg .Set ("\u0054\u0079\u0070\u0065",_bd .MakeName ("\u0046\u006f\u006e\u0074"));_eg .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bd .MakeName ("\u0054\u0079\u0070e\u0031"));_eg .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_bd .MakeName (_be .Name ()));_eg .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_be ._ed .ToPdfObject ());return _bd .MakeIndirectObject (_eg );};var _bdf =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};func (_ddfd *ttfParser )parseCmapVersion (_ffc int64 )error {_ab .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_ffc );if _ddfd ._cfaf .Chars ==nil {_ddfd ._cfaf .Chars =make (map[rune ]GID );};_ddfd ._cea .Seek (int64 (_ddfd ._acf ["\u0063\u006d\u0061\u0070"])+_ffc ,_g .SeekStart );var _gcdc ,_fbf uint32 ;_fge :=_ddfd .ReadUShort ();if _fge < 8{_gcdc =uint32 (_ddfd .ReadUShort ());_fbf =uint32 (_ddfd .ReadUShort ());}else {_ddfd .ReadUShort ();_gcdc =_ddfd .ReadULong ();_fbf =_ddfd .ReadULong ();};_ab .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_fge ,_gcdc ,_fbf );switch _fge {case 0:return _ddfd .parseCmapFormat0 ();case 6:return _ddfd .parseCmapFormat6 ();case 12:return _ddfd .parseCmapFormat12 ();default:_ab .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_fge );return nil ;};};func (_cbd *ttfParser )ParseMaxp ()error {if _bbf :=_cbd .Seek ("\u006d\u0061\u0078\u0070");_bbf !=nil {return _bbf ;};_cbd .Skip (4);_cbd ._bfe =_cbd .ReadUShort ();return nil ;};var _ccd =make (map[StdFontName ]func ()StdFont );type Descriptor struct{Name StdFontName ;Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};func init (){RegisterStdFont (HelveticaName ,_df ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_acg ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_bag ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_edf ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");};func (_effc *ttfParser )ParseCmap ()error {var _cfd int64 ;if _aae :=_effc .Seek ("\u0063\u006d\u0061\u0070");_aae !=nil {return _aae ;};_ab .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_effc .ReadUShort ();_dea :=int (_effc .ReadUShort ());_abdg :=int64 (0);_beb :=int64 (0);_abf :=int64 (0);for _bedb :=0;_bedb < _dea ;_bedb ++{_bba :=_effc .ReadUShort ();_beaae :=_effc .ReadUShort ();_cfd =int64 (_effc .ReadULong ());if _bba ==3&&_beaae ==1{_beb =_cfd ;}else if _bba ==3&&_beaae ==10{_abf =_cfd ;}else if _bba ==1&&_beaae ==0{_abdg =_cfd ;};};if _abdg !=0{if _fegd :=_effc .parseCmapVersion (_abdg );_fegd !=nil {return _fegd ;};};if _beb !=0{if _aabd :=_effc .parseCmapSubtable31 (_beb );_aabd !=nil {return _aabd ;};};if _abf !=0{if _gfc :=_effc .parseCmapVersion (_abf );_gfc !=nil {return _gfc ;};};if _beb ==0&&_abdg ==0&&_abf ==0{_ab .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");};return nil ;};func (_abcc *ttfParser )ReadShort ()(_cgf int16 ){_ad .Read (_abcc ._cea ,_ad .BigEndian ,&_cgf );return _cgf ;};var _eec _f .Once ;func (_aaf *ttfParser )parseCmapFormat6 ()error {_ddfg :=int (_aaf .ReadUShort ());_dab :=int (_aaf .ReadUShort ());_ab .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_aaf ._cfaf .String (),_ddfg ,_dab );for _ede :=0;_ede < _dab ;_ede ++{_gdg :=GID (_aaf .ReadUShort ());_aaf ._cfaf .Chars [rune (_ede +_ddfg )]=_gdg ;};return nil ;};var _cfaa =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};func (_cag *ttfParser )ReadStr (length int )(string ,error ){_eab :=make ([]byte ,length );_bde ,_efcd :=_cag ._cea .Read (_eab );if _efcd !=nil {return "",_efcd ;}else if _bde !=length {return "",_d .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );};return string (_eab ),nil ;};type GID =_cc .GID ;var _ega _f .Once ;func _df ()StdFont {_eec .Do (_fac );_aab :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};return NewStdFont (_aab ,_dac );};var _fba map[rune ]CharMetrics ;type ttfParser struct{_cfaf TtfType ;_cea _g .ReadSeeker ;_acf map[string ]uint32 ;_dge uint16 ;_bfe uint16 ;};func (_eba *TtfType )NewEncoder ()_cc .TextEncoder {return _cc .NewTrueTypeFontEncoder (_eba .Chars )};var _fbb map[rune ]CharMetrics ;func init (){RegisterStdFont (SymbolName ,_ecd ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");RegisterStdFont (ZapfDingbatsName ,_efg );};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_cfa :=_ccd [name ];_cfa {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));};_ccd [name ]=fnc ;for _ ,_eca :=range aliases {RegisterStdFont (_eca ,fnc );};};func (_ef CharMetrics )String ()string {return _d .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_ef .Wx ,_ef .Wy );};var _agf map[rune ]CharMetrics ;func _ag (){const _gg =600;_bgg =make (map[rune ]CharMetrics ,len (_bge ));for _ ,_de :=range _bge {_bgg [_de ]=CharMetrics {Wx :_gg };};_fba =_bgg ;_bed =_bgg ;_agf =_bgg ;};var _ddf map[rune ]CharMetrics ;func init (){RegisterStdFont (TimesRomanName ,_aabf ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");RegisterStdFont (TimesBoldName ,_bgee ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (TimesItalicName ,_bad ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (TimesBoldItalicName ,_cbe ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");};func _acg ()StdFont {_eec .Do (_fac );_cb :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};return NewStdFont (_cb ,_fbb );};func _ac ()StdFont {_gef .Do (_ag );_add :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};return NewStdFont (_add ,_bgg );};func (_cd StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_db ,_fg :=_cd ._dg [r ];return _db ,_fg ;};type CharMetrics struct{Wx float64 ;Wy float64 ;};var _dac map[rune ]CharMetrics ;func (_cee *ttfParser )Parse ()(TtfType ,error ){_efbe ,_fefd :=_cee .ReadStr (4);if _fefd !=nil {return TtfType {},_fefd ;};if _efbe =="\u004f\u0054\u0054\u004f"{return TtfType {},_cf .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_bd .ErrNotSupported );};if _efbe !="\u0000\u0001\u0000\u0000"&&_efbe !="\u0074\u0072\u0075\u0065"{_ab .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_efbe );};_bgf :=int (_cee .ReadUShort ());_cee .Skip (3*2);_cee ._acf =make (map[string ]uint32 );var _ecc string ;for _gbb :=0;_gbb < _bgf ;_gbb ++{_ecc ,_fefd =_cee .ReadStr (4);if _fefd !=nil {return TtfType {},_fefd ;};_cee .Skip (4);_cfe :=_cee .ReadULong ();_cee .Skip (4);_cee ._acf [_ecc ]=_cfe ;};_ab .Log .Trace (_dbe (_cee ._acf ));if _fefd =_cee .ParseComponents ();_fefd !=nil {return TtfType {},_fefd ;};return _cee ._cfaf ,nil ;};var _fgd =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};var _fed =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};type Font interface{Encoder ()_cc .TextEncoder ;GetRuneMetrics (_gb rune )(CharMetrics ,bool );};func (_dgc *ttfParser )parseCmapFormat12 ()error {_fbg :=_dgc .ReadULong ();_ab .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_dgc ._cfaf .String (),_fbg );for _abfc :=uint32 (0);_abfc < _fbg ;_abfc ++{_fdg :=_dgc .ReadULong ();_adf :=_dgc .ReadULong ();_dgb :=_dgc .ReadULong ();if _fdg > 0x0010FFFF||(0xD800<=_fdg &&_fdg <=0xDFFF){return _ga .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};if _adf < _fdg ||_adf > 0x0010FFFF||(0xD800<=_adf &&_adf <=0xDFFF){return _ga .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _gbc :=_fdg ;_gbc <=_adf ;_gbc ++{if _gbc > 0x10FFFF{_ab .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");};_dgc ._cfaf .Chars [rune (_gbc )]=GID (_dgb );_dgb ++;};};return nil ;};func (_fee *ttfParser )ParseHhea ()error {if _eaa :=_fee .Seek ("\u0068\u0068\u0065\u0061");_eaa !=nil {return _eaa ;};_fee .Skip (4+15*2);_fee ._dge =_fee .ReadUShort ();return nil ;};type StdFontName string ;var _egg map[rune ]CharMetrics ;func (_agg *ttfParser )Skip (n int ){_agg ._cea .Seek (int64 (n ),_g .SeekCurrent )};func _dbe (_dbgg map[string ]uint32 )string {var _ddff []string ;for _ecce :=range _dbgg {_ddff =append (_ddff ,_ecce );};_b .Slice (_ddff ,func (_ca ,_gea int )bool {return _dbgg [_ddff [_ca ]]< _dbgg [_ddff [_gea ]]});_cad :=[]string {_d .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_dbgg ))};for _ ,_gaa :=range _ddff {_cad =append (_cad ,_d .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_gaa ,_dbgg [_gaa ]));};return _ec .Join (_cad ,"\u000a");};func (_ggc *ttfParser )parseCmapSubtable10 (_gcd int64 )error {if _ggc ._cfaf .Chars ==nil {_ggc ._cfaf .Chars =make (map[rune ]GID );};_ggc ._cea .Seek (int64 (_ggc ._acf ["\u0063\u006d\u0061\u0070"])+_gcd ,_g .SeekStart );var _cbf ,_fafcf uint32 ;_dda :=_ggc .ReadUShort ();if _dda < 8{_cbf =uint32 (_ggc .ReadUShort ());_fafcf =uint32 (_ggc .ReadUShort ());}else {_ggc .ReadUShort ();_cbf =_ggc .ReadULong ();_fafcf =_ggc .ReadULong ();};_ab .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_dda ,_cbf ,_fafcf );if _dda !=0{return _ga .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cgg ,_ebe :=_ggc .ReadStr (256);if _ebe !=nil {return _ebe ;};_gfe :=[]byte (_cgg );for _bbc ,_fdf :=range _gfe {_ggc ._cfaf .Chars [rune (_bbc )]=GID (_fdf );if _fdf !=0{_d .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_bbc ,_fdf ,rune (_fdf ));};};return nil ;};var _feg map[rune ]CharMetrics ;func NewStdFontByName (name StdFontName )(StdFont ,bool ){_ee ,_bb :=_ccd [name ];if !_bb {return StdFont {},false ;};return _ee (),true ;};func (_geb *ttfParser )Read32Fixed ()float64 {_fefc :=float64 (_geb .ReadShort ());_egac :=float64 (_geb .ReadUShort ())/65536.0;return _fefc +_egac ;};func NewStdFontWithEncoding (desc Descriptor ,metrics map[rune ]CharMetrics ,encoder _cc .TextEncoder )StdFont {var _aad rune =0xA0;if _ ,_edg :=metrics [_aad ];!_edg {metrics [_aad ]=metrics [0x20];};return StdFont {_bg :desc ,_dg :metrics ,_ed :encoder };};func _bgee ()StdFont {_ega .Do (_fdd );_bgeb :=Descriptor {Name :TimesBoldName ,Family :_gfbc ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};return NewStdFont (_bgeb ,_dbgf );};var _dbgf map[rune ]CharMetrics ;func (_aebd *TtfType )MakeEncoder ()(_cc .SimpleEncoder ,error ){_bff :=make (map[_cc .CharCode ]GlyphName );for _cec :=_cc .CharCode (0);_cec <=256;_cec ++{_efa :=rune (_cec );_fef ,_fegf :=_aebd .Chars [_efa ];if !_fegf {continue ;};var _ebc GlyphName ;if int (_fef )>=0&&int (_fef )< len (_aebd .GlyphNames ){_ebc =_aebd .GlyphNames [_fef ];}else {_bdbb :=rune (_fef );if _faf ,_baa :=_cc .RuneToGlyph (_bdbb );_baa {_ebc =_faf ;};};if _ebc !=""{_bff [_cec ]=_ebc ;};};if len (_bff )==0{_ab .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_aebd ,_aebd .Chars );};return _cc .NewCustomSimpleTextEncoder (_bff ,nil );};func _aabf ()StdFont {_ega .Do (_fdd );_fd :=Descriptor {Name :TimesRomanName ,Family :_gfbc ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};return NewStdFont (_fd ,_egg );};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065"););func (_efc *ttfParser )ParseOS2 ()error {if _cggd :=_efc .Seek ("\u004f\u0053\u002f\u0032");_cggd !=nil {return _cggd ;};_dbf :=_efc .ReadUShort ();_efc .Skip (4*2);_efc .Skip (11*2+10+4*4+4);_cbdc :=_efc .ReadUShort ();_efc ._cfaf .Bold =(_cbdc &32)!=0;_efc .Skip (2*2);_efc ._cfaf .TypoAscender =_efc .ReadShort ();_efc ._cfaf .TypoDescender =_efc .ReadShort ();if _dbf >=2{_efc .Skip (3*2+2*4+2);_efc ._cfaf .CapHeight =_efc .ReadShort ();}else {_efc ._cfaf .CapHeight =0;};return nil ;};func NewFontFile2FromPdfObject (obj _bd .PdfObject )(TtfType ,error ){obj =_bd .TraceToDirectObject (obj );_adg ,_dbc :=obj .(*_bd .PdfObjectStream );if !_dbc {_ab .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );return TtfType {},_bd .ErrTypeError ;};_cce ,_afd :=_bd .DecodeStream (_adg );if _afd !=nil {return TtfType {},_afd ;};_ebag :=ttfParser {_cea :_gf .NewReader (_cce )};return _ebag .Parse ();};var _cceg =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};type FontWeight int ;type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};var _cbb =map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}};func TtfParse (r _g .ReadSeeker )(TtfType ,error ){_cdd :=&ttfParser {_cea :r };return _cdd .Parse ()};type StdFont struct{_bg Descriptor ;_dg map[rune ]CharMetrics ;_ed _cc .TextEncoder ;};func (_efcb *ttfParser )ReadULong ()(_gcf uint32 ){_ad .Read (_efcb ._cea ,_ad .BigEndian ,&_gcf );return _gcf ;};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);func _bag ()StdFont {_eec .Do (_fac );_fe :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};return NewStdFont (_fe ,_feg );};func (_dbb StdFont )Descriptor ()Descriptor {return _dbb ._bg };func (_eeca *ttfParser )readByte ()(_fca uint8 ){_ad .Read (_eeca ._cea ,_ad .BigEndian ,&_fca );return _fca ;};func (_da StdFont )GetMetricsTable ()map[rune ]CharMetrics {return _da ._dg };func (_ccdf *ttfParser )ParseName ()error {if _ddb :=_ccdf .Seek ("\u006e\u0061\u006d\u0065");_ddb !=nil {return _ddb ;};_ecbf ,_ :=_ccdf ._cea .Seek (0,_g .SeekCurrent );_ccdf ._cfaf .PostScriptName ="";_ccdf .Skip (2);_afa :=_ccdf .ReadUShort ();_gab :=_ccdf .ReadUShort ();for _aeg :=uint16 (0);_aeg < _afa &&_ccdf ._cfaf .PostScriptName =="";_aeg ++{_ccdf .Skip (3*2);_edfg :=_ccdf .ReadUShort ();_gga :=_ccdf .ReadUShort ();_baac :=_ccdf .ReadUShort ();if _edfg ==6{_ccdf ._cea .Seek (_ecbf +int64 (_gab )+int64 (_baac ),_g .SeekStart );_dga ,_bebf :=_ccdf .ReadStr (int (_gga ));if _bebf !=nil {return _bebf ;};_dga =_ec .Replace (_dga ,"\u0000","",-1);_aca ,_bebf :=_c .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _bebf !=nil {return _bebf ;};_ccdf ._cfaf .PostScriptName =_aca .ReplaceAllString (_dga ,"");};};if _ccdf ._cfaf .PostScriptName ==""{_ab .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");};return nil ;};var _ Font =StdFont {};func (_gdgc *ttfParser )ReadSByte ()(_abc int8 ){_ad .Read (_gdgc ._cea ,_ad .BigEndian ,&_abc );return _abc ;};func _fac (){_dac =make (map[rune ]CharMetrics ,len (_bge ));_fbb =make (map[rune ]CharMetrics ,len (_bge ));for _aeb ,_fbeb :=range _bge {_dac [_fbeb ]=CharMetrics {Wx :float64 (_fed [_aeb ])};_fbb [_fbeb ]=CharMetrics {Wx :float64 (_bc [_aeb ])};};_feg =_dac ;_gcc =_fbb ;};const (_gfbc ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063"););func NewStdFont (desc Descriptor ,metrics map[rune ]CharMetrics )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_cc .NewStandardEncoder ());};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););var _bgg map[rune ]CharMetrics ;func _efg ()StdFont {_ce :=_cc .NewZapfDingbatsEncoder ();_ebb :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};return NewStdFontWithEncoding (_ebb ,_ff ,_ce );};func _cbe ()StdFont {_ega .Do (_fdd );_face :=Descriptor {Name :TimesBoldItalicName ,Family :_gfbc ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};return NewStdFont (_face ,_bdb );};func (_efd *ttfParser )parseCmapSubtable31 (_bfa int64 )error {_bee :=make ([]rune ,0,8);_fc :=make ([]rune ,0,8);_fgf :=make ([]int16 ,0,8);_caaf :=make ([]uint16 ,0,8);_efd ._cfaf .Chars =make (map[rune ]GID );_efd ._cea .Seek (int64 (_efd ._acf ["\u0063\u006d\u0061\u0070"])+_bfa ,_g .SeekStart );_ebfe :=_efd .ReadUShort ();if _ebfe !=4{return _cf .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_ebfe ,_bd .ErrNotSupported );};_efd .Skip (2*2);_gfg :=int (_efd .ReadUShort ()/2);_efd .Skip (3*2);for _dca :=0;_dca < _gfg ;_dca ++{_fc =append (_fc ,rune (_efd .ReadUShort ()));};_efd .Skip (2);for _beaa :=0;_beaa < _gfg ;_beaa ++{_bee =append (_bee ,rune (_efd .ReadUShort ()));};for _cdaa :=0;_cdaa < _gfg ;_cdaa ++{_fgf =append (_fgf ,_efd .ReadShort ());};_cgd ,_ :=_efd ._cea .Seek (int64 (0),_g .SeekCurrent );for _ecb :=0;_ecb < _gfg ;_ecb ++{_caaf =append (_caaf ,_efd .ReadUShort ());};for _cdb :=0;_cdb < _gfg ;_cdb ++{_fbaa :=_bee [_cdb ];_acd :=_fc [_cdb ];_eea :=_fgf [_cdb ];_cde :=_caaf [_cdb ];if _cde > 0{_efd ._cea .Seek (_cgd +2*int64 (_cdb )+int64 (_cde ),_g .SeekStart );};for _dcad :=_fbaa ;_dcad <=_acd ;_dcad ++{if _dcad ==0xFFFF{break ;};var _fda int32 ;if _cde > 0{_fda =int32 (_efd .ReadUShort ());if _fda > 0{_fda +=int32 (_eea );};}else {_fda =_dcad +int32 (_eea );};if _fda >=65536{_fda -=65536;};if _fda > 0{_efd ._cfaf .Chars [_dcad ]=GID (_fda );};};};return nil ;};func (_gfbd *ttfParser )ReadUShort ()(_aea uint16 ){_ad .Read (_gfbd ._cea ,_ad .BigEndian ,&_aea );return _aea ;};func IsStdFont (name StdFontName )bool {_ ,_gfb :=_ccd [name ];return _gfb };func (_deb *ttfParser )Seek (tag string )error {_agfe ,_ccb :=_deb ._acf [tag ];if !_ccb {return _d .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );};_deb ._cea .Seek (int64 (_agfe ),_g .SeekStart );return nil ;};