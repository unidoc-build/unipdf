//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_b "bytes";_d "encoding/binary";_f "errors";_e "fmt";_de "github.com/unidoc/unipdf/v3/common";_ae "github.com/unidoc/unipdf/v3/core";_da "github.com/unidoc/unipdf/v3/internal/cmap";_fb "github.com/unidoc/unipdf/v3/internal/textencoding";
_cf "io";_ca "os";_ee "regexp";_ac "sort";_c "strings";_g "sync";);var _acd _g .Once ;var _bgg *RuneCharSafeMap ;func (_ffb StdFont )ToPdfObject ()_ae .PdfObject {_dea :=_ae .MakeDict ();_dea .Set ("\u0054\u0079\u0070\u0065",_ae .MakeName ("\u0046\u006f\u006e\u0074"));
_dea .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_ae .MakeName ("\u0054\u0079\u0070e\u0031"));_dea .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_ae .MakeName (_ffb .Name ()));_dea .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ffb ._efb .ToPdfObject ());
return _ae .MakeIndirectObject (_dea );};func (_eeg *ttfParser )ReadStr (length int )(string ,error ){_fbgg :=make ([]byte ,length );_eadb ,_eedg :=_eeg ._dcb .Read (_fbgg );if _eedg !=nil {return "",_eedg ;}else if _eadb !=length {return "",_e .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_fbgg ),nil ;};var _egf *RuneCharSafeMap ;func (_eba *ttfParser )ReadShort ()(_gcf int16 ){_d .Read (_eba ._dcb ,_d .BigEndian ,&_gcf );return _gcf };func (_fda *RuneCharSafeMap )Range (f func (_df rune ,_ace CharMetrics )(_aee bool )){_fda ._ab .RLock ();
defer _fda ._ab .RUnlock ();for _gd ,_ba :=range _fda ._cd {if f (_gd ,_ba ){break ;};};};var _cdf =&fontMap {_dgc :make (map[StdFontName ]func ()StdFont )};func (_bada *ttfParser )Seek (tag string )error {_cdd ,_fbg :=_bada ._ffa [tag ];if !_fbg {return _e .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );
};_bada ._dcb .Seek (int64 (_cdd ),_cf .SeekStart );return nil ;};func TtfParse (r _cf .ReadSeeker )(TtfType ,error ){_bed :=&ttfParser {_dcb :r };return _bed .Parse ()};func NewStdFontByName (name StdFontName )(StdFont ,bool ){_cg ,_gg :=_cdf .read (name );
if !_gg {return StdFont {},false ;};return _cg (),true ;};func (_agf *ttfParser )ParseHmtx ()error {if _fcf :=_agf .Seek ("\u0068\u006d\u0074\u0078");_fcf !=nil {return _fcf ;};_agf ._ecf .Widths =make ([]uint16 ,0,8);for _ecfc :=uint16 (0);_ecfc < _agf ._ecc ;
_ecfc ++{_agf ._ecf .Widths =append (_agf ._ecf .Widths ,_agf .ReadUShort ());_agf .Skip (2);};if _agf ._ecc < _agf ._eff &&_agf ._ecc > 0{_bafg :=_agf ._ecf .Widths [_agf ._ecc -1];for _bdbb :=_agf ._ecc ;_bdbb < _agf ._eff ;_bdbb ++{_agf ._ecf .Widths =append (_agf ._ecf .Widths ,_bafg );
};};return nil ;};var _ Font =StdFont {};func (_bfb StdFont )GetMetricsTable ()*RuneCharSafeMap {return _bfb ._cdg };func (_ggg StdFont )Descriptor ()Descriptor {return _ggg ._dfg };const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");
CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
);var _cdfd =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
func (_acec *ttfParser )Parse ()(TtfType ,error ){_efbf ,_gb :=_acec .ReadStr (4);if _gb !=nil {return TtfType {},_gb ;};if _efbf !="\u0000\u0001\u0000\u0000"&&_efbf !="\u0074\u0072\u0075\u0065"{_de .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_efbf );
};_cgf :=int (_acec .ReadUShort ());_acec .Skip (3*2);_acec ._ffa =make (map[string ]uint32 );var _cca string ;for _bfa :=0;_bfa < _cgf ;_bfa ++{_cca ,_gb =_acec .ReadStr (4);if _gb !=nil {return TtfType {},_gb ;};_acec .Skip (4);_eaf :=_acec .ReadULong ();
_acec .Skip (4);_acec ._ffa [_cca ]=_eaf ;};_de .Log .Trace (_ed (_acec ._ffa ));if _gb =_acec .ParseComponents ();_gb !=nil {return TtfType {},_gb ;};return _acec ._ecf ,nil ;};func IsStdFont (name StdFontName )bool {_ ,_fdb :=_cdf .read (name );return _fdb };
var _fad =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););var _dgdd _g .Once ;var _gfa *RuneCharSafeMap ;const (FontWeightMedium FontWeight =iota ;
FontWeightBold ;FontWeightRoman ;);func (_be *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_be ._ab .RLock ();defer _be ._ab .RUnlock ();_bce ,_eed :=_be ._cd [b ];return _bce ,_eed ;};var _bcee *RuneCharSafeMap ;type GlyphName =_fb .GlyphName ;
func (_gbd *ttfParser )ParseHhea ()error {if _eacb :=_gbd .Seek ("\u0068\u0068\u0065\u0061");_eacb !=nil {return _eacb ;};_gbd .Skip (4+15*2);_gbd ._ecc =_gbd .ReadUShort ();return nil ;};func (_bfc *ttfParser )ParseOS2 ()error {if _cafa :=_bfc .Seek ("\u004f\u0053\u002f\u0032");
_cafa !=nil {return _cafa ;};_adf :=_bfc .ReadUShort ();_bfc .Skip (4*2);_bfc .Skip (11*2+10+4*4+4);_cgc :=_bfc .ReadUShort ();_bfc ._ecf .Bold =(_cgc &32)!=0;_bfc .Skip (2*2);_bfc ._ecf .TypoAscender =_bfc .ReadShort ();_bfc ._ecf .TypoDescender =_bfc .ReadShort ();
if _adf >=2{_bfc .Skip (3*2+2*4+2);_bfc ._ecf .CapHeight =_bfc .ReadShort ();}else {_bfc ._ecf .CapHeight =0;};return nil ;};const (_daf ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");
TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
);func (_ffaf *ttfParser )parseCmapFormat0 ()error {_ecbd ,_eeaf :=_ffaf .ReadStr (256);if _eeaf !=nil {return _eeaf ;};_gfae :=[]byte (_ecbd );_de .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_ffaf ._ecf .String (),_ecbd ,_gfae );
for _gcd ,_gef :=range _gfae {_ffaf ._ecf .Chars [rune (_gcd )]=GID (_gef );};return nil ;};var _ffg *RuneCharSafeMap ;func init (){RegisterStdFont (CourierName ,_cac ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_cfe ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_fcd ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_dc ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};var _bca _g .Once ;func _dgd ()StdFont {_dgdd .Do (_fbb );_eea :=Descriptor {Name :TimesBoldItalicName ,Family :_daf ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_eea ,_cbe );};func (_adcc *ttfParser )ParseName ()error {if _fagg :=_adcc .Seek ("\u006e\u0061\u006d\u0065");_fagg !=nil {return _fagg ;};_bbb ,_ :=_adcc ._dcb .Seek (0,_cf .SeekCurrent );_adcc ._ecf .PostScriptName ="";_adcc .Skip (2);
_egg :=_adcc .ReadUShort ();_gfd :=_adcc .ReadUShort ();for _gefa :=uint16 (0);_gefa < _egg &&_adcc ._ecf .PostScriptName =="";_gefa ++{_adcc .Skip (3*2);_dbb :=_adcc .ReadUShort ();_eafc :=_adcc .ReadUShort ();_acfd :=_adcc .ReadUShort ();if _dbb ==6{_adcc ._dcb .Seek (_bbb +int64 (_gfd )+int64 (_acfd ),_cf .SeekStart );
_bcc ,_abc :=_adcc .ReadStr (int (_eafc ));if _abc !=nil {return _abc ;};_bcc =_c .Replace (_bcc ,"\u0000","",-1);_bge ,_abc :=_ee .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _abc !=nil {return _abc ;
};_adcc ._ecf .PostScriptName =_bge .ReplaceAllString (_bcc ,"");};};if _adcc ._ecf .PostScriptName ==""{_de .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func _fcd ()StdFont {_bca .Do (_eeb );_fdc :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_fdc ,_gee );};var _dd =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
func (_bf StdFont )Name ()string {return string (_bf ._dfg .Name )};func (_cgec *ttfParser )readByte ()(_adbc uint8 ){_d .Read (_cgec ._dcb ,_d .BigEndian ,&_adbc );return _adbc ;};func _adb ()StdFont {_acd .Do (_beg );_geb :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_geb ,_ffg );};func (_cde *RuneCharSafeMap )Length ()int {_cde ._ab .RLock ();defer _cde ._ab .RUnlock ();return len (_cde ._cd );};var _ged =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");
HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););func init (){RegisterStdFont (HelveticaName ,_gc ,"\u0041\u0072\u0069a\u006c");RegisterStdFont (HelveticaBoldName ,_adb ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");
RegisterStdFont (HelveticaObliqueName ,_aca ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_gaa ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func _bag ()StdFont {_dgdd .Do (_fbb );_becc :=Descriptor {Name :TimesItalicName ,Family :_daf ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};
return NewStdFont (_becc ,_gff );};func (_fd CharMetrics )String ()string {return _e .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_fd .Wx ,_fd .Wy );};var _gee *RuneCharSafeMap ;func (_faad *ttfParser )Skip (n int ){_faad ._dcb .Seek (int64 (n ),_cf .SeekCurrent )};
type StdFont struct{_dfg Descriptor ;_cdg *RuneCharSafeMap ;_efb _fb .TextEncoder ;};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_fb .NewStandardEncoder ());};type Descriptor struct{Name StdFontName ;
Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};var _cbe *RuneCharSafeMap ;func (_bedb *ttfParser )ReadULong ()(_gag uint32 ){_d .Read (_bedb ._dcb ,_d .BigEndian ,&_gag );
return _gag ;};func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_cd :make (map[rune ]CharMetrics ,length )};};func (_cec *ttfParser )parseCmapFormat12 ()error {_cdbb :=_cec .ReadULong ();_de .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_cec ._ecf .String (),_cdbb );
for _gdag :=uint32 (0);_gdag < _cdbb ;_gdag ++{_cfce :=_cec .ReadULong ();_cdc :=_cec .ReadULong ();_bgaa :=_cec .ReadULong ();if _cfce > 0x0010FFFF||(0xD800<=_cfce &&_cfce <=0xDFFF){return _f .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _cdc < _cfce ||_cdc > 0x0010FFFF||(0xD800<=_cdc &&_cdc <=0xDFFF){return _f .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _acfg :=_cfce ;_acfg <=_cdc ;
_acfg ++{if _acfg > 0x10FFFF{_de .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_cec ._ecf .Chars [rune (_acfg )]=GID (_bgaa );_bgaa ++;};};return nil ;};var _bef *RuneCharSafeMap ;var _egd =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func init (){RegisterStdFont (SymbolName ,_fae ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_dce );};func (_ddg *ttfParser )ParseMaxp ()error {if _dced :=_ddg .Seek ("\u006d\u0061\u0078\u0070");_dced !=nil {return _dced ;};_ddg .Skip (4);_ddg ._eff =_ddg .ReadUShort ();return nil ;};func _gc ()StdFont {_acd .Do (_beg );
_bfe :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};return NewStdFont (_bfe ,_gfa );
};func _dee ()StdFont {_dgdd .Do (_fbb );_geba :=Descriptor {Name :TimesRomanName ,Family :_daf ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_geba ,_bcae );};func (_ebf *ttfParser )ParsePost ()error {if _efd :=_ebf .Seek ("\u0070\u006f\u0073\u0074");_efd !=nil {return _efd ;};_agg :=_ebf .Read32Fixed ();_ebf ._ecf .ItalicAngle =_ebf .Read32Fixed ();_ebf ._ecf .UnderlinePosition =_ebf .ReadShort ();
_ebf ._ecf .UnderlineThickness =_ebf .ReadShort ();_ebf ._ecf .IsFixedPitch =_ebf .ReadULong ()!=0;_ebf .ReadULong ();_ebf .ReadULong ();_ebf .ReadULong ();_ebf .ReadULong ();_de .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_agg );
switch _agg {case 1.0:_ebf ._ecf .GlyphNames =_ged ;case 2.0:_aeeb :=int (_ebf .ReadUShort ());_gebe :=make ([]int ,_aeeb );_ebf ._ecf .GlyphNames =make ([]GlyphName ,_aeeb );_ecg :=-1;for _edd :=0;_edd < _aeeb ;_edd ++{_bccb :=int (_ebf .ReadUShort ());
_gebe [_edd ]=_bccb ;if _bccb <=0x7fff&&_bccb > _ecg {_ecg =_bccb ;};};var _fce []GlyphName ;if _ecg >=len (_ged ){_fce =make ([]GlyphName ,_ecg -len (_ged )+1);for _aaac :=0;_aaac < _ecg -len (_ged )+1;_aaac ++{_acda :=int (_ebf .readByte ());_deea ,_cfb :=_ebf .ReadStr (_acda );
if _cfb !=nil {return _cfb ;};_fce [_aaac ]=GlyphName (_deea );};};for _bgd :=0;_bgd < _aeeb ;_bgd ++{_dddb :=_gebe [_bgd ];if _dddb < len (_ged ){_ebf ._ecf .GlyphNames [_bgd ]=_ged [_dddb ];}else if _dddb >=len (_ged )&&_dddb <=32767{_ebf ._ecf .GlyphNames [_bgd ]=_fce [_dddb -len (_ged )];
}else {_ebf ._ecf .GlyphNames [_bgd ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_fcc :=make ([]int ,_ebf ._eff );for _ffab :=0;_ffab < len (_fcc );_ffab ++{_gdd :=int (_ebf .ReadSByte ());_fcc [_ffab ]=_ffab +1+_gdd ;};
_ebf ._ecf .GlyphNames =make ([]GlyphName ,len (_fcc ));for _dcd :=0;_dcd < len (_ebf ._ecf .GlyphNames );_dcd ++{_daad :=_ged [_fcc [_dcd ]];_ebf ._ecf .GlyphNames [_dcd ]=_daad ;};case 3.0:_de .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_de .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_agg );};return nil ;};func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_ag :=_cdf .read (name );
_ag {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));};_cdf .write (name ,fnc );for _ ,_gdb :=range aliases {RegisterStdFont (_gdb ,fnc );};};func init (){RegisterStdFont (TimesRomanName ,_dee ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");
RegisterStdFont (TimesBoldName ,_cad ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (TimesItalicName ,_bag ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (TimesBoldItalicName ,_dgd ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_fgc *ttfParser )ParseHead ()error {if _dcg :=_fgc .Seek ("\u0068\u0065\u0061\u0064");_dcg !=nil {return _dcg ;};_fgc .Skip (3*4);_dbc :=_fgc .ReadULong ();if _dbc !=0x5F0F3CF5{_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_fgc );
};_fgc .Skip (2);_fgc ._ecf .UnitsPerEm =_fgc .ReadUShort ();_fgc .Skip (2*8);_fgc ._ecf .Xmin =_fgc .ReadShort ();_fgc ._ecf .Ymin =_fgc .ReadShort ();_fgc ._ecf .Xmax =_fgc .ReadShort ();_fgc ._ecf .Ymax =_fgc .ReadShort ();return nil ;};func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _fb .TextEncoder )StdFont {var _bg rune =0xA0;
if _ ,_ge :=metrics .Read (_bg );!_ge {_fc ,_ :=metrics .Read (0x20);metrics .Write (_bg ,_fc );};return StdFont {_dfg :desc ,_cdg :metrics ,_efb :encoder };};func (_eaea *TtfType )MakeEncoder ()(_fb .SimpleEncoder ,error ){_deb :=make (map[_fb .CharCode ]GlyphName );
for _dec :=_fb .CharCode (0);_dec <=256;_dec ++{_ecb :=rune (_dec );_bcd ,_ccd :=_eaea .Chars [_ecb ];if !_ccd {continue ;};var _dgcf GlyphName ;if int (_bcd )>=0&&int (_bcd )< len (_eaea .GlyphNames ){_dgcf =_eaea .GlyphNames [_bcd ];}else {_cef :=rune (_bcd );
if _fdcb ,_efa :=_fb .RuneToGlyph (_cef );_efa {_dgcf =_fdcb ;};};if _dgcf !=""{_deb [_dec ]=_dgcf ;};};if len (_deb )==0{_de .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_eaea ,_eaea .Chars );
};return _fb .NewCustomSimpleTextEncoder (_deb ,nil );};func (_ad *fontMap )write (_ece StdFontName ,_af func ()StdFont ){_ad .Lock ();defer _ad .Unlock ();_ad ._dgc [_ece ]=_af ;};func (_fcfa *ttfParser )ReadUShort ()(_eec uint16 ){_d .Read (_fcfa ._dcb ,_d .BigEndian ,&_eec );
return _eec ;};func (_bee *ttfParser )parseCmapSubtable10 (_agda int64 )error {if _bee ._ecf .Chars ==nil {_bee ._ecf .Chars =make (map[rune ]GID );};_bee ._dcb .Seek (int64 (_bee ._ffa ["\u0063\u006d\u0061\u0070"])+_agda ,_cf .SeekStart );var _ecfg ,_bff uint32 ;
_dbdg :=_bee .ReadUShort ();if _dbdg < 8{_ecfg =uint32 (_bee .ReadUShort ());_bff =uint32 (_bee .ReadUShort ());}else {_bee .ReadUShort ();_ecfg =_bee .ReadULong ();_bff =_bee .ReadULong ();};_de .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_dbdg ,_ecfg ,_bff );
if _dbdg !=0{return _f .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_adcb ,_aada :=_bee .ReadStr (256);
if _aada !=nil {return _aada ;};_gbb :=[]byte (_adcb );for _bea ,_dcef :=range _gbb {_bee ._ecf .Chars [rune (_bea )]=GID (_dcef );if _dcef !=0{_e .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_bea ,_dcef ,rune (_dcef ));
};};return nil ;};func (_cba *ttfParser )ParseComponents ()error {if _aea :=_cba .ParseHead ();_aea !=nil {return _aea ;};if _aad :=_cba .ParseHhea ();_aad !=nil {return _aad ;};if _gcc :=_cba .ParseMaxp ();_gcc !=nil {return _gcc ;};if _eccc :=_cba .ParseHmtx ();
_eccc !=nil {return _eccc ;};if _ ,_dgg :=_cba ._ffa ["\u006e\u0061\u006d\u0065"];_dgg {if _adac :=_cba .ParseName ();_adac !=nil {return _adac ;};};if _ ,_dca :=_cba ._ffa ["\u004f\u0053\u002f\u0032"];_dca {if _faa :=_cba .ParseOS2 ();_faa !=nil {return _faa ;
};};if _ ,_cdfb :=_cba ._ffa ["\u0070\u006f\u0073\u0074"];_cdfb {if _dad :=_cba .ParsePost ();_dad !=nil {return _dad ;};};if _ ,_dbd :=_cba ._ffa ["\u0063\u006d\u0061\u0070"];_dbd {if _fdf :=_cba .ParseCmap ();_fdf !=nil {return _fdf ;};};return nil ;
};func _eeb (){const _fdae =600;_bcee =MakeRuneCharSafeMap (len (_dd ));for _ ,_eg :=range _dd {_bcee .Write (_eg ,CharMetrics {Wx :_fdae });};_cgb =_bcee .Copy ();_egf =_bcee .Copy ();_gee =_bcee .Copy ();};type ttfParser struct{_ecf TtfType ;_dcb _cf .ReadSeeker ;
_ffa map[string ]uint32 ;_ecc uint16 ;_eff uint16 ;};func _dce ()StdFont {_cab :=_fb .NewZapfDingbatsEncoder ();_fag :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_fag ,_bd ,_cab );};type Font interface{Encoder ()_fb .TextEncoder ;GetRuneMetrics (_ec rune )(CharMetrics ,bool );};type GID =_fb .GID ;type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;
IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};func _cac ()StdFont {_bca .Do (_eeb );
_aaf :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};return NewStdFont (_aaf ,_bcee );
};type RuneCharSafeMap struct{_cd map[rune ]CharMetrics ;_ab _g .RWMutex ;};func _fae ()StdFont {_ce :=_fb .NewSymbolEncoder ();_baf :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_baf ,_afd ,_ce );};var _bad *RuneCharSafeMap ;func (_ddd *ttfParser )parseCmapSubtable31 (_adg int64 )error {_debc :=make ([]rune ,0,8);_egb :=make ([]rune ,0,8);_bcaa :=make ([]int16 ,0,8);_adc :=make ([]uint16 ,0,8);_ddd ._ecf .Chars =make (map[rune ]GID );
_ddd ._dcb .Seek (int64 (_ddd ._ffa ["\u0063\u006d\u0061\u0070"])+_adg ,_cf .SeekStart );_fee :=_ddd .ReadUShort ();if _fee !=4{_de .Log .Debug ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_fee );
return nil ;};_ddd .Skip (2*2);_bbd :=int (_ddd .ReadUShort ()/2);_ddd .Skip (3*2);for _acg :=0;_acg < _bbd ;_acg ++{_egb =append (_egb ,rune (_ddd .ReadUShort ()));};_ddd .Skip (2);for _fgf :=0;_fgf < _bbd ;_fgf ++{_debc =append (_debc ,rune (_ddd .ReadUShort ()));
};for _daa :=0;_daa < _bbd ;_daa ++{_bcaa =append (_bcaa ,_ddd .ReadShort ());};_aaed ,_ :=_ddd ._dcb .Seek (int64 (0),_cf .SeekCurrent );for _bgc :=0;_bgc < _bbd ;_bgc ++{_adc =append (_adc ,_ddd .ReadUShort ());};for _ggc :=0;_ggc < _bbd ;_ggc ++{_gec :=_debc [_ggc ];
_gfb :=_egb [_ggc ];_aaa :=_bcaa [_ggc ];_eaeb :=_adc [_ggc ];if _eaeb > 0{_ddd ._dcb .Seek (_aaed +2*int64 (_ggc )+int64 (_eaeb ),_cf .SeekStart );};for _fgcc :=_gec ;_fgcc <=_gfb ;_fgcc ++{if _fgcc ==0xFFFF{break ;};var _abd int32 ;if _eaeb > 0{_abd =int32 (_ddd .ReadUShort ());
if _abd > 0{_abd +=int32 (_aaa );};}else {_abd =_fgcc +int32 (_aaa );};if _abd >=65536{_abd -=65536;};if _abd > 0{_ddd ._ecf .Chars [_fgcc ]=GID (_abd );};};};return nil ;};var _fca =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func (_bfbd *ttfParser )parseCmapFormat6 ()error {_bgad :=int (_bfbd .ReadUShort ());_fdbe :=int (_bfbd .ReadUShort ());_de .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_bfbd ._ecf .String (),_bgad ,_fdbe );
for _cee :=0;_cee < _fdbe ;_cee ++{_gcb :=GID (_bfbd .ReadUShort ());_bfbd ._ecf .Chars [rune (_cee +_bgad )]=_gcb ;};return nil ;};func NewFontFile2FromPdfObject (obj _ae .PdfObject )(TtfType ,error ){obj =_ae .TraceToDirectObject (obj );_fde ,_ead :=obj .(*_ae .PdfObjectStream );
if !_ead {_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );return TtfType {},_ae .ErrTypeError ;
};_gfc ,_ccdb :=_ae .DecodeStream (_fde );if _ccdb !=nil {return TtfType {},_ccdb ;};_effe :=ttfParser {_dcb :_b .NewReader (_gfc )};return _effe .Parse ();};type fontMap struct{_g .Mutex ;_dgc map[StdFontName ]func ()StdFont ;};func (_dfd StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_gf ,_feb :=_dfd ._cdg .Read (r );
return _gf ,_feb ;};var _dgdg =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func (_edg *ttfParser )Read32Fixed ()float64 {_ebfa :=float64 (_edg .ReadShort ());_abce :=float64 (_edg .ReadUShort ())/65536.0;return _ebfa +_abce ;};var _bd =&RuneCharSafeMap {_cd :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func (_cb *fontMap )read (_ea StdFontName )(func ()StdFont ,bool ){_cb .Lock ();defer _cb .Unlock ();_eac ,_ff :=_cb ._dgc [_ea ];return _eac ,_ff ;};type CharMetrics struct{Wx float64 ;Wy float64 ;};func (_fa *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_ga :=MakeRuneCharSafeMap (_fa .Length ());
_fa .Range (func (_bc rune ,_dg CharMetrics )(_cda bool ){_ga ._cd [_bc ]=_dg ;return false });return _ga ;};func (_db StdFont )Encoder ()_fb .TextEncoder {return _db ._efb };func (_cdgd *TtfType )MakeToUnicode ()*_da .CMap {_gaf :=make (map[_da .CharCode ]rune );
if len (_cdgd .GlyphNames )==0{for _dfe :=range _cdgd .Chars {_gaf [_da .CharCode (_dfe )]=_dfe ;};return _da .NewToUnicodeCMap (_gaf );};for _afg ,_ebe :=range _cdgd .Chars {_bga :=_da .CharCode (_afg );_dceb :=_cdgd .GlyphNames [_ebe ];_bb ,_fbc :=_fb .GlyphToRune (_dceb );
if !_fbc {_de .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_afg ,_dceb );_bb =_fb .MissingCodeRune ;};_gaf [_bga ]=_bb ;};
return _da .NewToUnicodeCMap (_gaf );};func _ed (_aeg map[string ]uint32 )string {var _ege []string ;for _agd :=range _aeg {_ege =append (_ege ,_agd );};_ac .Slice (_ege ,func (_badf ,_fg int )bool {return _aeg [_ege [_badf ]]< _aeg [_ege [_fg ]]});_ddb :=[]string {_e .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_aeg ))};
for _ ,_dfgf :=range _ege {_ddb =append (_ddb ,_e .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_dfgf ,_aeg [_dfgf ]));};return _c .Join (_ddb ,"\u000a");};func _dc ()StdFont {_bca .Do (_eeb );_cga :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_cga ,_egf );};func _aca ()StdFont {_acd .Do (_beg );_ada :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_ada ,_bgg );};type FontWeight int ;func (_geef *ttfParser )parseCmapVersion (_bgcb int64 )error {_de .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_bgcb );
if _geef ._ecf .Chars ==nil {_geef ._ecf .Chars =make (map[rune ]GID );};_geef ._dcb .Seek (int64 (_geef ._ffa ["\u0063\u006d\u0061\u0070"])+_bgcb ,_cf .SeekStart );var _efab ,_bdg uint32 ;_bac :=_geef .ReadUShort ();if _bac < 8{_efab =uint32 (_geef .ReadUShort ());
_bdg =uint32 (_geef .ReadUShort ());}else {_geef .ReadUShort ();_efab =_geef .ReadULong ();_bdg =_geef .ReadULong ();};_de .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_bac ,_efab ,_bdg );
switch _bac {case 0:return _geef .parseCmapFormat0 ();case 6:return _geef .parseCmapFormat6 ();case 12:return _geef .parseCmapFormat12 ();default:_de .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_bac );
return nil ;};};func (_dcc *TtfType )String ()string {return _e .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_dcc .PostScriptName ,_dcc .UnitsPerEm ,_dcc .Bold ,_dcc .ItalicAngle ,_dcc .CapHeight ,len (_dcc .Chars ),len (_dcc .GlyphNames ));
};func _cfe ()StdFont {_bca .Do (_eeb );_bec :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_bec ,_cgb );};func (_fe *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_fe ._ab .Lock ();defer _fe ._ab .Unlock ();_fe ._cd [b ]=r ;};func (_aab *ttfParser )ReadSByte ()(_bcf int8 ){_d .Read (_aab ._dcb ,_d .BigEndian ,&_bcf );return _bcf };
func _beg (){_gfa =MakeRuneCharSafeMap (len (_dd ));_ffg =MakeRuneCharSafeMap (len (_dd ));for _eb ,_ega :=range _dd {_gfa .Write (_ega ,CharMetrics {Wx :float64 (_eaeg [_eb ])});_ffg .Write (_ega ,CharMetrics {Wx :float64 (_cdfd [_eb ])});};_bgg =_gfa .Copy ();
_bad =_ffg .Copy ();};func _gaa ()StdFont {_acd .Do (_beg );_eae :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_eae ,_bad );};var _cgb *RuneCharSafeMap ;func (_bdb *TtfType )NewEncoder ()_fb .TextEncoder {return _fb .NewTrueTypeFontEncoder (_bdb .Chars )};var _afd =&RuneCharSafeMap {_cd :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func (_faf *ttfParser )ParseCmap ()error {var _fcb int64 ;if _cge :=_faf .Seek ("\u0063\u006d\u0061\u0070");_cge !=nil {return _cge ;};_faf .ReadUShort ();_cdba :=int (_faf .ReadUShort ());_fcg :=int64 (0);_cae :=int64 (0);_cefb :=int64 (0);for _dab :=0;
_dab < _cdba ;_dab ++{_dgdc :=_faf .ReadUShort ();_cgaa :=_faf .ReadUShort ();_fcb =int64 (_faf .ReadULong ());if _dgdc ==3&&_cgaa ==1{_cae =_fcb ;}else if _dgdc ==3&&_cgaa ==10{_cefb =_fcb ;}else if _dgdc ==1&&_cgaa ==0{_fcg =_fcb ;};};if _fcg !=0{if _fafa :=_faf .parseCmapVersion (_fcg );
_fafa !=nil {return _fafa ;};};if _cae !=0{if _gdg :=_faf .parseCmapSubtable31 (_cae );_gdg !=nil {return _gdg ;};};if _cefb !=0{if _cfc :=_faf .parseCmapVersion (_cefb );_cfc !=nil {return _cfc ;};};if _cae ==0&&_fcg ==0&&_cefb ==0{_de .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};func _cad ()StdFont {_dgdd .Do (_fbb );_caf :=Descriptor {Name :TimesBoldName ,Family :_daf ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_caf ,_bef );};func TtfParseFile (fileStr string )(TtfType ,error ){_geee ,_eca :=_ca .Open (fileStr );if _eca !=nil {return TtfType {},_eca ;};defer _geee .Close ();return TtfParse (_geee );};type StdFontName string ;var _eaeg =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
func _fbb (){_bcae =MakeRuneCharSafeMap (len (_dd ));_bef =MakeRuneCharSafeMap (len (_dd ));_cbe =MakeRuneCharSafeMap (len (_dd ));_gff =MakeRuneCharSafeMap (len (_dd ));for _ecd ,_cacd :=range _dd {_bcae .Write (_cacd ,CharMetrics {Wx :float64 (_egd [_ecd ])});
_bef .Write (_cacd ,CharMetrics {Wx :float64 (_fad [_ecd ])});_cbe .Write (_cacd ,CharMetrics {Wx :float64 (_fca [_ecd ])});_gff .Write (_cacd ,CharMetrics {Wx :float64 (_dgdg [_ecd ])});};};var _bcae *RuneCharSafeMap ;var _gff *RuneCharSafeMap ;