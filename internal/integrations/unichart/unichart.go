//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package unichart ;import (_b "bytes";_bg "fmt";_e "github.com/unidoc/unichart/render";_fg "github.com/unidoc/unipdf/v3/common";_c "github.com/unidoc/unipdf/v3/contentstream";_bb "github.com/unidoc/unipdf/v3/contentstream/draw";_ab "github.com/unidoc/unipdf/v3/core";
_d "github.com/unidoc/unipdf/v3/model";_aa "image/color";_fb "io";_f "math";);func (_bdf *Renderer )ArcTo (cx ,cy int ,rx ,ry ,startAngle ,deltaAngle float64 ){startAngle =_bfgc (2.0*_f .Pi -startAngle );deltaAngle =_bfgc (-deltaAngle );_ggb ,_cb :=deltaAngle ,1;
if _f .Abs (deltaAngle )> 90.0{_cb =int (_f .Ceil (_f .Abs (deltaAngle )/90.0));_ggb =deltaAngle /float64 (_cb );};var (_ccd =_fde (_ggb /2);_ggf =_f .Abs (4.0/3.0*(1.0-_f .Cos (_ccd ))/_f .Sin (_ccd ));_fe =float64 (cx );_dfa =float64 (cy ););for _dg :=0;
_dg < _cb ;_dg ++{_afd :=_fde (startAngle +float64 (_dg )*_ggb );_def :=_fde (startAngle +float64 (_dg +1)*_ggb );_bda :=_f .Cos (_afd );_ceg :=_f .Cos (_def );_fbc :=_f .Sin (_afd );_dfc :=_f .Sin (_def );var _dd []float64 ;if _ggb > 0{_dd =[]float64 {_fe +rx *_bda ,_dfa -ry *_fbc ,_fe +rx *(_bda -_ggf *_fbc ),_dfa -ry *(_fbc +_ggf *_bda ),_fe +rx *(_ceg +_ggf *_dfc ),_dfa -ry *(_dfc -_ggf *_ceg ),_fe +rx *_ceg ,_dfa -ry *_dfc };
}else {_dd =[]float64 {_fe +rx *_bda ,_dfa -ry *_fbc ,_fe +rx *(_bda +_ggf *_fbc ),_dfa -ry *(_fbc -_ggf *_bda ),_fe +rx *(_ceg -_ggf *_dfc ),_dfa -ry *(_dfc +_ggf *_ceg ),_fe +rx *_ceg ,_dfa -ry *_dfc };};if _dg ==0{_bdf ._be .Add_l (_dd [0],_dd [1]);
};_bdf ._be .Add_c (_dd [2],_dd [3],_dd [4],_dd [5],_dd [6],_dd [7]);};};func (_dcc *Renderer )ClearTextRotation (){_dcc ._abg =0};func (_bea *Renderer )SetFontColor (color _aa .Color ){_bea ._g =color };func (_ad *Renderer )SetStrokeWidth (width float64 ){_ad ._de =width ;
_ad ._be .Add_w (width )};func (_cbf *Renderer )wrapText (_dcb string )[]string {var (_cdfd []string ;_acc []rune ;);for _ ,_bdb :=range _dcb {if _bdb =='\n'{_cdfd =append (_cdfd ,string (_acc ));_acc =[]rune {};continue ;};_acc =append (_acc ,_bdb );};
if len (_acc )> 0{_cdfd =append (_cdfd ,string (_acc ));};return _cdfd ;};func (_cgb *Renderer )SetFillColor (color _aa .Color ){_cgb ._ec =color ;_ecg ,_bba ,_aad ,_ :=_ecde (color );_cgb ._be .Add_rg (_ecg ,_bba ,_aad );};func (_af *Renderer )ResetStyle (){_af .SetFillColor (_aa .Black );
_af .SetStrokeColor (_aa .Transparent );_af .SetStrokeWidth (0);_af .SetFont (_d .DefaultFont ());_af .SetFontColor (_aa .Black );_af .SetFontSize (12);_af .SetTextRotation (0);};func (_ag *Renderer )SetClassName (name string ){};func (_defe *Renderer )Text (text string ,x ,y int ){_defe ._be .Add_q ();
_defe .SetFont (_defe ._cc );_ff ,_bdad ,_dfb ,_ :=_ecde (_defe ._g );_defe ._be .Add_rg (_ff ,_bdad ,_dfb );_defe ._be .Translate (float64 (x ),float64 (y )).Scale (1,-1);if _gb :=_defe ._abg ;_gb !=0{_defe ._be .RotateDeg (_gb );};_defe ._be .Add_BT ().Add_TL (_defe ._ecd );
var (_abgc =_defe ._cc .Encoder ();_eged =_defe .wrapText (text );_bfe =len (_eged ););for _cdf ,_bed :=range _eged {_defe ._be .Add_TJ (_ab .MakeStringFromBytes (_abgc .Encode (_bed )));if _cdf !=_bfe -1{_defe ._be .Add_Tstar ();};};_defe ._be .Add_ET ();
_defe ._be .Add_Q ();};func (_fd *Renderer )Fill (){_fd ._be .Add_f ()};func _gcd (_abc _aa .Color )(uint8 ,uint8 ,uint8 ,uint8 ){_daf ,_gf ,_fda ,_ga :=_abc .RGBA ();return uint8 (_daf >>8),uint8 (_gf >>8),uint8 (_fda >>8),uint8 (_ga >>8);};func (_bgf *Renderer )MoveTo (x ,y int ){_bgf ._be .Add_m (float64 (x ),float64 (y ))};
func (_ddb *Renderer )FillStroke (){_ddb ._be .Add_B ()};func (_ee *Renderer )Stroke (){_ee ._be .Add_S ()};func (_deb *Renderer )getTextWidth (_ebd string )float64 {var _cdb float64 ;for _ ,_eae :=range _ebd {_gcc ,_gdd :=_deb ._cc .GetRuneMetrics (_eae );
if !_gdd {_fg .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074e\u0064 \u0072u\u006e\u0065\u0020\u0025\u0076\u0020\u0069\u006e\u0020\u0066\u006f\u006e\u0074",_eae );};_cdb +=_gcc .Wx ;};return _deb ._ecd *_cdb /1000.0;
};func (_bdc *Renderer )MeasureText (text string )_e .Box {_gd :=_bdc ._ecd ;_ca ,_fec :=_bdc ._cc .GetFontDescriptor ();if _fec !=nil {_fg .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0066\u006fn\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
}else {_cgaa ,_dde :=_ca .GetCapHeight ();if _dde !=nil {_fg .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0067\u0065\u0074\u0020f\u006f\u006e\u0074\u0020\u0063\u0061\u0070\u0020\u0068\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_dde );
}else {_gd =_cgaa /1000.0*_bdc ._ecd ;};};var (_aed =0.0;_efe =_bdc .wrapText (text ););for _ ,_fgg :=range _efe {if _db :=_bdc .getTextWidth (_fgg );_db > _aed {_aed =_db ;};};_aec :=_e .NewBox (0,0,int (_aed ),int (_gd ));if _ggff :=_bdc ._abg ;_ggff !=0{_aec =_aec .Corners ().Rotate (_ggff ).Box ();
};return _aec ;};func (_add *Renderer )Save (w _fb .Writer )error {if w ==nil {return nil ;};_ ,_gbb :=_fb .Copy (w ,_b .NewBuffer (_add ._be .Bytes ()));return _gbb ;};func _ecde (_edg _aa .Color )(float64 ,float64 ,float64 ,float64 ){_dgc ,_dea ,_afg ,_beg :=_gcd (_edg );
return float64 (_dgc )/255,float64 (_dea )/255,float64 (_afg )/255,float64 (_beg )/255;};func (_gc *Renderer )SetDPI (dpi float64 ){_gc ._ce =dpi };func (_afb *Renderer )SetStrokeColor (color _aa .Color ){_afb ._aaa =color ;_df ,_eca ,_ccf ,_ :=_ecde (color );
_afb ._be .Add_RG (_df ,_eca ,_ccf );};func (_cgg *Renderer )LineTo (x ,y int ){_cgg ._be .Add_l (float64 (x ),float64 (y ))};type Renderer struct{_bc int ;_bd int ;_ce float64 ;_be *_c .ContentCreator ;_eg *_d .PdfPageResources ;_ec _aa .Color ;_aaa _aa .Color ;
_de float64 ;_cc *_d .PdfFont ;_ecd float64 ;_g _aa .Color ;_abg float64 ;_ae map[*_d .PdfFont ]_ab .PdfObjectName ;};func (_eda *Renderer )SetTextRotation (radians float64 ){_eda ._abg =_bfgc (-radians )};func (_ea *Renderer )Close (){_ea ._be .Add_h ()};
func NewRenderer (cc *_c .ContentCreator ,res *_d .PdfPageResources )func (int ,int )(_e .Renderer ,error ){return func (_deg ,_bf int )(_e .Renderer ,error ){_gg :=&Renderer {_bc :_deg ,_bd :_bf ,_ce :72,_be :cc ,_eg :res ,_ae :map[*_d .PdfFont ]_ab .PdfObjectName {}};
_gg .ResetStyle ();return _gg ,nil ;};};func (_ege *Renderer )SetFontSize (size float64 ){_ege ._ecd =size };func (_eb *Renderer )QuadCurveTo (cx ,cy ,x ,y int ){_eb ._be .Add_v (float64 (x ),float64 (y ),float64 (cx ),float64 (cy ));};func (_ed *Renderer )SetStrokeDashArray (dashArray []float64 ){_fgd :=make ([]int64 ,len (dashArray ));
for _cgc ,_egd :=range dashArray {_fgd [_cgc ]=int64 (_egd );};_ed ._be .Add_d (_fgd ,0);};func _bfgc (_gce float64 )float64 {return _gce *180/_f .Pi };func (_aac *Renderer )Circle (radius float64 ,x ,y int ){_egda :=radius ;if _ccfd :=_aac ._de ;_ccfd !=0{_egda -=_ccfd /2;
};_bfg :=_egda *0.551784;_bbb :=_bb .CubicBezierPath {Curves :[]_bb .CubicBezierCurve {_bb .NewCubicBezierCurve (-_egda ,0,-_egda ,_bfg ,-_bfg ,_egda ,0,_egda ),_bb .NewCubicBezierCurve (0,_egda ,_bfg ,_egda ,_egda ,_bfg ,_egda ,0),_bb .NewCubicBezierCurve (_egda ,0,_egda ,-_bfg ,_bfg ,-_egda ,0,-_egda ),_bb .NewCubicBezierCurve (0,-_egda ,-_bfg ,-_egda ,-_egda ,-_bfg ,-_egda ,0)}};
if _fef :=_aac ._de ;_fef !=0{_bbb =_bbb .Offset (_fef /2,_fef /2);};_bbb =_bbb .Offset (float64 (x ),float64 (y ));_bb .DrawBezierPathWithCreator (_bbb ,_aac ._be );};func (_ac *Renderer )GetDPI ()float64 {return _ac ._ce };func _fde (_bcb float64 )float64 {return _bcb *_f .Pi /180.0};
func (_cga *Renderer )SetFont (font _e .Font ){_cd ,_fc :=font .(*_d .PdfFont );if !_fc {_fg .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065");return ;
};_degg ,_fc :=_cga ._ae [_cd ];if !_fc {_degg =_cbd ("\u0046\u006f\u006e\u0074",1,_cga ._eg .HasFontByName );if _ef :=_cga ._eg .SetFontByName (_degg ,_cd .ToPdfObject ());_ef !=nil {_fg .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0064d\u0020\u0066\u006f\u006e\u0074\u0020\u0025\u0076\u0020\u0074\u006f\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073",_cd );
};_cga ._ae [_cd ]=_degg ;};_cga ._be .Add_Tf (_degg ,_cga ._ecd );_cga ._cc =_cd ;};func _cbd (_cgaf string ,_gfb int ,_cbdd func (_ab .PdfObjectName )bool )_ab .PdfObjectName {_bff :=_ab .PdfObjectName (_bg .Sprintf ("\u0025\u0073\u0025\u0064",_cgaf ,_gfb ));
for _fbcc :=_gfb ;_cbdd (_bff );{_fbcc ++;_bff =_ab .PdfObjectName (_bg .Sprintf ("\u0025\u0073\u0025\u0064",_cgaf ,_fbcc ));};return _bff ;};