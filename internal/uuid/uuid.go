//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package uuid ;import (_f "crypto/rand";_bf "encoding/hex";_bd "io";);var _a =_f .Reader ;func _ac (_fe []byte ,_ge UUID ){_bf .Encode (_fe ,_ge [:4]);_fe [8]='-';_bf .Encode (_fe [9:13],_ge [4:6]);_fe [13]='-';_bf .Encode (_fe [14:18],_ge [6:8]);_fe [18]='-';
_bf .Encode (_fe [19:23],_ge [8:10]);_fe [23]='-';_bf .Encode (_fe [24:],_ge [10:]);};var Nil =_d ;func (_gd UUID )String ()string {var _fd [36]byte ;_ac (_fd [:],_gd );return string (_fd [:])};func MustUUID ()UUID {uuid ,_c :=NewUUID ();if _c !=nil {panic (_c );
};return uuid ;};var _d UUID ;type UUID [16]byte ;func NewUUID ()(UUID ,error ){var uuid UUID ;_ ,_ba :=_bd .ReadFull (_a ,uuid [:]);if _ba !=nil {return _d ,_ba ;};uuid [6]=(uuid [6]&0x0f)|0x40;uuid [8]=(uuid [8]&0x3f)|0x80;return uuid ,nil ;};