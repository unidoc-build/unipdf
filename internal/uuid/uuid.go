//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package uuid ;import (_d "crypto/rand";_e "encoding/hex";_c "io";);type UUID [16]byte ;func MustUUID ()UUID {uuid ,_bd :=NewUUID ();if _bd !=nil {panic (_bd );};return uuid ;};func (_eac UUID )String ()string {var _gd [36]byte ;_bb (_gd [:],_eac );return string (_gd [:])};
func NewUUID ()(UUID ,error ){var uuid UUID ;_ ,_b :=_c .ReadFull (_a ,uuid [:]);if _b !=nil {return _aa ,_b ;};uuid [6]=(uuid [6]&0x0f)|0x40;uuid [8]=(uuid [8]&0x3f)|0x80;return uuid ,nil ;};var Nil =_aa ;var _aa UUID ;var _a =_d .Reader ;func _bb (_fc []byte ,_bdg UUID ){_e .Encode (_fc ,_bdg [:4]);
_fc [8]='-';_e .Encode (_fc [9:13],_bdg [4:6]);_fc [13]='-';_e .Encode (_fc [14:18],_bdg [6:8]);_fc [18]='-';_e .Encode (_fc [19:23],_bdg [8:10]);_fc [23]='-';_e .Encode (_fc [24:],_bdg [10:]);};