//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package uuid ;import (_e "crypto/rand";_c "encoding/hex";_ad "io";);func NewUUID ()(UUID ,error ){var uuid UUID ;_ ,_g :=_ad .ReadFull (_b ,uuid [:]);if _g !=nil {return _caa ,_g ;};uuid [6]=(uuid [6]&0x0f)|0x40;uuid [8]=(uuid [8]&0x3f)|0x80;return uuid ,nil ;
};var _caa UUID ;type UUID [16]byte ;var _b =_e .Reader ;func (_gd UUID )String ()string {var _cf [36]byte ;_ac (_cf [:],_gd );return string (_cf [:])};func _ac (_ag []byte ,_fc UUID ){_c .Encode (_ag ,_fc [:4]);_ag [8]='-';_c .Encode (_ag [9:13],_fc [4:6]);
_ag [13]='-';_c .Encode (_ag [14:18],_fc [6:8]);_ag [18]='-';_c .Encode (_ag [19:23],_fc [8:10]);_ag [23]='-';_c .Encode (_ag [24:],_fc [10:]);};var Nil =_caa ;func MustUUID ()UUID {uuid ,_ce :=NewUUID ();if _ce !=nil {panic (_ce );};return uuid ;};