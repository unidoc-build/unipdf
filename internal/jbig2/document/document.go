//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_d "encoding/binary";_a "fmt";_ac "github.com/unidoc/unipdf/v3/common";_aca "github.com/unidoc/unipdf/v3/internal/bitwise";_fg "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_acg "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_dd "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_dg "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_aa "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_f "io";_da "math";_dac "runtime/debug";);func (_gfa *Page )collectPageStripes ()(_geg []_dd .Segmenter ,_aagab error ){const _gce ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";var _dcac _dd .Segmenter ;for _ ,_cda :=range _gfa .Segments {switch _cda .Type {case 6,7,22,23,38,39,42,43:_dcac ,_aagab =_cda .GetSegmentData ();if _aagab !=nil {return nil ,_aa .Wrap (_aagab ,_gce ,"");};_geg =append (_geg ,_dcac );case 50:_dcac ,_aagab =_cda .GetSegmentData ();if _aagab !=nil {return nil ,_aagab ;};_bff ,_gefg :=_dcac .(*_dd .EndOfStripe );if !_gefg {return nil ,_aa .Errorf (_gce ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_dcac );};_geg =append (_geg ,_bff );_gfa .FinalHeight =_bff .LineNumber ();};};return _geg ,nil ;};func (_ffaa *Page )GetResolutionX ()(int ,error ){return _ffaa .getResolutionX ()};func (_ffad *Page )getCombinationOperator (_efcb *_dd .PageInformationSegment ,_ccbb _acg .CombinationOperator )_acg .CombinationOperator {if _efcb .CombinationOperatorOverrideAllowed (){return _ccbb ;};return _efcb .CombinationOperator ();};func (_cdg *Page )createNormalPage (_aeb *_dd .PageInformationSegment )error {const _dfg ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";_cdg .Bitmap =_acg .New (_aeb .PageBMWidth ,_aeb .PageBMHeight );if _aeb .DefaultPixelValue ()!=0{_cdg .Bitmap .SetDefaultPixel ();};for _ ,_dag :=range _cdg .Segments {switch _dag .Type {case 6,7,22,23,38,39,42,43:_ac .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_dag .SegmentNumber );_agb ,_bbb :=_dag .GetSegmentData ();if _bbb !=nil {return _bbb ;};_dfcd ,_bcfc :=_agb .(_dd .Regioner );if !_bcfc {_ac .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_agb );return _aa .Errorf (_dfg ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_agb );};_fee ,_bbb :=_dfcd .GetRegionBitmap ();if _bbb !=nil {return _aa .Wrap (_bbb ,_dfg ,"");};if _cdg .fitsPage (_aeb ,_fee ){_cdg .Bitmap =_fee ;}else {_cdb :=_dfcd .GetRegionInfo ();_aadbd :=_cdg .getCombinationOperator (_aeb ,_cdb .CombinaionOperator );_bbb =_acg .Blit (_fee ,_cdg .Bitmap ,int (_cdb .XLocation ),int (_cdb .YLocation ),_aadbd );if _bbb !=nil {return _aa .Wrap (_bbb ,_dfg ,"");};};};};return nil ;};func (_bc *Document )AddGenericPage (bm *_acg .Bitmap ,duplicateLineRemoval bool )(_gg error ){const _ddf ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";if !_bc .FullHeaders &&_bc .NumberOfPages !=0{return _aa .Error (_ddf ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");};_cf :=&Page {Segments :[]*_dd .Header {},Bitmap :bm ,Document :_bc ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true };_cf .PageNumber =int (_bc .nextPageNumber ());_bc .Pages [_cf .PageNumber ]=_cf ;_cf .AddPageInformationSegment ();if _gg =_cf .AddGenericRegion (bm ,0,0,0,_dd .TImmediateGenericRegion ,duplicateLineRemoval );_gg !=nil {return _aa .Wrap (_gg ,_ddf ,"");};if _bc .FullHeaders {_cf .AddEndOfPageSegment ();};return nil ;};func (_cdc *Document )addSymbolDictionary (_bdd int ,_eag *_acg .Bitmaps ,_abd []int ,_dgb map[int ]int ,_cad bool )(*_dd .Header ,error ){const _aeg ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";_dgc :=&_dd .SymbolDictionary {};if _gae :=_dgc .InitEncode (_eag ,_abd ,_dgb ,_cad );_gae !=nil {return nil ,_gae ;};_dba :=&_dd .Header {Type :_dd .TSymbolDictionary ,PageAssociation :_bdd ,SegmentData :_dgc };if _bdd ==0{if _cdc .GlobalSegments ==nil {_cdc .GlobalSegments =&Globals {};};_cdc .GlobalSegments .AddSegment (_dba );return _dba ,nil ;};_cc ,_cfc :=_cdc .Pages [_bdd ];if !_cfc {return nil ,_aa .Errorf (_aeg ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_bdd );};var (_bb int ;_ega *_dd .Header ;);for _bb ,_ega =range _cc .Segments {if _ega .Type ==_dd .TPageInformation {break ;};};_bb ++;_cc .Segments =append (_cc .Segments ,nil );copy (_cc .Segments [_bb +1:],_cc .Segments [_bb :]);_cc .Segments [_bb ]=_dba ;return _dba ,nil ;};func (_acb *Document )completeSymbols ()(_gf error ){const _ffg ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";if _acb .Classer ==nil {return nil ;};if _acb .Classer .UndilatedTemplates ==nil {return _aa .Error (_ffg ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");};_ddc :=len (_acb .Pages )==1;_cae :=make ([]int ,_acb .Classer .UndilatedTemplates .Size ());var _be int ;for _edg :=0;_edg < _acb .Classer .ClassIDs .Size ();_edg ++{_be ,_gf =_acb .Classer .ClassIDs .Get (_edg );if _gf !=nil {return _aa .Wrap (_gf ,_ffg ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");};_cae [_be ]++;};var _fc []int ;for _fbag :=0;_fbag < _acb .Classer .UndilatedTemplates .Size ();_fbag ++{if _cae [_fbag ]==0{return _aa .Error (_ffg ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");};if _cae [_fbag ]> 1||_ddc {_fc =append (_fc ,_fbag );};};_acb ._fe =len (_fc );var _bba ,_edge int ;for _cac :=0;_cac < _acb .Classer .ComponentPageNumbers .Size ();_cac ++{_bba ,_gf =_acb .Classer .ComponentPageNumbers .Get (_cac );if _gf !=nil {return _aa .Wrapf (_gf ,_ffg ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_cac );};_edge ,_gf =_acb .Classer .ClassIDs .Get (_cac );if _gf !=nil {return _aa .Wrapf (_gf ,_ffg ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_bba );};if _cae [_edge ]==1&&!_ddc {_acb ._eg [_bba ]=append (_acb ._eg [_bba ],_edge );};};if _gf =_acb .Classer .ComputeLLCorners ();_gf !=nil {return _aa .Wrap (_gf ,_ffg ,"");};return nil ;};func (_efc *Document )parseFileHeader ()error {const _acbb ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_dced :=_efc .InputStream .Seek (8,_f .SeekStart );if _dced !=nil {return _aa .Wrap (_dced ,_acbb ,"\u0069\u0064");};_ ,_dced =_efc .InputStream .ReadBits (5);if _dced !=nil {return _aa .Wrap (_dced ,_acbb ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_cef ,_dced :=_efc .InputStream .ReadBit ();if _dced !=nil {return _aa .Wrap (_dced ,_acbb ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");};if _cef ==1{_efc .GBUseExtTemplate =true ;};_cef ,_dced =_efc .InputStream .ReadBit ();if _dced !=nil {return _aa .Wrap (_dced ,_acbb ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _cef !=1{_efc .NumberOfPagesUnknown =false ;};_cef ,_dced =_efc .InputStream .ReadBit ();if _dced !=nil {return _aa .Wrap (_dced ,_acbb ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_efc .OrganizationType =_dd .OrganizationType (_cef );if !_efc .NumberOfPagesUnknown {_efc .NumberOfPages ,_dced =_efc .InputStream .ReadUint32 ();if _dced !=nil {return _aa .Wrap (_dced ,_acbb ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_efc ._c =13;};return nil ;};func (_fgga *Page )getResolutionX ()(int ,error ){const _ceb ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";if _fgga .ResolutionX !=0{return _fgga .ResolutionX ,nil ;};_aegb :=_fgga .getPageInformationSegment ();if _aegb ==nil {return 0,_aa .Error (_ceb ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_bfb ,_ggd :=_aegb .GetSegmentData ();if _ggd !=nil {return 0,_aa .Wrap (_ggd ,_ceb ,"");};_ebg ,_fgcc :=_bfb .(*_dd .PageInformationSegment );if !_fgcc {return 0,_aa .Errorf (_ceb ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_bfb );};_fgga .ResolutionX =_ebg .ResolutionX ;return _fgga .ResolutionX ,nil ;};func (_bbaa *Document )nextPageNumber ()uint32 {_bbaa .NumberOfPages ++;return _bbaa .NumberOfPages };func (_ebdd *Page )createStripedPage (_bbe *_dd .PageInformationSegment )error {const _agc ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";_cdgc ,_eef :=_ebdd .collectPageStripes ();if _eef !=nil {return _aa .Wrap (_eef ,_agc ,"");};var _fbc int ;for _ ,_bfe :=range _cdgc {if _adgf ,_cga :=_bfe .(*_dd .EndOfStripe );_cga {_fbc =_adgf .LineNumber ()+1;}else {_dcg :=_bfe .(_dd .Regioner );_cfa :=_dcg .GetRegionInfo ();_caee :=_ebdd .getCombinationOperator (_bbe ,_cfa .CombinaionOperator );_egb ,_efd :=_dcg .GetRegionBitmap ();if _efd !=nil {return _aa .Wrap (_efd ,_agc ,"");};_efd =_acg .Blit (_egb ,_ebdd .Bitmap ,int (_cfa .XLocation ),_fbc ,_caee );if _efd !=nil {return _aa .Wrap (_efd ,_agc ,"");};};};return nil ;};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_e :_aca .BufferedMSB (),Pages :map[int ]*Page {},_eg :map[int ][]int {},_bd :map[int ]int {},_g :map[int ][]int {}};};func (_fbd *Document )GetGlobalSegment (i int )(*_dd .Header ,error ){_fgd ,_fed :=_fbd .GlobalSegments .GetSegment (i );if _fed !=nil {return nil ,_aa .Wrap (_fed ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");};return _fgd ,nil ;};func (_afc *Document )nextSegmentNumber ()uint32 {_aff :=_afc .CurrentSegmentNumber ;_afc .CurrentSegmentNumber ++;return _aff ;};func (_bea *Globals )GetSegment (segmentNumber int )(*_dd .Header ,error ){const _ddbd ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";if _bea ==nil {return nil ,_aa .Error (_ddbd ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_bea .Segments )==0{return nil ,_aa .Error (_ddbd ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};var _fda *_dd .Header ;for _ ,_fda =range _bea .Segments {if _fda .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _fda ==nil {return nil ,_aa .Error (_ddbd ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _fda ,nil ;};func (_fge *Globals )AddSegment (segment *_dd .Header ){_fge .Segments =append (_fge .Segments ,segment )};func (_dgeab *Page )GetHeight ()(int ,error ){return _dgeab .getHeight ()};type Globals struct{Segments []*_dd .Header ;};func (_gde *Document )encodeEOFHeader (_cgg _aca .BinaryWriter )(_cfcg int ,_gcb error ){_cdf :=&_dd .Header {SegmentNumber :_gde .nextSegmentNumber (),Type :_dd .TEndOfFile };if _cfcg ,_gcb =_cdf .Encode (_cgg );_gcb !=nil {return 0,_aa .Wrap (_gcb ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");};return _cfcg ,nil ;};func (_ee *Page )AddGenericRegion (bm *_acg .Bitmap ,xloc ,yloc ,template int ,tp _dd .Type ,duplicateLineRemoval bool )error {const _adec ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";_eff :=&_dd .GenericRegion {};if _efgf :=_eff .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_efgf !=nil {return _aa .Wrap (_efgf ,_adec ,"");};_dgea :=&_dd .Header {Type :_dd .TImmediateGenericRegion ,PageAssociation :_ee .PageNumber ,SegmentData :_eff };_ee .Segments =append (_ee .Segments ,_dgea );return nil ;};func (_dee *Page )nextSegmentNumber ()uint32 {return _dee .Document .nextSegmentNumber ()};func (_fcc *Page )AddEndOfPageSegment (){_cag :=&_dd .Header {Type :_dd .TEndOfPage ,PageAssociation :_fcc .PageNumber };_fcc .Segments =append (_fcc .Segments ,_cag );};func _bf (_fb int )int {_ecd :=0;_fba :=(_fb &(_fb -1))==0;_fb >>=1;for ;_fb !=0;_fb >>=1{_ecd ++;};if _fba {return _ecd ;};return _ecd +1;};type Page struct{Segments []*_dd .Header ;PageNumber int ;Bitmap *_acg .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;};func (_gded *Page )GetSegment (number int )(*_dd .Header ,error ){const _ege ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";for _ ,_bbd :=range _gded .Segments {if _bbd .SegmentNumber ==uint32 (number ){return _bbd ,nil ;};};_cgcb :=make ([]uint32 ,len (_gded .Segments ));for _gbgf ,_aaga :=range _gded .Segments {_cgcb [_gbgf ]=_aaga .SegmentNumber ;};return nil ,_aa .Errorf (_ege ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_gded .PageNumber ,_cgcb );};func (_geb *Document )completeClassifiedPages ()(_aad error ){const _dge ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";if _geb .Classer ==nil {return nil ;};_geb ._df =make ([]int ,_geb .Classer .UndilatedTemplates .Size ());for _ea :=0;_ea < _geb .Classer .ClassIDs .Size ();_ea ++{_gd ,_bg :=_geb .Classer .ClassIDs .Get (_ea );if _bg !=nil {return _aa .Wrapf (_bg ,_dge ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_ea );};_geb ._df [_gd ]++;};var _fa []int ;for _ae :=0;_ae < _geb .Classer .UndilatedTemplates .Size ();_ae ++{if _geb .NumberOfPages ==1||_geb ._df [_ae ]> 1{_fa =append (_fa ,_ae );};};var (_gdf *Page ;_acc bool ;);for _ddb ,_aag :=range *_geb .Classer .ComponentPageNumbers {if _gdf ,_acc =_geb .Pages [_aag ];!_acc {return _aa .Errorf (_dge ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ddb );};if _gdf .EncodingMethod ==GenericEM {_ac .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_ddb );continue ;};_geb ._g [_aag ]=append (_geb ._g [_aag ],_ddb );_ff ,_ga :=_geb .Classer .ClassIDs .Get (_ddb );if _ga !=nil {return _aa .Wrapf (_ga ,_dge ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_ddb );};if _geb ._df [_ff ]==1&&_geb .NumberOfPages !=1{_ec :=append (_geb ._eg [_aag ],_ff );_geb ._eg [_aag ]=_ec ;};};if _aad =_geb .Classer .ComputeLLCorners ();_aad !=nil {return _aa .Wrap (_aad ,_dge ,"");};if _ ,_aad =_geb .addSymbolDictionary (0,_geb .Classer .UndilatedTemplates ,_fa ,_geb ._bd ,false );_aad !=nil {return _aa .Wrap (_aad ,_dge ,"");};return nil ;};func (_bee *Document )encodeSegment (_aaa *_dd .Header ,_gc *int )error {const _eda ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";_aaa .SegmentNumber =_bee .nextSegmentNumber ();_bge ,_bgd :=_aaa .Encode (_bee ._e );if _bgd !=nil {return _aa .Wrapf (_bgd ,_eda ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_aaa .SegmentNumber );};*_gc +=_bge ;return nil ;};func (_ecde *Page )getResolutionY ()(int ,error ){const _ccd ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _ecde .ResolutionY !=0{return _ecde .ResolutionY ,nil ;};_eac :=_ecde .getPageInformationSegment ();if _eac ==nil {return 0,_aa .Error (_ccd ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_bae ,_aceb :=_eac .GetSegmentData ();if _aceb !=nil {return 0,_aa .Wrap (_aceb ,_ccd ,"");};_gfb ,_cfe :=_bae .(*_dd .PageInformationSegment );if !_cfe {return 0,_aa .Errorf (_ccd ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_bae );};_ecde .ResolutionY =_gfb .ResolutionY ;return _ecde .ResolutionY ,nil ;};func (_daa *Page )countRegions ()int {var _afe int ;for _ ,_fbcd :=range _daa .Segments {switch _fbcd .Type {case 6,7,22,23,38,39,42,43:_afe ++;};};return _afe ;};func (_dcb *Page )getPageInformationSegment ()*_dd .Header {for _ ,_ffb :=range _dcb .Segments {if _ffb .Type ==_dd .TPageInformation {return _ffb ;};};_ac .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_dcb );return nil ;};type EncodingMethod int ;func (_efe *Page )String ()string {return _a .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_efe .PageNumber );};func (_aed *Page )getWidth ()(int ,error ){const _ddca ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _aed .FinalWidth !=0{return _aed .FinalWidth ,nil ;};_bab :=_aed .getPageInformationSegment ();if _bab ==nil {return 0,_aa .Error (_ddca ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_dgf ,_cgbc :=_bab .GetSegmentData ();if _cgbc !=nil {return 0,_aa .Wrap (_cgbc ,_ddca ,"");};_bde ,_dde :=_dgf .(*_dd .PageInformationSegment );if !_dde {return 0,_aa .Errorf (_ddca ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_dgf );};_aed .FinalWidth =_bde .PageBMWidth ;return _aed .FinalWidth ,nil ;};func (_gaf *Globals )GetSymbolDictionary ()(*_dd .Header ,error ){const _aab ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";if _gaf ==nil {return nil ,_aa .Error (_aab ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_gaf .Segments )==0{return nil ,_aa .Error (_aab ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};for _ ,_ecfa :=range _gaf .Segments {if _ecfa .Type ==_dd .TSymbolDictionary {return _ecfa ,nil ;};};return nil ,_aa .Error (_aab ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};func (_cde *Document )GetNumberOfPages ()(uint32 ,error ){if _cde .NumberOfPagesUnknown ||_cde .NumberOfPages ==0{if len (_cde .Pages )==0{if _gee :=_cde .mapData ();_gee !=nil {return 0,_aa .Wrap (_gee ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");};};return uint32 (len (_cde .Pages )),nil ;};return _cde .NumberOfPages ,nil ;};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream _aca .StreamReader ;GlobalSegments *Globals ;OrganizationType _dd .OrganizationType ;Classer *_dg .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_acg .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_c uint8 ;_e *_aca .BufferedWriter ;EncodeGlobals bool ;_fe int ;_eg map[int ][]int ;_g map[int ][]int ;_df []int ;_bd map[int ]int ;};func (_fdc *Document )Encode ()(_eb []byte ,_edf error ){const _gag ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _ef ,_bbab int ;if _fdc .FullHeaders {if _ef ,_edf =_fdc .encodeFileHeader (_fdc ._e );_edf !=nil {return nil ,_aa .Wrap (_edf ,_gag ,"");};};var (_eaac bool ;_fce *_dd .Header ;_gef *Page ;);if _edf =_fdc .completeClassifiedPages ();_edf !=nil {return nil ,_aa .Wrap (_edf ,_gag ,"");};if _edf =_fdc .produceClassifiedPages ();_edf !=nil {return nil ,_aa .Wrap (_edf ,_gag ,"");};if _fdc .GlobalSegments !=nil {for _ ,_fce =range _fdc .GlobalSegments .Segments {if _edf =_fdc .encodeSegment (_fce ,&_ef );_edf !=nil {return nil ,_aa .Wrap (_edf ,_gag ,"");};};};for _ded :=1;_ded <=int (_fdc .NumberOfPages );_ded ++{if _gef ,_eaac =_fdc .Pages [_ded ];!_eaac {return nil ,_aa .Errorf (_gag ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ded );};for _ ,_fce =range _gef .Segments {if _edf =_fdc .encodeSegment (_fce ,&_ef );_edf !=nil {return nil ,_aa .Wrap (_edf ,_gag ,"");};};};if _fdc .FullHeaders {if _bbab ,_edf =_fdc .encodeEOFHeader (_fdc ._e );_edf !=nil {return nil ,_aa .Wrap (_edf ,_gag ,"");};_ef +=_bbab ;};_eb =_fdc ._e .Data ();if len (_eb )!=_ef {_ac .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_ef ,len (_eb ));};return _eb ,nil ;};func (_aabe *Page )GetBitmap ()(_ffgb *_acg .Bitmap ,_fbdb error ){_ac .Log .Trace (_a .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_aabe .PageNumber ));defer func (){if _fbdb !=nil {_ac .Log .Trace (_a .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_aabe .PageNumber ,_fbdb ));}else {_ac .Log .Trace (_a .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_aabe .PageNumber ));};}();if _aabe .Bitmap !=nil {return _aabe .Bitmap ,nil ;};_fbdb =_aabe .composePageBitmap ();if _fbdb !=nil {return nil ,_fbdb ;};return _aabe .Bitmap ,nil ;};func _bdfa (_bca *Document ,_ebf int )*Page {return &Page {Document :_bca ,PageNumber :_ebf ,Segments :[]*_dd .Header {}};};func DecodeDocument (input _aca .StreamReader ,globals *Globals )(*Document ,error ){return _bcg (input ,globals );};func (_adgb *Page )addTextRegionSegment (_ace []*_dd .Header ,_fbe ,_fgaa map[int ]int ,_gbd []int ,_gga *_acg .Points ,_cba *_acg .Bitmaps ,_cdee *_fg .IntSlice ,_aage *_acg .Boxes ,_cdcf ,_cgf int ){_aegc :=&_dd .TextRegion {NumberOfSymbols :uint32 (_cgf )};_aegc .InitEncode (_fbe ,_fgaa ,_gbd ,_gga ,_cba ,_cdee ,_aage ,_adgb .FinalWidth ,_adgb .FinalHeight ,_cdcf );_beef :=&_dd .Header {RTSegments :_ace ,SegmentData :_aegc ,PageAssociation :_adgb .PageNumber ,Type :_dd .TImmediateTextRegion };_fbf :=_dd .TPageInformation ;if _fgaa !=nil {_fbf =_dd .TSymbolDictionary ;};var _fbeb int ;for ;_fbeb < len (_adgb .Segments );_fbeb ++{if _adgb .Segments [_fbeb ].Type ==_fbf {_fbeb ++;break ;};};_adgb .Segments =append (_adgb .Segments ,nil );copy (_adgb .Segments [_fbeb +1:],_adgb .Segments [_fbeb :]);_adgb .Segments [_fbeb ]=_beef ;};func _bcg (_dff _aca .StreamReader ,_adg *Globals )(*Document ,error ){_efg :=&Document {Pages :make (map[int ]*Page ),InputStream :_dff ,OrganizationType :_dd .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_adg ,_c :9};if _efg .GlobalSegments ==nil {_efg .GlobalSegments =&Globals {};};if _caf :=_efg .mapData ();_caf !=nil {return nil ,_caf ;};return _efg ,nil ;};var _daf =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func (_ggb *Document )mapData ()error {const _dfea ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_dcf []*_dd .Header ;_bdg int64 ;_gbb _dd .Type ;);_edgd ,_ccb :=_ggb .isFileHeaderPresent ();if _ccb !=nil {return _aa .Wrap (_ccb ,_dfea ,"");};if _edgd {if _ccb =_ggb .parseFileHeader ();_ccb !=nil {return _aa .Wrap (_ccb ,_dfea ,"");};_bdg +=int64 (_ggb ._c );_ggb .FullHeaders =true ;};var (_dcfa *Page ;_ffa bool ;);for _gbb !=51&&!_ffa {_ccf ,_egc :=_dd .NewHeader (_ggb ,_ggb .InputStream ,_bdg ,_ggb .OrganizationType );if _egc !=nil {return _aa .Wrap (_egc ,_dfea ,"");};_ac .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_ccf .SegmentNumber ,_ccf .Type );_gbb =_ccf .Type ;if _gbb !=_dd .TEndOfFile {if _ccf .PageAssociation !=0{_dcfa =_ggb .Pages [_ccf .PageAssociation ];if _dcfa ==nil {_dcfa =_bdfa (_ggb ,_ccf .PageAssociation );_ggb .Pages [_ccf .PageAssociation ]=_dcfa ;if _ggb .NumberOfPagesUnknown {_ggb .NumberOfPages ++;};};_dcfa .Segments =append (_dcfa .Segments ,_ccf );}else {_ggb .GlobalSegments .AddSegment (_ccf );};};_dcf =append (_dcf ,_ccf );_bdg =_ggb .InputStream .StreamPosition ();if _ggb .OrganizationType ==_dd .OSequential {_bdg +=int64 (_ccf .SegmentDataLength );};_ffa ,_egc =_ggb .reachedEOF (_bdg );if _egc !=nil {_ac .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_egc );return _aa .Wrap (_egc ,_dfea ,"");};};_ggb .determineRandomDataOffsets (_dcf ,uint64 (_bdg ));return nil ;};func (_aba *Page )lastSegmentNumber ()(_agbg uint32 ,_fcb error ){const _beae ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";if len (_aba .Segments )==0{return _agbg ,_aa .Errorf (_beae ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_aba .PageNumber );};return _aba .Segments [len (_aba .Segments )-1].SegmentNumber ,nil ;};func (_edd *Page )composePageBitmap ()error {const _gad ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";if _edd .PageNumber ==0{return nil ;};_ddcb :=_edd .getPageInformationSegment ();if _ddcb ==nil {return _aa .Error (_gad ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_aadb ,_eee :=_ddcb .GetSegmentData ();if _eee !=nil {return _eee ;};_dfed ,_gdee :=_aadb .(*_dd .PageInformationSegment );if !_gdee {return _aa .Error (_gad ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};if _eee =_edd .createPage (_dfed );_eee !=nil {return _aa .Wrap (_eee ,_gad ,"");};_edd .clearSegmentData ();return nil ;};func (_dbc *Page )getHeight ()(int ,error ){const _gfd ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _dbc .FinalHeight !=0{return _dbc .FinalHeight ,nil ;};_cgaa :=_dbc .getPageInformationSegment ();if _cgaa ==nil {return 0,_aa .Error (_gfd ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_fgc ,_eagg :=_cgaa .GetSegmentData ();if _eagg !=nil {return 0,_aa .Wrap (_eagg ,_gfd ,"");};_dbg ,_eegd :=_fgc .(*_dd .PageInformationSegment );if !_eegd {return 0,_aa .Errorf (_gfd ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_fgc );};if _dbg .PageBMHeight ==_da .MaxInt32 {_ ,_eagg =_dbc .GetBitmap ();if _eagg !=nil {return 0,_aa .Wrap (_eagg ,_gfd ,"");};}else {_dbc .FinalHeight =_dbg .PageBMHeight ;};return _dbc .FinalHeight ,nil ;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_ebd *Page )AddPageInformationSegment (){_fcgb :=&_dd .PageInformationSegment {PageBMWidth :_ebd .FinalWidth ,PageBMHeight :_ebd .FinalHeight ,ResolutionX :_ebd .ResolutionX ,ResolutionY :_ebd .ResolutionY ,IsLossless :_ebd .IsLossless };_edfc :=&_dd .Header {PageAssociation :_ebd .PageNumber ,SegmentDataLength :uint64 (_fcgb .Size ()),SegmentData :_fcgb ,Type :_dd .TPageInformation };_ebd .Segments =append (_ebd .Segments ,_edfc );};func (_fag *Page )Encode (w _aca .BinaryWriter )(_aegd int ,_dbb error ){const _egce ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _bbae int ;for _ ,_cdcd :=range _fag .Segments {if _bbae ,_dbb =_cdcd .Encode (w );_dbb !=nil {return _aegd ,_aa .Wrap (_dbb ,_egce ,"");};_aegd +=_bbae ;};return _aegd ,nil ;};func (_db *Document )produceClassifiedPages ()(_ecf error ){const _gdd ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";if _db .Classer ==nil {return nil ;};var (_ggc *Page ;_cd bool ;_cdd *_dd .Header ;);for _ba :=1;_ba <=int (_db .NumberOfPages );_ba ++{if _ggc ,_cd =_db .Pages [_ba ];!_cd {return _aa .Errorf (_gdd ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ba );};if _ggc .EncodingMethod ==GenericEM {continue ;};if _cdd ==nil {if _cdd ,_ecf =_db .GlobalSegments .GetSymbolDictionary ();_ecf !=nil {return _aa .Wrap (_ecf ,_gdd ,"");};};if _ecf =_db .produceClassifiedPage (_ggc ,_cdd );_ecf !=nil {return _aa .Wrapf (_ecf ,_gdd ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_ba );};};return nil ;};func (_ece *Document )isFileHeaderPresent ()(bool ,error ){_ece .InputStream .Mark ();for _ ,_ade :=range _daf {_edb ,_fcg :=_ece .InputStream .ReadByte ();if _fcg !=nil {return false ,_fcg ;};if _ade !=_edb {_ece .InputStream .Reset ();return false ,nil ;};};_ece .InputStream .Reset ();return true ,nil ;};func (_dfe *Document )determineRandomDataOffsets (_fcd []*_dd .Header ,_cg uint64 ){if _dfe .OrganizationType !=_dd .ORandom {return ;};for _ ,_gaa :=range _fcd {_gaa .SegmentDataStartOffset =_cg ;_cg +=_gaa .SegmentDataLength ;};};func (_ecg *Page )clearSegmentData (){for _ebc :=range _ecg .Segments {_ecg .Segments [_ebc ].CleanSegmentData ();};};func (_gbg *Globals )GetSegmentByIndex (index int )(*_dd .Header ,error ){const _fga ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";if _gbg ==nil {return nil ,_aa .Error (_fga ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_gbg .Segments )==0{return nil ,_aa .Error (_fga ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};if index > len (_gbg .Segments )-1{return nil ,_aa .Error (_fga ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");};return _gbg .Segments [index ],nil ;};func (_ged *Page )GetWidth ()(int ,error ){return _ged .getWidth ()};func (_cbg *Page )fitsPage (_cee *_dd .PageInformationSegment ,_eea *_acg .Bitmap )bool {return _cbg .countRegions ()==1&&_cee .DefaultPixelValue ()==0&&_cee .PageBMWidth ==_eea .Width &&_cee .PageBMHeight ==_eea .Height ;};func (_cgb *Document )encodeFileHeader (_gb _aca .BinaryWriter )(_bbc int ,_dce error ){const _dfc ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_bbc ,_dce =_gb .Write (_daf );if _dce !=nil {return _bbc ,_aa .Wrap (_dce ,_dfc ,"\u0069\u0064");};if _dce =_gb .WriteByte (0x01);_dce !=nil {return _bbc ,_aa .Wrap (_dce ,_dfc ,"\u0066\u006c\u0061g\u0073");};_bbc ++;_ebb :=make ([]byte ,4);_d .BigEndian .PutUint32 (_ebb ,_cgb .NumberOfPages );_beb ,_dce :=_gb .Write (_ebb );if _dce !=nil {return _beb ,_aa .Wrap (_dce ,_dfc ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_bbc +=_beb ;return _bbc ,nil ;};func (_aeacg *Page )GetResolutionY ()(int ,error ){return _aeacg .getResolutionY ()};func (_fbdf *Page )createPage (_dca *_dd .PageInformationSegment )error {var _ecb error ;if !_dca .IsStripe ||_dca .PageBMHeight !=-1{_ecb =_fbdf .createNormalPage (_dca );}else {_ecb =_fbdf .createStripedPage (_dca );};return _ecb ;};func (_aea *Document )produceClassifiedPage (_ab *Page ,_de *_dd .Header )(_gdg error ){const _cddf ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";var _ce map[int ]int ;_aeac :=_aea ._fe ;_bcf :=[]*_dd .Header {_de };if len (_aea ._eg [_ab .PageNumber ])> 0{_ce =map[int ]int {};_ca ,_ceg :=_aea .addSymbolDictionary (_ab .PageNumber ,_aea .Classer .UndilatedTemplates ,_aea ._eg [_ab .PageNumber ],_ce ,false );if _ceg !=nil {return _aa .Wrap (_ceg ,_cddf ,"");};_bcf =append (_bcf ,_ca );_aeac +=len (_aea ._eg [_ab .PageNumber ]);};_cb :=_aea ._g [_ab .PageNumber ];_ac .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_ab .PageNumber ,_cb );_ab .addTextRegionSegment (_bcf ,_aea ._bd ,_ce ,_aea ._g [_ab .PageNumber ],_aea .Classer .PtaLL ,_aea .Classer .UndilatedTemplates ,_aea .Classer .ClassIDs ,nil ,_bf (_aeac ),len (_aea ._g [_ab .PageNumber ]));return nil ;};func (_dcc *Document )reachedEOF (_cbe int64 )(bool ,error ){const _cgc ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_gagd :=_dcc .InputStream .Seek (_cbe ,_f .SeekStart );if _gagd !=nil {_ac .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_gagd );return false ,_aa .Wrap (_gagd ,_cgc ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_gagd =_dcc .InputStream .ReadBits (32);if _gagd ==_f .EOF {return true ,nil ;}else if _gagd !=nil {return false ,_aa .Wrap (_gagd ,_cgc ,"");};return false ,nil ;};func (_fdf *Document )GetPage (pageNumber int )(_dd .Pager ,error ){const _bfg ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";if pageNumber < 0{_ac .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_dac .Stack ());return nil ,_aa .Errorf (_bfg ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );};if pageNumber > len (_fdf .Pages ){_ac .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_dac .Stack ());return nil ,_aa .Error (_bfg ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};_ad ,_fgg :=_fdf .Pages [pageNumber ];if !_fgg {_ac .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_dac .Stack ());return nil ,_aa .Errorf (_bfg ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _ad ,nil ;};func (_af *Document )AddClassifiedPage (bm *_acg .Bitmap ,method _dg .Method )(_bda error ){const _fd ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";if !_af .FullHeaders &&_af .NumberOfPages !=0{return _aa .Error (_fd ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");};if _af .Classer ==nil {if _af .Classer ,_bda =_dg .Init (_dg .DefaultSettings ());_bda !=nil {return _aa .Wrap (_bda ,_fd ,"");};};_ge :=int (_af .nextPageNumber ());_ed :=&Page {Segments :[]*_dd .Header {},Bitmap :bm ,Document :_af ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_ge };_af .Pages [_ge ]=_ed ;switch method {case _dg .RankHaus :_ed .EncodingMethod =RankHausEM ;case _dg .Correlation :_ed .EncodingMethod =CorrelationEM ;};_ed .AddPageInformationSegment ();if _bda =_af .Classer .AddPage (bm ,_ge ,method );_bda !=nil {return _aa .Wrap (_bda ,_fd ,"");};if _af .FullHeaders {_ed .AddEndOfPageSegment ();};return nil ;};