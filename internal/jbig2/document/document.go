//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_c "encoding/binary";_g "fmt";_aa "github.com/unidoc/unipdf/v3/common";_f "github.com/unidoc/unipdf/v3/internal/bitwise";_e "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_fc "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_eb "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_gc "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_af "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_d "io";_b "math";_bb "runtime/debug";);func (_ebc *Globals )GetSegment (segmentNumber int )(*_eb .Header ,error ){const _aade ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";
if _ebc ==nil {return nil ,_af .Error (_aade ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_ebc .Segments )==0{return nil ,_af .Error (_aade ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};var _ccg *_eb .Header ;for _ ,_ccg =range _ebc .Segments {if _ccg .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _ccg ==nil {return nil ,_af .Error (_aade ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _ccg ,nil ;};func (_gge *Page )GetBitmap ()(_acdd *_fc .Bitmap ,_eag error ){_aa .Log .Trace (_g .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_gge .PageNumber ));
defer func (){if _eag !=nil {_aa .Log .Trace (_g .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gge .PageNumber ,_eag ));
}else {_aa .Log .Trace (_g .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_gge .PageNumber ));};}();if _gge .Bitmap !=nil {return _gge .Bitmap ,nil ;
};_eag =_gge .composePageBitmap ();if _eag !=nil {return nil ,_eag ;};return _gge .Bitmap ,nil ;};func (_ecfg *Page )fitsPage (_cab *_eb .PageInformationSegment ,_bbgg *_fc .Bitmap )bool {return _ecfg .countRegions ()==1&&_cab .DefaultPixelValue ==0&&_cab .PageBMWidth ==_bbgg .Width &&_cab .PageBMHeight ==_bbgg .Height ;
};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream *_f .Reader ;GlobalSegments *Globals ;OrganizationType _eb .OrganizationType ;Classer *_gc .Classer ;XRes ,YRes int ;FullHeaders bool ;
CurrentSegmentNumber uint32 ;AverageTemplates *_fc .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_ae uint8 ;_bd *_f .BufferedWriter ;EncodeGlobals bool ;_cf int ;_bf map[int ][]int ;_bg map[int ][]int ;_fe []int ;_db map[int ]int ;};func (_dbg *Document )mapData ()error {const _edba ="\u006da\u0070\u0044\u0061\u0074\u0061";
var (_ffb []*_eb .Header ;_beb int64 ;_gbf _eb .Type ;);_ebgb ,_fgc :=_dbg .isFileHeaderPresent ();if _fgc !=nil {return _af .Wrap (_fgc ,_edba ,"");};if _ebgb {if _fgc =_dbg .parseFileHeader ();_fgc !=nil {return _af .Wrap (_fgc ,_edba ,"");};_beb +=int64 (_dbg ._ae );
_dbg .FullHeaders =true ;};var (_fgd *Page ;_ace bool ;);for _gbf !=51&&!_ace {_def ,_ade :=_eb .NewHeader (_dbg ,_dbg .InputStream ,_beb ,_dbg .OrganizationType );if _ade !=nil {return _af .Wrap (_ade ,_edba ,"");};_aa .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_def .SegmentNumber ,_def .Type );
_gbf =_def .Type ;if _gbf !=_eb .TEndOfFile {if _def .PageAssociation !=0{_fgd =_dbg .Pages [_def .PageAssociation ];if _fgd ==nil {_fgd =_aag (_dbg ,_def .PageAssociation );_dbg .Pages [_def .PageAssociation ]=_fgd ;if _dbg .NumberOfPagesUnknown {_dbg .NumberOfPages ++;
};};_fgd .Segments =append (_fgd .Segments ,_def );}else {_dbg .GlobalSegments .AddSegment (_def );};};_ffb =append (_ffb ,_def );_beb =_dbg .InputStream .AbsolutePosition ();if _dbg .OrganizationType ==_eb .OSequential {_beb +=int64 (_def .SegmentDataLength );
};_ace ,_ade =_dbg .reachedEOF (_beb );if _ade !=nil {_aa .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_ade );
return _af .Wrap (_ade ,_edba ,"");};};_dbg .determineRandomDataOffsets (_ffb ,uint64 (_beb ));return nil ;};func (_fgad *Page )AddGenericRegion (bm *_fc .Bitmap ,xloc ,yloc ,template int ,tp _eb .Type ,duplicateLineRemoval bool )error {const _bfb ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";
_ede :=&_eb .GenericRegion {};if _dfgf :=_ede .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_dfgf !=nil {return _af .Wrap (_dfgf ,_bfb ,"");};_fbdg :=&_eb .Header {Type :_eb .TImmediateGenericRegion ,PageAssociation :_fgad .PageNumber ,SegmentData :_ede };
_fgad .Segments =append (_fgad .Segments ,_fbdg );return nil ;};func (_dab *Page )AddPageInformationSegment (){_dfc :=&_eb .PageInformationSegment {PageBMWidth :_dab .FinalWidth ,PageBMHeight :_dab .FinalHeight ,ResolutionX :_dab .ResolutionX ,ResolutionY :_dab .ResolutionY ,IsLossless :_dab .IsLossless };
if _dab .BlackIsOne {_dfc .DefaultPixelValue =uint8 (0x1);};_ced :=&_eb .Header {PageAssociation :_dab .PageNumber ,SegmentDataLength :uint64 (_dfc .Size ()),SegmentData :_dfc ,Type :_eb .TPageInformation };_dab .Segments =append (_dab .Segments ,_ced );
};func _gcb (_gfb int )int {_abf :=0;_ffc :=(_gfb &(_gfb -1))==0;_gfb >>=1;for ;_gfb !=0;_gfb >>=1{_abf ++;};if _ffc {return _abf ;};return _abf +1;};func (_ecf *Document )determineRandomDataOffsets (_dbcc []*_eb .Header ,_dfg uint64 ){if _ecf .OrganizationType !=_eb .ORandom {return ;
};for _ ,_ea :=range _dbcc {_ea .SegmentDataStartOffset =_dfg ;_dfg +=_ea .SegmentDataLength ;};};func (_gbe *Globals )AddSegment (segment *_eb .Header ){_gbe .Segments =append (_gbe .Segments ,segment )};func (_gbb *Document )reachedEOF (_cfa int64 )(bool ,error ){const _abfd ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";
_ ,_dbe :=_gbb .InputStream .Seek (_cfa ,_d .SeekStart );if _dbe !=nil {_aa .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_dbe );
return false ,_af .Wrap (_dbe ,_abfd ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_dbe =_gbb .InputStream .ReadBits (32);if _dbe ==_d .EOF {return true ,nil ;
}else if _dbe !=nil {return false ,_af .Wrap (_dbe ,_abfd ,"");};return false ,nil ;};func (_fce *Page )String ()string {return _g .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_fce .PageNumber );};func (_ded *Document )addSymbolDictionary (_ccb int ,_faf *_fc .Bitmaps ,_abg []int ,_ba map[int ]int ,_gd bool )(*_eb .Header ,error ){const _cb ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";
_edf :=&_eb .SymbolDictionary {};if _aad :=_edf .InitEncode (_faf ,_abg ,_ba ,_gd );_aad !=nil {return nil ,_aad ;};_aff :=&_eb .Header {Type :_eb .TSymbolDictionary ,PageAssociation :_ccb ,SegmentData :_edf };if _ccb ==0{if _ded .GlobalSegments ==nil {_ded .GlobalSegments =&Globals {};
};_ded .GlobalSegments .AddSegment (_aff );return _aff ,nil ;};_abe ,_fbd :=_ded .Pages [_ccb ];if !_fbd {return nil ,_af .Errorf (_cb ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ccb );};var (_afd int ;
_gcd *_eb .Header ;);for _afd ,_gcd =range _abe .Segments {if _gcd .Type ==_eb .TPageInformation {break ;};};_afd ++;_abe .Segments =append (_abe .Segments ,nil );copy (_abe .Segments [_afd +1:],_abe .Segments [_afd :]);_abe .Segments [_afd ]=_aff ;return _aff ,nil ;
};func (_cce *Document )isFileHeaderPresent ()(bool ,error ){_cce .InputStream .Mark ();for _ ,_gcc :=range _dg {_aadg ,_ceb :=_cce .InputStream .ReadByte ();if _ceb !=nil {return false ,_ceb ;};if _gcc !=_aadg {_cce .InputStream .Reset ();return false ,nil ;
};};_cce .InputStream .Reset ();return true ,nil ;};func (_ggf *Document )GetNumberOfPages ()(uint32 ,error ){if _ggf .NumberOfPagesUnknown ||_ggf .NumberOfPages ==0{if len (_ggf .Pages )==0{if _ega :=_ggf .mapData ();_ega !=nil {return 0,_af .Wrap (_ega ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");
};};return uint32 (len (_ggf .Pages )),nil ;};return _ggf .NumberOfPages ,nil ;};func _aeba (_afe *_f .Reader ,_gaf *Globals )(*Document ,error ){_gae :=&Document {Pages :make (map[int ]*Page ),InputStream :_afe ,OrganizationType :_eb .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_gaf ,_ae :9};
if _gae .GlobalSegments ==nil {_gae .GlobalSegments =&Globals {};};if _ffd :=_gae .mapData ();_ffd !=nil {return nil ,_ffd ;};return _gae ,nil ;};func (_gbdac *Page )GetResolutionY ()(int ,error ){return _gbdac .getResolutionY ()};func _aag (_gbfb *Document ,_afff int )*Page {return &Page {Document :_gbfb ,PageNumber :_afff ,Segments :[]*_eb .Header {}};
};func (_gg *Document )AddGenericPage (bm *_fc .Bitmap ,duplicateLineRemoval bool )(_cc error ){const _fd ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";if !_gg .FullHeaders &&_gg .NumberOfPages !=0{return _af .Error (_fd ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};_ff :=&Page {Segments :[]*_eb .Header {},Bitmap :bm ,Document :_gg ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true ,BlackIsOne :bm .Color ==_fc .Chocolate };_ff .PageNumber =int (_gg .nextPageNumber ());_gg .Pages [_ff .PageNumber ]=_ff ;
bm .InverseData ();_ff .AddPageInformationSegment ();if _cc =_ff .AddGenericRegion (bm ,0,0,0,_eb .TImmediateGenericRegion ,duplicateLineRemoval );_cc !=nil {return _af .Wrap (_cc ,_fd ,"");};if _gg .FullHeaders {_ff .AddEndOfPageSegment ();};return nil ;
};func (_ggb *Document )nextSegmentNumber ()uint32 {_fbb :=_ggb .CurrentSegmentNumber ;_ggb .CurrentSegmentNumber ++;return _fbb ;};func (_cbb *Globals )GetSymbolDictionary ()(*_eb .Header ,error ){const _da ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";
if _cbb ==nil {return nil ,_af .Error (_da ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_cbb .Segments )==0{return nil ,_af .Error (_da ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};for _ ,_dad :=range _cbb .Segments {if _dad .Type ==_eb .TSymbolDictionary {return _dad ,nil ;};};return nil ,_af .Error (_da ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};func (_fggd *Page )getPageInformationSegment ()*_eb .Header {for _ ,_dfae :=range _fggd .Segments {if _dfae .Type ==_eb .TPageInformation {return _dfae ;};};_aa .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_fggd );
return nil ;};type EncodingMethod int ;func (_fga *Document )encodeEOFHeader (_bgg _f .BinaryWriter )(_fgg int ,_gbd error ){_eee :=&_eb .Header {SegmentNumber :_fga .nextSegmentNumber (),Type :_eb .TEndOfFile };if _fgg ,_gbd =_eee .Encode (_bgg );_gbd !=nil {return 0,_af .Wrap (_gbd ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");
};return _fgg ,nil ;};func DecodeDocument (input *_f .Reader ,globals *Globals )(*Document ,error ){return _aeba (input ,globals );};func (_aab *Document )encodeFileHeader (_bbg _f .BinaryWriter )(_bc int ,_ge error ){const _edb ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_bc ,_ge =_bbg .Write (_dg );if _ge !=nil {return _bc ,_af .Wrap (_ge ,_edb ,"\u0069\u0064");};if _ge =_bbg .WriteByte (0x01);_ge !=nil {return _bc ,_af .Wrap (_ge ,_edb ,"\u0066\u006c\u0061g\u0073");};_bc ++;_gac :=make ([]byte ,4);_c .BigEndian .PutUint32 (_gac ,_aab .NumberOfPages );
_dffg ,_ge :=_bbg .Write (_gac );if _ge !=nil {return _dffg ,_af .Wrap (_ge ,_edb ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_bc +=_dffg ;return _bc ,nil ;};func (_fff *Page )createStripedPage (_egg *_eb .PageInformationSegment )error {const _fed ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";
_edc ,_eagf :=_fff .collectPageStripes ();if _eagf !=nil {return _af .Wrap (_eagf ,_fed ,"");};var _efd int ;for _ ,_fbg :=range _edc {if _bbb ,_bga :=_fbg .(*_eb .EndOfStripe );_bga {_efd =_bbb .LineNumber ()+1;}else {_adg :=_fbg .(_eb .Regioner );_fge :=_adg .GetRegionInfo ();
_fgf :=_fff .getCombinationOperator (_egg ,_fge .CombinaionOperator );_cad ,_ebgd :=_adg .GetRegionBitmap ();if _ebgd !=nil {return _af .Wrap (_ebgd ,_fed ,"");};_ebgd =_fc .Blit (_cad ,_fff .Bitmap ,int (_fge .XLocation ),_efd ,_fgf );if _ebgd !=nil {return _af .Wrap (_ebgd ,_fed ,"");
};};};return nil ;};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_bd :_f .BufferedMSB (),Pages :map[int ]*Page {},_bf :map[int ][]int {},_db :map[int ]int {},_bg :map[int ][]int {}};};func (_cgb *Document )Encode ()(_cbf []byte ,_edd error ){const _ddd ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
var _dga ,_acb int ;if _cgb .FullHeaders {if _dga ,_edd =_cgb .encodeFileHeader (_cgb ._bd );_edd !=nil {return nil ,_af .Wrap (_edd ,_ddd ,"");};};var (_bbf bool ;_ad *_eb .Header ;_dcb *Page ;);if _edd =_cgb .completeClassifiedPages ();_edd !=nil {return nil ,_af .Wrap (_edd ,_ddd ,"");
};if _edd =_cgb .produceClassifiedPages ();_edd !=nil {return nil ,_af .Wrap (_edd ,_ddd ,"");};if _cgb .GlobalSegments !=nil {for _ ,_ad =range _cgb .GlobalSegments .Segments {if _edd =_cgb .encodeSegment (_ad ,&_dga );_edd !=nil {return nil ,_af .Wrap (_edd ,_ddd ,"");
};};};for _df :=1;_df <=int (_cgb .NumberOfPages );_df ++{if _dcb ,_bbf =_cgb .Pages [_df ];!_bbf {return nil ,_af .Errorf (_ddd ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_df );};for _ ,_ad =range _dcb .Segments {if _edd =_cgb .encodeSegment (_ad ,&_dga );
_edd !=nil {return nil ,_af .Wrap (_edd ,_ddd ,"");};};};if _cgb .FullHeaders {if _acb ,_edd =_cgb .encodeEOFHeader (_cgb ._bd );_edd !=nil {return nil ,_af .Wrap (_edd ,_ddd ,"");};_dga +=_acb ;};_cbf =_cgb ._bd .Data ();if len (_cbf )!=_dga {_aa .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_dga ,len (_cbf ));
};return _cbf ,nil ;};func (_gbdc *Globals )GetSegmentByIndex (index int )(*_eb .Header ,error ){const _ege ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";if _gbdc ==nil {return nil ,_af .Error (_ege ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_gbdc .Segments )==0{return nil ,_af .Error (_ege ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};if index > len (_gbdc .Segments )-1{return nil ,_af .Error (_ege ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");
};return _gbdc .Segments [index ],nil ;};func (_cae *Page )getResolutionX ()(int ,error ){const _bede ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";if _cae .ResolutionX !=0{return _cae .ResolutionX ,nil ;};_cdb :=_cae .getPageInformationSegment ();
if _cdb ==nil {return 0,_af .Error (_bede ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_bff ,_efae :=_cdb .GetSegmentData ();if _efae !=nil {return 0,_af .Wrap (_efae ,_bede ,"");};_gdge ,_afcec :=_bff .(*_eb .PageInformationSegment );
if !_afcec {return 0,_af .Errorf (_bede ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_bff );
};_cae .ResolutionX =_gdge .ResolutionX ;return _cae .ResolutionX ,nil ;};var _dg =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func (_cgg *Document )encodeSegment (_ddg *_eb .Header ,_aca *int )error {const _gga ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
_ddg .SegmentNumber =_cgg .nextSegmentNumber ();_fg ,_dff :=_ddg .Encode (_cgg ._bd );if _dff !=nil {return _af .Wrapf (_dff ,_gga ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_ddg .SegmentNumber );};*_aca +=_fg ;return nil ;
};func (_ecg *Page )addTextRegionSegment (_agb []*_eb .Header ,_gbda ,_aba map[int ]int ,_adc []int ,_gdb *_fc .Points ,_bcb *_fc .Bitmaps ,_afc *_e .IntSlice ,_bed *_fc .Boxes ,_fcge ,_bfa int ){_cdc :=&_eb .TextRegion {NumberOfSymbols :uint32 (_bfa )};
_cdc .InitEncode (_gbda ,_aba ,_adc ,_gdb ,_bcb ,_afc ,_bed ,_ecg .FinalWidth ,_ecg .FinalHeight ,_fcge );_dda :=&_eb .Header {RTSegments :_agb ,SegmentData :_cdc ,PageAssociation :_ecg .PageNumber ,Type :_eb .TImmediateTextRegion };_ffdd :=_eb .TPageInformation ;
if _aba !=nil {_ffdd =_eb .TSymbolDictionary ;};var _dfgb int ;for ;_dfgb < len (_ecg .Segments );_dfgb ++{if _ecg .Segments [_dfgb ].Type ==_ffdd {_dfgb ++;break ;};};_ecg .Segments =append (_ecg .Segments ,nil );copy (_ecg .Segments [_dfgb +1:],_ecg .Segments [_dfgb :]);
_ecg .Segments [_dfgb ]=_dda ;};func (_eg *Document )produceClassifiedPages ()(_cef error ){const _gf ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";if _eg .Classer ==nil {return nil ;
};var (_cg *Page ;_agc bool ;_bfd *_eb .Header ;);for _efa :=1;_efa <=int (_eg .NumberOfPages );_efa ++{if _cg ,_agc =_eg .Pages [_efa ];!_agc {return _af .Errorf (_gf ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_efa );
};if _cg .EncodingMethod ==GenericEM {continue ;};if _bfd ==nil {if _bfd ,_cef =_eg .GlobalSegments .GetSymbolDictionary ();_cef !=nil {return _af .Wrap (_cef ,_gf ,"");};};if _cef =_eg .produceClassifiedPage (_cg ,_bfd );_cef !=nil {return _af .Wrapf (_cef ,_gf ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_efa );
};};return nil ;};func (_ebgbb *Page )composePageBitmap ()error {const _aga ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";if _ebgbb .PageNumber ==0{return nil ;};_dgaf :=_ebgbb .getPageInformationSegment ();
if _dgaf ==nil {return _af .Error (_aga ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_bggf ,_feb :=_dgaf .GetSegmentData ();
if _feb !=nil {return _feb ;};_gec ,_bbgb :=_bggf .(*_eb .PageInformationSegment );if !_bbgb {return _af .Error (_aga ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");
};if _feb =_ebgbb .createPage (_gec );_feb !=nil {return _af .Wrap (_feb ,_aga ,"");};_ebgbb .clearSegmentData ();return nil ;};type Page struct{Segments []*_eb .Header ;PageNumber int ;Bitmap *_fc .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;
ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;BlackIsOne bool ;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_cdfd *Page )GetSegment (number int )(*_eb .Header ,error ){const _dedg ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
for _ ,_dbf :=range _cdfd .Segments {if _dbf .SegmentNumber ==uint32 (number ){return _dbf ,nil ;};};_dgf :=make ([]uint32 ,len (_cdfd .Segments ));for _caf ,_dea :=range _cdfd .Segments {_dgf [_caf ]=_dea .SegmentNumber ;};return nil ,_af .Errorf (_dedg ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_cdfd .PageNumber ,_dgf );
};func (_ebg *Document )GetPage (pageNumber int )(_eb .Pager ,error ){const _decf ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";if pageNumber < 0{_aa .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_bb .Stack ());
return nil ,_af .Errorf (_decf ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );
};if pageNumber > len (_ebg .Pages ){_aa .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_bb .Stack ());return nil ,_af .Error (_decf ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};_fcaa ,_dbc :=_ebg .Pages [pageNumber ];if !_dbc {_aa .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_bb .Stack ());return nil ,_af .Errorf (_decf ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _fcaa ,nil ;};func (_aefb *Page )getCombinationOperator (_aeff *_eb .PageInformationSegment ,_dffe _fc .CombinationOperator )_fc .CombinationOperator {if _aeff .CombinationOperatorOverrideAllowed (){return _dffe ;};return _aeff .CombinationOperator ();
};func (_aed *Page )createNormalPage (_gab *_eb .PageInformationSegment )error {const _face ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";_aed .Bitmap =_fc .New (_gab .PageBMWidth ,_gab .PageBMHeight );if _gab .DefaultPixelValue !=0{_aed .Bitmap .SetDefaultPixel ();
};for _ ,_dfa :=range _aed .Segments {switch _dfa .Type {case 6,7,22,23,38,39,42,43:_aa .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_dfa .SegmentNumber );_gdd ,_fdb :=_dfa .GetSegmentData ();
if _fdb !=nil {return _fdb ;};_cfgg ,_gee :=_gdd .(_eb .Regioner );if !_gee {_aa .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_gdd );
return _af .Errorf (_face ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_gdd );
};_ged ,_fdb :=_cfgg .GetRegionBitmap ();if _fdb !=nil {return _af .Wrap (_fdb ,_face ,"");};if _aed .fitsPage (_gab ,_ged ){_aed .Bitmap =_ged ;}else {_aef :=_cfgg .GetRegionInfo ();_dbd :=_aed .getCombinationOperator (_gab ,_aef .CombinaionOperator );
_fdb =_fc .Blit (_ged ,_aed .Bitmap ,int (_aef .XLocation ),int (_aef .YLocation ),_dbd );if _fdb !=nil {return _af .Wrap (_fdb ,_face ,"");};};};};return nil ;};func (_ag *Document )AddClassifiedPage (bm *_fc .Bitmap ,method _gc .Method )(_fca error ){const _cfc ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";
if !_ag .FullHeaders &&_ag .NumberOfPages !=0{return _af .Error (_cfc ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};if _ag .Classer ==nil {if _ag .Classer ,_fca =_gc .Init (_gc .DefaultSettings ());_fca !=nil {return _af .Wrap (_fca ,_cfc ,"");};};_gb :=int (_ag .nextPageNumber ());_ed :=&Page {Segments :[]*_eb .Header {},Bitmap :bm ,Document :_ag ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_gb };
_ag .Pages [_gb ]=_ed ;switch method {case _gc .RankHaus :_ed .EncodingMethod =RankHausEM ;case _gc .Correlation :_ed .EncodingMethod =CorrelationEM ;};_ed .AddPageInformationSegment ();if _fca =_ag .Classer .AddPage (bm ,_gb ,method );_fca !=nil {return _af .Wrap (_fca ,_cfc ,"");
};if _ag .FullHeaders {_ed .AddEndOfPageSegment ();};return nil ;};func (_dba *Page )AddEndOfPageSegment (){_fee :=&_eb .Header {Type :_eb .TEndOfPage ,PageAssociation :_dba .PageNumber };_dba .Segments =append (_dba .Segments ,_fee );};type Globals struct{Segments []*_eb .Header ;
};func (_eab *Page )GetHeight ()(int ,error ){return _eab .getHeight ()};func (_beg *Page )getWidth ()(int ,error ){const _gcf ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _beg .FinalWidth !=0{return _beg .FinalWidth ,nil ;};_afg :=_beg .getPageInformationSegment ();
if _afg ==nil {return 0,_af .Error (_gcf ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_dcd ,_eec :=_afg .GetSegmentData ();if _eec !=nil {return 0,_af .Wrap (_eec ,_gcf ,"");};_bbd ,_baf :=_dcd .(*_eb .PageInformationSegment );
if !_baf {return 0,_af .Errorf (_gcf ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_dcd );
};_beg .FinalWidth =_bbd .PageBMWidth ;return _beg .FinalWidth ,nil ;};func (_ccc *Page )collectPageStripes ()(_bdb []_eb .Segmenter ,_fbc error ){const _ggag ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";var _ggbe _eb .Segmenter ;
for _ ,_fdc :=range _ccc .Segments {switch _fdc .Type {case 6,7,22,23,38,39,42,43:_ggbe ,_fbc =_fdc .GetSegmentData ();if _fbc !=nil {return nil ,_af .Wrap (_fbc ,_ggag ,"");};_bdb =append (_bdb ,_ggbe );case 50:_ggbe ,_fbc =_fdc .GetSegmentData ();if _fbc !=nil {return nil ,_fbc ;
};_bbgc ,_fgfe :=_ggbe .(*_eb .EndOfStripe );if !_fgfe {return nil ,_af .Errorf (_ggag ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_ggbe );
};_bdb =append (_bdb ,_bbgc );_ccc .FinalHeight =_bbgc .LineNumber ();};};return _bdb ,nil ;};func (_cfdd *Page )nextSegmentNumber ()uint32 {return _cfdd .Document .nextSegmentNumber ()};func (_eeaa *Page )getHeight ()(int ,error ){const _cada ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";
if _eeaa .FinalHeight !=0{return _eeaa .FinalHeight ,nil ;};_cfd :=_eeaa .getPageInformationSegment ();if _cfd ==nil {return 0,_af .Error (_cada ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_cde ,_gfa :=_cfd .GetSegmentData ();
if _gfa !=nil {return 0,_af .Wrap (_gfa ,_cada ,"");};_ebd ,_aee :=_cde .(*_eb .PageInformationSegment );if !_aee {return 0,_af .Errorf (_cada ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_cde );
};if _ebd .PageBMHeight ==_b .MaxInt32 {_ ,_gfa =_eeaa .GetBitmap ();if _gfa !=nil {return 0,_af .Wrap (_gfa ,_cada ,"");};}else {_eeaa .FinalHeight =_ebd .PageBMHeight ;};return _eeaa .FinalHeight ,nil ;};func (_gdg *Document )completeSymbols ()(_cda error ){const _aeb ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
if _gdg .Classer ==nil {return nil ;};if _gdg .Classer .UndilatedTemplates ==nil {return _af .Error (_aeb ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");
};_feg :=len (_gdg .Pages )==1;_bdf :=make ([]int ,_gdg .Classer .UndilatedTemplates .Size ());var _fdf int ;for _dec :=0;_dec < _gdg .Classer .ClassIDs .Size ();_dec ++{_fdf ,_cda =_gdg .Classer .ClassIDs .Get (_dec );if _cda !=nil {return _af .Wrap (_cda ,_aeb ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");
};_bdf [_fdf ]++;};var _dc []int ;for _gfbf :=0;_gfbf < _gdg .Classer .UndilatedTemplates .Size ();_gfbf ++{if _bdf [_gfbf ]==0{return _af .Error (_aeb ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");
};if _bdf [_gfbf ]> 1||_feg {_dc =append (_dc ,_gfbf );};};_gdg ._cf =len (_dc );var _gcbb ,_cfb int ;for _efb :=0;_efb < _gdg .Classer .ComponentPageNumbers .Size ();_efb ++{_gcbb ,_cda =_gdg .Classer .ComponentPageNumbers .Get (_efb );if _cda !=nil {return _af .Wrapf (_cda ,_aeb ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_efb );
};_cfb ,_cda =_gdg .Classer .ClassIDs .Get (_efb );if _cda !=nil {return _af .Wrapf (_cda ,_aeb ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_gcbb );
};if _bdf [_cfb ]==1&&!_feg {_gdg ._bf [_gcbb ]=append (_gdg ._bf [_gcbb ],_cfb );};};if _cda =_gdg .Classer .ComputeLLCorners ();_cda !=nil {return _af .Wrap (_cda ,_aeb ,"");};return nil ;};func (_dfb *Document )GetGlobalSegment (i int )(*_eb .Header ,error ){_fcg ,_accg :=_dfb .GlobalSegments .GetSegment (i );
if _accg !=nil {return nil ,_af .Wrap (_accg ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");};return _fcg ,nil ;};func (_gbgb *Page )createPage (_bggd *_eb .PageInformationSegment )error {var _abc error ;if !_bggd .IsStripe ||_bggd .PageBMHeight !=-1{_abc =_gbgb .createNormalPage (_bggd );
}else {_abc =_gbgb .createStripedPage (_bggd );};return _abc ;};func (_gfd *Document )nextPageNumber ()uint32 {_gfd .NumberOfPages ++;return _gfd .NumberOfPages };func (_bbe *Document )completeClassifiedPages ()(_agg error ){const _ac ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";
if _bbe .Classer ==nil {return nil ;};_bbe ._fe =make ([]int ,_bbe .Classer .UndilatedTemplates .Size ());for _ga :=0;_ga < _bbe .Classer .ClassIDs .Size ();_ga ++{_acc ,_agf :=_bbe .Classer .ClassIDs .Get (_ga );if _agf !=nil {return _af .Wrapf (_agf ,_ac ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_ga );
};_bbe ._fe [_acc ]++;};var _fb []int ;for _dgg :=0;_dgg < _bbe .Classer .UndilatedTemplates .Size ();_dgg ++{if _bbe .NumberOfPages ==1||_bbe ._fe [_dgg ]> 1{_fb =append (_fb ,_dgg );};};var (_ec *Page ;_cd bool ;);for _fa ,_ce :=range *_bbe .Classer .ComponentPageNumbers {if _ec ,_cd =_bbe .Pages [_ce ];
!_cd {return _af .Errorf (_ac ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_fa );};if _ec .EncodingMethod ==GenericEM {_aa .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_fa );
continue ;};_bbe ._bg [_ce ]=append (_bbe ._bg [_ce ],_fa );_ca ,_ece :=_bbe .Classer .ClassIDs .Get (_fa );if _ece !=nil {return _af .Wrapf (_ece ,_ac ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_fa );
};if _bbe ._fe [_ca ]==1&&_bbe .NumberOfPages !=1{_ee :=append (_bbe ._bf [_ce ],_ca );_bbe ._bf [_ce ]=_ee ;};};if _agg =_bbe .Classer .ComputeLLCorners ();_agg !=nil {return _af .Wrap (_agg ,_ac ,"");};if _ ,_agg =_bbe .addSymbolDictionary (0,_bbe .Classer .UndilatedTemplates ,_fb ,_bbe ._db ,false );
_agg !=nil {return _af .Wrap (_agg ,_ac ,"");};return nil ;};func (_dae *Page )GetWidth ()(int ,error ){return _dae .getWidth ()};func (_facd *Page )getResolutionY ()(int ,error ){const _fbgg ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";
if _facd .ResolutionY !=0{return _facd .ResolutionY ,nil ;};_fcb :=_facd .getPageInformationSegment ();if _fcb ==nil {return 0,_af .Error (_fbgg ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_gaa ,_gdgd :=_fcb .GetSegmentData ();
if _gdgd !=nil {return 0,_af .Wrap (_gdgd ,_fbgg ,"");};_bebe ,_gaag :=_gaa .(*_eb .PageInformationSegment );if !_gaag {return 0,_af .Errorf (_fbgg ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_gaa );
};_facd .ResolutionY =_bebe .ResolutionY ;return _facd .ResolutionY ,nil ;};func (_fcc *Document )parseFileHeader ()error {const _dbge ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_ecc :=_fcc .InputStream .Seek (8,_d .SeekStart );
if _ecc !=nil {return _af .Wrap (_ecc ,_dbge ,"\u0069\u0064");};_ ,_ecc =_fcc .InputStream .ReadBits (5);if _ecc !=nil {return _af .Wrap (_ecc ,_dbge ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_gdf ,_ecc :=_fcc .InputStream .ReadBit ();
if _ecc !=nil {return _af .Wrap (_ecc ,_dbge ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");};if _gdf ==1{_fcc .GBUseExtTemplate =true ;};_gdf ,_ecc =_fcc .InputStream .ReadBit ();if _ecc !=nil {return _af .Wrap (_ecc ,_dbge ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");
};if _gdf !=1{_fcc .NumberOfPagesUnknown =false ;};_gdf ,_ecc =_fcc .InputStream .ReadBit ();if _ecc !=nil {return _af .Wrap (_ecc ,_dbge ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_fcc .OrganizationType =_eb .OrganizationType (_gdf );
if !_fcc .NumberOfPagesUnknown {_fcc .NumberOfPages ,_ecc =_fcc .InputStream .ReadUint32 ();if _ecc !=nil {return _af .Wrap (_ecc ,_dbge ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_fcc ._ae =13;};return nil ;
};func (_be *Document )produceClassifiedPage (_efg *Page ,_bgf *_eb .Header )(_gfc error ){const _cdg ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";var _fcab map[int ]int ;_dd :=_be ._cf ;_cfg :=[]*_eb .Header {_bgf };
if len (_be ._bf [_efg .PageNumber ])> 0{_fcab =map[int ]int {};_de ,_fdg :=_be .addSymbolDictionary (_efg .PageNumber ,_be .Classer .UndilatedTemplates ,_be ._bf [_efg .PageNumber ],_fcab ,false );if _fdg !=nil {return _af .Wrap (_fdg ,_cdg ,"");};_cfg =append (_cfg ,_de );
_dd +=len (_be ._bf [_efg .PageNumber ]);};_ab :=_be ._bg [_efg .PageNumber ];_aa .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_efg .PageNumber ,_ab );_efg .addTextRegionSegment (_cfg ,_be ._db ,_fcab ,_be ._bg [_efg .PageNumber ],_be .Classer .PtaLL ,_be .Classer .UndilatedTemplates ,_be .Classer .ClassIDs ,nil ,_gcb (_dd ),len (_be ._bg [_efg .PageNumber ]));
return nil ;};func (_eea *Page )GetResolutionX ()(int ,error ){return _eea .getResolutionX ()};func (_gfbb *Page )lastSegmentNumber ()(_aaf uint32 ,_afb error ){const _fgff ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
if len (_gfbb .Segments )==0{return _aaf ,_af .Errorf (_fgff ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_gfbb .PageNumber );
};return _gfbb .Segments [len (_gfbb .Segments )-1].SegmentNumber ,nil ;};func (_gacc *Page )Encode (w _f .BinaryWriter )(_bcc int ,_dfcd error ){const _egab ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _cdf int ;for _ ,_egec :=range _gacc .Segments {if _cdf ,_dfcd =_egec .Encode (w );
_dfcd !=nil {return _bcc ,_af .Wrap (_dfcd ,_egab ,"");};_bcc +=_cdf ;};return _bcc ,nil ;};func (_gca *Page )countRegions ()int {var _abeg int ;for _ ,_cfad :=range _gca .Segments {switch _cfad .Type {case 6,7,22,23,38,39,42,43:_abeg ++;};};return _abeg ;
};func (_fae *Page )clearSegmentData (){for _afa :=range _fae .Segments {_fae .Segments [_afa ].CleanSegmentData ();};};