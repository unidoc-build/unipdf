//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_e "encoding/binary";_b "fmt";_fed "github.com/unidoc/unipdf/v3/common";_bf "github.com/unidoc/unipdf/v3/internal/bitwise";_fd "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_cg "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_bb "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_a "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_d "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_fe "io";_c "math";_f "runtime/debug";);func (_ddg *Document )encodeSegment (_dfd *_bb .Header ,_dad *int )error {const _gcf ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
_dfd .SegmentNumber =_ddg .nextSegmentNumber ();_ffg ,_gfa :=_dfd .Encode (_ddg ._fc );if _gfa !=nil {return _d .Wrapf (_gfa ,_gcf ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_dfd .SegmentNumber );};*_dad +=_ffg ;return nil ;
};func (_bdcb *Page )getResolutionY ()(int ,error ){const _adge ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _bdcb .ResolutionY !=0{return _bdcb .ResolutionY ,nil ;};_dgc :=_bdcb .getPageInformationSegment ();if _dgc ==nil {return 0,_d .Error (_adge ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");
};_daac ,_cfeb :=_dgc .GetSegmentData ();if _cfeb !=nil {return 0,_d .Wrap (_cfeb ,_adge ,"");};_edaa ,_ffff :=_daac .(*_bb .PageInformationSegment );if !_ffff {return 0,_d .Errorf (_adge ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_daac );
};_bdcb .ResolutionY =_edaa .ResolutionY ;return _bdcb .ResolutionY ,nil ;};func (_eec *Document )isFileHeaderPresent ()(bool ,error ){_eec .InputStream .Mark ();for _ ,_def :=range _dd {_gfg ,_dbd :=_eec .InputStream .ReadByte ();if _dbd !=nil {return false ,_dbd ;
};if _def !=_gfg {_eec .InputStream .Reset ();return false ,nil ;};};_eec .InputStream .Reset ();return true ,nil ;};func (_gf *Document )AddClassifiedPage (bm *_cg .Bitmap ,method _a .Method )(_fef error ){const _fb ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";
if !_gf .FullHeaders &&_gf .NumberOfPages !=0{return _d .Error (_fb ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};if _gf .Classer ==nil {if _gf .Classer ,_fef =_a .Init (_a .DefaultSettings ());_fef !=nil {return _d .Wrap (_fef ,_fb ,"");};};_de :=int (_gf .nextPageNumber ());_ba :=&Page {Segments :[]*_bb .Header {},Bitmap :bm ,Document :_gf ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_de };
_gf .Pages [_de ]=_ba ;switch method {case _a .RankHaus :_ba .EncodingMethod =RankHausEM ;case _a .Correlation :_ba .EncodingMethod =CorrelationEM ;};_ba .AddPageInformationSegment ();if _fef =_gf .Classer .AddPage (bm ,_de ,method );_fef !=nil {return _d .Wrap (_fef ,_fb ,"");
};if _gf .FullHeaders {_ba .AddEndOfPageSegment ();};return nil ;};func (_bd *Document )AddGenericPage (bm *_cg .Bitmap ,duplicateLineRemoval bool )(_eg error ){const _df ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";
if !_bd .FullHeaders &&_bd .NumberOfPages !=0{return _d .Error (_df ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};_af :=&Page {Segments :[]*_bb .Header {},Bitmap :bm ,Document :_bd ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true ,BlackIsOne :bm .Color ==_cg .Chocolate };_af .PageNumber =int (_bd .nextPageNumber ());_bd .Pages [_af .PageNumber ]=_af ;
bm .InverseData ();_af .AddPageInformationSegment ();if _eg =_af .AddGenericRegion (bm ,0,0,0,_bb .TImmediateGenericRegion ,duplicateLineRemoval );_eg !=nil {return _d .Wrap (_eg ,_df ,"");};if _bd .FullHeaders {_af .AddEndOfPageSegment ();};return nil ;
};func (_fca *Document )encodeFileHeader (_ebf _bf .BinaryWriter )(_ed int ,_cgfb error ){const _egd ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ed ,_cgfb =_ebf .Write (_dd );if _cgfb !=nil {return _ed ,_d .Wrap (_cgfb ,_egd ,"\u0069\u0064");
};if _cgfb =_ebf .WriteByte (0x01);_cgfb !=nil {return _ed ,_d .Wrap (_cgfb ,_egd ,"\u0066\u006c\u0061g\u0073");};_ed ++;_dff :=make ([]byte ,4);_e .BigEndian .PutUint32 (_dff ,_fca .NumberOfPages );_aa ,_cgfb :=_ebf .Write (_dff );if _cgfb !=nil {return _aa ,_d .Wrap (_cgfb ,_egd ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");
};_ed +=_aa ;return _ed ,nil ;};func (_faf *Document )reachedEOF (_adg int64 )(bool ,error ){const _dab ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_bee :=_faf .InputStream .Seek (_adg ,_fe .SeekStart );if _bee !=nil {_fed .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bee );
return false ,_d .Wrap (_bee ,_dab ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_bee =_faf .InputStream .ReadBits (32);if _bee ==_fe .EOF {return true ,nil ;
}else if _bee !=nil {return false ,_d .Wrap (_bee ,_dab ,"");};return false ,nil ;};func (_gfd *Globals )GetSymbolDictionary ()(*_bb .Header ,error ){const _bad ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";
if _gfd ==nil {return nil ,_d .Error (_bad ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_gfd .Segments )==0{return nil ,_d .Error (_bad ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};for _ ,_abb :=range _gfd .Segments {if _abb .Type ==_bb .TSymbolDictionary {return _abb ,nil ;};};return nil ,_d .Error (_bad ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};func (_ege *Page )createNormalPage (_cbg *_bb .PageInformationSegment )error {const _ddgc ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";_ege .Bitmap =_cg .New (_cbg .PageBMWidth ,_cbg .PageBMHeight );if _cbg .DefaultPixelValue !=0{_ege .Bitmap .SetDefaultPixel ();
};for _ ,_ea :=range _ege .Segments {switch _ea .Type {case 6,7,22,23,38,39,42,43:_fed .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_ea .SegmentNumber );_cdd ,_dcaf :=_ea .GetSegmentData ();
if _dcaf !=nil {return _dcaf ;};_aaaa ,_efd :=_cdd .(_bb .Regioner );if !_efd {_fed .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_cdd );
return _d .Errorf (_ddgc ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_cdd );
};_geed ,_dcaf :=_aaaa .GetRegionBitmap ();if _dcaf !=nil {return _d .Wrap (_dcaf ,_ddgc ,"");};if _ege .fitsPage (_cbg ,_geed ){_ege .Bitmap =_geed ;}else {_cad :=_aaaa .GetRegionInfo ();_ddf :=_ege .getCombinationOperator (_cbg ,_cad .CombinaionOperator );
_dcaf =_cg .Blit (_geed ,_ege .Bitmap ,int (_cad .XLocation ),int (_cad .YLocation ),_ddf );if _dcaf !=nil {return _d .Wrap (_dcaf ,_ddgc ,"");};};};};return nil ;};func (_cgc *Document )produceClassifiedPage (_cca *Page ,_ce *_bb .Header )(_egg error ){const _agg ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";
var _cfe map[int ]int ;_cb :=_cgc ._gc ;_fec :=[]*_bb .Header {_ce };if len (_cgc ._dc [_cca .PageNumber ])> 0{_cfe =map[int ]int {};_cgb ,_afe :=_cgc .addSymbolDictionary (_cca .PageNumber ,_cgc .Classer .UndilatedTemplates ,_cgc ._dc [_cca .PageNumber ],_cfe ,false );
if _afe !=nil {return _d .Wrap (_afe ,_agg ,"");};_fec =append (_fec ,_cgb );_cb +=len (_cgc ._dc [_cca .PageNumber ]);};_dcd :=_cgc ._gd [_cca .PageNumber ];_fed .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_cca .PageNumber ,_dcd );
_cca .addTextRegionSegment (_fec ,_cgc ._bc ,_cfe ,_cgc ._gd [_cca .PageNumber ],_cgc .Classer .PtaLL ,_cgc .Classer .UndilatedTemplates ,_cgc .Classer .ClassIDs ,nil ,_db (_cb ),len (_cgc ._gd [_cca .PageNumber ]));return nil ;};type Globals struct{Segments []*_bb .Header ;
};func _db (_eb int )int {_dde :=0;_ec :=(_eb &(_eb -1))==0;_eb >>=1;for ;_eb !=0;_eb >>=1{_dde ++;};if _ec {return _dde ;};return _dde +1;};func (_abegg *Page )getResolutionX ()(int ,error ){const _gfb ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";
if _abegg .ResolutionX !=0{return _abegg .ResolutionX ,nil ;};_agf :=_abegg .getPageInformationSegment ();if _agf ==nil {return 0,_d .Error (_gfb ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_baca ,_gfdf :=_agf .GetSegmentData ();
if _gfdf !=nil {return 0,_d .Wrap (_gfdf ,_gfb ,"");};_face ,_ggac :=_baca .(*_bb .PageInformationSegment );if !_ggac {return 0,_d .Errorf (_gfb ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_baca );
};_abegg .ResolutionX =_face .ResolutionX ;return _abegg .ResolutionX ,nil ;};func (_ee *Document )Encode ()(_ccb []byte ,_aca error ){const _gge ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _fa ,_gdd int ;if _ee .FullHeaders {if _fa ,_aca =_ee .encodeFileHeader (_ee ._fc );
_aca !=nil {return nil ,_d .Wrap (_aca ,_gge ,"");};};var (_fcb bool ;_gde *_bb .Header ;_dcdd *Page ;);if _aca =_ee .completeClassifiedPages ();_aca !=nil {return nil ,_d .Wrap (_aca ,_gge ,"");};if _aca =_ee .produceClassifiedPages ();_aca !=nil {return nil ,_d .Wrap (_aca ,_gge ,"");
};if _ee .GlobalSegments !=nil {for _ ,_gde =range _ee .GlobalSegments .Segments {if _aca =_ee .encodeSegment (_gde ,&_fa );_aca !=nil {return nil ,_d .Wrap (_aca ,_gge ,"");};};};for _cedd :=1;_cedd <=int (_ee .NumberOfPages );_cedd ++{if _dcdd ,_fcb =_ee .Pages [_cedd ];
!_fcb {return nil ,_d .Errorf (_gge ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_cedd );};for _ ,_gde =range _dcdd .Segments {if _aca =_ee .encodeSegment (_gde ,&_fa );_aca !=nil {return nil ,_d .Wrap (_aca ,_gge ,"");
};};};if _ee .FullHeaders {if _gdd ,_aca =_ee .encodeEOFHeader (_ee ._fc );_aca !=nil {return nil ,_d .Wrap (_aca ,_gge ,"");};_fa +=_gdd ;};_ccb =_ee ._fc .Data ();if len (_ccb )!=_fa {_fed .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_fa ,len (_ccb ));
};return _ccb ,nil ;};func (_ef *Document )parseFileHeader ()error {const _acac ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_dbe :=_ef .InputStream .Seek (8,_fe .SeekStart );if _dbe !=nil {return _d .Wrap (_dbe ,_acac ,"\u0069\u0064");
};_ ,_dbe =_ef .InputStream .ReadBits (5);if _dbe !=nil {return _d .Wrap (_dbe ,_acac ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_ccbg ,_dbe :=_ef .InputStream .ReadBit ();if _dbe !=nil {return _d .Wrap (_dbe ,_acac ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");
};if _ccbg ==1{_ef .GBUseExtTemplate =true ;};_ccbg ,_dbe =_ef .InputStream .ReadBit ();if _dbe !=nil {return _d .Wrap (_dbe ,_acac ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _ccbg !=1{_ef .NumberOfPagesUnknown =false ;
};_ccbg ,_dbe =_ef .InputStream .ReadBit ();if _dbe !=nil {return _d .Wrap (_dbe ,_acac ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_ef .OrganizationType =_bb .OrganizationType (_ccbg );if !_ef .NumberOfPagesUnknown {_ef .NumberOfPages ,_dbe =_ef .InputStream .ReadUint32 ();
if _dbe !=nil {return _d .Wrap (_dbe ,_acac ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_ef ._ca =13;};return nil ;};func (_bag *Page )GetSegment (number int )(*_bb .Header ,error ){const _fda ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
for _ ,_ggc :=range _bag .Segments {if _ggc .SegmentNumber ==uint32 (number ){return _ggc ,nil ;};};_cbac :=make ([]uint32 ,len (_bag .Segments ));for _ccgg ,_baef :=range _bag .Segments {_cbac [_ccgg ]=_baef .SegmentNumber ;};return nil ,_d .Errorf (_fda ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_bag .PageNumber ,_cbac );
};func (_dcg *Document )nextPageNumber ()uint32 {_dcg .NumberOfPages ++;return _dcg .NumberOfPages };func (_adf *Document )determineRandomDataOffsets (_cba []*_bb .Header ,_ddc uint64 ){if _adf .OrganizationType !=_bb .ORandom {return ;};for _ ,_egc :=range _cba {_egc .SegmentDataStartOffset =_ddc ;
_ddc +=_egc .SegmentDataLength ;};};func (_afc *Document )GetNumberOfPages ()(uint32 ,error ){if _afc .NumberOfPagesUnknown ||_afc .NumberOfPages ==0{if len (_afc .Pages )==0{if _fcg :=_afc .mapData ();_fcg !=nil {return 0,_d .Wrap (_fcg ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");
};};return uint32 (len (_afc .Pages )),nil ;};return _afc .NumberOfPages ,nil ;};func (_ebb *Page )GetWidth ()(int ,error ){return _ebb .getWidth ()};func DecodeDocument (input _bf .StreamReader ,globals *Globals )(*Document ,error ){return _bgb (input ,globals );
};func (_fcda *Page )countRegions ()int {var _edb int ;for _ ,_cfd :=range _fcda .Segments {switch _cfd .Type {case 6,7,22,23,38,39,42,43:_edb ++;};};return _edb ;};func (_acc *Page )String ()string {return _b .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_acc .PageNumber );
};func (_edac *Globals )GetSegment (segmentNumber int )(*_bb .Header ,error ){const _ddgf ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";if _edac ==nil {return nil ,_d .Error (_ddgf ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_edac .Segments )==0{return nil ,_d .Error (_ddgf ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};var _gee *_bb .Header ;for _ ,_gee =range _edac .Segments {if _gee .SegmentNumber ==uint32 (segmentNumber ){break ;
};};if _gee ==nil {return nil ,_d .Error (_ddgf ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _gee ,nil ;};func (_abeg *Globals )GetSegmentByIndex (index int )(*_bb .Header ,error ){const _ddgg ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";
if _abeg ==nil {return nil ,_d .Error (_ddgg ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_abeg .Segments )==0{return nil ,_d .Error (_ddgg ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};if index > len (_abeg .Segments )-1{return nil ,_d .Error (_ddgg ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");};return _abeg .Segments [index ],nil ;};func (_bae *Document )addSymbolDictionary (_ga int ,_fee *_cg .Bitmaps ,_fdb []int ,_ece map[int ]int ,_da bool )(*_bb .Header ,error ){const _dfa ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";
_bbe :=&_bb .SymbolDictionary {};if _ab :=_bbe .InitEncode (_fee ,_fdb ,_ece ,_da );_ab !=nil {return nil ,_ab ;};_dbc :=&_bb .Header {Type :_bb .TSymbolDictionary ,PageAssociation :_ga ,SegmentData :_bbe };if _ga ==0{if _bae .GlobalSegments ==nil {_bae .GlobalSegments =&Globals {};
};_bae .GlobalSegments .AddSegment (_dbc );return _dbc ,nil ;};_ccg ,_geb :=_bae .Pages [_ga ];if !_geb {return nil ,_d .Errorf (_dfa ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ga );};var (_eca int ;
_dca *_bb .Header ;);for _eca ,_dca =range _ccg .Segments {if _dca .Type ==_bb .TPageInformation {break ;};};_eca ++;_ccg .Segments =append (_ccg .Segments ,nil );copy (_ccg .Segments [_eca +1:],_ccg .Segments [_eca :]);_ccg .Segments [_eca ]=_dbc ;return _dbc ,nil ;
};func (_ffc *Page )clearSegmentData (){for _agbc :=range _ffc .Segments {_ffc .Segments [_agbc ].CleanSegmentData ();};};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_ddee *Globals )AddSegment (segment *_bb .Header ){_ddee .Segments =append (_ddee .Segments ,segment );
};func (_fdca *Page )GetResolutionY ()(int ,error ){return _fdca .getResolutionY ()};func (_gdf *Page )Encode (w _bf .BinaryWriter )(_dge int ,_ffb error ){const _egdf ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _gcae int ;for _ ,_bac :=range _gdf .Segments {if _gcae ,_ffb =_bac .Encode (w );
_ffb !=nil {return _dge ,_d .Wrap (_ffb ,_egdf ,"");};_dge +=_gcae ;};return _dge ,nil ;};func (_fbf *Document )completeSymbols ()(_ced error ){const _daf ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";if _fbf .Classer ==nil {return nil ;
};if _fbf .Classer .UndilatedTemplates ==nil {return _d .Error (_daf ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");};_fbd :=len (_fbf .Pages )==1;
_fdg :=make ([]int ,_fbf .Classer .UndilatedTemplates .Size ());var _dcf int ;for _cgg :=0;_cgg < _fbf .Classer .ClassIDs .Size ();_cgg ++{_dcf ,_ced =_fbf .Classer .ClassIDs .Get (_cgg );if _ced !=nil {return _d .Wrap (_ced ,_daf ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");
};_fdg [_dcf ]++;};var _dag []int ;for _fffd :=0;_fffd < _fbf .Classer .UndilatedTemplates .Size ();_fffd ++{if _fdg [_fffd ]==0{return _d .Error (_daf ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");
};if _fdg [_fffd ]> 1||_fbd {_dag =append (_dag ,_fffd );};};_fbf ._gc =len (_dag );var _dbf ,_dgb int ;for _aeg :=0;_aeg < _fbf .Classer .ComponentPageNumbers .Size ();_aeg ++{_dbf ,_ced =_fbf .Classer .ComponentPageNumbers .Get (_aeg );if _ced !=nil {return _d .Wrapf (_ced ,_daf ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_aeg );
};_dgb ,_ced =_fbf .Classer .ClassIDs .Get (_aeg );if _ced !=nil {return _d .Wrapf (_ced ,_daf ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_dbf );
};if _fdg [_dgb ]==1&&!_fbd {_fbf ._dc [_dbf ]=append (_fbf ._dc [_dbf ],_dgb );};};if _ced =_fbf .Classer .ComputeLLCorners ();_ced !=nil {return _d .Wrap (_ced ,_daf ,"");};return nil ;};func _aed (_fcd *Document ,_edf int )*Page {return &Page {Document :_fcd ,PageNumber :_edf ,Segments :[]*_bb .Header {}};
};func (_cde *Page )GetResolutionX ()(int ,error ){return _cde .getResolutionX ()};func (_cbb *Page )getPageInformationSegment ()*_bb .Header {for _ ,_ggce :=range _cbb .Segments {if _ggce .Type ==_bb .TPageInformation {return _ggce ;};};_fed .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_cbb );
return nil ;};func (_eedg *Page )addTextRegionSegment (_ecc []*_bb .Header ,_aeb ,_eccg map[int ]int ,_abc []int ,_fea *_cg .Points ,_cge *_cg .Bitmaps ,_fcf *_fd .IntSlice ,_edd *_cg .Boxes ,_efg ,_ddab int ){_gce :=&_bb .TextRegion {NumberOfSymbols :uint32 (_ddab )};
_gce .InitEncode (_aeb ,_eccg ,_abc ,_fea ,_cge ,_fcf ,_edd ,_eedg .FinalWidth ,_eedg .FinalHeight ,_efg );_fdc :=&_bb .Header {RTSegments :_ecc ,SegmentData :_gce ,PageAssociation :_eedg .PageNumber ,Type :_bb .TImmediateTextRegion };_ccfd :=_bb .TPageInformation ;
if _eccg !=nil {_ccfd =_bb .TSymbolDictionary ;};var _bfc int ;for ;_bfc < len (_eedg .Segments );_bfc ++{if _eedg .Segments [_bfc ].Type ==_ccfd {_bfc ++;break ;};};_eedg .Segments =append (_eedg .Segments ,nil );copy (_eedg .Segments [_bfc +1:],_eedg .Segments [_bfc :]);
_eedg .Segments [_bfc ]=_fdc ;};func (_be *Document )produceClassifiedPages ()(_dec error ){const _cf ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";if _be .Classer ==nil {return nil ;
};var (_cd *Page ;_fff bool ;_agc *_bb .Header ;);for _dg :=1;_dg <=int (_be .NumberOfPages );_dg ++{if _cd ,_fff =_be .Pages [_dg ];!_fff {return _d .Errorf (_cf ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_dg );
};if _cd .EncodingMethod ==GenericEM {continue ;};if _agc ==nil {if _agc ,_dec =_be .GlobalSegments .GetSymbolDictionary ();_dec !=nil {return _d .Wrap (_dec ,_cf ,"");};};if _dec =_be .produceClassifiedPage (_cd ,_agc );_dec !=nil {return _d .Wrapf (_dec ,_cf ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_dg );
};};return nil ;};func (_fbcd *Page )getWidth ()(int ,error ){const _aad ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _fbcd .FinalWidth !=0{return _fbcd .FinalWidth ,nil ;};_abfa :=_fbcd .getPageInformationSegment ();if _abfa ==nil {return 0,_d .Error (_aad ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");
};_gebf ,_eaf :=_abfa .GetSegmentData ();if _eaf !=nil {return 0,_d .Wrap (_eaf ,_aad ,"");};_abfg ,_bfg :=_gebf .(*_bb .PageInformationSegment );if !_bfg {return 0,_d .Errorf (_aad ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_gebf );
};_fbcd .FinalWidth =_abfg .PageBMWidth ;return _fbcd .FinalWidth ,nil ;};func _bgb (_dce _bf .StreamReader ,_ddae *Globals )(*Document ,error ){_gga :=&Document {Pages :make (map[int ]*Page ),InputStream :_dce ,OrganizationType :_bb .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_ddae ,_ca :9};
if _gga .GlobalSegments ==nil {_gga .GlobalSegments =&Globals {};};if _faa :=_gga .mapData ();_faa !=nil {return nil ,_faa ;};return _gga ,nil ;};func (_gca *Page )AddEndOfPageSegment (){_aaa :=&_bb .Header {Type :_bb .TEndOfPage ,PageAssociation :_gca .PageNumber };
_gca .Segments =append (_gca .Segments ,_aaa );};func (_bgfg *Page )createPage (_gbg *_bb .PageInformationSegment )error {var _dbb error ;if !_gbg .IsStripe ||_gbg .PageBMHeight !=-1{_dbb =_bgfg .createNormalPage (_gbg );}else {_dbb =_bgfg .createStripedPage (_gbg );
};return _dbb ;};func (_ega *Page )createStripedPage (_gcee *_bb .PageInformationSegment )error {const _ccd ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";_fbgd ,_bdc :=_ega .collectPageStripes ();if _bdc !=nil {return _d .Wrap (_bdc ,_ccd ,"");
};var _eab int ;for _ ,_fgf :=range _fbgd {if _fac ,_dbfa :=_fgf .(*_bb .EndOfStripe );_dbfa {_eab =_fac .LineNumber ()+1;}else {_bbg :=_fgf .(_bb .Regioner );_fbc :=_bbg .GetRegionInfo ();_cafb :=_ega .getCombinationOperator (_gcee ,_fbc .CombinaionOperator );
_bba ,_agb :=_bbg .GetRegionBitmap ();if _agb !=nil {return _d .Wrap (_agb ,_ccd ,"");};_agb =_cg .Blit (_bba ,_ega .Bitmap ,int (_fbc .XLocation ),_eab ,_cafb );if _agb !=nil {return _d .Wrap (_agb ,_ccd ,"");};};};return nil ;};func (_aee *Page )GetHeight ()(int ,error ){return _aee .getHeight ()};
func (_fdde *Page )AddPageInformationSegment (){_cga :=&_bb .PageInformationSegment {PageBMWidth :_fdde .FinalWidth ,PageBMHeight :_fdde .FinalHeight ,ResolutionX :_fdde .ResolutionX ,ResolutionY :_fdde .ResolutionY ,IsLossless :_fdde .IsLossless };if _fdde .BlackIsOne {_cga .DefaultPixelValue =uint8 (0x1);
};_eed :=&_bb .Header {PageAssociation :_fdde .PageNumber ,SegmentDataLength :uint64 (_cga .Size ()),SegmentData :_cga ,Type :_bb .TPageInformation };_fdde .Segments =append (_fdde .Segments ,_eed );};type EncodingMethod int ;func (_gebg *Page )nextSegmentNumber ()uint32 {return _gebg .Document .nextSegmentNumber ()};
func (_eedc *Page )fitsPage (_gbf *_bb .PageInformationSegment ,_fbdag *_cg .Bitmap )bool {return _eedc .countRegions ()==1&&_gbf .DefaultPixelValue ==0&&_gbf .PageBMWidth ==_fbdag .Width &&_gbf .PageBMHeight ==_fbdag .Height ;};var _dd =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};
func (_eda *Document )mapData ()error {const _cafd ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_ddeb []*_bb .Header ;_bef int64 ;_abe _bb .Type ;);_acad ,_ccf :=_eda .isFileHeaderPresent ();if _ccf !=nil {return _d .Wrap (_ccf ,_cafd ,"");};if _acad {if _ccf =_eda .parseFileHeader ();
_ccf !=nil {return _d .Wrap (_ccf ,_cafd ,"");};_bef +=int64 (_eda ._ca );_eda .FullHeaders =true ;};var (_cgd *Page ;_bge bool ;);for _abe !=51&&!_bge {_ddb ,_fdd :=_bb .NewHeader (_eda ,_eda .InputStream ,_bef ,_eda .OrganizationType );if _fdd !=nil {return _d .Wrap (_fdd ,_cafd ,"");
};_fed .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_ddb .SegmentNumber ,_ddb .Type );
_abe =_ddb .Type ;if _abe !=_bb .TEndOfFile {if _ddb .PageAssociation !=0{_cgd =_eda .Pages [_ddb .PageAssociation ];if _cgd ==nil {_cgd =_aed (_eda ,_ddb .PageAssociation );_eda .Pages [_ddb .PageAssociation ]=_cgd ;if _eda .NumberOfPagesUnknown {_eda .NumberOfPages ++;
};};_cgd .Segments =append (_cgd .Segments ,_ddb );}else {_eda .GlobalSegments .AddSegment (_ddb );};};_ddeb =append (_ddeb ,_ddb );_bef =_eda .InputStream .StreamPosition ();if _eda .OrganizationType ==_bb .OSequential {_bef +=int64 (_ddb .SegmentDataLength );
};_bge ,_fdd =_eda .reachedEOF (_bef );if _fdd !=nil {_fed .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_fdd );
return _d .Wrap (_fdd ,_cafd ,"");};};_eda .determineRandomDataOffsets (_ddeb ,uint64 (_bef ));return nil ;};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_fc :_bf .BufferedMSB (),Pages :map[int ]*Page {},_dc :map[int ][]int {},_bc :map[int ]int {},_gd :map[int ][]int {}};
};type Page struct{Segments []*_bb .Header ;PageNumber int ;Bitmap *_cg .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;BlackIsOne bool ;
};func (_dda *Document )nextSegmentNumber ()uint32 {_adc :=_dda .CurrentSegmentNumber ;_dda .CurrentSegmentNumber ++;return _adc ;};func (_fbgc *Page )GetBitmap ()(_cag *_cg .Bitmap ,_bea error ){_fed .Log .Trace (_b .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_fbgc .PageNumber ));
defer func (){if _bea !=nil {_fed .Log .Trace (_b .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_fbgc .PageNumber ,_bea ));
}else {_fed .Log .Trace (_b .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_fbgc .PageNumber ));};}();if _fbgc .Bitmap !=nil {return _fbgc .Bitmap ,nil ;
};_bea =_fbgc .composePageBitmap ();if _bea !=nil {return nil ,_bea ;};return _fbgc .Bitmap ,nil ;};func (_edg *Page )lastSegmentNumber ()(_fbce uint32 ,_egfb error ){const _fcc ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
if len (_edg .Segments )==0{return _fbce ,_d .Errorf (_fcc ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_edg .PageNumber );
};return _edg .Segments [len (_edg .Segments )-1].SegmentNumber ,nil ;};func (_ac *Document )completeClassifiedPages ()(_ge error ){const _caf ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";
if _ac .Classer ==nil {return nil ;};_ac ._cgf =make ([]int ,_ac .Classer .UndilatedTemplates .Size ());for _bg :=0;_bg < _ac .Classer .ClassIDs .Size ();_bg ++{_cc ,_ged :=_ac .Classer .ClassIDs .Get (_bg );if _ged !=nil {return _d .Wrapf (_ged ,_caf ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_bg );
};_ac ._cgf [_cc ]++;};var _ae []int ;for _gb :=0;_gb < _ac .Classer .UndilatedTemplates .Size ();_gb ++{if _ac .NumberOfPages ==1||_ac ._cgf [_gb ]> 1{_ae =append (_ae ,_gb );};};var (_baa *Page ;_gdg bool ;);for _egf ,_ff :=range *_ac .Classer .ComponentPageNumbers {if _baa ,_gdg =_ac .Pages [_ff ];
!_gdg {return _d .Errorf (_caf ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_egf );};if _baa .EncodingMethod ==GenericEM {_fed .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_egf );
continue ;};_ac ._gd [_ff ]=append (_ac ._gd [_ff ],_egf );_ad ,_ag :=_ac .Classer .ClassIDs .Get (_egf );if _ag !=nil {return _d .Wrapf (_ag ,_caf ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_egf );
};if _ac ._cgf [_ad ]==1&&_ac .NumberOfPages !=1{_gbd :=append (_ac ._dc [_ff ],_ad );_ac ._dc [_ff ]=_gbd ;};};if _ge =_ac .Classer .ComputeLLCorners ();_ge !=nil {return _d .Wrap (_ge ,_caf ,"");};if _ ,_ge =_ac .addSymbolDictionary (0,_ac .Classer .UndilatedTemplates ,_ae ,_ac ._bc ,false );
_ge !=nil {return _d .Wrap (_ge ,_caf ,"");};return nil ;};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream _bf .StreamReader ;GlobalSegments *Globals ;OrganizationType _bb .OrganizationType ;
Classer *_a .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_cg .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_ca uint8 ;_fc *_bf .BufferedWriter ;EncodeGlobals bool ;_gc int ;_dc map[int ][]int ;
_gd map[int ][]int ;_cgf []int ;_bc map[int ]int ;};func (_bfe *Page )collectPageStripes ()(_efgg []_bb .Segmenter ,_dbbg error ){const _gfc ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";var _ebg _bb .Segmenter ;
for _ ,_befg :=range _bfe .Segments {switch _befg .Type {case 6,7,22,23,38,39,42,43:_ebg ,_dbbg =_befg .GetSegmentData ();if _dbbg !=nil {return nil ,_d .Wrap (_dbbg ,_gfc ,"");};_efgg =append (_efgg ,_ebg );case 50:_ebg ,_dbbg =_befg .GetSegmentData ();
if _dbbg !=nil {return nil ,_dbbg ;};_egfg ,_fdae :=_ebg .(*_bb .EndOfStripe );if !_fdae {return nil ,_d .Errorf (_gfc ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_ebg );
};_efgg =append (_efgg ,_egfg );_bfe .FinalHeight =_egfg .LineNumber ();};};return _efgg ,nil ;};func (_abd *Page )composePageBitmap ()error {const _fbda ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";
if _abd .PageNumber ==0{return nil ;};_gff :=_abd .getPageInformationSegment ();if _gff ==nil {return _d .Error (_fbda ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_ddgb ,_bgf :=_gff .GetSegmentData ();if _bgf !=nil {return _bgf ;};_fgb ,_fegb :=_ddgb .(*_bb .PageInformationSegment );if !_fegb {return _d .Error (_fbda ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");
};if _bgf =_abd .createPage (_fgb );_bgf !=nil {return _d .Wrap (_bgf ,_fbda ,"");};_abd .clearSegmentData ();return nil ;};func (_gad *Page )getHeight ()(int ,error ){const _cded ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _gad .FinalHeight !=0{return _gad .FinalHeight ,nil ;
};_dgbd :=_gad .getPageInformationSegment ();if _dgbd ==nil {return 0,_d .Error (_cded ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_gea ,_fbdc :=_dgbd .GetSegmentData ();if _fbdc !=nil {return 0,_d .Wrap (_fbdc ,_cded ,"");
};_caa ,_fede :=_gea .(*_bb .PageInformationSegment );if !_fede {return 0,_d .Errorf (_cded ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_gea );
};if _caa .PageBMHeight ==_c .MaxInt32 {_ ,_fbdc =_gad .GetBitmap ();if _fbdc !=nil {return 0,_d .Wrap (_fbdc ,_cded ,"");};}else {_gad .FinalHeight =_caa .PageBMHeight ;};return _gad .FinalHeight ,nil ;};func (_cae *Page )getCombinationOperator (_gag *_bb .PageInformationSegment ,_daab _cg .CombinationOperator )_cg .CombinationOperator {if _gag .CombinationOperatorOverrideAllowed (){return _daab ;
};return _gag .CombinationOperator ();};func (_cbaf *Page )AddGenericRegion (bm *_cg .Bitmap ,xloc ,yloc ,template int ,tp _bb .Type ,duplicateLineRemoval bool )error {const _bde ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";
_efc :=&_bb .GenericRegion {};if _ffga :=_efc .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_ffga !=nil {return _d .Wrap (_ffga ,_bde ,"");};_fg :=&_bb .Header {Type :_bb .TImmediateGenericRegion ,PageAssociation :_cbaf .PageNumber ,SegmentData :_efc };
_cbaf .Segments =append (_cbaf .Segments ,_fg );return nil ;};func (_fbfc *Document )GetPage (pageNumber int )(_bb .Pager ,error ){const _bcc ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";if pageNumber < 0{_fed .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_f .Stack ());
return nil ,_d .Errorf (_bcc ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );
};if pageNumber > len (_fbfc .Pages ){_fed .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_f .Stack ());return nil ,_d .Error (_bcc ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};_gae ,_dea :=_fbfc .Pages [pageNumber ];if !_dea {_fed .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_f .Stack ());return nil ,_d .Errorf (_bcc ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _gae ,nil ;};func (_gedb *Document )GetGlobalSegment (i int )(*_bb .Header ,error ){_feg ,_fad :=_gedb .GlobalSegments .GetSegment (i );if _fad !=nil {return nil ,_d .Wrap (_fad ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");
};return _feg ,nil ;};func (_bca *Document )encodeEOFHeader (_ada _bf .BinaryWriter )(_ace int ,_fbg error ){_bdg :=&_bb .Header {SegmentNumber :_bca .nextSegmentNumber (),Type :_bb .TEndOfFile };if _ace ,_fbg =_bdg .Encode (_ada );_fbg !=nil {return 0,_d .Wrap (_fbg ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");
};return _ace ,nil ;};