//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_f "encoding/binary";_e "fmt";_de "github.com/unidoc/unipdf/v3/common";_da "github.com/unidoc/unipdf/v3/internal/bitwise";_df "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_c "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_eb "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_ec "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_dc "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_ee "io";_gg "math";_d "runtime/debug";);func (_fg *Document )produceClassifiedPage (_egc *Page ,_deg *_eb .Header )(_fda error ){const _cb ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";
var _ef map[int ]int ;_fa :=_fg ._a ;_ecdg :=[]*_eb .Header {_deg };if len (_fg ._dd [_egc .PageNumber ])> 0{_ef =map[int ]int {};_efa ,_bd :=_fg .addSymbolDictionary (_egc .PageNumber ,_fg .Classer .UndilatedTemplates ,_fg ._dd [_egc .PageNumber ],_ef ,false );
if _bd !=nil {return _dc .Wrap (_bd ,_cb ,"");};_ecdg =append (_ecdg ,_efa );_fa +=len (_fg ._dd [_egc .PageNumber ]);};_gaf :=_fg ._eg [_egc .PageNumber ];_de .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_egc .PageNumber ,_gaf );
_egc .addTextRegionSegment (_ecdg ,_fg ._fe ,_ef ,_fg ._eg [_egc .PageNumber ],_fg .Classer .PtaLL ,_fg .Classer .UndilatedTemplates ,_fg .Classer .ClassIDs ,nil ,_ad (_fa ),len (_fg ._eg [_egc .PageNumber ]));return nil ;};func _ad (_gae int )int {_cab :=0;
_afe :=(_gae &(_gae -1))==0;_gae >>=1;for ;_gae !=0;_gae >>=1{_cab ++;};if _afe {return _cab ;};return _cab +1;};func (_cbd *Document )addSymbolDictionary (_cbb int ,_bbd *_c .Bitmaps ,_gbf []int ,_ffbd map[int ]int ,_dbb bool )(*_eb .Header ,error ){const _ffbb ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";
_ggc :=&_eb .SymbolDictionary {};if _gab :=_ggc .InitEncode (_bbd ,_gbf ,_ffbd ,_dbb );_gab !=nil {return nil ,_gab ;};_ge :=&_eb .Header {Type :_eb .TSymbolDictionary ,PageAssociation :_cbb ,SegmentData :_ggc };if _cbb ==0{if _cbd .GlobalSegments ==nil {_cbd .GlobalSegments =&Globals {};
};_cbd .GlobalSegments .AddSegment (_ge );return _ge ,nil ;};_fac ,_dee :=_cbd .Pages [_cbb ];if !_dee {return nil ,_dc .Errorf (_ffbb ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_cbb );};var (_eea int ;
_cca *_eb .Header ;);for _eea ,_cca =range _fac .Segments {if _cca .Type ==_eb .TPageInformation {break ;};};_eea ++;_fac .Segments =append (_fac .Segments ,nil );copy (_fac .Segments [_eea +1:],_fac .Segments [_eea :]);_fac .Segments [_eea ]=_ge ;return _ge ,nil ;
};func (_dfgg *Globals )GetSegmentByIndex (index int )(*_eb .Header ,error ){const _efd ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";if _dfgg ==nil {return nil ,_dc .Error (_efd ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_dfgg .Segments )==0{return nil ,_dc .Error (_efd ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};if index > len (_dfgg .Segments )-1{return nil ,_dc .Error (_efd ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");
};return _dfgg .Segments [index ],nil ;};func (_gcc *Page )createPage (_eab *_eb .PageInformationSegment )error {var _ccae error ;if !_eab .IsStripe ||_eab .PageBMHeight !=-1{_ccae =_gcc .createNormalPage (_eab );}else {_ccae =_gcc .createStripedPage (_eab );
};return _ccae ;};func (_fdcf *Page )GetResolutionY ()(int ,error ){return _fdcf .getResolutionY ()};func (_ecd *Document )AddGenericPage (bm *_c .Bitmap ,duplicateLineRemoval bool )(_ecf error ){const _dfd ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";
if !_ecd .FullHeaders &&_ecd .NumberOfPages !=0{return _dc .Error (_dfd ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};_gb :=&Page {Segments :[]*_eb .Header {},Bitmap :bm ,Document :_ecd ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true ,BlackIsOne :bm .Color ==_c .Chocolate };_gb .PageNumber =int (_ecd .nextPageNumber ());_ecd .Pages [_gb .PageNumber ]=_gb ;
bm .InverseData ();_gb .AddPageInformationSegment ();if _ecf =_gb .AddGenericRegion (bm ,0,0,0,_eb .TImmediateGenericRegion ,duplicateLineRemoval );_ecf !=nil {return _dc .Wrap (_ecf ,_dfd ,"");};if _ecd .FullHeaders {_gb .AddEndOfPageSegment ();};return nil ;
};func (_fge *Document )GetPage (pageNumber int )(_eb .Pager ,error ){const _dac ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";if pageNumber < 0{_de .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_d .Stack ());
return nil ,_dc .Errorf (_dac ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );
};if pageNumber > len (_fge .Pages ){_de .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_d .Stack ());return nil ,_dc .Error (_dac ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};_cg ,_adg :=_fge .Pages [pageNumber ];if !_adg {_de .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_d .Stack ());return nil ,_dc .Errorf (_dac ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _cg ,nil ;};func (_agf *Document )nextSegmentNumber ()uint32 {_bce :=_agf .CurrentSegmentNumber ;_agf .CurrentSegmentNumber ++;return _bce ;};func (_gbae *Page )GetWidth ()(int ,error ){return _gbae .getWidth ()};func (_egg *Document )completeClassifiedPages ()(_fdg error ){const _ga ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";
if _egg .Classer ==nil {return nil ;};_egg ._ae =make ([]int ,_egg .Classer .UndilatedTemplates .Size ());for _dgc :=0;_dgc < _egg .Classer .ClassIDs .Size ();_dgc ++{_bb ,_cd :=_egg .Classer .ClassIDs .Get (_dgc );if _cd !=nil {return _dc .Wrapf (_cd ,_ga ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_dgc );
};_egg ._ae [_bb ]++;};var _ba []int ;for _dfg :=0;_dfg < _egg .Classer .UndilatedTemplates .Size ();_dfg ++{if _egg .NumberOfPages ==1||_egg ._ae [_dfg ]> 1{_ba =append (_ba ,_dfg );};};var (_gga *Page ;_gad bool ;);for _deb ,_bc :=range *_egg .Classer .ComponentPageNumbers {if _gga ,_gad =_egg .Pages [_bc ];
!_gad {return _dc .Errorf (_ga ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_deb );};if _gga .EncodingMethod ==GenericEM {_de .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_deb );
continue ;};_egg ._eg [_bc ]=append (_egg ._eg [_bc ],_deb );_ag ,_dge :=_egg .Classer .ClassIDs .Get (_deb );if _dge !=nil {return _dc .Wrapf (_dge ,_ga ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_deb );
};if _egg ._ae [_ag ]==1&&_egg .NumberOfPages !=1{_ff :=append (_egg ._dd [_bc ],_ag );_egg ._dd [_bc ]=_ff ;};};if _fdg =_egg .Classer .ComputeLLCorners ();_fdg !=nil {return _dc .Wrap (_fdg ,_ga ,"");};if _ ,_fdg =_egg .addSymbolDictionary (0,_egg .Classer .UndilatedTemplates ,_ba ,_egg ._fe ,false );
_fdg !=nil {return _dc .Wrap (_fdg ,_ga ,"");};return nil ;};func _cccg (_eaa *Document ,_bea int )*Page {return &Page {Document :_eaa ,PageNumber :_bea ,Segments :[]*_eb .Header {}};};func (_abc *Document )nextPageNumber ()uint32 {_abc .NumberOfPages ++;
return _abc .NumberOfPages };func (_ddc *Page )getHeight ()(int ,error ){const _dddf ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _ddc .FinalHeight !=0{return _ddc .FinalHeight ,nil ;};_dda :=_ddc .getPageInformationSegment ();if _dda ==nil {return 0,_dc .Error (_dddf ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");
};_edf ,_bcdb :=_dda .GetSegmentData ();if _bcdb !=nil {return 0,_dc .Wrap (_bcdb ,_dddf ,"");};_gdcc ,_dade :=_edf .(*_eb .PageInformationSegment );if !_dade {return 0,_dc .Errorf (_dddf ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_edf );
};if _gdcc .PageBMHeight ==_gg .MaxInt32 {_ ,_bcdb =_ddc .GetBitmap ();if _bcdb !=nil {return 0,_dc .Wrap (_bcdb ,_dddf ,"");};}else {_ddc .FinalHeight =_gdcc .PageBMHeight ;};return _ddc .FinalHeight ,nil ;};func (_cbda *Page )GetResolutionX ()(int ,error ){return _cbda .getResolutionX ()};
func (_aca *Page )GetSegment (number int )(*_eb .Header ,error ){const _geb ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";for _ ,_gag :=range _aca .Segments {if _gag .SegmentNumber ==uint32 (number ){return _gag ,nil ;
};};_bcg :=make ([]uint32 ,len (_aca .Segments ));for _fdee ,_geba :=range _aca .Segments {_bcg [_fdee ]=_geba .SegmentNumber ;};return nil ,_dc .Errorf (_geb ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_aca .PageNumber ,_bcg );
};func (_gaa *Globals )AddSegment (segment *_eb .Header ){_gaa .Segments =append (_gaa .Segments ,segment )};func (_bbbf *Page )getResolutionY ()(int ,error ){const _bcc ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";
if _bbbf .ResolutionY !=0{return _bbbf .ResolutionY ,nil ;};_cdb :=_bbbf .getPageInformationSegment ();if _cdb ==nil {return 0,_dc .Error (_bcc ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_bdeb ,_bfc :=_cdb .GetSegmentData ();
if _bfc !=nil {return 0,_dc .Wrap (_bfc ,_bcc ,"");};_dae ,_dbe :=_bdeb .(*_eb .PageInformationSegment );if !_dbe {return 0,_dc .Errorf (_bcc ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_bdeb );
};_bbbf .ResolutionY =_dae .ResolutionY ;return _bbbf .ResolutionY ,nil ;};type Globals struct{Segments []*_eb .Header ;};func (_ab *Document )completeSymbols ()(_bag error ){const _ccag ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
if _ab .Classer ==nil {return nil ;};if _ab .Classer .UndilatedTemplates ==nil {return _dc .Error (_ccag ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");
};_bf :=len (_ab .Pages )==1;_fde :=make ([]int ,_ab .Classer .UndilatedTemplates .Size ());var _ggf int ;for _dgce :=0;_dgce < _ab .Classer .ClassIDs .Size ();_dgce ++{_ggf ,_bag =_ab .Classer .ClassIDs .Get (_dgce );if _bag !=nil {return _dc .Wrap (_bag ,_ccag ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");
};_fde [_ggf ]++;};var _egbe []int ;for _be :=0;_be < _ab .Classer .UndilatedTemplates .Size ();_be ++{if _fde [_be ]==0{return _dc .Error (_ccag ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");
};if _fde [_be ]> 1||_bf {_egbe =append (_egbe ,_be );};};_ab ._a =len (_egbe );var _gba ,_beb int ;for _ebd :=0;_ebd < _ab .Classer .ComponentPageNumbers .Size ();_ebd ++{_gba ,_bag =_ab .Classer .ComponentPageNumbers .Get (_ebd );if _bag !=nil {return _dc .Wrapf (_bag ,_ccag ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_ebd );
};_beb ,_bag =_ab .Classer .ClassIDs .Get (_ebd );if _bag !=nil {return _dc .Wrapf (_bag ,_ccag ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_gba );
};if _fde [_beb ]==1&&!_bf {_ab ._dd [_gba ]=append (_ab ._dd [_gba ],_beb );};};if _bag =_ab .Classer .ComputeLLCorners ();_bag !=nil {return _dc .Wrap (_bag ,_ccag ,"");};return nil ;};func (_ecg *Document )isFileHeaderPresent ()(bool ,error ){_ecg .InputStream .Mark ();
for _ ,_debg :=range _fd {_dgg ,_fbd :=_ecg .InputStream .ReadByte ();if _fbd !=nil {return false ,_fbd ;};if _debg !=_dgg {_ecg .InputStream .Reset ();return false ,nil ;};};_ecg .InputStream .Reset ();return true ,nil ;};func (_gc *Globals )GetSymbolDictionary ()(*_eb .Header ,error ){const _dad ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";
if _gc ==nil {return nil ,_dc .Error (_dad ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_gc .Segments )==0{return nil ,_dc .Error (_dad ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};for _ ,_fffg :=range _gc .Segments {if _fffg .Type ==_eb .TSymbolDictionary {return _fffg ,nil ;};};return nil ,_dc .Error (_dad ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};func (_cgf *Page )AddGenericRegion (bm *_c .Bitmap ,xloc ,yloc ,template int ,tp _eb .Type ,duplicateLineRemoval bool )error {const _fgf ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";_agga :=&_eb .GenericRegion {};
if _fee :=_agga .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_fee !=nil {return _dc .Wrap (_fee ,_fgf ,"");};_caa :=&_eb .Header {Type :_eb .TImmediateGenericRegion ,PageAssociation :_cgf .PageNumber ,SegmentData :_agga };_cgf .Segments =append (_cgf .Segments ,_caa );
return nil ;};func (_bdb *Page )composePageBitmap ()error {const _eaea ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";if _bdb .PageNumber ==0{return nil ;};_aggc :=_bdb .getPageInformationSegment ();
if _aggc ==nil {return _dc .Error (_eaea ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_cgbd ,_gda :=_aggc .GetSegmentData ();
if _gda !=nil {return _gda ;};_bfb ,_bca :=_cgbd .(*_eb .PageInformationSegment );if !_bca {return _dc .Error (_eaea ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");
};if _gda =_bdb .createPage (_bfb );_gda !=nil {return _dc .Wrap (_gda ,_eaea ,"");};_bdb .clearSegmentData ();return nil ;};func (_cag *Page )getWidth ()(int ,error ){const _bcf ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _cag .FinalWidth !=0{return _cag .FinalWidth ,nil ;
};_ebdd :=_cag .getPageInformationSegment ();if _ebdd ==nil {return 0,_dc .Error (_bcf ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_eaef ,_caag :=_ebdd .GetSegmentData ();if _caag !=nil {return 0,_dc .Wrap (_caag ,_bcf ,"");
};_cbef ,_ggfg :=_eaef .(*_eb .PageInformationSegment );if !_ggfg {return 0,_dc .Errorf (_bcf ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_eaef );
};_cag .FinalWidth =_cbef .PageBMWidth ;return _cag .FinalWidth ,nil ;};func (_gd *Globals )GetSegment (segmentNumber int )(*_eb .Header ,error ){const _efae ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";if _gd ==nil {return nil ,_dc .Error (_efae ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_gd .Segments )==0{return nil ,_dc .Error (_efae ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};var _fef *_eb .Header ;for _ ,_fef =range _gd .Segments {if _fef .SegmentNumber ==uint32 (segmentNumber ){break ;
};};if _fef ==nil {return nil ,_dc .Error (_efae ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _fef ,nil ;};func (_cccb *Page )getPageInformationSegment ()*_eb .Header {for _ ,_bed :=range _cccb .Segments {if _bed .Type ==_eb .TPageInformation {return _bed ;
};};_de .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_cccb );
return nil ;};type Page struct{Segments []*_eb .Header ;PageNumber int ;Bitmap *_c .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;BlackIsOne bool ;
};func (_bec *Page )createNormalPage (_eca *_eb .PageInformationSegment )error {const _ddf ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";_bec .Bitmap =_c .New (_eca .PageBMWidth ,_eca .PageBMHeight );if _eca .DefaultPixelValue !=0{_bec .Bitmap .SetDefaultPixel ();
};for _ ,_dcg :=range _bec .Segments {switch _dcg .Type {case 6,7,22,23,38,39,42,43:_de .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_dcg .SegmentNumber );_bde ,_acd :=_dcg .GetSegmentData ();
if _acd !=nil {return _acd ;};_gggb ,_efgd :=_bde .(_eb .Regioner );if !_efgd {_de .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_bde );
return _dc .Errorf (_ddf ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_bde );
};_bdd ,_acd :=_gggb .GetRegionBitmap ();if _acd !=nil {return _dc .Wrap (_acd ,_ddf ,"");};if _bec .fitsPage (_eca ,_bdd ){_bec .Bitmap =_bdd ;}else {_ddda :=_gggb .GetRegionInfo ();_agec :=_bec .getCombinationOperator (_eca ,_ddda .CombinaionOperator );
_acd =_c .Blit (_bdd ,_bec .Bitmap ,int (_ddda .XLocation ),int (_ddda .YLocation ),_agec );if _acd !=nil {return _dc .Wrap (_acd ,_ddf ,"");};};};};return nil ;};type EncodingMethod int ;func (_ebf *Document )Encode ()(_afc []byte ,_fc error ){const _fgc ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
var _fca ,_fdc int ;if _ebf .FullHeaders {if _fca ,_fc =_ebf .encodeFileHeader (_ebf ._b );_fc !=nil {return nil ,_dc .Wrap (_fc ,_fgc ,"");};};var (_agb bool ;_bagb *_eb .Header ;_dba *Page ;);if _fc =_ebf .completeClassifiedPages ();_fc !=nil {return nil ,_dc .Wrap (_fc ,_fgc ,"");
};if _fc =_ebf .produceClassifiedPages ();_fc !=nil {return nil ,_dc .Wrap (_fc ,_fgc ,"");};if _ebf .GlobalSegments !=nil {for _ ,_bagb =range _ebf .GlobalSegments .Segments {if _fc =_ebf .encodeSegment (_bagb ,&_fca );_fc !=nil {return nil ,_dc .Wrap (_fc ,_fgc ,"");
};};};for _egcb :=1;_egcb <=int (_ebf .NumberOfPages );_egcb ++{if _dba ,_agb =_ebf .Pages [_egcb ];!_agb {return nil ,_dc .Errorf (_fgc ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_egcb );};for _ ,_bagb =range _dba .Segments {if _fc =_ebf .encodeSegment (_bagb ,&_fca );
_fc !=nil {return nil ,_dc .Wrap (_fc ,_fgc ,"");};};};if _ebf .FullHeaders {if _fdc ,_fc =_ebf .encodeEOFHeader (_ebf ._b );_fc !=nil {return nil ,_dc .Wrap (_fc ,_fgc ,"");};_fca +=_fdc ;};_afc =_ebf ._b .Data ();if len (_afc )!=_fca {_de .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_fca ,len (_afc ));
};return _afc ,nil ;};func (_aa *Document )encodeSegment (_def *_eb .Header ,_efc *int )error {const _ggd ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";_def .SegmentNumber =_aa .nextSegmentNumber ();_abb ,_ed :=_def .Encode (_aa ._b );
if _ed !=nil {return _dc .Wrapf (_ed ,_ggd ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_def .SegmentNumber );};*_efc +=_abb ;return nil ;};func (_egb *Document )AddClassifiedPage (bm *_c .Bitmap ,method _ec .Method )(_dg error ){const _cc ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";
if !_egb .FullHeaders &&_egb .NumberOfPages !=0{return _dc .Error (_cc ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};if _egb .Classer ==nil {if _egb .Classer ,_dg =_ec .Init (_ec .DefaultSettings ());_dg !=nil {return _dc .Wrap (_dg ,_cc ,"");};};_dfdb :=int (_egb .nextPageNumber ());_bg :=&Page {Segments :[]*_eb .Header {},Bitmap :bm ,Document :_egb ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_dfdb };
_egb .Pages [_dfdb ]=_bg ;switch method {case _ec .RankHaus :_bg .EncodingMethod =RankHausEM ;case _ec .Correlation :_bg .EncodingMethod =CorrelationEM ;};_bg .AddPageInformationSegment ();if _dg =_egb .Classer .AddPage (bm ,_dfdb ,method );_dg !=nil {return _dc .Wrap (_dg ,_cc ,"");
};if _egb .FullHeaders {_bg .AddEndOfPageSegment ();};return nil ;};func (_egbf *Page )lastSegmentNumber ()(_bfab uint32 ,_fbf error ){const _cac ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";if len (_egbf .Segments )==0{return _bfab ,_dc .Errorf (_cac ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_egbf .PageNumber );
};return _egbf .Segments [len (_egbf .Segments )-1].SegmentNumber ,nil ;};func _bga (_cdc _da .StreamReader ,_cbg *Globals )(*Document ,error ){_ccc :=&Document {Pages :make (map[int ]*Page ),InputStream :_cdc ,OrganizationType :_eb .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_cbg ,_db :9};
if _ccc .GlobalSegments ==nil {_ccc .GlobalSegments =&Globals {};};if _age :=_ccc .mapData ();_age !=nil {return nil ,_age ;};return _ccc ,nil ;};func (_acg *Page )clearSegmentData (){for _edea :=range _acg .Segments {_acg .Segments [_edea ].CleanSegmentData ();
};};func (_bffab *Page )GetHeight ()(int ,error ){return _bffab .getHeight ()};func (_ea *Document )GetNumberOfPages ()(uint32 ,error ){if _ea .NumberOfPagesUnknown ||_ea .NumberOfPages ==0{if len (_ea .Pages )==0{if _bfa :=_ea .mapData ();_bfa !=nil {return 0,_dc .Wrap (_bfa ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");
};};return uint32 (len (_ea .Pages )),nil ;};return _ea .NumberOfPages ,nil ;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);func (_cfb *Page )countRegions ()int {var _bfbg int ;for _ ,_egf :=range _cfb .Segments {switch _egf .Type {case 6,7,22,23,38,39,42,43:_bfbg ++;
};};return _bfbg ;};func (_cce *Page )AddEndOfPageSegment (){_debc :=&_eb .Header {Type :_eb .TEndOfPage ,PageAssociation :_cce .PageNumber };_cce .Segments =append (_cce .Segments ,_debc );};func (_bbg *Page )getCombinationOperator (_ce *_eb .PageInformationSegment ,_ffdc _c .CombinationOperator )_c .CombinationOperator {if _ce .CombinationOperatorOverrideAllowed (){return _ffdc ;
};return _ce .CombinationOperator ();};func (_eeb *Page )String ()string {return _e .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_eeb .PageNumber );};func (_gec *Document )reachedEOF (_fec int64 )(bool ,error ){const _gbe ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";
_ ,_bbf :=_gec .InputStream .Seek (_fec ,_ee .SeekStart );if _bbf !=nil {_de .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bbf );
return false ,_dc .Wrap (_bbf ,_gbe ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_bbf =_gec .InputStream .ReadBits (32);if _bbf ==_ee .EOF {return true ,nil ;
}else if _bbf !=nil {return false ,_dc .Wrap (_bbf ,_gbe ,"");};return false ,nil ;};func (_dag *Page )createStripedPage (_beg *_eb .PageInformationSegment )error {const _eaf ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";
_aff ,_edd :=_dag .collectPageStripes ();if _edd !=nil {return _dc .Wrap (_edd ,_eaf ,"");};var _eaee int ;for _ ,_eeff :=range _aff {if _agbd ,_bbb :=_eeff .(*_eb .EndOfStripe );_bbb {_eaee =_agbd .LineNumber ()+1;}else {_bcgd :=_eeff .(_eb .Regioner );
_cad :=_bcgd .GetRegionInfo ();_dcb :=_dag .getCombinationOperator (_beg ,_cad .CombinaionOperator );_fffge ,_gdc :=_bcgd .GetRegionBitmap ();if _gdc !=nil {return _dc .Wrap (_gdc ,_eaf ,"");};_gdc =_c .Blit (_fffge ,_dag .Bitmap ,int (_cad .XLocation ),_eaee ,_dcb );
if _gdc !=nil {return _dc .Wrap (_gdc ,_eaf ,"");};};};return nil ;};func (_fcd *Document )parseFileHeader ()error {const _bcd ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_ecb :=_fcd .InputStream .Seek (8,_ee .SeekStart );
if _ecb !=nil {return _dc .Wrap (_ecb ,_bcd ,"\u0069\u0064");};_ ,_ecb =_fcd .InputStream .ReadBits (5);if _ecb !=nil {return _dc .Wrap (_ecb ,_bcd ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_agba ,_ecb :=_fcd .InputStream .ReadBit ();
if _ecb !=nil {return _dc .Wrap (_ecb ,_bcd ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");};if _agba ==1{_fcd .GBUseExtTemplate =true ;};_agba ,_ecb =_fcd .InputStream .ReadBit ();if _ecb !=nil {return _dc .Wrap (_ecb ,_bcd ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");
};if _agba !=1{_fcd .NumberOfPagesUnknown =false ;};_agba ,_ecb =_fcd .InputStream .ReadBit ();if _ecb !=nil {return _dc .Wrap (_ecb ,_bcd ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_fcd .OrganizationType =_eb .OrganizationType (_agba );
if !_fcd .NumberOfPagesUnknown {_fcd .NumberOfPages ,_ecb =_fcd .InputStream .ReadUint32 ();if _ecb !=nil {return _dc .Wrap (_ecb ,_bcd ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_fcd ._db =13;};return nil ;};
func (_aee *Page )collectPageStripes ()(_afb []_eb .Segmenter ,_ffa error ){const _ade ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";var _cdd _eb .Segmenter ;for _ ,_acc :=range _aee .Segments {switch _acc .Type {case 6,7,22,23,38,39,42,43:_cdd ,_ffa =_acc .GetSegmentData ();
if _ffa !=nil {return nil ,_dc .Wrap (_ffa ,_ade ,"");};_afb =append (_afb ,_cdd );case 50:_cdd ,_ffa =_acc .GetSegmentData ();if _ffa !=nil {return nil ,_ffa ;};_ede ,_bad :=_cdd .(*_eb .EndOfStripe );if !_bad {return nil ,_dc .Errorf (_ade ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_cdd );
};_afb =append (_afb ,_ede );_aee .FinalHeight =_ede .LineNumber ();};};return _afb ,nil ;};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream _da .StreamReader ;GlobalSegments *Globals ;
OrganizationType _eb .OrganizationType ;Classer *_ec .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_c .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_db uint8 ;_b *_da .BufferedWriter ;EncodeGlobals bool ;
_a int ;_dd map[int ][]int ;_eg map[int ][]int ;_ae []int ;_fe map[int ]int ;};func (_beca *Page )getResolutionX ()(int ,error ){const _bae ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";if _beca .ResolutionX !=0{return _beca .ResolutionX ,nil ;
};_ebbb :=_beca .getPageInformationSegment ();if _ebbb ==nil {return 0,_dc .Error (_bae ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_fegg ,_aac :=_ebbb .GetSegmentData ();if _aac !=nil {return 0,_dc .Wrap (_aac ,_bae ,"");
};_cbge ,_baee :=_fegg .(*_eb .PageInformationSegment );if !_baee {return 0,_dc .Errorf (_bae ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_fegg );
};_beca .ResolutionX =_cbge .ResolutionX ;return _beca .ResolutionX ,nil ;};func (_agfb *Page )AddPageInformationSegment (){_bfd :=&_eb .PageInformationSegment {PageBMWidth :_agfb .FinalWidth ,PageBMHeight :_agfb .FinalHeight ,ResolutionX :_agfb .ResolutionX ,ResolutionY :_agfb .ResolutionY ,IsLossless :_agfb .IsLossless };
if _agfb .BlackIsOne {_bfd .DefaultPixelValue =uint8 (0x1);};_fdb :=&_eb .Header {PageAssociation :_agfb .PageNumber ,SegmentDataLength :uint64 (_bfd .Size ()),SegmentData :_bfd ,Type :_eb .TPageInformation };_agfb .Segments =append (_agfb .Segments ,_fdb );
};func (_ddg *Document )determineRandomDataOffsets (_bge []*_eb .Header ,_ddd uint64 ){if _ddg .OrganizationType !=_eb .ORandom {return ;};for _ ,_cf :=range _bge {_cf .SegmentDataStartOffset =_ddd ;_ddd +=_cf .SegmentDataLength ;};};func (_bffa *Page )Encode (w _da .BinaryWriter )(_faef int ,_feg error ){const _gfe ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
var _fdd int ;for _ ,_dff :=range _bffa .Segments {if _fdd ,_feg =_dff .Encode (w );_feg !=nil {return _faef ,_dc .Wrap (_feg ,_gfe ,"");};_faef +=_fdd ;};return _faef ,nil ;};func (_fcf *Page )nextSegmentNumber ()uint32 {return _fcf .Document .nextSegmentNumber ()};
func (_fcaf *Page )GetBitmap ()(_agd *_c .Bitmap ,_bdf error ){_de .Log .Trace (_e .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_fcaf .PageNumber ));
defer func (){if _bdf !=nil {_de .Log .Trace (_e .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_fcaf .PageNumber ,_bdf ));
}else {_de .Log .Trace (_e .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_fcaf .PageNumber ));};}();if _fcaf .Bitmap !=nil {return _fcaf .Bitmap ,nil ;
};_bdf =_fcaf .composePageBitmap ();if _bdf !=nil {return nil ,_bdf ;};return _fcaf .Bitmap ,nil ;};var _fd =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_b :_da .BufferedMSB (),Pages :map[int ]*Page {},_dd :map[int ][]int {},_fe :map[int ]int {},_eg :map[int ][]int {}};
};func (_fae *Document )encodeFileHeader (_eef _da .BinaryWriter )(_daf int ,_bff error ){const _ggfc ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_daf ,_bff =_eef .Write (_fd );if _bff !=nil {return _daf ,_dc .Wrap (_bff ,_ggfc ,"\u0069\u0064");
};if _bff =_eef .WriteByte (0x01);_bff !=nil {return _daf ,_dc .Wrap (_bff ,_ggfc ,"\u0066\u006c\u0061g\u0073");};_daf ++;_ggg :=make ([]byte ,4);_f .BigEndian .PutUint32 (_ggg ,_fae .NumberOfPages );_cabc ,_bff :=_eef .Write (_ggg );if _bff !=nil {return _cabc ,_dc .Wrap (_bff ,_ggfc ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");
};_daf +=_cabc ;return _daf ,nil ;};func (_eae *Document )mapData ()error {const _fgea ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_dddd []*_eb .Header ;_cff int64 ;_fce _eb .Type ;);_bgc ,_eac :=_eae .isFileHeaderPresent ();if _eac !=nil {return _dc .Wrap (_eac ,_fgea ,"");
};if _bgc {if _eac =_eae .parseFileHeader ();_eac !=nil {return _dc .Wrap (_eac ,_fgea ,"");};_cff +=int64 (_eae ._db );_eae .FullHeaders =true ;};var (_dgceb *Page ;_cde bool ;);for _fce !=51&&!_cde {_bagf ,_dfb :=_eb .NewHeader (_eae ,_eae .InputStream ,_cff ,_eae .OrganizationType );
if _dfb !=nil {return _dc .Wrap (_dfb ,_fgea ,"");};_de .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_bagf .SegmentNumber ,_bagf .Type );
_fce =_bagf .Type ;if _fce !=_eb .TEndOfFile {if _bagf .PageAssociation !=0{_dgceb =_eae .Pages [_bagf .PageAssociation ];if _dgceb ==nil {_dgceb =_cccg (_eae ,_bagf .PageAssociation );_eae .Pages [_bagf .PageAssociation ]=_dgceb ;if _eae .NumberOfPagesUnknown {_eae .NumberOfPages ++;
};};_dgceb .Segments =append (_dgceb .Segments ,_bagf );}else {_eae .GlobalSegments .AddSegment (_bagf );};};_dddd =append (_dddd ,_bagf );_cff =_eae .InputStream .StreamPosition ();if _eae .OrganizationType ==_eb .OSequential {_cff +=int64 (_bagf .SegmentDataLength );
};_cde ,_dfb =_eae .reachedEOF (_cff );if _dfb !=nil {_de .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_dfb );
return _dc .Wrap (_dfb ,_fgea ,"");};};_eae .determineRandomDataOffsets (_dddd ,uint64 (_cff ));return nil ;};func DecodeDocument (input _da .StreamReader ,globals *Globals )(*Document ,error ){return _bga (input ,globals );};func (_gecb *Page )addTextRegionSegment (_ac []*_eb .Header ,_bab ,_eda map[int ]int ,_debgc []int ,_efg *_c .Points ,_abdf *_c .Bitmaps ,_afcc *_df .IntSlice ,_ded *_c .Boxes ,_dddc ,_cgb int ){_ebfa :=&_eb .TextRegion {NumberOfSymbols :uint32 (_cgb )};
_ebfa .InitEncode (_bab ,_eda ,_debgc ,_efg ,_abdf ,_afcc ,_ded ,_gecb .FinalWidth ,_gecb .FinalHeight ,_dddc );_dcd :=&_eb .Header {RTSegments :_ac ,SegmentData :_ebfa ,PageAssociation :_gecb .PageNumber ,Type :_eb .TImmediateTextRegion };_ffff :=_eb .TPageInformation ;
if _eda !=nil {_ffff =_eb .TSymbolDictionary ;};var _gbd int ;for ;_gbd < len (_gecb .Segments );_gbd ++{if _gecb .Segments [_gbd ].Type ==_ffff {_gbd ++;break ;};};_gecb .Segments =append (_gecb .Segments ,nil );copy (_gecb .Segments [_gbd +1:],_gecb .Segments [_gbd :]);
_gecb .Segments [_gbd ]=_dcd ;};func (_bged *Page )fitsPage (_dde *_eb .PageInformationSegment ,_gea *_c .Bitmap )bool {return _bged .countRegions ()==1&&_dde .DefaultPixelValue ==0&&_dde .PageBMWidth ==_gea .Width &&_dde .PageBMHeight ==_gea .Height ;
};func (_agg *Document )produceClassifiedPages ()(_fff error ){const _af ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";if _agg .Classer ==nil {return nil ;};var (_ccd *Page ;_gf bool ;
_egbb *_eb .Header ;);for _ca :=1;_ca <=int (_agg .NumberOfPages );_ca ++{if _ccd ,_gf =_agg .Pages [_ca ];!_gf {return _dc .Errorf (_af ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ca );};if _ccd .EncodingMethod ==GenericEM {continue ;
};if _egbb ==nil {if _egbb ,_fff =_agg .GlobalSegments .GetSymbolDictionary ();_fff !=nil {return _dc .Wrap (_fff ,_af ,"");};};if _fff =_agg .produceClassifiedPage (_ccd ,_egbb );_fff !=nil {return _dc .Wrapf (_fff ,_af ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_ca );
};};return nil ;};func (_aeb *Document )encodeEOFHeader (_ffd _da .BinaryWriter )(_fdcc int ,_ccf error ){_cbe :=&_eb .Header {SegmentNumber :_aeb .nextSegmentNumber (),Type :_eb .TEndOfFile };if _fdcc ,_ccf =_cbe .Encode (_ffd );_ccf !=nil {return 0,_dc .Wrap (_ccf ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");
};return _fdcc ,nil ;};func (_ccac *Document )GetGlobalSegment (i int )(*_eb .Header ,error ){_aba ,_afa :=_ccac .GlobalSegments .GetSegment (i );if _afa !=nil {return nil ,_dc .Wrap (_afa ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");
};return _aba ,nil ;};