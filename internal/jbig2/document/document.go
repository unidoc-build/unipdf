//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_f "encoding/binary";_c "fmt";_cf "github.com/unidoc/unipdf/v3/common";_dc "github.com/unidoc/unipdf/v3/internal/bitwise";_b "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_fg "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_feg "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_ba "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_a "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_cd "io";_fe "math";_e "runtime/debug";);func (_dbaa *Page )getResolutionX ()(int ,error ){const _afdb ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";if _dbaa .ResolutionX !=0{return _dbaa .ResolutionX ,nil ;};_cca :=_dbaa .getPageInformationSegment ();if _cca ==nil {return 0,_a .Error (_afdb ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_dcbb ,_egae :=_cca .GetSegmentData ();if _egae !=nil {return 0,_a .Wrap (_egae ,_afdb ,"");};_dge ,_cbee :=_dcbb .(*_feg .PageInformationSegment );if !_cbee {return 0,_a .Errorf (_afdb ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_dcbb );};_dbaa .ResolutionX =_dge .ResolutionX ;return _dbaa .ResolutionX ,nil ;};func (_egc *Document )nextSegmentNumber ()uint32 {_dea :=_egc .CurrentSegmentNumber ;_egc .CurrentSegmentNumber ++;return _dea ;};func (_cfe *Document )reachedEOF (_dgdf int64 )(bool ,error ){const _cff ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_adf :=_cfe .InputStream .Seek (_dgdf ,_cd .SeekStart );if _adf !=nil {_cf .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_adf );return false ,_a .Wrap (_adf ,_cff ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_adf =_cfe .InputStream .ReadBits (32);if _adf ==_cd .EOF {return true ,nil ;}else if _adf !=nil {return false ,_a .Wrap (_adf ,_cff ,"");};return false ,nil ;};func (_fga *Document )GetPage (pageNumber int )(_feg .Pager ,error ){const _abc ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";if pageNumber < 0{_cf .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_e .Stack ());return nil ,_a .Errorf (_abc ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );};if pageNumber > len (_fga .Pages ){_cf .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_e .Stack ());return nil ,_a .Error (_abc ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};_bfd ,_fcc :=_fga .Pages [pageNumber ];if !_fcc {_cf .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_e .Stack ());return nil ,_a .Errorf (_abc ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _bfd ,nil ;};func (_gfa *Document )determineRandomDataOffsets (_dfd []*_feg .Header ,_cea uint64 ){if _gfa .OrganizationType !=_feg .ORandom {return ;};for _ ,_fd :=range _dfd {_fd .SegmentDataStartOffset =_cea ;_cea +=_fd .SegmentDataLength ;};};func (_abgba *Globals )GetSymbolDictionary ()(*_feg .Header ,error ){const _abgd ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";if _abgba ==nil {return nil ,_a .Error (_abgd ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_abgba .Segments )==0{return nil ,_a .Error (_abgd ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};for _ ,_fdfed :=range _abgba .Segments {if _fdfed .Type ==_feg .TSymbolDictionary {return _fdfed ,nil ;};};return nil ,_a .Error (_abgd ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};func (_cbd *Page )nextSegmentNumber ()uint32 {return _cbd .Document .nextSegmentNumber ()};func (_cdf *Document )addSymbolDictionary (_dbe int ,_eae *_fg .Bitmaps ,_ee []int ,_fbf map[int ]int ,_bdb bool )(*_feg .Header ,error ){const _fcg ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";_bdg :=&_feg .SymbolDictionary {};if _fgb :=_bdg .InitEncode (_eae ,_ee ,_fbf ,_bdb );_fgb !=nil {return nil ,_fgb ;};_gf :=&_feg .Header {Type :_feg .TSymbolDictionary ,PageAssociation :_dbe ,SegmentData :_bdg };if _dbe ==0{if _cdf .GlobalSegments ==nil {_cdf .GlobalSegments =&Globals {};};_cdf .GlobalSegments .AddSegment (_gf );return _gf ,nil ;};_da ,_bbdf :=_cdf .Pages [_dbe ];if !_bbdf {return nil ,_a .Errorf (_fcg ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_dbe );};var (_cg int ;_bfg *_feg .Header ;);for _cg ,_bfg =range _da .Segments {if _bfg .Type ==_feg .TPageInformation {break ;};};_cg ++;_da .Segments =append (_da .Segments ,nil );copy (_da .Segments [_cg +1:],_da .Segments [_cg :]);_da .Segments [_cg ]=_gf ;return _gf ,nil ;};func (_fcge *Page )GetResolutionY ()(int ,error ){return _fcge .getResolutionY ()};func (_gba *Page )composePageBitmap ()error {const _cbc ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";if _gba .PageNumber ==0{return nil ;};_bea :=_gba .getPageInformationSegment ();if _bea ==nil {return _a .Error (_cbc ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_gec ,_ddc :=_bea .GetSegmentData ();if _ddc !=nil {return _ddc ;};_ddgb ,_aabe :=_gec .(*_feg .PageInformationSegment );if !_aabe {return _a .Error (_cbc ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};if _ddc =_gba .createPage (_ddgb );_ddc !=nil {return _a .Wrap (_ddc ,_cbc ,"");};_gba .clearSegmentData ();return nil ;};func _efe (_dcca int )int {_dcb :=0;_bf :=(_dcca &(_dcca -1))==0;_dcca >>=1;for ;_dcca !=0;_dcca >>=1{_dcb ++;};if _bf {return _dcb ;};return _dcb +1;};func (_g *Document )AddClassifiedPage (bm *_fg .Bitmap ,method _ba .Method )(_ec error ){const _ea ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";if !_g .FullHeaders &&_g .NumberOfPages !=0{return _a .Error (_ea ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");};if _g .Classer ==nil {if _g .Classer ,_ec =_ba .Init (_ba .DefaultSettings ());_ec !=nil {return _a .Wrap (_ec ,_ea ,"");};};_gg :=int (_g .nextPageNumber ());_bc :=&Page {Segments :[]*_feg .Header {},Bitmap :bm ,Document :_g ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_gg };_g .Pages [_gg ]=_bc ;switch method {case _ba .RankHaus :_bc .EncodingMethod =RankHausEM ;case _ba .Correlation :_bc .EncodingMethod =CorrelationEM ;};_bc .AddPageInformationSegment ();if _ec =_g .Classer .AddPage (bm ,_gg ,method );_ec !=nil {return _a .Wrap (_ec ,_ea ,"");};if _g .FullHeaders {_bc .AddEndOfPageSegment ();};return nil ;};func (_gbbc *Page )getHeight ()(int ,error ){const _aadd ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _gbbc .FinalHeight !=0{return _gbbc .FinalHeight ,nil ;};_cbad :=_gbbc .getPageInformationSegment ();if _cbad ==nil {return 0,_a .Error (_aadd ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_dbb ,_adfc :=_cbad .GetSegmentData ();if _adfc !=nil {return 0,_a .Wrap (_adfc ,_aadd ,"");};_fbc ,_cbe :=_dbb .(*_feg .PageInformationSegment );if !_cbe {return 0,_a .Errorf (_aadd ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_dbb );};if _fbc .PageBMHeight ==_fe .MaxInt32 {_ ,_adfc =_gbbc .GetBitmap ();if _adfc !=nil {return 0,_a .Wrap (_adfc ,_aadd ,"");};}else {_gbbc .FinalHeight =_fbc .PageBMHeight ;};return _gbbc .FinalHeight ,nil ;};func (_gecc *Page )createStripedPage (_fdb *_feg .PageInformationSegment )error {const _cad ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";_ggb ,_beg :=_gecc .collectPageStripes ();if _beg !=nil {return _a .Wrap (_beg ,_cad ,"");};var _gdfb int ;for _ ,_fgae :=range _ggb {if _eeg ,_dgca :=_fgae .(*_feg .EndOfStripe );_dgca {_gdfb =_eeg .LineNumber ()+1;}else {_dee :=_fgae .(_feg .Regioner );_abaa :=_dee .GetRegionInfo ();_bfe :=_gecc .getCombinationOperator (_fdb ,_abaa .CombinaionOperator );_bfgc ,_ecb :=_dee .GetRegionBitmap ();if _ecb !=nil {return _a .Wrap (_ecb ,_cad ,"");};_ecb =_fg .Blit (_bfgc ,_gecc .Bitmap ,int (_abaa .XLocation ),_gdfb ,_bfe );if _ecb !=nil {return _a .Wrap (_ecb ,_cad ,"");};};};return nil ;};func (_aeba *Page )String ()string {return _c .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_aeba .PageNumber );};func (_ffbg *Page )getCombinationOperator (_gfc *_feg .PageInformationSegment ,_cbba _fg .CombinationOperator )_fg .CombinationOperator {if _gfc .CombinationOperatorOverrideAllowed (){return _cbba ;};return _gfc .CombinationOperator ();};func (_eeed *Globals )AddSegment (segment *_feg .Header ){_eeed .Segments =append (_eeed .Segments ,segment );};func (_cgf *Page )Encode (w _dc .BinaryWriter )(_baa int ,_ebg error ){const _aec ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _fffe int ;for _ ,_bddd :=range _cgf .Segments {if _fffe ,_ebg =_bddd .Encode (w );_ebg !=nil {return _baa ,_a .Wrap (_ebg ,_aec ,"");};_baa +=_fffe ;};return _baa ,nil ;};func (_bga *Document )encodeFileHeader (_edb _dc .BinaryWriter )(_cgb int ,_dae error ){const _af ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_cgb ,_dae =_edb .Write (_be );if _dae !=nil {return _cgb ,_a .Wrap (_dae ,_af ,"\u0069\u0064");};if _dae =_edb .WriteByte (0x01);_dae !=nil {return _cgb ,_a .Wrap (_dae ,_af ,"\u0066\u006c\u0061g\u0073");};_cgb ++;_bec :=make ([]byte ,4);_f .BigEndian .PutUint32 (_bec ,_bga .NumberOfPages );_ggee ,_dae :=_edb .Write (_bec );if _dae !=nil {return _ggee ,_a .Wrap (_dae ,_af ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_cgb +=_ggee ;return _cgb ,nil ;};func (_fgaa *Page )getPageInformationSegment ()*_feg .Header {for _ ,_bcb :=range _fgaa .Segments {if _bcb .Type ==_feg .TPageInformation {return _bcb ;};};_cf .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_fgaa );return nil ;};func (_dfdf *Page )AddGenericRegion (bm *_fg .Bitmap ,xloc ,yloc ,template int ,tp _feg .Type ,duplicateLineRemoval bool )error {const _ffg ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";_gab :=&_feg .GenericRegion {};if _gddb :=_gab .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_gddb !=nil {return _a .Wrap (_gddb ,_ffg ,"");};_cef :=&_feg .Header {Type :_feg .TImmediateGenericRegion ,PageAssociation :_dfdf .PageNumber ,SegmentData :_gab };_dfdf .Segments =append (_dfdf .Segments ,_cef );return nil ;};func (_ced *Document )GetGlobalSegment (i int )(*_feg .Header ,error ){_caa ,_dad :=_ced .GlobalSegments .GetSegment (i );if _dad !=nil {return nil ,_a .Wrap (_dad ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");};return _caa ,nil ;};func _fff (_bda _dc .StreamReader ,_abgb *Globals )(*Document ,error ){_eed :=&Document {Pages :make (map[int ]*Page ),InputStream :_bda ,OrganizationType :_feg .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_abgb ,_bag :9};if _eed .GlobalSegments ==nil {_eed .GlobalSegments =&Globals {};};if _baf :=_eed .mapData ();_baf !=nil {return nil ,_baf ;};return _eed ,nil ;};func (_eaa *Page )GetHeight ()(int ,error ){return _eaa .getHeight ()};func DecodeDocument (input _dc .StreamReader ,globals *Globals )(*Document ,error ){return _fff (input ,globals );};type Page struct{Segments []*_feg .Header ;PageNumber int ;Bitmap *_fg .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;};func _cbgd (_bdc *Document ,_fbe int )*Page {return &Page {Document :_bdc ,PageNumber :_fbe ,Segments :[]*_feg .Header {}};};func (_efb *Page )lastSegmentNumber ()(_agee uint32 ,_gee error ){const _gea ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";if len (_efb .Segments )==0{return _agee ,_a .Errorf (_gea ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_efb .PageNumber );};return _efb .Segments [len (_efb .Segments )-1].SegmentNumber ,nil ;};func (_abb *Page )GetSegment (number int )(*_feg .Header ,error ){const _fecf ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";for _ ,_cdfg :=range _abb .Segments {if _cdfg .SegmentNumber ==uint32 (number ){return _cdfg ,nil ;};};_ead :=make ([]uint32 ,len (_abb .Segments ));for _deaf ,_eef :=range _abb .Segments {_ead [_deaf ]=_eef .SegmentNumber ;};return nil ,_a .Errorf (_fecf ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_abb .PageNumber ,_ead );};func (_edf *Page )GetResolutionX ()(int ,error ){return _edf .getResolutionX ()};func (_cgfb *Page )GetWidth ()(int ,error ){return _cgfb .getWidth ()};func (_ab *Document )completeClassifiedPages ()(_fbd error ){const _dcc ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";if _ab .Classer ==nil {return nil ;};_ab ._cdb =make ([]int ,_ab .Classer .UndilatedTemplates .Size ());for _faa :=0;_faa < _ab .Classer .ClassIDs .Size ();_faa ++{_aa ,_bd :=_ab .Classer .ClassIDs .Get (_faa );if _bd !=nil {return _a .Wrapf (_bd ,_dcc ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_faa );};_ab ._cdb [_aa ]++;};var _ed []int ;for _cdc :=0;_cdc < _ab .Classer .UndilatedTemplates .Size ();_cdc ++{if _ab .NumberOfPages ==1||_ab ._cdb [_cdc ]> 1{_ed =append (_ed ,_cdc );};};var (_fc *Page ;_cb bool ;);for _eg ,_gd :=range *_ab .Classer .ComponentPageNumbers {if _fc ,_cb =_ab .Pages [_gd ];!_cb {return _a .Errorf (_dcc ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_eg );};if _fc .EncodingMethod ==GenericEM {_cf .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_eg );continue ;};_ab ._df [_gd ]=append (_ab ._df [_gd ],_eg );_gge ,_gdf :=_ab .Classer .ClassIDs .Get (_eg );if _gdf !=nil {return _a .Wrapf (_gdf ,_dcc ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_eg );};if _ab ._cdb [_gge ]==1&&_ab .NumberOfPages !=1{_bb :=append (_ab ._ff [_gd ],_gge );_ab ._ff [_gd ]=_bb ;};};if _fbd =_ab .Classer .ComputeLLCorners ();_fbd !=nil {return _a .Wrap (_fbd ,_dcc ,"");};if _ ,_fbd =_ab .addSymbolDictionary (0,_ab .Classer .UndilatedTemplates ,_ed ,_ab ._ag ,false );_fbd !=nil {return _a .Wrap (_fbd ,_dcc ,"");};return nil ;};func (_ddf *Page )AddPageInformationSegment (){_aga :=&_feg .PageInformationSegment {PageBMWidth :_ddf .FinalWidth ,PageBMHeight :_ddf .FinalHeight ,ResolutionX :_ddf .ResolutionX ,ResolutionY :_ddf .ResolutionY ,IsLossless :_ddf .IsLossless };_fde :=&_feg .Header {PageAssociation :_ddf .PageNumber ,SegmentDataLength :uint64 (_aga .Size ()),SegmentData :_aga ,Type :_feg .TPageInformation };_ddf .Segments =append (_ddf .Segments ,_fde );};func (_eca *Globals )GetSegmentByIndex (index int )(*_feg .Header ,error ){const _ded ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";if _eca ==nil {return nil ,_a .Error (_ded ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_eca .Segments )==0{return nil ,_a .Error (_ded ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};if index > len (_eca .Segments )-1{return nil ,_a .Error (_ded ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");};return _eca .Segments [index ],nil ;};func (_ede *Page )AddEndOfPageSegment (){_ddg :=&_feg .Header {Type :_feg .TEndOfPage ,PageAssociation :_ede .PageNumber };_ede .Segments =append (_ede .Segments ,_ddg );};func (_fgg *Document )produceClassifiedPages ()(_ge error ){const _bdd ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";if _fgg .Classer ==nil {return nil ;};var (_dg *Page ;_ae bool ;_cfg *_feg .Header ;);for _ad :=1;_ad <=int (_fgg .NumberOfPages );_ad ++{if _dg ,_ae =_fgg .Pages [_ad ];!_ae {return _a .Errorf (_bdd ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ad );};if _dg .EncodingMethod ==GenericEM {continue ;};if _cfg ==nil {if _cfg ,_ge =_fgg .GlobalSegments .GetSymbolDictionary ();_ge !=nil {return _a .Wrap (_ge ,_bdd ,"");};};if _ge =_fgg .produceClassifiedPage (_dg ,_cfg );_ge !=nil {return _a .Wrapf (_ge ,_bdd ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_ad );};};return nil ;};func (_faf *Document )GetNumberOfPages ()(uint32 ,error ){if _faf .NumberOfPagesUnknown ||_faf .NumberOfPages ==0{if len (_faf .Pages )==0{if _gaf :=_faf .mapData ();_gaf !=nil {return 0,_a .Wrap (_gaf ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");};};return uint32 (len (_faf .Pages )),nil ;};return _faf .NumberOfPages ,nil ;};func (_feac *Document )mapData ()error {const _de ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_edbe []*_feg .Header ;_afe int64 ;_eba _feg .Type ;);_fdf ,_eea :=_feac .isFileHeaderPresent ();if _eea !=nil {return _a .Wrap (_eea ,_de ,"");};if _fdf {if _eea =_feac .parseFileHeader ();_eea !=nil {return _a .Wrap (_eea ,_de ,"");};_afe +=int64 (_feac ._bag );_feac .FullHeaders =true ;};var (_dgd *Page ;_aad bool ;);for _eba !=51&&!_aad {_gaa ,_cdca :=_feg .NewHeader (_feac ,_feac .InputStream ,_afe ,_feac .OrganizationType );if _cdca !=nil {return _a .Wrap (_cdca ,_de ,"");};_cf .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_gaa .SegmentNumber ,_gaa .Type );_eba =_gaa .Type ;if _eba !=_feg .TEndOfFile {if _gaa .PageAssociation !=0{_dgd =_feac .Pages [_gaa .PageAssociation ];if _dgd ==nil {_dgd =_cbgd (_feac ,_gaa .PageAssociation );_feac .Pages [_gaa .PageAssociation ]=_dgd ;if _feac .NumberOfPagesUnknown {_feac .NumberOfPages ++;};};_dgd .Segments =append (_dgd .Segments ,_gaa );}else {_feac .GlobalSegments .AddSegment (_gaa );};};_edbe =append (_edbe ,_gaa );_afe =_feac .InputStream .StreamPosition ();if _feac .OrganizationType ==_feg .OSequential {_afe +=int64 (_gaa .SegmentDataLength );};_aad ,_cdca =_feac .reachedEOF (_afe );if _cdca !=nil {_cf .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_cdca );return _a .Wrap (_cdca ,_de ,"");};};_feac .determineRandomDataOffsets (_edbe ,uint64 (_afe ));return nil ;};func (_aggd *Page )collectPageStripes ()(_bdf []_feg .Segmenter ,_bbda error ){const _fade ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";var _bfcc _feg .Segmenter ;for _ ,_geca :=range _aggd .Segments {switch _geca .Type {case 6,7,22,23,38,39,42,43:_bfcc ,_bbda =_geca .GetSegmentData ();if _bbda !=nil {return nil ,_a .Wrap (_bbda ,_fade ,"");};_bdf =append (_bdf ,_bfcc );case 50:_bfcc ,_bbda =_geca .GetSegmentData ();if _bbda !=nil {return nil ,_bbda ;};_deag ,_bdba :=_bfcc .(*_feg .EndOfStripe );if !_bdba {return nil ,_a .Errorf (_fade ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_bfcc );};_bdf =append (_bdf ,_deag );_aggd .FinalHeight =_deag .LineNumber ();};};return _bdf ,nil ;};func (_afg *Page )createPage (_aaa *_feg .PageInformationSegment )error {var _cgfe error ;if !_aaa .IsStripe ||_aaa .PageBMHeight !=-1{_cgfe =_afg .createNormalPage (_aaa );}else {_cgfe =_afg .createStripedPage (_aaa );};return _cgfe ;};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream _dc .StreamReader ;GlobalSegments *Globals ;OrganizationType _feg .OrganizationType ;Classer *_ba .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_fg .Bitmaps ;BaseIndexes []int ;Refinement bool ;RefineLevel int ;_bag uint8 ;_ca *_dc .BufferedWriter ;EncodeGlobals bool ;_fea int ;_ff map[int ][]int ;_df map[int ][]int ;_cdb []int ;_ag map[int ]int ;};func (_fdd *Document )parseFileHeader ()error {const _fdfe ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_dgf :=_fdd .InputStream .Seek (8,_cd .SeekStart );if _dgf !=nil {return _a .Wrap (_dgf ,_fdfe ,"\u0069\u0064");};_ ,_dgf =_fdd .InputStream .ReadBits (5);if _dgf !=nil {return _a .Wrap (_dgf ,_fdfe ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_gdd ,_dgf :=_fdd .InputStream .ReadBit ();if _dgf !=nil {return _a .Wrap (_dgf ,_fdfe ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");};if _gdd ==1{_fdd .GBUseExtTemplate =true ;};_gdd ,_dgf =_fdd .InputStream .ReadBit ();if _dgf !=nil {return _a .Wrap (_dgf ,_fdfe ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};if _gdd !=1{_fdd .NumberOfPagesUnknown =false ;};_gdd ,_dgf =_fdd .InputStream .ReadBit ();if _dgf !=nil {return _a .Wrap (_dgf ,_fdfe ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_fdd .OrganizationType =_feg .OrganizationType (_gdd );if !_fdd .NumberOfPagesUnknown {_fdd .NumberOfPages ,_dgf =_fdd .InputStream .ReadUint32 ();if _dgf !=nil {return _a .Wrap (_dgf ,_fdfe ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_fdd ._bag =13;};return nil ;};func (_bbde *Document )nextPageNumber ()uint32 {_bbde .NumberOfPages ++;return _bbde .NumberOfPages };type Globals struct{Segments []*_feg .Header ;};func (_db *Document )produceClassifiedPage (_gdg *Page ,_acd *_feg .Header )(_dgc error ){const _abe ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";var _agc map[int ]int ;_fec :=_db ._fea ;_bbd :=[]*_feg .Header {_acd };if len (_db ._ff [_gdg .PageNumber ])> 0{_agc =map[int ]int {};_ffb ,_aba :=_db .addSymbolDictionary (_gdg .PageNumber ,_db .Classer .UndilatedTemplates ,_db ._ff [_gdg .PageNumber ],_agc ,false );if _aba !=nil {return _a .Wrap (_aba ,_abe ,"");};_bbd =append (_bbd ,_ffb );_fec +=len (_db ._ff [_gdg .PageNumber ]);};_ef :=_db ._df [_gdg .PageNumber ];_cf .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_gdg .PageNumber ,_ef );_gdg .addTextRegionSegment (_bbd ,_db ._ag ,_agc ,_db ._df [_gdg .PageNumber ],_db .Classer .PtaLL ,_db .Classer .UndilatedTemplates ,_db .Classer .ClassIDs ,nil ,_efe (_fec ),len (_db ._df [_gdg .PageNumber ]));return nil ;};func (_geb *Page )createNormalPage (_aaab *_feg .PageInformationSegment )error {const _gac ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";_geb .Bitmap =_fg .New (_aaab .PageBMWidth ,_aaab .PageBMHeight );if _aaab .DefaultPixelValue ()!=0{_geb .Bitmap .SetDefaultPixel ();};for _ ,_deb :=range _geb .Segments {switch _deb .Type {case 6,7,22,23,38,39,42,43:_cf .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_deb .SegmentNumber );_gbc ,_bgf :=_deb .GetSegmentData ();if _bgf !=nil {return _bgf ;};_fad ,_fffed :=_gbc .(_feg .Regioner );if !_fffed {_cf .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_gbc );return _a .Errorf (_gac ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_gbc );};_cbag ,_bgf :=_fad .GetRegionBitmap ();if _bgf !=nil {return _a .Wrap (_bgf ,_gac ,"");};if _geb .fitsPage (_aaab ,_cbag ){_geb .Bitmap =_cbag ;}else {_dgfg :=_fad .GetRegionInfo ();_ecc :=_geb .getCombinationOperator (_aaab ,_dgfg .CombinaionOperator );_bgf =_fg .Blit (_cbag ,_geb .Bitmap ,int (_dgfg .XLocation ),int (_dgfg .YLocation ),_ecc );if _bgf !=nil {return _a .Wrap (_bgf ,_gac ,"");};};};};return nil ;};type EncodingMethod int ;func (_aeg *Document )encodeSegment (_gcb *_feg .Header ,_agg *int )error {const _bbdc ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";_gcb .SegmentNumber =_aeg .nextSegmentNumber ();_cbg ,_fba :=_gcb .Encode (_aeg ._ca );if _fba !=nil {return _a .Wrapf (_fba ,_bbdc ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_gcb .SegmentNumber );};*_agg +=_cbg ;return nil ;};func (_eaeg *Page )clearSegmentData (){for _gege :=range _eaeg .Segments {_eaeg .Segments [_gege ].CleanSegmentData ();};};func (_dgb *Page )GetBitmap ()(_ggf *_fg .Bitmap ,_fac error ){_cf .Log .Trace (_c .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_dgb .PageNumber ));defer func (){if _fac !=nil {_cf .Log .Trace (_c .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_dgb .PageNumber ,_fac ));}else {_cf .Log .Trace (_c .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_dgb .PageNumber ));};}();if _dgb .Bitmap !=nil {return _dgb .Bitmap ,nil ;};_fac =_dgb .composePageBitmap ();if _fac !=nil {return nil ,_fac ;};return _dgb .Bitmap ,nil ;};func (_gda *Page )countRegions ()int {var _aea int ;for _ ,_bgb :=range _gda .Segments {switch _bgb .Type {case 6,7,22,23,38,39,42,43:_aea ++;};};return _aea ;};func (_gbbe *Page )fitsPage (_gfg *_feg .PageInformationSegment ,_acb *_fg .Bitmap )bool {return _gbbe .countRegions ()==1&&_gfg .DefaultPixelValue ()==0&&_gfg .PageBMWidth ==_acb .Width &&_gfg .PageBMHeight ==_acb .Height ;};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_ca :_dc .BufferedMSB (),Pages :map[int ]*Page {},_ff :map[int ][]int {},_ag :map[int ]int {},_df :map[int ][]int {}};};func (_fcb *Document )encodeEOFHeader (_bfc _dc .BinaryWriter )(_cab int ,_abd error ){_abce :=&_feg .Header {SegmentNumber :_fcb .nextSegmentNumber (),Type :_feg .TEndOfFile };if _cab ,_abd =_abce .Encode (_bfc );_abd !=nil {return 0,_a .Wrap (_abd ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");};return _cab ,nil ;};func (_ebe *Page )getWidth ()(int ,error ){const _bbdeb ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";if _ebe .FinalWidth !=0{return _ebe .FinalWidth ,nil ;};_cdbe :=_ebe .getPageInformationSegment ();if _cdbe ==nil {return 0,_a .Error (_bbdeb ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_bcbe ,_ceda :=_cdbe .GetSegmentData ();if _ceda !=nil {return 0,_a .Wrap (_ceda ,_bbdeb ,"");};_ace ,_cc :=_bcbe .(*_feg .PageInformationSegment );if !_cc {return 0,_a .Errorf (_bbdeb ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_bcbe );};_ebe .FinalWidth =_ace .PageBMWidth ;return _ebe .FinalWidth ,nil ;};func (_eb *Document )AddGenericPage (bm *_fg .Bitmap ,duplicateLineRemoval bool )(_fb error ){const _bg ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";if !_eb .FullHeaders &&_eb .NumberOfPages !=0{return _a .Error (_bg ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");};_fa :=&Page {Segments :[]*_feg .Header {},Bitmap :bm ,Document :_eb ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true };_fa .PageNumber =int (_eb .nextPageNumber ());_eb .Pages [_fa .PageNumber ]=_fa ;_fa .AddPageInformationSegment ();if _fb =_fa .AddGenericRegion (bm ,0,0,0,_feg .TImmediateGenericRegion ,duplicateLineRemoval );_fb !=nil {return _a .Wrap (_fb ,_bg ,"");};if _eb .FullHeaders {_fa .AddEndOfPageSegment ();};return nil ;};func (_fffa *Globals )GetSegment (segmentNumber int )(*_feg .Header ,error ){const _dga ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";if _fffa ==nil {return nil ,_a .Error (_dga ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_fffa .Segments )==0{return nil ,_a .Error (_dga ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};var _dff *_feg .Header ;for _ ,_dff =range _fffa .Segments {if _dff .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _dff ==nil {return nil ,_a .Error (_dga ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};return _dff ,nil ;};func (_aeb *Document )Encode ()(_ffa []byte ,_bab error ){const _dd ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _cbb ,_ce int ;if _aeb .FullHeaders {if _cbb ,_bab =_aeb .encodeFileHeader (_aeb ._ca );_bab !=nil {return nil ,_a .Wrap (_bab ,_dd ,"");};};var (_eab bool ;_gcf *_feg .Header ;_bcg *Page ;);if _bab =_aeb .completeClassifiedPages ();_bab !=nil {return nil ,_a .Wrap (_bab ,_dd ,"");};if _bab =_aeb .produceClassifiedPages ();_bab !=nil {return nil ,_a .Wrap (_bab ,_dd ,"");};if _aeb .GlobalSegments !=nil {for _ ,_gcf =range _aeb .GlobalSegments .Segments {if _bab =_aeb .encodeSegment (_gcf ,&_cbb );_bab !=nil {return nil ,_a .Wrap (_bab ,_dd ,"");};};};for _ecf :=1;_ecf <=int (_aeb .NumberOfPages );_ecf ++{if _bcg ,_eab =_aeb .Pages [_ecf ];!_eab {return nil ,_a .Errorf (_dd ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ecf );};for _ ,_gcf =range _bcg .Segments {if _bab =_aeb .encodeSegment (_gcf ,&_cbb );_bab !=nil {return nil ,_a .Wrap (_bab ,_dd ,"");};};};if _aeb .FullHeaders {if _ce ,_bab =_aeb .encodeEOFHeader (_aeb ._ca );_bab !=nil {return nil ,_a .Wrap (_bab ,_dd ,"");};_cbb +=_ce ;};_ffa =_aeb ._ca .Data ();if len (_ffa )!=_cbb {_cf .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_cbb ,len (_ffa ));};return _ffa ,nil ;};func (_efg *Page )getResolutionY ()(int ,error ){const _aeae ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _efg .ResolutionY !=0{return _efg .ResolutionY ,nil ;};_gbd :=_efg .getPageInformationSegment ();if _gbd ==nil {return 0,_a .Error (_aeae ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_gff ,_ecd :=_gbd .GetSegmentData ();if _ecd !=nil {return 0,_a .Wrap (_ecd ,_aeae ,"");};_bagf ,_fdc :=_gff .(*_feg .PageInformationSegment );if !_fdc {return 0,_a .Errorf (_aeae ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_gff );};_efg .ResolutionY =_bagf .ResolutionY ;return _efg .ResolutionY ,nil ;};var _be =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};func (_daf *Page )addTextRegionSegment (_bfge []*_feg .Header ,_gbb ,_age map[int ]int ,_dba []int ,_egb *_fg .Points ,_cgg *_fg .Bitmaps ,_dadf *_b .IntSlice ,_gad *_fg .Boxes ,_dffe ,_deg int ){_dada :=&_feg .TextRegion {NumberOfSymbols :uint32 (_deg )};_dada .InitEncode (_gbb ,_age ,_dba ,_egb ,_cgg ,_dadf ,_gad ,_daf .FinalWidth ,_daf .FinalHeight ,_dffe );_cgbg :=&_feg .Header {RTSegments :_bfge ,SegmentData :_dada ,PageAssociation :_daf .PageNumber ,Type :_feg .TImmediateTextRegion };_bdbb :=_feg .TPageInformation ;if _age !=nil {_bdbb =_feg .TSymbolDictionary ;};var _gdb int ;for ;_gdb < len (_daf .Segments );_gdb ++{if _daf .Segments [_gdb ].Type ==_bdbb {_gdb ++;break ;};};_daf .Segments =append (_daf .Segments ,nil );copy (_daf .Segments [_gdb +1:],_daf .Segments [_gdb :]);_daf .Segments [_gdb ]=_cgbg ;};func (_eeee *Document )isFileHeaderPresent ()(bool ,error ){_eeee .InputStream .Mark ();for _ ,_baga :=range _be {_aegc ,_fcd :=_eeee .InputStream .ReadByte ();if _fcd !=nil {return false ,_fcd ;};if _baga !=_aegc {_eeee .InputStream .Reset ();return false ,nil ;};};_eeee .InputStream .Reset ();return true ,nil ;};func (_fge *Document )completeSymbols ()(_ega error ){const _eee ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";if _fge .Classer ==nil {return nil ;};if _fge .Classer .UndilatedTemplates ==nil {return _a .Error (_eee ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");};_cdfa :=len (_fge .Pages )==1;_eec :=make ([]int ,_fge .Classer .UndilatedTemplates .Size ());var _ga int ;for _aab :=0;_aab < _fge .Classer .ClassIDs .Size ();_aab ++{_ga ,_ega =_fge .Classer .ClassIDs .Get (_aab );if _ega !=nil {return _a .Wrap (_ega ,_eee ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");};_eec [_ga ]++;};var _bfgb []int ;for _dcba :=0;_dcba < _fge .Classer .UndilatedTemplates .Size ();_dcba ++{if _eec [_dcba ]==0{return _a .Error (_eee ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");};if _eec [_dcba ]> 1||_cdfa {_bfgb =append (_bfgb ,_dcba );};};_fge ._fea =len (_bfgb );var _geg ,_gc int ;for _abg :=0;_abg < _fge .Classer .ComponentPageNumbers .Size ();_abg ++{_geg ,_ega =_fge .Classer .ComponentPageNumbers .Get (_abg );if _ega !=nil {return _a .Wrapf (_ega ,_eee ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_abg );};_gc ,_ega =_fge .Classer .ClassIDs .Get (_abg );if _ega !=nil {return _a .Wrapf (_ega ,_eee ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_geg );};if _eec [_gc ]==1&&!_cdfa {_fge ._ff [_geg ]=append (_fge ._ff [_geg ],_gc );};};if _ega =_fge .Classer .ComputeLLCorners ();_ega !=nil {return _a .Wrap (_ega ,_eee ,"");};return nil ;};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;);