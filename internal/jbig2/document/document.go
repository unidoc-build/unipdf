//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package document ;import (_c "encoding/binary";_e "fmt";_a "github.com/unidoc/unipdf/v3/common";_af "github.com/unidoc/unipdf/v3/internal/bitwise";_d "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_cdd "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_fb "github.com/unidoc/unipdf/v3/internal/jbig2/document/segments";_dd "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/classer";_cc "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_fg "io";_cd "math";_f "runtime/debug";);func (_bbd *Document )encodeFileHeader (_ecd _af .BinaryWriter )(_age int ,_dfg error ){const _aad ="\u0065\u006ec\u006f\u0064\u0065F\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_age ,_dfg =_ecd .Write (_gg );if _dfg !=nil {return _age ,_cc .Wrap (_dfg ,_aad ,"\u0069\u0064");};if _dfg =_ecd .WriteByte (0x01);_dfg !=nil {return _age ,_cc .Wrap (_dfg ,_aad ,"\u0066\u006c\u0061g\u0073");};_age ++;_fd :=make ([]byte ,4);_c .BigEndian .PutUint32 (_fd ,_bbd .NumberOfPages );
_gdc ,_dfg :=_ecd .Write (_fd );if _dfg !=nil {return _gdc ,_cc .Wrap (_dfg ,_aad ,"p\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");};_age +=_gdc ;return _age ,nil ;};type Document struct{Pages map[int ]*Page ;NumberOfPagesUnknown bool ;
NumberOfPages uint32 ;GBUseExtTemplate bool ;InputStream _af .StreamReader ;GlobalSegments *Globals ;OrganizationType _fb .OrganizationType ;Classer *_dd .Classer ;XRes ,YRes int ;FullHeaders bool ;CurrentSegmentNumber uint32 ;AverageTemplates *_cdd .Bitmaps ;
BaseIndexes []int ;Refinement bool ;RefineLevel int ;_ab uint8 ;_ag *_af .BufferedWriter ;EncodeGlobals bool ;_b int ;_ef map[int ][]int ;_fa map[int ][]int ;_fag []int ;_be map[int ]int ;};func (_dag *Page )Encode (w _af .BinaryWriter )(_gcb int ,_bfd error ){const _ggd ="P\u0061\u0067\u0065\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
var _bfe int ;for _ ,_dbgb :=range _dag .Segments {if _bfe ,_bfd =_dbgb .Encode (w );_bfd !=nil {return _gcb ,_cc .Wrap (_bfd ,_ggd ,"");};_gcb +=_bfe ;};return _gcb ,nil ;};func (_bf *Document )AddClassifiedPage (bm *_cdd .Bitmap ,method _dd .Method )(_ce error ){const _abc ="\u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u002e\u0041\u0064d\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064P\u0061\u0067\u0065";
if !_bf .FullHeaders &&_bf .NumberOfPages !=0{return _cc .Error (_abc ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};if _bf .Classer ==nil {if _bf .Classer ,_ce =_dd .Init (_dd .DefaultSettings ());_ce !=nil {return _cc .Wrap (_ce ,_abc ,"");};};_ea :=int (_bf .nextPageNumber ());_ec :=&Page {Segments :[]*_fb .Header {},Bitmap :bm ,Document :_bf ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,PageNumber :_ea };
_bf .Pages [_ea ]=_ec ;switch method {case _dd .RankHaus :_ec .EncodingMethod =RankHausEM ;case _dd .Correlation :_ec .EncodingMethod =CorrelationEM ;};_ec .AddPageInformationSegment ();if _ce =_bf .Classer .AddPage (bm ,_ea ,method );_ce !=nil {return _cc .Wrap (_ce ,_abc ,"");
};if _bf .FullHeaders {_ec .AddEndOfPageSegment ();};return nil ;};func (_ecf *Page )addTextRegionSegment (_edfd []*_fb .Header ,_ddca ,_dgd map[int ]int ,_gebd []int ,_cbe *_cdd .Points ,_dce *_cdd .Bitmaps ,_bac *_d .IntSlice ,_gag *_cdd .Boxes ,_eeg ,_bae int ){_bgg :=&_fb .TextRegion {NumberOfSymbols :uint32 (_bae )};
_bgg .InitEncode (_ddca ,_dgd ,_gebd ,_cbe ,_dce ,_bac ,_gag ,_ecf .FinalWidth ,_ecf .FinalHeight ,_eeg );_bccb :=&_fb .Header {RTSegments :_edfd ,SegmentData :_bgg ,PageAssociation :_ecf .PageNumber ,Type :_fb .TImmediateTextRegion };_bed :=_fb .TPageInformation ;
if _dgd !=nil {_bed =_fb .TSymbolDictionary ;};var _dee int ;for ;_dee < len (_ecf .Segments );_dee ++{if _ecf .Segments [_dee ].Type ==_bed {_dee ++;break ;};};_ecf .Segments =append (_ecf .Segments ,nil );copy (_ecf .Segments [_dee +1:],_ecf .Segments [_dee :]);
_ecf .Segments [_dee ]=_bccb ;};func (_ffd *Document )reachedEOF (_defe int64 )(bool ,error ){const _dadg ="\u0072\u0065\u0061\u0063\u0068\u0065\u0064\u0045\u004f\u0046";_ ,_cbc :=_ffd .InputStream .Seek (_defe ,_fg .SeekStart );if _cbc !=nil {_a .Log .Debug ("\u0072\u0065\u0061c\u0068\u0065\u0064\u0045\u004f\u0046\u0020\u002d\u0020\u0064\u002e\u0049\u006e\u0070\u0075\u0074\u0053\u0074\u0072\u0065\u0061\u006d\u002e\u0053\u0065\u0065\u006b\u0020\u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_cbc );
return false ,_cc .Wrap (_cbc ,_dadg ,"\u0069n\u0070\u0075\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020s\u0065\u0065\u006b\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};_ ,_cbc =_ffd .InputStream .ReadBits (32);if _cbc ==_fg .EOF {return true ,nil ;
}else if _cbc !=nil {return false ,_cc .Wrap (_cbc ,_dadg ,"");};return false ,nil ;};func (_bdg *Document )encodeEOFHeader (_cbb _af .BinaryWriter )(_cbd int ,_bdgd error ){_cfe :=&_fb .Header {SegmentNumber :_bdg .nextSegmentNumber (),Type :_fb .TEndOfFile };
if _cbd ,_bdgd =_cfe .Encode (_cbb );_bdgd !=nil {return 0,_cc .Wrap (_bdgd ,"\u0065n\u0063o\u0064\u0065\u0045\u004f\u0046\u0048\u0065\u0061\u0064\u0065\u0072","");};return _cbd ,nil ;};func (_cbg *Page )getResolutionX ()(int ,error ){const _fbf ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0058";
if _cbg .ResolutionX !=0{return _cbg .ResolutionX ,nil ;};_aeg :=_cbg .getPageInformationSegment ();if _aeg ==nil {return 0,_cc .Error (_fbf ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_acbe ,_ggeg :=_aeg .GetSegmentData ();
if _ggeg !=nil {return 0,_cc .Wrap (_ggeg ,_fbf ,"");};_gece ,_bbbg :=_acbe .(*_fb .PageInformationSegment );if !_bbbg {return 0,_cc .Errorf (_fbf ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_acbe );
};_cbg .ResolutionX =_gece .ResolutionX ;return _cbg .ResolutionX ,nil ;};type EncodingMethod int ;func (_cffg *Page )GetBitmap ()(_fffg *_cdd .Bitmap ,_eaf error ){_a .Log .Trace (_e .Sprintf ("\u005b\u0050\u0041G\u0045\u005d\u005b\u0023%\u0064\u005d\u0020\u0047\u0065\u0074\u0042i\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e",_cffg .PageNumber ));
defer func (){if _eaf !=nil {_a .Log .Trace (_e .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074B\u0069t\u006d\u0061\u0070\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_cffg .PageNumber ,_eaf ));
}else {_a .Log .Trace (_e .Sprintf ("\u005b\u0050\u0041\u0047\u0045\u005d\u005b\u0023\u0025\u0064]\u0020\u0047\u0065\u0074\u0042\u0069\u0074m\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064",_cffg .PageNumber ));};}();if _cffg .Bitmap !=nil {return _cffg .Bitmap ,nil ;
};_eaf =_cffg .composePageBitmap ();if _eaf !=nil {return nil ,_eaf ;};return _cffg .Bitmap ,nil ;};func (_dfge *Page )getResolutionY ()(int ,error ){const _agc ="\u0067\u0065\u0074\u0052\u0065\u0073\u006f\u006c\u0075t\u0069\u006f\u006e\u0059";if _dfge .ResolutionY !=0{return _dfge .ResolutionY ,nil ;
};_ffba :=_dfge .getPageInformationSegment ();if _ffba ==nil {return 0,_cc .Error (_agc ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_cccf ,_gca :=_ffba .GetSegmentData ();if _gca !=nil {return 0,_cc .Wrap (_gca ,_agc ,"");
};_dedc ,_add :=_cccf .(*_fb .PageInformationSegment );if !_add {return 0,_cc .Errorf (_agc ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0027%\u0054\u0027",_cccf );
};_dfge .ResolutionY =_dedc .ResolutionY ;return _dfge .ResolutionY ,nil ;};func (_gge *Page )AddPageInformationSegment (){_baf :=&_fb .PageInformationSegment {PageBMWidth :_gge .FinalWidth ,PageBMHeight :_gge .FinalHeight ,ResolutionX :_gge .ResolutionX ,ResolutionY :_gge .ResolutionY ,IsLossless :_gge .IsLossless };
if _gge .BlackIsOne {_baf .DefaultPixelValue =uint8 (0x1);};_eae :=&_fb .Header {PageAssociation :_gge .PageNumber ,SegmentDataLength :uint64 (_baf .Size ()),SegmentData :_baf ,Type :_fb .TPageInformation };_gge .Segments =append (_gge .Segments ,_eae );
};func _ebdd (_bcd _af .StreamReader ,_bea *Globals )(*Document ,error ){_gcc :=&Document {Pages :make (map[int ]*Page ),InputStream :_bcd ,OrganizationType :_fb .OSequential ,NumberOfPagesUnknown :true ,GlobalSegments :_bea ,_ab :9};if _gcc .GlobalSegments ==nil {_gcc .GlobalSegments =&Globals {};
};if _abga :=_gcc .mapData ();_abga !=nil {return nil ,_abga ;};return _gcc ,nil ;};func (_ae *Document )AddGenericPage (bm *_cdd .Bitmap ,duplicateLineRemoval bool )(_ed error ){const _cb ="\u0044\u006f\u0063um\u0065\u006e\u0074\u002e\u0041\u0064\u0064\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0050\u0061\u0067\u0065";
if !_ae .FullHeaders &&_ae .NumberOfPages !=0{return _cc .Error (_cb ,"\u0064\u006f\u0063\u0075\u006de\u006e\u0074\u0020\u0061\u006c\u0072\u0065a\u0064\u0079\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0070\u0061\u0067\u0065\u002e\u0020\u0046\u0069\u006c\u0065\u004d\u006f\u0064\u0065\u0020\u0064\u0069\u0073\u0061\u006c\u006c\u006f\u0077\u0073\u0020\u0061\u0064\u0064i\u006e\u0067\u0020\u006d\u006f\u0072\u0065\u0020\u0074\u0068\u0061\u006e \u006f\u006e\u0065\u0020\u0070\u0061g\u0065");
};_bc :=&Page {Segments :[]*_fb .Header {},Bitmap :bm ,Document :_ae ,FinalHeight :bm .Height ,FinalWidth :bm .Width ,IsLossless :true ,BlackIsOne :bm .Color ==_cdd .Chocolate };_bc .PageNumber =int (_ae .nextPageNumber ());_ae .Pages [_bc .PageNumber ]=_bc ;
bm .InverseData ();_bc .AddPageInformationSegment ();if _ed =_bc .AddGenericRegion (bm ,0,0,0,_fb .TImmediateGenericRegion ,duplicateLineRemoval );_ed !=nil {return _cc .Wrap (_ed ,_cb ,"");};if _ae .FullHeaders {_bc .AddEndOfPageSegment ();};return nil ;
};func (_cgg *Page )fitsPage (_adbg *_fb .PageInformationSegment ,_cbba *_cdd .Bitmap )bool {return _cgg .countRegions ()==1&&_adbg .DefaultPixelValue ==0&&_adbg .PageBMWidth ==_cbba .Width &&_adbg .PageBMHeight ==_cbba .Height ;};func InitEncodeDocument (fullHeaders bool )*Document {return &Document {FullHeaders :fullHeaders ,_ag :_af .BufferedMSB (),Pages :map[int ]*Page {},_ef :map[int ][]int {},_be :map[int ]int {},_fa :map[int ][]int {}};
};func (_ccac *Globals )AddSegment (segment *_fb .Header ){_ccac .Segments =append (_ccac .Segments ,segment );};func (_gfag *Page )composePageBitmap ()error {const _gbf ="\u0063\u006f\u006d\u0070\u006f\u0073\u0065\u0050\u0061\u0067\u0065\u0042i\u0074\u006d\u0061\u0070";
if _gfag .PageNumber ==0{return nil ;};_gfd :=_gfag .getPageInformationSegment ();if _gfd ==nil {return _cc .Error (_gbf ,"\u0070\u0061\u0067e \u0069\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069o\u006e \u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_dfc ,_fde :=_gfd .GetSegmentData ();if _fde !=nil {return _fde ;};_ddg ,_edfb :=_dfc .(*_fb .PageInformationSegment );if !_edfb {return _cc .Error (_gbf ,"\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006da\u0074\u0069\u006f\u006e \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");
};if _fde =_gfag .createPage (_ddg );_fde !=nil {return _cc .Wrap (_fde ,_gbf ,"");};_gfag .clearSegmentData ();return nil ;};func (_aeag *Page )createStripedPage (_bef *_fb .PageInformationSegment )error {const _bbb ="\u0063\u0072\u0065\u0061\u0074\u0065\u0053\u0074\u0072\u0069\u0070\u0065d\u0050\u0061\u0067\u0065";
_adc ,_eccb :=_aeag .collectPageStripes ();if _eccb !=nil {return _cc .Wrap (_eccb ,_bbb ,"");};var _aece int ;for _ ,_fba :=range _adc {if _bdb ,_accb :=_fba .(*_fb .EndOfStripe );_accb {_aece =_bdb .LineNumber ()+1;}else {_bde :=_fba .(_fb .Regioner );
_bcfd :=_bde .GetRegionInfo ();_eef :=_aeag .getCombinationOperator (_bef ,_bcfd .CombinaionOperator );_bedb ,_fdg :=_bde .GetRegionBitmap ();if _fdg !=nil {return _cc .Wrap (_fdg ,_bbb ,"");};_fdg =_cdd .Blit (_bedb ,_aeag .Bitmap ,int (_bcfd .XLocation ),_aece ,_eef );
if _fdg !=nil {return _cc .Wrap (_fdg ,_bbb ,"");};};};return nil ;};func (_abcf *Document )parseFileHeader ()error {const _eced ="\u0070a\u0072s\u0065\u0046\u0069\u006c\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ ,_fe :=_abcf .InputStream .Seek (8,_fg .SeekStart );
if _fe !=nil {return _cc .Wrap (_fe ,_eced ,"\u0069\u0064");};_ ,_fe =_abcf .InputStream .ReadBits (5);if _fe !=nil {return _cc .Wrap (_fe ,_eced ,"\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074\u0073");};_bbg ,_fe :=_abcf .InputStream .ReadBit ();
if _fe !=nil {return _cc .Wrap (_fe ,_eced ,"\u0065x\u0074e\u006e\u0064\u0065\u0064\u0020t\u0065\u006dp\u006c\u0061\u0074\u0065\u0073");};if _bbg ==1{_abcf .GBUseExtTemplate =true ;};_bbg ,_fe =_abcf .InputStream .ReadBit ();if _fe !=nil {return _cc .Wrap (_fe ,_eced ,"\u0075\u006e\u006b\u006eow\u006e\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072");
};if _bbg !=1{_abcf .NumberOfPagesUnknown =false ;};_bbg ,_fe =_abcf .InputStream .ReadBit ();if _fe !=nil {return _cc .Wrap (_fe ,_eced ,"\u006f\u0072\u0067\u0061\u006e\u0069\u007a\u0061\u0074\u0069\u006f\u006e \u0074\u0079\u0070\u0065");};_abcf .OrganizationType =_fb .OrganizationType (_bbg );
if !_abcf .NumberOfPagesUnknown {_abcf .NumberOfPages ,_fe =_abcf .InputStream .ReadUint32 ();if _fe !=nil {return _cc .Wrap (_fe ,_eced ,"\u006eu\u006db\u0065\u0072\u0020\u006f\u0066\u0020\u0070\u0061\u0067\u0065\u0073");};_abcf ._ab =13;};return nil ;
};func (_bgc *Page )GetResolutionY ()(int ,error ){return _bgc .getResolutionY ()};func (_bca *Page )String ()string {return _e .Sprintf ("\u0050\u0061\u0067\u0065\u0020\u0023\u0025\u0064",_bca .PageNumber );};func (_dac *Page )countRegions ()int {var _bgb int ;
for _ ,_dceg :=range _dac .Segments {switch _dceg .Type {case 6,7,22,23,38,39,42,43:_bgb ++;};};return _bgb ;};func _edc (_aadg *Document ,_fcb int )*Page {return &Page {Document :_aadg ,PageNumber :_fcb ,Segments :[]*_fb .Header {}};};func (_aeba *Page )getWidth ()(int ,error ){const _bfag ="\u0067\u0065\u0074\u0057\u0069\u0064\u0074\u0068";
if _aeba .FinalWidth !=0{return _aeba .FinalWidth ,nil ;};_gda :=_aeba .getPageInformationSegment ();if _gda ==nil {return 0,_cc .Error (_bfag ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");};_fdgf ,_eca :=_gda .GetSegmentData ();
if _eca !=nil {return 0,_cc .Wrap (_eca ,_bfag ,"");};_bad ,_bdfb :=_fdgf .(*_fb .PageInformationSegment );if !_bdfb {return 0,_cc .Errorf (_bfag ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_fdgf );
};_aeba .FinalWidth =_bad .PageBMWidth ;return _aeba .FinalWidth ,nil ;};func (_feg *Page )GetWidth ()(int ,error ){return _feg .getWidth ()};func (_ged *Document )mapData ()error {const _ddd ="\u006da\u0070\u0044\u0061\u0074\u0061";var (_ga []*_fb .Header ;
_afd int64 ;_ecc _fb .Type ;);_ffbe ,_eed :=_ged .isFileHeaderPresent ();if _eed !=nil {return _cc .Wrap (_eed ,_ddd ,"");};if _ffbe {if _eed =_ged .parseFileHeader ();_eed !=nil {return _cc .Wrap (_eed ,_ddd ,"");};_afd +=int64 (_ged ._ab );_ged .FullHeaders =true ;
};var (_gcff *Page ;_agf bool ;);for _ecc !=51&&!_agf {_bec ,_ad :=_fb .NewHeader (_ged ,_ged .InputStream ,_afd ,_ged .OrganizationType );if _ad !=nil {return _cc .Wrap (_ad ,_ddd ,"");};_a .Log .Trace ("\u0044\u0065c\u006f\u0064\u0069\u006eg\u0020\u0073e\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u0075m\u0062\u0065\u0072\u003a\u0020\u0025\u0064\u002c\u0020\u0054\u0079\u0070e\u003a\u0020\u0025\u0073",_bec .SegmentNumber ,_bec .Type );
_ecc =_bec .Type ;if _ecc !=_fb .TEndOfFile {if _bec .PageAssociation !=0{_gcff =_ged .Pages [_bec .PageAssociation ];if _gcff ==nil {_gcff =_edc (_ged ,_bec .PageAssociation );_ged .Pages [_bec .PageAssociation ]=_gcff ;if _ged .NumberOfPagesUnknown {_ged .NumberOfPages ++;
};};_gcff .Segments =append (_gcff .Segments ,_bec );}else {_ged .GlobalSegments .AddSegment (_bec );};};_ga =append (_ga ,_bec );_afd =_ged .InputStream .StreamPosition ();if _ged .OrganizationType ==_fb .OSequential {_afd +=int64 (_bec .SegmentDataLength );
};_agf ,_ad =_ged .reachedEOF (_afd );if _ad !=nil {_a .Log .Debug ("\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u0072\u0065\u0061\u0063h\u0065\u0064\u0020\u0045\u004f\u0046\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_ad );
return _cc .Wrap (_ad ,_ddd ,"");};};_ged .determineRandomDataOffsets (_ga ,uint64 (_afd ));return nil ;};func (_abfa *Document )encodeSegment (_ded *_fb .Header ,_acc *int )error {const _beg ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
_ded .SegmentNumber =_abfa .nextSegmentNumber ();_egb ,_eaa :=_ded .Encode (_abfa ._ag );if _eaa !=nil {return _cc .Wrapf (_eaa ,_beg ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_ded .SegmentNumber );};*_acc +=_egb ;
return nil ;};func (_ccc *Page )GetResolutionX ()(int ,error ){return _ccc .getResolutionX ()};func (_acf *Page )nextSegmentNumber ()uint32 {return _acf .Document .nextSegmentNumber ()};const (GenericEM EncodingMethod =iota ;CorrelationEM ;RankHausEM ;
);func (_geff *Document )GetNumberOfPages ()(uint32 ,error ){if _geff .NumberOfPagesUnknown ||_geff .NumberOfPages ==0{if len (_geff .Pages )==0{if _aef :=_geff .mapData ();_aef !=nil {return 0,_cc .Wrap (_aef ,"\u0044o\u0063\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074N\u0075m\u0062e\u0072\u004f\u0066\u0050\u0061\u0067\u0065s","");
};};return uint32 (len (_geff .Pages )),nil ;};return _geff .NumberOfPages ,nil ;};func (_ebd *Document )nextSegmentNumber ()uint32 {_dba :=_ebd .CurrentSegmentNumber ;_ebd .CurrentSegmentNumber ++;return _dba ;};func (_cca *Document )GetPage (pageNumber int )(_fb .Pager ,error ){const _abe ="\u0044\u006fc\u0075\u006d\u0065n\u0074\u002e\u0047\u0065\u0074\u0050\u0061\u0067\u0065";
if pageNumber < 0{_a .Log .Debug ("\u004a\u0042\u0049\u00472\u0020\u0050\u0061\u0067\u0065\u0020\u002d\u0020\u0047e\u0074\u0050\u0061\u0067\u0065\u003a\u0020\u0025\u0064\u002e\u0020\u0050\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062e\u0020\u006c\u006f\u0077\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030\u002e\u0020\u0025\u0073",pageNumber ,_f .Stack ());
return nil ,_cc .Errorf (_abe ,"\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032\u0020d\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020\u002d\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064 \u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a\u0020\u0025\u0064",pageNumber );
};if pageNumber > len (_cca .Pages ){_a .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_f .Stack ());return nil ,_cc .Error (_abe ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};_bdfg ,_dgg :=_cca .Pages [pageNumber ];if !_dgg {_a .Log .Debug ("\u0050\u0061\u0067\u0065 n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0064\u002e\u0020%\u0073",pageNumber ,_f .Stack ());return nil ,_cc .Errorf (_abe ,"\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062\u0069\u0067\u0032 \u0064\u006f\u0063\u0075\u006d\u0065n\u0074\u0020\u002d\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _bdfg ,nil ;};func (_gfe *Document )GetGlobalSegment (i int )(*_fb .Header ,error ){_aeb ,_aab :=_gfe .GlobalSegments .GetSegment (i );if _aab !=nil {return nil ,_cc .Wrap (_aab ,"\u0047\u0065t\u0047\u006c\u006fb\u0061\u006c\u0053\u0065\u0067\u006d\u0065\u006e\u0074","");
};return _aeb ,nil ;};func (_dddf *Page )clearSegmentData (){for _gaa :=range _dddf .Segments {_dddf .Segments [_gaa ].CleanSegmentData ();};};func (_bg *Document )isFileHeaderPresent ()(bool ,error ){_bg .InputStream .Mark ();for _ ,_fff :=range _gg {_dfgf ,_efe :=_bg .InputStream .ReadByte ();
if _efe !=nil {return false ,_efe ;};if _fff !=_dfgf {_bg .InputStream .Reset ();return false ,nil ;};};_bg .InputStream .Reset ();return true ,nil ;};func (_ff *Document )produceClassifiedPages ()(_cdde error ){const _ede ="\u0070\u0072\u006f\u0064uc\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067e\u0073";
if _ff .Classer ==nil {return nil ;};var (_db *Page ;_efa bool ;_dg *_fb .Header ;);for _edd :=1;_edd <=int (_ff .NumberOfPages );_edd ++{if _db ,_efa =_ff .Pages [_edd ];!_efa {return _cc .Errorf (_ede ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_edd );
};if _db .EncodingMethod ==GenericEM {continue ;};if _dg ==nil {if _dg ,_cdde =_ff .GlobalSegments .GetSymbolDictionary ();_cdde !=nil {return _cc .Wrap (_cdde ,_ede ,"");};};if _cdde =_ff .produceClassifiedPage (_db ,_dg );_cdde !=nil {return _cc .Wrapf (_cdde ,_ede ,"\u0070\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027",_edd );
};};return nil ;};func (_fec *Page )collectPageStripes ()(_aebf []_fb .Segmenter ,_gbgb error ){const _aff ="\u0063o\u006cl\u0065\u0063\u0074\u0050\u0061g\u0065\u0053t\u0072\u0069\u0070\u0065\u0073";var _bcfe _fb .Segmenter ;for _ ,_cbbe :=range _fec .Segments {switch _cbbe .Type {case 6,7,22,23,38,39,42,43:_bcfe ,_gbgb =_cbbe .GetSegmentData ();
if _gbgb !=nil {return nil ,_cc .Wrap (_gbgb ,_aff ,"");};_aebf =append (_aebf ,_bcfe );case 50:_bcfe ,_gbgb =_cbbe .GetSegmentData ();if _gbgb !=nil {return nil ,_gbgb ;};_cde ,_eda :=_bcfe .(*_fb .EndOfStripe );if !_eda {return nil ,_cc .Errorf (_aff ,"\u0045\u006e\u0064\u004f\u0066\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u006f\u0066\u0020\u0076\u0061l\u0069\u0064\u0020\u0074\u0079p\u0065\u003a \u0027\u0025\u0054\u0027",_bcfe );
};_aebf =append (_aebf ,_cde );_fec .FinalHeight =_cde .LineNumber ();};};return _aebf ,nil ;};func (_cab *Page )GetSegment (number int )(*_fb .Header ,error ){const _cdf ="\u0050a\u0067e\u002e\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074";
for _ ,_ecce :=range _cab .Segments {if _ecce .SegmentNumber ==uint32 (number ){return _ecce ,nil ;};};_gbc :=make ([]uint32 ,len (_cab .Segments ));for _bbf ,_aga :=range _cab .Segments {_gbc [_bbf ]=_aga .SegmentNumber ;};return nil ,_cc .Errorf (_cdf ,"\u0073e\u0067\u006d\u0065n\u0074\u0020\u0077i\u0074h \u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u003a\u0020'%\u0064'\u002e\u0020\u004b\u006e\u006f\u0077n\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u003a \u0025\u0076",number ,_cab .PageNumber ,_gbc );
};func (_cef *Document )nextPageNumber ()uint32 {_cef .NumberOfPages ++;return _cef .NumberOfPages };func (_bff *Page )createNormalPage (_eaaa *_fb .PageInformationSegment )error {const _gbfb ="\u0063\u0072e\u0061\u0074\u0065N\u006f\u0072\u006d\u0061\u006c\u0050\u0061\u0067\u0065";
_bff .Bitmap =_cdd .New (_eaaa .PageBMWidth ,_eaaa .PageBMHeight );if _eaaa .DefaultPixelValue !=0{_bff .Bitmap .SetDefaultPixel ();};for _ ,_aaf :=range _bff .Segments {switch _aaf .Type {case 6,7,22,23,38,39,42,43:_a .Log .Trace ("\u0047\u0065\u0074\u0074in\u0067\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0064",_aaf .SegmentNumber );
_dcf ,_dfdg :=_aaf .GetSegmentData ();if _dfdg !=nil {return _dfdg ;};_deb ,_gbfg :=_dcf .(_fb .Regioner );if !_gbfg {_a .Log .Debug ("\u0053\u0065g\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069on\u0065\u0072",_dcf );
return _cc .Errorf (_gbfb ,"i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006a\u0062i\u0067\u0032\u0020\u0073\u0065\u0067\u006den\u0074\u0020\u0074\u0079p\u0065\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061 R\u0065\u0067i\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_dcf );
};_fae ,_dfdg :=_deb .GetRegionBitmap ();if _dfdg !=nil {return _cc .Wrap (_dfdg ,_gbfb ,"");};if _bff .fitsPage (_eaaa ,_fae ){_bff .Bitmap =_fae ;}else {_bfaa :=_deb .GetRegionInfo ();_ffg :=_bff .getCombinationOperator (_eaaa ,_bfaa .CombinaionOperator );
_dfdg =_cdd .Blit (_fae ,_bff .Bitmap ,int (_bfaa .XLocation ),int (_bfaa .YLocation ),_ffg );if _dfdg !=nil {return _cc .Wrap (_dfdg ,_gbfb ,"");};};};};return nil ;};type Globals struct{Segments []*_fb .Header ;};func (_efb *Globals )GetSegment (segmentNumber int )(*_fb .Header ,error ){const _gde ="\u0047l\u006fb\u0061\u006c\u0073\u002e\u0047e\u0074\u0053e\u0067\u006d\u0065\u006e\u0074";
if _efb ==nil {return nil ,_cc .Error (_gde ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if len (_efb .Segments )==0{return nil ,_cc .Error (_gde ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");
};var _fab *_fb .Header ;for _ ,_fab =range _efb .Segments {if _fab .SegmentNumber ==uint32 (segmentNumber ){break ;};};if _fab ==nil {return nil ,_cc .Error (_gde ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};return _fab ,nil ;};func (_gff *Globals )GetSymbolDictionary ()(*_fb .Header ,error ){const _gac ="G\u006c\u006f\u0062\u0061\u006c\u0073.\u0047\u0065\u0074\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079";if _gff ==nil {return nil ,_cc .Error (_gac ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_gff .Segments )==0{return nil ,_cc .Error (_gac ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};for _ ,_gfa :=range _gff .Segments {if _gfa .Type ==_fb .TSymbolDictionary {return _gfa ,nil ;
};};return nil ,_cc .Error (_gac ,"\u0067\u006c\u006fba\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020d\u0069c\u0074i\u006fn\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};var _gg =[]byte {0x97,0x4A,0x42,0x32,0x0D,0x0A,0x1A,0x0A};
func (_egc *Page )AddGenericRegion (bm *_cdd .Bitmap ,xloc ,yloc ,template int ,tp _fb .Type ,duplicateLineRemoval bool )error {const _geb ="P\u0061\u0067\u0065\u002eAd\u0064G\u0065\u006e\u0065\u0072\u0069c\u0052\u0065\u0067\u0069\u006f\u006e";_ebf :=&_fb .GenericRegion {};
if _abec :=_ebf .InitEncode (bm ,xloc ,yloc ,template ,duplicateLineRemoval );_abec !=nil {return _cc .Wrap (_abec ,_geb ,"");};_ddc :=&_fb .Header {Type :_fb .TImmediateGenericRegion ,PageAssociation :_egc .PageNumber ,SegmentData :_ebf };_egc .Segments =append (_egc .Segments ,_ddc );
return nil ;};func (_cfg *Document )produceClassifiedPage (_aa *Page ,_cfc *_fb .Header )(_bcf error ){const _cga ="p\u0072\u006f\u0064\u0075ce\u0043l\u0061\u0073\u0073\u0069\u0066i\u0065\u0064\u0050\u0061\u0067\u0065";var _dda map[int ]int ;_eg :=_cfg ._b ;
_gd :=[]*_fb .Header {_cfc };if len (_cfg ._ef [_aa .PageNumber ])> 0{_dda =map[int ]int {};_eb ,_gga :=_cfg .addSymbolDictionary (_aa .PageNumber ,_cfg .Classer .UndilatedTemplates ,_cfg ._ef [_aa .PageNumber ],_dda ,false );if _gga !=nil {return _cc .Wrap (_gga ,_cga ,"");
};_gd =append (_gd ,_eb );_eg +=len (_cfg ._ef [_aa .PageNumber ]);};_dbg :=_cfg ._fa [_aa .PageNumber ];_a .Log .Debug ("P\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020c\u006f\u006d\u0070\u0073: \u0025\u0076",_aa .PageNumber ,_dbg );_aa .addTextRegionSegment (_gd ,_cfg ._be ,_dda ,_cfg ._fa [_aa .PageNumber ],_cfg .Classer .PtaLL ,_cfg .Classer .UndilatedTemplates ,_cfg .Classer .ClassIDs ,nil ,_ba (_eg ),len (_cfg ._fa [_aa .PageNumber ]));
return nil ;};func (_ggaa *Page )AddEndOfPageSegment (){_adbf :=&_fb .Header {Type :_fb .TEndOfPage ,PageAssociation :_ggaa .PageNumber };_ggaa .Segments =append (_ggaa .Segments ,_adbf );};func _ba (_ffe int )int {_ac :=0;_def :=(_ffe &(_ffe -1))==0;_ffe >>=1;
for ;_ffe !=0;_ffe >>=1{_ac ++;};if _def {return _ac ;};return _ac +1;};func (_bbge *Page )GetHeight ()(int ,error ){return _bbge .getHeight ()};func (_affb *Page )lastSegmentNumber ()(_fdf uint32 ,_gaf error ){const _bcb ="\u006c\u0061\u0073\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
if len (_affb .Segments )==0{return _fdf ,_cc .Errorf (_bcb ,"\u006e\u006f\u0020se\u0067\u006d\u0065\u006e\u0074\u0073\u0020\u0066\u006fu\u006ed\u0020i\u006e \u0074\u0068\u0065\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027",_affb .PageNumber );
};return _affb .Segments [len (_affb .Segments )-1].SegmentNumber ,nil ;};func (_dbc *Document )determineRandomDataOffsets (_eee []*_fb .Header ,_dad uint64 ){if _dbc .OrganizationType !=_fb .ORandom {return ;};for _ ,_dfe :=range _eee {_dfe .SegmentDataStartOffset =_dad ;
_dad +=_dfe .SegmentDataLength ;};};func (_dbce *Globals )GetSegmentByIndex (index int )(*_fb .Header ,error ){const _adb ="\u0047l\u006f\u0062\u0061\u006cs\u002e\u0047\u0065\u0074\u0053e\u0067m\u0065n\u0074\u0042\u0079\u0049\u006e\u0064\u0065x";if _dbce ==nil {return nil ,_cc .Error (_adb ,"\u0067\u006c\u006f\u0062al\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if len (_dbce .Segments )==0{return nil ,_cc .Error (_adb ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0073\u0020\u0061\u0072\u0065\u0020e\u006d\u0070\u0074\u0079");};if index > len (_dbce .Segments )-1{return nil ,_cc .Error (_adb ,"\u0069n\u0064e\u0078\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");
};return _dbce .Segments [index ],nil ;};type Page struct{Segments []*_fb .Header ;PageNumber int ;Bitmap *_cdd .Bitmap ;FinalHeight int ;FinalWidth int ;ResolutionX int ;ResolutionY int ;IsLossless bool ;Document *Document ;FirstSegmentNumber int ;EncodingMethod EncodingMethod ;
BlackIsOne bool ;};func (_gccd *Page )getHeight ()(int ,error ){const _cea ="\u0067e\u0074\u0048\u0065\u0069\u0067\u0068t";if _gccd .FinalHeight !=0{return _gccd .FinalHeight ,nil ;};_agfc :=_gccd .getPageInformationSegment ();if _agfc ==nil {return 0,_cc .Error (_cea ,"n\u0069l\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006ef\u006f\u0072\u006d\u0061ti\u006f\u006e");
};_fdec ,_dfa :=_agfc .GetSegmentData ();if _dfa !=nil {return 0,_cc .Wrap (_dfa ,_cea ,"");};_fbac ,_ebag :=_fdec .(*_fb .PageInformationSegment );if !_ebag {return 0,_cc .Errorf (_cea ,"\u0070\u0061\u0067\u0065\u0020\u0069n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0069\u0073 \u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0079\u0070e\u003a \u0027\u0025\u0054\u0027",_fdec );
};if _fbac .PageBMHeight ==_cd .MaxInt32 {_ ,_dfa =_gccd .GetBitmap ();if _dfa !=nil {return 0,_cc .Wrap (_dfa ,_cea ,"");};}else {_gccd .FinalHeight =_fbac .PageBMHeight ;};return _gccd .FinalHeight ,nil ;};func (_abf *Document )completeClassifiedPages ()(_cf error ){const _ccg ="\u0063\u006f\u006dpl\u0065\u0074\u0065\u0043\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0050\u0061\u0067\u0065\u0073";
if _abf .Classer ==nil {return nil ;};_abf ._fag =make ([]int ,_abf .Classer .UndilatedTemplates .Size ());for _de :=0;_de < _abf .Classer .ClassIDs .Size ();_de ++{_df ,_cg :=_abf .Classer .ClassIDs .Get (_de );if _cg !=nil {return _cc .Wrapf (_cg ,_ccg ,"\u0063\u006c\u0061\u0073s \u0077\u0069\u0074\u0068\u0020\u0069\u0064\u003a\u0020\u0027\u0025\u0064\u0027",_de );
};_abf ._fag [_df ]++;};var _cff []int ;for _fbc :=0;_fbc < _abf .Classer .UndilatedTemplates .Size ();_fbc ++{if _abf .NumberOfPages ==1||_abf ._fag [_fbc ]> 1{_cff =append (_cff ,_fbc );};};var (_ecb *Page ;_ece bool ;);for _ge ,_bcc :=range *_abf .Classer .ComponentPageNumbers {if _ecb ,_ece =_abf .Pages [_bcc ];
!_ece {return _cc .Errorf (_ccg ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ge );};if _ecb .EncodingMethod ==GenericEM {_a .Log .Error ("\u0047\u0065\u006e\u0065\u0072\u0069c\u0020\u0070\u0061g\u0065\u0020\u0077i\u0074\u0068\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u003a \u0027\u0025\u0064\u0027\u0020ma\u0070\u0070\u0065\u0064\u0020\u0061\u0073\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0069\u0065\u0064\u0020\u0070\u0061\u0067\u0065",_ge );
continue ;};_abf ._fa [_bcc ]=append (_abf ._fa [_bcc ],_ge );_bd ,_ee :=_abf .Classer .ClassIDs .Get (_ge );if _ee !=nil {return _cc .Wrapf (_ee ,_ccg ,"\u006e\u006f\u0020\u0073uc\u0068\u0020\u0063\u006c\u0061\u0073\u0073\u0049\u0044\u003a\u0020\u0025\u0064",_ge );
};if _abf ._fag [_bd ]==1&&_abf .NumberOfPages !=1{_gef :=append (_abf ._ef [_bcc ],_bd );_abf ._ef [_bcc ]=_gef ;};};if _cf =_abf .Classer .ComputeLLCorners ();_cf !=nil {return _cc .Wrap (_cf ,_ccg ,"");};if _ ,_cf =_abf .addSymbolDictionary (0,_abf .Classer .UndilatedTemplates ,_cff ,_abf ._be ,false );
_cf !=nil {return _cc .Wrap (_cf ,_ccg ,"");};return nil ;};func (_aec *Document )addSymbolDictionary (_aca int ,_abb *_cdd .Bitmaps ,_cgb []int ,_edf map[int ]int ,_ceg bool )(*_fb .Header ,error ){const _gc ="\u0061\u0064\u0064\u0053ym\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079";
_abg :=&_fb .SymbolDictionary {};if _gb :=_abg .InitEncode (_abb ,_cgb ,_edf ,_ceg );_gb !=nil {return nil ,_gb ;};_dc :=&_fb .Header {Type :_fb .TSymbolDictionary ,PageAssociation :_aca ,SegmentData :_abg };if _aca ==0{if _aec .GlobalSegments ==nil {_aec .GlobalSegments =&Globals {};
};_aec .GlobalSegments .AddSegment (_dc );return _dc ,nil ;};_ced ,_gcf :=_aec .Pages [_aca ];if !_gcf {return nil ,_cc .Errorf (_gc ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_aca );};var (_gea int ;
_acb *_fb .Header ;);for _gea ,_acb =range _ced .Segments {if _acb .Type ==_fb .TPageInformation {break ;};};_gea ++;_ced .Segments =append (_ced .Segments ,nil );copy (_ced .Segments [_gea +1:],_ced .Segments [_gea :]);_ced .Segments [_gea ]=_dc ;return _dc ,nil ;
};func (_agb *Page )getPageInformationSegment ()*_fb .Header {for _ ,_dae :=range _agb .Segments {if _dae .Type ==_fb .TPageInformation {return _dae ;};};_a .Log .Debug ("\u0050\u0061\u0067\u0065\u0020\u0069\u006e\u0066o\u0072\u006d\u0061ti\u006f\u006e\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0066o\u0072\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0073\u002e",_agb );
return nil ;};func (_dcd *Page )createPage (_ccb *_fb .PageInformationSegment )error {var _gfda error ;if !_ccb .IsStripe ||_ccb .PageBMHeight !=-1{_gfda =_dcd .createNormalPage (_ccb );}else {_gfda =_dcd .createStripedPage (_ccb );};return _gfda ;};func (_dbd *Page )getCombinationOperator (_ddcb *_fb .PageInformationSegment ,_becc _cdd .CombinationOperator )_cdd .CombinationOperator {if _ddcb .CombinationOperatorOverrideAllowed (){return _becc ;
};return _ddcb .CombinationOperator ();};func (_gbb *Document )Encode ()(_bdf []byte ,_cegc error ){const _ebb ="\u0044o\u0063u\u006d\u0065\u006e\u0074\u002e\u0045\u006e\u0063\u006f\u0064\u0065";var _da ,_fc int ;if _gbb .FullHeaders {if _da ,_cegc =_gbb .encodeFileHeader (_gbb ._ag );
_cegc !=nil {return nil ,_cc .Wrap (_cegc ,_ebb ,"");};};var (_daf bool ;_cfge *_fb .Header ;_gec *Page ;);if _cegc =_gbb .completeClassifiedPages ();_cegc !=nil {return nil ,_cc .Wrap (_cegc ,_ebb ,"");};if _cegc =_gbb .produceClassifiedPages ();_cegc !=nil {return nil ,_cc .Wrap (_cegc ,_ebb ,"");
};if _gbb .GlobalSegments !=nil {for _ ,_cfge =range _gbb .GlobalSegments .Segments {if _cegc =_gbb .encodeSegment (_cfge ,&_da );_cegc !=nil {return nil ,_cc .Wrap (_cegc ,_ebb ,"");};};};for _ffec :=1;_ffec <=int (_gbb .NumberOfPages );_ffec ++{if _gec ,_daf =_gbb .Pages [_ffec ];
!_daf {return nil ,_cc .Errorf (_ebb ,"p\u0061g\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020n\u006f\u0074\u0020\u0066ou\u006e\u0064",_ffec );};for _ ,_cfge =range _gec .Segments {if _cegc =_gbb .encodeSegment (_cfge ,&_da );_cegc !=nil {return nil ,_cc .Wrap (_cegc ,_ebb ,"");
};};};if _gbb .FullHeaders {if _fc ,_cegc =_gbb .encodeEOFHeader (_gbb ._ag );_cegc !=nil {return nil ,_cc .Wrap (_cegc ,_ebb ,"");};_da +=_fc ;};_bdf =_gbb ._ag .Data ();if len (_bdf )!=_da {_a .Log .Debug ("\u0042\u0079\u0074\u0065\u0073 \u0077\u0072\u0069\u0074\u0074\u0065\u006e \u0028\u006e\u0029\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065\u0071\u0075\u0061\u006c\u0020\u0074\u006f\u0020\u0074\u0068\u0065\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006f\u0066\u0020t\u0068\u0065\u0020\u0064\u0061\u0074\u0061\u0020\u0065\u006e\u0063\u006fd\u0065\u0064\u003a\u0020\u0027\u0025d\u0027",_da ,len (_bdf ));
};return _bdf ,nil ;};func DecodeDocument (input _af .StreamReader ,globals *Globals )(*Document ,error ){return _ebdd (input ,globals );};func (_gcfg *Document )completeSymbols ()(_gf error ){const _ebc ="\u0063o\u006dp\u006c\u0065\u0074\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
if _gcfg .Classer ==nil {return nil ;};if _gcfg .Classer .UndilatedTemplates ==nil {return _cc .Error (_ebc ,"\u006e\u006f t\u0065\u006d\u0070l\u0061\u0074\u0065\u0073 de\u0066in\u0065\u0064\u0020\u0066\u006f\u0072\u0020th\u0065\u0020\u0063\u006c\u0061\u0073\u0073e\u0072");
};_fbg :=len (_gcfg .Pages )==1;_bcfa :=make ([]int ,_gcfg .Classer .UndilatedTemplates .Size ());var _cddf int ;for _efc :=0;_efc < _gcfg .Classer .ClassIDs .Size ();_efc ++{_cddf ,_gf =_gcfg .Classer .ClassIDs .Get (_efc );if _gf !=nil {return _cc .Wrap (_gf ,_ebc ,"\u0063\u006c\u0061\u0073\u0073\u0020\u0049\u0044\u0027\u0073");
};_bcfa [_cddf ]++;};var _ffb []int ;for _eeb :=0;_eeb < _gcfg .Classer .UndilatedTemplates .Size ();_eeb ++{if _bcfa [_eeb ]==0{return _cc .Error (_ebc ,"\u006eo\u0020\u0073y\u006d\u0062\u006f\u006cs\u0020\u0069\u006es\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u0066\u006fun\u0064\u0020\u0066o\u0072\u0020g\u0069\u0076\u0065\u006e\u0020\u0063l\u0061\u0073s\u003f\u0020");
};if _bcfa [_eeb ]> 1||_fbg {_ffb =append (_ffb ,_eeb );};};_gcfg ._b =len (_ffb );var _gbg ,_aea int ;for _eff :=0;_eff < _gcfg .Classer .ComponentPageNumbers .Size ();_eff ++{_gbg ,_gf =_gcfg .Classer .ComponentPageNumbers .Get (_eff );if _gf !=nil {return _cc .Wrapf (_gf ,_ebc ,"p\u0061\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027 \u006e\u006f\u0074\u0020\u0066\u006f\u0075nd\u0020\u0069\u006e\u0020t\u0068\u0065\u0020\u0063\u006c\u0061\u0073\u0073\u0065r \u0070\u0061g\u0065\u006e\u0075\u006d\u0062\u0065\u0072\u0073",_eff );
};_aea ,_gf =_gcfg .Classer .ClassIDs .Get (_eff );if _gf !=nil {return _cc .Wrapf (_gf ,_ebc ,"\u0063\u0061\u006e\u0027\u0074\u0020\u0067e\u0074\u0020\u0073y\u006d\u0062\u006f\u006c \u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0027\u0025\u0064\u0027\u0020\u0066\u0072\u006f\u006d\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072",_gbg );
};if _bcfa [_aea ]==1&&!_fbg {_gcfg ._ef [_gbg ]=append (_gcfg ._ef [_gbg ],_aea );};};if _gf =_gcfg .Classer .ComputeLLCorners ();_gf !=nil {return _cc .Wrap (_gf ,_ebc ,"");};return nil ;};