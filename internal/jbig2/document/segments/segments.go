//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_ae "encoding/binary";_g "errors";_cc "fmt";_ge "github.com/unidoc/unipdf/v3/common";_d "github.com/unidoc/unipdf/v3/internal/bitwise";_fg "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_f "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_cg "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_b "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_gcf "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_fgd "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_fb "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_ad "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_gc "golang.org/x/xerrors";_c "image";_ec "io";_e "math";_cf "strings";_ecc "time";);func (_dcad *TextRegion )decodeSymbolInstances ()error {_efbd ,_ffaf :=_dcad .decodeStripT ();
if _ffaf !=nil {return _ffaf ;};var (_caff int64 ;_ebbff uint32 ;);for _ebbff < _dcad .NumberOfSymbolInstances {_bbbb ,_cbdf :=_dcad .decodeDT ();if _cbdf !=nil {return _cbdf ;};_efbd +=_bbbb ;var _fcac int64 ;_caae :=true ;_dcad ._cfeg =0;for {if _caae {_fcac ,_cbdf =_dcad .decodeDfs ();
if _cbdf !=nil {return _cbdf ;};_caff +=_fcac ;_dcad ._cfeg =_caff ;_caae =false ;}else {_ebdc ,_dcea :=_dcad .decodeIds ();if _gc .Is (_dcea ,_ad .ErrOOB ){break ;};if _dcea !=nil {return _dcea ;};if _ebbff >=_dcad .NumberOfSymbolInstances {break ;};_dcad ._cfeg +=_ebdc +int64 (_dcad .SbDsOffset );
};_gadf ,_deda :=_dcad .decodeCurrentT ();if _deda !=nil {return _deda ;};_fgeb :=_efbd +_gadf ;_agdfc ,_deda :=_dcad .decodeID ();if _deda !=nil {return _deda ;};_cgea ,_deda :=_dcad .decodeRI ();if _deda !=nil {return _deda ;};_fdee ,_deda :=_dcad .decodeIb (_cgea ,_agdfc );
if _deda !=nil {return _deda ;};if _deda =_dcad .blit (_fdee ,_fgeb );_deda !=nil {return _deda ;};_ebbff ++;};};return nil ;};func (_bffd *TextRegion )decodeRdw ()(int64 ,error ){const _abag ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _bffd .IsHuffmanEncoded {if _bffd .SbHuffRDWidth ==3{if _bffd ._cfca ==nil {var (_abdc int ;
_cgfgb error ;);if _bffd .SbHuffFS ==3{_abdc ++;};if _bffd .SbHuffDS ==3{_abdc ++;};if _bffd .SbHuffDT ==3{_abdc ++;};_bffd ._cfca ,_cgfgb =_bffd .getUserTable (_abdc );if _cgfgb !=nil {return 0,_fb .Wrap (_cgfgb ,_abag ,"");};};return _bffd ._cfca .Decode (_bffd ._dfcde );
};_aafb ,_egeg :=_b .GetStandardTable (14+int (_bffd .SbHuffRDWidth ));if _egeg !=nil {return 0,_fb .Wrap (_egeg ,_abag ,"");};return _aafb .Decode (_bffd ._dfcde );};_dfca ,_bdcfg :=_bffd ._abbd .DecodeInt (_bffd ._ffcbc );if _bdcfg !=nil {return 0,_fb .Wrap (_bdcfg ,_abag ,"");
};return int64 (_dfca ),nil ;};func (_gef *GenericRegion )String ()string {_gca :=&_cf .Builder {};_gca .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_gca .WriteString (_gef .RegionSegment .String ()+"\u000a");
_gca .WriteString (_cc .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_gef .UseExtTemplates ));_gca .WriteString (_cc .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_gef .IsTPGDon ));
_gca .WriteString (_cc .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_gef .GBTemplate ));_gca .WriteString (_cc .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_gef .IsMMREncoded ));
_gca .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_gef .GBAtX ));_gca .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_gef .GBAtY ));
_gca .WriteString (_cc .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_gef .GBAtOverride ));return _gca .String ();};func (_dabf *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_gffe int ;
_bgee int32 ;_efgd error ;_eead =int32 (_dabf ._egebf +_dabf .NumberOfNewSymbols );_gaad =make ([]int ,_eead ););for _ddbd :=int32 (0);_ddbd < _eead ;_ddbd +=_bgee {if _dabf .IsHuffmanEncoded {_abgb ,_agdeg :=_b .GetStandardTable (1);if _agdeg !=nil {return nil ,_agdeg ;
};_dbgc ,_agdeg :=_abgb .Decode (_dabf ._gcdf );if _agdeg !=nil {return nil ,_agdeg ;};_bgee =int32 (_dbgc );}else {_bgee ,_efgd =_dabf ._faec .DecodeInt (_dabf ._bfcb );if _efgd !=nil {return nil ,_efgd ;};};if _bgee !=0{for _aeaad :=_ddbd ;_aeaad < _ddbd +_bgee ;
_aeaad ++{_gaad [_aeaad ]=_gffe ;};};if _gffe ==0{_gffe =1;}else {_gffe =0;};};return _gaad ,nil ;};func (_aeeb *Header )writeSegmentDataLength (_aaebe _d .BinaryWriter )(_eegb int ,_cddff error ){_ggac :=make ([]byte ,4);_ae .BigEndian .PutUint32 (_ggac ,uint32 (_aeeb .SegmentDataLength ));
if _eegb ,_cddff =_aaebe .Write (_ggac );_cddff !=nil {return 0,_fb .Wrap (_cddff ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _eegb ,nil ;
};func (_dagb *GenericRefinementRegion )parseHeader ()(_be error ){_ge .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_ffbf :=_ecc .Now ();defer func (){if _be ==nil {_ge .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_ecc .Since (_ffbf ).Nanoseconds ());
}else {_ge .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_be );
};}();if _be =_dagb .RegionInfo .parseHeader ();_be !=nil {return _be ;};_ ,_be =_dagb ._bc .ReadBits (6);if _be !=nil {return _be ;};_dagb .IsTPGROn ,_be =_dagb ._bc .ReadBool ();if _be !=nil {return _be ;};var _adgd int ;_adgd ,_be =_dagb ._bc .ReadBit ();
if _be !=nil {return _be ;};_dagb .TemplateID =int8 (_adgd );switch _dagb .TemplateID {case 0:_dagb .Template =_dagb ._ccg ;if _be =_dagb .readAtPixels ();_be !=nil {return ;};case 1:_dagb .Template =_dagb ._gec ;};return nil ;};func (_edb *GenericRefinementRegion )overrideAtTemplate0 (_aga ,_gda ,_caf ,_aec ,_dag int )int {if _edb ._cgc [0]{_aga &=0xfff7;
if _edb .GrAtY [0]==0&&int (_edb .GrAtX [0])>=-_dag {_aga |=(_aec >>uint (7-(_dag +int (_edb .GrAtX [0])))&0x1)<<3;}else {_aga |=_edb .getPixel (_edb .RegionBitmap ,_gda +int (_edb .GrAtX [0]),_caf +int (_edb .GrAtY [0]))<<3;};};if _edb ._cgc [1]{_aga &=0xefff;
if _edb .GrAtY [1]==0&&int (_edb .GrAtX [1])>=-_dag {_aga |=(_aec >>uint (7-(_dag +int (_edb .GrAtX [1])))&0x1)<<12;}else {_aga |=_edb .getPixel (_edb .ReferenceBitmap ,_gda +int (_edb .GrAtX [1]),_caf +int (_edb .GrAtY [1]));};};return _aga ;};func (_fcga *RegionSegment )Size ()int {return 17};
type HalftoneRegion struct{_abbb _d .StreamReader ;_abcc *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _f .CombinationOperator ;HSkipEnabled bool ;
HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_f .Bitmap ;Patterns []*_f .Bitmap ;};func (_ceeee *SymbolDictionary )readRefinementAtPixels (_dcbd int )error {_ceeee .SdrATX =make ([]int8 ,_dcbd );
_ceeee .SdrATY =make ([]int8 ,_dcbd );var (_abcbe byte ;_gdea error ;);for _agbg :=0;_agbg < _dcbd ;_agbg ++{_abcbe ,_gdea =_ceeee ._gcdf .ReadByte ();if _gdea !=nil {return _gdea ;};_ceeee .SdrATX [_agbg ]=int8 (_abcbe );_abcbe ,_gdea =_ceeee ._gcdf .ReadByte ();
if _gdea !=nil {return _gdea ;};_ceeee .SdrATY [_agbg ]=int8 (_abcbe );};return nil ;};func (_gfd *GenericRegion )overrideAtTemplate2 (_dgg ,_dfdba ,_abg ,_cgdg ,_cdg int )int {_dgg &=0x3FB;if _gfd .GBAtY [0]==0&&_gfd .GBAtX [0]>=-int8 (_cdg ){_dgg |=(_cgdg >>uint (7-(int8 (_cdg )+_gfd .GBAtX [0]))&0x1)<<2;
}else {_dgg |=int (_gfd .getPixel (_dfdba +int (_gfd .GBAtX [0]),_abg +int (_gfd .GBAtY [0])))<<2;};return _dgg ;};func (_egc *GenericRegion )Size ()int {return _egc .RegionSegment .Size ()+1+2*len (_egc .GBAtX )};func _edfda (_bffdg _d .StreamReader ,_fgba *Header )*TextRegion {_fggbd :=&TextRegion {_dfcde :_bffdg ,Header :_fgba ,RegionInfo :NewRegionSegment (_bffdg )};
return _fggbd ;};func (_fabb *TextRegion )decodeRdy ()(int64 ,error ){const _debg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _fabb .IsHuffmanEncoded {if _fabb .SbHuffRDY ==3{if _fabb ._ebcd ==nil {var (_egca int ;_gcegg error ;);if _fabb .SbHuffFS ==3{_egca ++;
};if _fabb .SbHuffDS ==3{_egca ++;};if _fabb .SbHuffDT ==3{_egca ++;};if _fabb .SbHuffRDWidth ==3{_egca ++;};if _fabb .SbHuffRDHeight ==3{_egca ++;};if _fabb .SbHuffRDX ==3{_egca ++;};_fabb ._ebcd ,_gcegg =_fabb .getUserTable (_egca );if _gcegg !=nil {return 0,_fb .Wrap (_gcegg ,_debg ,"");
};};return _fabb ._ebcd .Decode (_fabb ._dfcde );};_eabbec ,_aafe :=_b .GetStandardTable (14+int (_fabb .SbHuffRDY ));if _aafe !=nil {return 0,_aafe ;};return _eabbec .Decode (_fabb ._dfcde );};_beca ,_ecddc :=_fabb ._abbd .DecodeInt (_fabb ._dbde );if _ecddc !=nil {return 0,_fb .Wrap (_ecddc ,_debg ,"");
};return int64 (_beca ),nil ;};func (_cag *GenericRegion )copyLineAbove (_afee int )error {_fca :=_afee *_cag .Bitmap .RowStride ;_fad :=_fca -_cag .Bitmap .RowStride ;for _ead :=0;_ead < _cag .Bitmap .RowStride ;_ead ++{_bba ,_ebaa :=_cag .Bitmap .GetByte (_fad );
if _ebaa !=nil {return _ebaa ;};_fad ++;if _ebaa =_cag .Bitmap .SetByte (_fca ,_bba );_ebaa !=nil {return _ebaa ;};_fca ++;};return nil ;};func (_eeda *PageInformationSegment )checkInput ()error {if _eeda .PageBMHeight ==_e .MaxInt32 {if !_eeda .IsStripe {_ge .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_eeg *GenericRegion )overrideAtTemplate0b (_bbgb ,_aefb ,_cgca ,_dadb ,_cgbda ,_acc int )int {if _eeg .GBAtOverride [0]{_bbgb &=0xFFFD;if _eeg .GBAtY [0]==0&&_eeg .GBAtX [0]>=-int8 (_cgbda ){_bbgb |=(_dadb >>uint (int8 (_acc )-_eeg .GBAtX [0]&0x1))<<1;
}else {_bbgb |=int (_eeg .getPixel (_aefb +int (_eeg .GBAtX [0]),_cgca +int (_eeg .GBAtY [0])))<<1;};};if _eeg .GBAtOverride [1]{_bbgb &=0xDFFF;if _eeg .GBAtY [1]==0&&_eeg .GBAtX [1]>=-int8 (_cgbda ){_bbgb |=(_dadb >>uint (int8 (_acc )-_eeg .GBAtX [1]&0x1))<<13;
}else {_bbgb |=int (_eeg .getPixel (_aefb +int (_eeg .GBAtX [1]),_cgca +int (_eeg .GBAtY [1])))<<13;};};if _eeg .GBAtOverride [2]{_bbgb &=0xFDFF;if _eeg .GBAtY [2]==0&&_eeg .GBAtX [2]>=-int8 (_cgbda ){_bbgb |=(_dadb >>uint (int8 (_acc )-_eeg .GBAtX [2]&0x1))<<9;
}else {_bbgb |=int (_eeg .getPixel (_aefb +int (_eeg .GBAtX [2]),_cgca +int (_eeg .GBAtY [2])))<<9;};};if _eeg .GBAtOverride [3]{_bbgb &=0xBFFF;if _eeg .GBAtY [3]==0&&_eeg .GBAtX [3]>=-int8 (_cgbda ){_bbgb |=(_dadb >>uint (int8 (_acc )-_eeg .GBAtX [3]&0x1))<<14;
}else {_bbgb |=int (_eeg .getPixel (_aefb +int (_eeg .GBAtX [3]),_cgca +int (_eeg .GBAtY [3])))<<14;};};if _eeg .GBAtOverride [4]{_bbgb &=0xEFFF;if _eeg .GBAtY [4]==0&&_eeg .GBAtX [4]>=-int8 (_cgbda ){_bbgb |=(_dadb >>uint (int8 (_acc )-_eeg .GBAtX [4]&0x1))<<12;
}else {_bbgb |=int (_eeg .getPixel (_aefb +int (_eeg .GBAtX [4]),_cgca +int (_eeg .GBAtY [4])))<<12;};};if _eeg .GBAtOverride [5]{_bbgb &=0xFFDF;if _eeg .GBAtY [5]==0&&_eeg .GBAtX [5]>=-int8 (_cgbda ){_bbgb |=(_dadb >>uint (int8 (_acc )-_eeg .GBAtX [5]&0x1))<<5;
}else {_bbgb |=int (_eeg .getPixel (_aefb +int (_eeg .GBAtX [5]),_cgca +int (_eeg .GBAtY [5])))<<5;};};if _eeg .GBAtOverride [6]{_bbgb &=0xFFFB;if _eeg .GBAtY [6]==0&&_eeg .GBAtX [6]>=-int8 (_cgbda ){_bbgb |=(_dadb >>uint (int8 (_acc )-_eeg .GBAtX [6]&0x1))<<2;
}else {_bbgb |=int (_eeg .getPixel (_aefb +int (_eeg .GBAtX [6]),_cgca +int (_eeg .GBAtY [6])))<<2;};};if _eeg .GBAtOverride [7]{_bbgb &=0xFFF7;if _eeg .GBAtY [7]==0&&_eeg .GBAtX [7]>=-int8 (_cgbda ){_bbgb |=(_dadb >>uint (int8 (_acc )-_eeg .GBAtX [7]&0x1))<<3;
}else {_bbgb |=int (_eeg .getPixel (_aefb +int (_eeg .GBAtX [7]),_cgca +int (_eeg .GBAtY [7])))<<3;};};if _eeg .GBAtOverride [8]{_bbgb &=0xF7FF;if _eeg .GBAtY [8]==0&&_eeg .GBAtX [8]>=-int8 (_cgbda ){_bbgb |=(_dadb >>uint (int8 (_acc )-_eeg .GBAtX [8]&0x1))<<11;
}else {_bbgb |=int (_eeg .getPixel (_aefb +int (_eeg .GBAtX [8]),_cgca +int (_eeg .GBAtY [8])))<<11;};};if _eeg .GBAtOverride [9]{_bbgb &=0xFFEF;if _eeg .GBAtY [9]==0&&_eeg .GBAtX [9]>=-int8 (_cgbda ){_bbgb |=(_dadb >>uint (int8 (_acc )-_eeg .GBAtX [9]&0x1))<<4;
}else {_bbgb |=int (_eeg .getPixel (_aefb +int (_eeg .GBAtX [9]),_cgca +int (_eeg .GBAtY [9])))<<4;};};if _eeg .GBAtOverride [10]{_bbgb &=0x7FFF;if _eeg .GBAtY [10]==0&&_eeg .GBAtX [10]>=-int8 (_cgbda ){_bbgb |=(_dadb >>uint (int8 (_acc )-_eeg .GBAtX [10]&0x1))<<15;
}else {_bbgb |=int (_eeg .getPixel (_aefb +int (_eeg .GBAtX [10]),_cgca +int (_eeg .GBAtY [10])))<<15;};};if _eeg .GBAtOverride [11]{_bbgb &=0xFDFF;if _eeg .GBAtY [11]==0&&_eeg .GBAtX [11]>=-int8 (_cgbda ){_bbgb |=(_dadb >>uint (int8 (_acc )-_eeg .GBAtX [11]&0x1))<<10;
}else {_bbgb |=int (_eeg .getPixel (_aefb +int (_eeg .GBAtX [11]),_cgca +int (_eeg .GBAtY [11])))<<10;};};return _bbgb ;};func (_fddc *Header )readDataStartOffset (_fag _d .StreamReader ,_cgdb OrganizationType ){if _cgdb ==OSequential {_fddc .SegmentDataStartOffset =uint64 (_fag .StreamPosition ());
};};func (_abdag *TextRegion )decodeRI ()(int64 ,error ){if !_abdag .UseRefinement {return 0,nil ;};if _abdag .IsHuffmanEncoded {_egfe ,_eeff :=_abdag ._dfcde .ReadBit ();return int64 (_egfe ),_eeff ;};_geec ,_fcgae :=_abdag ._abbd .DecodeInt (_abdag ._aeff );
return int64 (_geec ),_fcgae ;};func (_eegc *Header )referenceSize ()uint {switch {case _eegc .SegmentNumber <=255:return 1;case _eegc .SegmentNumber <=65535:return 2;default:return 4;};};type PageInformationSegment struct{_dgcda _d .StreamReader ;PageBMHeight int ;
PageBMWidth int ;ResolutionX int ;ResolutionY int ;_eaeeg bool ;_caeg _f .CombinationOperator ;_gbcg bool ;DefaultPixelValue uint8 ;_eefb bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_bcfd *HalftoneRegion )GetRegionBitmap ()(*_f .Bitmap ,error ){if _bcfd .HalftoneRegionBitmap !=nil {return _bcfd .HalftoneRegionBitmap ,nil ;
};var _eag error ;_bcfd .HalftoneRegionBitmap =_f .New (int (_bcfd .RegionSegment .BitmapWidth ),int (_bcfd .RegionSegment .BitmapHeight ));if _bcfd .Patterns ==nil ||len (_bcfd .Patterns )==0{_bcfd .Patterns ,_eag =_bcfd .GetPatterns ();if _eag !=nil {return nil ,_eag ;
};};if _bcfd .HDefaultPixel ==1{_bcfd .HalftoneRegionBitmap .SetDefaultPixel ();};_cegf :=_e .Ceil (_e .Log (float64 (len (_bcfd .Patterns )))/_e .Log (2));_bea :=int (_cegf );var _bae [][]int ;_bae ,_eag =_bcfd .grayScaleDecoding (_bea );if _eag !=nil {return nil ,_eag ;
};if _eag =_bcfd .renderPattern (_bae );_eag !=nil {return nil ,_eag ;};return _bcfd .HalftoneRegionBitmap ,nil ;};func (_ccdf *Header )writeReferredToSegments (_fcb _d .BinaryWriter )(_ddfg int ,_aacb error ){const _gfegc ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_gbf uint16 ;_fdff uint32 ;);_cagg :=_ccdf .referenceSize ();_eaba :=1;_fafc :=make ([]byte ,_cagg );for _ ,_dfdc :=range _ccdf .RTSNumbers {switch _cagg {case 4:_fdff =uint32 (_dfdc );_ae .BigEndian .PutUint32 (_fafc ,_fdff );_eaba ,_aacb =_fcb .Write (_fafc );
if _aacb !=nil {return 0,_fb .Wrap (_aacb ,_gfegc ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_gbf =uint16 (_dfdc );_ae .BigEndian .PutUint16 (_fafc ,_gbf );_eaba ,_aacb =_fcb .Write (_fafc );if _aacb !=nil {return 0,_fb .Wrap (_aacb ,_gfegc ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _aacb =_fcb .WriteByte (byte (_dfdc ));_aacb !=nil {return 0,_fb .Wrap (_aacb ,_gfegc ,"\u0075\u0069\u006et\u0038");};};_ddfg +=_eaba ;};return _ddfg ,nil ;};func (_ccbe *GenericRefinementRegion )String ()string {_ggf :=&_cf .Builder {};_ggf .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_ggf .WriteString (_ccbe .RegionInfo .String ()+"\u000a");_ggf .WriteString (_cc .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ccbe .IsTPGROn ));_ggf .WriteString (_cc .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_ccbe .TemplateID ));
_ggf .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_ccbe .GrAtX ));_ggf .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_ccbe .GrAtY ));
_ggf .WriteString (_cc .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_ccbe .ReferenceDX ));_ggf .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_ccbe .ReferenceDY ));
return _ggf .String ();};func (_cbb *GenericRefinementRegion )decodeTypicalPredictedLine (_egg ,_gbe ,_df ,_ed ,_bcf ,_bab int )error {_cfea :=_egg -int (_cbb .ReferenceDY );_agc :=_cbb .ReferenceBitmap .GetByteIndex (0,_cfea );_gac :=_cbb .RegionBitmap .GetByteIndex (0,_egg );
var _cab error ;switch _cbb .TemplateID {case 0:_cab =_cbb .decodeTypicalPredictedLineTemplate0 (_egg ,_gbe ,_df ,_ed ,_bcf ,_bab ,_gac ,_cfea ,_agc );case 1:_cab =_cbb .decodeTypicalPredictedLineTemplate1 (_egg ,_gbe ,_df ,_ed ,_bcf ,_bab ,_gac ,_cfea ,_agc );
};return _cab ;};func (_fdca *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _bfede ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _fdca .SbHuffRSize ==0{_cfdfb ,_dggf :=_b .GetStandardTable (1);if _dggf !=nil {return 0,_fb .Wrap (_dggf ,_bfede ,"");
};return _cfdfb .Decode (_fdca ._dfcde );};if _fdca ._fgdgd ==nil {var (_afce int ;_aceb error ;);if _fdca .SbHuffFS ==3{_afce ++;};if _fdca .SbHuffDS ==3{_afce ++;};if _fdca .SbHuffDT ==3{_afce ++;};if _fdca .SbHuffRDWidth ==3{_afce ++;};if _fdca .SbHuffRDHeight ==3{_afce ++;
};if _fdca .SbHuffRDX ==3{_afce ++;};if _fdca .SbHuffRDY ==3{_afce ++;};_fdca ._fgdgd ,_aceb =_fdca .getUserTable (_afce );if _aceb !=nil {return 0,_fb .Wrap (_aceb ,_bfede ,"");};};_eebg ,_dadg :=_fdca ._fgdgd .Decode (_fdca ._dfcde );if _dadg !=nil {return 0,_fb .Wrap (_dadg ,_bfede ,"");
};return _eebg ,nil ;};func (_dfaa *RegionSegment )Encode (w _d .BinaryWriter )(_abad int ,_edgf error ){const _gfgd ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_ffbb :=make ([]byte ,4);_ae .BigEndian .PutUint32 (_ffbb ,_dfaa .BitmapWidth );
_abad ,_edgf =w .Write (_ffbb );if _edgf !=nil {return 0,_fb .Wrap (_edgf ,_gfgd ,"\u0057\u0069\u0064t\u0068");};_ae .BigEndian .PutUint32 (_ffbb ,_dfaa .BitmapHeight );var _baef int ;_baef ,_edgf =w .Write (_ffbb );if _edgf !=nil {return 0,_fb .Wrap (_edgf ,_gfgd ,"\u0048\u0065\u0069\u0067\u0068\u0074");
};_abad +=_baef ;_ae .BigEndian .PutUint32 (_ffbb ,_dfaa .XLocation );_baef ,_edgf =w .Write (_ffbb );if _edgf !=nil {return 0,_fb .Wrap (_edgf ,_gfgd ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_abad +=_baef ;_ae .BigEndian .PutUint32 (_ffbb ,_dfaa .YLocation );
_baef ,_edgf =w .Write (_ffbb );if _edgf !=nil {return 0,_fb .Wrap (_edgf ,_gfgd ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_abad +=_baef ;if _edgf =w .WriteByte (byte (_dfaa .CombinaionOperator )&0x07);_edgf !=nil {return 0,_fb .Wrap (_edgf ,_gfgd ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");
};_abad ++;return _abad ,nil ;};func (_bdac *SymbolDictionary )encodeFlags (_fgcd _d .BinaryWriter )(_dgdc int ,_acbg error ){const _dgdd ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _acbg =_fgcd .SkipBits (3);_acbg !=nil {return 0,_fb .Wrap (_acbg ,_dgdd ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");
};var _gbac int ;if _bdac .SdrTemplate > 0{_gbac =1;};if _acbg =_fgcd .WriteBit (_gbac );_acbg !=nil {return _dgdc ,_fb .Wrap (_acbg ,_dgdd ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_gbac =0;if _bdac .SdTemplate > 1{_gbac =1;};
if _acbg =_fgcd .WriteBit (_gbac );_acbg !=nil {return _dgdc ,_fb .Wrap (_acbg ,_dgdd ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_gbac =0;if _bdac .SdTemplate ==1||_bdac .SdTemplate ==3{_gbac =1;};if _acbg =_fgcd .WriteBit (_gbac );
_acbg !=nil {return _dgdc ,_fb .Wrap (_acbg ,_dgdd ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_gbac =0;if _bdac ._gedf {_gbac =1;};if _acbg =_fgcd .WriteBit (_gbac );_acbg !=nil {return _dgdc ,_fb .Wrap (_acbg ,_dgdd ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_gbac =0;if _bdac ._gdfe {_gbac =1;};if _acbg =_fgcd .WriteBit (_gbac );_acbg !=nil {return _dgdc ,_fb .Wrap (_acbg ,_dgdd ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_gbac =0;if _bdac .SdHuffAggInstanceSelection {_gbac =1;
};if _acbg =_fgcd .WriteBit (_gbac );_acbg !=nil {return _dgdc ,_fb .Wrap (_acbg ,_dgdd ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_gbac =int (_bdac .SdHuffBMSizeSelection );if _acbg =_fgcd .WriteBit (_gbac );_acbg !=nil {return _dgdc ,_fb .Wrap (_acbg ,_dgdd ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");
};_gbac =0;if _bdac .SdHuffDecodeWidthSelection > 1{_gbac =1;};if _acbg =_fgcd .WriteBit (_gbac );_acbg !=nil {return _dgdc ,_fb .Wrap (_acbg ,_dgdd ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_gbac =0;switch _bdac .SdHuffDecodeWidthSelection {case 1,3:_gbac =1;
};if _acbg =_fgcd .WriteBit (_gbac );_acbg !=nil {return _dgdc ,_fb .Wrap (_acbg ,_dgdd ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_gbac =0;if _bdac .SdHuffDecodeHeightSelection > 1{_gbac =1;};if _acbg =_fgcd .WriteBit (_gbac );
_acbg !=nil {return _dgdc ,_fb .Wrap (_acbg ,_dgdd ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_gbac =0;switch _bdac .SdHuffDecodeHeightSelection {case 1,3:_gbac =1;};if _acbg =_fgcd .WriteBit (_gbac );_acbg !=nil {return _dgdc ,_fb .Wrap (_acbg ,_dgdd ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");
};_gbac =0;if _bdac .UseRefinementAggregation {_gbac =1;};if _acbg =_fgcd .WriteBit (_gbac );_acbg !=nil {return _dgdc ,_fb .Wrap (_acbg ,_dgdd ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_gbac =0;if _bdac .IsHuffmanEncoded {_gbac =1;};if _acbg =_fgcd .WriteBit (_gbac );
_acbg !=nil {return _dgdc ,_fb .Wrap (_acbg ,_dgdd ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_bd *GenericRefinementRegion )GetRegionBitmap ()(*_f .Bitmap ,error ){var _db error ;_ge .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _db !=nil {_ge .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_db );
}else {_ge .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _bd .RegionBitmap !=nil {return _bd .RegionBitmap ,nil ;};_bg :=0;if _bd .ReferenceBitmap ==nil {_bd .ReferenceBitmap ,_db =_bd .getGrReference ();if _db !=nil {return nil ,_db ;};};if _bd ._fd ==nil {_bd ._fd ,_db =_cg .New (_bd ._bc );if _db !=nil {return nil ,_db ;
};};if _bd ._ecf ==nil {_bd ._ecf =_cg .NewStats (8192,1);};_bd .RegionBitmap =_f .New (int (_bd .RegionInfo .BitmapWidth ),int (_bd .RegionInfo .BitmapHeight ));if _bd .TemplateID ==0{if _db =_bd .updateOverride ();_db !=nil {return nil ,_db ;};};_ba :=(_bd .RegionBitmap .Width +7)&-8;
var _cd int ;if _bd .IsTPGROn {_cd =int (-_bd .ReferenceDY )*_bd .ReferenceBitmap .RowStride ;};_ag :=_cd +1;for _cfe :=0;_cfe < _bd .RegionBitmap .Height ;_cfe ++{if _bd .IsTPGROn {_dg ,_cfd :=_bd .decodeSLTP ();if _cfd !=nil {return nil ,_cfd ;};_bg ^=_dg ;
};if _bg ==0{_db =_bd .decodeOptimized (_cfe ,_bd .RegionBitmap .Width ,_bd .RegionBitmap .RowStride ,_bd .ReferenceBitmap .RowStride ,_ba ,_cd ,_ag );if _db !=nil {return nil ,_db ;};}else {_db =_bd .decodeTypicalPredictedLine (_cfe ,_bd .RegionBitmap .Width ,_bd .RegionBitmap .RowStride ,_bd .ReferenceBitmap .RowStride ,_ba ,_cd );
if _db !=nil {return nil ,_db ;};};};return _bd .RegionBitmap ,nil ;};func (_dafa *PageInformationSegment )Init (h *Header ,r _d .StreamReader )(_agdf error ){_dafa ._dgcda =r ;if _agdf =_dafa .parseHeader ();_agdf !=nil {return _fb .Wrap (_agdf ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_cbd *GenericRegion )setParameters (_cfcdb bool ,_bff ,_gbag int64 ,_accf ,_dee uint32 ){_cbd .IsMMREncoded =_cfcdb ;_cbd .DataOffset =_bff ;_cbd .DataLength =_gbag ;_cbd .RegionSegment .BitmapHeight =_accf ;_cbd .RegionSegment .BitmapWidth =_dee ;
_cbd ._fggc =nil ;_cbd .Bitmap =nil ;};func (_cfedg *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_ebee ,_dec :=_cfedg ._dgcda .ReadBit ();if _dec !=nil {return _dec ;};if _ebee ==1{_cfedg ._gbcg =true ;};return nil ;};func (_efga *RegionSegment )readCombinationOperator ()error {_cgdf ,_ggbc :=_efga ._ddfc .ReadBits (3);
if _ggbc !=nil {return _ggbc ;};_efga .CombinaionOperator =_f .CombinationOperator (_cgdf &0xF);return nil ;};func (_fdea *SymbolDictionary )encodeSymbols (_ddfcd _d .BinaryWriter )(_ebgc int ,_bdee error ){const _ceag ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_afbc :=_fgd .New ();_afbc .Init ();_fedc ,_bdee :=_fdea ._edfef .SelectByIndexes (_fdea ._ddcc );if _bdee !=nil {return 0,_fb .Wrap (_bdee ,_ceag ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_cadd :=map[*_f .Bitmap ]int {};for _abcf ,_bcdb :=range _fedc .Values {_cadd [_bcdb ]=_abcf ;
};_fedc .SortByHeight ();var _bbfe ,_ggae int ;_fdaf ,_bdee :=_fedc .GroupByHeight ();if _bdee !=nil {return 0,_fb .Wrap (_bdee ,_ceag ,"");};for _ ,_dgea :=range _fdaf .Values {_fcgcd :=_dgea .Values [0].Height ;_aebe :=_fcgcd -_bbfe ;if _bdee =_afbc .EncodeInteger (_fgd .IADH ,_aebe );
_bdee !=nil {return 0,_fb .Wrapf (_bdee ,_ceag ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_aebe );};_bbfe =_fcgcd ;_efee ,_gbbf :=_dgea .GroupByWidth ();if _gbbf !=nil {return 0,_fb .Wrapf (_gbbf ,_ceag ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_fcgcd );
};var _dccb int ;for _ ,_ggca :=range _efee .Values {for _ ,_aabb :=range _ggca .Values {_ggcg :=_aabb .Width ;_gcc :=_ggcg -_dccb ;if _gbbf =_afbc .EncodeInteger (_fgd .IADW ,_gcc );_gbbf !=nil {return 0,_fb .Wrapf (_gbbf ,_ceag ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_gcc );
};_dccb +=_gcc ;if _gbbf =_afbc .EncodeBitmap (_aabb ,false );_gbbf !=nil {return 0,_fb .Wrapf (_gbbf ,_ceag ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_fcgcd ,_ggcg );};_fgac :=_cadd [_aabb ];_fdea ._gefc [_fgac ]=_ggae ;
_ggae ++;};};if _gbbf =_afbc .EncodeOOB (_fgd .IADW );_gbbf !=nil {return 0,_fb .Wrap (_gbbf ,_ceag ,"\u0049\u0041\u0044\u0057");};};if _bdee =_afbc .EncodeInteger (_fgd .IAEX ,0);_bdee !=nil {return 0,_fb .Wrap (_bdee ,_ceag ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _bdee =_afbc .EncodeInteger (_fgd .IAEX ,len (_fdea ._ddcc ));_bdee !=nil {return 0,_fb .Wrap (_bdee ,_ceag ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_afbc .Final ();_cfffa ,_bdee :=_afbc .WriteTo (_ddfcd );
if _bdee !=nil {return 0,_fb .Wrap (_bdee ,_ceag ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_cfffa ),nil ;};func (_ebdf *PatternDictionary )GetDictionary ()([]*_f .Bitmap ,error ){if _ebdf .Patterns !=nil {return _ebdf .Patterns ,nil ;};if !_ebdf .IsMMREncoded {_ebdf .setGbAtPixels ();};_egde :=NewGenericRegion (_ebdf ._cbef );_egde .setParametersMMR (_ebdf .IsMMREncoded ,_ebdf .DataOffset ,_ebdf .DataLength ,uint32 (_ebdf .HdpHeight ),(_ebdf .GrayMax +1)*uint32 (_ebdf .HdpWidth ),_ebdf .HDTemplate ,false ,false ,_ebdf .GBAtX ,_ebdf .GBAtY );
_eddc ,_dbdae :=_egde .GetRegionBitmap ();if _dbdae !=nil {return nil ,_dbdae ;};if _dbdae =_ebdf .extractPatterns (_eddc );_dbdae !=nil {return nil ,_dbdae ;};return _ebdf .Patterns ,nil ;};type TableSegment struct{_gcaef _d .StreamReader ;_bfbga int32 ;
_gagb int32 ;_feag int32 ;_aeaac int32 ;_gegb int32 ;};func (_cead *PageInformationSegment )encodeFlags (_efd _d .BinaryWriter )(_cfdf error ){const _gace ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _cfdf =_efd .SkipBits (1);_cfdf !=nil {return _fb .Wrap (_cfdf ,_gace ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");
};var _cfdfc int ;if _cead .CombinationOperatorOverrideAllowed (){_cfdfc =1;};if _cfdf =_efd .WriteBit (_cfdfc );_cfdf !=nil {return _fb .Wrap (_cfdf ,_gace ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");
};_cfdfc =0;if _cead ._gbcg {_cfdfc =1;};if _cfdf =_efd .WriteBit (_cfdfc );_cfdf !=nil {return _fb .Wrap (_cfdf ,_gace ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _cfdf =_efd .WriteBit ((int (_cead ._caeg )>>1)&0x01);
_cfdf !=nil {return _fb .Wrap (_cfdf ,_gace ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _cfdf =_efd .WriteBit (int (_cead ._caeg )&0x01);
_cfdf !=nil {return _fb .Wrap (_cfdf ,_gace ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_cfdfc =int (_cead .DefaultPixelValue );
if _cfdf =_efd .WriteBit (_cfdfc );_cfdf !=nil {return _fb .Wrap (_cfdf ,_gace ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_cfdfc =0;if _cead ._eefb {_cfdfc =1;
};if _cfdf =_efd .WriteBit (_cfdfc );_cfdf !=nil {return _fb .Wrap (_cfdf ,_gace ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_cfdfc =0;if _cead .IsLossless {_cfdfc =1;};if _cfdf =_efd .WriteBit (_cfdfc );
_cfdf !=nil {return _fb .Wrap (_cfdf ,_gace ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_fe *GenericRefinementRegion )getGrReference ()(*_f .Bitmap ,error ){segments :=_fe ._dc .RTSegments ;
if len (segments )==0{return nil ,_g .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_cda ,_gd :=segments [0].GetSegmentData ();if _gd !=nil {return nil ,_gd ;
};_bdd ,_bgg :=_cda .(Regioner );if !_bgg {return nil ,_cc .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_cda );
};return _bdd .GetRegionBitmap ();};func (_cbdc *TextRegion )encodeSymbols (_febf _d .BinaryWriter )(_bacf int ,_eedce error ){const _ccgac ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";_becad :=make ([]byte ,4);_ae .BigEndian .PutUint32 (_becad ,_cbdc .NumberOfSymbols );
if _bacf ,_eedce =_febf .Write (_becad );_eedce !=nil {return _bacf ,_fb .Wrap (_eedce ,_ccgac ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");};_edfb ,_eedce :=_f .NewClassedPoints (_cbdc ._fgaf ,_cbdc ._dfge );
if _eedce !=nil {return 0,_fb .Wrap (_eedce ,_ccgac ,"");};var _gaae ,_cafd int ;_gdbb :=_fgd .New ();_gdbb .Init ();if _eedce =_gdbb .EncodeInteger (_fgd .IADT ,0);_eedce !=nil {return _bacf ,_fb .Wrap (_eedce ,_ccgac ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_ebad ,_eedce :=_edfb .GroupByY ();if _eedce !=nil {return 0,_fb .Wrap (_eedce ,_ccgac ,"");};for _ ,_agef :=range _ebad {_cgfec :=int (_agef .YAtIndex (0));_febb :=_cgfec -_gaae ;if _eedce =_gdbb .EncodeInteger (_fgd .IADT ,_febb );_eedce !=nil {return _bacf ,_fb .Wrap (_eedce ,_ccgac ,"");
};var _cecg int ;for _bfcf ,_agffg :=range _agef .IntSlice {switch _bfcf {case 0:_fcad :=int (_agef .XAtIndex (_bfcf ))-_cafd ;if _eedce =_gdbb .EncodeInteger (_fgd .IAFS ,_fcad );_eedce !=nil {return _bacf ,_fb .Wrap (_eedce ,_ccgac ,"");};_cafd +=_fcad ;
_cecg =_cafd ;default:_aedg :=int (_agef .XAtIndex (_bfcf ))-_cecg ;if _eedce =_gdbb .EncodeInteger (_fgd .IADS ,_aedg );_eedce !=nil {return _bacf ,_fb .Wrap (_eedce ,_ccgac ,"");};_cecg +=_aedg ;};_geac ,_abab :=_cbdc ._eefd .Get (_agffg );if _abab !=nil {return _bacf ,_fb .Wrap (_abab ,_ccgac ,"");
};_ffed ,_aeebb :=_cbdc ._ebed [_geac ];if !_aeebb {_ffed ,_aeebb =_cbdc ._acbd [_geac ];if !_aeebb {return _bacf ,_fb .Errorf (_ccgac ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_geac );
};};if _abab =_gdbb .EncodeIAID (_cbdc ._efeb ,_ffed );_abab !=nil {return _bacf ,_fb .Wrap (_abab ,_ccgac ,"");};};if _eedce =_gdbb .EncodeOOB (_fgd .IADS );_eedce !=nil {return _bacf ,_fb .Wrap (_eedce ,_ccgac ,"");};};_gdbb .Final ();_ggfa ,_eedce :=_gdbb .WriteTo (_febf );
if _eedce !=nil {return _bacf ,_fb .Wrap (_eedce ,_ccgac ,"");};_bacf +=int (_ggfa );return _bacf ,nil ;};func (_gcfee *SymbolDictionary )addSymbol (_efbb Regioner )error {_ffcb ,_fgbe :=_efbb .GetRegionBitmap ();if _fgbe !=nil {return _fgbe ;};_gcfee ._bbbd [_gcfee ._eage ]=_ffcb ;
_gcfee ._fcfg =append (_gcfee ._fcfg ,_ffcb );_ge .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_ffcb );return nil ;};func (_eabbe *TableSegment )HtLow ()int32 {return _eabbe ._aeaac };
func (_ecdd *TextRegion )decodeID ()(int64 ,error ){if _ecdd .IsHuffmanEncoded {if _ecdd ._acgae ==nil {_cadde ,_fddd :=_ecdd ._dfcde .ReadBits (byte (_ecdd ._cega ));return int64 (_cadde ),_fddd ;};return _ecdd ._acgae .Decode (_ecdd ._dfcde );};return _ecdd ._abbd .DecodeIAID (uint64 (_ecdd ._cega ),_ecdd ._ebgga );
};var _ templater =&template1 {};func (_feeea *SymbolDictionary )readAtPixels (_eedgb int )error {_feeea .SdATX =make ([]int8 ,_eedgb );_feeea .SdATY =make ([]int8 ,_eedgb );var (_eaea byte ;_agdg error ;);for _cbeff :=0;_cbeff < _eedgb ;_cbeff ++{_eaea ,_agdg =_feeea ._gcdf .ReadByte ();
if _agdg !=nil {return _agdg ;};_feeea .SdATX [_cbeff ]=int8 (_eaea );_eaea ,_agdg =_feeea ._gcdf .ReadByte ();if _agdg !=nil {return _agdg ;};_feeea .SdATY [_cbeff ]=int8 (_eaea );};return nil ;};func (_cfae *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _cfae .RegionSegment };
func (_cebb *PageInformationSegment )parseHeader ()(_gggg error ){_ge .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _ccfg ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _gggg !=nil {_ccfg +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_gggg .Error ();}else {_ccfg +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_ge .Log .Trace (_ccfg );}();if _gggg =_cebb .readWidthAndHeight ();
_gggg !=nil {return _gggg ;};if _gggg =_cebb .readResolution ();_gggg !=nil {return _gggg ;};_ ,_gggg =_cebb ._dgcda .ReadBit ();if _gggg !=nil {return _gggg ;};if _gggg =_cebb .readCombinationOperatorOverrideAllowed ();_gggg !=nil {return _gggg ;};if _gggg =_cebb .readRequiresAuxiliaryBuffer ();
_gggg !=nil {return _gggg ;};if _gggg =_cebb .readCombinationOperator ();_gggg !=nil {return _gggg ;};if _gggg =_cebb .readDefaultPixelValue ();_gggg !=nil {return _gggg ;};if _gggg =_cebb .readContainsRefinement ();_gggg !=nil {return _gggg ;};if _gggg =_cebb .readIsLossless ();
_gggg !=nil {return _gggg ;};if _gggg =_cebb .readIsStriped ();_gggg !=nil {return _gggg ;};if _gggg =_cebb .readMaxStripeSize ();_gggg !=nil {return _gggg ;};if _gggg =_cebb .checkInput ();_gggg !=nil {return _gggg ;};_ge .Log .Trace ("\u0025\u0073",_cebb );
return nil ;};func (_eabd *Header )writeReferredToCount (_fecb _d .BinaryWriter )(_agd int ,_fbdfa error ){const _acaa ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_eabd .RTSNumbers =make ([]int ,len (_eabd .RTSegments ));
for _cfbc ,_abgg :=range _eabd .RTSegments {_eabd .RTSNumbers [_cfbc ]=int (_abgg .SegmentNumber );};if len (_eabd .RTSNumbers )<=4{var _cced byte ;if len (_eabd .RetainBits )>=1{_cced =_eabd .RetainBits [0];};_cced |=byte (len (_eabd .RTSNumbers ))<<5;
if _fbdfa =_fecb .WriteByte (_cced );_fbdfa !=nil {return 0,_fb .Wrap (_fbdfa ,_acaa ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_bdaa :=uint32 (len (_eabd .RTSNumbers ));_agae :=make ([]byte ,4+_fg .Ceil (len (_eabd .RTSNumbers )+1,8));
_bdaa |=0x7<<29;_ae .BigEndian .PutUint32 (_agae ,_bdaa );copy (_agae [1:],_eabd .RetainBits );_agd ,_fbdfa =_fecb .Write (_agae );if _fbdfa !=nil {return 0,_fb .Wrap (_fbdfa ,_acaa ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _agd ,nil ;
};func (_bgbe *HalftoneRegion )combineGrayscalePlanes (_gfge []*_f .Bitmap ,_defe int )error {_cgfd :=0;for _eaf :=0;_eaf < _gfge [_defe ].Height ;_eaf ++{for _aba :=0;_aba < _gfge [_defe ].Width ;_aba +=8{_ceec ,_cbfe :=_gfge [_defe +1].GetByte (_cgfd );
if _cbfe !=nil {return _cbfe ;};_egab ,_cbfe :=_gfge [_defe ].GetByte (_cgfd );if _cbfe !=nil {return _cbfe ;};_cbfe =_gfge [_defe ].SetByte (_cgfd ,_f .CombineBytes (_egab ,_ceec ,_f .CmbOpXor ));if _cbfe !=nil {return _cbfe ;};_cgfd ++;};};return nil ;
};func (_gacbd *Header )subInputReader ()(_d .StreamReader ,error ){return _d .NewSubstreamReader (_gacbd .Reader ,_gacbd .SegmentDataStartOffset ,_gacbd .SegmentDataLength );};func (_fde *PageInformationSegment )readIsStriped ()error {_ccga ,_gafg :=_fde ._dgcda .ReadBit ();
if _gafg !=nil {return _gafg ;};if _ccga ==1{_fde .IsStripe =true ;};return nil ;};func (_fgc *GenericRefinementRegion )decodeOptimized (_bga ,_da ,_bdc ,_fef ,_ace ,_ca ,_bf int )error {var (_ccd error ;_dd int ;_ffg int ;);_dge :=_bga -int (_fgc .ReferenceDY );
if _eg :=int (-_fgc .ReferenceDX );_eg > 0{_dd =_eg ;};_egf :=_fgc .ReferenceBitmap .GetByteIndex (_dd ,_dge );if _fgc .ReferenceDX > 0{_ffg =int (_fgc .ReferenceDX );};_cb :=_fgc .RegionBitmap .GetByteIndex (_ffg ,_bga );switch _fgc .TemplateID {case 0:_ccd =_fgc .decodeTemplate (_bga ,_da ,_bdc ,_fef ,_ace ,_ca ,_bf ,_cb ,_dge ,_egf ,_fgc ._ccg );
case 1:_ccd =_fgc .decodeTemplate (_bga ,_da ,_bdc ,_fef ,_ace ,_ca ,_bf ,_cb ,_dge ,_egf ,_fgc ._gec );};return _ccd ;};func (_fgce *SymbolDictionary )setExportedSymbols (_afbcb []int ){for _geff :=uint32 (0);_geff < _fgce ._egebf +_fgce .NumberOfNewSymbols ;
_geff ++{if _afbcb [_geff ]==1{var _faed *_f .Bitmap ;if _geff < _fgce ._egebf {_faed =_fgce ._debc [_geff ];}else {_faed =_fgce ._bbbd [_geff -_fgce ._egebf ];};_ge .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_faed );
_fgce ._fadd =append (_fgce ._fadd ,_faed );};};};func (_gdgb *SymbolDictionary )Init (h *Header ,r _d .StreamReader )error {_gdgb .Header =h ;_gdgb ._gcdf =r ;return _gdgb .parseHeader ();};type TextRegion struct{_dfcde _d .StreamReader ;RegionInfo *RegionSegment ;
SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _f .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;
SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_cfeg int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_f .Bitmap ;Symbols []*_f .Bitmap ;_abbd *_cg .Decoder ;
_fdfgc *GenericRefinementRegion ;_fecba *_cg .DecoderStats ;_fedf *_cg .DecoderStats ;_gfc *_cg .DecoderStats ;_bgfgc *_cg .DecoderStats ;_aeff *_cg .DecoderStats ;_ffcbc *_cg .DecoderStats ;_fgge *_cg .DecoderStats ;_ebgga *_cg .DecoderStats ;_abgge *_cg .DecoderStats ;
_dbde *_cg .DecoderStats ;_aefd *_cg .DecoderStats ;_cega int8 ;_acgae *_b .FixedSizeTable ;Header *Header ;_aafa _b .Tabler ;_acgg _b .Tabler ;_bgbf _b .Tabler ;_cfca _b .Tabler ;_agdc _b .Tabler ;_fbf _b .Tabler ;_ebcd _b .Tabler ;_fgdgd _b .Tabler ;
_ebed ,_acbd map[int ]int ;_dfge []int ;_fgaf *_f .Points ;_cfcaf *_f .Bitmaps ;_eefd *_fg .IntSlice ;_ccfd ,_efeb int ;_adadf *_f .Boxes ;};func (_bdb *PageInformationSegment )readResolution ()error {_dffb ,_dedc :=_bdb ._dgcda .ReadBits (32);if _dedc !=nil {return _dedc ;
};_bdb .ResolutionX =int (_dffb &_e .MaxInt32 );_dffb ,_dedc =_bdb ._dgcda .ReadBits (32);if _dedc !=nil {return _dedc ;};_bdb .ResolutionY =int (_dffb &_e .MaxInt32 );return nil ;};type OrganizationType uint8 ;func (_eac *GenericRegion )setOverrideFlag (_cbfb int ){_eac .GBAtOverride [_cbfb ]=true ;
_eac ._cbbfc =true ;};func (_gge *HalftoneRegion )Init (hd *Header ,r _d .StreamReader )error {_gge ._abbb =r ;_gge ._abcc =hd ;_gge .RegionSegment =NewRegionSegment (r );return _gge .parseHeader ();};type EndOfStripe struct{_gb _d .StreamReader ;_gg int ;
};func (_cbg *GenericRegion )overrideAtTemplate0a (_edbb ,_abe ,_ebd ,_bgae ,_dbd ,_dbbe int )int {if _cbg .GBAtOverride [0]{_edbb &=0xFFEF;if _cbg .GBAtY [0]==0&&_cbg .GBAtX [0]>=-int8 (_dbd ){_edbb |=(_bgae >>uint (int8 (_dbbe )-_cbg .GBAtX [0]&0x1))<<4;
}else {_edbb |=int (_cbg .getPixel (_abe +int (_cbg .GBAtX [0]),_ebd +int (_cbg .GBAtY [0])))<<4;};};if _cbg .GBAtOverride [1]{_edbb &=0xFBFF;if _cbg .GBAtY [1]==0&&_cbg .GBAtX [1]>=-int8 (_dbd ){_edbb |=(_bgae >>uint (int8 (_dbbe )-_cbg .GBAtX [1]&0x1))<<10;
}else {_edbb |=int (_cbg .getPixel (_abe +int (_cbg .GBAtX [1]),_ebd +int (_cbg .GBAtY [1])))<<10;};};if _cbg .GBAtOverride [2]{_edbb &=0xF7FF;if _cbg .GBAtY [2]==0&&_cbg .GBAtX [2]>=-int8 (_dbd ){_edbb |=(_bgae >>uint (int8 (_dbbe )-_cbg .GBAtX [2]&0x1))<<11;
}else {_edbb |=int (_cbg .getPixel (_abe +int (_cbg .GBAtX [2]),_ebd +int (_cbg .GBAtY [2])))<<11;};};if _cbg .GBAtOverride [3]{_edbb &=0x7FFF;if _cbg .GBAtY [3]==0&&_cbg .GBAtX [3]>=-int8 (_dbd ){_edbb |=(_bgae >>uint (int8 (_dbbe )-_cbg .GBAtX [3]&0x1))<<15;
}else {_edbb |=int (_cbg .getPixel (_abe +int (_cbg .GBAtX [3]),_ebd +int (_cbg .GBAtY [3])))<<15;};};return _edbb ;};func (_afgd *PageInformationSegment )readWidthAndHeight ()error {_fbdfe ,_gbfc :=_afgd ._dgcda .ReadBits (32);if _gbfc !=nil {return _gbfc ;
};_afgd .PageBMWidth =int (_fbdfe &_e .MaxInt32 );_fbdfe ,_gbfc =_afgd ._dgcda .ReadBits (32);if _gbfc !=nil {return _gbfc ;};_afgd .PageBMHeight =int (_fbdfe &_e .MaxInt32 );return nil ;};func (_gce *PatternDictionary )checkInput ()error {if _gce .HdpHeight < 1||_gce .HdpWidth < 1{return _g .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _gce .IsMMREncoded {if _gce .HDTemplate !=0{_ge .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};type RegionSegment struct{_ddfc _d .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _f .CombinationOperator ;};func (_ddc *GenericRegion )decodeTemplate2 (_eeac ,_dde ,_becb int ,_cfbe ,_gad int )(_bagb error ){const _aefe ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_eccd ,_baf int ;_gbgf ,_ccf int ;_dfdb byte ;_ccce ,_agce int ;);if _eeac >=1{_dfdb ,_bagb =_ddc .Bitmap .GetByte (_gad );if _bagb !=nil {return _fb .Wrap (_bagb ,_aefe ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_gbgf =int (_dfdb );};if _eeac >=2{_dfdb ,_bagb =_ddc .Bitmap .GetByte (_gad -_ddc .Bitmap .RowStride );if _bagb !=nil {return _fb .Wrap (_bagb ,_aefe ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_ccf =int (_dfdb )<<4;
};_eccd =(_gbgf >>3&0x7c)|(_ccf >>3&0x380);for _bgb :=0;_bgb < _becb ;_bgb =_ccce {var (_gbce byte ;_gfg int ;);_ccce =_bgb +8;if _fdfb :=_dde -_bgb ;_fdfb > 8{_gfg =8;}else {_gfg =_fdfb ;};if _eeac > 0{_gbgf <<=8;if _ccce < _dde {_dfdb ,_bagb =_ddc .Bitmap .GetByte (_gad +1);
if _bagb !=nil {return _fb .Wrap (_bagb ,_aefe ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_gbgf |=int (_dfdb );};};if _eeac > 1{_ccf <<=8;if _ccce < _dde {_dfdb ,_bagb =_ddc .Bitmap .GetByte (_gad -_ddc .Bitmap .RowStride +1);
if _bagb !=nil {return _fb .Wrap (_bagb ,_aefe ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_ccf |=int (_dfdb )<<4;};};for _acaf :=0;_acaf < _gfg ;_acaf ++{_bcae :=uint (10-_acaf );if _ddc ._cbbfc {_baf =_ddc .overrideAtTemplate2 (_eccd ,_bgb +_acaf ,_eeac ,int (_gbce ),_acaf );
_ddc ._dcb .SetIndex (int32 (_baf ));}else {_ddc ._dcb .SetIndex (int32 (_eccd ));};_agce ,_bagb =_ddc ._bfee .DecodeBit (_ddc ._dcb );if _bagb !=nil {return _fb .Wrap (_bagb ,_aefe ,"");};_gbce |=byte (_agce <<uint (7-_acaf ));_eccd =((_eccd &0x1bd)<<1)|_agce |((_gbgf >>_bcae )&0x4)|((_ccf >>_bcae )&0x80);
};if _cddfg :=_ddc .Bitmap .SetByte (_cfbe ,_gbce );_cddfg !=nil {return _fb .Wrap (_cddfg ,_aefe ,"");};_cfbe ++;_gad ++;};return nil ;};type SegmentEncoder interface{Encode (_gafc _d .BinaryWriter )(_ecdg int ,_bfed error );};type Documenter interface{GetPage (int )(Pager ,error );
GetGlobalSegment (int )(*Header ,error );};func (_cegg *template0 )form (_ceb ,_dbc ,_gdf ,_gae ,_agga int16 )int16 {return (_ceb <<10)|(_dbc <<7)|(_gdf <<4)|(_gae <<1)|_agga ;};type PatternDictionary struct{_cbef _d .StreamReader ;DataHeaderOffset int64 ;
DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_f .Bitmap ;GrayMax uint32 ;};func (_efdf *TextRegion )Init (header *Header ,r _d .StreamReader )error {_efdf .Header =header ;
_efdf ._dfcde =r ;_efdf .RegionInfo =NewRegionSegment (_efdf ._dfcde );return _efdf .parseHeader ();};func (_gba *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _gba .RegionInfo };func (_dac *GenericRegion )computeSegmentDataStructure ()error {_dac .DataOffset =_dac ._bbb .StreamPosition ();
_dac .DataHeaderLength =_dac .DataOffset -_dac .DataHeaderOffset ;_dac .DataLength =int64 (_dac ._bbb .Length ())-_dac .DataHeaderLength ;return nil ;};func (_gaab *Header )readSegmentPageAssociation (_dcgf Documenter ,_facd _d .StreamReader ,_dcff uint64 ,_dce ...int )(_dbgb error ){const _dfda ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_gaab .PageAssociationFieldSize {_bda ,_dcfe :=_facd .ReadBits (8);if _dcfe !=nil {return _fb .Wrap (_dcfe ,_dfda ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gaab .PageAssociation =int (_bda &0xFF);}else {_dbda ,_deb :=_facd .ReadBits (32);
if _deb !=nil {return _fb .Wrap (_deb ,_dfda ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gaab .PageAssociation =int (_dbda &_e .MaxInt32 );};if _dcff ==0{return nil ;};if _gaab .PageAssociation !=0{_edda ,_fdgf :=_dcgf .GetPage (_gaab .PageAssociation );
if _fdgf !=nil {return _fb .Wrap (_fdgf ,_dfda ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _abbc int ;for _fgfb :=uint64 (0);_fgfb < _dcff ;_fgfb ++{_abbc =_dce [_fgfb ];
_gaab .RTSegments [_fgfb ],_fdgf =_edda .GetSegment (_abbc );if _fdgf !=nil {var _bfdb error ;_gaab .RTSegments [_fgfb ],_bfdb =_dcgf .GetGlobalSegment (_abbc );if _bfdb !=nil {return _fb .Wrapf (_fdgf ,_dfda ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_gaab .PageAssociation );
};};};return nil ;};for _fbba :=uint64 (0);_fbba < _dcff ;_fbba ++{_gaab .RTSegments [_fbba ],_dbgb =_dcgf .GetGlobalSegment (_dce [_fbba ]);if _dbgb !=nil {return _fb .Wrapf (_dbgb ,_dfda ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_dce [_fbba ]);
};};return nil ;};func (_ggfb *GenericRegion )decodeSLTP ()(int ,error ){switch _ggfb .GBTemplate {case 0:_ggfb ._dcb .SetIndex (0x9B25);case 1:_ggfb ._dcb .SetIndex (0x795);case 2:_ggfb ._dcb .SetIndex (0xE5);case 3:_ggfb ._dcb .SetIndex (0x195);};return _ggfb ._bfee .DecodeBit (_ggfb ._dcb );
};func (_ebge *Header )Encode (w _d .BinaryWriter )(_aaa int ,_aae error ){const _age ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _bcd _d .BinaryWriter ;_ge .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _aae !=nil {_ge .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_aae );}else {_ge .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_ebge );
_ge .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _ebge .SegmentData !=nil {_ffbg ,_dfg :=_ebge .SegmentData .(SegmentEncoder );
if !_dfg {return 0,_fb .Errorf (_age ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_ebge .SegmentData );
};_bcd =_d .BufferedMSB ();_aaa ,_aae =_ffbg .Encode (_bcd );if _aae !=nil {return 0,_fb .Wrap (_aae ,_age ,"");};_ebge .SegmentDataLength =uint64 (_aaa );};if _ebge .pageSize ()==4{_ebge .PageAssociationFieldSize =true ;};var _dbg int ;_dbg ,_aae =_ebge .writeSegmentNumber (w );
if _aae !=nil {return 0,_fb .Wrap (_aae ,_age ,"");};_aaa +=_dbg ;if _aae =_ebge .writeFlags (w );_aae !=nil {return _aaa ,_fb .Wrap (_aae ,_age ,"");};_aaa ++;_dbg ,_aae =_ebge .writeReferredToCount (w );if _aae !=nil {return 0,_fb .Wrap (_aae ,_age ,"");
};_aaa +=_dbg ;_dbg ,_aae =_ebge .writeReferredToSegments (w );if _aae !=nil {return 0,_fb .Wrap (_aae ,_age ,"");};_aaa +=_dbg ;_dbg ,_aae =_ebge .writeSegmentPageAssociation (w );if _aae !=nil {return 0,_fb .Wrap (_aae ,_age ,"");};_aaa +=_dbg ;_dbg ,_aae =_ebge .writeSegmentDataLength (w );
if _aae !=nil {return 0,_fb .Wrap (_aae ,_age ,"");};_aaa +=_dbg ;_ebge .HeaderLength =int64 (_aaa )-int64 (_ebge .SegmentDataLength );if _bcd !=nil {if _ ,_aae =w .Write (_bcd .Data ());_aae !=nil {return _aaa ,_fb .Wrap (_aae ,_age ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _aaa ,nil ;};func (_bfg Type )String ()string {switch _bfg {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";
case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_faab *HalftoneRegion )computeGrayScalePlanes (_aced []*_f .Bitmap ,_gaag int )([][]int ,error ){_gdg :=make ([][]int ,_faab .HGridHeight );
for _gcdb :=0;_gcdb < len (_gdg );_gcdb ++{_gdg [_gcdb ]=make ([]int ,_faab .HGridWidth );};for _ceaf :=0;_ceaf < int (_faab .HGridHeight );_ceaf ++{for _fegeg :=0;_fegeg < int (_faab .HGridWidth );_fegeg +=8{var _cfdag int ;if _cedg :=int (_faab .HGridWidth )-_fegeg ;
_cedg > 8{_cfdag =8;}else {_cfdag =_cedg ;};_fea :=_aced [0].GetByteIndex (_fegeg ,_ceaf );for _bcce :=0;_bcce < _cfdag ;_bcce ++{_ebda :=_bcce +_fegeg ;_gdg [_ceaf ][_ebda ]=0;for _egd :=0;_egd < _gaag ;_egd ++{_bagc ,_dabbe :=_aced [_egd ].GetByte (_fea );
if _dabbe !=nil {return nil ,_dabbe ;};_acdgc :=_bagc >>uint (7-_ebda &7);_gdfg :=_acdgc &1;_fegc :=1<<uint (_egd );_ccbf :=int (_gdfg )*_fegc ;_gdg [_ceaf ][_ebda ]+=_ccbf ;};};};};return _gdg ,nil ;};func (_ddcf *GenericRegion )setParametersWithAt (_fbe bool ,_eaee byte ,_bffb ,_afac bool ,_fdbe ,_eadb []int8 ,_fbeg ,_fcf uint32 ,_cgce *_cg .DecoderStats ,_ebb *_cg .Decoder ){_ddcf .IsMMREncoded =_fbe ;
_ddcf .GBTemplate =_eaee ;_ddcf .IsTPGDon =_bffb ;_ddcf .GBAtX =_fdbe ;_ddcf .GBAtY =_eadb ;_ddcf .RegionSegment .BitmapHeight =_fcf ;_ddcf .RegionSegment .BitmapWidth =_fbeg ;_ddcf ._fggc =nil ;_ddcf .Bitmap =nil ;if _cgce !=nil {_ddcf ._dcb =_cgce ;};
if _ebb !=nil {_ddcf ._bfee =_ebb ;};_ge .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_ddcf );
};func (_deff *SymbolDictionary )InitEncode (symbols *_f .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _geb ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_deff .SdATX =[]int8 {3,-3,2,-2};_deff .SdATY =[]int8 {-1,-1,-2,-2};_deff ._edfef =symbols ;_deff ._ddcc =make ([]int ,len (symbolList ));copy (_deff ._ddcc ,symbolList );if len (_deff ._ddcc )!=_deff ._edfef .Size (){return _fb .Error (_geb ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_deff .NumberOfNewSymbols =uint32 (symbols .Size ());_deff .NumberOfExportedSymbols =uint32 (symbols .Size ());_deff ._gefc =symbolMap ;_deff ._aadg =unborderSymbols ;return nil ;};func (_fgdb *template1 )setIndex (_fa *_cg .DecoderStats ){_fa .SetIndex (0x080)};
func (_edce *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _edce .IsHuffmanEncoded {switch _edce .SdHuffDecodeWidthSelection {case 0:_bfffg ,_bac :=_b .GetStandardTable (2);if _bac !=nil {return 0,_bac ;};return _bfffg .Decode (_edce ._gcdf );
case 1:_agab ,_eddcc :=_b .GetStandardTable (3);if _eddcc !=nil {return 0,_eddcc ;};return _agab .Decode (_edce ._gcdf );case 3:if _edce ._eaag ==nil {var _cbad int ;if _edce .SdHuffDecodeHeightSelection ==3{_cbad ++;};_faeg ,_ebc :=_edce .getUserTable (_cbad );
if _ebc !=nil {return 0,_ebc ;};_edce ._eaag =_faeg ;};return _edce ._eaag .Decode (_edce ._gcdf );};}else {_gedc ,_fbcb :=_edce ._faec .DecodeInt (_edce ._gfec );if _fbcb !=nil {return 0,_fbcb ;};return int64 (_gedc ),nil ;};return 0,nil ;};func (_bb *GenericRefinementRegion )Init (header *Header ,r _d .StreamReader )error {_bb ._dc =header ;
_bb ._bc =r ;_bb .RegionInfo =NewRegionSegment (r );return _bb .parseHeader ();};func (_eeb *GenericRegion )GetRegionBitmap ()(_ccad *_f .Bitmap ,_daeg error ){if _eeb .Bitmap !=nil {return _eeb .Bitmap ,nil ;};if _eeb .IsMMREncoded {if _eeb ._fggc ==nil {_eeb ._fggc ,_daeg =_gcf .New (_eeb ._bbb ,int (_eeb .RegionSegment .BitmapWidth ),int (_eeb .RegionSegment .BitmapHeight ),_eeb .DataOffset ,_eeb .DataLength );
if _daeg !=nil {return nil ,_daeg ;};};_eeb .Bitmap ,_daeg =_eeb ._fggc .UncompressMMR ();return _eeb .Bitmap ,_daeg ;};if _daeg =_eeb .updateOverrideFlags ();_daeg !=nil {return nil ,_daeg ;};var _caa int ;if _eeb ._bfee ==nil {_eeb ._bfee ,_daeg =_cg .New (_eeb ._bbb );
if _daeg !=nil {return nil ,_daeg ;};};if _eeb ._dcb ==nil {_eeb ._dcb =_cg .NewStats (65536,1);};_eeb .Bitmap =_f .New (int (_eeb .RegionSegment .BitmapWidth ),int (_eeb .RegionSegment .BitmapHeight ));_feeg :=int (uint32 (_eeb .Bitmap .Width +7)&(^uint32 (7)));
for _gbd :=0;_gbd < _eeb .Bitmap .Height ;_gbd ++{if _eeb .IsTPGDon {var _aag int ;_aag ,_daeg =_eeb .decodeSLTP ();if _daeg !=nil {return nil ,_daeg ;};_caa ^=_aag ;};if _caa ==1{if _gbd > 0{if _daeg =_eeb .copyLineAbove (_gbd );_daeg !=nil {return nil ,_daeg ;
};};}else {if _daeg =_eeb .decodeLine (_gbd ,_eeb .Bitmap .Width ,_feeg );_daeg !=nil {return nil ,_daeg ;};};};return _eeb .Bitmap ,nil ;};func (_ce *EndOfStripe )Init (h *Header ,r _d .StreamReader )error {_ce ._gb =r ;return _ce .parseHeader (h ,r );
};func (_bbeg *SymbolDictionary )readNumberOfExportedSymbols ()error {_afeb ,_bbfa :=_bbeg ._gcdf .ReadBits (32);if _bbfa !=nil {return _bbfa ;};_bbeg .NumberOfExportedSymbols =uint32 (_afeb &_e .MaxUint32 );return nil ;};func (_bdcge *SymbolDictionary )decodeThroughTextRegion (_bgdgg ,_fefaa ,_ceee uint32 )error {if _bdcge ._cege ==nil {_bdcge ._cege =_edfda (_bdcge ._gcdf ,nil );
_bdcge ._cege .setContexts (_bdcge ._gacef ,_cg .NewStats (512,1),_cg .NewStats (512,1),_cg .NewStats (512,1),_cg .NewStats (512,1),_bdcge ._dccab ,_cg .NewStats (512,1),_cg .NewStats (512,1),_cg .NewStats (512,1),_cg .NewStats (512,1));};if _gcagb :=_bdcge .setSymbolsArray ();
_gcagb !=nil {return _gcagb ;};_bdcge ._cege .setParameters (_bdcge ._faec ,_bdcge .IsHuffmanEncoded ,true ,_bgdgg ,_fefaa ,_ceee ,1,_bdcge ._egebf +_bdcge ._eage ,0,0,0,1,0,0,0,0,0,0,0,0,0,_bdcge .SdrTemplate ,_bdcge .SdrATX ,_bdcge .SdrATY ,_bdcge ._fcfg ,_bdcge ._dddb );
return _bdcge .addSymbol (_bdcge ._cege );};func (_aff *GenericRegion )updateOverrideFlags ()error {const _abb ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _aff .GBAtX ==nil ||_aff .GBAtY ==nil {return nil ;
};if len (_aff .GBAtX )!=len (_aff .GBAtY ){return _fb .Errorf (_abb ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_aff .GBAtX ),len (_aff .GBAtY ));
};_aff .GBAtOverride =make ([]bool ,len (_aff .GBAtX ));switch _aff .GBTemplate {case 0:if !_aff .UseExtTemplates {if _aff .GBAtX [0]!=3||_aff .GBAtY [0]!=-1{_aff .setOverrideFlag (0);};if _aff .GBAtX [1]!=-3||_aff .GBAtY [1]!=-1{_aff .setOverrideFlag (1);
};if _aff .GBAtX [2]!=2||_aff .GBAtY [2]!=-2{_aff .setOverrideFlag (2);};if _aff .GBAtX [3]!=-2||_aff .GBAtY [3]!=-2{_aff .setOverrideFlag (3);};}else {if _aff .GBAtX [0]!=-2||_aff .GBAtY [0]!=0{_aff .setOverrideFlag (0);};if _aff .GBAtX [1]!=0||_aff .GBAtY [1]!=-2{_aff .setOverrideFlag (1);
};if _aff .GBAtX [2]!=-2||_aff .GBAtY [2]!=-1{_aff .setOverrideFlag (2);};if _aff .GBAtX [3]!=-1||_aff .GBAtY [3]!=-2{_aff .setOverrideFlag (3);};if _aff .GBAtX [4]!=1||_aff .GBAtY [4]!=-2{_aff .setOverrideFlag (4);};if _aff .GBAtX [5]!=2||_aff .GBAtY [5]!=-1{_aff .setOverrideFlag (5);
};if _aff .GBAtX [6]!=-3||_aff .GBAtY [6]!=0{_aff .setOverrideFlag (6);};if _aff .GBAtX [7]!=-4||_aff .GBAtY [7]!=0{_aff .setOverrideFlag (7);};if _aff .GBAtX [8]!=2||_aff .GBAtY [8]!=-2{_aff .setOverrideFlag (8);};if _aff .GBAtX [9]!=3||_aff .GBAtY [9]!=-1{_aff .setOverrideFlag (9);
};if _aff .GBAtX [10]!=-2||_aff .GBAtY [10]!=-2{_aff .setOverrideFlag (10);};if _aff .GBAtX [11]!=-3||_aff .GBAtY [11]!=-1{_aff .setOverrideFlag (11);};};case 1:if _aff .GBAtX [0]!=3||_aff .GBAtY [0]!=-1{_aff .setOverrideFlag (0);};case 2:if _aff .GBAtX [0]!=2||_aff .GBAtY [0]!=-1{_aff .setOverrideFlag (0);
};case 3:if _aff .GBAtX [0]!=2||_aff .GBAtY [0]!=-1{_aff .setOverrideFlag (0);};};return nil ;};func (_dfacc *SymbolDictionary )decodeDirectlyThroughGenericRegion (_bcba ,_gaeg uint32 )error {if _dfacc ._aeag ==nil {_dfacc ._aeag =NewGenericRegion (_dfacc ._gcdf );
};_dfacc ._aeag .setParametersWithAt (false ,byte (_dfacc .SdTemplate ),false ,false ,_dfacc .SdATX ,_dfacc .SdATY ,_bcba ,_gaeg ,_dfacc ._gacef ,_dfacc ._faec );return _dfacc .addSymbol (_dfacc ._aeag );};func (_ffae *PageInformationSegment )readDefaultPixelValue ()error {_bgbc ,_abgc :=_ffae ._dgcda .ReadBit ();
if _abgc !=nil {return _abgc ;};_ffae .DefaultPixelValue =uint8 (_bgbc &0xf);return nil ;};func (_egcfg *TextRegion )setCodingStatistics ()error {if _egcfg ._fecba ==nil {_egcfg ._fecba =_cg .NewStats (512,1);};if _egcfg ._fedf ==nil {_egcfg ._fedf =_cg .NewStats (512,1);
};if _egcfg ._gfc ==nil {_egcfg ._gfc =_cg .NewStats (512,1);};if _egcfg ._bgfgc ==nil {_egcfg ._bgfgc =_cg .NewStats (512,1);};if _egcfg ._aeff ==nil {_egcfg ._aeff =_cg .NewStats (512,1);};if _egcfg ._ffcbc ==nil {_egcfg ._ffcbc =_cg .NewStats (512,1);
};if _egcfg ._fgge ==nil {_egcfg ._fgge =_cg .NewStats (512,1);};if _egcfg ._ebgga ==nil {_egcfg ._ebgga =_cg .NewStats (1<<uint (_egcfg ._cega ),1);};if _egcfg ._abgge ==nil {_egcfg ._abgge =_cg .NewStats (512,1);};if _egcfg ._dbde ==nil {_egcfg ._dbde =_cg .NewStats (512,1);
};if _egcfg ._abbd ==nil {var _baed error ;_egcfg ._abbd ,_baed =_cg .New (_egcfg ._dfcde );if _baed !=nil {return _baed ;};};return nil ;};func (_bcag *GenericRegion )writeGBAtPixels (_gcga _d .BinaryWriter )(_feeb int ,_ddbg error ){const _gcda ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _bcag .UseMMR {return 0,nil ;};_cff :=1;if _bcag .GBTemplate ==0{_cff =4;}else if _bcag .UseExtTemplates {_cff =12;};if len (_bcag .GBAtX )!=_cff {return 0,_fb .Errorf (_gcda ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_bcag .GBAtY )!=_cff {return 0,_fb .Errorf (_gcda ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _beg :=0;_beg < _cff ;_beg ++{if _ddbg =_gcga .WriteByte (byte (_bcag .GBAtX [_beg ]));_ddbg !=nil {return _feeb ,_fb .Wrap (_ddbg ,_gcda ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_feeb ++;if _ddbg =_gcga .WriteByte (byte (_bcag .GBAtY [_beg ]));
_ddbg !=nil {return _feeb ,_fb .Wrap (_ddbg ,_gcda ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_feeb ++;};return _feeb ,nil ;};func (_cffgg *PageInformationSegment )String ()string {_fgea :=&_cf .Builder {};_fgea .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_fgea .WriteString (_cc .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_cffgg .PageBMHeight ));_fgea .WriteString (_cc .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_cffgg .PageBMWidth ));
_fgea .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_cffgg .ResolutionX ));_fgea .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_cffgg .ResolutionY ));
_fgea .WriteString (_cc .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_cffgg ._caeg ));_fgea .WriteString (_cc .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_cffgg ._eaeeg ));
_fgea .WriteString (_cc .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_cffgg .IsLossless ));_fgea .WriteString (_cc .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_cffgg ._gbcg ));
_fgea .WriteString (_cc .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_cffgg ._eefb ));_fgea .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_cffgg .IsStripe ));
_fgea .WriteString (_cc .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_cffgg .MaxStripeSize ));return _fgea .String ();};func (_eggc *Header )CleanSegmentData (){if _eggc .SegmentData !=nil {_eggc .SegmentData =nil ;
};};func (_fbc *Header )parse (_acgc Documenter ,_bbba _d .StreamReader ,_ffda int64 ,_dcbg OrganizationType )(_ded error ){const _afb ="\u0070\u0061\u0072s\u0065";_ge .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _ded !=nil {_ge .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ded );}else {_ge .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
};}();_ ,_ded =_bbba .Seek (_ffda ,_ec .SeekStart );if _ded !=nil {return _fb .Wrap (_ded ,_afb ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _ded =_fbc .readSegmentNumber (_bbba );_ded !=nil {return _fb .Wrap (_ded ,_afb ,"");};
if _ded =_fbc .readHeaderFlags ();_ded !=nil {return _fb .Wrap (_ded ,_afb ,"");};var _cedf uint64 ;_cedf ,_ded =_fbc .readNumberOfReferredToSegments (_bbba );if _ded !=nil {return _fb .Wrap (_ded ,_afb ,"");};_fbc .RTSNumbers ,_ded =_fbc .readReferredToSegmentNumbers (_bbba ,int (_cedf ));
if _ded !=nil {return _fb .Wrap (_ded ,_afb ,"");};_ded =_fbc .readSegmentPageAssociation (_acgc ,_bbba ,_cedf ,_fbc .RTSNumbers ...);if _ded !=nil {return _fb .Wrap (_ded ,_afb ,"");};if _fbc .Type !=TEndOfFile {if _ded =_fbc .readSegmentDataLength (_bbba );
_ded !=nil {return _fb .Wrap (_ded ,_afb ,"");};};_fbc .readDataStartOffset (_bbba ,_dcbg );_fbc .readHeaderLength (_bbba ,_ffda );_ge .Log .Trace ("\u0025\u0073",_fbc );return nil ;};func (_eecb *SymbolDictionary )GetDictionary ()([]*_f .Bitmap ,error ){_ge .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_ge .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_ge .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_eecb ._fadd ,_eecb ._bbbd );
}();if _eecb ._fadd ==nil {var _bgdd error ;if _eecb .UseRefinementAggregation {_eecb ._dddb =_eecb .getSbSymCodeLen ();};if !_eecb .IsHuffmanEncoded {if _bgdd =_eecb .setCodingStatistics ();_bgdd !=nil {return nil ,_bgdd ;};};_eecb ._bbbd =make ([]*_f .Bitmap ,_eecb .NumberOfNewSymbols );
var _cefc []int ;if _eecb .IsHuffmanEncoded &&!_eecb .UseRefinementAggregation {_cefc =make ([]int ,_eecb .NumberOfNewSymbols );};if _bgdd =_eecb .setSymbolsArray ();_bgdd !=nil {return nil ,_bgdd ;};var _ffcg ,_bgefc int64 ;_eecb ._eage =0;for _eecb ._eage < _eecb .NumberOfNewSymbols {_bgefc ,_bgdd =_eecb .decodeHeightClassDeltaHeight ();
if _bgdd !=nil {return nil ,_bgdd ;};_ffcg +=_bgefc ;var _afcg ,_fecf uint32 ;_acgdd :=int64 (_eecb ._eage );for {var _bed int64 ;_bed ,_bgdd =_eecb .decodeDifferenceWidth ();if _gc .Is (_bgdd ,_ad .ErrOOB ){break ;};if _bgdd !=nil {return nil ,_bgdd ;
};if _eecb ._eage >=_eecb .NumberOfNewSymbols {break ;};_afcg +=uint32 (_bed );_fecf +=_afcg ;if !_eecb .IsHuffmanEncoded ||_eecb .UseRefinementAggregation {if !_eecb .UseRefinementAggregation {_bgdd =_eecb .decodeDirectlyThroughGenericRegion (_afcg ,uint32 (_ffcg ));
if _bgdd !=nil {return nil ,_bgdd ;};}else {_bgdd =_eecb .decodeAggregate (_afcg ,uint32 (_ffcg ));if _bgdd !=nil {return nil ,_bgdd ;};};}else if _eecb .IsHuffmanEncoded &&!_eecb .UseRefinementAggregation {_cefc [_eecb ._eage ]=int (_afcg );};_eecb ._eage ++;
};if _eecb .IsHuffmanEncoded &&!_eecb .UseRefinementAggregation {var _cebbg int64 ;if _eecb .SdHuffBMSizeSelection ==0{var _acef _b .Tabler ;_acef ,_bgdd =_b .GetStandardTable (1);if _bgdd !=nil {return nil ,_bgdd ;};_cebbg ,_bgdd =_acef .Decode (_eecb ._gcdf );
if _bgdd !=nil {return nil ,_bgdd ;};}else {_cebbg ,_bgdd =_eecb .huffDecodeBmSize ();if _bgdd !=nil {return nil ,_bgdd ;};};_eecb ._gcdf .Align ();var _dfef *_f .Bitmap ;_dfef ,_bgdd =_eecb .decodeHeightClassCollectiveBitmap (_cebbg ,uint32 (_ffcg ),_fecf );
if _bgdd !=nil {return nil ,_bgdd ;};_bgdd =_eecb .decodeHeightClassBitmap (_dfef ,_acgdd ,int (_ffcg ),_cefc );if _bgdd !=nil {return nil ,_bgdd ;};};};_fbca ,_bgdd :=_eecb .getToExportFlags ();if _bgdd !=nil {return nil ,_bgdd ;};_eecb .setExportedSymbols (_fbca );
};return _eecb ._fadd ,nil ;};func (_gcba *SymbolDictionary )decodeNewSymbols (_adf ,_baag uint32 ,_bfgf *_f .Bitmap ,_bcb ,_ccbd int32 )error {if _gcba ._fccd ==nil {_gcba ._fccd =_dbf (_gcba ._gcdf ,nil );if _gcba ._faec ==nil {var _ccfe error ;_gcba ._faec ,_ccfe =_cg .New (_gcba ._gcdf );
if _ccfe !=nil {return _ccfe ;};};if _gcba ._gacef ==nil {_gcba ._gacef =_cg .NewStats (65536,1);};};_gcba ._fccd .setParameters (_gcba ._gacef ,_gcba ._faec ,_gcba .SdrTemplate ,_adf ,_baag ,_bfgf ,_bcb ,_ccbd ,false ,_gcba .SdrATX ,_gcba .SdrATY );return _gcba .addSymbol (_gcba ._fccd );
};func (_gafgf *SymbolDictionary )encodeRefinementATFlags (_abda _d .BinaryWriter )(_afdg int ,_fbda error ){const _cdca ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_gafgf .UseRefinementAggregation ||_gafgf .SdrTemplate !=0{return 0,nil ;};for _edeb :=0;_edeb < 2;_edeb ++{if _fbda =_abda .WriteByte (byte (_gafgf .SdrATX [_edeb ]));_fbda !=nil {return _afdg ,_fb .Wrapf (_fbda ,_cdca ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_edeb );
};_afdg ++;if _fbda =_abda .WriteByte (byte (_gafgf .SdrATY [_edeb ]));_fbda !=nil {return _afdg ,_fb .Wrapf (_fbda ,_cdca ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_edeb );};_afdg ++;};return _afdg ,nil ;};func (_fefe *PatternDictionary )readGrayMax ()error {_egba ,_fbed :=_fefe ._cbef .ReadBits (32);
if _fbed !=nil {return _fbed ;};_fefe .GrayMax =uint32 (_egba &_e .MaxUint32 );return nil ;};func (_dcdb *HalftoneRegion )parseHeader ()error {if _dcca :=_dcdb .RegionSegment .parseHeader ();_dcca !=nil {return _dcca ;};_ege ,_cfcde :=_dcdb ._abbb .ReadBit ();
if _cfcde !=nil {return _cfcde ;};_dcdb .HDefaultPixel =int8 (_ege );_bef ,_cfcde :=_dcdb ._abbb .ReadBits (3);if _cfcde !=nil {return _cfcde ;};_dcdb .CombinationOperator =_f .CombinationOperator (_bef &0xf);_ege ,_cfcde =_dcdb ._abbb .ReadBit ();if _cfcde !=nil {return _cfcde ;
};if _ege ==1{_dcdb .HSkipEnabled =true ;};_bef ,_cfcde =_dcdb ._abbb .ReadBits (2);if _cfcde !=nil {return _cfcde ;};_dcdb .HTemplate =byte (_bef &0xf);_ege ,_cfcde =_dcdb ._abbb .ReadBit ();if _cfcde !=nil {return _cfcde ;};if _ege ==1{_dcdb .IsMMREncoded =true ;
};_bef ,_cfcde =_dcdb ._abbb .ReadBits (32);if _cfcde !=nil {return _cfcde ;};_dcdb .HGridWidth =uint32 (_bef &_e .MaxUint32 );_bef ,_cfcde =_dcdb ._abbb .ReadBits (32);if _cfcde !=nil {return _cfcde ;};_dcdb .HGridHeight =uint32 (_bef &_e .MaxUint32 );
_bef ,_cfcde =_dcdb ._abbb .ReadBits (32);if _cfcde !=nil {return _cfcde ;};_dcdb .HGridX =int32 (_bef &_e .MaxInt32 );_bef ,_cfcde =_dcdb ._abbb .ReadBits (32);if _cfcde !=nil {return _cfcde ;};_dcdb .HGridY =int32 (_bef &_e .MaxInt32 );_bef ,_cfcde =_dcdb ._abbb .ReadBits (16);
if _cfcde !=nil {return _cfcde ;};_dcdb .HRegionX =uint16 (_bef &_e .MaxUint16 );_bef ,_cfcde =_dcdb ._abbb .ReadBits (16);if _cfcde !=nil {return _cfcde ;};_dcdb .HRegionY =uint16 (_bef &_e .MaxUint16 );if _cfcde =_dcdb .computeSegmentDataStructure ();
_cfcde !=nil {return _cfcde ;};return _dcdb .checkInput ();};func (_gab *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_gab .SdHuffAggInstanceSelection {_cbfcd ,_efad :=_b .GetStandardTable (1);if _efad !=nil {return 0,_efad ;};return _cbfcd .Decode (_gab ._gcdf );
};if _gab ._fda ==nil {var (_egdc int ;_ceeec error ;);if _gab .SdHuffDecodeHeightSelection ==3{_egdc ++;};if _gab .SdHuffDecodeWidthSelection ==3{_egdc ++;};if _gab .SdHuffBMSizeSelection ==3{_egdc ++;};_gab ._fda ,_ceeec =_gab .getUserTable (_egdc );
if _ceeec !=nil {return 0,_ceeec ;};};return _gab ._fda .Decode (_gab ._gcdf );};func (_cbgd *GenericRegion )setParametersMMR (_dddg bool ,_gece ,_fbdf int64 ,_gdag ,_baa uint32 ,_gbgc byte ,_egb ,_fdfa bool ,_cdba ,_dfcd []int8 ){_cbgd .DataOffset =_gece ;
_cbgd .DataLength =_fbdf ;_cbgd .RegionSegment =&RegionSegment {};_cbgd .RegionSegment .BitmapHeight =_gdag ;_cbgd .RegionSegment .BitmapWidth =_baa ;_cbgd .GBTemplate =_gbgc ;_cbgd .IsMMREncoded =_dddg ;_cbgd .IsTPGDon =_egb ;_cbgd .GBAtX =_cdba ;_cbgd .GBAtY =_dfcd ;
};func (_gbga *PatternDictionary )computeSegmentDataStructure ()error {_gbga .DataOffset =_gbga ._cbef .StreamPosition ();_gbga .DataHeaderLength =_gbga .DataOffset -_gbga .DataHeaderOffset ;_gbga .DataLength =int64 (_gbga ._cbef .Length ())-_gbga .DataHeaderLength ;
return nil ;};var _ SegmentEncoder =&RegionSegment {};func (_ecdf *GenericRegion )parseHeader ()(_abd error ){_ge .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _abd !=nil {_ge .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_abd );
}else {_ge .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_dbeb int ;_aee uint64 ;);if _abd =_ecdf .RegionSegment .parseHeader ();_abd !=nil {return _abd ;};if _ ,_abd =_ecdf ._bbb .ReadBits (3);_abd !=nil {return _abd ;};_dbeb ,_abd =_ecdf ._bbb .ReadBit ();if _abd !=nil {return _abd ;};if _dbeb ==1{_ecdf .UseExtTemplates =true ;
};_dbeb ,_abd =_ecdf ._bbb .ReadBit ();if _abd !=nil {return _abd ;};if _dbeb ==1{_ecdf .IsTPGDon =true ;};_aee ,_abd =_ecdf ._bbb .ReadBits (2);if _abd !=nil {return _abd ;};_ecdf .GBTemplate =byte (_aee &0xf);_dbeb ,_abd =_ecdf ._bbb .ReadBit ();if _abd !=nil {return _abd ;
};if _dbeb ==1{_ecdf .IsMMREncoded =true ;};if !_ecdf .IsMMREncoded {_fgbc :=1;if _ecdf .GBTemplate ==0{_fgbc =4;if _ecdf .UseExtTemplates {_fgbc =12;};};if _abd =_ecdf .readGBAtPixels (_fgbc );_abd !=nil {return _abd ;};};if _abd =_ecdf .computeSegmentDataStructure ();
_abd !=nil {return _abd ;};_ge .Log .Trace ("\u0025\u0073",_ecdf );return nil ;};func (_aca *GenericRefinementRegion )readAtPixels ()error {_aca .GrAtX =make ([]int8 ,2);_aca .GrAtY =make ([]int8 ,2);_ggb ,_edc :=_aca ._bc .ReadByte ();if _edc !=nil {return _edc ;
};_aca .GrAtX [0]=int8 (_ggb );_ggb ,_edc =_aca ._bc .ReadByte ();if _edc !=nil {return _edc ;};_aca .GrAtY [0]=int8 (_ggb );_ggb ,_edc =_aca ._bc .ReadByte ();if _edc !=nil {return _edc ;};_aca .GrAtX [1]=int8 (_ggb );_ggb ,_edc =_aca ._bc .ReadByte ();
if _edc !=nil {return _edc ;};_aca .GrAtY [1]=int8 (_ggb );return nil ;};func (_ddd *GenericRefinementRegion )getPixel (_dgd *_f .Bitmap ,_bddg ,_aa int )int {if _bddg < 0||_bddg >=_dgd .Width {return 0;};if _aa < 0||_aa >=_dgd .Height {return 0;};if _dgd .GetPixel (_bddg ,_aa ){return 1;
};return 0;};func (_eadf *TextRegion )checkInput ()error {const _fggda ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_eadf .UseRefinement {if _eadf .SbrTemplate !=0{_ge .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_eadf .SbrTemplate =0;};};if _eadf .SbHuffFS ==2||_eadf .SbHuffRDWidth ==2||_eadf .SbHuffRDHeight ==2||_eadf .SbHuffRDX ==2||_eadf .SbHuffRDY ==2{return _fb .Error (_fggda ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_eadf .UseRefinement {if _eadf .SbHuffRSize !=0{_ge .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_eadf .SbHuffRSize =0;};if _eadf .SbHuffRDY !=0{_ge .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_eadf .SbHuffRDY =0;};if _eadf .SbHuffRDX !=0{_ge .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_eadf .SbHuffRDX =0;};if _eadf .SbHuffRDWidth !=0{_ge .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_eadf .SbHuffRDWidth =0;};if _eadf .SbHuffRDHeight !=0{_ge .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_eadf .SbHuffRDHeight =0;};};return nil ;
};func (_efbe *PatternDictionary )Init (h *Header ,r _d .StreamReader )error {_efbe ._cbef =r ;return _efbe .parseHeader ();};func (_cgbg *GenericRegion )decodeTemplate0a (_ced ,_fgdg ,_efa int ,_fab ,_ggd int )(_daa error ){const _cfgf ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_babc ,_aeae int ;_ffe ,_gggb int ;_cddf byte ;_gfeg int ;);if _ced >=1{_cddf ,_daa =_cgbg .Bitmap .GetByte (_ggd );if _daa !=nil {return _fb .Wrap (_daa ,_cfgf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ffe =int (_cddf );};if _ced >=2{_cddf ,_daa =_cgbg .Bitmap .GetByte (_ggd -_cgbg .Bitmap .RowStride );
if _daa !=nil {return _fb .Wrap (_daa ,_cfgf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_gggb =int (_cddf )<<6;};_babc =(_ffe &0xf0)|(_gggb &0x3800);for _aagb :=0;_aagb < _efa ;_aagb =_gfeg {var (_bbea byte ;_bfcd int ;);_gfeg =_aagb +8;if _ffc :=_fgdg -_aagb ;
_ffc > 8{_bfcd =8;}else {_bfcd =_ffc ;};if _ced > 0{_ffe <<=8;if _gfeg < _fgdg {_cddf ,_daa =_cgbg .Bitmap .GetByte (_ggd +1);if _daa !=nil {return _fb .Wrap (_daa ,_cfgf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ffe |=int (_cddf );};};if _ced > 1{_cfa :=_ggd -_cgbg .Bitmap .RowStride +1;
_gggb <<=8;if _gfeg < _fgdg {_cddf ,_daa =_cgbg .Bitmap .GetByte (_cfa );if _daa !=nil {return _fb .Wrap (_daa ,_cfgf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_gggb |=int (_cddf )<<6;}else {_gggb |=0;};};for _dagba :=0;_dagba < _bfcd ;_dagba ++{_cfc :=uint (7-_dagba );
if _cgbg ._cbbfc {_aeae =_cgbg .overrideAtTemplate0a (_babc ,_aagb +_dagba ,_ced ,int (_bbea ),_dagba ,int (_cfc ));_cgbg ._dcb .SetIndex (int32 (_aeae ));}else {_cgbg ._dcb .SetIndex (int32 (_babc ));};var _fdc int ;_fdc ,_daa =_cgbg ._bfee .DecodeBit (_cgbg ._dcb );
if _daa !=nil {return _fb .Wrap (_daa ,_cfgf ,"");};_bbea |=byte (_fdc )<<_cfc ;_babc =((_babc &0x7bf7)<<1)|_fdc |((_ffe >>_cfc )&0x10)|((_gggb >>_cfc )&0x800);};if _eff :=_cgbg .Bitmap .SetByte (_fab ,_bbea );_eff !=nil {return _fb .Wrap (_eff ,_cfgf ,"");
};_fab ++;_ggd ++;};return nil ;};type GenericRefinementRegion struct{_ccg templater ;_gec templater ;_bc _d .StreamReader ;_dc *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_f .Bitmap ;
ReferenceBitmap *_f .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_fd *_cg .Decoder ;_ecf *_cg .DecoderStats ;_cfb bool ;_cgc []bool ;};func (_egfgg *TextRegion )decodeIds ()(int64 ,error ){const _baab ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _egfgg .IsHuffmanEncoded {if _egfgg .SbHuffDS ==3{if _egfgg ._acgg ==nil {_dfadc :=0;
if _egfgg .SbHuffFS ==3{_dfadc ++;};var _gceg error ;_egfgg ._acgg ,_gceg =_egfgg .getUserTable (_dfadc );if _gceg !=nil {return 0,_fb .Wrap (_gceg ,_baab ,"");};};return _egfgg ._acgg .Decode (_egfgg ._dfcde );};_dcbf ,_adfe :=_b .GetStandardTable (8+int (_egfgg .SbHuffDS ));
if _adfe !=nil {return 0,_fb .Wrap (_adfe ,_baab ,"");};return _dcbf .Decode (_egfgg ._dfcde );};_bedd ,_cdf :=_egfgg ._abbd .DecodeInt (_egfgg ._gfc );if _cdf !=nil {return 0,_fb .Wrap (_cdf ,_baab ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_bedd ),nil ;
};func (_cdbc *TextRegion )initSymbols ()error {const _dada ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_fddb :=range _cdbc .Header .RTSegments {if _fddb ==nil {return _fb .Error (_dada ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _fddb .Type ==0{_bggg ,_ecdfd :=_fddb .GetSegmentData ();if _ecdfd !=nil {return _fb .Wrap (_ecdfd ,_dada ,"");};_bfdf ,_fbbc :=_bggg .(*SymbolDictionary );if !_fbbc {return _fb .Error (_dada ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bfdf ._dccab =_cdbc ._ebgga ;_cddfd ,_ecdfd :=_bfdf .GetDictionary ();if _ecdfd !=nil {return _fb .Wrap (_ecdfd ,_dada ,"");};_cdbc .Symbols =append (_cdbc .Symbols ,_cddfd ...);};};_cdbc .NumberOfSymbols =uint32 (len (_cdbc .Symbols ));return nil ;
};func (_beab *PageInformationSegment )Size ()int {return 19};func (_cbbe *Header )writeSegmentNumber (_aefea _d .BinaryWriter )(_cfec int ,_ggfbg error ){_fecbg :=make ([]byte ,4);_ae .BigEndian .PutUint32 (_fecbg ,_cbbe .SegmentNumber );if _cfec ,_ggfbg =_aefea .Write (_fecbg );
_ggfbg !=nil {return 0,_fb .Wrap (_ggfbg ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _cfec ,nil ;};func (_bfec *PageInformationSegment )readMaxStripeSize ()error {_ebdac ,_cafc :=_bfec ._dgcda .ReadBits (15);
if _cafc !=nil {return _cafc ;};_bfec .MaxStripeSize =uint16 (_ebdac &_e .MaxUint16 );return nil ;};var _ SegmentEncoder =&GenericRegion {};func (_cbed *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _cbed ._bfbg ==nil {var (_gggf int ;_gbcc error ;
);if _cbed .SdHuffDecodeHeightSelection ==3{_gggf ++;};if _cbed .SdHuffDecodeWidthSelection ==3{_gggf ++;};_cbed ._bfbg ,_gbcc =_cbed .getUserTable (_gggf );if _gbcc !=nil {return 0,_gbcc ;};};return _cbed ._bfbg .Decode (_cbed ._gcdf );};func (_fcgeg *SymbolDictionary )readNumberOfNewSymbols ()error {_fcbf ,_gcgb :=_fcgeg ._gcdf .ReadBits (32);
if _gcgb !=nil {return _gcgb ;};_fcgeg .NumberOfNewSymbols =uint32 (_fcbf &_e .MaxUint32 );return nil ;};func (_gacbe *TableSegment )StreamReader ()_d .StreamReader {return _gacbe ._gcaef };func (_fgb *GenericRegion )InitEncode (bm *_f .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _fgga ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _fb .Error (_fgga ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _fb .Error (_fgga ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_fgb .Bitmap =bm ;_fgb .GBTemplate =byte (template );switch _fgb .GBTemplate {case 0:_fgb .GBAtX =[]int8 {3,-3,2,-2};_fgb .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_fgb .GBAtX =[]int8 {3};_fgb .GBAtY =[]int8 {-1};case 2,3:_fgb .GBAtX =[]int8 {2};_fgb .GBAtY =[]int8 {-1};
default:return _fb .Errorf (_fgga ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_fgb .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_fgb .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_abef *SymbolDictionary )decodeHeightClassCollectiveBitmap (_adac int64 ,_ddbc ,_gcabd uint32 )(*_f .Bitmap ,error ){if _adac ==0{_degf :=_f .New (int (_gcabd ),int (_ddbc ));
var (_feac byte ;_cfge error ;);for _bbee :=0;_bbee < len (_degf .Data );_bbee ++{_feac ,_cfge =_abef ._gcdf .ReadByte ();if _cfge !=nil {return nil ,_cfge ;};if _cfge =_degf .SetByte (_bbee ,_feac );_cfge !=nil {return nil ,_cfge ;};};return _degf ,nil ;
};if _abef ._aeag ==nil {_abef ._aeag =NewGenericRegion (_abef ._gcdf );};_abef ._aeag .setParameters (true ,_abef ._gcdf .StreamPosition (),_adac ,_ddbc ,_gcabd );_ccbea ,_ecbb :=_abef ._aeag .GetRegionBitmap ();if _ecbb !=nil {return nil ,_ecbb ;};return _ccbea ,nil ;
};func (_agde *PatternDictionary )extractPatterns (_fefa *_f .Bitmap )error {var _cdea int ;_ebfb :=make ([]*_f .Bitmap ,_agde .GrayMax +1);for _cdea <=int (_agde .GrayMax ){_gcfbf :=int (_agde .HdpWidth )*_cdea ;_gag :=_c .Rect (_gcfbf ,0,_gcfbf +int (_agde .HdpWidth ),int (_agde .HdpHeight ));
_bdccg ,_efc :=_f .Extract (_gag ,_fefa );if _efc !=nil {return _efc ;};_ebfb [_cdea ]=_bdccg ;_cdea ++;};_agde .Patterns =_ebfb ;return nil ;};func (_bdfd *TextRegion )GetRegionInfo ()*RegionSegment {return _bdfd .RegionInfo };func (_fggf *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_f .Points ,symbols *_f .Bitmaps ,classIDs *_fg .IntSlice ,boxes *_f .Boxes ,width ,height ,symBits int ){_fggf .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_fggf ._ebed =globalSymbolsMap ;_fggf ._acbd =localSymbolsMap ;_fggf ._dfge =comps ;_fggf ._fgaf =inLL ;_fggf ._cfcaf =symbols ;_fggf ._eefd =classIDs ;_fggf ._adadf =boxes ;_fggf ._efeb =symBits ;};type EncodeInitializer interface{InitEncode ();};func (_gbdd *SymbolDictionary )setInSyms ()error {if _gbdd .Header .RTSegments !=nil {return _gbdd .retrieveImportSymbols ();
};_gbdd ._debc =make ([]*_f .Bitmap ,0);return nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_f .Bitmap ,error );};func (_de *EndOfStripe )LineNumber ()int {return _de ._gg };func (_bbdd *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_cbffa ,_ddbf :=_bbdd ._dgcda .ReadBit ();
if _ddbf !=nil {return _ddbf ;};if _cbffa ==1{_bbdd ._eaeeg =true ;};return nil ;};func (_gbdc *PatternDictionary )readTemplate ()error {_agb ,_dfad :=_gbdc ._cbef .ReadBits (2);if _dfad !=nil {return _dfad ;};_gbdc .HDTemplate =byte (_agb );return nil ;
};func (_dabd *GenericRegion )readGBAtPixels (_ccae int )error {const _abec ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_dabd .GBAtX =make ([]int8 ,_ccae );_dabd .GBAtY =make ([]int8 ,_ccae );for _aab :=0;_aab < _ccae ;
_aab ++{_ecca ,_bgc :=_dabd ._bbb .ReadByte ();if _bgc !=nil {return _fb .Wrapf (_bgc ,_abec ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_aab );};_dabd .GBAtX [_aab ]=int8 (_ecca );_ecca ,_bgc =_dabd ._bbb .ReadByte ();if _bgc !=nil {return _fb .Wrapf (_bgc ,_abec ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_aab );
};_dabd .GBAtY [_aab ]=int8 (_ecca );};return nil ;};func (_cfcd *GenericRegion )decodeTemplate3 (_gea ,_adc ,_dad int ,_cba ,_cac int )(_efaa error ){const _ece ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_ffd ,_dca int ;
_acab int ;_fdg byte ;_bfa ,_cbab int ;);if _gea >=1{_fdg ,_efaa =_cfcd .Bitmap .GetByte (_cac );if _efaa !=nil {return _fb .Wrap (_efaa ,_ece ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_acab =int (_fdg );};_ffd =(_acab >>1)&0x70;for _fba :=0;_fba < _dad ;
_fba =_bfa {var (_fege byte ;_dfa int ;);_bfa =_fba +8;if _cdc :=_adc -_fba ;_cdc > 8{_dfa =8;}else {_dfa =_cdc ;};if _gea >=1{_acab <<=8;if _bfa < _adc {_fdg ,_efaa =_cfcd .Bitmap .GetByte (_cac +1);if _efaa !=nil {return _fb .Wrap (_efaa ,_ece ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_acab |=int (_fdg );};};for _cfed :=0;_cfed < _dfa ;_cfed ++{if _cfcd ._cbbfc {_dca =_cfcd .overrideAtTemplate3 (_ffd ,_fba +_cfed ,_gea ,int (_fege ),_cfed );_cfcd ._dcb .SetIndex (int32 (_dca ));}else {_cfcd ._dcb .SetIndex (int32 (_ffd ));};_cbab ,_efaa =_cfcd ._bfee .DecodeBit (_cfcd ._dcb );
if _efaa !=nil {return _fb .Wrap (_efaa ,_ece ,"");};_fege |=byte (_cbab )<<byte (7-_cfed );_ffd =((_ffd &0x1f7)<<1)|_cbab |((_acab >>uint (8-_cfed ))&0x010);};if _fadg :=_cfcd .Bitmap .SetByte (_cba ,_fege );_fadg !=nil {return _fb .Wrap (_fadg ,_ece ,"");
};_cba ++;_cac ++;};return nil ;};func (_edea *RegionSegment )String ()string {_babg :=&_cf .Builder {};_babg .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_babg .WriteString (_cc .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_edea .BitmapWidth ,_edea .BitmapHeight ));
_babg .WriteString (_cc .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_edea .XLocation ,_edea .YLocation ));_babg .WriteString (_cc .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_edea .CombinaionOperator ));
return _babg .String ();};func (_baee *SymbolDictionary )encodeATFlags (_ggdb _d .BinaryWriter )(_cge int ,_dgad error ){const _bgcb ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _baee .IsHuffmanEncoded ||_baee .SdTemplate !=0{return 0,nil ;
};_bffg :=4;if _baee .SdTemplate !=0{_bffg =1;};for _ddea :=0;_ddea < _bffg ;_ddea ++{if _dgad =_ggdb .WriteByte (byte (_baee .SdATX [_ddea ]));_dgad !=nil {return _cge ,_fb .Wrapf (_dgad ,_bgcb ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_ddea );};
_cge ++;if _dgad =_ggdb .WriteByte (byte (_baee .SdATY [_ddea ]));_dgad !=nil {return _cge ,_fb .Wrapf (_dgad ,_bgcb ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_ddea );};_cge ++;};return _cge ,nil ;};func (_bfff *SymbolDictionary )String ()string {_bbaf :=&_cf .Builder {};
_bbaf .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_bbaf .WriteString (_cc .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_bfff .SdrTemplate ));
_bbaf .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_bfff .SdTemplate ));_bbaf .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_bfff ._gedf ));
_bbaf .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_bfff ._gdfe ));_bbaf .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_bfff .SdHuffAggInstanceSelection ));
_bbaf .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_bfff .SdHuffBMSizeSelection ));_bbaf .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_bfff .SdHuffDecodeWidthSelection ));
_bbaf .WriteString (_cc .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_bfff .SdHuffDecodeHeightSelection ));_bbaf .WriteString (_cc .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_bfff .UseRefinementAggregation ));
_bbaf .WriteString (_cc .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_bfff .IsHuffmanEncoded ));_bbaf .WriteString (_cc .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_bfff .SdATX ));
_bbaf .WriteString (_cc .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_bfff .SdATY ));_bbaf .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_bfff .SdrATX ));
_bbaf .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_bfff .SdrATY ));_bbaf .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_bfff .NumberOfExportedSymbols ));
_bbaf .WriteString (_cc .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_bfff .NumberOfNewSymbols ));_bbaf .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_bfff ._egebf ));
_bbaf .WriteString (_cc .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_bfff ._eage ));return _bbaf .String ();};func _afcf (_feda int )int {if _feda ==0{return 0;
};_feda |=_feda >>1;_feda |=_feda >>2;_feda |=_feda >>4;_feda |=_feda >>8;_feda |=_feda >>16;return (_feda +1)>>1;};func (_acaab *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _acaab .IsHuffmanEncoded {return _acaab .decodeHeightClassDeltaHeightWithHuffman ();
};_eeaa ,_cada :=_acaab ._faec .DecodeInt (_acaab ._gffcg );if _cada !=nil {return 0,_cada ;};return int64 (_eeaa ),nil ;};func (_afff *TextRegion )setContexts (_cdga *_cg .DecoderStats ,_gdgbc *_cg .DecoderStats ,_dbcb *_cg .DecoderStats ,_fbfc *_cg .DecoderStats ,_gacaa *_cg .DecoderStats ,_bfeda *_cg .DecoderStats ,_cgeaf *_cg .DecoderStats ,_aecb *_cg .DecoderStats ,_effa *_cg .DecoderStats ,_gaabe *_cg .DecoderStats ){_afff ._fecba =_gdgbc ;
_afff ._fedf =_dbcb ;_afff ._gfc =_fbfc ;_afff ._bgfgc =_gacaa ;_afff ._ffcbc =_cgeaf ;_afff ._fgge =_aecb ;_afff ._ebgga =_bfeda ;_afff ._abgge =_effa ;_afff ._dbde =_gaabe ;_afff ._aefd =_cdga ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;
TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;
TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;
TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_bbgbc *HalftoneRegion )shiftAndFill (_dccad int )int {_dccad >>=8;if _dccad < 0{_adad :=int (_e .Log (float64 (_afcf (_dccad )))/_e .Log (2));_gcag :=31-_adad ;for _cbe :=1;
_cbe < _gcag ;_cbe ++{_dccad |=1<<uint (31-_cbe );};};return _dccad ;};func (_eedg *HalftoneRegion )grayScaleDecoding (_aecd int )([][]int ,error ){var (_ceggd []int8 ;_fbg []int8 ;);if !_eedg .IsMMREncoded {_ceggd =make ([]int8 ,4);_fbg =make ([]int8 ,4);
if _eedg .HTemplate <=1{_ceggd [0]=3;}else if _eedg .HTemplate >=2{_ceggd [0]=2;};_fbg [0]=-1;_ceggd [1]=-3;_fbg [1]=-1;_ceggd [2]=2;_fbg [2]=-2;_ceggd [3]=-2;_fbg [3]=-2;};_ggde :=make ([]*_f .Bitmap ,_aecd );_bgdg :=NewGenericRegion (_eedg ._abbb );_bgdg .setParametersMMR (_eedg .IsMMREncoded ,_eedg .DataOffset ,_eedg .DataLength ,_eedg .HGridHeight ,_eedg .HGridWidth ,_eedg .HTemplate ,false ,_eedg .HSkipEnabled ,_ceggd ,_fbg );
_gcff :=_aecd -1;var _bfeb error ;_ggde [_gcff ],_bfeb =_bgdg .GetRegionBitmap ();if _bfeb !=nil {return nil ,_bfeb ;};for _gcff > 0{_gcff --;_bgdg .Bitmap =nil ;_ggde [_gcff ],_bfeb =_bgdg .GetRegionBitmap ();if _bfeb !=nil {return nil ,_bfeb ;};if _bfeb =_eedg .combineGrayscalePlanes (_ggde ,_gcff );
_bfeb !=nil {return nil ,_bfeb ;};};return _eedg .computeGrayScalePlanes (_ggde ,_aecd );};func (_bbcce *TextRegion )Encode (w _d .BinaryWriter )(_daga int ,_abba error ){const _cgac ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _daga ,_abba =_bbcce .RegionInfo .Encode (w );_abba !=nil {return _daga ,_fb .Wrap (_abba ,_cgac ,"");};var _ddgff int ;if _ddgff ,_abba =_bbcce .encodeFlags (w );_abba !=nil {return _daga ,_fb .Wrap (_abba ,_cgac ,"");};_daga +=_ddgff ;if _ddgff ,_abba =_bbcce .encodeSymbols (w );
_abba !=nil {return _daga ,_fb .Wrap (_abba ,_cgac ,"");};_daga +=_ddgff ;return _daga ,nil ;};func (_ebaag *SymbolDictionary )setSymbolsArray ()error {if _ebaag ._debc ==nil {if _gdae :=_ebaag .retrieveImportSymbols ();_gdae !=nil {return _gdae ;};};if _ebaag ._fcfg ==nil {_ebaag ._fcfg =append (_ebaag ._fcfg ,_ebaag ._debc ...);
};return nil ;};func (_cfdfe *SymbolDictionary )parseHeader ()(_aaccb error ){_ge .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _aaccb !=nil {_ge .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_aaccb );
}else {_ge .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _aaccb =_cfdfe .readRegionFlags ();_aaccb !=nil {return _aaccb ;};if _aaccb =_cfdfe .setAtPixels ();_aaccb !=nil {return _aaccb ;};if _aaccb =_cfdfe .setRefinementAtPixels ();_aaccb !=nil {return _aaccb ;};if _aaccb =_cfdfe .readNumberOfExportedSymbols ();
_aaccb !=nil {return _aaccb ;};if _aaccb =_cfdfe .readNumberOfNewSymbols ();_aaccb !=nil {return _aaccb ;};if _aaccb =_cfdfe .setInSyms ();_aaccb !=nil {return _aaccb ;};if _cfdfe ._gdfe {_cfbcf :=_cfdfe .Header .RTSegments ;for _gcea :=len (_cfbcf )-1;
_gcea >=0;_gcea --{if _cfbcf [_gcea ].Type ==0{_ecff ,_defee :=_cfbcf [_gcea ].SegmentData .(*SymbolDictionary );if !_defee {_aaccb =_cc .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_cfbcf [_gcea ]);
return _aaccb ;};if _ecff ._gdfe {_cfdfe .setRetainedCodingContexts (_ecff );};break ;};};};if _aaccb =_cfdfe .checkInput ();_aaccb !=nil {return _aaccb ;};return nil ;};func (_adfg *TextRegion )createRegionBitmap ()error {_adfg .RegionBitmap =_f .New (int (_adfg .RegionInfo .BitmapWidth ),int (_adfg .RegionInfo .BitmapHeight ));
if _adfg .DefaultPixel !=0{_adfg .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_fbb *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_acg ,_bddd ,_dcd ,_gaf ,_ccc ,_gbg ,_agf ,_edg ,_cdag int )(_ede error ){var (_afg ,_ecg int ;
_dbe ,_fdf int ;_ffb ,_gfa int ;_fge byte ;);if _acg > 0{_fge ,_ede =_fbb .RegionBitmap .GetByte (_agf -_dcd );if _ede !=nil {return ;};_dbe =int (_fge );};if _edg > 0&&_edg <=_fbb .ReferenceBitmap .Height {_fge ,_ede =_fbb .ReferenceBitmap .GetByte (_cdag -_gaf +_gbg );
if _ede !=nil {return ;};_fdf =int (_fge )<<2;};if _edg >=0&&_edg < _fbb .ReferenceBitmap .Height {_fge ,_ede =_fbb .ReferenceBitmap .GetByte (_cdag +_gbg );if _ede !=nil {return ;};_ffb =int (_fge );};if _edg > -2&&_edg < _fbb .ReferenceBitmap .Height -1{_fge ,_ede =_fbb .ReferenceBitmap .GetByte (_cdag +_gaf +_gbg );
if _ede !=nil {return ;};_gfa =int (_fge );};_afg =((_dbe >>5)&0x6)|((_gfa >>2)&0x30)|(_ffb &0xc0)|(_fdf &0x200);_ecg =((_gfa >>2)&0x70)|(_ffb &0xc0)|(_fdf &0x700);var _gaff int ;for _cbf :=0;_cbf < _ccc ;_cbf =_gaff {var (_bad int ;_bbc int ;);_gaff =_cbf +8;
if _bad =_bddd -_cbf ;_bad > 8{_bad =8;};_def :=_gaff < _bddd ;_bgd :=_gaff < _fbb .ReferenceBitmap .Width ;_fc :=_gbg +1;if _acg > 0{_fge =0;if _def {_fge ,_ede =_fbb .RegionBitmap .GetByte (_agf -_dcd +1);if _ede !=nil {return ;};};_dbe =(_dbe <<8)|int (_fge );
};if _edg > 0&&_edg <=_fbb .ReferenceBitmap .Height {var _dcf int ;if _bgd {_fge ,_ede =_fbb .ReferenceBitmap .GetByte (_cdag -_gaf +_fc );if _ede !=nil {return ;};_dcf =int (_fge )<<2;};_fdf =(_fdf <<8)|_dcf ;};if _edg >=0&&_edg < _fbb .ReferenceBitmap .Height {_fge =0;
if _bgd {_fge ,_ede =_fbb .ReferenceBitmap .GetByte (_cdag +_fc );if _ede !=nil {return ;};};_ffb =(_ffb <<8)|int (_fge );};if _edg > -2&&_edg < (_fbb .ReferenceBitmap .Height -1){_fge =0;if _bgd {_fge ,_ede =_fbb .ReferenceBitmap .GetByte (_cdag +_gaf +_fc );
if _ede !=nil {return ;};};_gfa =(_gfa <<8)|int (_fge );};for _gde :=0;_gde < _bad ;_gde ++{var _fdd int ;_fbbg :=(_ecg >>4)&0x1ff;switch _fbbg {case 0x1ff:_fdd =1;case 0x00:_fdd =0;default:_fbb ._ecf .SetIndex (int32 (_afg ));_fdd ,_ede =_fbb ._fd .DecodeBit (_fbb ._ecf );
if _ede !=nil {return ;};};_efe :=uint (7-_gde );_bbc |=_fdd <<_efe ;_afg =((_afg &0x0d6)<<1)|_fdd |(_dbe >>_efe +5)&0x002|((_gfa >>_efe +2)&0x010)|((_ffb >>_efe )&0x040)|((_fdf >>_efe )&0x200);_ecg =((_ecg &0xdb)<<1)|((_gfa >>_efe +2)&0x010)|((_ffb >>_efe )&0x080)|((_fdf >>_efe )&0x400);
};_ede =_fbb .RegionBitmap .SetByte (_agf ,byte (_bbc ));if _ede !=nil {return ;};_agf ++;_cdag ++;};return nil ;};func (_bcac *SymbolDictionary )decodeHeightClassBitmap (_bdcg *_f .Bitmap ,_eede int64 ,_efda int ,_cbdg []int )error {for _abcb :=_eede ;
_abcb < int64 (_bcac ._eage );_abcb ++{var _caeb int ;for _cfeac :=_eede ;_cfeac <=_abcb -1;_cfeac ++{_caeb +=_cbdg [_cfeac ];};_deagc :=_c .Rect (_caeb ,0,_caeb +_cbdg [_abcb ],_efda );_fdga ,_ccba :=_f .Extract (_deagc ,_bdcg );if _ccba !=nil {return _ccba ;
};_bcac ._bbbd [_abcb ]=_fdga ;_bcac ._fcfg =append (_bcac ._fcfg ,_fdga );};return nil ;};func (_gbc *GenericRefinementRegion )updateOverride ()error {if _gbc .GrAtX ==nil ||_gbc .GrAtY ==nil {return _g .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_gbc .GrAtX )!=len (_gbc .GrAtY ){return _g .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_gbc ._cgc =make ([]bool ,len (_gbc .GrAtX ));switch _gbc .TemplateID {case 0:if _gbc .GrAtX [0]!=-1&&_gbc .GrAtY [0]!=-1{_gbc ._cgc [0]=true ;
_gbc ._cfb =true ;};if _gbc .GrAtX [1]!=-1&&_gbc .GrAtY [1]!=-1{_gbc ._cgc [1]=true ;_gbc ._cfb =true ;};case 1:_gbc ._cfb =false ;};return nil ;};func (_ggcc *Header )writeFlags (_ggdeb _d .BinaryWriter )(_dcdd error ){const _fdba ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_cfeaa :=byte (_ggcc .Type );if _dcdd =_ggdeb .WriteByte (_cfeaa );_dcdd !=nil {return _fb .Wrap (_dcdd ,_fdba ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_ggcc .RetainFlag &&!_ggcc .PageAssociationFieldSize {return nil ;};if _dcdd =_ggdeb .SkipBits (-8);_dcdd !=nil {return _fb .Wrap (_dcdd ,_fdba ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _eef int ;if _ggcc .RetainFlag {_eef =1;};if _dcdd =_ggdeb .WriteBit (_eef );_dcdd !=nil {return _fb .Wrap (_dcdd ,_fdba ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_eef =0;if _ggcc .PageAssociationFieldSize {_eef =1;
};if _dcdd =_ggdeb .WriteBit (_eef );_dcdd !=nil {return _fb .Wrap (_dcdd ,_fdba ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_ggdeb .FinishByte ();return nil ;};func (_fee *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_bgaf ,_egfg ,_dff ,_cgcb ,_cdd ,_ee ,_ecd ,_fga ,_cdb int )error {var (_dfd ,_bdg ,_eb ,_cga ,_dae ,_dbb int ;
_ecb byte ;_ea error ;);if _bgaf > 0{_ecb ,_ea =_fee .RegionBitmap .GetByte (_ecd -_dff );if _ea !=nil {return _ea ;};_eb =int (_ecb );};if _fga > 0&&_fga <=_fee .ReferenceBitmap .Height {_ecb ,_ea =_fee .ReferenceBitmap .GetByte (_cdb -_cgcb +_ee );if _ea !=nil {return _ea ;
};_cga =int (_ecb )<<4;};if _fga >=0&&_fga < _fee .ReferenceBitmap .Height {_ecb ,_ea =_fee .ReferenceBitmap .GetByte (_cdb +_ee );if _ea !=nil {return _ea ;};_dae =int (_ecb )<<1;};if _fga > -2&&_fga < _fee .ReferenceBitmap .Height -1{_ecb ,_ea =_fee .ReferenceBitmap .GetByte (_cdb +_cgcb +_ee );
if _ea !=nil {return _ea ;};_dbb =int (_ecb );};_dfd =((_eb >>5)&0x6)|((_dbb >>2)&0x30)|(_dae &0x180)|(_cga &0xc00);var _bfc int ;for _cde :=0;_cde < _cdd ;_cde =_bfc {var _agg int ;_bfc =_cde +8;var _af int ;if _af =_egfg -_cde ;_af > 8{_af =8;};_cce :=_bfc < _egfg ;
_daf :=_bfc < _fee .ReferenceBitmap .Width ;_ef :=_ee +1;if _bgaf > 0{_ecb =0;if _cce {_ecb ,_ea =_fee .RegionBitmap .GetByte (_ecd -_dff +1);if _ea !=nil {return _ea ;};};_eb =(_eb <<8)|int (_ecb );};if _fga > 0&&_fga <=_fee .ReferenceBitmap .Height {var _adg int ;
if _daf {_ecb ,_ea =_fee .ReferenceBitmap .GetByte (_cdb -_cgcb +_ef );if _ea !=nil {return _ea ;};_adg =int (_ecb )<<4;};_cga =(_cga <<8)|_adg ;};if _fga >=0&&_fga < _fee .ReferenceBitmap .Height {var _bbg int ;if _daf {_ecb ,_ea =_fee .ReferenceBitmap .GetByte (_cdb +_ef );
if _ea !=nil {return _ea ;};_bbg =int (_ecb )<<1;};_dae =(_dae <<8)|_bbg ;};if _fga > -2&&_fga < (_fee .ReferenceBitmap .Height -1){_ecb =0;if _daf {_ecb ,_ea =_fee .ReferenceBitmap .GetByte (_cdb +_cgcb +_ef );if _ea !=nil {return _ea ;};};_dbb =(_dbb <<8)|int (_ecb );
};for _dab :=0;_dab < _af ;_dab ++{var _cec int ;_bbe :=false ;_cgf :=(_dfd >>4)&0x1ff;if _cgf ==0x1ff{_bbe =true ;_cec =1;}else if _cgf ==0x00{_bbe =true ;};if !_bbe {if _fee ._cfb {_bdg =_fee .overrideAtTemplate0 (_dfd ,_cde +_dab ,_bgaf ,_agg ,_dab );
_fee ._ecf .SetIndex (int32 (_bdg ));}else {_fee ._ecf .SetIndex (int32 (_dfd ));};_cec ,_ea =_fee ._fd .DecodeBit (_fee ._ecf );if _ea !=nil {return _ea ;};};_gaa :=uint (7-_dab );_agg |=_cec <<_gaa ;_dfd =((_dfd &0xdb6)<<1)|_cec |(_eb >>_gaa +5)&0x002|((_dbb >>_gaa +2)&0x010)|((_dae >>_gaa )&0x080)|((_cga >>_gaa )&0x400);
};_ea =_fee .RegionBitmap .SetByte (_ecd ,byte (_agg ));if _ea !=nil {return _ea ;};_ecd ++;_cdb ++;};return nil ;};func (_cgga *PatternDictionary )readPatternWidthAndHeight ()error {_faaf ,_cfbb :=_cgga ._cbef .ReadByte ();if _cfbb !=nil {return _cfbb ;
};_cgga .HdpWidth =_faaf ;_faaf ,_cfbb =_cgga ._cbef .ReadByte ();if _cfbb !=nil {return _cfbb ;};_cgga .HdpHeight =_faaf ;return nil ;};func (_gcgf *TableSegment )HtOOB ()int32 {return _gcgf ._bfbga };func (_dbbc *TextRegion )readUseRefinement ()error {if !_dbbc .UseRefinement ||_dbbc .SbrTemplate !=0{return nil ;
};var (_feaa byte ;_edfg error ;);_dbbc .SbrATX =make ([]int8 ,2);_dbbc .SbrATY =make ([]int8 ,2);_feaa ,_edfg =_dbbc ._dfcde .ReadByte ();if _edfg !=nil {return _edfg ;};_dbbc .SbrATX [0]=int8 (_feaa );_feaa ,_edfg =_dbbc ._dfcde .ReadByte ();if _edfg !=nil {return _edfg ;
};_dbbc .SbrATY [0]=int8 (_feaa );_feaa ,_edfg =_dbbc ._dfcde .ReadByte ();if _edfg !=nil {return _edfg ;};_dbbc .SbrATX [1]=int8 (_feaa );_feaa ,_edfg =_dbbc ._dfcde .ReadByte ();if _edfg !=nil {return _edfg ;};_dbbc .SbrATY [1]=int8 (_feaa );return nil ;
};func (_eaad *HalftoneRegion )computeY (_ggec ,_gaef int )int {return _eaad .shiftAndFill (int (_eaad .HGridY )+_ggec *int (_eaad .HRegionX )-_gaef *int (_eaad .HRegionY ));};func (_cfcc *Header )GetSegmentData ()(Segmenter ,error ){var _bgag Segmenter ;
if _cfcc .SegmentData !=nil {_bgag =_cfcc .SegmentData ;};if _bgag ==nil {_egeb ,_bgfg :=_fcca [_cfcc .Type ];if !_bgfg {return nil ,_cc .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_cfcc .Type ,_cfcc .Type );
};_bgag =_egeb ();_ge .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_cfcc .SegmentNumber ,_cfcc .SegmentDataStartOffset );
_cdgd ,_egcf :=_cfcc .subInputReader ();if _egcf !=nil {return nil ,_egcf ;};if _bfb :=_bgag .Init (_cfcc ,_cdgd );_bfb !=nil {_ge .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_bfb ,_bgag );
return nil ,_bfb ;};_cfcc .SegmentData =_bgag ;};return _bgag ,nil ;};func (_fafg *TextRegion )computeSymbolCodeLength ()error {if _fafg .IsHuffmanEncoded {return _fafg .symbolIDCodeLengths ();};_fafg ._cega =int8 (_e .Ceil (_e .Log (float64 (_fafg .NumberOfSymbols ))/_e .Log (2)));
return nil ;};func (_cgae *GenericRegion )decodeLine (_bbed ,_gdc ,_cfead int )error {const _aeb ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_ccdc :=_cgae .Bitmap .GetByteIndex (0,_bbed );_cccc :=_ccdc -_cgae .Bitmap .RowStride ;switch _cgae .GBTemplate {case 0:if !_cgae .UseExtTemplates {return _cgae .decodeTemplate0a (_bbed ,_gdc ,_cfead ,_ccdc ,_cccc );
};return _cgae .decodeTemplate0b (_bbed ,_gdc ,_cfead ,_ccdc ,_cccc );case 1:return _cgae .decodeTemplate1 (_bbed ,_gdc ,_cfead ,_ccdc ,_cccc );case 2:return _cgae .decodeTemplate2 (_bbed ,_gdc ,_cfead ,_ccdc ,_cccc );case 3:return _cgae .decodeTemplate3 (_bbed ,_gdc ,_cfead ,_ccdc ,_cccc );
};return _fb .Errorf (_aeb ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_cgae .GBTemplate );};func (_eecd *TextRegion )blit (_faafa *_f .Bitmap ,_fcd int64 )error {if _eecd .IsTransposed ==0&&(_eecd .ReferenceCorner ==2||_eecd .ReferenceCorner ==3){_eecd ._cfeg +=int64 (_faafa .Width -1);
}else if _eecd .IsTransposed ==1&&(_eecd .ReferenceCorner ==0||_eecd .ReferenceCorner ==2){_eecd ._cfeg +=int64 (_faafa .Height -1);};_ebcg :=_eecd ._cfeg ;if _eecd .IsTransposed ==1{_ebcg ,_fcd =_fcd ,_ebcg ;};switch _eecd .ReferenceCorner {case 0:_fcd -=int64 (_faafa .Height -1);
case 2:_fcd -=int64 (_faafa .Height -1);_ebcg -=int64 (_faafa .Width -1);case 3:_ebcg -=int64 (_faafa .Width -1);};_fgbea :=_f .Blit (_faafa ,_eecd .RegionBitmap ,int (_ebcg ),int (_fcd ),_eecd .CombinationOperator );if _fgbea !=nil {return _fgbea ;};if _eecd .IsTransposed ==0&&(_eecd .ReferenceCorner ==0||_eecd .ReferenceCorner ==1){_eecd ._cfeg +=int64 (_faafa .Width -1);
};if _eecd .IsTransposed ==1&&(_eecd .ReferenceCorner ==1||_eecd .ReferenceCorner ==3){_eecd ._cfeg +=int64 (_faafa .Height -1);};return nil ;};func (_gfae *TableSegment )HtHigh ()int32 {return _gfae ._gegb };func (_fdab *SymbolDictionary )getSbSymCodeLen ()int8 {_eade :=int8 (_e .Ceil (_e .Log (float64 (_fdab ._egebf +_fdab .NumberOfNewSymbols ))/_e .Log (2)));
if _fdab .IsHuffmanEncoded &&_eade < 1{return 1;};return _eade ;};func (_acbe *Header )readSegmentDataLength (_bgcd _d .StreamReader )(_gecf error ){_acbe .SegmentDataLength ,_gecf =_bgcd .ReadBits (32);if _gecf !=nil {return _gecf ;};_acbe .SegmentDataLength &=_e .MaxInt32 ;
return nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _d .StreamReader ;
SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};type template0 struct{};func (_ffgf *TableSegment )HtRS ()int32 {return _ffgf ._feag };func (_bbbf *SymbolDictionary )setRetainedCodingContexts (_eedf *SymbolDictionary ){_bbbf ._faec =_eedf ._faec ;
_bbbf .IsHuffmanEncoded =_eedf .IsHuffmanEncoded ;_bbbf .UseRefinementAggregation =_eedf .UseRefinementAggregation ;_bbbf .SdTemplate =_eedf .SdTemplate ;_bbbf .SdrTemplate =_eedf .SdrTemplate ;_bbbf .SdATX =_eedf .SdATX ;_bbbf .SdATY =_eedf .SdATY ;_bbbf .SdrATX =_eedf .SdrATX ;
_bbbf .SdrATY =_eedf .SdrATY ;_bbbf ._gacef =_eedf ._gacef ;};func (_ccdd *TextRegion )parseHeader ()error {var _adge error ;_ge .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _adge !=nil {_ge .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_adge );
}else {_ge .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _adge =_ccdd .RegionInfo .parseHeader ();
_adge !=nil {return _adge ;};if _adge =_ccdd .readRegionFlags ();_adge !=nil {return _adge ;};if _ccdd .IsHuffmanEncoded {if _adge =_ccdd .readHuffmanFlags ();_adge !=nil {return _adge ;};};if _adge =_ccdd .readUseRefinement ();_adge !=nil {return _adge ;
};if _adge =_ccdd .readAmountOfSymbolInstances ();_adge !=nil {return _adge ;};if _adge =_ccdd .getSymbols ();_adge !=nil {return _adge ;};if _adge =_ccdd .computeSymbolCodeLength ();_adge !=nil {return _adge ;};if _adge =_ccdd .checkInput ();_adge !=nil {return _adge ;
};_ge .Log .Trace ("\u0025\u0073",_ccdd .String ());return nil ;};func NewHeader (d Documenter ,r _d .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_fac :=&Header {Reader :r };if _gee :=_fac .parse (d ,r ,offset ,organizationType );
_gee !=nil {return nil ,_fb .Wrap (_gee ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _fac ,nil ;};func (_dgdb *TextRegion )symbolIDCodeLengths ()error {var (_ggff []*_b .Code ;_fage uint64 ;_gbdfg _b .Tabler ;_ccgae error ;);for _agcgg :=0;
_agcgg < 35;_agcgg ++{_fage ,_ccgae =_dgdb ._dfcde .ReadBits (4);if _ccgae !=nil {return _ccgae ;};_bbgf :=int (_fage &0xf);if _bbgf > 0{_ggff =append (_ggff ,_b .NewCode (int32 (_bbgf ),0,int32 (_agcgg ),false ));};};_gbdfg ,_ccgae =_b .NewFixedSizeTable (_ggff );
if _ccgae !=nil {return _ccgae ;};var (_ebbb int64 ;_bdfe uint32 ;_gadc []*_b .Code ;_gced int64 ;);for _bdfe < _dgdb .NumberOfSymbols {_gced ,_ccgae =_gbdfg .Decode (_dgdb ._dfcde );if _ccgae !=nil {return _ccgae ;};if _gced < 32{if _gced > 0{_gadc =append (_gadc ,_b .NewCode (int32 (_gced ),0,int32 (_bdfe ),false ));
};_ebbb =_gced ;_bdfe ++;}else {var _dgaa ,_ebdd int64 ;switch _gced {case 32:_fage ,_ccgae =_dgdb ._dfcde .ReadBits (2);if _ccgae !=nil {return _ccgae ;};_dgaa =3+int64 (_fage );if _bdfe > 0{_ebdd =_ebbb ;};case 33:_fage ,_ccgae =_dgdb ._dfcde .ReadBits (3);
if _ccgae !=nil {return _ccgae ;};_dgaa =3+int64 (_fage );case 34:_fage ,_ccgae =_dgdb ._dfcde .ReadBits (7);if _ccgae !=nil {return _ccgae ;};_dgaa =11+int64 (_fage );};for _bgadb :=0;_bgadb < int (_dgaa );_bgadb ++{if _ebdd > 0{_gadc =append (_gadc ,_b .NewCode (int32 (_ebdd ),0,int32 (_bdfe ),false ));
};_bdfe ++;};};};_dgdb ._dfcde .Align ();_dgdb ._acgae ,_ccgae =_b .NewFixedSizeTable (_gadc );return _ccgae ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_gffa *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _gffa .SdHuffDecodeHeightSelection {case 0:_gfdg ,_eaae :=_b .GetStandardTable (4);
if _eaae !=nil {return 0,_eaae ;};return _gfdg .Decode (_gffa ._gcdf );case 1:_gddb ,_fcge :=_b .GetStandardTable (5);if _fcge !=nil {return 0,_fcge ;};return _gddb .Decode (_gffa ._gcdf );case 3:if _gffa ._feee ==nil {_cgee ,_cbgdd :=_b .GetStandardTable (0);
if _cbgdd !=nil {return 0,_cbgdd ;};_gffa ._feee =_cgee ;};return _gffa ._feee .Decode (_gffa ._gcdf );};return 0,nil ;};func (_bfe *GenericRefinementRegion )setParameters (_ddb *_cg .DecoderStats ,_bfd *_cg .Decoder ,_fdfg int8 ,_cgb ,_dddc uint32 ,_gcd *_f .Bitmap ,_cee ,_aad int32 ,_eca bool ,_acga []int8 ,_cgbd []int8 ){_ge .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _ddb !=nil {_bfe ._ecf =_ddb ;};if _bfd !=nil {_bfe ._fd =_bfd ;};_bfe .TemplateID =_fdfg ;_bfe .RegionInfo .BitmapWidth =_cgb ;_bfe .RegionInfo .BitmapHeight =_dddc ;_bfe .ReferenceBitmap =_gcd ;_bfe .ReferenceDX =_cee ;_bfe .ReferenceDY =_aad ;_bfe .IsTPGROn =_eca ;
_bfe .GrAtX =_acga ;_bfe .GrAtY =_cgbd ;_bfe .RegionBitmap =nil ;_ge .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_bfe );
};func (_gbgd *Header )readNumberOfReferredToSegments (_gdcf _d .StreamReader )(uint64 ,error ){const _fggb ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_accd ,_gbb :=_gdcf .ReadBits (3);if _gbb !=nil {return 0,_fb .Wrap (_gbb ,_fggb ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_accd &=0xf;var _dcg []byte ;if _accd <=4{_dcg =make ([]byte ,5);for _bffa :=0;_bffa <=4;_bffa ++{_facg ,_cbba :=_gdcf .ReadBit ();
if _cbba !=nil {return 0,_fb .Wrap (_cbba ,_fggb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dcg [_bffa ]=byte (_facg );};}else {_accd ,_gbb =_gdcf .ReadBits (29);if _gbb !=nil {return 0,_gbb ;};_accd &=_e .MaxInt32 ;_ebggc :=(_accd +8)>>3;
_ebggc <<=3;_dcg =make ([]byte ,_ebggc );var _ddfe uint64 ;for _ddfe =0;_ddfe < _ebggc ;_ddfe ++{_becbd ,_bbf :=_gdcf .ReadBit ();if _bbf !=nil {return 0,_fb .Wrap (_bbf ,_fggb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_dcg [_ddfe ]=byte (_becbd );
};};return _accd ,nil ;};func (_fafce *TableSegment )Init (h *Header ,r _d .StreamReader )error {_fafce ._gcaef =r ;return _fafce .parseHeader ();};func (_cgeaa *TextRegion )decodeIb (_bdge ,_egaa int64 )(*_f .Bitmap ,error ){const _deac ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";
var (_fedfa error ;_fbdde *_f .Bitmap ;);if _bdge ==0{if int (_egaa )> len (_cgeaa .Symbols )-1{return nil ,_fb .Error (_deac ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _cgeaa .Symbols [int (_egaa )],nil ;};var _gcfg ,_eccc ,_caga ,_dgadg int64 ;_gcfg ,_fedfa =_cgeaa .decodeRdw ();if _fedfa !=nil {return nil ,_fb .Wrap (_fedfa ,_deac ,"");};_eccc ,_fedfa =_cgeaa .decodeRdh ();if _fedfa !=nil {return nil ,_fb .Wrap (_fedfa ,_deac ,"");
};_caga ,_fedfa =_cgeaa .decodeRdx ();if _fedfa !=nil {return nil ,_fb .Wrap (_fedfa ,_deac ,"");};_dgadg ,_fedfa =_cgeaa .decodeRdy ();if _fedfa !=nil {return nil ,_fb .Wrap (_fedfa ,_deac ,"");};if _cgeaa .IsHuffmanEncoded {if _ ,_fedfa =_cgeaa .decodeSymInRefSize ();
_fedfa !=nil {return nil ,_fb .Wrap (_fedfa ,_deac ,"");};_cgeaa ._dfcde .Align ();};_cdgf :=_cgeaa .Symbols [_egaa ];_ffdfg :=uint32 (_cdgf .Width );_baagf :=uint32 (_cdgf .Height );_ecee :=int32 (uint32 (_gcfg )>>1)+int32 (_caga );_geba :=int32 (uint32 (_eccc )>>1)+int32 (_dgadg );
if _cgeaa ._fdfgc ==nil {_cgeaa ._fdfgc =_dbf (_cgeaa ._dfcde ,nil );};_cgeaa ._fdfgc .setParameters (_cgeaa ._aefd ,_cgeaa ._abbd ,_cgeaa .SbrTemplate ,_ffdfg +uint32 (_gcfg ),_baagf +uint32 (_eccc ),_cdgf ,_ecee ,_geba ,false ,_cgeaa .SbrATX ,_cgeaa .SbrATY );
_fbdde ,_fedfa =_cgeaa ._fdfgc .GetRegionBitmap ();if _fedfa !=nil {return nil ,_fb .Wrap (_fedfa ,_deac ,"\u0067\u0072\u0066");};if _cgeaa .IsHuffmanEncoded {_cgeaa ._dfcde .Align ();};return _fbdde ,nil ;};func (_fgaa *GenericRegion )GetRegionInfo ()*RegionSegment {return _fgaa .RegionSegment };
func (_deag *GenericRegion )overrideAtTemplate3 (_ega ,_eeba ,_add ,_dgcd ,_gbde int )int {_ega &=0x3EF;if _deag .GBAtY [0]==0&&_deag .GBAtX [0]>=-int8 (_gbde ){_ega |=(_dgcd >>uint (7-(int8 (_gbde )+_deag .GBAtX [0]))&0x1)<<4;}else {_ega |=int (_deag .getPixel (_eeba +int (_deag .GBAtX [0]),_add +int (_deag .GBAtY [0])))<<4;
};return _ega ;};func _dbf (_acdg _d .StreamReader ,_feg *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_bc :_acdg ,RegionInfo :NewRegionSegment (_acdg ),_dc :_feg ,_ccg :&template0 {},_gec :&template1 {}};};func (_abae *TextRegion )decodeStripT ()(_fbdd int64 ,_eeed error ){if _abae .IsHuffmanEncoded {if _abae .SbHuffDT ==3{if _abae ._bgbf ==nil {var _defc int ;
if _abae .SbHuffFS ==3{_defc ++;};if _abae .SbHuffDS ==3{_defc ++;};_abae ._bgbf ,_eeed =_abae .getUserTable (_defc );if _eeed !=nil {return 0,_eeed ;};};_fbdd ,_eeed =_abae ._bgbf .Decode (_abae ._dfcde );if _eeed !=nil {return 0,_eeed ;};}else {var _bce _b .Tabler ;
_bce ,_eeed =_b .GetStandardTable (11+int (_abae .SbHuffDT ));if _eeed !=nil {return 0,_eeed ;};_fbdd ,_eeed =_bce .Decode (_abae ._dfcde );if _eeed !=nil {return 0,_eeed ;};};}else {var _fged int32 ;_fged ,_eeed =_abae ._abbd .DecodeInt (_abae ._fecba );
if _eeed !=nil {return 0,_eeed ;};_fbdd =int64 (_fged );};_fbdd *=int64 (-_abae .SbStrips );return _fbdd ,nil ;};func (_caebe *SymbolDictionary )decodeRefinedSymbol (_daab ,_cafa uint32 )error {var (_cdde int ;_egdea ,_cgcg int32 ;);if _caebe .IsHuffmanEncoded {_cdcb ,_dagc :=_caebe ._gcdf .ReadBits (byte (_caebe ._dddb ));
if _dagc !=nil {return _dagc ;};_cdde =int (_cdcb );_adcg ,_dagc :=_b .GetStandardTable (15);if _dagc !=nil {return _dagc ;};_bcfb ,_dagc :=_adcg .Decode (_caebe ._gcdf );if _dagc !=nil {return _dagc ;};_egdea =int32 (_bcfb );_bcfb ,_dagc =_adcg .Decode (_caebe ._gcdf );
if _dagc !=nil {return _dagc ;};_cgcg =int32 (_bcfb );_adcg ,_dagc =_b .GetStandardTable (1);if _dagc !=nil {return _dagc ;};if _ ,_dagc =_adcg .Decode (_caebe ._gcdf );_dagc !=nil {return _dagc ;};_caebe ._gcdf .Align ();}else {_gagf ,_gcgad :=_caebe ._faec .DecodeIAID (uint64 (_caebe ._dddb ),_caebe ._dccab );
if _gcgad !=nil {return _gcgad ;};_cdde =int (_gagf );_egdea ,_gcgad =_caebe ._faec .DecodeInt (_caebe ._gdga );if _gcgad !=nil {return _gcgad ;};_cgcg ,_gcgad =_caebe ._faec .DecodeInt (_caebe ._afecg );if _gcgad !=nil {return _gcgad ;};};if _edgfd :=_caebe .setSymbolsArray ();
_edgfd !=nil {return _edgfd ;};_ffgc :=_caebe ._fcfg [_cdde ];if _dcfg :=_caebe .decodeNewSymbols (_daab ,_cafa ,_ffgc ,_egdea ,_cgcg );_dcfg !=nil {return _dcfg ;};if _caebe .IsHuffmanEncoded {_caebe ._gcdf .Align ();};return nil ;};func (_faag *Header )writeSegmentPageAssociation (_ade _d .BinaryWriter )(_deae int ,_cgbc error ){const _cgfe ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _faag .pageSize ()!=4{if _cgbc =_ade .WriteByte (byte (_faag .PageAssociation ));_cgbc !=nil {return 0,_fb .Wrap (_cgbc ,_cgfe ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_ecab :=make ([]byte ,4);
_ae .BigEndian .PutUint32 (_ecab ,uint32 (_faag .PageAssociation ));if _deae ,_cgbc =_ade .Write (_ecab );_cgbc !=nil {return 0,_fb .Wrap (_cgbc ,_cgfe ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _deae ,nil ;
};type SymbolDictionary struct{_gcdf _d .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_gedf bool ;_gdfe bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;
IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_egebf uint32 ;_debc []*_f .Bitmap ;_eage uint32 ;_bbbd []*_f .Bitmap ;_feee _b .Tabler ;_eaag _b .Tabler ;
_bfbg _b .Tabler ;_fda _b .Tabler ;_fadd []*_f .Bitmap ;_fcfg []*_f .Bitmap ;_faec *_cg .Decoder ;_cege *TextRegion ;_aeag *GenericRegion ;_fccd *GenericRefinementRegion ;_gacef *_cg .DecoderStats ;_gffcg *_cg .DecoderStats ;_gfec *_cg .DecoderStats ;_bdcf *_cg .DecoderStats ;
_bfcb *_cg .DecoderStats ;_gdga *_cg .DecoderStats ;_afecg *_cg .DecoderStats ;_gcgd *_cg .DecoderStats ;_dccab *_cg .DecoderStats ;_dddb int8 ;_edfef *_f .Bitmaps ;_ddcc []int ;_gefc map[int ]int ;_aadg bool ;};var _ templater =&template0 {};func (_cgff *TextRegion )getSymbols ()error {if _cgff .Header .RTSegments !=nil {return _cgff .initSymbols ();
};return nil ;};func (_dccf *Header )readHeaderFlags ()error {const _bgef ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_cgfg ,_aacc :=_dccf .Reader .ReadBit ();if _aacc !=nil {return _fb .Wrap (_aacc ,_bgef ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");
};if _cgfg !=0{_dccf .RetainFlag =true ;};_cgfg ,_aacc =_dccf .Reader .ReadBit ();if _aacc !=nil {return _fb .Wrap (_aacc ,_bgef ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _cgfg !=0{_dccf .PageAssociationFieldSize =true ;
};_aagbg ,_aacc :=_dccf .Reader .ReadBits (6);if _aacc !=nil {return _fb .Wrap (_aacc ,_bgef ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_dccf .Type =Type (int (_aagbg ));return nil ;};func (_aef *GenericRefinementRegion )decodeTemplate (_bcc ,_bbgc ,_dcc ,_cbbf ,_aea ,_ggg ,_fbd ,_fgf ,_fcg ,_acgd int ,_acd templater )(_gff error ){var (_gga ,_aeg ,_cad ,_cfda ,_edgc int16 ;
_geg ,_bcfe ,_ccb ,_bca int ;_cca byte ;);if _fcg >=1&&(_fcg -1)< _aef .ReferenceBitmap .Height {_cca ,_gff =_aef .ReferenceBitmap .GetByte (_acgd -_cbbf );if _gff !=nil {return ;};_geg =int (_cca );};if _fcg >=0&&(_fcg )< _aef .ReferenceBitmap .Height {_cca ,_gff =_aef .ReferenceBitmap .GetByte (_acgd );
if _gff !=nil {return ;};_bcfe =int (_cca );};if _fcg >=-1&&(_fcg +1)< _aef .ReferenceBitmap .Height {_cca ,_gff =_aef .ReferenceBitmap .GetByte (_acgd +_cbbf );if _gff !=nil {return ;};_ccb =int (_cca );};_acgd ++;if _bcc >=1{_cca ,_gff =_aef .RegionBitmap .GetByte (_fgf -_dcc );
if _gff !=nil {return ;};_bca =int (_cca );};_fgf ++;_eba :=_aef .ReferenceDX %8;_gdd :=6+_eba ;_gaca :=_acgd %_cbbf ;if _gdd >=0{if _gdd < 8{_gga =int16 (_geg >>uint (_gdd ))&0x07;};if _gdd < 8{_aeg =int16 (_bcfe >>uint (_gdd ))&0x07;};if _gdd < 8{_cad =int16 (_ccb >>uint (_gdd ))&0x07;
};if _gdd ==6&&_gaca > 1{if _fcg >=1&&(_fcg -1)< _aef .ReferenceBitmap .Height {_cca ,_gff =_aef .ReferenceBitmap .GetByte (_acgd -_cbbf -2);if _gff !=nil {return _gff ;};_gga |=int16 (_cca <<2)&0x04;};if _fcg >=0&&_fcg < _aef .ReferenceBitmap .Height {_cca ,_gff =_aef .ReferenceBitmap .GetByte (_acgd -2);
if _gff !=nil {return _gff ;};_aeg |=int16 (_cca <<2)&0x04;};if _fcg >=-1&&_fcg +1< _aef .ReferenceBitmap .Height {_cca ,_gff =_aef .ReferenceBitmap .GetByte (_acgd +_cbbf -2);if _gff !=nil {return _gff ;};_cad |=int16 (_cca <<2)&0x04;};};if _gdd ==0{_geg =0;
_bcfe =0;_ccb =0;if _gaca < _cbbf -1{if _fcg >=1&&_fcg -1< _aef .ReferenceBitmap .Height {_cca ,_gff =_aef .ReferenceBitmap .GetByte (_acgd -_cbbf );if _gff !=nil {return _gff ;};_geg =int (_cca );};if _fcg >=0&&_fcg < _aef .ReferenceBitmap .Height {_cca ,_gff =_aef .ReferenceBitmap .GetByte (_acgd );
if _gff !=nil {return _gff ;};_bcfe =int (_cca );};if _fcg >=-1&&_fcg +1< _aef .ReferenceBitmap .Height {_cca ,_gff =_aef .ReferenceBitmap .GetByte (_acgd +_cbbf );if _gff !=nil {return _gff ;};_ccb =int (_cca );};};_acgd ++;};}else {_gga =int16 (_geg <<1)&0x07;
_aeg =int16 (_bcfe <<1)&0x07;_cad =int16 (_ccb <<1)&0x07;_geg =0;_bcfe =0;_ccb =0;if _gaca < _cbbf -1{if _fcg >=1&&_fcg -1< _aef .ReferenceBitmap .Height {_cca ,_gff =_aef .ReferenceBitmap .GetByte (_acgd -_cbbf );if _gff !=nil {return _gff ;};_geg =int (_cca );
};if _fcg >=0&&_fcg < _aef .ReferenceBitmap .Height {_cca ,_gff =_aef .ReferenceBitmap .GetByte (_acgd );if _gff !=nil {return _gff ;};_bcfe =int (_cca );};if _fcg >=-1&&_fcg +1< _aef .ReferenceBitmap .Height {_cca ,_gff =_aef .ReferenceBitmap .GetByte (_acgd +_cbbf );
if _gff !=nil {return _gff ;};_ccb =int (_cca );};_acgd ++;};_gga |=int16 ((_geg >>7)&0x07);_aeg |=int16 ((_bcfe >>7)&0x07);_cad |=int16 ((_ccb >>7)&0x07);};_cfda =int16 (_bca >>6);_edgc =0;_agff :=(2-_eba )%8;_geg <<=uint (_agff );_bcfe <<=uint (_agff );
_ccb <<=uint (_agff );_bca <<=2;var _cadg int ;for _ggc :=0;_ggc < _bbgc ;_ggc ++{_afe :=_ggc &0x07;_edd :=_acd .form (_gga ,_aeg ,_cad ,_cfda ,_edgc );if _aef ._cfb {_cca ,_gff =_aef .RegionBitmap .GetByte (_aef .RegionBitmap .GetByteIndex (_ggc ,_bcc ));
if _gff !=nil {return _gff ;};_aef ._ecf .SetIndex (int32 (_aef .overrideAtTemplate0 (int (_edd ),_ggc ,_bcc ,int (_cca ),_afe )));}else {_aef ._ecf .SetIndex (int32 (_edd ));};_cadg ,_gff =_aef ._fd .DecodeBit (_aef ._ecf );if _gff !=nil {return _gff ;
};if _gff =_aef .RegionBitmap .SetPixel (_ggc ,_bcc ,byte (_cadg ));_gff !=nil {return _gff ;};_gga =((_gga <<1)|0x01&int16 (_geg >>7))&0x07;_aeg =((_aeg <<1)|0x01&int16 (_bcfe >>7))&0x07;_cad =((_cad <<1)|0x01&int16 (_ccb >>7))&0x07;_cfda =((_cfda <<1)|0x01&int16 (_bca >>7))&0x07;
_edgc =int16 (_cadg );if (_ggc -int (_aef .ReferenceDX ))%8==5{_geg =0;_bcfe =0;_ccb =0;if ((_ggc -int (_aef .ReferenceDX ))/8)+1< _aef .ReferenceBitmap .RowStride {if _fcg >=1&&(_fcg -1)< _aef .ReferenceBitmap .Height {_cca ,_gff =_aef .ReferenceBitmap .GetByte (_acgd -_cbbf );
if _gff !=nil {return _gff ;};_geg =int (_cca );};if _fcg >=0&&_fcg < _aef .ReferenceBitmap .Height {_cca ,_gff =_aef .ReferenceBitmap .GetByte (_acgd );if _gff !=nil {return _gff ;};_bcfe =int (_cca );};if _fcg >=-1&&(_fcg +1)< _aef .ReferenceBitmap .Height {_cca ,_gff =_aef .ReferenceBitmap .GetByte (_acgd +_cbbf );
if _gff !=nil {return _gff ;};_ccb =int (_cca );};};_acgd ++;}else {_geg <<=1;_bcfe <<=1;_ccb <<=1;};if _afe ==5&&_bcc >=1{if ((_ggc >>3)+1)>=_aef .RegionBitmap .RowStride {_bca =0;}else {_cca ,_gff =_aef .RegionBitmap .GetByte (_fgf -_dcc );if _gff !=nil {return _gff ;
};_bca =int (_cca );};_fgf ++;}else {_bca <<=1;};};return nil ;};func (_beda *TextRegion )decodeDT ()(_beag int64 ,_dbcg error ){if _beda .IsHuffmanEncoded {if _beda .SbHuffDT ==3{_beag ,_dbcg =_beda ._bgbf .Decode (_beda ._dfcde );if _dbcg !=nil {return 0,_dbcg ;
};}else {var _cgaec _b .Tabler ;_cgaec ,_dbcg =_b .GetStandardTable (11+int (_beda .SbHuffDT ));if _dbcg !=nil {return 0,_dbcg ;};_beag ,_dbcg =_cgaec .Decode (_beda ._dfcde );if _dbcg !=nil {return 0,_dbcg ;};};}else {var _acce int32 ;_acce ,_dbcg =_beda ._abbd .DecodeInt (_beda ._fecba );
if _dbcg !=nil {return ;};_beag =int64 (_acce );};_beag *=int64 (_beda .SbStrips );return _beag ,nil ;};func (_cfad *TableSegment )parseHeader ()error {var (_dcac int ;_bbec uint64 ;_gbdf error ;);_dcac ,_gbdf =_cfad ._gcaef .ReadBit ();if _gbdf !=nil {return _gbdf ;
};if _dcac ==1{return _cc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_dcac );
};if _bbec ,_gbdf =_cfad ._gcaef .ReadBits (3);_gbdf !=nil {return _gbdf ;};_cfad ._feag =(int32 (_bbec )+1)&0xf;if _bbec ,_gbdf =_cfad ._gcaef .ReadBits (3);_gbdf !=nil {return _gbdf ;};_cfad ._gagb =(int32 (_bbec )+1)&0xf;if _bbec ,_gbdf =_cfad ._gcaef .ReadBits (32);
_gbdf !=nil {return _gbdf ;};_cfad ._aeaac =int32 (_bbec &_e .MaxInt32 );if _bbec ,_gbdf =_cfad ._gcaef .ReadBits (32);_gbdf !=nil {return _gbdf ;};_cfad ._gegb =int32 (_bbec &_e .MaxInt32 );return nil ;};func (_cgcec *TextRegion )encodeFlags (_gfab _d .BinaryWriter )(_ccdb int ,_cggb error ){const _cdeac ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _cggb =_gfab .WriteBit (int (_cgcec .SbrTemplate ));_cggb !=nil {return _ccdb ,_fb .Wrap (_cggb ,_cdeac ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_cggb =_gfab .WriteBits (uint64 (_cgcec .SbDsOffset ),5);_cggb !=nil {return _ccdb ,_fb .Wrap (_cggb ,_cdeac ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _cggb =_gfab .WriteBit (int (_cgcec .DefaultPixel ));_cggb !=nil {return _ccdb ,_fb .Wrap (_cggb ,_cdeac ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_cggb =_gfab .WriteBits (uint64 (_cgcec .CombinationOperator ),2);
_cggb !=nil {return _ccdb ,_fb .Wrap (_cggb ,_cdeac ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _cggb =_gfab .WriteBit (int (_cgcec .IsTransposed ));_cggb !=nil {return _ccdb ,_fb .Wrap (_cggb ,_cdeac ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_cggb =_gfab .WriteBits (uint64 (_cgcec .ReferenceCorner ),2);_cggb !=nil {return _ccdb ,_fb .Wrap (_cggb ,_cdeac ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_cggb =_gfab .WriteBits (uint64 (_cgcec .LogSBStrips ),2);
_cggb !=nil {return _ccdb ,_fb .Wrap (_cggb ,_cdeac ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _ddbe int ;if _cgcec .UseRefinement {_ddbe =1;};if _cggb =_gfab .WriteBit (_ddbe );_cggb !=nil {return _ccdb ,_fb .Wrap (_cggb ,_cdeac ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_ddbe =0;if _cgcec .IsHuffmanEncoded {_ddbe =1;};if _cggb =_gfab .WriteBit (_ddbe );_cggb !=nil {return _ccdb ,_fb .Wrap (_cggb ,_cdeac ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_ccdb =2;return _ccdb ,nil ;};func (_cadga *SymbolDictionary )setAtPixels ()error {if _cadga .IsHuffmanEncoded {return nil ;
};_fdec :=1;if _cadga .SdTemplate ==0{_fdec =4;};if _egfd :=_cadga .readAtPixels (_fdec );_egfd !=nil {return _egfd ;};return nil ;};func (_eaaf *PatternDictionary )setGbAtPixels (){if _eaaf .HDTemplate ==0{_eaaf .GBAtX =make ([]int8 ,4);_eaaf .GBAtY =make ([]int8 ,4);
_eaaf .GBAtX [0]=-int8 (_eaaf .HdpWidth );_eaaf .GBAtY [0]=0;_eaaf .GBAtX [1]=-3;_eaaf .GBAtY [1]=-1;_eaaf .GBAtX [2]=2;_eaaf .GBAtY [2]=-2;_eaaf .GBAtX [3]=-2;_eaaf .GBAtY [3]=-2;}else {_eaaf .GBAtX =[]int8 {-int8 (_eaaf .HdpWidth )};_eaaf .GBAtY =[]int8 {0};
};};func (_dabb *template0 )setIndex (_aegc *_cg .DecoderStats ){_aegc .SetIndex (0x100)};func (_cabea *TextRegion )decodeDfs ()(int64 ,error ){if _cabea .IsHuffmanEncoded {if _cabea .SbHuffFS ==3{if _cabea ._aafa ==nil {var _aaebb error ;_cabea ._aafa ,_aaebb =_cabea .getUserTable (0);
if _aaebb !=nil {return 0,_aaebb ;};};return _cabea ._aafa .Decode (_cabea ._dfcde );};_aegd ,_bgad :=_b .GetStandardTable (6+int (_cabea .SbHuffFS ));if _bgad !=nil {return 0,_bgad ;};return _aegd .Decode (_cabea ._dfcde );};_bgeed ,_ecag :=_cabea ._abbd .DecodeInt (_cabea ._fedf );
if _ecag !=nil {return 0,_ecag ;};return int64 (_bgeed ),nil ;};func (_eged *PatternDictionary )parseHeader ()error {_ge .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_ge .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_bbcc :=_eged ._cbef .ReadBits (5);if _bbcc !=nil {return _bbcc ;};if _bbcc =_eged .readTemplate ();_bbcc !=nil {return _bbcc ;};if _bbcc =_eged .readIsMMREncoded ();_bbcc !=nil {return _bbcc ;};if _bbcc =_eged .readPatternWidthAndHeight ();_bbcc !=nil {return _bbcc ;
};if _bbcc =_eged .readGrayMax ();_bbcc !=nil {return _bbcc ;};if _bbcc =_eged .computeSegmentDataStructure ();_bbcc !=nil {return _bbcc ;};return _eged .checkInput ();};func (_cfeaaa *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_eee :=range _cfeaaa .Header .RTSegments {if _eee .Type ==0{_gacf ,_bbad :=_eee .GetSegmentData ();
if _bbad !=nil {return _bbad ;};_gacfa ,_facf :=_gacf .(*SymbolDictionary );if !_facf {return _cc .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_gacf );
};_fecg ,_bbad :=_gacfa .GetDictionary ();if _bbad !=nil {return _cc .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_eee .SegmentNumber ,_bbad .Error ());
};_cfeaaa ._debc =append (_cfeaaa ._debc ,_fecg ...);_cfeaaa ._egebf +=_gacfa .NumberOfExportedSymbols ;};};return nil ;};type GenericRegion struct{_bbb _d .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;
RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_cbbfc bool ;Bitmap *_f .Bitmap ;_bfee *_cg .Decoder ;_dcb *_cg .DecoderStats ;_fggc *_gcf .Decoder ;
};func (_ecga *PageInformationSegment )readIsLossless ()error {_efb ,_cecf :=_ecga ._dgcda .ReadBit ();if _cecf !=nil {return _cecf ;};if _efb ==1{_ecga .IsLossless =true ;};return nil ;};func (_gbfb *PatternDictionary )readIsMMREncoded ()error {_cafcc ,_gcb :=_gbfb ._cbef .ReadBit ();
if _gcb !=nil {return _gcb ;};if _cafcc !=0{_gbfb .IsMMREncoded =true ;};return nil ;};func (_aeaa *Header )readSegmentNumber (_gcae _d .StreamReader )error {const _agad ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_dbebf :=make ([]byte ,4);_ ,_gacb :=_gcae .Read (_dbebf );if _gacb !=nil {return _fb .Wrap (_gacb ,_agad ,"");};_aeaa .SegmentNumber =_ae .BigEndian .Uint32 (_dbebf );return nil ;};var (_fccb Segmenter ;_fcca =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _fccb },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _fccb },TProfiles :func ()Segmenter {return _fccb },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _fccb },TBitmap :func ()Segmenter {return _fccb }};
);func (_afca *Header )pageSize ()uint {if _afca .PageAssociation <=255{return 1;};return 4;};var _ _b .BasicTabler =&TableSegment {};func (_ffa *HalftoneRegion )renderPattern (_gbgb [][]int )(_ebbf error ){var _aeda ,_ebgg int ;for _gcfe :=0;_gcfe < int (_ffa .HGridHeight );
_gcfe ++{for _gaec :=0;_gaec < int (_ffa .HGridWidth );_gaec ++{_aeda =_ffa .computeX (_gcfe ,_gaec );_ebgg =_ffa .computeY (_gcfe ,_gaec );_dbfd :=_ffa .Patterns [_gbgb [_gcfe ][_gaec ]];if _ebbf =_f .Blit (_dbfd ,_ffa .HalftoneRegionBitmap ,_aeda +int (_ffa .HGridX ),_ebgg +int (_ffa .HGridY ),_ffa .CombinationOperator );
_ebbf !=nil {return _ebbf ;};};};return nil ;};func (_cceb *SymbolDictionary )decodeAggregate (_bbda ,_gadg uint32 )error {var (_ecge int64 ;_eagb error ;);if _cceb .IsHuffmanEncoded {_ecge ,_eagb =_cceb .huffDecodeRefAggNInst ();if _eagb !=nil {return _eagb ;
};}else {_aegf ,_cdgg :=_cceb ._faec .DecodeInt (_cceb ._bdcf );if _cdgg !=nil {return _cdgg ;};_ecge =int64 (_aegf );};if _ecge > 1{return _cceb .decodeThroughTextRegion (_bbda ,_gadg ,uint32 (_ecge ));}else if _ecge ==1{return _cceb .decodeRefinedSymbol (_bbda ,_gadg );
};return nil ;};type Regioner interface{GetRegionBitmap ()(*_f .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_dgec *HalftoneRegion )computeX (_cfgc ,_bee int )int {return _dgec .shiftAndFill (int (_dgec .HGridX )+_cfgc *int (_dgec .HRegionY )+_bee *int (_dgec .HRegionX ));
};type Segmenter interface{Init (_gaaa *Header ,_ebe _d .StreamReader )error ;};func (_gcaed *SymbolDictionary )encodeNumSyms (_badg _d .BinaryWriter )(_bdad int ,_acad error ){const _bbca ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_cbfd :=make ([]byte ,4);_ae .BigEndian .PutUint32 (_cbfd ,_gcaed .NumberOfExportedSymbols );if _bdad ,_acad =_badg .Write (_cbfd );_acad !=nil {return _bdad ,_fb .Wrap (_acad ,_bbca ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_ae .BigEndian .PutUint32 (_cbfd ,_gcaed .NumberOfNewSymbols );_eec ,_acad :=_badg .Write (_cbfd );if _acad !=nil {return _bdad ,_fb .Wrap (_acad ,_bbca ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _bdad +_eec ,nil ;};func (_egae *TextRegion )getUserTable (_fcce int )(_b .Tabler ,error ){const _bcgf ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _edee int ;for _ ,_gdfa :=range _egae .Header .RTSegments {if _gdfa .Type ==53{if _edee ==_fcce {_efcb ,_fdfd :=_gdfa .GetSegmentData ();if _fdfd !=nil {return nil ,_fdfd ;};_dfae ,_ceagg :=_efcb .(*TableSegment );if !_ceagg {_ge .Log .Debug (_cc .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_gdfa .SegmentNumber ));
return nil ,_fb .Error (_bcgf ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _b .NewEncodedTable (_dfae );};_edee ++;};};return nil ,nil ;};func (_dedd *SymbolDictionary )checkInput ()error {if _dedd .SdHuffDecodeHeightSelection ==2{_ge .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_dedd .SdHuffDecodeHeightSelection );
};if _dedd .SdHuffDecodeWidthSelection ==2{_ge .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_dedd .SdHuffDecodeWidthSelection );
};if _dedd .IsHuffmanEncoded {if _dedd .SdTemplate !=0{_ge .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_dedd .SdTemplate );
};if !_dedd .UseRefinementAggregation {if !_dedd .UseRefinementAggregation {if _dedd ._gedf {_ge .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_dedd ._gedf =false ;};if _dedd ._gdfe {_ge .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_dedd ._gdfe =false ;};};};}else {if _dedd .SdHuffBMSizeSelection !=0{_ge .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_dedd .SdHuffBMSizeSelection =0;};if _dedd .SdHuffDecodeWidthSelection !=0{_ge .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_dedd .SdHuffDecodeWidthSelection =0;};if _dedd .SdHuffDecodeHeightSelection !=0{_ge .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_dedd .SdHuffDecodeHeightSelection =0;};};if !_dedd .UseRefinementAggregation {if _dedd .SdrTemplate !=0{_ge .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_dedd .SdrTemplate );
_dedd .SdrTemplate =0;};};if !_dedd .IsHuffmanEncoded ||!_dedd .UseRefinementAggregation {if _dedd .SdHuffAggInstanceSelection {_ge .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_dedd .SdHuffAggInstanceSelection );
};};return nil ;};func (_gdec *SymbolDictionary )getUserTable (_aaaf int )(_b .Tabler ,error ){var _dedg int ;for _ ,_fddcb :=range _gdec .Header .RTSegments {if _fddcb .Type ==53{if _dedg ==_aaaf {_geda ,_aefg :=_fddcb .GetSegmentData ();if _aefg !=nil {return nil ,_aefg ;
};_agceg :=_geda .(_b .BasicTabler );return _b .NewEncodedTable (_agceg );};_dedg ++;};};return nil ,nil ;};func NewRegionSegment (r _d .StreamReader )*RegionSegment {return &RegionSegment {_ddfc :r }};func (_bbfd *SymbolDictionary )setCodingStatistics ()error {if _bbfd ._gcgd ==nil {_bbfd ._gcgd =_cg .NewStats (512,1);
};if _bbfd ._gffcg ==nil {_bbfd ._gffcg =_cg .NewStats (512,1);};if _bbfd ._gfec ==nil {_bbfd ._gfec =_cg .NewStats (512,1);};if _bbfd ._bdcf ==nil {_bbfd ._bdcf =_cg .NewStats (512,1);};if _bbfd ._bfcb ==nil {_bbfd ._bfcb =_cg .NewStats (512,1);};if _bbfd .UseRefinementAggregation &&_bbfd ._dccab ==nil {_bbfd ._dccab =_cg .NewStats (1<<uint (_bbfd ._dddb ),1);
_bbfd ._gdga =_cg .NewStats (512,1);_bbfd ._afecg =_cg .NewStats (512,1);};if _bbfd ._gacef ==nil {_bbfd ._gacef =_cg .NewStats (65536,1);};if _bbfd ._faec ==nil {var _bgfa error ;_bbfd ._faec ,_bgfa =_cg .New (_bbfd ._gcdf );if _bgfa !=nil {return _bgfa ;
};};return nil ;};func (_gcaf *RegionSegment )parseHeader ()error {const _fgeg ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ge .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_ge .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_fdbed ,_cbfg :=_gcaf ._ddfc .ReadBits (32);
if _cbfg !=nil {return _fb .Wrap (_cbfg ,_fgeg ,"\u0077\u0069\u0064t\u0068");};_gcaf .BitmapWidth =uint32 (_fdbed &_e .MaxUint32 );_fdbed ,_cbfg =_gcaf ._ddfc .ReadBits (32);if _cbfg !=nil {return _fb .Wrap (_cbfg ,_fgeg ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_gcaf .BitmapHeight =uint32 (_fdbed &_e .MaxUint32 );_fdbed ,_cbfg =_gcaf ._ddfc .ReadBits (32);if _cbfg !=nil {return _fb .Wrap (_cbfg ,_fgeg ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_gcaf .XLocation =uint32 (_fdbed &_e .MaxUint32 );
_fdbed ,_cbfg =_gcaf ._ddfc .ReadBits (32);if _cbfg !=nil {return _fb .Wrap (_cbfg ,_fgeg ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_gcaf .YLocation =uint32 (_fdbed &_e .MaxUint32 );if _ ,_cbfg =_gcaf ._ddfc .ReadBits (5);_cbfg !=nil {return _fb .Wrap (_cbfg ,_fgeg ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _cbfg =_gcaf .readCombinationOperator ();_cbfg !=nil {return _fb .Wrap (_cbfg ,_fgeg ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_fae *GenericRegion )decodeTemplate1 (_cgd ,_acb ,_fgad int ,_dfdf ,_afec int )(_ddg error ){const _aagg ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_eaa ,_bge int ;_faf ,_ecdb int ;_edfe byte ;_eed ,_fbdeb int ;);if _cgd >=1{_edfe ,_ddg =_fae .Bitmap .GetByte (_afec );if _ddg !=nil {return _fb .Wrap (_ddg ,_aagg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_faf =int (_edfe );};if _cgd >=2{_edfe ,_ddg =_fae .Bitmap .GetByte (_afec -_fae .Bitmap .RowStride );
if _ddg !=nil {return _fb .Wrap (_ddg ,_aagg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_ecdb =int (_edfe )<<5;};_eaa =((_faf >>1)&0x1f8)|((_ecdb >>1)&0x1e00);for _fggcf :=0;_fggcf < _fgad ;_fggcf =_eed {var (_bag byte ;_adb int ;);_eed =_fggcf +8;
if _aac :=_acb -_fggcf ;_aac > 8{_adb =8;}else {_adb =_aac ;};if _cgd > 0{_faf <<=8;if _eed < _acb {_edfe ,_ddg =_fae .Bitmap .GetByte (_afec +1);if _ddg !=nil {return _fb .Wrap (_ddg ,_aagg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_faf |=int (_edfe );
};};if _cgd > 1{_ecdb <<=8;if _eed < _acb {_edfe ,_ddg =_fae .Bitmap .GetByte (_afec -_fae .Bitmap .RowStride +1);if _ddg !=nil {return _fb .Wrap (_ddg ,_aagg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_ecdb |=int (_edfe )<<5;};};for _bec :=0;
_bec < _adb ;_bec ++{if _fae ._cbbfc {_bge =_fae .overrideAtTemplate1 (_eaa ,_fggcf +_bec ,_cgd ,int (_bag ),_bec );_fae ._dcb .SetIndex (int32 (_bge ));}else {_fae ._dcb .SetIndex (int32 (_eaa ));};_fbdeb ,_ddg =_fae ._bfee .DecodeBit (_fae ._dcb );if _ddg !=nil {return _fb .Wrap (_ddg ,_aagg ,"");
};_bag |=byte (_fbdeb )<<uint (7-_bec );_abc :=uint (8-_bec );_eaa =((_eaa &0xefb)<<1)|_fbdeb |((_faf >>_abc )&0x8)|((_ecdb >>_abc )&0x200);};if _ggdf :=_fae .Bitmap .SetByte (_dfdf ,_bag );_ggdf !=nil {return _fb .Wrap (_ggdf ,_aagg ,"");};_dfdf ++;_afec ++;
};return nil ;};func (_beagd *TextRegion )decodeRdx ()(int64 ,error ){const _eggg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _beagd .IsHuffmanEncoded {if _beagd .SbHuffRDX ==3{if _beagd ._fbf ==nil {var (_beeag int ;_dbgg error ;);if _beagd .SbHuffFS ==3{_beeag ++;
};if _beagd .SbHuffDS ==3{_beeag ++;};if _beagd .SbHuffDT ==3{_beeag ++;};if _beagd .SbHuffRDWidth ==3{_beeag ++;};if _beagd .SbHuffRDHeight ==3{_beeag ++;};_beagd ._fbf ,_dbgg =_beagd .getUserTable (_beeag );if _dbgg !=nil {return 0,_fb .Wrap (_dbgg ,_eggg ,"");
};};return _beagd ._fbf .Decode (_beagd ._dfcde );};_begc ,_dffd :=_b .GetStandardTable (14+int (_beagd .SbHuffRDX ));if _dffd !=nil {return 0,_fb .Wrap (_dffd ,_eggg ,"");};return _begc .Decode (_beagd ._dfcde );};_eadfb ,_fggab :=_beagd ._abbd .DecodeInt (_beagd ._abgge );
if _fggab !=nil {return 0,_fb .Wrap (_fggab ,_eggg ,"");};return int64 (_eadfb ),nil ;};func (_fbeb *PageInformationSegment )readCombinationOperator ()error {_begg ,_beea :=_fbeb ._dgcda .ReadBits (2);if _beea !=nil {return _beea ;};_fbeb ._caeg =_f .CombinationOperator (int (_begg ));
return nil ;};func NewGenericRegion (r _d .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_bbb :r };};func (_bbecd *TextRegion )String ()string {_eedc :=&_cf .Builder {};_eedc .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");
_eedc .WriteString (_bbecd .RegionInfo .String ()+"\u000a");_eedc .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_bbecd .SbrTemplate ));_eedc .WriteString (_cc .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_bbecd .SbDsOffset ));
_eedc .WriteString (_cc .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_bbecd .DefaultPixel ));_eedc .WriteString (_cc .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_bbecd .CombinationOperator ));
_eedc .WriteString (_cc .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_bbecd .IsTransposed ));_eedc .WriteString (_cc .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_bbecd .ReferenceCorner ));
_eedc .WriteString (_cc .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_bbecd .UseRefinement ));_eedc .WriteString (_cc .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_bbecd .IsHuffmanEncoded ));
if _bbecd .IsHuffmanEncoded {_eedc .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_bbecd .SbHuffRSize ));_eedc .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_bbecd .SbHuffRDY ));
_eedc .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_bbecd .SbHuffRDX ));_eedc .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_bbecd .SbHuffRDHeight ));
_eedc .WriteString (_cc .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_bbecd .SbHuffRDWidth ));_eedc .WriteString (_cc .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_bbecd .SbHuffDT ));
_eedc .WriteString (_cc .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_bbecd .SbHuffDS ));_eedc .WriteString (_cc .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_bbecd .SbHuffFS ));
};_eedc .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bbecd .SbrATX ));_eedc .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_bbecd .SbrATY ));
_eedc .WriteString (_cc .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_bbecd .NumberOfSymbolInstances ));_eedc .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bbecd .SbrATX ));
return _eedc .String ();};func (_gfdgg *SymbolDictionary )readRegionFlags ()error {var (_gdde uint64 ;_befc int ;);_ ,_bffc :=_gfdgg ._gcdf .ReadBits (3);if _bffc !=nil {return _bffc ;};_befc ,_bffc =_gfdgg ._gcdf .ReadBit ();if _bffc !=nil {return _bffc ;
};_gfdgg .SdrTemplate =int8 (_befc );_gdde ,_bffc =_gfdgg ._gcdf .ReadBits (2);if _bffc !=nil {return _bffc ;};_gfdgg .SdTemplate =int8 (_gdde &0xf);_befc ,_bffc =_gfdgg ._gcdf .ReadBit ();if _bffc !=nil {return _bffc ;};if _befc ==1{_gfdgg ._gedf =true ;
};_befc ,_bffc =_gfdgg ._gcdf .ReadBit ();if _bffc !=nil {return _bffc ;};if _befc ==1{_gfdgg ._gdfe =true ;};_befc ,_bffc =_gfdgg ._gcdf .ReadBit ();if _bffc !=nil {return _bffc ;};if _befc ==1{_gfdgg .SdHuffAggInstanceSelection =true ;};_befc ,_bffc =_gfdgg ._gcdf .ReadBit ();
if _bffc !=nil {return _bffc ;};_gfdgg .SdHuffBMSizeSelection =int8 (_befc );_gdde ,_bffc =_gfdgg ._gcdf .ReadBits (2);if _bffc !=nil {return _bffc ;};_gfdgg .SdHuffDecodeWidthSelection =int8 (_gdde &0xf);_gdde ,_bffc =_gfdgg ._gcdf .ReadBits (2);if _bffc !=nil {return _bffc ;
};_gfdgg .SdHuffDecodeHeightSelection =int8 (_gdde &0xf);_befc ,_bffc =_gfdgg ._gcdf .ReadBit ();if _bffc !=nil {return _bffc ;};if _befc ==1{_gfdgg .UseRefinementAggregation =true ;};_befc ,_bffc =_gfdgg ._gcdf .ReadBit ();if _bffc !=nil {return _bffc ;
};if _befc ==1{_gfdgg .IsHuffmanEncoded =true ;};return nil ;};func (_aadc *TextRegion )decodeRdh ()(int64 ,error ){const _gcgfc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _aadc .IsHuffmanEncoded {if _aadc .SbHuffRDHeight ==3{if _aadc ._agdc ==nil {var (_afgb int ;
_bebg error ;);if _aadc .SbHuffFS ==3{_afgb ++;};if _aadc .SbHuffDS ==3{_afgb ++;};if _aadc .SbHuffDT ==3{_afgb ++;};if _aadc .SbHuffRDWidth ==3{_afgb ++;};_aadc ._agdc ,_bebg =_aadc .getUserTable (_afgb );if _bebg !=nil {return 0,_fb .Wrap (_bebg ,_gcgfc ,"");
};};return _aadc ._agdc .Decode (_aadc ._dfcde );};_cagac ,_ebaf :=_b .GetStandardTable (14+int (_aadc .SbHuffRDHeight ));if _ebaf !=nil {return 0,_fb .Wrap (_ebaf ,_gcgfc ,"");};return _cagac .Decode (_aadc ._dfcde );};_fgbb ,_cadf :=_aadc ._abbd .DecodeInt (_aadc ._fgge );
if _cadf !=nil {return 0,_fb .Wrap (_cadf ,_gcgfc ,"");};return int64 (_fgbb ),nil ;};func (_abed *SymbolDictionary )getSymbol (_ccdfa int )(*_f .Bitmap ,error ){const _eegg ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_fccf ,_egee :=_abed ._edfef .GetBitmap (_abed ._ddcc [_ccdfa ]);
if _egee !=nil {return nil ,_fb .Wrap (_egee ,_eegg ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _fccf ,nil ;};func (_dbgf *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _dbgf ._eaeeg };
type templater interface{form (_edf ,_dfe ,_efg ,_afc ,_ceg int16 )int16 ;setIndex (_cgag *_cg .DecoderStats );};func (_aadd *SymbolDictionary )Encode (w _d .BinaryWriter )(_fedb int ,_ggggb error ){const _aaddf ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _aadd ==nil {return 0,_fb .Error (_aaddf ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _fedb ,_ggggb =_aadd .encodeFlags (w );
_ggggb !=nil {return _fedb ,_fb .Wrap (_ggggb ,_aaddf ,"");};_cfff ,_ggggb :=_aadd .encodeATFlags (w );if _ggggb !=nil {return _fedb ,_fb .Wrap (_ggggb ,_aaddf ,"");};_fedb +=_cfff ;if _cfff ,_ggggb =_aadd .encodeRefinementATFlags (w );_ggggb !=nil {return _fedb ,_fb .Wrap (_ggggb ,_aaddf ,"");
};_fedb +=_cfff ;if _cfff ,_ggggb =_aadd .encodeNumSyms (w );_ggggb !=nil {return _fedb ,_fb .Wrap (_ggggb ,_aaddf ,"");};_fedb +=_cfff ;if _cfff ,_ggggb =_aadd .encodeSymbols (w );_ggggb !=nil {return _fedb ,_fb .Wrap (_ggggb ,_aaddf ,"");};_fedb +=_cfff ;
return _fedb ,nil ;};func (_adef *TextRegion )setParameters (_ggecc *_cg .Decoder ,_faga ,_deeg bool ,_bgfc ,_caaa uint32 ,_fdbc uint32 ,_fafa int8 ,_fgcb uint32 ,_gdeac int8 ,_cgba _f .CombinationOperator ,_eefa int8 ,_dagg int16 ,_ccge ,_cddb ,_gdeg ,_agffgb ,_addc ,_dfgg ,_cadc ,_dcdda ,_bdaad ,_fbac int8 ,_bacc ,_gddd []int8 ,_eabbed []*_f .Bitmap ,_acba int8 ){_adef ._abbd =_ggecc ;
_adef .IsHuffmanEncoded =_faga ;_adef .UseRefinement =_deeg ;_adef .RegionInfo .BitmapWidth =_bgfc ;_adef .RegionInfo .BitmapHeight =_caaa ;_adef .NumberOfSymbolInstances =_fdbc ;_adef .SbStrips =_fafa ;_adef .NumberOfSymbols =_fgcb ;_adef .DefaultPixel =_gdeac ;
_adef .CombinationOperator =_cgba ;_adef .IsTransposed =_eefa ;_adef .ReferenceCorner =_dagg ;_adef .SbDsOffset =_ccge ;_adef .SbHuffFS =_cddb ;_adef .SbHuffDS =_gdeg ;_adef .SbHuffDT =_agffgb ;_adef .SbHuffRDWidth =_addc ;_adef .SbHuffRDHeight =_dfgg ;
_adef .SbHuffRSize =_bdaad ;_adef .SbHuffRDX =_cadc ;_adef .SbHuffRDY =_dcdda ;_adef .SbrTemplate =_fbac ;_adef .SbrATX =_bacc ;_adef .SbrATY =_gddd ;_adef .Symbols =_eabbed ;_adef ._cega =_acba ;};func (_cbff *GenericRegion )decodeTemplate0b (_dfb ,_fgab ,_afde int ,_ebg ,_afa int )(_aece error ){const _eea ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_dga ,_dabc int ;_cae ,_aecf int ;_bddc byte ;_aed int ;);if _dfb >=1{_bddc ,_aece =_cbff .Bitmap .GetByte (_afa );if _aece !=nil {return _fb .Wrap (_aece ,_eea ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cae =int (_bddc );};if _dfb >=2{_bddc ,_aece =_cbff .Bitmap .GetByte (_afa -_cbff .Bitmap .RowStride );
if _aece !=nil {return _fb .Wrap (_aece ,_eea ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_aecf =int (_bddc )<<6;};_dga =(_cae &0xf0)|(_aecf &0x3800);for _fdb :=0;_fdb < _afde ;_fdb =_aed {var (_fgca byte ;_eae int ;);_aed =_fdb +8;if _faa :=_fgab -_fdb ;
_faa > 8{_eae =8;}else {_eae =_faa ;};if _dfb > 0{_cae <<=8;if _aed < _fgab {_bddc ,_aece =_cbff .Bitmap .GetByte (_afa +1);if _aece !=nil {return _fb .Wrap (_aece ,_eea ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_cae |=int (_bddc );};};if _dfb > 1{_aecf <<=8;
if _aed < _fgab {_bddc ,_aece =_cbff .Bitmap .GetByte (_afa -_cbff .Bitmap .RowStride +1);if _aece !=nil {return _fb .Wrap (_aece ,_eea ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_aecf |=int (_bddc )<<6;};};for _fade :=0;_fade < _eae ;_fade ++{_bgf :=uint (7-_fade );
if _cbff ._cbbfc {_dabc =_cbff .overrideAtTemplate0b (_dga ,_fdb +_fade ,_dfb ,int (_fgca ),_fade ,int (_bgf ));_cbff ._dcb .SetIndex (int32 (_dabc ));}else {_cbff ._dcb .SetIndex (int32 (_dga ));};var _cadb int ;_cadb ,_aece =_cbff ._bfee .DecodeBit (_cbff ._dcb );
if _aece !=nil {return _fb .Wrap (_aece ,_eea ,"");};_fgca |=byte (_cadb <<_bgf );_dga =((_dga &0x7bf7)<<1)|_cadb |((_cae >>_bgf )&0x10)|((_aecf >>_bgf )&0x800);};if _fed :=_cbff .Bitmap .SetByte (_ebg ,_fgca );_fed !=nil {return _fb .Wrap (_fed ,_eea ,"");
};_ebg ++;_afa ++;};return nil ;};func (_gacg *TableSegment )HtPS ()int32 {return _gacg ._gagb };func (_bde *HalftoneRegion )GetPatterns ()([]*_f .Bitmap ,error ){var (_dagd []*_f .Bitmap ;_aefa error ;);for _ ,_acec :=range _bde ._abcc .RTSegments {var _fggd Segmenter ;
_fggd ,_aefa =_acec .GetSegmentData ();if _aefa !=nil {_ge .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_aefa );return nil ,_aefa ;};_gadd ,_fec :=_fggd .(*PatternDictionary );
if !_fec {_aefa =_cc .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_fggd );
return nil ,_aefa ;};var _bdf []*_f .Bitmap ;_bdf ,_aefa =_gadd .GetDictionary ();if _aefa !=nil {_ge .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_aefa );
return nil ,_aefa ;};_dagd =append (_dagd ,_bdf ...);};return _dagd ,nil ;};func (_cfg *GenericRefinementRegion )decodeSLTP ()(int ,error ){_cfg .Template .setIndex (_cfg ._ecf );return _cfg ._fd .DecodeBit (_cfg ._ecf );};func (_daed *Header )readHeaderLength (_adcc _d .StreamReader ,_afcc int64 ){_daed .HeaderLength =_adcc .StreamPosition ()-_afcc ;
};func (_fbde *template1 )form (_fcgd ,_gcfb ,_cef ,_agcg ,_cgg int16 )int16 {return ((_fcgd &0x02)<<8)|(_gcfb <<6)|((_cef &0x03)<<4)|(_agcg <<1)|_cgg ;};func (_dgc *GenericRegion )getPixel (_beb ,_eab int )int8 {if _beb < 0||_beb >=_dgc .Bitmap .Width {return 0;
};if _eab < 0||_eab >=_dgc .Bitmap .Height {return 0;};if _dgc .Bitmap .GetPixel (_beb ,_eab ){return 1;};return 0;};func (_bdga *TextRegion )GetRegionBitmap ()(*_f .Bitmap ,error ){if _bdga .RegionBitmap !=nil {return _bdga .RegionBitmap ,nil ;};if !_bdga .IsHuffmanEncoded {if _eabe :=_bdga .setCodingStatistics ();
_eabe !=nil {return nil ,_eabe ;};};if _afea :=_bdga .createRegionBitmap ();_afea !=nil {return nil ,_afea ;};if _bbga :=_bdga .decodeSymbolInstances ();_bbga !=nil {return nil ,_bbga ;};return _bdga .RegionBitmap ,nil ;};type template1 struct{};func (_cdbg *SymbolDictionary )setRefinementAtPixels ()error {if !_cdbg .UseRefinementAggregation ||_cdbg .SdrTemplate !=0{return nil ;
};if _bfgc :=_cdbg .readRefinementAtPixels (2);_bfgc !=nil {return _bfgc ;};return nil ;};func (_fafb *Header )String ()string {_ffdf :=&_cf .Builder {};_ffdf .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");
_ffdf .WriteString (_cc .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_fafb .SegmentNumber ));_ffdf .WriteString (_cc .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_fafb .Type ));
_ffdf .WriteString (_cc .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_fafb .RetainFlag ));_ffdf .WriteString (_cc .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fafb .PageAssociation ));
_ffdf .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_fafb .PageAssociationFieldSize ));
_ffdf .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_aaf :=range _fafb .RTSNumbers {_ffdf .WriteString (_cc .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_aaf ));};_ffdf .WriteString (_cc .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_fafb .HeaderLength ));
_ffdf .WriteString (_cc .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_fafb .SegmentDataLength ));_ffdf .WriteString (_cc .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_fafb .SegmentDataStartOffset ));
return _ffdf .String ();};func (_ebf *PageInformationSegment )Encode (w _d .BinaryWriter )(_cdbe int ,_dfac error ){const _ecgg ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_bcg :=make ([]byte ,4);_ae .BigEndian .PutUint32 (_bcg ,uint32 (_ebf .PageBMWidth ));_cdbe ,_dfac =w .Write (_bcg );if _dfac !=nil {return _cdbe ,_fb .Wrap (_dfac ,_ecgg ,"\u0077\u0069\u0064t\u0068");};_ae .BigEndian .PutUint32 (_bcg ,uint32 (_ebf .PageBMHeight ));
var _edfec int ;_edfec ,_dfac =w .Write (_bcg );if _dfac !=nil {return _edfec +_cdbe ,_fb .Wrap (_dfac ,_ecgg ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_cdbe +=_edfec ;_ae .BigEndian .PutUint32 (_bcg ,uint32 (_ebf .ResolutionX ));_edfec ,_dfac =w .Write (_bcg );
if _dfac !=nil {return _edfec +_cdbe ,_fb .Wrap (_dfac ,_ecgg ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_cdbe +=_edfec ;_ae .BigEndian .PutUint32 (_bcg ,uint32 (_ebf .ResolutionY ));if _edfec ,_dfac =w .Write (_bcg );_dfac !=nil {return _edfec +_cdbe ,_fb .Wrap (_dfac ,_ecgg ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_cdbe +=_edfec ;if _dfac =_ebf .encodeFlags (w );_dfac !=nil {return _cdbe ,_fb .Wrap (_dfac ,_ecgg ,"");};_cdbe ++;if _edfec ,_dfac =_ebf .encodeStripingInformation (w );_dfac !=nil {return _cdbe ,_fb .Wrap (_dfac ,_ecgg ,"");};_cdbe +=_edfec ;return _cdbe ,nil ;
};func (_ceae *TextRegion )readAmountOfSymbolInstances ()error {_daaf ,_ffab :=_ceae ._dfcde .ReadBits (32);if _ffab !=nil {return _ffab ;};_ceae .NumberOfSymbolInstances =uint32 (_daaf &_e .MaxUint32 );_bccb :=_ceae .RegionInfo .BitmapWidth *_ceae .RegionInfo .BitmapHeight ;
if _bccb < _ceae .NumberOfSymbolInstances {_ge .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_bccb ,_ceae .NumberOfSymbolInstances );
_ceae .NumberOfSymbolInstances =_bccb ;};return nil ;};func (_dcfc *GenericRegion )overrideAtTemplate1 (_bbd ,_bdcc ,_ccfb ,_gdb ,_cea int )int {_bbd &=0x1FF7;if _dcfc .GBAtY [0]==0&&_dcfc .GBAtX [0]>=-int8 (_cea ){_bbd |=(_gdb >>uint (7-(int8 (_cea )+_dcfc .GBAtX [0]))&0x1)<<3;
}else {_bbd |=int (_dcfc .getPixel (_bdcc +int (_dcfc .GBAtX [0]),_ccfb +int (_dcfc .GBAtY [0])))<<3;};return _bbd ;};func (_fcgc *HalftoneRegion )checkInput ()error {if _fcgc .IsMMREncoded {if _fcgc .HTemplate !=0{_ge .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_fcgc .HTemplate );
};if _fcgc .HSkipEnabled {_ge .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_fcgc .HSkipEnabled );
};};return nil ;};const (ORandom OrganizationType =iota ;OSequential ;);type Type int ;func (_fcgcb *PageInformationSegment )CombinationOperator ()_f .CombinationOperator {return _fcgcb ._caeg ;};func (_eced *Header )readReferredToSegmentNumbers (_dfbb _d .StreamReader ,_feb int )([]int ,error ){const _fcc ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_gcab :=make ([]int ,_feb );if _feb > 0{_eced .RTSegments =make ([]*Header ,_feb );var (_gffc uint64 ;_eabb error ;);for _ddde :=0;_ddde < _feb ;_ddde ++{_gffc ,_eabb =_dfbb .ReadBits (byte (_eced .referenceSize ())<<3);if _eabb !=nil {return nil ,_fb .Wrapf (_eabb ,_fcc ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_ddde );
};_gcab [_ddde ]=int (_gffc &_e .MaxInt32 );};};return _gcab ,nil ;};func (_deg *GenericRegion )Encode (w _d .BinaryWriter )(_edba int ,_ged error ){const _dea ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _deg .Bitmap ==nil {return 0,_fb .Error (_dea ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_eggd ,_ged :=_deg .RegionSegment .Encode (w );if _ged !=nil {return 0,_fb .Wrap (_ged ,_dea ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_edba +=_eggd ;if _ged =w .SkipBits (4);_ged !=nil {return _edba ,_fb .Wrap (_ged ,_dea ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _gfe int ;if _deg .IsTPGDon {_gfe =1;};if _ged =w .WriteBit (_gfe );
_ged !=nil {return _edba ,_fb .Wrap (_ged ,_dea ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_gfe =0;if _ged =w .WriteBit (int (_deg .GBTemplate >>1)&0x01);_ged !=nil {return _edba ,_fb .Wrap (_ged ,_dea ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _ged =w .WriteBit (int (_deg .GBTemplate )&0x01);_ged !=nil {return _edba ,_fb .Wrap (_ged ,_dea ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _deg .UseMMR {_gfe =1;};if _ged =w .WriteBit (_gfe );
_ged !=nil {return _edba ,_fb .Wrap (_ged ,_dea ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_edba ++;if _eggd ,_ged =_deg .writeGBAtPixels (w );_ged !=nil {return _edba ,_fb .Wrap (_ged ,_dea ,"");};_edba +=_eggd ;_dfc :=_fgd .New ();
if _ged =_dfc .EncodeBitmap (_deg .Bitmap ,_deg .IsTPGDon );_ged !=nil {return _edba ,_fb .Wrap (_ged ,_dea ,"");};_dfc .Final ();var _ab int64 ;if _ab ,_ged =_dfc .WriteTo (w );_ged !=nil {return _edba ,_fb .Wrap (_ged ,_dea ,"");};_edba +=int (_ab );
return _edba ,nil ;};func (_dedb *PageInformationSegment )readContainsRefinement ()error {_cedgc ,_gade :=_dedb ._dgcda .ReadBit ();if _gade !=nil {return _gade ;};if _cedgc ==1{_dedb ._eefb =true ;};return nil ;};func (_deddg *TextRegion )readHuffmanFlags ()error {var (_cgdd int ;
_gdca uint64 ;_bdeg error ;);_ ,_bdeg =_deddg ._dfcde .ReadBit ();if _bdeg !=nil {return _bdeg ;};_cgdd ,_bdeg =_deddg ._dfcde .ReadBit ();if _bdeg !=nil {return _bdeg ;};_deddg .SbHuffRSize =int8 (_cgdd );_gdca ,_bdeg =_deddg ._dfcde .ReadBits (2);if _bdeg !=nil {return _bdeg ;
};_deddg .SbHuffRDY =int8 (_gdca )&0xf;_gdca ,_bdeg =_deddg ._dfcde .ReadBits (2);if _bdeg !=nil {return _bdeg ;};_deddg .SbHuffRDX =int8 (_gdca )&0xf;_gdca ,_bdeg =_deddg ._dfcde .ReadBits (2);if _bdeg !=nil {return _bdeg ;};_deddg .SbHuffRDHeight =int8 (_gdca )&0xf;
_gdca ,_bdeg =_deddg ._dfcde .ReadBits (2);if _bdeg !=nil {return _bdeg ;};_deddg .SbHuffRDWidth =int8 (_gdca )&0xf;_gdca ,_bdeg =_deddg ._dfcde .ReadBits (2);if _bdeg !=nil {return _bdeg ;};_deddg .SbHuffDT =int8 (_gdca )&0xf;_gdca ,_bdeg =_deddg ._dfcde .ReadBits (2);
if _bdeg !=nil {return _bdeg ;};_deddg .SbHuffDS =int8 (_gdca )&0xf;_gdca ,_bdeg =_deddg ._dfcde .ReadBits (2);if _bdeg !=nil {return _bdeg ;};_deddg .SbHuffFS =int8 (_gdca )&0xf;return nil ;};func (_befd *TextRegion )readRegionFlags ()error {var (_ggee int ;
_daegb uint64 ;_bfbe error ;);_ggee ,_bfbe =_befd ._dfcde .ReadBit ();if _bfbe !=nil {return _bfbe ;};_befd .SbrTemplate =int8 (_ggee );_daegb ,_bfbe =_befd ._dfcde .ReadBits (5);if _bfbe !=nil {return _bfbe ;};_befd .SbDsOffset =int8 (_daegb );if _befd .SbDsOffset > 0x0f{_befd .SbDsOffset -=0x20;
};_ggee ,_bfbe =_befd ._dfcde .ReadBit ();if _bfbe !=nil {return _bfbe ;};_befd .DefaultPixel =int8 (_ggee );_daegb ,_bfbe =_befd ._dfcde .ReadBits (2);if _bfbe !=nil {return _bfbe ;};_befd .CombinationOperator =_f .CombinationOperator (int (_daegb )&0x3);
_ggee ,_bfbe =_befd ._dfcde .ReadBit ();if _bfbe !=nil {return _bfbe ;};_befd .IsTransposed =int8 (_ggee );_daegb ,_bfbe =_befd ._dfcde .ReadBits (2);if _bfbe !=nil {return _bfbe ;};_befd .ReferenceCorner =int16 (_daegb )&0x3;_daegb ,_bfbe =_befd ._dfcde .ReadBits (2);
if _bfbe !=nil {return _bfbe ;};_befd .LogSBStrips =int16 (_daegb )&0x3;_befd .SbStrips =1<<uint (_befd .LogSBStrips );_ggee ,_bfbe =_befd ._dfcde .ReadBit ();if _bfbe !=nil {return _bfbe ;};if _ggee ==1{_befd .UseRefinement =true ;};_ggee ,_bfbe =_befd ._dfcde .ReadBit ();
if _bfbe !=nil {return _bfbe ;};if _ggee ==1{_befd .IsHuffmanEncoded =true ;};return nil ;};func (_ddgf *PageInformationSegment )encodeStripingInformation (_cacd _d .BinaryWriter )(_faff int ,_cgaed error ){const _ffbgg ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_ddgf .IsStripe {if _faff ,_cgaed =_cacd .Write ([]byte {0x00,0x00});_cgaed !=nil {return 0,_fb .Wrap (_cgaed ,_ffbgg ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _faff ,nil ;};_cfeaf :=make ([]byte ,2);_ae .BigEndian .PutUint16 (_cfeaf ,_ddgf .MaxStripeSize |1<<15);
if _faff ,_cgaed =_cacd .Write (_cfeaf );_cgaed !=nil {return 0,_fb .Wrapf (_cgaed ,_ffbgg ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_ddgf .MaxStripeSize );};return _faff ,nil ;};func (_gcg *EndOfStripe )parseHeader (_ga *Header ,_ff _d .StreamReader )error {_gf ,_ac :=_gcg ._gb .ReadBits (32);
if _ac !=nil {return _ac ;};_gcg ._gg =int (_gf &_e .MaxInt32 );return nil ;};func (_afd *GenericRegion )Init (h *Header ,r _d .StreamReader )error {_afd .RegionSegment =NewRegionSegment (r );_afd ._bbb =r ;return _afd .parseHeader ();};func (_dabce *TextRegion )decodeCurrentT ()(int64 ,error ){if _dabce .SbStrips !=1{if _dabce .IsHuffmanEncoded {_ddca ,_feegd :=_dabce ._dfcde .ReadBits (byte (_dabce .LogSBStrips ));
return int64 (_ddca ),_feegd ;};_gbea ,_cefa :=_dabce ._abbd .DecodeInt (_dabce ._bgfgc );if _cefa !=nil {return 0,_cefa ;};return int64 (_gbea ),nil ;};return 0,nil ;};func (_bade *HalftoneRegion )computeSegmentDataStructure ()error {_bade .DataOffset =_bade ._abbb .StreamPosition ();
_bade .DataHeaderLength =_bade .DataOffset -_bade .DataHeaderOffset ;_bade .DataLength =int64 (_bade ._abbb .Length ())-_bade .DataHeaderLength ;return nil ;};