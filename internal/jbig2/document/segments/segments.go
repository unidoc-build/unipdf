//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_e "encoding/binary";_a "errors";_dg "fmt";_ad "github.com/unidoc/unipdf/v3/common";_b "github.com/unidoc/unipdf/v3/internal/bitwise";_cff "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_dge "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_fb "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_ae "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_ac "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_gg "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_cd "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_ec "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_de "golang.org/x/xerrors";_f "image";_g "io";_d "math";_ea "strings";_cf "time";);func (_ecc *GenericRefinementRegion )readAtPixels ()error {_ecc .GrAtX =make ([]int8 ,2);
_ecc .GrAtY =make ([]int8 ,2);_gecdc ,_caf :=_ecc ._ed .ReadByte ();if _caf !=nil {return _caf ;};_ecc .GrAtX [0]=int8 (_gecdc );_gecdc ,_caf =_ecc ._ed .ReadByte ();if _caf !=nil {return _caf ;};_ecc .GrAtY [0]=int8 (_gecdc );_gecdc ,_caf =_ecc ._ed .ReadByte ();
if _caf !=nil {return _caf ;};_ecc .GrAtX [1]=int8 (_gecdc );_gecdc ,_caf =_ecc ._ed .ReadByte ();if _caf !=nil {return _caf ;};_ecc .GrAtY [1]=int8 (_gecdc );return nil ;};func (_gdebd *Header )writeReferredToCount (_beec _b .BinaryWriter )(_gfbb int ,_begb error ){const _gfae ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_gdebd .RTSNumbers =make ([]int ,len (_gdebd .RTSegments ));for _fdfdg ,_cccb :=range _gdebd .RTSegments {_gdebd .RTSNumbers [_fdfdg ]=int (_cccb .SegmentNumber );};if len (_gdebd .RTSNumbers )<=4{var _ccdff byte ;if len (_gdebd .RetainBits )>=1{_ccdff =_gdebd .RetainBits [0];
};_ccdff |=byte (len (_gdebd .RTSNumbers ))<<5;if _begb =_beec .WriteByte (_ccdff );_begb !=nil {return 0,_cd .Wrap (_begb ,_gfae ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_bdbag :=uint32 (len (_gdebd .RTSNumbers ));
_cabg :=make ([]byte ,4+_cff .Ceil (len (_gdebd .RTSNumbers )+1,8));_bdbag |=0x7<<29;_e .BigEndian .PutUint32 (_cabg ,_bdbag );copy (_cabg [1:],_gdebd .RetainBits );_gfbb ,_begb =_beec .Write (_cabg );if _begb !=nil {return 0,_cd .Wrap (_begb ,_gfae ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _gfbb ,nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_dge .Bitmap ,error );};func (_gggca *template1 )form (_aggb ,_geg ,_eddc ,_fdfa ,_fefb int16 )int16 {return ((_aggb &0x02)<<8)|(_geg <<6)|((_eddc &0x03)<<4)|(_fdfa <<1)|_fefb ;
};func (_bdeg *SymbolDictionary )setSymbolsArray ()error {if _bdeg ._agcb ==nil {if _fcbg :=_bdeg .retrieveImportSymbols ();_fcbg !=nil {return _fcbg ;};};if _bdeg ._dfbec ==nil {_bdeg ._dfbec =append (_bdeg ._dfbec ,_bdeg ._agcb ...);};return nil ;};func (_bbfd *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _bbfd .IsHuffmanEncoded {return _bbfd .decodeHeightClassDeltaHeightWithHuffman ();
};_bgebb ,_ebcbd :=_bbfd ._cfag .DecodeInt (_bbfd ._dbbf );if _ebcbd !=nil {return 0,_ebcbd ;};return int64 (_bgebb ),nil ;};func (_ecba *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _ecba .SdHuffDecodeHeightSelection {case 0:_dgdb ,_ccdbc :=_ae .GetStandardTable (4);
if _ccdbc !=nil {return 0,_ccdbc ;};return _dgdb .Decode (_ecba ._begg );case 1:_bebd ,_bcgad :=_ae .GetStandardTable (5);if _bcgad !=nil {return 0,_bcgad ;};return _bebd .Decode (_ecba ._begg );case 3:if _ecba ._dcec ==nil {_ecae ,_ffeg :=_ae .GetStandardTable (0);
if _ffeg !=nil {return 0,_ffeg ;};_ecba ._dcec =_ecae ;};return _ecba ._dcec .Decode (_ecba ._begg );};return 0,nil ;};func (_dba *PageInformationSegment )Encode (w _b .BinaryWriter )(_ceca int ,_daff error ){const _aega ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_cead :=make ([]byte ,4);_e .BigEndian .PutUint32 (_cead ,uint32 (_dba .PageBMWidth ));_ceca ,_daff =w .Write (_cead );if _daff !=nil {return _ceca ,_cd .Wrap (_daff ,_aega ,"\u0077\u0069\u0064t\u0068");};_e .BigEndian .PutUint32 (_cead ,uint32 (_dba .PageBMHeight ));
var _bgeb int ;_bgeb ,_daff =w .Write (_cead );if _daff !=nil {return _bgeb +_ceca ,_cd .Wrap (_daff ,_aega ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_ceca +=_bgeb ;_e .BigEndian .PutUint32 (_cead ,uint32 (_dba .ResolutionX ));_bgeb ,_daff =w .Write (_cead );
if _daff !=nil {return _bgeb +_ceca ,_cd .Wrap (_daff ,_aega ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_ceca +=_bgeb ;_e .BigEndian .PutUint32 (_cead ,uint32 (_dba .ResolutionY ));if _bgeb ,_daff =w .Write (_cead );_daff !=nil {return _bgeb +_ceca ,_cd .Wrap (_daff ,_aega ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_ceca +=_bgeb ;if _daff =_dba .encodeFlags (w );_daff !=nil {return _ceca ,_cd .Wrap (_daff ,_aega ,"");};_ceca ++;if _bgeb ,_daff =_dba .encodeStripingInformation (w );_daff !=nil {return _ceca ,_cd .Wrap (_daff ,_aega ,"");};_ceca +=_bgeb ;return _ceca ,nil ;
};func (_deeg *Header )readSegmentPageAssociation (_fdcb Documenter ,_eccg _b .StreamReader ,_fbba uint64 ,_agdfb ...int )(_baefe error ){const _caga ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_deeg .PageAssociationFieldSize {_abfad ,_bead :=_eccg .ReadBits (8);if _bead !=nil {return _cd .Wrap (_bead ,_caga ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_deeg .PageAssociation =int (_abfad &0xFF);}else {_gdeb ,_ffgf :=_eccg .ReadBits (32);
if _ffgf !=nil {return _cd .Wrap (_ffgf ,_caga ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_deeg .PageAssociation =int (_gdeb &_d .MaxInt32 );};if _fbba ==0{return nil ;};if _deeg .PageAssociation !=0{_bafd ,_bcfd :=_fdcb .GetPage (_deeg .PageAssociation );
if _bcfd !=nil {return _cd .Wrap (_bcfd ,_caga ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _effc int ;for _eed :=uint64 (0);_eed < _fbba ;_eed ++{_effc =_agdfb [_eed ];
_deeg .RTSegments [_eed ],_bcfd =_bafd .GetSegment (_effc );if _bcfd !=nil {var _bfba error ;_deeg .RTSegments [_eed ],_bfba =_fdcb .GetGlobalSegment (_effc );if _bfba !=nil {return _cd .Wrapf (_bcfd ,_caga ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_deeg .PageAssociation );
};};};return nil ;};for _fefbe :=uint64 (0);_fefbe < _fbba ;_fefbe ++{_deeg .RTSegments [_fefbe ],_baefe =_fdcb .GetGlobalSegment (_agdfb [_fefbe ]);if _baefe !=nil {return _cd .Wrapf (_baefe ,_caga ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_agdfb [_fefbe ]);
};};return nil ;};func (_aeaa *Header )writeSegmentPageAssociation (_daab _b .BinaryWriter )(_eedg int ,_gfbe error ){const _eeef ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _aeaa .pageSize ()!=4{if _gfbe =_daab .WriteByte (byte (_aeaa .PageAssociation ));_gfbe !=nil {return 0,_cd .Wrap (_gfbe ,_eeef ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_eba :=make ([]byte ,4);
_e .BigEndian .PutUint32 (_eba ,uint32 (_aeaa .PageAssociation ));if _eedg ,_gfbe =_daab .Write (_eba );_gfbe !=nil {return 0,_cd .Wrap (_gfbe ,_eeef ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _eedg ,nil ;
};func (_dac *Header )String ()string {_agcf :=&_ea .Builder {};_agcf .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_agcf .WriteString (_dg .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_dac .SegmentNumber ));
_agcf .WriteString (_dg .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_dac .Type ));_agcf .WriteString (_dg .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_dac .RetainFlag ));
_agcf .WriteString (_dg .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_dac .PageAssociation ));_agcf .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_dac .PageAssociationFieldSize ));
_agcf .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_gbec :=range _dac .RTSNumbers {_agcf .WriteString (_dg .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_gbec ));};_agcf .WriteString (_dg .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_dac .HeaderLength ));
_agcf .WriteString (_dg .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_dac .SegmentDataLength ));_agcf .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_dac .SegmentDataStartOffset ));
return _agcf .String ();};func (_cefb *TextRegion )getUserTable (_bagb int )(_ae .Tabler ,error ){const _adccc ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _dfag int ;for _ ,_afbf :=range _cefb .Header .RTSegments {if _afbf .Type ==53{if _dfag ==_bagb {_fga ,_aeac :=_afbf .GetSegmentData ();
if _aeac !=nil {return nil ,_aeac ;};_aadc ,_bdcde :=_fga .(*TableSegment );if !_bdcde {_ad .Log .Debug (_dg .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_afbf .SegmentNumber ));
return nil ,_cd .Error (_adccc ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _ae .NewEncodedTable (_aadc );};_dfag ++;};};return nil ,nil ;};func (_ccfd *SymbolDictionary )decodeRefinedSymbol (_fgc ,_gagc uint32 )error {var (_cgee int ;_fbdee ,_bba int32 ;);if _ccfd .IsHuffmanEncoded {_bbdd ,_caba :=_ccfd ._begg .ReadBits (byte (_ccfd ._bgfbc ));
if _caba !=nil {return _caba ;};_cgee =int (_bbdd );_ecccd ,_caba :=_ae .GetStandardTable (15);if _caba !=nil {return _caba ;};_bfbf ,_caba :=_ecccd .Decode (_ccfd ._begg );if _caba !=nil {return _caba ;};_fbdee =int32 (_bfbf );_bfbf ,_caba =_ecccd .Decode (_ccfd ._begg );
if _caba !=nil {return _caba ;};_bba =int32 (_bfbf );_ecccd ,_caba =_ae .GetStandardTable (1);if _caba !=nil {return _caba ;};if _ ,_caba =_ecccd .Decode (_ccfd ._begg );_caba !=nil {return _caba ;};_ccfd ._begg .Align ();}else {_eced ,_cbd :=_ccfd ._cfag .DecodeIAID (uint64 (_ccfd ._bgfbc ),_ccfd ._gdgfd );
if _cbd !=nil {return _cbd ;};_cgee =int (_eced );_fbdee ,_cbd =_ccfd ._cfag .DecodeInt (_ccfd ._fcbc );if _cbd !=nil {return _cbd ;};_bba ,_cbd =_ccfd ._cfag .DecodeInt (_ccfd ._fbc );if _cbd !=nil {return _cbd ;};};if _degg :=_ccfd .setSymbolsArray ();
_degg !=nil {return _degg ;};_ecgc :=_ccfd ._dfbec [_cgee ];if _fecgf :=_ccfd .decodeNewSymbols (_fgc ,_gagc ,_ecgc ,_fbdee ,_bba );_fecgf !=nil {return _fecgf ;};if _ccfd .IsHuffmanEncoded {_ccfd ._begg .Align ();};return nil ;};func (_ggdd *PageInformationSegment )readWidthAndHeight ()error {_ebda ,_cdaa :=_ggdd ._deec .ReadBits (32);
if _cdaa !=nil {return _cdaa ;};_ggdd .PageBMWidth =int (_ebda &_d .MaxInt32 );_ebda ,_cdaa =_ggdd ._deec .ReadBits (32);if _cdaa !=nil {return _cdaa ;};_ggdd .PageBMHeight =int (_ebda &_d .MaxInt32 );return nil ;};func (_dcdc *SymbolDictionary )decodeNewSymbols (_agad ,_fdce uint32 ,_dffg *_dge .Bitmap ,_cebb ,_baee int32 )error {if _dcdc ._aacce ==nil {_dcdc ._aacce =_deb (_dcdc ._begg ,nil );
if _dcdc ._cfag ==nil {var _agdbe error ;_dcdc ._cfag ,_agdbe =_fb .New (_dcdc ._begg );if _agdbe !=nil {return _agdbe ;};};if _dcdc ._dfddg ==nil {_dcdc ._dfddg =_fb .NewStats (65536,1);};};_dcdc ._aacce .setParameters (_dcdc ._dfddg ,_dcdc ._cfag ,_dcdc .SdrTemplate ,_agad ,_fdce ,_dffg ,_cebb ,_baee ,false ,_dcdc .SdrATX ,_dcdc .SdrATY );
return _dcdc .addSymbol (_dcdc ._aacce );};func (_efd *PageInformationSegment )readIsLossless ()error {_egag ,_gffe :=_efd ._deec .ReadBit ();if _gffe !=nil {return _gffe ;};if _egag ==1{_efd .IsLossless =true ;};return nil ;};func (_fbff *GenericRegion )String ()string {_bcg :=&_ea .Builder {};
_bcg .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_bcg .WriteString (_fbff .RegionSegment .String ()+"\u000a");_bcg .WriteString (_dg .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_fbff .UseExtTemplates ));
_bcg .WriteString (_dg .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fbff .IsTPGDon ));_bcg .WriteString (_dg .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_fbff .GBTemplate ));
_bcg .WriteString (_dg .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_fbff .IsMMREncoded ));_bcg .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_fbff .GBAtX ));
_bcg .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_fbff .GBAtY ));_bcg .WriteString (_dg .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_fbff .GBAtOverride ));
return _bcg .String ();};func (_gecc *PatternDictionary )setGbAtPixels (){if _gecc .HDTemplate ==0{_gecc .GBAtX =make ([]int8 ,4);_gecc .GBAtY =make ([]int8 ,4);_gecc .GBAtX [0]=-int8 (_gecc .HdpWidth );_gecc .GBAtY [0]=0;_gecc .GBAtX [1]=-3;_gecc .GBAtY [1]=-1;
_gecc .GBAtX [2]=2;_gecc .GBAtY [2]=-2;_gecc .GBAtX [3]=-2;_gecc .GBAtY [3]=-2;}else {_gecc .GBAtX =[]int8 {-int8 (_gecc .HdpWidth )};_gecc .GBAtY =[]int8 {0};};};func (_fbe *GenericRefinementRegion )String ()string {_fge :=&_ea .Builder {};_fge .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_fge .WriteString (_fbe .RegionInfo .String ()+"\u000a");_fge .WriteString (_dg .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fbe .IsTPGROn ));_fge .WriteString (_dg .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_fbe .TemplateID ));
_fge .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_fbe .GrAtX ));_fge .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_fbe .GrAtY ));
_fge .WriteString (_dg .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_fbe .ReferenceDX ));_fge .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_fbe .ReferenceDY ));
return _fge .String ();};func (_cbcde *PatternDictionary )Init (h *Header ,r _b .StreamReader )error {_cbcde ._dgg =r ;return _cbcde .parseHeader ();};func (_feaf *GenericRegion )Size ()int {return _feaf .RegionSegment .Size ()+1+2*len (_feaf .GBAtX )};
type SegmentEncoder interface{Encode (_faaa _b .BinaryWriter )(_cfgdd int ,_cabc error );};func (_acdb *GenericRegion )parseHeader ()(_eefb error ){_ad .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _eefb !=nil {_ad .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_eefb );
}else {_ad .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_gba int ;_cee uint64 ;);if _eefb =_acdb .RegionSegment .parseHeader ();_eefb !=nil {return _eefb ;};if _ ,_eefb =_acdb ._eaed .ReadBits (3);_eefb !=nil {return _eefb ;};_gba ,_eefb =_acdb ._eaed .ReadBit ();if _eefb !=nil {return _eefb ;};if _gba ==1{_acdb .UseExtTemplates =true ;
};_gba ,_eefb =_acdb ._eaed .ReadBit ();if _eefb !=nil {return _eefb ;};if _gba ==1{_acdb .IsTPGDon =true ;};_cee ,_eefb =_acdb ._eaed .ReadBits (2);if _eefb !=nil {return _eefb ;};_acdb .GBTemplate =byte (_cee &0xf);_gba ,_eefb =_acdb ._eaed .ReadBit ();
if _eefb !=nil {return _eefb ;};if _gba ==1{_acdb .IsMMREncoded =true ;};if !_acdb .IsMMREncoded {_dbg :=1;if _acdb .GBTemplate ==0{_dbg =4;if _acdb .UseExtTemplates {_dbg =12;};};if _eefb =_acdb .readGBAtPixels (_dbg );_eefb !=nil {return _eefb ;};};if _eefb =_acdb .computeSegmentDataStructure ();
_eefb !=nil {return _eefb ;};_ad .Log .Trace ("\u0025\u0073",_acdb );return nil ;};func (_gcfa *SymbolDictionary )String ()string {_defbd :=&_ea .Builder {};_defbd .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");
_defbd .WriteString (_dg .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_gcfa .SdrTemplate ));_defbd .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_gcfa .SdTemplate ));
_defbd .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_gcfa ._bebbf ));_defbd .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_gcfa ._afdd ));
_defbd .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_gcfa .SdHuffAggInstanceSelection ));
_defbd .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_gcfa .SdHuffBMSizeSelection ));_defbd .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_gcfa .SdHuffDecodeWidthSelection ));
_defbd .WriteString (_dg .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_gcfa .SdHuffDecodeHeightSelection ));_defbd .WriteString (_dg .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_gcfa .UseRefinementAggregation ));
_defbd .WriteString (_dg .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_gcfa .IsHuffmanEncoded ));_defbd .WriteString (_dg .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_gcfa .SdATX ));
_defbd .WriteString (_dg .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_gcfa .SdATY ));_defbd .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_gcfa .SdrATX ));
_defbd .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_gcfa .SdrATY ));_defbd .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_gcfa .NumberOfExportedSymbols ));
_defbd .WriteString (_dg .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_gcfa .NumberOfNewSymbols ));_defbd .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_gcfa ._fcaf ));
_defbd .WriteString (_dg .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_gcfa ._eged ));return _defbd .String ();};func (_dece *Header )Encode (w _b .BinaryWriter )(_bdgb int ,_dabf error ){const _edge ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _cfea _b .BinaryWriter ;_ad .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _dabf !=nil {_ad .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_dabf );
}else {_ad .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_dece );_ad .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _dece .SegmentData !=nil {_aeea ,_cbff :=_dece .SegmentData .(SegmentEncoder );if !_cbff {return 0,_cd .Errorf (_edge ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_dece .SegmentData );
};_cfea =_b .BufferedMSB ();_bdgb ,_dabf =_aeea .Encode (_cfea );if _dabf !=nil {return 0,_cd .Wrap (_dabf ,_edge ,"");};_dece .SegmentDataLength =uint64 (_bdgb );};if _dece .pageSize ()==4{_dece .PageAssociationFieldSize =true ;};var _cfbf int ;_cfbf ,_dabf =_dece .writeSegmentNumber (w );
if _dabf !=nil {return 0,_cd .Wrap (_dabf ,_edge ,"");};_bdgb +=_cfbf ;if _dabf =_dece .writeFlags (w );_dabf !=nil {return _bdgb ,_cd .Wrap (_dabf ,_edge ,"");};_bdgb ++;_cfbf ,_dabf =_dece .writeReferredToCount (w );if _dabf !=nil {return 0,_cd .Wrap (_dabf ,_edge ,"");
};_bdgb +=_cfbf ;_cfbf ,_dabf =_dece .writeReferredToSegments (w );if _dabf !=nil {return 0,_cd .Wrap (_dabf ,_edge ,"");};_bdgb +=_cfbf ;_cfbf ,_dabf =_dece .writeSegmentPageAssociation (w );if _dabf !=nil {return 0,_cd .Wrap (_dabf ,_edge ,"");};_bdgb +=_cfbf ;
_cfbf ,_dabf =_dece .writeSegmentDataLength (w );if _dabf !=nil {return 0,_cd .Wrap (_dabf ,_edge ,"");};_bdgb +=_cfbf ;_dece .HeaderLength =int64 (_bdgb )-int64 (_dece .SegmentDataLength );if _cfea !=nil {if _ ,_dabf =w .Write (_cfea .Data ());_dabf !=nil {return _bdgb ,_cd .Wrap (_dabf ,_edge ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _bdgb ,nil ;};func (_daf *GenericRegion )overrideAtTemplate1 (_dce ,_bca ,_ade ,_gbf ,_gcg int )int {_dce &=0x1FF7;if _daf .GBAtY [0]==0&&_daf .GBAtX [0]>=-int8 (_gcg ){_dce |=(_gbf >>uint (7-(int8 (_gcg )+_daf .GBAtX [0]))&0x1)<<3;}else {_dce |=int (_daf .getPixel (_bca +int (_daf .GBAtX [0]),_ade +int (_daf .GBAtY [0])))<<3;
};return _dce ;};type PageInformationSegment struct{_deec _b .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_cbfd bool ;_dgef _dge .CombinationOperator ;_agae bool ;DefaultPixelValue uint8 ;_cfeae bool ;IsLossless bool ;
IsStripe bool ;MaxStripeSize uint16 ;};func (_fcc *GenericRefinementRegion )decodeOptimized (_da ,_af ,_eee ,_fef ,_bgad ,_bag ,_acd int )error {var (_eaab error ;_aea int ;_afc int ;);_ace :=_da -int (_fcc .ReferenceDY );if _fcf :=int (-_fcc .ReferenceDX );
_fcf > 0{_aea =_fcf ;};_ggg :=_fcc .ReferenceBitmap .GetByteIndex (_aea ,_ace );if _fcc .ReferenceDX > 0{_afc =int (_fcc .ReferenceDX );};_ge :=_fcc .RegionBitmap .GetByteIndex (_afc ,_da );switch _fcc .TemplateID {case 0:_eaab =_fcc .decodeTemplate (_da ,_af ,_eee ,_fef ,_bgad ,_bag ,_acd ,_ge ,_ace ,_ggg ,_fcc ._dea );
case 1:_eaab =_fcc .decodeTemplate (_da ,_af ,_eee ,_fef ,_bgad ,_bag ,_acd ,_ge ,_ace ,_ggg ,_fcc ._be );};return _eaab ;};func (_gcbg *Header )pageSize ()uint {if _gcbg .PageAssociation <=255{return 1;};return 4;};var _ templater =&template0 {};const (TSymbolDictionary Type =0;
TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;
TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;
TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_deae *TextRegion )GetRegionInfo ()*RegionSegment {return _deae .RegionInfo };func (_abeb *TextRegion )setParameters (_gege *_fb .Decoder ,_gcab ,_dcce bool ,_adgc ,_fdeeb uint32 ,_ddgb uint32 ,_cfaba int8 ,_beadd uint32 ,_aeaab int8 ,_ccde _dge .CombinationOperator ,_eaacc int8 ,_gegea int16 ,_adccd ,_edc ,_aeaf ,_faedg ,_daba ,_eeaa ,_eagf ,_edddc ,_fdeg ,_adadb int8 ,_acdbf ,_deef []int8 ,_gfabb []*_dge .Bitmap ,_fbee int8 ){_abeb ._dfaf =_gege ;
_abeb .IsHuffmanEncoded =_gcab ;_abeb .UseRefinement =_dcce ;_abeb .RegionInfo .BitmapWidth =_adgc ;_abeb .RegionInfo .BitmapHeight =_fdeeb ;_abeb .NumberOfSymbolInstances =_ddgb ;_abeb .SbStrips =_cfaba ;_abeb .NumberOfSymbols =_beadd ;_abeb .DefaultPixel =_aeaab ;
_abeb .CombinationOperator =_ccde ;_abeb .IsTransposed =_eaacc ;_abeb .ReferenceCorner =_gegea ;_abeb .SbDsOffset =_adccd ;_abeb .SbHuffFS =_edc ;_abeb .SbHuffDS =_aeaf ;_abeb .SbHuffDT =_faedg ;_abeb .SbHuffRDWidth =_daba ;_abeb .SbHuffRDHeight =_eeaa ;
_abeb .SbHuffRSize =_fdeg ;_abeb .SbHuffRDX =_eagf ;_abeb .SbHuffRDY =_edddc ;_abeb .SbrTemplate =_adadb ;_abeb .SbrATX =_acdbf ;_abeb .SbrATY =_deef ;_abeb .Symbols =_gfabb ;_abeb ._dgfbf =_fbee ;};func (_debg *PatternDictionary )readIsMMREncoded ()error {_deff ,_fbebg :=_debg ._dgg .ReadBit ();
if _fbebg !=nil {return _fbebg ;};if _deff !=0{_debg .IsMMREncoded =true ;};return nil ;};type Regioner interface{GetRegionBitmap ()(*_dge .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_beg *HalftoneRegion )parseHeader ()error {if _gbce :=_beg .RegionSegment .parseHeader ();
_gbce !=nil {return _gbce ;};_bbg ,_bfa :=_beg ._fdg .ReadBit ();if _bfa !=nil {return _bfa ;};_beg .HDefaultPixel =int8 (_bbg );_bagg ,_bfa :=_beg ._fdg .ReadBits (3);if _bfa !=nil {return _bfa ;};_beg .CombinationOperator =_dge .CombinationOperator (_bagg &0xf);
_bbg ,_bfa =_beg ._fdg .ReadBit ();if _bfa !=nil {return _bfa ;};if _bbg ==1{_beg .HSkipEnabled =true ;};_bagg ,_bfa =_beg ._fdg .ReadBits (2);if _bfa !=nil {return _bfa ;};_beg .HTemplate =byte (_bagg &0xf);_bbg ,_bfa =_beg ._fdg .ReadBit ();if _bfa !=nil {return _bfa ;
};if _bbg ==1{_beg .IsMMREncoded =true ;};_bagg ,_bfa =_beg ._fdg .ReadBits (32);if _bfa !=nil {return _bfa ;};_beg .HGridWidth =uint32 (_bagg &_d .MaxUint32 );_bagg ,_bfa =_beg ._fdg .ReadBits (32);if _bfa !=nil {return _bfa ;};_beg .HGridHeight =uint32 (_bagg &_d .MaxUint32 );
_bagg ,_bfa =_beg ._fdg .ReadBits (32);if _bfa !=nil {return _bfa ;};_beg .HGridX =int32 (_bagg &_d .MaxInt32 );_bagg ,_bfa =_beg ._fdg .ReadBits (32);if _bfa !=nil {return _bfa ;};_beg .HGridY =int32 (_bagg &_d .MaxInt32 );_bagg ,_bfa =_beg ._fdg .ReadBits (16);
if _bfa !=nil {return _bfa ;};_beg .HRegionX =uint16 (_bagg &_d .MaxUint16 );_bagg ,_bfa =_beg ._fdg .ReadBits (16);if _bfa !=nil {return _bfa ;};_beg .HRegionY =uint16 (_bagg &_d .MaxUint16 );if _bfa =_beg .computeSegmentDataStructure ();_bfa !=nil {return _bfa ;
};return _beg .checkInput ();};var _ _ae .BasicTabler =&TableSegment {};func (_cfd *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _cfd .RegionInfo };func (_cea *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_bae ,_faf ,_gff ,_baef ,_baa ,_fbga ,_aeb ,_eb ,_gb int )error {var (_cba ,_eef ,_fcg ,_efg ,_ece ,_bf int ;
_ag byte ;_eae error ;);if _bae > 0{_ag ,_eae =_cea .RegionBitmap .GetByte (_aeb -_gff );if _eae !=nil {return _eae ;};_fcg =int (_ag );};if _eb > 0&&_eb <=_cea .ReferenceBitmap .Height {_ag ,_eae =_cea .ReferenceBitmap .GetByte (_gb -_baef +_fbga );if _eae !=nil {return _eae ;
};_efg =int (_ag )<<4;};if _eb >=0&&_eb < _cea .ReferenceBitmap .Height {_ag ,_eae =_cea .ReferenceBitmap .GetByte (_gb +_fbga );if _eae !=nil {return _eae ;};_ece =int (_ag )<<1;};if _eb > -2&&_eb < _cea .ReferenceBitmap .Height -1{_ag ,_eae =_cea .ReferenceBitmap .GetByte (_gb +_baef +_fbga );
if _eae !=nil {return _eae ;};_bf =int (_ag );};_cba =((_fcg >>5)&0x6)|((_bf >>2)&0x30)|(_ece &0x180)|(_efg &0xc00);var _edf int ;for _ebd :=0;_ebd < _baa ;_ebd =_edf {var _baed int ;_edf =_ebd +8;var _edd int ;if _edd =_faf -_ebd ;_edd > 8{_edd =8;};_bbd :=_edf < _faf ;
_fec :=_edf < _cea .ReferenceBitmap .Width ;_bgf :=_fbga +1;if _bae > 0{_ag =0;if _bbd {_ag ,_eae =_cea .RegionBitmap .GetByte (_aeb -_gff +1);if _eae !=nil {return _eae ;};};_fcg =(_fcg <<8)|int (_ag );};if _eb > 0&&_eb <=_cea .ReferenceBitmap .Height {var _dga int ;
if _fec {_ag ,_eae =_cea .ReferenceBitmap .GetByte (_gb -_baef +_bgf );if _eae !=nil {return _eae ;};_dga =int (_ag )<<4;};_efg =(_efg <<8)|_dga ;};if _eb >=0&&_eb < _cea .ReferenceBitmap .Height {var _agg int ;if _fec {_ag ,_eae =_cea .ReferenceBitmap .GetByte (_gb +_bgf );
if _eae !=nil {return _eae ;};_agg =int (_ag )<<1;};_ece =(_ece <<8)|_agg ;};if _eb > -2&&_eb < (_cea .ReferenceBitmap .Height -1){_ag =0;if _fec {_ag ,_eae =_cea .ReferenceBitmap .GetByte (_gb +_baef +_bgf );if _eae !=nil {return _eae ;};};_bf =(_bf <<8)|int (_ag );
};for _gc :=0;_gc < _edd ;_gc ++{var _fafb int ;_bcca :=false ;_dab :=(_cba >>4)&0x1ff;if _dab ==0x1ff{_bcca =true ;_fafb =1;}else if _dab ==0x00{_bcca =true ;};if !_bcca {if _cea ._adc {_eef =_cea .overrideAtTemplate0 (_cba ,_ebd +_gc ,_bae ,_baed ,_gc );
_cea ._fc .SetIndex (int32 (_eef ));}else {_cea ._fc .SetIndex (int32 (_cba ));};_fafb ,_eae =_cea ._ef .DecodeBit (_cea ._fc );if _eae !=nil {return _eae ;};};_cbg :=uint (7-_gc );_baed |=_fafb <<_cbg ;_cba =((_cba &0xdb6)<<1)|_fafb |(_fcg >>_cbg +5)&0x002|((_bf >>_cbg +2)&0x010)|((_ece >>_cbg )&0x080)|((_efg >>_cbg )&0x400);
};_eae =_cea .RegionBitmap .SetByte (_aeb ,byte (_baed ));if _eae !=nil {return _eae ;};_aeb ++;_gb ++;};return nil ;};func NewHeader (d Documenter ,r _b .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_adda :=&Header {Reader :r };
if _gdaa :=_adda .parse (d ,r ,offset ,organizationType );_gdaa !=nil {return nil ,_cd .Wrap (_gdaa ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _adda ,nil ;};func (_caeb *GenericRegion )copyLineAbove (_aggg int )error {_cdd :=_aggg *_caeb .Bitmap .RowStride ;
_fgb :=_cdd -_caeb .Bitmap .RowStride ;for _bebb :=0;_bebb < _caeb .Bitmap .RowStride ;_bebb ++{_fad ,_acff :=_caeb .Bitmap .GetByte (_fgb );if _acff !=nil {return _acff ;};_fgb ++;if _acff =_caeb .Bitmap .SetByte (_cdd ,_fad );_acff !=nil {return _acff ;
};_cdd ++;};return nil ;};func (_dcga *SymbolDictionary )setAtPixels ()error {if _dcga .IsHuffmanEncoded {return nil ;};_dfae :=1;if _dcga .SdTemplate ==0{_dfae =4;};if _ddee :=_dcga .readAtPixels (_dfae );_ddee !=nil {return _ddee ;};return nil ;};func (_eac *HalftoneRegion )computeGrayScalePlanes (_gecb []*_dge .Bitmap ,_eaf int )([][]int ,error ){_ffga :=make ([][]int ,_eac .HGridHeight );
for _fcca :=0;_fcca < len (_ffga );_fcca ++{_ffga [_fcca ]=make ([]int ,_eac .HGridWidth );};for _eaddc :=0;_eaddc < int (_eac .HGridHeight );_eaddc ++{for _dfad :=0;_dfad < int (_eac .HGridWidth );_dfad +=8{var _dgc int ;if _ccce :=int (_eac .HGridWidth )-_dfad ;
_ccce > 8{_dgc =8;}else {_dgc =_ccce ;};_aacf :=_gecb [0].GetByteIndex (_dfad ,_eaddc );for _cbaa :=0;_cbaa < _dgc ;_cbaa ++{_dgcc :=_cbaa +_dfad ;_ffga [_eaddc ][_dgcc ]=0;for _eca :=0;_eca < _eaf ;_eca ++{_gegb ,_beag :=_gecb [_eca ].GetByte (_aacf );
if _beag !=nil {return nil ,_beag ;};_bccg :=_gegb >>uint (7-_dgcc &7);_dfbe :=_bccg &1;_cedc :=1<<uint (_eca );_dgcf :=int (_dfbe )*_cedc ;_ffga [_eaddc ][_dgcc ]+=_dgcf ;};};};};return _ffga ,nil ;};func (_fegg *TableSegment )parseHeader ()error {var (_gbbcc int ;
_cbfde uint64 ;_ecd error ;);_gbbcc ,_ecd =_fegg ._daaf .ReadBit ();if _ecd !=nil {return _ecd ;};if _gbbcc ==1{return _dg .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_gbbcc );
};if _cbfde ,_ecd =_fegg ._daaf .ReadBits (3);_ecd !=nil {return _ecd ;};_fegg ._dbcfc =(int32 (_cbfde )+1)&0xf;if _cbfde ,_ecd =_fegg ._daaf .ReadBits (3);_ecd !=nil {return _ecd ;};_fegg ._fccf =(int32 (_cbfde )+1)&0xf;if _cbfde ,_ecd =_fegg ._daaf .ReadBits (32);
_ecd !=nil {return _ecd ;};_fegg ._aeeb =int32 (_cbfde &_d .MaxInt32 );if _cbfde ,_ecd =_fegg ._daaf .ReadBits (32);_ecd !=nil {return _ecd ;};_fegg ._cadf =int32 (_cbfde &_d .MaxInt32 );return nil ;};func (_ccg *GenericRegion )setOverrideFlag (_ddf int ){_ccg .GBAtOverride [_ddf ]=true ;
_ccg ._eab =true ;};func (_cgec *SymbolDictionary )readRegionFlags ()error {var (_cdcc uint64 ;_eaaf int ;);_ ,_aggba :=_cgec ._begg .ReadBits (3);if _aggba !=nil {return _aggba ;};_eaaf ,_aggba =_cgec ._begg .ReadBit ();if _aggba !=nil {return _aggba ;
};_cgec .SdrTemplate =int8 (_eaaf );_cdcc ,_aggba =_cgec ._begg .ReadBits (2);if _aggba !=nil {return _aggba ;};_cgec .SdTemplate =int8 (_cdcc &0xf);_eaaf ,_aggba =_cgec ._begg .ReadBit ();if _aggba !=nil {return _aggba ;};if _eaaf ==1{_cgec ._bebbf =true ;
};_eaaf ,_aggba =_cgec ._begg .ReadBit ();if _aggba !=nil {return _aggba ;};if _eaaf ==1{_cgec ._afdd =true ;};_eaaf ,_aggba =_cgec ._begg .ReadBit ();if _aggba !=nil {return _aggba ;};if _eaaf ==1{_cgec .SdHuffAggInstanceSelection =true ;};_eaaf ,_aggba =_cgec ._begg .ReadBit ();
if _aggba !=nil {return _aggba ;};_cgec .SdHuffBMSizeSelection =int8 (_eaaf );_cdcc ,_aggba =_cgec ._begg .ReadBits (2);if _aggba !=nil {return _aggba ;};_cgec .SdHuffDecodeWidthSelection =int8 (_cdcc &0xf);_cdcc ,_aggba =_cgec ._begg .ReadBits (2);if _aggba !=nil {return _aggba ;
};_cgec .SdHuffDecodeHeightSelection =int8 (_cdcc &0xf);_eaaf ,_aggba =_cgec ._begg .ReadBit ();if _aggba !=nil {return _aggba ;};if _eaaf ==1{_cgec .UseRefinementAggregation =true ;};_eaaf ,_aggba =_cgec ._begg .ReadBit ();if _aggba !=nil {return _aggba ;
};if _eaaf ==1{_cgec .IsHuffmanEncoded =true ;};return nil ;};func (_cbf *GenericRefinementRegion )decodeTemplate (_bdc ,_ead ,_bgaf ,_bfb ,_ced ,_ebe ,_adca ,_geea ,_bgg ,_cgd int ,_eea templater )(_edg error ){var (_bgadf ,_agc ,_gaf ,_cbeb ,_abga int16 ;
_dff ,_dgea ,_cdbg ,_adf int ;_fgg byte ;);if _bgg >=1&&(_bgg -1)< _cbf .ReferenceBitmap .Height {_fgg ,_edg =_cbf .ReferenceBitmap .GetByte (_cgd -_bfb );if _edg !=nil {return ;};_dff =int (_fgg );};if _bgg >=0&&(_bgg )< _cbf .ReferenceBitmap .Height {_fgg ,_edg =_cbf .ReferenceBitmap .GetByte (_cgd );
if _edg !=nil {return ;};_dgea =int (_fgg );};if _bgg >=-1&&(_bgg +1)< _cbf .ReferenceBitmap .Height {_fgg ,_edg =_cbf .ReferenceBitmap .GetByte (_cgd +_bfb );if _edg !=nil {return ;};_cdbg =int (_fgg );};_cgd ++;if _bdc >=1{_fgg ,_edg =_cbf .RegionBitmap .GetByte (_geea -_bgaf );
if _edg !=nil {return ;};_adf =int (_fgg );};_geea ++;_gdag :=_cbf .ReferenceDX %8;_gfdf :=6+_gdag ;_aba :=_cgd %_bfb ;if _gfdf >=0{if _gfdf < 8{_bgadf =int16 (_dff >>uint (_gfdf ))&0x07;};if _gfdf < 8{_agc =int16 (_dgea >>uint (_gfdf ))&0x07;};if _gfdf < 8{_gaf =int16 (_cdbg >>uint (_gfdf ))&0x07;
};if _gfdf ==6&&_aba > 1{if _bgg >=1&&(_bgg -1)< _cbf .ReferenceBitmap .Height {_fgg ,_edg =_cbf .ReferenceBitmap .GetByte (_cgd -_bfb -2);if _edg !=nil {return _edg ;};_bgadf |=int16 (_fgg <<2)&0x04;};if _bgg >=0&&_bgg < _cbf .ReferenceBitmap .Height {_fgg ,_edg =_cbf .ReferenceBitmap .GetByte (_cgd -2);
if _edg !=nil {return _edg ;};_agc |=int16 (_fgg <<2)&0x04;};if _bgg >=-1&&_bgg +1< _cbf .ReferenceBitmap .Height {_fgg ,_edg =_cbf .ReferenceBitmap .GetByte (_cgd +_bfb -2);if _edg !=nil {return _edg ;};_gaf |=int16 (_fgg <<2)&0x04;};};if _gfdf ==0{_dff =0;
_dgea =0;_cdbg =0;if _aba < _bfb -1{if _bgg >=1&&_bgg -1< _cbf .ReferenceBitmap .Height {_fgg ,_edg =_cbf .ReferenceBitmap .GetByte (_cgd -_bfb );if _edg !=nil {return _edg ;};_dff =int (_fgg );};if _bgg >=0&&_bgg < _cbf .ReferenceBitmap .Height {_fgg ,_edg =_cbf .ReferenceBitmap .GetByte (_cgd );
if _edg !=nil {return _edg ;};_dgea =int (_fgg );};if _bgg >=-1&&_bgg +1< _cbf .ReferenceBitmap .Height {_fgg ,_edg =_cbf .ReferenceBitmap .GetByte (_cgd +_bfb );if _edg !=nil {return _edg ;};_cdbg =int (_fgg );};};_cgd ++;};}else {_bgadf =int16 (_dff <<1)&0x07;
_agc =int16 (_dgea <<1)&0x07;_gaf =int16 (_cdbg <<1)&0x07;_dff =0;_dgea =0;_cdbg =0;if _aba < _bfb -1{if _bgg >=1&&_bgg -1< _cbf .ReferenceBitmap .Height {_fgg ,_edg =_cbf .ReferenceBitmap .GetByte (_cgd -_bfb );if _edg !=nil {return _edg ;};_dff =int (_fgg );
};if _bgg >=0&&_bgg < _cbf .ReferenceBitmap .Height {_fgg ,_edg =_cbf .ReferenceBitmap .GetByte (_cgd );if _edg !=nil {return _edg ;};_dgea =int (_fgg );};if _bgg >=-1&&_bgg +1< _cbf .ReferenceBitmap .Height {_fgg ,_edg =_cbf .ReferenceBitmap .GetByte (_cgd +_bfb );
if _edg !=nil {return _edg ;};_cdbg =int (_fgg );};_cgd ++;};_bgadf |=int16 ((_dff >>7)&0x07);_agc |=int16 ((_dgea >>7)&0x07);_gaf |=int16 ((_cdbg >>7)&0x07);};_cbeb =int16 (_adf >>6);_abga =0;_dd :=(2-_gdag )%8;_dff <<=uint (_dd );_dgea <<=uint (_dd );
_cdbg <<=uint (_dd );_adf <<=2;var _ebc int ;for _cce :=0;_cce < _ead ;_cce ++{_dc :=_cce &0x07;_gcc :=_eea .form (_bgadf ,_agc ,_gaf ,_cbeb ,_abga );if _cbf ._adc {_fgg ,_edg =_cbf .RegionBitmap .GetByte (_cbf .RegionBitmap .GetByteIndex (_cce ,_bdc ));
if _edg !=nil {return _edg ;};_cbf ._fc .SetIndex (int32 (_cbf .overrideAtTemplate0 (int (_gcc ),_cce ,_bdc ,int (_fgg ),_dc )));}else {_cbf ._fc .SetIndex (int32 (_gcc ));};_ebc ,_edg =_cbf ._ef .DecodeBit (_cbf ._fc );if _edg !=nil {return _edg ;};if _edg =_cbf .RegionBitmap .SetPixel (_cce ,_bdc ,byte (_ebc ));
_edg !=nil {return _edg ;};_bgadf =((_bgadf <<1)|0x01&int16 (_dff >>7))&0x07;_agc =((_agc <<1)|0x01&int16 (_dgea >>7))&0x07;_gaf =((_gaf <<1)|0x01&int16 (_cdbg >>7))&0x07;_cbeb =((_cbeb <<1)|0x01&int16 (_adf >>7))&0x07;_abga =int16 (_ebc );if (_cce -int (_cbf .ReferenceDX ))%8==5{_dff =0;
_dgea =0;_cdbg =0;if ((_cce -int (_cbf .ReferenceDX ))/8)+1< _cbf .ReferenceBitmap .RowStride {if _bgg >=1&&(_bgg -1)< _cbf .ReferenceBitmap .Height {_fgg ,_edg =_cbf .ReferenceBitmap .GetByte (_cgd -_bfb );if _edg !=nil {return _edg ;};_dff =int (_fgg );
};if _bgg >=0&&_bgg < _cbf .ReferenceBitmap .Height {_fgg ,_edg =_cbf .ReferenceBitmap .GetByte (_cgd );if _edg !=nil {return _edg ;};_dgea =int (_fgg );};if _bgg >=-1&&(_bgg +1)< _cbf .ReferenceBitmap .Height {_fgg ,_edg =_cbf .ReferenceBitmap .GetByte (_cgd +_bfb );
if _edg !=nil {return _edg ;};_cdbg =int (_fgg );};};_cgd ++;}else {_dff <<=1;_dgea <<=1;_cdbg <<=1;};if _dc ==5&&_bdc >=1{if ((_cce >>3)+1)>=_cbf .RegionBitmap .RowStride {_adf =0;}else {_fgg ,_edg =_cbf .RegionBitmap .GetByte (_geea -_bgaf );if _edg !=nil {return _edg ;
};_adf =int (_fgg );};_geea ++;}else {_adf <<=1;};};return nil ;};func (_aegc *RegionSegment )readCombinationOperator ()error {_dfcf ,_gdec :=_aegc ._fggg .ReadBits (3);if _gdec !=nil {return _gdec ;};_aegc .CombinaionOperator =_dge .CombinationOperator (_dfcf &0xF);
return nil ;};func (_bfcb *PageInformationSegment )readResolution ()error {_fada ,_addb :=_bfcb ._deec .ReadBits (32);if _addb !=nil {return _addb ;};_bfcb .ResolutionX =int (_fada &_d .MaxInt32 );_fada ,_addb =_bfcb ._deec .ReadBits (32);if _addb !=nil {return _addb ;
};_bfcb .ResolutionY =int (_fada &_d .MaxInt32 );return nil ;};type TextRegion struct{_daga _b .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _dge .CombinationOperator ;IsTransposed int8 ;
ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;
_cgbg int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_dge .Bitmap ;Symbols []*_dge .Bitmap ;_dfaf *_fb .Decoder ;_fdac *GenericRefinementRegion ;_badf *_fb .DecoderStats ;_dad *_fb .DecoderStats ;_ffdf *_fb .DecoderStats ;_gcdfe *_fb .DecoderStats ;
_beadg *_fb .DecoderStats ;_fadg *_fb .DecoderStats ;_dfbf *_fb .DecoderStats ;_cbee *_fb .DecoderStats ;_fbgae *_fb .DecoderStats ;_cbffg *_fb .DecoderStats ;_aege *_fb .DecoderStats ;_dgfbf int8 ;_adad *_ae .FixedSizeTable ;Header *Header ;_bgdg _ae .Tabler ;
_gfgad _ae .Tabler ;_cdce _ae .Tabler ;_fccb _ae .Tabler ;_dbcg _ae .Tabler ;_bgec _ae .Tabler ;_bacd _ae .Tabler ;_ccbdc _ae .Tabler ;_gfcda ,_daeb map[int ]int ;_cbcbe []int ;_bdegd *_dge .Points ;_eefa *_dge .Bitmaps ;_bcdf *_cff .IntSlice ;_cgf ,_dcadf int ;
_fefbc *_dge .Boxes ;};func (_cgbb *SymbolDictionary )decodeHeightClassBitmap (_cede *_dge .Bitmap ,_aaee int64 ,_afdc int ,_acfda []int )error {for _ffcf :=_aaee ;_ffcf < int64 (_cgbb ._eged );_ffcf ++{var _acaf int ;for _afce :=_aaee ;_afce <=_ffcf -1;
_afce ++{_acaf +=_acfda [_afce ];};_fegb :=_f .Rect (_acaf ,0,_acaf +_acfda [_ffcf ],_afdc );_cfegb ,_ceb :=_dge .Extract (_fegb ,_cede );if _ceb !=nil {return _ceb ;};_cgbb ._fcbe [_ffcf ]=_cfegb ;_cgbb ._dfbec =append (_cgbb ._dfbec ,_cfegb );};return nil ;
};type EncodeInitializer interface{InitEncode ();};func (_baac *GenericRegion )updateOverrideFlags ()error {const _bac ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _baac .GBAtX ==nil ||_baac .GBAtY ==nil {return nil ;
};if len (_baac .GBAtX )!=len (_baac .GBAtY ){return _cd .Errorf (_bac ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_baac .GBAtX ),len (_baac .GBAtY ));
};_baac .GBAtOverride =make ([]bool ,len (_baac .GBAtX ));switch _baac .GBTemplate {case 0:if !_baac .UseExtTemplates {if _baac .GBAtX [0]!=3||_baac .GBAtY [0]!=-1{_baac .setOverrideFlag (0);};if _baac .GBAtX [1]!=-3||_baac .GBAtY [1]!=-1{_baac .setOverrideFlag (1);
};if _baac .GBAtX [2]!=2||_baac .GBAtY [2]!=-2{_baac .setOverrideFlag (2);};if _baac .GBAtX [3]!=-2||_baac .GBAtY [3]!=-2{_baac .setOverrideFlag (3);};}else {if _baac .GBAtX [0]!=-2||_baac .GBAtY [0]!=0{_baac .setOverrideFlag (0);};if _baac .GBAtX [1]!=0||_baac .GBAtY [1]!=-2{_baac .setOverrideFlag (1);
};if _baac .GBAtX [2]!=-2||_baac .GBAtY [2]!=-1{_baac .setOverrideFlag (2);};if _baac .GBAtX [3]!=-1||_baac .GBAtY [3]!=-2{_baac .setOverrideFlag (3);};if _baac .GBAtX [4]!=1||_baac .GBAtY [4]!=-2{_baac .setOverrideFlag (4);};if _baac .GBAtX [5]!=2||_baac .GBAtY [5]!=-1{_baac .setOverrideFlag (5);
};if _baac .GBAtX [6]!=-3||_baac .GBAtY [6]!=0{_baac .setOverrideFlag (6);};if _baac .GBAtX [7]!=-4||_baac .GBAtY [7]!=0{_baac .setOverrideFlag (7);};if _baac .GBAtX [8]!=2||_baac .GBAtY [8]!=-2{_baac .setOverrideFlag (8);};if _baac .GBAtX [9]!=3||_baac .GBAtY [9]!=-1{_baac .setOverrideFlag (9);
};if _baac .GBAtX [10]!=-2||_baac .GBAtY [10]!=-2{_baac .setOverrideFlag (10);};if _baac .GBAtX [11]!=-3||_baac .GBAtY [11]!=-1{_baac .setOverrideFlag (11);};};case 1:if _baac .GBAtX [0]!=3||_baac .GBAtY [0]!=-1{_baac .setOverrideFlag (0);};case 2:if _baac .GBAtX [0]!=2||_baac .GBAtY [0]!=-1{_baac .setOverrideFlag (0);
};case 3:if _baac .GBAtX [0]!=2||_baac .GBAtY [0]!=-1{_baac .setOverrideFlag (0);};};return nil ;};func (_feaea *SymbolDictionary )setRefinementAtPixels ()error {if !_feaea .UseRefinementAggregation ||_feaea .SdrTemplate !=0{return nil ;};if _acaab :=_feaea .readRefinementAtPixels (2);
_acaab !=nil {return _acaab ;};return nil ;};func (_aaba *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_aaba .SdHuffAggInstanceSelection {_dgca ,_ccbdf :=_ae .GetStandardTable (1);if _ccbdf !=nil {return 0,_ccbdf ;};return _dgca .Decode (_aaba ._begg );
};if _aaba ._cccg ==nil {var (_dgb int ;_aaed error ;);if _aaba .SdHuffDecodeHeightSelection ==3{_dgb ++;};if _aaba .SdHuffDecodeWidthSelection ==3{_dgb ++;};if _aaba .SdHuffBMSizeSelection ==3{_dgb ++;};_aaba ._cccg ,_aaed =_aaba .getUserTable (_dgb );
if _aaed !=nil {return 0,_aaed ;};};return _aaba ._cccg .Decode (_aaba ._begg );};func (_fffa *TextRegion )decodeSymbolInstances ()error {_afee ,_gdbc :=_fffa .decodeStripT ();if _gdbc !=nil {return _gdbc ;};var (_abef int64 ;_fdeae uint32 ;);for _fdeae < _fffa .NumberOfSymbolInstances {_cffb ,_ccedf :=_fffa .decodeDT ();
if _ccedf !=nil {return _ccedf ;};_afee +=_cffb ;var _ceba int64 ;_gef :=true ;_fffa ._cgbg =0;for {if _gef {_ceba ,_ccedf =_fffa .decodeDfs ();if _ccedf !=nil {return _ccedf ;};_abef +=_ceba ;_fffa ._cgbg =_abef ;_gef =false ;}else {_febd ,_gegc :=_fffa .decodeIds ();
if _de .Is (_gegc ,_ec .ErrOOB ){break ;};if _gegc !=nil {return _gegc ;};if _fdeae >=_fffa .NumberOfSymbolInstances {break ;};_fffa ._cgbg +=_febd +int64 (_fffa .SbDsOffset );};_faeb ,_bgecb :=_fffa .decodeCurrentT ();if _bgecb !=nil {return _bgecb ;};
_cffgc :=_afee +_faeb ;_afcf ,_bgecb :=_fffa .decodeID ();if _bgecb !=nil {return _bgecb ;};_bcgb ,_bgecb :=_fffa .decodeRI ();if _bgecb !=nil {return _bgecb ;};_edac ,_bgecb :=_fffa .decodeIb (_bcgb ,_afcf );if _bgecb !=nil {return _bgecb ;};if _bgecb =_fffa .blit (_edac ,_cffgc );
_bgecb !=nil {return _bgecb ;};_fdeae ++;};};return nil ;};func (_cgeb *PageInformationSegment )encodeFlags (_ceafb _b .BinaryWriter )(_aggc error ){const _fgef ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _aggc =_ceafb .SkipBits (1);
_aggc !=nil {return _cd .Wrap (_aggc ,_fgef ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _befc int ;if _cgeb .CombinationOperatorOverrideAllowed (){_befc =1;};if _aggc =_ceafb .WriteBit (_befc );_aggc !=nil {return _cd .Wrap (_aggc ,_fgef ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");
};_befc =0;if _cgeb ._agae {_befc =1;};if _aggc =_ceafb .WriteBit (_befc );_aggc !=nil {return _cd .Wrap (_aggc ,_fgef ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _aggc =_ceafb .WriteBit ((int (_cgeb ._dgef )>>1)&0x01);
_aggc !=nil {return _cd .Wrap (_aggc ,_fgef ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _aggc =_ceafb .WriteBit (int (_cgeb ._dgef )&0x01);
_aggc !=nil {return _cd .Wrap (_aggc ,_fgef ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_befc =int (_cgeb .DefaultPixelValue );
if _aggc =_ceafb .WriteBit (_befc );_aggc !=nil {return _cd .Wrap (_aggc ,_fgef ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_befc =0;if _cgeb ._cfeae {_befc =1;
};if _aggc =_ceafb .WriteBit (_befc );_aggc !=nil {return _cd .Wrap (_aggc ,_fgef ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_befc =0;if _cgeb .IsLossless {_befc =1;};if _aggc =_ceafb .WriteBit (_befc );
_aggc !=nil {return _cd .Wrap (_aggc ,_fgef ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_cddf *TextRegion )decodeRI ()(int64 ,error ){if !_cddf .UseRefinement {return 0,nil ;
};if _cddf .IsHuffmanEncoded {_cfgdf ,_eggd :=_cddf ._daga .ReadBit ();return int64 (_cfgdf ),_eggd ;};_aabaf ,_ebf :=_cddf ._dfaf .DecodeInt (_cddf ._beadg );return int64 (_aabaf ),_ebf ;};func (_fbf *template0 )setIndex (_ddb *_fb .DecoderStats ){_ddb .SetIndex (0x100)};
func (_aacc *Header )readSegmentNumber (_dgcb _b .StreamReader )error {const _cbba ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_acde :=make ([]byte ,4);_ ,_fda :=_dgcb .Read (_acde );if _fda !=nil {return _cd .Wrap (_fda ,_cbba ,"");
};_aacc .SegmentNumber =_e .BigEndian .Uint32 (_acde );return nil ;};func (_ddca *SymbolDictionary )decodeAggregate (_gccfg ,_fgff uint32 )error {var (_fdee int64 ;_faed error ;);if _ddca .IsHuffmanEncoded {_fdee ,_faed =_ddca .huffDecodeRefAggNInst ();
if _faed !=nil {return _faed ;};}else {_faga ,_dabc :=_ddca ._cfag .DecodeInt (_ddca ._aadb );if _dabc !=nil {return _dabc ;};_fdee =int64 (_faga );};if _fdee > 1{return _ddca .decodeThroughTextRegion (_gccfg ,_fgff ,uint32 (_fdee ));}else if _fdee ==1{return _ddca .decodeRefinedSymbol (_gccfg ,_fgff );
};return nil ;};func (_bada *PageInformationSegment )readMaxStripeSize ()error {_bfd ,_ecfe :=_bada ._deec .ReadBits (15);if _ecfe !=nil {return _ecfe ;};_bada .MaxStripeSize =uint16 (_bfd &_d .MaxUint16 );return nil ;};type template0 struct{};type PatternDictionary struct{_dgg _b .StreamReader ;
DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_dge .Bitmap ;GrayMax uint32 ;};func (_cccf *TableSegment )Init (h *Header ,r _b .StreamReader )error {_cccf ._daaf =r ;
return _cccf .parseHeader ();};func (_fggc *PageInformationSegment )Size ()int {return 19};func (_eddb *SymbolDictionary )GetDictionary ()([]*_dge .Bitmap ,error ){_ad .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_ad .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_ad .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_eddb ._bgafde ,_eddb ._fcbe );
}();if _eddb ._bgafde ==nil {var _efedf error ;if _eddb .UseRefinementAggregation {_eddb ._bgfbc =_eddb .getSbSymCodeLen ();};if !_eddb .IsHuffmanEncoded {if _efedf =_eddb .setCodingStatistics ();_efedf !=nil {return nil ,_efedf ;};};_eddb ._fcbe =make ([]*_dge .Bitmap ,_eddb .NumberOfNewSymbols );
var _ggddf []int ;if _eddb .IsHuffmanEncoded &&!_eddb .UseRefinementAggregation {_ggddf =make ([]int ,_eddb .NumberOfNewSymbols );};if _efedf =_eddb .setSymbolsArray ();_efedf !=nil {return nil ,_efedf ;};var _aebfd ,_dccf int64 ;_eddb ._eged =0;for _eddb ._eged < _eddb .NumberOfNewSymbols {_dccf ,_efedf =_eddb .decodeHeightClassDeltaHeight ();
if _efedf !=nil {return nil ,_efedf ;};_aebfd +=_dccf ;var _fdbde ,_efba uint32 ;_gae :=int64 (_eddb ._eged );for {var _aagc int64 ;_aagc ,_efedf =_eddb .decodeDifferenceWidth ();if _de .Is (_efedf ,_ec .ErrOOB ){break ;};if _efedf !=nil {return nil ,_efedf ;
};if _eddb ._eged >=_eddb .NumberOfNewSymbols {break ;};_fdbde +=uint32 (_aagc );_efba +=_fdbde ;if !_eddb .IsHuffmanEncoded ||_eddb .UseRefinementAggregation {if !_eddb .UseRefinementAggregation {_efedf =_eddb .decodeDirectlyThroughGenericRegion (_fdbde ,uint32 (_aebfd ));
if _efedf !=nil {return nil ,_efedf ;};}else {_efedf =_eddb .decodeAggregate (_fdbde ,uint32 (_aebfd ));if _efedf !=nil {return nil ,_efedf ;};};}else if _eddb .IsHuffmanEncoded &&!_eddb .UseRefinementAggregation {_ggddf [_eddb ._eged ]=int (_fdbde );};
_eddb ._eged ++;};if _eddb .IsHuffmanEncoded &&!_eddb .UseRefinementAggregation {var _abb int64 ;if _eddb .SdHuffBMSizeSelection ==0{var _ebde _ae .Tabler ;_ebde ,_efedf =_ae .GetStandardTable (1);if _efedf !=nil {return nil ,_efedf ;};_abb ,_efedf =_ebde .Decode (_eddb ._begg );
if _efedf !=nil {return nil ,_efedf ;};}else {_abb ,_efedf =_eddb .huffDecodeBmSize ();if _efedf !=nil {return nil ,_efedf ;};};_eddb ._begg .Align ();var _cfab *_dge .Bitmap ;_cfab ,_efedf =_eddb .decodeHeightClassCollectiveBitmap (_abb ,uint32 (_aebfd ),_efba );
if _efedf !=nil {return nil ,_efedf ;};_efedf =_eddb .decodeHeightClassBitmap (_cfab ,_gae ,int (_aebfd ),_ggddf );if _efedf !=nil {return nil ,_efedf ;};};};_gdbe ,_efedf :=_eddb .getToExportFlags ();if _efedf !=nil {return nil ,_efedf ;};_eddb .setExportedSymbols (_gdbe );
};return _eddb ._bgafde ,nil ;};func (_acbf *PatternDictionary )computeSegmentDataStructure ()error {_acbf .DataOffset =_acbf ._dgg .StreamPosition ();_acbf .DataHeaderLength =_acbf .DataOffset -_acbf .DataHeaderOffset ;_acbf .DataLength =int64 (_acbf ._dgg .Length ())-_acbf .DataHeaderLength ;
return nil ;};func (_bfdf *SymbolDictionary )encodeNumSyms (_eafc _b .BinaryWriter )(_ggbe int ,_fcgg error ){const _affc ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_aed :=make ([]byte ,4);_e .BigEndian .PutUint32 (_aed ,_bfdf .NumberOfExportedSymbols );
if _ggbe ,_fcgg =_eafc .Write (_aed );_fcgg !=nil {return _ggbe ,_cd .Wrap (_fcgg ,_affc ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_e .BigEndian .PutUint32 (_aed ,_bfdf .NumberOfNewSymbols );_fefc ,_fcgg :=_eafc .Write (_aed );
if _fcgg !=nil {return _ggbe ,_cd .Wrap (_fcgg ,_affc ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _ggbe +_fefc ,nil ;};func (_fdfb *HalftoneRegion )GetPatterns ()([]*_dge .Bitmap ,error ){var (_bcdb []*_dge .Bitmap ;_cdcg error ;
);for _ ,_acaa :=range _fdfb ._gag .RTSegments {var _defb Segmenter ;_defb ,_cdcg =_acaa .GetSegmentData ();if _cdcg !=nil {_ad .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_cdcg );
return nil ,_cdcg ;};_ecf ,_fdfc :=_defb .(*PatternDictionary );if !_fdfc {_cdcg =_dg .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_defb );
return nil ,_cdcg ;};var _gbfb []*_dge .Bitmap ;_gbfb ,_cdcg =_ecf .GetDictionary ();if _cdcg !=nil {_ad .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_cdcg );
return nil ,_cdcg ;};_bcdb =append (_bcdb ,_gbfb ...);};return _bcdb ,nil ;};func (_edbba *Header )readNumberOfReferredToSegments (_eddf _b .StreamReader )(uint64 ,error ){const _cga ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_agdf ,_abfb :=_eddf .ReadBits (3);if _abfb !=nil {return 0,_cd .Wrap (_abfb ,_cga ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_agdf &=0xf;var _faag []byte ;if _agdf <=4{_faag =make ([]byte ,5);for _cfa :=0;_cfa <=4;_cfa ++{_gbef ,_gfad :=_eddf .ReadBit ();
if _gfad !=nil {return 0,_cd .Wrap (_gfad ,_cga ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_faag [_cfa ]=byte (_gbef );};}else {_agdf ,_abfb =_eddf .ReadBits (29);if _abfb !=nil {return 0,_abfb ;};_agdf &=_d .MaxInt32 ;_efff :=(_agdf +8)>>3;
_efff <<=3;_faag =make ([]byte ,_efff );var _ecb uint64 ;for _ecb =0;_ecb < _efff ;_ecb ++{_ega ,_adfgf :=_eddf .ReadBit ();if _adfgf !=nil {return 0,_cd .Wrap (_adfgf ,_cga ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_faag [_ecb ]=byte (_ega );
};};return _agdf ,nil ;};func (_bebe *TextRegion )blit (_efeb *_dge .Bitmap ,_cbbe int64 )error {if _bebe .IsTransposed ==0&&(_bebe .ReferenceCorner ==2||_bebe .ReferenceCorner ==3){_bebe ._cgbg +=int64 (_efeb .Width -1);}else if _bebe .IsTransposed ==1&&(_bebe .ReferenceCorner ==0||_bebe .ReferenceCorner ==2){_bebe ._cgbg +=int64 (_efeb .Height -1);
};_bfga :=_bebe ._cgbg ;if _bebe .IsTransposed ==1{_bfga ,_cbbe =_cbbe ,_bfga ;};switch _bebe .ReferenceCorner {case 0:_cbbe -=int64 (_efeb .Height -1);case 2:_cbbe -=int64 (_efeb .Height -1);_bfga -=int64 (_efeb .Width -1);case 3:_bfga -=int64 (_efeb .Width -1);
};_ebdb :=_dge .Blit (_efeb ,_bebe .RegionBitmap ,int (_bfga ),int (_cbbe ),_bebe .CombinationOperator );if _ebdb !=nil {return _ebdb ;};if _bebe .IsTransposed ==0&&(_bebe .ReferenceCorner ==0||_bebe .ReferenceCorner ==1){_bebe ._cgbg +=int64 (_efeb .Width -1);
};if _bebe .IsTransposed ==1&&(_bebe .ReferenceCorner ==1||_bebe .ReferenceCorner ==3){_bebe ._cgbg +=int64 (_efeb .Height -1);};return nil ;};func (_bbfda *SymbolDictionary )setRetainedCodingContexts (_dafb *SymbolDictionary ){_bbfda ._cfag =_dafb ._cfag ;
_bbfda .IsHuffmanEncoded =_dafb .IsHuffmanEncoded ;_bbfda .UseRefinementAggregation =_dafb .UseRefinementAggregation ;_bbfda .SdTemplate =_dafb .SdTemplate ;_bbfda .SdrTemplate =_dafb .SdrTemplate ;_bbfda .SdATX =_dafb .SdATX ;_bbfda .SdATY =_dafb .SdATY ;
_bbfda .SdrATX =_dafb .SdrATX ;_bbfda .SdrATY =_dafb .SdrATY ;_bbfda ._dfddg =_dafb ._dfddg ;};func (_dgfe *TableSegment )StreamReader ()_b .StreamReader {return _dgfe ._daaf };func (_agcad *SymbolDictionary )readRefinementAtPixels (_gfab int )error {_agcad .SdrATX =make ([]int8 ,_gfab );
_agcad .SdrATY =make ([]int8 ,_gfab );var (_fefe byte ;_abea error ;);for _agdde :=0;_agdde < _gfab ;_agdde ++{_fefe ,_abea =_agcad ._begg .ReadByte ();if _abea !=nil {return _abea ;};_agcad .SdrATX [_agdde ]=int8 (_fefe );_fefe ,_abea =_agcad ._begg .ReadByte ();
if _abea !=nil {return _abea ;};_agcad .SdrATY [_agdde ]=int8 (_fefe );};return nil ;};func (_cdca *Header )writeSegmentNumber (_gbfg _b .BinaryWriter )(_cbbd int ,_gaag error ){_gdab :=make ([]byte ,4);_e .BigEndian .PutUint32 (_gdab ,_cdca .SegmentNumber );
if _cbbd ,_gaag =_gbfg .Write (_gdab );_gaag !=nil {return 0,_cd .Wrap (_gaag ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _cbbd ,nil ;};func (_debb *TextRegion )decodeRdw ()(int64 ,error ){const _caca ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";
if _debb .IsHuffmanEncoded {if _debb .SbHuffRDWidth ==3{if _debb ._fccb ==nil {var (_feaef int ;_fbbd error ;);if _debb .SbHuffFS ==3{_feaef ++;};if _debb .SbHuffDS ==3{_feaef ++;};if _debb .SbHuffDT ==3{_feaef ++;};_debb ._fccb ,_fbbd =_debb .getUserTable (_feaef );
if _fbbd !=nil {return 0,_cd .Wrap (_fbbd ,_caca ,"");};};return _debb ._fccb .Decode (_debb ._daga );};_adeb ,_debc :=_ae .GetStandardTable (14+int (_debb .SbHuffRDWidth ));if _debc !=nil {return 0,_cd .Wrap (_debc ,_caca ,"");};return _adeb .Decode (_debb ._daga );
};_faede ,_deeb :=_debb ._dfaf .DecodeInt (_debb ._fadg );if _deeb !=nil {return 0,_cd .Wrap (_deeb ,_caca ,"");};return int64 (_faede ),nil ;};func (_dcab *Header )readHeaderFlags ()error {const _dgda ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_dcbc ,_gabc :=_dcab .Reader .ReadBit ();if _gabc !=nil {return _cd .Wrap (_gabc ,_dgda ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _dcbc !=0{_dcab .RetainFlag =true ;};_dcbc ,_gabc =_dcab .Reader .ReadBit ();if _gabc !=nil {return _cd .Wrap (_gabc ,_dgda ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _dcbc !=0{_dcab .PageAssociationFieldSize =true ;};_dbfe ,_gabc :=_dcab .Reader .ReadBits (6);if _gabc !=nil {return _cd .Wrap (_gabc ,_dgda ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_dcab .Type =Type (int (_dbfe ));
return nil ;};func (_gcf *GenericRegion )Init (h *Header ,r _b .StreamReader )error {_gcf .RegionSegment =NewRegionSegment (r );_gcf ._eaed =r ;return _gcf .parseHeader ();};func (_gca *GenericRegion )decodeTemplate3 (_feae ,_agf ,_beaf int ,_dfcg ,_gadd int )(_gbad error ){const _fde ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_gggf ,_cbcb int ;_adfg int ;_dca byte ;_gabd ,_dcb int ;);if _feae >=1{_dca ,_gbad =_gca .Bitmap .GetByte (_gadd );if _gbad !=nil {return _cd .Wrap (_gbad ,_fde ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_adfg =int (_dca );};_gggf =(_adfg >>1)&0x70;
for _dfg :=0;_dfg < _beaf ;_dfg =_gabd {var (_fgf byte ;_befa int ;);_gabd =_dfg +8;if _gfcd :=_agf -_dfg ;_gfcd > 8{_befa =8;}else {_befa =_gfcd ;};if _feae >=1{_adfg <<=8;if _gabd < _agf {_dca ,_gbad =_gca .Bitmap .GetByte (_gadd +1);if _gbad !=nil {return _cd .Wrap (_gbad ,_fde ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_adfg |=int (_dca );};};for _dfa :=0;_dfa < _befa ;_dfa ++{if _gca ._eab {_cbcb =_gca .overrideAtTemplate3 (_gggf ,_dfg +_dfa ,_feae ,int (_fgf ),_dfa );_gca ._ceg .SetIndex (int32 (_cbcb ));}else {_gca ._ceg .SetIndex (int32 (_gggf ));};_dcb ,_gbad =_gca ._fdb .DecodeBit (_gca ._ceg );
if _gbad !=nil {return _cd .Wrap (_gbad ,_fde ,"");};_fgf |=byte (_dcb )<<byte (7-_dfa );_gggf =((_gggf &0x1f7)<<1)|_dcb |((_adfg >>uint (8-_dfa ))&0x010);};if _efb :=_gca .Bitmap .SetByte (_dfcg ,_fgf );_efb !=nil {return _cd .Wrap (_efb ,_fde ,"");};
_dfcg ++;_gadd ++;};return nil ;};func (_fagb *PageInformationSegment )checkInput ()error {if _fagb .PageBMHeight ==_d .MaxInt32 {if !_fagb .IsStripe {_ad .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_adgb *TextRegion )GetRegionBitmap ()(*_dge .Bitmap ,error ){if _adgb .RegionBitmap !=nil {return _adgb .RegionBitmap ,nil ;};if !_adgb .IsHuffmanEncoded {if _efbac :=_adgb .setCodingStatistics ();_efbac !=nil {return nil ,_efbac ;
};};if _gddf :=_adgb .createRegionBitmap ();_gddf !=nil {return nil ,_gddf ;};if _gdbg :=_adgb .decodeSymbolInstances ();_gdbg !=nil {return nil ,_gdbg ;};return _adgb .RegionBitmap ,nil ;};func (_acea *Header )parse (_fbgb Documenter ,_eaca _b .StreamReader ,_aga int64 ,_dbcf OrganizationType )(_gebc error ){const _eabf ="\u0070\u0061\u0072s\u0065";
_ad .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _gebc !=nil {_ad .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gebc );
}else {_ad .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_gebc =_eaca .Seek (_aga ,_g .SeekStart );
if _gebc !=nil {return _cd .Wrap (_gebc ,_eabf ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _gebc =_acea .readSegmentNumber (_eaca );_gebc !=nil {return _cd .Wrap (_gebc ,_eabf ,"");};if _gebc =_acea .readHeaderFlags ();_gebc !=nil {return _cd .Wrap (_gebc ,_eabf ,"");
};var _aaf uint64 ;_aaf ,_gebc =_acea .readNumberOfReferredToSegments (_eaca );if _gebc !=nil {return _cd .Wrap (_gebc ,_eabf ,"");};_acea .RTSNumbers ,_gebc =_acea .readReferredToSegmentNumbers (_eaca ,int (_aaf ));if _gebc !=nil {return _cd .Wrap (_gebc ,_eabf ,"");
};_gebc =_acea .readSegmentPageAssociation (_fbgb ,_eaca ,_aaf ,_acea .RTSNumbers ...);if _gebc !=nil {return _cd .Wrap (_gebc ,_eabf ,"");};if _acea .Type !=TEndOfFile {if _gebc =_acea .readSegmentDataLength (_eaca );_gebc !=nil {return _cd .Wrap (_gebc ,_eabf ,"");
};};_acea .readDataStartOffset (_eaca ,_dbcf );_acea .readHeaderLength (_eaca ,_aga );_ad .Log .Trace ("\u0025\u0073",_acea );return nil ;};type GenericRefinementRegion struct{_dea templater ;_be templater ;_ed _b .StreamReader ;_gd *Header ;RegionInfo *RegionSegment ;
IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_dge .Bitmap ;ReferenceBitmap *_dge .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_ef *_fb .Decoder ;_fc *_fb .DecoderStats ;_adc bool ;_cbe []bool ;};func (_ba *GenericRefinementRegion )getGrReference ()(*_dge .Bitmap ,error ){segments :=_ba ._gd .RTSegments ;
if len (segments )==0{return nil ,_a .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_cdb ,_eg :=segments [0].GetSegmentData ();if _eg !=nil {return nil ,_eg ;
};_cbc ,_bga :=_cdb .(Regioner );if !_bga {return nil ,_dg .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_cdb );
};return _cbc .GetRegionBitmap ();};func (_eddga *TextRegion )decodeIb (_cabcg ,_gfgf int64 )(*_dge .Bitmap ,error ){const _ccgd ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_fcgba error ;_eefg *_dge .Bitmap ;);if _cabcg ==0{if int (_gfgf )> len (_eddga .Symbols )-1{return nil ,_cd .Error (_ccgd ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _eddga .Symbols [int (_gfgf )],nil ;};var _efdb ,_deaaf ,_dgad ,_feac int64 ;_efdb ,_fcgba =_eddga .decodeRdw ();if _fcgba !=nil {return nil ,_cd .Wrap (_fcgba ,_ccgd ,"");};_deaaf ,_fcgba =_eddga .decodeRdh ();if _fcgba !=nil {return nil ,_cd .Wrap (_fcgba ,_ccgd ,"");
};_dgad ,_fcgba =_eddga .decodeRdx ();if _fcgba !=nil {return nil ,_cd .Wrap (_fcgba ,_ccgd ,"");};_feac ,_fcgba =_eddga .decodeRdy ();if _fcgba !=nil {return nil ,_cd .Wrap (_fcgba ,_ccgd ,"");};if _eddga .IsHuffmanEncoded {if _ ,_fcgba =_eddga .decodeSymInRefSize ();
_fcgba !=nil {return nil ,_cd .Wrap (_fcgba ,_ccgd ,"");};_eddga ._daga .Align ();};_baeeb :=_eddga .Symbols [_gfgf ];_ffdg :=uint32 (_baeeb .Width );_dcaf :=uint32 (_baeeb .Height );_gdgff :=int32 (uint32 (_efdb )>>1)+int32 (_dgad );_fcd :=int32 (uint32 (_deaaf )>>1)+int32 (_feac );
if _eddga ._fdac ==nil {_eddga ._fdac =_deb (_eddga ._daga ,nil );};_eddga ._fdac .setParameters (_eddga ._aege ,_eddga ._dfaf ,_eddga .SbrTemplate ,_ffdg +uint32 (_efdb ),_dcaf +uint32 (_deaaf ),_baeeb ,_gdgff ,_fcd ,false ,_eddga .SbrATX ,_eddga .SbrATY );
_eefg ,_fcgba =_eddga ._fdac .GetRegionBitmap ();if _fcgba !=nil {return nil ,_cd .Wrap (_fcgba ,_ccgd ,"\u0067\u0072\u0066");};if _eddga .IsHuffmanEncoded {_eddga ._daga .Align ();};return _eefg ,nil ;};func (_gfga *HalftoneRegion )checkInput ()error {if _gfga .IsMMREncoded {if _gfga .HTemplate !=0{_ad .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_gfga .HTemplate );
};if _gfga .HSkipEnabled {_ad .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_gfga .HSkipEnabled );
};};return nil ;};func (_eaa *GenericRefinementRegion )decodeSLTP ()(int ,error ){_eaa .Template .setIndex (_eaa ._fc );return _eaa ._ef .DecodeBit (_eaa ._fc );};type template1 struct{};func (_ccad *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _ccad ._beac ==nil {var (_badd int ;
_dbgg error ;);if _ccad .SdHuffDecodeHeightSelection ==3{_badd ++;};if _ccad .SdHuffDecodeWidthSelection ==3{_badd ++;};_ccad ._beac ,_dbgg =_ccad .getUserTable (_badd );if _dbgg !=nil {return 0,_dbgg ;};};return _ccad ._beac .Decode (_ccad ._begg );};
func (_ddef *GenericRegion )decodeTemplate0b (_bda ,_abd ,_dgec int ,_gfc ,_aecg int )(_geb error ){const _dgd ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_eaabc ,_aad int ;_bdba ,_cdc int ;_gcd byte ;
_cfbg int ;);if _bda >=1{_gcd ,_geb =_ddef .Bitmap .GetByte (_aecg );if _geb !=nil {return _cd .Wrap (_geb ,_dgd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bdba =int (_gcd );};if _bda >=2{_gcd ,_geb =_ddef .Bitmap .GetByte (_aecg -_ddef .Bitmap .RowStride );
if _geb !=nil {return _cd .Wrap (_geb ,_dgd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_cdc =int (_gcd )<<6;};_eaabc =(_bdba &0xf0)|(_cdc &0x3800);for _eeff :=0;_eeff < _dgec ;_eeff =_cfbg {var (_eeac byte ;_egda int ;);_cfbg =_eeff +8;if _ccdg :=_abd -_eeff ;
_ccdg > 8{_egda =8;}else {_egda =_ccdg ;};if _bda > 0{_bdba <<=8;if _cfbg < _abd {_gcd ,_geb =_ddef .Bitmap .GetByte (_aecg +1);if _geb !=nil {return _cd .Wrap (_geb ,_dgd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_bdba |=int (_gcd );};};if _bda > 1{_cdc <<=8;
if _cfbg < _abd {_gcd ,_geb =_ddef .Bitmap .GetByte (_aecg -_ddef .Bitmap .RowStride +1);if _geb !=nil {return _cd .Wrap (_geb ,_dgd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_cdc |=int (_gcd )<<6;};};for _dfc :=0;_dfc < _egda ;_dfc ++{_acbe :=uint (7-_dfc );
if _ddef ._eab {_aad =_ddef .overrideAtTemplate0b (_eaabc ,_eeff +_dfc ,_bda ,int (_eeac ),_dfc ,int (_acbe ));_ddef ._ceg .SetIndex (int32 (_aad ));}else {_ddef ._ceg .SetIndex (int32 (_eaabc ));};var _agd int ;_agd ,_geb =_ddef ._fdb .DecodeBit (_ddef ._ceg );
if _geb !=nil {return _cd .Wrap (_geb ,_dgd ,"");};_eeac |=byte (_agd <<_acbe );_eaabc =((_eaabc &0x7bf7)<<1)|_agd |((_bdba >>_acbe )&0x10)|((_cdc >>_acbe )&0x800);};if _cde :=_ddef .Bitmap .SetByte (_gfc ,_eeac );_cde !=nil {return _cd .Wrap (_cde ,_dgd ,"");
};_gfc ++;_aecg ++;};return nil ;};func _bcfg (_gecg _b .StreamReader ,_gfaf *Header )*TextRegion {_becc :=&TextRegion {_daga :_gecg ,Header :_gfaf ,RegionInfo :NewRegionSegment (_gecg )};return _becc ;};func (_bebg *SymbolDictionary )encodeATFlags (_aebd _b .BinaryWriter )(_aaa int ,_fbefg error ){const _eadfc ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _bebg .IsHuffmanEncoded ||_bebg .SdTemplate !=0{return 0,nil ;};_fac :=4;if _bebg .SdTemplate !=0{_fac =1;};for _befca :=0;_befca < _fac ;_befca ++{if _fbefg =_aebd .WriteByte (byte (_bebg .SdATX [_befca ]));_fbefg !=nil {return _aaa ,_cd .Wrapf (_fbefg ,_eadfc ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_befca );
};_aaa ++;if _fbefg =_aebd .WriteByte (byte (_bebg .SdATY [_befca ]));_fbefg !=nil {return _aaa ,_cd .Wrapf (_fbefg ,_eadfc ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_befca );};_aaa ++;};return _aaa ,nil ;};func (_gbaf *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_aggd int ;
_bbca int32 ;_cfdb error ;_eefe =int32 (_gbaf ._fcaf +_gbaf .NumberOfNewSymbols );_efgd =make ([]int ,_eefe ););for _aeaec :=int32 (0);_aeaec < _eefe ;_aeaec +=_bbca {if _gbaf .IsHuffmanEncoded {_cffg ,_gfee :=_ae .GetStandardTable (1);if _gfee !=nil {return nil ,_gfee ;
};_fafd ,_gfee :=_cffg .Decode (_gbaf ._begg );if _gfee !=nil {return nil ,_gfee ;};_bbca =int32 (_fafd );}else {_bbca ,_cfdb =_gbaf ._cfag .DecodeInt (_gbaf ._dfdf );if _cfdb !=nil {return nil ,_cfdb ;};};if _bbca !=0{for _gdac :=_aeaec ;_gdac < _aeaec +_bbca ;
_gdac ++{_efgd [_gdac ]=_aggd ;};};if _aggd ==0{_aggd =1;}else {_aggd =0;};};return _efgd ,nil ;};func (_egdae *GenericRegion )writeGBAtPixels (_cdg _b .BinaryWriter )(_gcac int ,_fagc error ){const _aac ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _egdae .UseMMR {return 0,nil ;};_egcc :=1;if _egdae .GBTemplate ==0{_egcc =4;}else if _egdae .UseExtTemplates {_egcc =12;};if len (_egdae .GBAtX )!=_egcc {return 0,_cd .Errorf (_aac ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_egdae .GBAtY )!=_egcc {return 0,_cd .Errorf (_aac ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _egdd :=0;_egdd < _egcc ;_egdd ++{if _fagc =_cdg .WriteByte (byte (_egdae .GBAtX [_egdd ]));_fagc !=nil {return _gcac ,_cd .Wrap (_fagc ,_aac ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_gcac ++;if _fagc =_cdg .WriteByte (byte (_egdae .GBAtY [_egdd ]));
_fagc !=nil {return _gcac ,_cd .Wrap (_fagc ,_aac ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_gcac ++;};return _gcac ,nil ;};func (_gafg *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _gafg ._cbfd };
func (_fgdf *Header )readReferredToSegmentNumbers (_bccd _b .StreamReader ,_cbcd int )([]int ,error ){const _cgb ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_dcaba :=make ([]int ,_cbcd );if _cbcd > 0{_fgdf .RTSegments =make ([]*Header ,_cbcd );var (_agbd uint64 ;_agbf error ;);for _ggdc :=0;_ggdc < _cbcd ;_ggdc ++{_agbd ,_agbf =_bccd .ReadBits (byte (_fgdf .referenceSize ())<<3);if _agbf !=nil {return nil ,_cd .Wrapf (_agbf ,_cgb ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_ggdc );
};_dcaba [_ggdc ]=int (_agbd &_d .MaxInt32 );};};return _dcaba ,nil ;};var (_bdac Segmenter ;_egdg =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _bdac },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _bdac },TProfiles :func ()Segmenter {return _bdac },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _bdac },TBitmap :func ()Segmenter {return _bdac }};
);func (_cecd *SymbolDictionary )decodeThroughTextRegion (_ecfd ,_bcbb ,_eede uint32 )error {if _cecd ._egagd ==nil {_cecd ._egagd =_bcfg (_cecd ._begg ,nil );_cecd ._egagd .setContexts (_cecd ._dfddg ,_fb .NewStats (512,1),_fb .NewStats (512,1),_fb .NewStats (512,1),_fb .NewStats (512,1),_cecd ._gdgfd ,_fb .NewStats (512,1),_fb .NewStats (512,1),_fb .NewStats (512,1),_fb .NewStats (512,1));
};if _gdeeg :=_cecd .setSymbolsArray ();_gdeeg !=nil {return _gdeeg ;};_cecd ._egagd .setParameters (_cecd ._cfag ,_cecd .IsHuffmanEncoded ,true ,_ecfd ,_bcbb ,_eede ,1,_cecd ._fcaf +_cecd ._eged ,0,0,0,1,0,0,0,0,0,0,0,0,0,_cecd .SdrTemplate ,_cecd .SdrATX ,_cecd .SdrATY ,_cecd ._dfbec ,_cecd ._bgfbc );
return _cecd .addSymbol (_cecd ._egagd );};func (_fgge *HalftoneRegion )computeX (_decc ,_gdee int )int {return _fgge .shiftAndFill (int (_fgge .HGridX )+_decc *int (_fgge .HRegionY )+_gdee *int (_fgge .HRegionX ));};func (_fbefb *TextRegion )Encode (w _b .BinaryWriter )(_dabb int ,_bggd error ){const _aeaag ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _dabb ,_bggd =_fbefb .RegionInfo .Encode (w );_bggd !=nil {return _dabb ,_cd .Wrap (_bggd ,_aeaag ,"");};var _dged int ;if _dged ,_bggd =_fbefb .encodeFlags (w );_bggd !=nil {return _dabb ,_cd .Wrap (_bggd ,_aeaag ,"");};_dabb +=_dged ;if _dged ,_bggd =_fbefb .encodeSymbols (w );
_bggd !=nil {return _dabb ,_cd .Wrap (_bggd ,_aeaag ,"");};_dabb +=_dged ;return _dabb ,nil ;};func (_debf *TextRegion )encodeSymbols (_bbge _b .BinaryWriter )(_aadf int ,_cffcf error ){const _acfa ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_afab :=make ([]byte ,4);_e .BigEndian .PutUint32 (_afab ,_debf .NumberOfSymbols );if _aadf ,_cffcf =_bbge .Write (_afab );_cffcf !=nil {return _aadf ,_cd .Wrap (_cffcf ,_acfa ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_fgde ,_cffcf :=_dge .NewClassedPoints (_debf ._bdegd ,_debf ._cbcbe );if _cffcf !=nil {return 0,_cd .Wrap (_cffcf ,_acfa ,"");};var _dcdg ,_affad int ;_efffc :=_gg .New ();_efffc .Init ();if _cffcf =_efffc .EncodeInteger (_gg .IADT ,0);_cffcf !=nil {return _aadf ,_cd .Wrap (_cffcf ,_acfa ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_bfcc ,_cffcf :=_fgde .GroupByY ();if _cffcf !=nil {return 0,_cd .Wrap (_cffcf ,_acfa ,"");};for _ ,_fdff :=range _bfcc {_dgac :=int (_fdff .YAtIndex (0));_cbdg :=_dgac -_dcdg ;if _cffcf =_efffc .EncodeInteger (_gg .IADT ,_cbdg );_cffcf !=nil {return _aadf ,_cd .Wrap (_cffcf ,_acfa ,"");
};var _bfbec int ;for _eafe ,_bafb :=range _fdff .IntSlice {switch _eafe {case 0:_cecf :=int (_fdff .XAtIndex (_eafe ))-_affad ;if _cffcf =_efffc .EncodeInteger (_gg .IAFS ,_cecf );_cffcf !=nil {return _aadf ,_cd .Wrap (_cffcf ,_acfa ,"");};_affad +=_cecf ;
_bfbec =_affad ;default:_abceg :=int (_fdff .XAtIndex (_eafe ))-_bfbec ;if _cffcf =_efffc .EncodeInteger (_gg .IADS ,_abceg );_cffcf !=nil {return _aadf ,_cd .Wrap (_cffcf ,_acfa ,"");};_bfbec +=_abceg ;};_aegb ,_bdfa :=_debf ._bcdf .Get (_bafb );if _bdfa !=nil {return _aadf ,_cd .Wrap (_bdfa ,_acfa ,"");
};_eaac ,_eaeg :=_debf ._gfcda [_aegb ];if !_eaeg {_eaac ,_eaeg =_debf ._daeb [_aegb ];if !_eaeg {return _aadf ,_cd .Errorf (_acfa ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_aegb );
};};if _bdfa =_efffc .EncodeIAID (_debf ._dcadf ,_eaac );_bdfa !=nil {return _aadf ,_cd .Wrap (_bdfa ,_acfa ,"");};};if _cffcf =_efffc .EncodeOOB (_gg .IADS );_cffcf !=nil {return _aadf ,_cd .Wrap (_cffcf ,_acfa ,"");};};_efffc .Final ();_eaaa ,_cffcf :=_efffc .WriteTo (_bbge );
if _cffcf !=nil {return _aadf ,_cd .Wrap (_cffcf ,_acfa ,"");};_aadf +=int (_eaaa );return _aadf ,nil ;};func (_bdcd *TextRegion )Init (header *Header ,r _b .StreamReader )error {_bdcd .Header =header ;_bdcd ._daga =r ;_bdcd .RegionInfo =NewRegionSegment (_bdcd ._daga );
return _bdcd .parseHeader ();};func (_eacb *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _eeaee ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _eacb .SbHuffRSize ==0{_eeafb ,_ffgca :=_ae .GetStandardTable (1);
if _ffgca !=nil {return 0,_cd .Wrap (_ffgca ,_eeaee ,"");};return _eeafb .Decode (_eacb ._daga );};if _eacb ._ccbdc ==nil {var (_dgbd int ;_caae error ;);if _eacb .SbHuffFS ==3{_dgbd ++;};if _eacb .SbHuffDS ==3{_dgbd ++;};if _eacb .SbHuffDT ==3{_dgbd ++;
};if _eacb .SbHuffRDWidth ==3{_dgbd ++;};if _eacb .SbHuffRDHeight ==3{_dgbd ++;};if _eacb .SbHuffRDX ==3{_dgbd ++;};if _eacb .SbHuffRDY ==3{_dgbd ++;};_eacb ._ccbdc ,_caae =_eacb .getUserTable (_dgbd );if _caae !=nil {return 0,_cd .Wrap (_caae ,_eeaee ,"");
};};_cdbge ,_ggad :=_eacb ._ccbdc .Decode (_eacb ._daga );if _ggad !=nil {return 0,_cd .Wrap (_ggad ,_eeaee ,"");};return _cdbge ,nil ;};func (_ca *EndOfStripe )LineNumber ()int {return _ca ._fa };func (_cgad *TextRegion )decodeDT ()(_aegd int64 ,_bcee error ){if _cgad .IsHuffmanEncoded {if _cgad .SbHuffDT ==3{_aegd ,_bcee =_cgad ._cdce .Decode (_cgad ._daga );
if _bcee !=nil {return 0,_bcee ;};}else {var _addg _ae .Tabler ;_addg ,_bcee =_ae .GetStandardTable (11+int (_cgad .SbHuffDT ));if _bcee !=nil {return 0,_bcee ;};_aegd ,_bcee =_addg .Decode (_cgad ._daga );if _bcee !=nil {return 0,_bcee ;};};}else {var _cbga int32 ;
_cbga ,_bcee =_cgad ._dfaf .DecodeInt (_cgad ._badf );if _bcee !=nil {return ;};_aegd =int64 (_cbga );};_aegd *=int64 (_cgad .SbStrips );return _aegd ,nil ;};func (_egbg *SymbolDictionary )decodeDirectlyThroughGenericRegion (_baage ,_eaefd uint32 )error {if _egbg ._fecg ==nil {_egbg ._fecg =NewGenericRegion (_egbg ._begg );
};_egbg ._fecg .setParametersWithAt (false ,byte (_egbg .SdTemplate ),false ,false ,_egbg .SdATX ,_egbg .SdATY ,_baage ,_eaefd ,_egbg ._dfddg ,_egbg ._cfag );return _egbg .addSymbol (_egbg ._fecg );};func (_efe *GenericRegion )setParametersMMR (_cdeg bool ,_afg ,_edbb int64 ,_adff ,_gcbd uint32 ,_bdg byte ,_afac ,_efed bool ,_cfe ,_abfa []int8 ){_efe .DataOffset =_afg ;
_efe .DataLength =_edbb ;_efe .RegionSegment =&RegionSegment {};_efe .RegionSegment .BitmapHeight =_adff ;_efe .RegionSegment .BitmapWidth =_gcbd ;_efe .GBTemplate =_bdg ;_efe .IsMMREncoded =_cdeg ;_efe .IsTPGDon =_afac ;_efe .GBAtX =_cfe ;_efe .GBAtY =_abfa ;
};func (_cge *PageInformationSegment )CombinationOperator ()_dge .CombinationOperator {return _cge ._dgef };func (_age *HalftoneRegion )grayScaleDecoding (_bdge int )([][]int ,error ){var (_dgaf []int8 ;_cgdb []int8 ;);if !_age .IsMMREncoded {_dgaf =make ([]int8 ,4);
_cgdb =make ([]int8 ,4);if _age .HTemplate <=1{_dgaf [0]=3;}else if _age .HTemplate >=2{_dgaf [0]=2;};_cgdb [0]=-1;_dgaf [1]=-3;_cgdb [1]=-1;_dgaf [2]=2;_cgdb [2]=-2;_dgaf [3]=-2;_cgdb [3]=-2;};_egfe :=make ([]*_dge .Bitmap ,_bdge );_bcbgd :=NewGenericRegion (_age ._fdg );
_bcbgd .setParametersMMR (_age .IsMMREncoded ,_age .DataOffset ,_age .DataLength ,_age .HGridHeight ,_age .HGridWidth ,_age .HTemplate ,false ,_age .HSkipEnabled ,_dgaf ,_cgdb );_fcbd :=_bdge -1;var _agbe error ;_egfe [_fcbd ],_agbe =_bcbgd .GetRegionBitmap ();
if _agbe !=nil {return nil ,_agbe ;};for _fcbd > 0{_fcbd --;_bcbgd .Bitmap =nil ;_egfe [_fcbd ],_agbe =_bcbgd .GetRegionBitmap ();if _agbe !=nil {return nil ,_agbe ;};if _agbe =_age .combineGrayscalePlanes (_egfe ,_fcbd );_agbe !=nil {return nil ,_agbe ;
};};return _age .computeGrayScalePlanes (_egfe ,_bdge );};func (_fcaed *PatternDictionary )parseHeader ()error {_ad .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_ad .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_efda :=_fcaed ._dgg .ReadBits (5);if _efda !=nil {return _efda ;};if _efda =_fcaed .readTemplate ();_efda !=nil {return _efda ;};if _efda =_fcaed .readIsMMREncoded ();_efda !=nil {return _efda ;};if _efda =_fcaed .readPatternWidthAndHeight ();_efda !=nil {return _efda ;
};if _efda =_fcaed .readGrayMax ();_efda !=nil {return _efda ;};if _efda =_fcaed .computeSegmentDataStructure ();_efda !=nil {return _efda ;};return _fcaed .checkInput ();};func (_ddd Type )String ()string {switch _ddd {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_adbe *TextRegion )setContexts (_edgbe *_fb .DecoderStats ,_beff *_fb .DecoderStats ,_abefg *_fb .DecoderStats ,_caaac *_fb .DecoderStats ,_dcac *_fb .DecoderStats ,_aaea *_fb .DecoderStats ,_gfba *_fb .DecoderStats ,_gcfad *_fb .DecoderStats ,_gbgd *_fb .DecoderStats ,_befdc *_fb .DecoderStats ){_adbe ._badf =_beff ;
_adbe ._dad =_abefg ;_adbe ._ffdf =_caaac ;_adbe ._gcdfe =_dcac ;_adbe ._fadg =_gfba ;_adbe ._dfbf =_gcfad ;_adbe ._cbee =_aaea ;_adbe ._fbgae =_gbgd ;_adbe ._cbffg =_befdc ;_adbe ._aege =_edgbe ;};func (_gfaa *Header )referenceSize ()uint {switch {case _gfaa .SegmentNumber <=255:return 1;
case _gfaa .SegmentNumber <=65535:return 2;default:return 4;};};func (_eaba *TableSegment )HtPS ()int32 {return _eaba ._fccf };func (_dccc *GenericRegion )setParameters (_cggd bool ,_acc ,_bgfg int64 ,_adbd ,_add uint32 ){_dccc .IsMMREncoded =_cggd ;_dccc .DataOffset =_acc ;
_dccc .DataLength =_bgfg ;_dccc .RegionSegment .BitmapHeight =_adbd ;_dccc .RegionSegment .BitmapWidth =_add ;_dccc ._ccdf =nil ;_dccc .Bitmap =nil ;};func (_gec *GenericRefinementRegion )decodeTypicalPredictedLine (_aa ,_bcc ,_cc ,_aec ,_egd ,_bd int )error {_beb :=_aa -int (_gec .ReferenceDY );
_gf :=_gec .ReferenceBitmap .GetByteIndex (0,_beb );_fbg :=_gec .RegionBitmap .GetByteIndex (0,_aa );var _ce error ;switch _gec .TemplateID {case 0:_ce =_gec .decodeTypicalPredictedLineTemplate0 (_aa ,_bcc ,_cc ,_aec ,_egd ,_bd ,_fbg ,_beb ,_gf );case 1:_ce =_gec .decodeTypicalPredictedLineTemplate1 (_aa ,_bcc ,_cc ,_aec ,_egd ,_bd ,_fbg ,_beb ,_gf );
};return _ce ;};func (_fcfdd *PageInformationSegment )readContainsRefinement ()error {_aecc ,_ffbb :=_fcfdd ._deec .ReadBit ();if _ffbb !=nil {return _ffbb ;};if _aecc ==1{_fcfdd ._cfeae =true ;};return nil ;};func (_dfdd *PatternDictionary )extractPatterns (_bced *_dge .Bitmap )error {var _affa int ;
_cacc :=make ([]*_dge .Bitmap ,_dfdd .GrayMax +1);for _affa <=int (_dfdd .GrayMax ){_dcd :=int (_dfdd .HdpWidth )*_affa ;_eefc :=_f .Rect (_dcd ,0,_dcd +int (_dfdd .HdpWidth ),int (_dfdd .HdpHeight ));_efee ,_fba :=_dge .Extract (_eefc ,_bced );if _fba !=nil {return _fba ;
};_cacc [_affa ]=_efee ;_affa ++;};_dfdd .Patterns =_cacc ;return nil ;};func (_fegd *GenericRegion )overrideAtTemplate0b (_acbeb ,_ccdc ,_abce ,_bcf ,_cacf ,_fefg int )int {if _fegd .GBAtOverride [0]{_acbeb &=0xFFFD;if _fegd .GBAtY [0]==0&&_fegd .GBAtX [0]>=-int8 (_cacf ){_acbeb |=(_bcf >>uint (int8 (_fefg )-_fegd .GBAtX [0]&0x1))<<1;
}else {_acbeb |=int (_fegd .getPixel (_ccdc +int (_fegd .GBAtX [0]),_abce +int (_fegd .GBAtY [0])))<<1;};};if _fegd .GBAtOverride [1]{_acbeb &=0xDFFF;if _fegd .GBAtY [1]==0&&_fegd .GBAtX [1]>=-int8 (_cacf ){_acbeb |=(_bcf >>uint (int8 (_fefg )-_fegd .GBAtX [1]&0x1))<<13;
}else {_acbeb |=int (_fegd .getPixel (_ccdc +int (_fegd .GBAtX [1]),_abce +int (_fegd .GBAtY [1])))<<13;};};if _fegd .GBAtOverride [2]{_acbeb &=0xFDFF;if _fegd .GBAtY [2]==0&&_fegd .GBAtX [2]>=-int8 (_cacf ){_acbeb |=(_bcf >>uint (int8 (_fefg )-_fegd .GBAtX [2]&0x1))<<9;
}else {_acbeb |=int (_fegd .getPixel (_ccdc +int (_fegd .GBAtX [2]),_abce +int (_fegd .GBAtY [2])))<<9;};};if _fegd .GBAtOverride [3]{_acbeb &=0xBFFF;if _fegd .GBAtY [3]==0&&_fegd .GBAtX [3]>=-int8 (_cacf ){_acbeb |=(_bcf >>uint (int8 (_fefg )-_fegd .GBAtX [3]&0x1))<<14;
}else {_acbeb |=int (_fegd .getPixel (_ccdc +int (_fegd .GBAtX [3]),_abce +int (_fegd .GBAtY [3])))<<14;};};if _fegd .GBAtOverride [4]{_acbeb &=0xEFFF;if _fegd .GBAtY [4]==0&&_fegd .GBAtX [4]>=-int8 (_cacf ){_acbeb |=(_bcf >>uint (int8 (_fefg )-_fegd .GBAtX [4]&0x1))<<12;
}else {_acbeb |=int (_fegd .getPixel (_ccdc +int (_fegd .GBAtX [4]),_abce +int (_fegd .GBAtY [4])))<<12;};};if _fegd .GBAtOverride [5]{_acbeb &=0xFFDF;if _fegd .GBAtY [5]==0&&_fegd .GBAtX [5]>=-int8 (_cacf ){_acbeb |=(_bcf >>uint (int8 (_fefg )-_fegd .GBAtX [5]&0x1))<<5;
}else {_acbeb |=int (_fegd .getPixel (_ccdc +int (_fegd .GBAtX [5]),_abce +int (_fegd .GBAtY [5])))<<5;};};if _fegd .GBAtOverride [6]{_acbeb &=0xFFFB;if _fegd .GBAtY [6]==0&&_fegd .GBAtX [6]>=-int8 (_cacf ){_acbeb |=(_bcf >>uint (int8 (_fefg )-_fegd .GBAtX [6]&0x1))<<2;
}else {_acbeb |=int (_fegd .getPixel (_ccdc +int (_fegd .GBAtX [6]),_abce +int (_fegd .GBAtY [6])))<<2;};};if _fegd .GBAtOverride [7]{_acbeb &=0xFFF7;if _fegd .GBAtY [7]==0&&_fegd .GBAtX [7]>=-int8 (_cacf ){_acbeb |=(_bcf >>uint (int8 (_fefg )-_fegd .GBAtX [7]&0x1))<<3;
}else {_acbeb |=int (_fegd .getPixel (_ccdc +int (_fegd .GBAtX [7]),_abce +int (_fegd .GBAtY [7])))<<3;};};if _fegd .GBAtOverride [8]{_acbeb &=0xF7FF;if _fegd .GBAtY [8]==0&&_fegd .GBAtX [8]>=-int8 (_cacf ){_acbeb |=(_bcf >>uint (int8 (_fefg )-_fegd .GBAtX [8]&0x1))<<11;
}else {_acbeb |=int (_fegd .getPixel (_ccdc +int (_fegd .GBAtX [8]),_abce +int (_fegd .GBAtY [8])))<<11;};};if _fegd .GBAtOverride [9]{_acbeb &=0xFFEF;if _fegd .GBAtY [9]==0&&_fegd .GBAtX [9]>=-int8 (_cacf ){_acbeb |=(_bcf >>uint (int8 (_fefg )-_fegd .GBAtX [9]&0x1))<<4;
}else {_acbeb |=int (_fegd .getPixel (_ccdc +int (_fegd .GBAtX [9]),_abce +int (_fegd .GBAtY [9])))<<4;};};if _fegd .GBAtOverride [10]{_acbeb &=0x7FFF;if _fegd .GBAtY [10]==0&&_fegd .GBAtX [10]>=-int8 (_cacf ){_acbeb |=(_bcf >>uint (int8 (_fefg )-_fegd .GBAtX [10]&0x1))<<15;
}else {_acbeb |=int (_fegd .getPixel (_ccdc +int (_fegd .GBAtX [10]),_abce +int (_fegd .GBAtY [10])))<<15;};};if _fegd .GBAtOverride [11]{_acbeb &=0xFDFF;if _fegd .GBAtY [11]==0&&_fegd .GBAtX [11]>=-int8 (_cacf ){_acbeb |=(_bcf >>uint (int8 (_fefg )-_fegd .GBAtX [11]&0x1))<<10;
}else {_acbeb |=int (_fegd .getPixel (_ccdc +int (_fegd .GBAtX [11]),_abce +int (_fegd .GBAtY [11])))<<10;};};return _acbeb ;};func (_dfed *TableSegment )HtRS ()int32 {return _dfed ._dbcfc };func (_dgde *SymbolDictionary )setCodingStatistics ()error {if _dgde ._aab ==nil {_dgde ._aab =_fb .NewStats (512,1);
};if _dgde ._dbbf ==nil {_dgde ._dbbf =_fb .NewStats (512,1);};if _dgde ._cdec ==nil {_dgde ._cdec =_fb .NewStats (512,1);};if _dgde ._aadb ==nil {_dgde ._aadb =_fb .NewStats (512,1);};if _dgde ._dfdf ==nil {_dgde ._dfdf =_fb .NewStats (512,1);};if _dgde .UseRefinementAggregation &&_dgde ._gdgfd ==nil {_dgde ._gdgfd =_fb .NewStats (1<<uint (_dgde ._bgfbc ),1);
_dgde ._fcbc =_fb .NewStats (512,1);_dgde ._fbc =_fb .NewStats (512,1);};if _dgde ._dfddg ==nil {_dgde ._dfddg =_fb .NewStats (65536,1);};if _dgde ._cfag ==nil {var _cgbbg error ;_dgde ._cfag ,_cgbbg =_fb .New (_dgde ._begg );if _cgbbg !=nil {return _cgbbg ;
};};return nil ;};func (_bb *GenericRefinementRegion )Init (header *Header ,r _b .StreamReader )error {_bb ._gd =header ;_bb ._ed =r ;_bb .RegionInfo =NewRegionSegment (r );return _bb .parseHeader ();};func (_cage *GenericRegion )Encode (w _b .BinaryWriter )(_ff int ,_aece error ){const _bef ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _cage .Bitmap ==nil {return 0,_cd .Error (_bef ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_cgg ,_aece :=_cage .RegionSegment .Encode (w );if _aece !=nil {return 0,_cd .Wrap (_aece ,_bef ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_ff +=_cgg ;if _aece =w .SkipBits (4);_aece !=nil {return _ff ,_cd .Wrap (_aece ,_bef ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _gfg int ;if _cage .IsTPGDon {_gfg =1;};if _aece =w .WriteBit (_gfg );
_aece !=nil {return _ff ,_cd .Wrap (_aece ,_bef ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_gfg =0;if _aece =w .WriteBit (int (_cage .GBTemplate >>1)&0x01);_aece !=nil {return _ff ,_cd .Wrap (_aece ,_bef ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _aece =w .WriteBit (int (_cage .GBTemplate )&0x01);_aece !=nil {return _ff ,_cd .Wrap (_aece ,_bef ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _cage .UseMMR {_gfg =1;};if _aece =w .WriteBit (_gfg );
_aece !=nil {return _ff ,_cd .Wrap (_aece ,_bef ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_ff ++;if _cgg ,_aece =_cage .writeGBAtPixels (w );_aece !=nil {return _ff ,_cd .Wrap (_aece ,_bef ,"");};_ff +=_cgg ;_cae :=_gg .New ();
if _aece =_cae .EncodeBitmap (_cage .Bitmap ,_cage .IsTPGDon );_aece !=nil {return _ff ,_cd .Wrap (_aece ,_bef ,"");};_cae .Final ();var _gdce int64 ;if _gdce ,_aece =_cae .WriteTo (w );_aece !=nil {return _ff ,_cd .Wrap (_aece ,_bef ,"");};_ff +=int (_gdce );
return _ff ,nil ;};func (_bec *template1 )setIndex (_bgb *_fb .DecoderStats ){_bgb .SetIndex (0x080)};func (_fd *EndOfStripe )Init (h *Header ,r _b .StreamReader )error {_fd ._fe =r ;return _fd .parseHeader (h ,r );};func (_fgee *SymbolDictionary )Encode (w _b .BinaryWriter )(_defba int ,_ccced error ){const _fbeff ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _fgee ==nil {return 0,_cd .Error (_fbeff ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _defba ,_ccced =_fgee .encodeFlags (w );
_ccced !=nil {return _defba ,_cd .Wrap (_ccced ,_fbeff ,"");};_ccdcb ,_ccced :=_fgee .encodeATFlags (w );if _ccced !=nil {return _defba ,_cd .Wrap (_ccced ,_fbeff ,"");};_defba +=_ccdcb ;if _ccdcb ,_ccced =_fgee .encodeRefinementATFlags (w );_ccced !=nil {return _defba ,_cd .Wrap (_ccced ,_fbeff ,"");
};_defba +=_ccdcb ;if _ccdcb ,_ccced =_fgee .encodeNumSyms (w );_ccced !=nil {return _defba ,_cd .Wrap (_ccced ,_fbeff ,"");};_defba +=_ccdcb ;if _ccdcb ,_ccced =_fgee .encodeSymbols (w );_ccced !=nil {return _defba ,_cd .Wrap (_ccced ,_fbeff ,"");};_defba +=_ccdcb ;
return _defba ,nil ;};func (_bcab *HalftoneRegion )shiftAndFill (_cab int )int {_cab >>=8;if _cab < 0{_cfeg :=int (_d .Log (float64 (_cegd (_cab )))/_d .Log (2));_eded :=31-_cfeg ;for _dbc :=1;_dbc < _eded ;_dbc ++{_cab |=1<<uint (31-_dbc );};};return _cab ;
};func (_ceaef *SymbolDictionary )addSymbol (_dfge Regioner )error {_fbcf ,_afbb :=_dfge .GetRegionBitmap ();if _afbb !=nil {return _afbb ;};_ceaef ._fcbe [_ceaef ._eged ]=_fbcf ;_ceaef ._dfbec =append (_ceaef ._dfbec ,_fbcf );_ad .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_fbcf );
return nil ;};func (_cced *GenericRefinementRegion )getPixel (_fbgac *_dge .Bitmap ,_gecd ,_ccf int )int {if _gecd < 0||_gecd >=_fbgac .Width {return 0;};if _ccf < 0||_ccf >=_fbgac .Height {return 0;};if _fbgac .GetPixel (_gecd ,_ccf ){return 1;};return 0;
};func (_eadf *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _eadf .RegionSegment };type OrganizationType uint8 ;func (_eddd *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_dge .Points ,symbols *_dge .Bitmaps ,classIDs *_cff .IntSlice ,boxes *_dge .Boxes ,width ,height ,symBits int ){_eddd .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_eddd ._gfcda =globalSymbolsMap ;_eddd ._daeb =localSymbolsMap ;_eddd ._cbcbe =comps ;_eddd ._bdegd =inLL ;_eddd ._eefa =symbols ;_eddd ._bcdf =classIDs ;_eddd ._fefbc =boxes ;_eddd ._dcadf =symBits ;};func NewGenericRegion (r _b .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_eaed :r };
};func (_egec *HalftoneRegion )Init (hd *Header ,r _b .StreamReader )error {_egec ._fdg =r ;_egec ._gag =hd ;_egec .RegionSegment =NewRegionSegment (r );return _egec .parseHeader ();};func (_bgab *GenericRegion )decodeTemplate0a (_ffe ,_baeb ,_gad int ,_cace ,_fbge int )(_eadd error ){const _cfb ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_adb ,_bcd int ;_cddb ,_gdf int ;_bggg byte ;_baaa int ;);if _ffe >=1{_bggg ,_eadd =_bgab .Bitmap .GetByte (_fbge );if _eadd !=nil {return _cd .Wrap (_eadd ,_cfb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_cddb =int (_bggg );};if _ffe >=2{_bggg ,_eadd =_bgab .Bitmap .GetByte (_fbge -_bgab .Bitmap .RowStride );
if _eadd !=nil {return _cd .Wrap (_eadd ,_cfb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_gdf =int (_bggg )<<6;};_adb =(_cddb &0xf0)|(_gdf &0x3800);for _eaef :=0;_eaef < _gad ;_eaef =_baaa {var (_cbb byte ;_bcb int ;);_baaa =_eaef +8;if _dgf :=_baeb -_eaef ;
_dgf > 8{_bcb =8;}else {_bcb =_dgf ;};if _ffe > 0{_cddb <<=8;if _baaa < _baeb {_bggg ,_eadd =_bgab .Bitmap .GetByte (_fbge +1);if _eadd !=nil {return _cd .Wrap (_eadd ,_cfb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_cddb |=int (_bggg );};};
if _ffe > 1{_ege :=_fbge -_bgab .Bitmap .RowStride +1;_gdf <<=8;if _baaa < _baeb {_bggg ,_eadd =_bgab .Bitmap .GetByte (_ege );if _eadd !=nil {return _cd .Wrap (_eadd ,_cfb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_gdf |=int (_bggg )<<6;}else {_gdf |=0;
};};for _dccb :=0;_dccb < _bcb ;_dccb ++{_ggd :=uint (7-_dccb );if _bgab ._eab {_bcd =_bgab .overrideAtTemplate0a (_adb ,_eaef +_dccb ,_ffe ,int (_cbb ),_dccb ,int (_ggd ));_bgab ._ceg .SetIndex (int32 (_bcd ));}else {_bgab ._ceg .SetIndex (int32 (_adb ));
};var _deag int ;_deag ,_eadd =_bgab ._fdb .DecodeBit (_bgab ._ceg );if _eadd !=nil {return _cd .Wrap (_eadd ,_cfb ,"");};_cbb |=byte (_deag )<<_ggd ;_adb =((_adb &0x7bf7)<<1)|_deag |((_cddb >>_ggd )&0x10)|((_gdf >>_ggd )&0x800);};if _ebcc :=_bgab .Bitmap .SetByte (_cace ,_cbb );
_ebcc !=nil {return _cd .Wrap (_ebcc ,_cfb ,"");};_cace ++;_fbge ++;};return nil ;};func (_aceg *RegionSegment )String ()string {_fgdd :=&_ea .Builder {};_fgdd .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");
_fgdd .WriteString (_dg .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_aceg .BitmapWidth ,_aceg .BitmapHeight ));
_fgdd .WriteString (_dg .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_aceg .XLocation ,_aceg .YLocation ));_fgdd .WriteString (_dg .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_aceg .CombinaionOperator ));
return _fgdd .String ();};func (_fbgf *RegionSegment )parseHeader ()error {const _afca ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ad .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_ad .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_ccdb ,_agfc :=_fbgf ._fggg .ReadBits (32);
if _agfc !=nil {return _cd .Wrap (_agfc ,_afca ,"\u0077\u0069\u0064t\u0068");};_fbgf .BitmapWidth =uint32 (_ccdb &_d .MaxUint32 );_ccdb ,_agfc =_fbgf ._fggg .ReadBits (32);if _agfc !=nil {return _cd .Wrap (_agfc ,_afca ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_fbgf .BitmapHeight =uint32 (_ccdb &_d .MaxUint32 );_ccdb ,_agfc =_fbgf ._fggg .ReadBits (32);if _agfc !=nil {return _cd .Wrap (_agfc ,_afca ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_fbgf .XLocation =uint32 (_ccdb &_d .MaxUint32 );
_ccdb ,_agfc =_fbgf ._fggg .ReadBits (32);if _agfc !=nil {return _cd .Wrap (_agfc ,_afca ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_fbgf .YLocation =uint32 (_ccdb &_d .MaxUint32 );if _ ,_agfc =_fbgf ._fggg .ReadBits (5);_agfc !=nil {return _cd .Wrap (_agfc ,_afca ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _agfc =_fbgf .readCombinationOperator ();_agfc !=nil {return _cd .Wrap (_agfc ,_afca ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};type Segmenter interface{Init (_ceac *Header ,_bfff _b .StreamReader )error ;
};func (_aagg *RegionSegment )Encode (w _b .BinaryWriter )(_bbe int ,_bed error ){const _cfaf ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_bdcg :=make ([]byte ,4);_e .BigEndian .PutUint32 (_bdcg ,_aagg .BitmapWidth );
_bbe ,_bed =w .Write (_bdcg );if _bed !=nil {return 0,_cd .Wrap (_bed ,_cfaf ,"\u0057\u0069\u0064t\u0068");};_e .BigEndian .PutUint32 (_bdcg ,_aagg .BitmapHeight );var _daed int ;_daed ,_bed =w .Write (_bdcg );if _bed !=nil {return 0,_cd .Wrap (_bed ,_cfaf ,"\u0048\u0065\u0069\u0067\u0068\u0074");
};_bbe +=_daed ;_e .BigEndian .PutUint32 (_bdcg ,_aagg .XLocation );_daed ,_bed =w .Write (_bdcg );if _bed !=nil {return 0,_cd .Wrap (_bed ,_cfaf ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_bbe +=_daed ;_e .BigEndian .PutUint32 (_bdcg ,_aagg .YLocation );
_daed ,_bed =w .Write (_bdcg );if _bed !=nil {return 0,_cd .Wrap (_bed ,_cfaf ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_bbe +=_daed ;if _bed =w .WriteByte (byte (_aagg .CombinaionOperator )&0x07);_bed !=nil {return 0,_cd .Wrap (_bed ,_cfaf ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");
};_bbe ++;return _bbe ,nil ;};func _deb (_bdea _b .StreamReader ,_bff *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_ed :_bdea ,RegionInfo :NewRegionSegment (_bdea ),_gd :_bff ,_dea :&template0 {},_be :&template1 {}};};func (_dccbf *TextRegion )parseHeader ()error {var _cbed error ;
_ad .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _cbed !=nil {_ad .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_cbed );
}else {_ad .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _cbed =_dccbf .RegionInfo .parseHeader ();
_cbed !=nil {return _cbed ;};if _cbed =_dccbf .readRegionFlags ();_cbed !=nil {return _cbed ;};if _dccbf .IsHuffmanEncoded {if _cbed =_dccbf .readHuffmanFlags ();_cbed !=nil {return _cbed ;};};if _cbed =_dccbf .readUseRefinement ();_cbed !=nil {return _cbed ;
};if _cbed =_dccbf .readAmountOfSymbolInstances ();_cbed !=nil {return _cbed ;};if _cbed =_dccbf .getSymbols ();_cbed !=nil {return _cbed ;};if _cbed =_dccbf .computeSymbolCodeLength ();_cbed !=nil {return _cbed ;};if _cbed =_dccbf .checkInput ();_cbed !=nil {return _cbed ;
};_ad .Log .Trace ("\u0025\u0073",_dccbf .String ());return nil ;};func (_edga *PageInformationSegment )Init (h *Header ,r _b .StreamReader )(_eega error ){_edga ._deec =r ;if _eega =_edga .parseHeader ();_eega !=nil {return _cd .Wrap (_eega ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_gdff *SymbolDictionary )InitEncode (symbols *_dge .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _cfbc ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_gdff .SdATX =[]int8 {3,-3,2,-2};_gdff .SdATY =[]int8 {-1,-1,-2,-2};_gdff ._fgbd =symbols ;_gdff ._edeg =make ([]int ,len (symbolList ));copy (_gdff ._edeg ,symbolList );if len (_gdff ._edeg )!=_gdff ._fgbd .Size (){return _cd .Error (_cfbc ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_gdff .NumberOfNewSymbols =uint32 (symbols .Size ());_gdff .NumberOfExportedSymbols =uint32 (symbols .Size ());_gdff ._dedd =symbolMap ;_gdff ._gfeg =unborderSymbols ;return nil ;};func (_bdaf *PageInformationSegment )String ()string {_dgfg :=&_ea .Builder {};
_dgfg .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_dgfg .WriteString (_dg .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_bdaf .PageBMHeight ));
_dgfg .WriteString (_dg .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_bdaf .PageBMWidth ));_dgfg .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_bdaf .ResolutionX ));
_dgfg .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_bdaf .ResolutionY ));_dgfg .WriteString (_dg .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_bdaf ._dgef ));
_dgfg .WriteString (_dg .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_bdaf ._cbfd ));_dgfg .WriteString (_dg .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_bdaf .IsLossless ));
_dgfg .WriteString (_dg .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_bdaf ._agae ));_dgfg .WriteString (_dg .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_bdaf ._cfeae ));
_dgfg .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_bdaf .IsStripe ));_dgfg .WriteString (_dg .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_bdaf .MaxStripeSize ));
return _dgfg .String ();};func (_dagb *GenericRegion )decodeTemplate1 (_dfd ,_dfb ,_fcae int ,_aadd ,_feg int )(_fdbc error ){const _def ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_ffg ,_gcb int ;_baf ,_dgdg int ;
_cbcf byte ;_fbef ,_dccd int ;);if _dfd >=1{_cbcf ,_fdbc =_dagb .Bitmap .GetByte (_feg );if _fdbc !=nil {return _cd .Wrap (_fdbc ,_def ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_baf =int (_cbcf );};if _dfd >=2{_cbcf ,_fdbc =_dagb .Bitmap .GetByte (_feg -_dagb .Bitmap .RowStride );
if _fdbc !=nil {return _cd .Wrap (_fdbc ,_def ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_dgdg =int (_cbcf )<<5;};_ffg =((_baf >>1)&0x1f8)|((_dgdg >>1)&0x1e00);for _ggdb :=0;_ggdb < _fcae ;_ggdb =_fbef {var (_ebcb byte ;_aefd int ;);_fbef =_ggdb +8;
if _afa :=_dfb -_ggdb ;_afa > 8{_aefd =8;}else {_aefd =_afa ;};if _dfd > 0{_baf <<=8;if _fbef < _dfb {_cbcf ,_fdbc =_dagb .Bitmap .GetByte (_feg +1);if _fdbc !=nil {return _cd .Wrap (_fdbc ,_def ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_baf |=int (_cbcf );
};};if _dfd > 1{_dgdg <<=8;if _fbef < _dfb {_cbcf ,_fdbc =_dagb .Bitmap .GetByte (_feg -_dagb .Bitmap .RowStride +1);if _fdbc !=nil {return _cd .Wrap (_fdbc ,_def ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_dgdg |=int (_cbcf )<<5;};};for _dcg :=0;
_dcg < _aefd ;_dcg ++{if _dagb ._eab {_gcb =_dagb .overrideAtTemplate1 (_ffg ,_ggdb +_dcg ,_dfd ,int (_ebcb ),_dcg );_dagb ._ceg .SetIndex (int32 (_gcb ));}else {_dagb ._ceg .SetIndex (int32 (_ffg ));};_dccd ,_fdbc =_dagb ._fdb .DecodeBit (_dagb ._ceg );
if _fdbc !=nil {return _cd .Wrap (_fdbc ,_def ,"");};_ebcb |=byte (_dccd )<<uint (7-_dcg );_eeb :=uint (8-_dcg );_ffg =((_ffg &0xefb)<<1)|_dccd |((_baf >>_eeb )&0x8)|((_dgdg >>_eeb )&0x200);};if _bcda :=_dagb .Bitmap .SetByte (_aadd ,_ebcb );_bcda !=nil {return _cd .Wrap (_bcda ,_def ,"");
};_aadd ++;_feg ++;};return nil ;};func (_eafg *TextRegion )decodeStripT ()(_aaca int64 ,_aeba error ){if _eafg .IsHuffmanEncoded {if _eafg .SbHuffDT ==3{if _eafg ._cdce ==nil {var _cdccg int ;if _eafg .SbHuffFS ==3{_cdccg ++;};if _eafg .SbHuffDS ==3{_cdccg ++;
};_eafg ._cdce ,_aeba =_eafg .getUserTable (_cdccg );if _aeba !=nil {return 0,_aeba ;};};_aaca ,_aeba =_eafg ._cdce .Decode (_eafg ._daga );if _aeba !=nil {return 0,_aeba ;};}else {var _aagbc _ae .Tabler ;_aagbc ,_aeba =_ae .GetStandardTable (11+int (_eafg .SbHuffDT ));
if _aeba !=nil {return 0,_aeba ;};_aaca ,_aeba =_aagbc .Decode (_eafg ._daga );if _aeba !=nil {return 0,_aeba ;};};}else {var _gddg int32 ;_gddg ,_aeba =_eafg ._dfaf .DecodeInt (_eafg ._badf );if _aeba !=nil {return 0,_aeba ;};_aaca =int64 (_gddg );};_aaca *=int64 (-_eafg .SbStrips );
return _aaca ,nil ;};var _ SegmentEncoder =&RegionSegment {};func (_fdea *SymbolDictionary )getUserTable (_cfgfb int )(_ae .Tabler ,error ){var _bcad int ;for _ ,_bfe :=range _fdea .Header .RTSegments {if _bfe .Type ==53{if _bcad ==_cfgfb {_ebeg ,_ebga :=_bfe .GetSegmentData ();
if _ebga !=nil {return nil ,_ebga ;};_daca :=_ebeg .(_ae .BasicTabler );return _ae .NewEncodedTable (_daca );};_bcad ++;};};return nil ,nil ;};func (_gcag *Header )GetSegmentData ()(Segmenter ,error ){var _caa Segmenter ;if _gcag .SegmentData !=nil {_caa =_gcag .SegmentData ;
};if _caa ==nil {_gcdf ,_dffd :=_egdg [_gcag .Type ];if !_dffd {return nil ,_dg .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_gcag .Type ,_gcag .Type );
};_caa =_gcdf ();_ad .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_gcag .SegmentNumber ,_gcag .SegmentDataStartOffset );
_gbed ,_ggbb :=_gcag .subInputReader ();if _ggbb !=nil {return nil ,_ggbb ;};if _agbb :=_caa .Init (_gcag ,_gbed );_agbb !=nil {_ad .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_agbb ,_caa );
return nil ,_agbb ;};_gcag .SegmentData =_caa ;};return _caa ,nil ;};func (_ggag *PatternDictionary )checkInput ()error {if _ggag .HdpHeight < 1||_ggag .HdpWidth < 1{return _a .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _ggag .IsMMREncoded {if _ggag .HDTemplate !=0{_ad .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_cddbe *TextRegion )readHuffmanFlags ()error {var (_dcadd int ;_ccga uint64 ;_fabg error ;);_ ,_fabg =_cddbe ._daga .ReadBit ();if _fabg !=nil {return _fabg ;};_dcadd ,_fabg =_cddbe ._daga .ReadBit ();if _fabg !=nil {return _fabg ;
};_cddbe .SbHuffRSize =int8 (_dcadd );_ccga ,_fabg =_cddbe ._daga .ReadBits (2);if _fabg !=nil {return _fabg ;};_cddbe .SbHuffRDY =int8 (_ccga )&0xf;_ccga ,_fabg =_cddbe ._daga .ReadBits (2);if _fabg !=nil {return _fabg ;};_cddbe .SbHuffRDX =int8 (_ccga )&0xf;
_ccga ,_fabg =_cddbe ._daga .ReadBits (2);if _fabg !=nil {return _fabg ;};_cddbe .SbHuffRDHeight =int8 (_ccga )&0xf;_ccga ,_fabg =_cddbe ._daga .ReadBits (2);if _fabg !=nil {return _fabg ;};_cddbe .SbHuffRDWidth =int8 (_ccga )&0xf;_ccga ,_fabg =_cddbe ._daga .ReadBits (2);
if _fabg !=nil {return _fabg ;};_cddbe .SbHuffDT =int8 (_ccga )&0xf;_ccga ,_fabg =_cddbe ._daga .ReadBits (2);if _fabg !=nil {return _fabg ;};_cddbe .SbHuffDS =int8 (_ccga )&0xf;_ccga ,_fabg =_cddbe ._daga .ReadBits (2);if _fabg !=nil {return _fabg ;};
_cddbe .SbHuffFS =int8 (_ccga )&0xf;return nil ;};func (_aebc *SymbolDictionary )setExportedSymbols (_ffbc []int ){for _abed :=uint32 (0);_abed < _aebc ._fcaf +_aebc .NumberOfNewSymbols ;_abed ++{if _ffbc [_abed ]==1{var _acac *_dge .Bitmap ;if _abed < _aebc ._fcaf {_acac =_aebc ._agcb [_abed ];
}else {_acac =_aebc ._fcbe [_abed -_aebc ._fcaf ];};_ad .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_acac );
_aebc ._bgafde =append (_aebc ._bgafde ,_acac );};};};func (_bcgd *PageInformationSegment )readDefaultPixelValue ()error {_dacc ,_gdfad :=_bcgd ._deec .ReadBit ();if _gdfad !=nil {return _gdfad ;};_bcgd .DefaultPixelValue =uint8 (_dacc &0xf);return nil ;
};func (_gbbc *Header )subInputReader ()(_b .StreamReader ,error ){return _b .NewSubstreamReader (_gbbc .Reader ,_gbbc .SegmentDataStartOffset ,_gbbc .SegmentDataLength );};func (_fgd *GenericRegion )overrideAtTemplate0a (_bee ,_eda ,_bdd ,_fded ,_agb ,_egde int )int {if _fgd .GBAtOverride [0]{_bee &=0xFFEF;
if _fgd .GBAtY [0]==0&&_fgd .GBAtX [0]>=-int8 (_agb ){_bee |=(_fded >>uint (int8 (_egde )-_fgd .GBAtX [0]&0x1))<<4;}else {_bee |=int (_fgd .getPixel (_eda +int (_fgd .GBAtX [0]),_bdd +int (_fgd .GBAtY [0])))<<4;};};if _fgd .GBAtOverride [1]{_bee &=0xFBFF;
if _fgd .GBAtY [1]==0&&_fgd .GBAtX [1]>=-int8 (_agb ){_bee |=(_fded >>uint (int8 (_egde )-_fgd .GBAtX [1]&0x1))<<10;}else {_bee |=int (_fgd .getPixel (_eda +int (_fgd .GBAtX [1]),_bdd +int (_fgd .GBAtY [1])))<<10;};};if _fgd .GBAtOverride [2]{_bee &=0xF7FF;
if _fgd .GBAtY [2]==0&&_fgd .GBAtX [2]>=-int8 (_agb ){_bee |=(_fded >>uint (int8 (_egde )-_fgd .GBAtX [2]&0x1))<<11;}else {_bee |=int (_fgd .getPixel (_eda +int (_fgd .GBAtX [2]),_bdd +int (_fgd .GBAtY [2])))<<11;};};if _fgd .GBAtOverride [3]{_bee &=0x7FFF;
if _fgd .GBAtY [3]==0&&_fgd .GBAtX [3]>=-int8 (_agb ){_bee |=(_fded >>uint (int8 (_egde )-_fgd .GBAtX [3]&0x1))<<15;}else {_bee |=int (_fgd .getPixel (_eda +int (_fgd .GBAtX [3]),_bdd +int (_fgd .GBAtY [3])))<<15;};};return _bee ;};func (_ccdfb *TextRegion )decodeRdh ()(int64 ,error ){const _dbd ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";
if _ccdfb .IsHuffmanEncoded {if _ccdfb .SbHuffRDHeight ==3{if _ccdfb ._dbcg ==nil {var (_caaa int ;_befd error ;);if _ccdfb .SbHuffFS ==3{_caaa ++;};if _ccdfb .SbHuffDS ==3{_caaa ++;};if _ccdfb .SbHuffDT ==3{_caaa ++;};if _ccdfb .SbHuffRDWidth ==3{_caaa ++;
};_ccdfb ._dbcg ,_befd =_ccdfb .getUserTable (_caaa );if _befd !=nil {return 0,_cd .Wrap (_befd ,_dbd ,"");};};return _ccdfb ._dbcg .Decode (_ccdfb ._daga );};_edfga ,_bdedf :=_ae .GetStandardTable (14+int (_ccdfb .SbHuffRDHeight ));if _bdedf !=nil {return 0,_cd .Wrap (_bdedf ,_dbd ,"");
};return _edfga .Decode (_ccdfb ._daga );};_fdcc ,_gdbee :=_ccdfb ._dfaf .DecodeInt (_ccdfb ._dfbf );if _gdbee !=nil {return 0,_cd .Wrap (_gdbee ,_dbd ,"");};return int64 (_fdcc ),nil ;};func (_baag *SymbolDictionary )getSymbol (_bbc int )(*_dge .Bitmap ,error ){const _egfed ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_efgb ,_ffc :=_baag ._fgbd .GetBitmap (_baag ._edeg [_bbc ]);if _ffc !=nil {return nil ,_cd .Wrap (_ffc ,_egfed ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _efgb ,nil ;};func (_cb *EndOfStripe )parseHeader (_fdf *Header ,_deg _b .StreamReader )error {_ab ,_acg :=_cb ._fe .ReadBits (32);
if _acg !=nil {return _acg ;};_cb ._fa =int (_ab &_d .MaxInt32 );return nil ;};func (_febb *TextRegion )computeSymbolCodeLength ()error {if _febb .IsHuffmanEncoded {return _febb .symbolIDCodeLengths ();};_febb ._dgfbf =int8 (_d .Ceil (_d .Log (float64 (_febb .NumberOfSymbols ))/_d .Log (2)));
return nil ;};func (_ebb *HalftoneRegion )computeSegmentDataStructure ()error {_ebb .DataOffset =_ebb ._fdg .StreamPosition ();_ebb .DataHeaderLength =_ebb .DataOffset -_ebb .DataHeaderOffset ;_ebb .DataLength =int64 (_ebb ._fdg .Length ())-_ebb .DataHeaderLength ;
return nil ;};func (_bace *TextRegion )decodeCurrentT ()(int64 ,error ){if _bace .SbStrips !=1{if _bace .IsHuffmanEncoded {_efdc ,_fcfb :=_bace ._daga .ReadBits (byte (_bace .LogSBStrips ));return int64 (_efdc ),_fcfb ;};_dfddb ,_dfdff :=_bace ._dfaf .DecodeInt (_bace ._gcdfe );
if _dfdff !=nil {return 0,_dfdff ;};return int64 (_dfddb ),nil ;};return 0,nil ;};func (_agca *SymbolDictionary )encodeFlags (_gegbc _b .BinaryWriter )(_dffe int ,_ddc error ){const _agbdb ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _ddc =_gegbc .SkipBits (3);_ddc !=nil {return 0,_cd .Wrap (_ddc ,_agbdb ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _dgdf int ;if _agca .SdrTemplate > 0{_dgdf =1;};if _ddc =_gegbc .WriteBit (_dgdf );_ddc !=nil {return _dffe ,_cd .Wrap (_ddc ,_agbdb ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_dgdf =0;if _agca .SdTemplate > 1{_dgdf =1;};if _ddc =_gegbc .WriteBit (_dgdf );_ddc !=nil {return _dffe ,_cd .Wrap (_ddc ,_agbdb ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_dgdf =0;if _agca .SdTemplate ==1||_agca .SdTemplate ==3{_dgdf =1;
};if _ddc =_gegbc .WriteBit (_dgdf );_ddc !=nil {return _dffe ,_cd .Wrap (_ddc ,_agbdb ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_dgdf =0;if _agca ._bebbf {_dgdf =1;};if _ddc =_gegbc .WriteBit (_dgdf );_ddc !=nil {return _dffe ,_cd .Wrap (_ddc ,_agbdb ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_dgdf =0;if _agca ._afdd {_dgdf =1;};if _ddc =_gegbc .WriteBit (_dgdf );_ddc !=nil {return _dffe ,_cd .Wrap (_ddc ,_agbdb ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_dgdf =0;if _agca .SdHuffAggInstanceSelection {_dgdf =1;
};if _ddc =_gegbc .WriteBit (_dgdf );_ddc !=nil {return _dffe ,_cd .Wrap (_ddc ,_agbdb ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_dgdf =int (_agca .SdHuffBMSizeSelection );if _ddc =_gegbc .WriteBit (_dgdf );_ddc !=nil {return _dffe ,_cd .Wrap (_ddc ,_agbdb ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");
};_dgdf =0;if _agca .SdHuffDecodeWidthSelection > 1{_dgdf =1;};if _ddc =_gegbc .WriteBit (_dgdf );_ddc !=nil {return _dffe ,_cd .Wrap (_ddc ,_agbdb ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_dgdf =0;switch _agca .SdHuffDecodeWidthSelection {case 1,3:_dgdf =1;
};if _ddc =_gegbc .WriteBit (_dgdf );_ddc !=nil {return _dffe ,_cd .Wrap (_ddc ,_agbdb ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_dgdf =0;if _agca .SdHuffDecodeHeightSelection > 1{_dgdf =1;};if _ddc =_gegbc .WriteBit (_dgdf );
_ddc !=nil {return _dffe ,_cd .Wrap (_ddc ,_agbdb ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_dgdf =0;switch _agca .SdHuffDecodeHeightSelection {case 1,3:_dgdf =1;};if _ddc =_gegbc .WriteBit (_dgdf );_ddc !=nil {return _dffe ,_cd .Wrap (_ddc ,_agbdb ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");
};_dgdf =0;if _agca .UseRefinementAggregation {_dgdf =1;};if _ddc =_gegbc .WriteBit (_dgdf );_ddc !=nil {return _dffe ,_cd .Wrap (_ddc ,_agbdb ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_dgdf =0;if _agca .IsHuffmanEncoded {_dgdf =1;};if _ddc =_gegbc .WriteBit (_dgdf );
_ddc !=nil {return _dffe ,_cd .Wrap (_ddc ,_agbdb ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_bgd *TableSegment )HtLow ()int32 {return _bgd ._aeeb };func (_gdc *GenericRefinementRegion )parseHeader ()(_gde error ){_ad .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_ccc :=_cf .Now ();defer func (){if _gde ==nil {_ad .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_cf .Since (_ccc ).Nanoseconds ());
}else {_ad .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_gde );
};}();if _gde =_gdc .RegionInfo .parseHeader ();_gde !=nil {return _gde ;};_ ,_gde =_gdc ._ed .ReadBits (6);if _gde !=nil {return _gde ;};_gdc .IsTPGROn ,_gde =_gdc ._ed .ReadBool ();if _gde !=nil {return _gde ;};var _abc int ;_abc ,_gde =_gdc ._ed .ReadBit ();
if _gde !=nil {return _gde ;};_gdc .TemplateID =int8 (_abc );switch _gdc .TemplateID {case 0:_gdc .Template =_gdc ._dea ;if _gde =_gdc .readAtPixels ();_gde !=nil {return ;};case 1:_gdc .Template =_gdc ._be ;};return nil ;};func (_faca *TextRegion )setCodingStatistics ()error {if _faca ._badf ==nil {_faca ._badf =_fb .NewStats (512,1);
};if _faca ._dad ==nil {_faca ._dad =_fb .NewStats (512,1);};if _faca ._ffdf ==nil {_faca ._ffdf =_fb .NewStats (512,1);};if _faca ._gcdfe ==nil {_faca ._gcdfe =_fb .NewStats (512,1);};if _faca ._beadg ==nil {_faca ._beadg =_fb .NewStats (512,1);};if _faca ._fadg ==nil {_faca ._fadg =_fb .NewStats (512,1);
};if _faca ._dfbf ==nil {_faca ._dfbf =_fb .NewStats (512,1);};if _faca ._cbee ==nil {_faca ._cbee =_fb .NewStats (1<<uint (_faca ._dgfbf ),1);};if _faca ._fbgae ==nil {_faca ._fbgae =_fb .NewStats (512,1);};if _faca ._cbffg ==nil {_faca ._cbffg =_fb .NewStats (512,1);
};if _faca ._dfaf ==nil {var _befdd error ;_faca ._dfaf ,_befdd =_fb .New (_faca ._daga );if _befdd !=nil {return _befdd ;};};return nil ;};func (_ceed *TextRegion )decodeRdy ()(int64 ,error ){const _ecdga ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";
if _ceed .IsHuffmanEncoded {if _ceed .SbHuffRDY ==3{if _ceed ._bacd ==nil {var (_aage int ;_bab error ;);if _ceed .SbHuffFS ==3{_aage ++;};if _ceed .SbHuffDS ==3{_aage ++;};if _ceed .SbHuffDT ==3{_aage ++;};if _ceed .SbHuffRDWidth ==3{_aage ++;};if _ceed .SbHuffRDHeight ==3{_aage ++;
};if _ceed .SbHuffRDX ==3{_aage ++;};_ceed ._bacd ,_bab =_ceed .getUserTable (_aage );if _bab !=nil {return 0,_cd .Wrap (_bab ,_ecdga ,"");};};return _ceed ._bacd .Decode (_ceed ._daga );};_aegg ,_ebac :=_ae .GetStandardTable (14+int (_ceed .SbHuffRDY ));
if _ebac !=nil {return 0,_ebac ;};return _aegg .Decode (_ceed ._daga );};_bebc ,_bffa :=_ceed ._dfaf .DecodeInt (_ceed ._cbffg );if _bffa !=nil {return 0,_cd .Wrap (_bffa ,_ecdga ,"");};return int64 (_bebc ),nil ;};func (_ffge *TextRegion )checkInput ()error {const _gbeca ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";
if !_ffge .UseRefinement {if _ffge .SbrTemplate !=0{_ad .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_ffge .SbrTemplate =0;};};if _ffge .SbHuffFS ==2||_ffge .SbHuffRDWidth ==2||_ffge .SbHuffRDHeight ==2||_ffge .SbHuffRDX ==2||_ffge .SbHuffRDY ==2{return _cd .Error (_gbeca ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_ffge .UseRefinement {if _ffge .SbHuffRSize !=0{_ad .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_ffge .SbHuffRSize =0;};if _ffge .SbHuffRDY !=0{_ad .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_ffge .SbHuffRDY =0;};if _ffge .SbHuffRDX !=0{_ad .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_ffge .SbHuffRDX =0;};if _ffge .SbHuffRDWidth !=0{_ad .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_ffge .SbHuffRDWidth =0;};if _ffge .SbHuffRDHeight !=0{_ad .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_ffge .SbHuffRDHeight =0;};};return nil ;
};func (_fafbc *GenericRegion )computeSegmentDataStructure ()error {_fafbc .DataOffset =_fafbc ._eaed .StreamPosition ();_fafbc .DataHeaderLength =_fafbc .DataOffset -_fafbc .DataHeaderOffset ;_fafbc .DataLength =int64 (_fafbc ._eaed .Length ())-_fafbc .DataHeaderLength ;
return nil ;};func (_dcee *SymbolDictionary )Init (h *Header ,r _b .StreamReader )error {_dcee .Header =h ;_dcee ._begg =r ;return _dcee .parseHeader ();};func (_egb *GenericRegion )GetRegionBitmap ()(_abf *_dge .Bitmap ,_gdcf error ){if _egb .Bitmap !=nil {return _egb .Bitmap ,nil ;
};if _egb .IsMMREncoded {if _egb ._ccdf ==nil {_egb ._ccdf ,_gdcf =_ac .New (_egb ._eaed ,int (_egb .RegionSegment .BitmapWidth ),int (_egb .RegionSegment .BitmapHeight ),_egb .DataOffset ,_egb .DataLength );if _gdcf !=nil {return nil ,_gdcf ;};};_egb .Bitmap ,_gdcf =_egb ._ccdf .UncompressMMR ();
return _egb .Bitmap ,_gdcf ;};if _gdcf =_egb .updateOverrideFlags ();_gdcf !=nil {return nil ,_gdcf ;};var _dde int ;if _egb ._fdb ==nil {_egb ._fdb ,_gdcf =_fb .New (_egb ._eaed );if _gdcf !=nil {return nil ,_gdcf ;};};if _egb ._ceg ==nil {_egb ._ceg =_fb .NewStats (65536,1);
};_egb .Bitmap =_dge .New (int (_egb .RegionSegment .BitmapWidth ),int (_egb .RegionSegment .BitmapHeight ));_adaf :=int (uint32 (_egb .Bitmap .Width +7)&(^uint32 (7)));for _bea :=0;_bea < _egb .Bitmap .Height ;_bea ++{if _egb .IsTPGDon {var _adg int ;
_adg ,_gdcf =_egb .decodeSLTP ();if _gdcf !=nil {return nil ,_gdcf ;};_dde ^=_adg ;};if _dde ==1{if _bea > 0{if _gdcf =_egb .copyLineAbove (_bea );_gdcf !=nil {return nil ,_gdcf ;};};}else {if _gdcf =_egb .decodeLine (_bea ,_egb .Bitmap .Width ,_adaf );
_gdcf !=nil {return nil ,_gdcf ;};};};return _egb .Bitmap ,nil ;};func (_gbbf *PageInformationSegment )readIsStriped ()error {_fdcda ,_caag :=_gbbf ._deec .ReadBit ();if _caag !=nil {return _caag ;};if _fdcda ==1{_gbbf .IsStripe =true ;};return nil ;};
func (_gcbc *TextRegion )createRegionBitmap ()error {_gcbc .RegionBitmap =_dge .New (int (_gcbc .RegionInfo .BitmapWidth ),int (_gcbc .RegionInfo .BitmapHeight ));if _gcbc .DefaultPixel !=0{_gcbc .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_cdae *TableSegment )HtOOB ()int32 {return _cdae ._ffd };
func (_fecc *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_faae ,_dfbb :=_fecc ._deec .ReadBit ();if _dfbb !=nil {return _dfbb ;};if _faae ==1{_fecc ._agae =true ;};return nil ;};func (_efcf *GenericRefinementRegion )setParameters (_fdfd *_fb .DecoderStats ,_fag *_fb .Decoder ,_gdb int8 ,_ccca ,_aca uint32 ,_cbec *_dge .Bitmap ,_bdb ,_ggbg int32 ,_cec bool ,_aeae []int8 ,_cef []int8 ){_ad .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _fdfd !=nil {_efcf ._fc =_fdfd ;};if _fag !=nil {_efcf ._ef =_fag ;};_efcf .TemplateID =_gdb ;_efcf .RegionInfo .BitmapWidth =_ccca ;_efcf .RegionInfo .BitmapHeight =_aca ;_efcf .ReferenceBitmap =_cbec ;_efcf .ReferenceDX =_bdb ;_efcf .ReferenceDY =_ggbg ;
_efcf .IsTPGROn =_cec ;_efcf .GrAtX =_aeae ;_efcf .GrAtY =_cef ;_efcf .RegionBitmap =nil ;_ad .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_efcf );
};func (_abdb *Header )readDataStartOffset (_cedb _b .StreamReader ,_dfce OrganizationType ){if _dfce ==OSequential {_abdb .SegmentDataStartOffset =uint64 (_cedb .StreamPosition ());};};func (_bfab *SymbolDictionary )decodeHeightClassCollectiveBitmap (_ddcf int64 ,_fgcf ,_bcbge uint32 )(*_dge .Bitmap ,error ){if _ddcf ==0{_geee :=_dge .New (int (_bcbge ),int (_fgcf ));
var (_dfcd byte ;_dcfd error ;);for _fcfdf :=0;_fcfdf < len (_geee .Data );_fcfdf ++{_dfcd ,_dcfd =_bfab ._begg .ReadByte ();if _dcfd !=nil {return nil ,_dcfd ;};if _dcfd =_geee .SetByte (_fcfdf ,_dfcd );_dcfd !=nil {return nil ,_dcfd ;};};return _geee ,nil ;
};if _bfab ._fecg ==nil {_bfab ._fecg =NewGenericRegion (_bfab ._begg );};_bfab ._fecg .setParameters (true ,_bfab ._begg .StreamPosition (),_ddcf ,_fgcf ,_bcbge );_aebe ,_egfg :=_bfab ._fecg .GetRegionBitmap ();if _egfg !=nil {return nil ,_egfg ;};return _aebe ,nil ;
};func (_eddg *GenericRegion )decodeSLTP ()(int ,error ){switch _eddg .GBTemplate {case 0:_eddg ._ceg .SetIndex (0x9B25);case 1:_eddg ._ceg .SetIndex (0x795);case 2:_eddg ._ceg .SetIndex (0xE5);case 3:_eddg ._ceg .SetIndex (0x195);};return _eddg ._fdb .DecodeBit (_eddg ._ceg );
};func (_dbab *PageInformationSegment )parseHeader ()(_faef error ){_ad .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _debe ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _faef !=nil {_debe +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_faef .Error ();}else {_debe +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_ad .Log .Trace (_debe );}();if _faef =_dbab .readWidthAndHeight ();
_faef !=nil {return _faef ;};if _faef =_dbab .readResolution ();_faef !=nil {return _faef ;};_ ,_faef =_dbab ._deec .ReadBit ();if _faef !=nil {return _faef ;};if _faef =_dbab .readCombinationOperatorOverrideAllowed ();_faef !=nil {return _faef ;};if _faef =_dbab .readRequiresAuxiliaryBuffer ();
_faef !=nil {return _faef ;};if _faef =_dbab .readCombinationOperator ();_faef !=nil {return _faef ;};if _faef =_dbab .readDefaultPixelValue ();_faef !=nil {return _faef ;};if _faef =_dbab .readContainsRefinement ();_faef !=nil {return _faef ;};if _faef =_dbab .readIsLossless ();
_faef !=nil {return _faef ;};if _faef =_dbab .readIsStriped ();_faef !=nil {return _faef ;};if _faef =_dbab .readMaxStripeSize ();_faef !=nil {return _faef ;};if _faef =_dbab .checkInput ();_faef !=nil {return _faef ;};_ad .Log .Trace ("\u0025\u0073",_dbab );
return nil ;};func (_gdcg *HalftoneRegion )computeY (_fff ,_fbbe int )int {return _gdcg .shiftAndFill (int (_gdcg .HGridY )+_fff *int (_gdcg .HRegionX )-_fbbe *int (_gdcg .HRegionY ));};type templater interface{form (_egdf ,_bde ,_eccc ,_aeab ,_afb int16 )int16 ;
setIndex (_gbe *_fb .DecoderStats );};func (_fbd *GenericRegion )getPixel (_dgee ,_aecf int )int8 {if _dgee < 0||_dgee >=_fbd .Bitmap .Width {return 0;};if _aecf < 0||_aecf >=_fbd .Bitmap .Height {return 0;};if _fbd .Bitmap .GetPixel (_dgee ,_aecf ){return 1;
};return 0;};func (_cgdf *TextRegion )decodeDfs ()(int64 ,error ){if _cgdf .IsHuffmanEncoded {if _cgdf .SbHuffFS ==3{if _cgdf ._bgdg ==nil {var _bded error ;_cgdf ._bgdg ,_bded =_cgdf .getUserTable (0);if _bded !=nil {return 0,_bded ;};};return _cgdf ._bgdg .Decode (_cgdf ._daga );
};_addd ,_bbee :=_ae .GetStandardTable (6+int (_cgdf .SbHuffFS ));if _bbee !=nil {return 0,_bbee ;};return _addd .Decode (_cgdf ._daga );};_fgdb ,_ccbc :=_cgdf ._dfaf .DecodeInt (_cgdf ._dad );if _ccbc !=nil {return 0,_ccbc ;};return int64 (_fgdb ),nil ;
};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_gbedb *TextRegion )readAmountOfSymbolInstances ()error {_dceb ,_ffba :=_gbedb ._daga .ReadBits (32);if _ffba !=nil {return _ffba ;};_gbedb .NumberOfSymbolInstances =uint32 (_dceb &_d .MaxUint32 );
_dacf :=_gbedb .RegionInfo .BitmapWidth *_gbedb .RegionInfo .BitmapHeight ;if _dacf < _gbedb .NumberOfSymbolInstances {_ad .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_dacf ,_gbedb .NumberOfSymbolInstances );
_gbedb .NumberOfSymbolInstances =_dacf ;};return nil ;};func (_gaa *Header )CleanSegmentData (){if _gaa .SegmentData !=nil {_gaa .SegmentData =nil ;};};func (_ecce *SymbolDictionary )setInSyms ()error {if _ecce .Header .RTSegments !=nil {return _ecce .retrieveImportSymbols ();
};_ecce ._agcb =make ([]*_dge .Bitmap ,0);return nil ;};func (_bdf *Header )readHeaderLength (_cbef _b .StreamReader ,_ccbd int64 ){_bdf .HeaderLength =_cbef .StreamPosition ()-_ccbd ;};func (_cdcd *Header )readSegmentDataLength (_gfgd _b .StreamReader )(_adga error ){_cdcd .SegmentDataLength ,_adga =_gfgd .ReadBits (32);
if _adga !=nil {return _adga ;};_cdcd .SegmentDataLength &=_d .MaxInt32 ;return nil ;};func (_becd *SymbolDictionary )encodeSymbols (_agce _b .BinaryWriter )(_fdd int ,_dfbg error ){const _cfc ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_fbde :=_gg .New ();_fbde .Init ();_feccd ,_dfbg :=_becd ._fgbd .SelectByIndexes (_becd ._edeg );if _dfbg !=nil {return 0,_cd .Wrap (_dfbg ,_cfc ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_fgfa :=map[*_dge .Bitmap ]int {};for _agbbe ,_afdf :=range _feccd .Values {_fgfa [_afdf ]=_agbbe ;
};_feccd .SortByHeight ();var _gfce ,_abgg int ;_feff ,_dfbg :=_feccd .GroupByHeight ();if _dfbg !=nil {return 0,_cd .Wrap (_dfbg ,_cfc ,"");};for _ ,_bfgf :=range _feff .Values {_eeefb :=_bfgf .Values [0].Height ;_afed :=_eeefb -_gfce ;if _dfbg =_fbde .EncodeInteger (_gg .IADH ,_afed );
_dfbg !=nil {return 0,_cd .Wrapf (_dfbg ,_cfc ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_afed );};_gfce =_eeefb ;_fbed ,_bgac :=_bfgf .GroupByWidth ();if _bgac !=nil {return 0,_cd .Wrapf (_bgac ,_cfc ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_eeefb );
};var _dfdfc int ;for _ ,_fbea :=range _fbed .Values {for _ ,_dcf :=range _fbea .Values {_fgddd :=_dcf .Width ;_affg :=_fgddd -_dfdfc ;if _bgac =_fbde .EncodeInteger (_gg .IADW ,_affg );_bgac !=nil {return 0,_cd .Wrapf (_bgac ,_cfc ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_affg );
};_dfdfc +=_affg ;if _bgac =_fbde .EncodeBitmap (_dcf ,false );_bgac !=nil {return 0,_cd .Wrapf (_bgac ,_cfc ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_eeefb ,_fgddd );};_gfag :=_fgfa [_dcf ];_becd ._dedd [_gfag ]=_abgg ;
_abgg ++;};};if _bgac =_fbde .EncodeOOB (_gg .IADW );_bgac !=nil {return 0,_cd .Wrap (_bgac ,_cfc ,"\u0049\u0041\u0044\u0057");};};if _dfbg =_fbde .EncodeInteger (_gg .IAEX ,0);_dfbg !=nil {return 0,_cd .Wrap (_dfbg ,_cfc ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _dfbg =_fbde .EncodeInteger (_gg .IAEX ,len (_becd ._edeg ));_dfbg !=nil {return 0,_cd .Wrap (_dfbg ,_cfc ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_fbde .Final ();_acffg ,_dfbg :=_fbde .WriteTo (_agce );
if _dfbg !=nil {return 0,_cd .Wrap (_dfbg ,_cfc ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_acffg ),nil ;};func (_facc *TableSegment )HtHigh ()int32 {return _facc ._cadf };func (_bfc *GenericRefinementRegion )updateOverride ()error {if _bfc .GrAtX ==nil ||_bfc .GrAtY ==nil {return _a .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_bfc .GrAtX )!=len (_bfc .GrAtY ){return _a .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_bfc ._cbe =make ([]bool ,len (_bfc .GrAtX ));switch _bfc .TemplateID {case 0:if _bfc .GrAtX [0]!=-1&&_bfc .GrAtY [0]!=-1{_bfc ._cbe [0]=true ;
_bfc ._adc =true ;};if _bfc .GrAtX [1]!=-1&&_bfc .GrAtY [1]!=-1{_bfc ._cbe [1]=true ;_bfc ._adc =true ;};case 1:_bfc ._adc =false ;};return nil ;};type Type int ;var _ SegmentEncoder =&GenericRegion {};func (_fdbb *GenericRegion )setParametersWithAt (_dbf bool ,_fbb byte ,_ccfb ,_egf bool ,_deaa ,_gfa []int8 ,_gbcd ,_fbeb uint32 ,_fdbf *_fb .DecoderStats ,_eeg *_fb .Decoder ){_fdbb .IsMMREncoded =_dbf ;
_fdbb .GBTemplate =_fbb ;_fdbb .IsTPGDon =_ccfb ;_fdbb .GBAtX =_deaa ;_fdbb .GBAtY =_gfa ;_fdbb .RegionSegment .BitmapHeight =_fbeb ;_fdbb .RegionSegment .BitmapWidth =_gbcd ;_fdbb ._ccdf =nil ;_fdbb .Bitmap =nil ;if _fdbf !=nil {_fdbb ._ceg =_fdbf ;};
if _eeg !=nil {_fdbb ._fdb =_eeg ;};_ad .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_fdbb );
};func (_bg *GenericRefinementRegion )GetRegionBitmap ()(*_dge .Bitmap ,error ){var _df error ;_ad .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _df !=nil {_ad .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_df );
}else {_ad .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _bg .RegionBitmap !=nil {return _bg .RegionBitmap ,nil ;};_fcb :=0;if _bg .ReferenceBitmap ==nil {_bg .ReferenceBitmap ,_df =_bg .getGrReference ();if _df !=nil {return nil ,_df ;};};if _bg ._ef ==nil {_bg ._ef ,_df =_fb .New (_bg ._ed );if _df !=nil {return nil ,_df ;
};};if _bg ._fc ==nil {_bg ._fc =_fb .NewStats (8192,1);};_bg .RegionBitmap =_dge .New (int (_bg .RegionInfo .BitmapWidth ),int (_bg .RegionInfo .BitmapHeight ));if _bg .TemplateID ==0{if _df =_bg .updateOverride ();_df !=nil {return nil ,_df ;};};_bc :=(_bg .RegionBitmap .Width +7)&-8;
var _cag int ;if _bg .IsTPGROn {_cag =int (-_bg .ReferenceDY )*_bg .ReferenceBitmap .RowStride ;};_abe :=_cag +1;for _fg :=0;_fg < _bg .RegionBitmap .Height ;_fg ++{if _bg .IsTPGROn {_fca ,_ee :=_bg .decodeSLTP ();if _ee !=nil {return nil ,_ee ;};_fcb ^=_fca ;
};if _fcb ==0{_df =_bg .decodeOptimized (_fg ,_bg .RegionBitmap .Width ,_bg .RegionBitmap .RowStride ,_bg .ReferenceBitmap .RowStride ,_bc ,_cag ,_abe );if _df !=nil {return nil ,_df ;};}else {_df =_bg .decodeTypicalPredictedLine (_fg ,_bg .RegionBitmap .Width ,_bg .RegionBitmap .RowStride ,_bg .ReferenceBitmap .RowStride ,_bc ,_cag );
if _df !=nil {return nil ,_df ;};};};return _bg .RegionBitmap ,nil ;};func (_edgag *RegionSegment )Size ()int {return 17};func (_dda *GenericRefinementRegion )overrideAtTemplate0 (_gea ,_cfg ,_cca ,_aee ,_ccdd int )int {if _dda ._cbe [0]{_gea &=0xfff7;
if _dda .GrAtY [0]==0&&int (_dda .GrAtX [0])>=-_ccdd {_gea |=(_aee >>uint (7-(_ccdd +int (_dda .GrAtX [0])))&0x1)<<3;}else {_gea |=_dda .getPixel (_dda .RegionBitmap ,_cfg +int (_dda .GrAtX [0]),_cca +int (_dda .GrAtY [0]))<<3;};};if _dda ._cbe [1]{_gea &=0xefff;
if _dda .GrAtY [1]==0&&int (_dda .GrAtX [1])>=-_ccdd {_gea |=(_aee >>uint (7-(_ccdd +int (_dda .GrAtX [1])))&0x1)<<12;}else {_gea |=_dda .getPixel (_dda .ReferenceBitmap ,_cfg +int (_dda .GrAtX [1]),_cca +int (_dda .GrAtY [1]));};};return _gea ;};func (_ggaa *HalftoneRegion )combineGrayscalePlanes (_fcfd []*_dge .Bitmap ,_cggb int )error {_aagf :=0;
for _bcbd :=0;_bcbd < _fcfd [_cggb ].Height ;_bcbd ++{for _cfgd :=0;_cfgd < _fcfd [_cggb ].Width ;_cfgd +=8{_dfcb ,_edfg :=_fcfd [_cggb +1].GetByte (_aagf );if _edfg !=nil {return _edfg ;};_abaa ,_edfg :=_fcfd [_cggb ].GetByte (_aagf );if _edfg !=nil {return _edfg ;
};_edfg =_fcfd [_cggb ].SetByte (_aagf ,_dge .CombineBytes (_abaa ,_dfcb ,_dge .CmbOpXor ));if _edfg !=nil {return _edfg ;};_aagf ++;};};return nil ;};func (_gce *SymbolDictionary )readNumberOfExportedSymbols ()error {_egaga ,_adffb :=_gce ._begg .ReadBits (32);
if _adffb !=nil {return _adffb ;};_gce .NumberOfExportedSymbols =uint32 (_egaga &_d .MaxUint32 );return nil ;};func (_eedge *PatternDictionary )readPatternWidthAndHeight ()error {_fead ,_edfe :=_eedge ._dgg .ReadByte ();if _edfe !=nil {return _edfe ;};
_eedge .HdpWidth =_fead ;_fead ,_edfe =_eedge ._dgg .ReadByte ();if _edfe !=nil {return _edfe ;};_eedge .HdpHeight =_fead ;return nil ;};type EndOfStripe struct{_fe _b .StreamReader ;_fa int ;};func (_gegcg *TextRegion )decodeID ()(int64 ,error ){if _gegcg .IsHuffmanEncoded {if _gegcg ._adad ==nil {_bdgc ,_bcdae :=_gegcg ._daga .ReadBits (byte (_gegcg ._dgfbf ));
return int64 (_bdgc ),_bcdae ;};return _gegcg ._adad .Decode (_gegcg ._daga );};return _gegcg ._dfaf .DecodeIAID (uint64 (_gegcg ._dgfbf ),_gegcg ._cbee );};func (_acad *TextRegion )decodeRdx ()(int64 ,error ){const _dcae ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";
if _acad .IsHuffmanEncoded {if _acad .SbHuffRDX ==3{if _acad ._bgec ==nil {var (_ebcf int ;_gbfbg error ;);if _acad .SbHuffFS ==3{_ebcf ++;};if _acad .SbHuffDS ==3{_ebcf ++;};if _acad .SbHuffDT ==3{_ebcf ++;};if _acad .SbHuffRDWidth ==3{_ebcf ++;};if _acad .SbHuffRDHeight ==3{_ebcf ++;
};_acad ._bgec ,_gbfbg =_acad .getUserTable (_ebcf );if _gbfbg !=nil {return 0,_cd .Wrap (_gbfbg ,_dcae ,"");};};return _acad ._bgec .Decode (_acad ._daga );};_ebfc ,_adcg :=_ae .GetStandardTable (14+int (_acad .SbHuffRDX ));if _adcg !=nil {return 0,_cd .Wrap (_adcg ,_dcae ,"");
};return _ebfc .Decode (_acad ._daga );};_eeefe ,_ceafc :=_acad ._dfaf .DecodeInt (_acad ._fbgae );if _ceafc !=nil {return 0,_cd .Wrap (_ceafc ,_dcae ,"");};return int64 (_eeefe ),nil ;};func (_feffb *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_bbcf :=range _feffb .Header .RTSegments {if _bbcf .Type ==0{_gcbb ,_adaa :=_bbcf .GetSegmentData ();
if _adaa !=nil {return _adaa ;};_dbac ,_afeb :=_gcbb .(*SymbolDictionary );if !_afeb {return _dg .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_gcbb );
};_gfbd ,_adaa :=_dbac .GetDictionary ();if _adaa !=nil {return _dg .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_bbcf .SegmentNumber ,_adaa .Error ());
};_feffb ._agcb =append (_feffb ._agcb ,_gfbd ...);_feffb ._fcaf +=_dbac .NumberOfExportedSymbols ;};};return nil ;};type RegionSegment struct{_fggg _b .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _dge .CombinationOperator ;
};func (_acffb *TextRegion )getSymbols ()error {if _acffb .Header .RTSegments !=nil {return _acffb .initSymbols ();};return nil ;};func (_fbfa *GenericRegion )decodeTemplate2 (_badc ,_dbb ,_ede int ,_daa ,_ffb int )(_gccf error ){const _eeee ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_ceec ,_abgab int ;_cfgf ,_eaeda int ;_bcbg byte ;_fdcd ,_aecd int ;);if _badc >=1{_bcbg ,_gccf =_fbfa .Bitmap .GetByte (_ffb );if _gccf !=nil {return _cd .Wrap (_gccf ,_eeee ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_cfgf =int (_bcbg );};if _badc >=2{_bcbg ,_gccf =_fbfa .Bitmap .GetByte (_ffb -_fbfa .Bitmap .RowStride );if _gccf !=nil {return _cd .Wrap (_gccf ,_eeee ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_eaeda =int (_bcbg )<<4;
};_ceec =(_cfgf >>3&0x7c)|(_eaeda >>3&0x380);for _cbag :=0;_cbag < _ede ;_cbag =_fdcd {var (_gdfa byte ;_gab int ;);_fdcd =_cbag +8;if _efae :=_dbb -_cbag ;_efae > 8{_gab =8;}else {_gab =_efae ;};if _badc > 0{_cfgf <<=8;if _fdcd < _dbb {_bcbg ,_gccf =_fbfa .Bitmap .GetByte (_ffb +1);
if _gccf !=nil {return _cd .Wrap (_gccf ,_eeee ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_cfgf |=int (_bcbg );};};if _badc > 1{_eaeda <<=8;if _fdcd < _dbb {_bcbg ,_gccf =_fbfa .Bitmap .GetByte (_ffb -_fbfa .Bitmap .RowStride +1);
if _gccf !=nil {return _cd .Wrap (_gccf ,_eeee ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_eaeda |=int (_bcbg )<<4;};};for _ebg :=0;_ebg < _gab ;_ebg ++{_edb :=uint (10-_ebg );if _fbfa ._eab {_abgab =_fbfa .overrideAtTemplate2 (_ceec ,_cbag +_ebg ,_badc ,int (_gdfa ),_ebg );
_fbfa ._ceg .SetIndex (int32 (_abgab ));}else {_fbfa ._ceg .SetIndex (int32 (_ceec ));};_aecd ,_gccf =_fbfa ._fdb .DecodeBit (_fbfa ._ceg );if _gccf !=nil {return _cd .Wrap (_gccf ,_eeee ,"");};_gdfa |=byte (_aecd <<uint (7-_ebg ));_ceec =((_ceec &0x1bd)<<1)|_aecd |((_cfgf >>_edb )&0x4)|((_eaeda >>_edb )&0x80);
};if _aagb :=_fbfa .Bitmap .SetByte (_daa ,_gdfa );_aagb !=nil {return _cd .Wrap (_aagb ,_eeee ,"");};_daa ++;_ffb ++;};return nil ;};func (_fee *GenericRegion )decodeLine (_gdg ,_aeg ,_acb int )error {const _cac ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";
_acfd :=_fee .Bitmap .GetByteIndex (0,_gdg );_dee :=_acfd -_fee .Bitmap .RowStride ;switch _fee .GBTemplate {case 0:if !_fee .UseExtTemplates {return _fee .decodeTemplate0a (_gdg ,_aeg ,_acb ,_acfd ,_dee );};return _fee .decodeTemplate0b (_gdg ,_aeg ,_acb ,_acfd ,_dee );
case 1:return _fee .decodeTemplate1 (_gdg ,_aeg ,_acb ,_acfd ,_dee );case 2:return _fee .decodeTemplate2 (_gdg ,_aeg ,_acb ,_acfd ,_dee );case 3:return _fee .decodeTemplate3 (_gdg ,_aeg ,_acb ,_acfd ,_dee );};return _cd .Errorf (_cac ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_fee .GBTemplate );
};func (_dbe *GenericRegion )GetRegionInfo ()*RegionSegment {return _dbe .RegionSegment };func (_gbg *HalftoneRegion )renderPattern (_edag [][]int )(_aebf error ){var _bfg ,_eag int ;for _ccb :=0;_ccb < int (_gbg .HGridHeight );_ccb ++{for _ddfe :=0;_ddfe < int (_gbg .HGridWidth );
_ddfe ++{_bfg =_gbg .computeX (_ccb ,_ddfe );_eag =_gbg .computeY (_ccb ,_ddfe );_aff :=_gbg .Patterns [_edag [_ccb ][_ddfe ]];if _aebf =_dge .Blit (_aff ,_gbg .HalftoneRegionBitmap ,_bfg +int (_gbg .HGridX ),_eag +int (_gbg .HGridY ),_gbg .CombinationOperator );
_aebf !=nil {return _aebf ;};};};return nil ;};func (_bgdd *TextRegion )String ()string {_fggcf :=&_ea .Builder {};_fggcf .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_fggcf .WriteString (_bgdd .RegionInfo .String ()+"\u000a");
_fggcf .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_bgdd .SbrTemplate ));_fggcf .WriteString (_dg .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_bgdd .SbDsOffset ));
_fggcf .WriteString (_dg .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_bgdd .DefaultPixel ));_fggcf .WriteString (_dg .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_bgdd .CombinationOperator ));
_fggcf .WriteString (_dg .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_bgdd .IsTransposed ));_fggcf .WriteString (_dg .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_bgdd .ReferenceCorner ));
_fggcf .WriteString (_dg .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_bgdd .UseRefinement ));_fggcf .WriteString (_dg .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_bgdd .IsHuffmanEncoded ));
if _bgdd .IsHuffmanEncoded {_fggcf .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_bgdd .SbHuffRSize ));_fggcf .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_bgdd .SbHuffRDY ));
_fggcf .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_bgdd .SbHuffRDX ));_fggcf .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_bgdd .SbHuffRDHeight ));
_fggcf .WriteString (_dg .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_bgdd .SbHuffRDWidth ));_fggcf .WriteString (_dg .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_bgdd .SbHuffDT ));
_fggcf .WriteString (_dg .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_bgdd .SbHuffDS ));_fggcf .WriteString (_dg .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_bgdd .SbHuffFS ));
};_fggcf .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bgdd .SbrATX ));_fggcf .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_bgdd .SbrATY ));
_fggcf .WriteString (_dg .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_bgdd .NumberOfSymbolInstances ));_fggcf .WriteString (_dg .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bgdd .SbrATX ));
return _fggcf .String ();};func (_bad *GenericRegion )InitEncode (bm *_dge .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _cgc ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _cd .Error (_cgc ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _cd .Error (_cgc ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_bad .Bitmap =bm ;_bad .GBTemplate =byte (template );switch _bad .GBTemplate {case 0:_bad .GBAtX =[]int8 {3,-3,2,-2};_bad .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_bad .GBAtX =[]int8 {3};_bad .GBAtY =[]int8 {-1};case 2,3:_bad .GBAtX =[]int8 {2};_bad .GBAtY =[]int8 {-1};
default:return _cd .Errorf (_cgc ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_bad .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_bad .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_ffa *GenericRegion )readGBAtPixels (_bgafd int )error {const _egc ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_ffa .GBAtX =make ([]int8 ,_bgafd );_ffa .GBAtY =make ([]int8 ,_bgafd );for _cggg :=0;_cggg < _bgafd ;_cggg ++{_dec ,_fbfe :=_ffa ._eaed .ReadByte ();if _fbfe !=nil {return _cd .Wrapf (_fbfe ,_egc ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_cggg );
};_ffa .GBAtX [_cggg ]=int8 (_dec );_dec ,_fbfe =_ffa ._eaed .ReadByte ();if _fbfe !=nil {return _cd .Wrapf (_fbfe ,_egc ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_cggg );};_ffa .GBAtY [_cggg ]=int8 (_dec );};return nil ;};
type TableSegment struct{_daaf _b .StreamReader ;_ffd int32 ;_fccf int32 ;_dbcfc int32 ;_aeeb int32 ;_cadf int32 ;};var _ templater =&template1 {};func (_eebg *SymbolDictionary )readNumberOfNewSymbols ()error {_bacf ,_eegf :=_eebg ._begg .ReadBits (32);
if _eegf !=nil {return _eegf ;};_eebg .NumberOfNewSymbols =uint32 (_bacf &_d .MaxUint32 );return nil ;};func (_gafe *GenericRegion )overrideAtTemplate2 (_ffbe ,_adcc ,_gfe ,_efca ,_aggbd int )int {_ffbe &=0x3FB;if _gafe .GBAtY [0]==0&&_gafe .GBAtX [0]>=-int8 (_aggbd ){_ffbe |=(_efca >>uint (7-(int8 (_aggbd )+_gafe .GBAtX [0]))&0x1)<<2;
}else {_ffbe |=int (_gafe .getPixel (_adcc +int (_gafe .GBAtX [0]),_gfe +int (_gafe .GBAtY [0])))<<2;};return _ffbe ;};func (_edae *HalftoneRegion )GetRegionBitmap ()(*_dge .Bitmap ,error ){if _edae .HalftoneRegionBitmap !=nil {return _edae .HalftoneRegionBitmap ,nil ;
};var _edfc error ;_edae .HalftoneRegionBitmap =_dge .New (int (_edae .RegionSegment .BitmapWidth ),int (_edae .RegionSegment .BitmapHeight ));if _edae .Patterns ==nil ||len (_edae .Patterns )==0{_edae .Patterns ,_edfc =_edae .GetPatterns ();if _edfc !=nil {return nil ,_edfc ;
};};if _edae .HDefaultPixel ==1{_edae .HalftoneRegionBitmap .SetDefaultPixel ();};_egg :=_d .Ceil (_d .Log (float64 (len (_edae .Patterns )))/_d .Log (2));_faa :=int (_egg );var _faad [][]int ;_faad ,_edfc =_edae .grayScaleDecoding (_faa );if _edfc !=nil {return nil ,_edfc ;
};if _edfc =_edae .renderPattern (_faad );_edfc !=nil {return nil ,_edfc ;};return _edae .HalftoneRegionBitmap ,nil ;};func (_afba *SymbolDictionary )checkInput ()error {if _afba .SdHuffDecodeHeightSelection ==2{_ad .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_afba .SdHuffDecodeHeightSelection );
};if _afba .SdHuffDecodeWidthSelection ==2{_ad .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_afba .SdHuffDecodeWidthSelection );
};if _afba .IsHuffmanEncoded {if _afba .SdTemplate !=0{_ad .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_afba .SdTemplate );
};if !_afba .UseRefinementAggregation {if !_afba .UseRefinementAggregation {if _afba ._bebbf {_ad .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_afba ._bebbf =false ;};if _afba ._afdd {_ad .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_afba ._afdd =false ;};};};}else {if _afba .SdHuffBMSizeSelection !=0{_ad .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_afba .SdHuffBMSizeSelection =0;};if _afba .SdHuffDecodeWidthSelection !=0{_ad .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_afba .SdHuffDecodeWidthSelection =0;};if _afba .SdHuffDecodeHeightSelection !=0{_ad .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_afba .SdHuffDecodeHeightSelection =0;};};if !_afba .UseRefinementAggregation {if _afba .SdrTemplate !=0{_ad .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_afba .SdrTemplate );
_afba .SdrTemplate =0;};};if !_afba .IsHuffmanEncoded ||!_afba .UseRefinementAggregation {if _afba .SdHuffAggInstanceSelection {_ad .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_afba .SdHuffAggInstanceSelection );
};};return nil ;};func (_ecaa *PageInformationSegment )readCombinationOperator ()error {_caee ,_dae :=_ecaa ._deec .ReadBits (2);if _dae !=nil {return _dae ;};_ecaa ._dgef =_dge .CombinationOperator (int (_caee ));return nil ;};func (_bacdg *TextRegion )decodeIds ()(int64 ,error ){const _ddfg ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";
if _bacdg .IsHuffmanEncoded {if _bacdg .SbHuffDS ==3{if _bacdg ._gfgad ==nil {_adcae :=0;if _bacdg .SbHuffFS ==3{_adcae ++;};var _cgac error ;_bacdg ._gfgad ,_cgac =_bacdg .getUserTable (_adcae );if _cgac !=nil {return 0,_cd .Wrap (_cgac ,_ddfg ,"");};
};return _bacdg ._gfgad .Decode (_bacdg ._daga );};_cbbf ,_fbfb :=_ae .GetStandardTable (8+int (_bacdg .SbHuffDS ));if _fbfb !=nil {return 0,_cd .Wrap (_fbfb ,_ddfg ,"");};return _cbbf .Decode (_bacdg ._daga );};_ebdf ,_eeae :=_bacdg ._dfaf .DecodeInt (_bacdg ._ffdf );
if _eeae !=nil {return 0,_cd .Wrap (_eeae ,_ddfg ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_ebdf ),nil ;};type HalftoneRegion struct{_fdg _b .StreamReader ;_gag *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;
RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _dge .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;
HalftoneRegionBitmap *_dge .Bitmap ;Patterns []*_dge .Bitmap ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;
SegmentDataStartOffset uint64 ;Reader _b .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};type SymbolDictionary struct{_begg _b .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_bebbf bool ;_afdd bool ;SdHuffAggInstanceSelection bool ;
SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;
Header *Header ;_fcaf uint32 ;_agcb []*_dge .Bitmap ;_eged uint32 ;_fcbe []*_dge .Bitmap ;_dcec _ae .Tabler ;_geef _ae .Tabler ;_beac _ae .Tabler ;_cccg _ae .Tabler ;_bgafde []*_dge .Bitmap ;_dfbec []*_dge .Bitmap ;_cfag *_fb .Decoder ;_egagd *TextRegion ;
_fecg *GenericRegion ;_aacce *GenericRefinementRegion ;_dfddg *_fb .DecoderStats ;_dbbf *_fb .DecoderStats ;_cdec *_fb .DecoderStats ;_aadb *_fb .DecoderStats ;_dfdf *_fb .DecoderStats ;_fcbc *_fb .DecoderStats ;_fbc *_fb .DecoderStats ;_aab *_fb .DecoderStats ;
_gdgfd *_fb .DecoderStats ;_bgfbc int8 ;_fgbd *_dge .Bitmaps ;_edeg []int ;_dedd map[int ]int ;_gfeg bool ;};func (_eebd *Header )writeSegmentDataLength (_eeaf _b .BinaryWriter )(_cccc int ,_aecea error ){_cagaf :=make ([]byte ,4);_e .BigEndian .PutUint32 (_cagaf ,uint32 (_eebd .SegmentDataLength ));
if _cccc ,_aecea =_eeaf .Write (_cagaf );_aecea !=nil {return 0,_cd .Wrap (_aecea ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _cccc ,nil ;
};func (_gecdf *TextRegion )symbolIDCodeLengths ()error {var (_dfgb []*_ae .Code ;_ecedf uint64 ;_feecd _ae .Tabler ;_bdae error ;);for _cagc :=0;_cagc < 35;_cagc ++{_ecedf ,_bdae =_gecdf ._daga .ReadBits (4);if _bdae !=nil {return _bdae ;};_aafa :=int (_ecedf &0xf);
if _aafa > 0{_dfgb =append (_dfgb ,_ae .NewCode (int32 (_aafa ),0,int32 (_cagc ),false ));};};_feecd ,_bdae =_ae .NewFixedSizeTable (_dfgb );if _bdae !=nil {return _bdae ;};var (_fce int64 ;_eefcd uint32 ;_cfgc []*_ae .Code ;_gaage int64 ;);for _eefcd < _gecdf .NumberOfSymbols {_gaage ,_bdae =_feecd .Decode (_gecdf ._daga );
if _bdae !=nil {return _bdae ;};if _gaage < 32{if _gaage > 0{_cfgc =append (_cfgc ,_ae .NewCode (int32 (_gaage ),0,int32 (_eefcd ),false ));};_fce =_gaage ;_eefcd ++;}else {var _geaa ,_gbede int64 ;switch _gaage {case 32:_ecedf ,_bdae =_gecdf ._daga .ReadBits (2);
if _bdae !=nil {return _bdae ;};_geaa =3+int64 (_ecedf );if _eefcd > 0{_gbede =_fce ;};case 33:_ecedf ,_bdae =_gecdf ._daga .ReadBits (3);if _bdae !=nil {return _bdae ;};_geaa =3+int64 (_ecedf );case 34:_ecedf ,_bdae =_gecdf ._daga .ReadBits (7);if _bdae !=nil {return _bdae ;
};_geaa =11+int64 (_ecedf );};for _cbacf :=0;_cbacf < int (_geaa );_cbacf ++{if _gbede > 0{_cfgc =append (_cfgc ,_ae .NewCode (int32 (_gbede ),0,int32 (_eefcd ),false ));};_eefcd ++;};};};_gecdf ._daga .Align ();_gecdf ._adad ,_bdae =_ae .NewFixedSizeTable (_cfgc );
return _bdae ;};func (_eff *GenericRegion )overrideAtTemplate3 (_dfgd ,_cceda ,_bbf ,_gdgf ,_cbaf int )int {_dfgd &=0x3EF;if _eff .GBAtY [0]==0&&_eff .GBAtX [0]>=-int8 (_cbaf ){_dfgd |=(_gdgf >>uint (7-(int8 (_cbaf )+_eff .GBAtX [0]))&0x1)<<4;}else {_dfgd |=int (_eff .getPixel (_cceda +int (_eff .GBAtX [0]),_bbf +int (_eff .GBAtY [0])))<<4;
};return _dfgd ;};func (_cgbbf *TextRegion )readRegionFlags ()error {var (_bbea int ;_ecgcb uint64 ;_fgfc error ;);_bbea ,_fgfc =_cgbbf ._daga .ReadBit ();if _fgfc !=nil {return _fgfc ;};_cgbbf .SbrTemplate =int8 (_bbea );_ecgcb ,_fgfc =_cgbbf ._daga .ReadBits (5);
if _fgfc !=nil {return _fgfc ;};_cgbbf .SbDsOffset =int8 (_ecgcb );if _cgbbf .SbDsOffset > 0x0f{_cgbbf .SbDsOffset -=0x20;};_bbea ,_fgfc =_cgbbf ._daga .ReadBit ();if _fgfc !=nil {return _fgfc ;};_cgbbf .DefaultPixel =int8 (_bbea );_ecgcb ,_fgfc =_cgbbf ._daga .ReadBits (2);
if _fgfc !=nil {return _fgfc ;};_cgbbf .CombinationOperator =_dge .CombinationOperator (int (_ecgcb )&0x3);_bbea ,_fgfc =_cgbbf ._daga .ReadBit ();if _fgfc !=nil {return _fgfc ;};_cgbbf .IsTransposed =int8 (_bbea );_ecgcb ,_fgfc =_cgbbf ._daga .ReadBits (2);
if _fgfc !=nil {return _fgfc ;};_cgbbf .ReferenceCorner =int16 (_ecgcb )&0x3;_ecgcb ,_fgfc =_cgbbf ._daga .ReadBits (2);if _fgfc !=nil {return _fgfc ;};_cgbbf .LogSBStrips =int16 (_ecgcb )&0x3;_cgbbf .SbStrips =1<<uint (_cgbbf .LogSBStrips );_bbea ,_fgfc =_cgbbf ._daga .ReadBit ();
if _fgfc !=nil {return _fgfc ;};if _bbea ==1{_cgbbf .UseRefinement =true ;};_bbea ,_fgfc =_cgbbf ._daga .ReadBit ();if _fgfc !=nil {return _fgfc ;};if _bbea ==1{_cgbbf .IsHuffmanEncoded =true ;};return nil ;};func NewRegionSegment (r _b .StreamReader )*RegionSegment {return &RegionSegment {_fggg :r }};
func (_edec *PageInformationSegment )encodeStripingInformation (_dddc _b .BinaryWriter )(_adcf int ,_decb error ){const _fcba ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";if !_edec .IsStripe {if _adcf ,_decb =_dddc .Write ([]byte {0x00,0x00});
_decb !=nil {return 0,_cd .Wrap (_decb ,_fcba ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _adcf ,nil ;};_ged :=make ([]byte ,2);_e .BigEndian .PutUint16 (_ged ,_edec .MaxStripeSize |1<<15);if _adcf ,_decb =_dddc .Write (_ged );
_decb !=nil {return 0,_cd .Wrapf (_decb ,_fcba ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_edec .MaxStripeSize );};return _adcf ,nil ;};func (_bdbb *template0 )form (_ccff ,_afd ,_fdfda ,_efab ,_gbb int16 )int16 {return (_ccff <<10)|(_afd <<7)|(_fdfda <<4)|(_efab <<1)|_gbb ;
};func (_dedb *SymbolDictionary )encodeRefinementATFlags (_gcdb _b .BinaryWriter )(_fbdc int ,_gdd error ){const _gggd ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if !_dedb .UseRefinementAggregation ||_dedb .SdrTemplate !=0{return 0,nil ;
};for _fdga :=0;_fdga < 2;_fdga ++{if _gdd =_gcdb .WriteByte (byte (_dedb .SdrATX [_fdga ]));_gdd !=nil {return _fbdc ,_cd .Wrapf (_gdd ,_gggd ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_fdga );};_fbdc ++;if _gdd =_gcdb .WriteByte (byte (_dedb .SdrATY [_fdga ]));
_gdd !=nil {return _fbdc ,_cd .Wrapf (_gdd ,_gggd ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_fdga );};_fbdc ++;};return _fbdc ,nil ;};func (_aade *PatternDictionary )GetDictionary ()([]*_dge .Bitmap ,error ){if _aade .Patterns !=nil {return _aade .Patterns ,nil ;
};if !_aade .IsMMREncoded {_aade .setGbAtPixels ();};_fdbd :=NewGenericRegion (_aade ._dgg );_fdbd .setParametersMMR (_aade .IsMMREncoded ,_aade .DataOffset ,_aade .DataLength ,uint32 (_aade .HdpHeight ),(_aade .GrayMax +1)*uint32 (_aade .HdpWidth ),_aade .HDTemplate ,false ,false ,_aade .GBAtX ,_aade .GBAtY );
_aae ,_adde :=_fdbd .GetRegionBitmap ();if _adde !=nil {return nil ,_adde ;};if _adde =_aade .extractPatterns (_aae );_adde !=nil {return nil ,_adde ;};return _aade .Patterns ,nil ;};func (_gfeb *TextRegion )readUseRefinement ()error {if !_gfeb .UseRefinement ||_gfeb .SbrTemplate !=0{return nil ;
};var (_gacd byte ;_dcdgc error ;);_gfeb .SbrATX =make ([]int8 ,2);_gfeb .SbrATY =make ([]int8 ,2);_gacd ,_dcdgc =_gfeb ._daga .ReadByte ();if _dcdgc !=nil {return _dcdgc ;};_gfeb .SbrATX [0]=int8 (_gacd );_gacd ,_dcdgc =_gfeb ._daga .ReadByte ();if _dcdgc !=nil {return _dcdgc ;
};_gfeb .SbrATY [0]=int8 (_gacd );_gacd ,_dcdgc =_gfeb ._daga .ReadByte ();if _dcdgc !=nil {return _dcdgc ;};_gfeb .SbrATX [1]=int8 (_gacd );_gacd ,_dcdgc =_gfeb ._daga .ReadByte ();if _dcdgc !=nil {return _dcdgc ;};_gfeb .SbrATY [1]=int8 (_gacd );return nil ;
};func (_dgfb *SymbolDictionary )readAtPixels (_ffgc int )error {_dgfb .SdATX =make ([]int8 ,_ffgc );_dgfb .SdATY =make ([]int8 ,_ffgc );var (_cbac byte ;_eebc error ;);for _fcgb :=0;_fcgb < _ffgc ;_fcgb ++{_cbac ,_eebc =_dgfb ._begg .ReadByte ();if _eebc !=nil {return _eebc ;
};_dgfb .SdATX [_fcgb ]=int8 (_cbac );_cbac ,_eebc =_dgfb ._begg .ReadByte ();if _eebc !=nil {return _eebc ;};_dgfb .SdATY [_fcgb ]=int8 (_cbac );};return nil ;};func (_ddg *Header )writeReferredToSegments (_edfd _b .BinaryWriter )(_ceff int ,_adbdc error ){const _acfc ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_edgb uint16 ;_ceae uint32 ;);_dgag :=_ddg .referenceSize ();_bcfb :=1;_cdgg :=make ([]byte ,_dgag );for _ ,_fbdf :=range _ddg .RTSNumbers {switch _dgag {case 4:_ceae =uint32 (_fbdf );_e .BigEndian .PutUint32 (_cdgg ,_ceae );_bcfb ,_adbdc =_edfd .Write (_cdgg );
if _adbdc !=nil {return 0,_cd .Wrap (_adbdc ,_acfc ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_edgb =uint16 (_fbdf );_e .BigEndian .PutUint16 (_cdgg ,_edgb );_bcfb ,_adbdc =_edfd .Write (_cdgg );if _adbdc !=nil {return 0,_cd .Wrap (_adbdc ,_acfc ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _adbdc =_edfd .WriteByte (byte (_fbdf ));_adbdc !=nil {return 0,_cd .Wrap (_adbdc ,_acfc ,"\u0075\u0069\u006et\u0038");};};_ceff +=_bcfb ;};return _ceff ,nil ;};func (_gdcea *PatternDictionary )readTemplate ()error {_agcc ,_agdb :=_gdcea ._dgg .ReadBits (2);
if _agdb !=nil {return _agdb ;};_gdcea .HDTemplate =byte (_agcc );return nil ;};func _cegd (_effg int )int {if _effg ==0{return 0;};_effg |=_effg >>1;_effg |=_effg >>2;_effg |=_effg >>4;_effg |=_effg >>8;_effg |=_effg >>16;return (_effg +1)>>1;};func (_agdd *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _agdd .IsHuffmanEncoded {switch _agdd .SdHuffDecodeWidthSelection {case 0:_daccd ,_cageb :=_ae .GetStandardTable (2);
if _cageb !=nil {return 0,_cageb ;};return _daccd .Decode (_agdd ._begg );case 1:_faada ,_cegf :=_ae .GetStandardTable (3);if _cegf !=nil {return 0,_cegf ;};return _faada .Decode (_agdd ._begg );case 3:if _agdd ._geef ==nil {var _ecff int ;if _agdd .SdHuffDecodeHeightSelection ==3{_ecff ++;
};_afcd ,_gac :=_agdd .getUserTable (_ecff );if _gac !=nil {return 0,_gac ;};_agdd ._geef =_afcd ;};return _agdd ._geef .Decode (_agdd ._begg );};}else {_bcga ,_dgfc :=_agdd ._cfag .DecodeInt (_agdd ._cdec );if _dgfc !=nil {return 0,_dgfc ;};return int64 (_bcga ),nil ;
};return 0,nil ;};func (_ggf *TextRegion )encodeFlags (_ecgcc _b .BinaryWriter )(_eccgb int ,_dcaa error ){const _bffb ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _dcaa =_ecgcc .WriteBit (int (_ggf .SbrTemplate ));_dcaa !=nil {return _eccgb ,_cd .Wrap (_dcaa ,_bffb ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};if _ ,_dcaa =_ecgcc .WriteBits (uint64 (_ggf .SbDsOffset ),5);_dcaa !=nil {return _eccgb ,_cd .Wrap (_dcaa ,_bffb ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _dcaa =_ecgcc .WriteBit (int (_ggf .DefaultPixel ));_dcaa !=nil {return _eccgb ,_cd .Wrap (_dcaa ,_bffb ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");
};if _ ,_dcaa =_ecgcc .WriteBits (uint64 (_ggf .CombinationOperator ),2);_dcaa !=nil {return _eccgb ,_cd .Wrap (_dcaa ,_bffb ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _dcaa =_ecgcc .WriteBit (int (_ggf .IsTransposed ));
_dcaa !=nil {return _eccgb ,_cd .Wrap (_dcaa ,_bffb ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_dcaa =_ecgcc .WriteBits (uint64 (_ggf .ReferenceCorner ),2);_dcaa !=nil {return _eccgb ,_cd .Wrap (_dcaa ,_bffb ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");
};if _ ,_dcaa =_ecgcc .WriteBits (uint64 (_ggf .LogSBStrips ),2);_dcaa !=nil {return _eccgb ,_cd .Wrap (_dcaa ,_bffb ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _bfbe int ;if _ggf .UseRefinement {_bfbe =1;};if _dcaa =_ecgcc .WriteBit (_bfbe );
_dcaa !=nil {return _eccgb ,_cd .Wrap (_dcaa ,_bffb ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_bfbe =0;if _ggf .IsHuffmanEncoded {_bfbe =1;};if _dcaa =_ecgcc .WriteBit (_bfbe );_dcaa !=nil {return _eccgb ,_cd .Wrap (_dcaa ,_bffb ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");
};_eccgb =2;return _eccgb ,nil ;};func (_cdga *SymbolDictionary )parseHeader ()(_aabg error ){_ad .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _aabg !=nil {_ad .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_aabg );
}else {_ad .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _aabg =_cdga .readRegionFlags ();_aabg !=nil {return _aabg ;};if _aabg =_cdga .setAtPixels ();_aabg !=nil {return _aabg ;};if _aabg =_cdga .setRefinementAtPixels ();_aabg !=nil {return _aabg ;};if _aabg =_cdga .readNumberOfExportedSymbols ();_aabg !=nil {return _aabg ;
};if _aabg =_cdga .readNumberOfNewSymbols ();_aabg !=nil {return _aabg ;};if _aabg =_cdga .setInSyms ();_aabg !=nil {return _aabg ;};if _cdga ._afdd {_ededd :=_cdga .Header .RTSegments ;for _faaaf :=len (_ededd )-1;_faaaf >=0;_faaaf --{if _ededd [_faaaf ].Type ==0{_fggec ,_dcad :=_ededd [_faaaf ].SegmentData .(*SymbolDictionary );
if !_dcad {_aabg =_dg .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_ededd [_faaaf ]);
return _aabg ;};if _fggec ._afdd {_cdga .setRetainedCodingContexts (_fggec );};break ;};};};if _aabg =_cdga .checkInput ();_aabg !=nil {return _aabg ;};return nil ;};const (ORandom OrganizationType =iota ;OSequential ;);func (_cdf *TextRegion )initSymbols ()error {const _baace ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_bfccg :=range _cdf .Header .RTSegments {if _bfccg ==nil {return _cd .Error (_baace ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _bfccg .Type ==0{_gaaa ,_bedc :=_bfccg .GetSegmentData ();if _bedc !=nil {return _cd .Wrap (_bedc ,_baace ,"");};_efedd ,_acdd :=_gaaa .(*SymbolDictionary );if !_acdd {return _cd .Error (_baace ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_efedd ._gdgfd =_cdf ._cbee ;_cfaa ,_bedc :=_efedd .GetDictionary ();if _bedc !=nil {return _cd .Wrap (_bedc ,_baace ,"");};_cdf .Symbols =append (_cdf .Symbols ,_cfaa ...);};};_cdf .NumberOfSymbols =uint32 (len (_cdf .Symbols ));return nil ;};func (_fcab *Header )writeFlags (_agag _b .BinaryWriter )(_bce error ){const _cddba ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_abcf :=byte (_fcab .Type );if _bce =_agag .WriteByte (_abcf );_bce !=nil {return _cd .Wrap (_bce ,_cddba ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_fcab .RetainFlag &&!_fcab .PageAssociationFieldSize {return nil ;};if _bce =_agag .SkipBits (-8);_bce !=nil {return _cd .Wrap (_bce ,_cddba ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _fdad int ;if _fcab .RetainFlag {_fdad =1;};if _bce =_agag .WriteBit (_fdad );_bce !=nil {return _cd .Wrap (_bce ,_cddba ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_fdad =0;if _fcab .PageAssociationFieldSize {_fdad =1;
};if _bce =_agag .WriteBit (_fdad );_bce !=nil {return _cd .Wrap (_bce ,_cddba ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_agag .FinishByte ();return nil ;};var (_ Regioner =&TextRegion {};
_ Segmenter =&TextRegion {};);type GenericRegion struct{_eaed _b .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;
UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_eab bool ;Bitmap *_dge .Bitmap ;_fdb *_fb .Decoder ;_ceg *_fb .DecoderStats ;_ccdf *_ac .Decoder ;};func (_accg *PatternDictionary )readGrayMax ()error {_cgba ,_daef :=_accg ._dgg .ReadBits (32);
if _daef !=nil {return _daef ;};_accg .GrayMax =uint32 (_cgba &_d .MaxUint32 );return nil ;};func (_fea *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_abg ,_aag ,_gfff ,_ceaf ,_ggb ,_edda ,_cda ,_gda ,_aef int )(_fae error ){var (_db ,_gee int ;
_cg ,_ga int ;_fdc ,_gfb int ;_dfe byte ;);if _abg > 0{_dfe ,_fae =_fea .RegionBitmap .GetByte (_cda -_gfff );if _fae !=nil {return ;};_cg =int (_dfe );};if _gda > 0&&_gda <=_fea .ReferenceBitmap .Height {_dfe ,_fae =_fea .ReferenceBitmap .GetByte (_aef -_ceaf +_edda );
if _fae !=nil {return ;};_ga =int (_dfe )<<2;};if _gda >=0&&_gda < _fea .ReferenceBitmap .Height {_dfe ,_fae =_fea .ReferenceBitmap .GetByte (_aef +_edda );if _fae !=nil {return ;};_fdc =int (_dfe );};if _gda > -2&&_gda < _fea .ReferenceBitmap .Height -1{_dfe ,_fae =_fea .ReferenceBitmap .GetByte (_aef +_ceaf +_edda );
if _fae !=nil {return ;};_gfb =int (_dfe );};_db =((_cg >>5)&0x6)|((_gfb >>2)&0x30)|(_fdc &0xc0)|(_ga &0x200);_gee =((_gfb >>2)&0x70)|(_fdc &0xc0)|(_ga &0x700);var _gga int ;for _acf :=0;_acf < _ggb ;_acf =_gga {var (_efc int ;_fab int ;);_gga =_acf +8;
if _efc =_aag -_acf ;_efc > 8{_efc =8;};_ada :=_gga < _aag ;_feb :=_gga < _fea .ReferenceBitmap .Width ;_acgg :=_edda +1;if _abg > 0{_dfe =0;if _ada {_dfe ,_fae =_fea .RegionBitmap .GetByte (_cda -_gfff +1);if _fae !=nil {return ;};};_cg =(_cg <<8)|int (_dfe );
};if _gda > 0&&_gda <=_fea .ReferenceBitmap .Height {var _dag int ;if _feb {_dfe ,_fae =_fea .ReferenceBitmap .GetByte (_aef -_ceaf +_acgg );if _fae !=nil {return ;};_dag =int (_dfe )<<2;};_ga =(_ga <<8)|_dag ;};if _gda >=0&&_gda < _fea .ReferenceBitmap .Height {_dfe =0;
if _feb {_dfe ,_fae =_fea .ReferenceBitmap .GetByte (_aef +_acgg );if _fae !=nil {return ;};};_fdc =(_fdc <<8)|int (_dfe );};if _gda > -2&&_gda < (_fea .ReferenceBitmap .Height -1){_dfe =0;if _feb {_dfe ,_fae =_fea .ReferenceBitmap .GetByte (_aef +_ceaf +_acgg );
if _fae !=nil {return ;};};_gfb =(_gfb <<8)|int (_dfe );};for _gfd :=0;_gfd < _efc ;_gfd ++{var _abeg int ;_gggc :=(_gee >>4)&0x1ff;switch _gggc {case 0x1ff:_abeg =1;case 0x00:_abeg =0;default:_fea ._fc .SetIndex (int32 (_db ));_abeg ,_fae =_fea ._ef .DecodeBit (_fea ._fc );
if _fae !=nil {return ;};};_ccd :=uint (7-_gfd );_fab |=_abeg <<_ccd ;_db =((_db &0x0d6)<<1)|_abeg |(_cg >>_ccd +5)&0x002|((_gfb >>_ccd +2)&0x010)|((_fdc >>_ccd )&0x040)|((_ga >>_ccd )&0x200);_gee =((_gee &0xdb)<<1)|((_gfb >>_ccd +2)&0x010)|((_fdc >>_ccd )&0x080)|((_ga >>_ccd )&0x400);
};_fae =_fea .RegionBitmap .SetByte (_cda ,byte (_fab ));if _fae !=nil {return ;};_cda ++;_aef ++;};return nil ;};func (_feec *SymbolDictionary )getSbSymCodeLen ()int8 {_acec :=int8 (_d .Ceil (_d .Log (float64 (_feec ._fcaf +_feec .NumberOfNewSymbols ))/_d .Log (2)));
if _feec .IsHuffmanEncoded &&_acec < 1{return 1;};return _acec ;};func (_fecb *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_fged ,_cadb :=_fecb ._deec .ReadBit ();if _cadb !=nil {return _cadb ;};if _fged ==1{_fecb ._cbfd =true ;
};return nil ;};