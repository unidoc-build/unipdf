//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_bd "encoding/binary";_gg "errors";_c "fmt";_cb "github.com/unidoc/unipdf/v3/common";_cc "github.com/unidoc/unipdf/v3/internal/bitwise";_gge "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ea "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_a "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_ge "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_bc "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_gd "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_cg "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_df "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_eg "golang.org/x/xerrors";_g "image";_f "io";_b "math";_ef "strings";_d "time";);type Pager interface{GetSegment (int )(*Header ,error );
GetBitmap ()(*_ea .Bitmap ,error );};type OrganizationType uint8 ;func (_gfdg *TextRegion )symbolIDCodeLengths ()error {var (_abcg []*_ge .Code ;_gdfg uint64 ;_aedcd _ge .Tabler ;_bgbgg error ;);for _bcef :=0;_bcef < 35;_bcef ++{_gdfg ,_bgbgg =_gfdg ._egge .ReadBits (4);
if _bgbgg !=nil {return _bgbgg ;};_gcgea :=int (_gdfg &0xf);if _gcgea > 0{_abcg =append (_abcg ,_ge .NewCode (int32 (_gcgea ),0,int32 (_bcef ),false ));};};_aedcd ,_bgbgg =_ge .NewFixedSizeTable (_abcg );if _bgbgg !=nil {return _bgbgg ;};var (_fdeb int64 ;
_gfaf uint32 ;_fdfe []*_ge .Code ;_fcfc int64 ;);for _gfaf < _gfdg .NumberOfSymbols {_fcfc ,_bgbgg =_aedcd .Decode (_gfdg ._egge );if _bgbgg !=nil {return _bgbgg ;};if _fcfc < 32{if _fcfc > 0{_fdfe =append (_fdfe ,_ge .NewCode (int32 (_fcfc ),0,int32 (_gfaf ),false ));
};_fdeb =_fcfc ;_gfaf ++;}else {var _agcf ,_dfeef int64 ;switch _fcfc {case 32:_gdfg ,_bgbgg =_gfdg ._egge .ReadBits (2);if _bgbgg !=nil {return _bgbgg ;};_agcf =3+int64 (_gdfg );if _gfaf > 0{_dfeef =_fdeb ;};case 33:_gdfg ,_bgbgg =_gfdg ._egge .ReadBits (3);
if _bgbgg !=nil {return _bgbgg ;};_agcf =3+int64 (_gdfg );case 34:_gdfg ,_bgbgg =_gfdg ._egge .ReadBits (7);if _bgbgg !=nil {return _bgbgg ;};_agcf =11+int64 (_gdfg );};for _bgdc :=0;_bgdc < int (_agcf );_bgdc ++{if _dfeef > 0{_fdfe =append (_fdfe ,_ge .NewCode (int32 (_dfeef ),0,int32 (_gfaf ),false ));
};_gfaf ++;};};};_gfdg ._egge .Align ();_gfdg ._fgdd ,_bgbgg =_ge .NewFixedSizeTable (_fdfe );return _bgbgg ;};func (_accb *PageInformationSegment )Size ()int {return 19};func (_dgfc *SymbolDictionary )encodeSymbols (_befd _cc .BinaryWriter )(_eefdd int ,_fbaa error ){const _bdeg ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_bcge :=_gd .New ();_bcge .Init ();_bgaf ,_fbaa :=_dgfc ._gbgb .SelectByIndexes (_dgfc ._eefd );if _fbaa !=nil {return 0,_cg .Wrap (_fbaa ,_bdeg ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_gead :=map[*_ea .Bitmap ]int {};for _eebf ,_dbfef :=range _bgaf .Values {_gead [_dbfef ]=_eebf ;
};_bgaf .SortByHeight ();var _cfcc ,_gdae int ;_bab ,_fbaa :=_bgaf .GroupByHeight ();if _fbaa !=nil {return 0,_cg .Wrap (_fbaa ,_bdeg ,"");};for _ ,_bfcbg :=range _bab .Values {_ddggc :=_bfcbg .Values [0].Height ;_gcfgf :=_ddggc -_cfcc ;if _fbaa =_bcge .EncodeInteger (_gd .IADH ,_gcfgf );
_fbaa !=nil {return 0,_cg .Wrapf (_fbaa ,_bdeg ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_gcfgf );};_cfcc =_ddggc ;_dfcf ,_bdaa :=_bfcbg .GroupByWidth ();if _bdaa !=nil {return 0,_cg .Wrapf (_bdaa ,_bdeg ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_ddggc );
};var _aafe int ;for _ ,_cebb :=range _dfcf .Values {for _ ,_bfefb :=range _cebb .Values {_bgd :=_bfefb .Width ;_cbgd :=_bgd -_aafe ;if _bdaa =_bcge .EncodeInteger (_gd .IADW ,_cbgd );_bdaa !=nil {return 0,_cg .Wrapf (_bdaa ,_bdeg ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_cbgd );
};_aafe +=_cbgd ;if _bdaa =_bcge .EncodeBitmap (_bfefb ,false );_bdaa !=nil {return 0,_cg .Wrapf (_bdaa ,_bdeg ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_ddggc ,_bgd );};_cddff :=_gead [_bfefb ];
_dgfc ._dfaf [_cddff ]=_gdae ;_gdae ++;};};if _bdaa =_bcge .EncodeOOB (_gd .IADW );_bdaa !=nil {return 0,_cg .Wrap (_bdaa ,_bdeg ,"\u0049\u0041\u0044\u0057");};};if _fbaa =_bcge .EncodeInteger (_gd .IAEX ,0);_fbaa !=nil {return 0,_cg .Wrap (_fbaa ,_bdeg ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _fbaa =_bcge .EncodeInteger (_gd .IAEX ,len (_dgfc ._eefd ));_fbaa !=nil {return 0,_cg .Wrap (_fbaa ,_bdeg ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_bcge .Final ();_ccbc ,_fbaa :=_bcge .WriteTo (_befd );
if _fbaa !=nil {return 0,_cg .Wrap (_fbaa ,_bdeg ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_ccbc ),nil ;};var _ SegmentEncoder =&GenericRegion {};func (_faab *TextRegion )blit (_dbdf *_ea .Bitmap ,_aggf int64 )error {if _faab .IsTransposed ==0&&(_faab .ReferenceCorner ==2||_faab .ReferenceCorner ==3){_faab ._cafa +=int64 (_dbdf .Width -1);
}else if _faab .IsTransposed ==1&&(_faab .ReferenceCorner ==0||_faab .ReferenceCorner ==2){_faab ._cafa +=int64 (_dbdf .Height -1);};_bddg :=_faab ._cafa ;if _faab .IsTransposed ==1{_bddg ,_aggf =_aggf ,_bddg ;};switch _faab .ReferenceCorner {case 0:_aggf -=int64 (_dbdf .Height -1);
case 2:_aggf -=int64 (_dbdf .Height -1);_bddg -=int64 (_dbdf .Width -1);case 3:_bddg -=int64 (_dbdf .Width -1);};_bacb :=_ea .Blit (_dbdf ,_faab .RegionBitmap ,int (_bddg ),int (_aggf ),_faab .CombinationOperator );if _bacb !=nil {return _bacb ;};if _faab .IsTransposed ==0&&(_faab .ReferenceCorner ==0||_faab .ReferenceCorner ==1){_faab ._cafa +=int64 (_dbdf .Width -1);
};if _faab .IsTransposed ==1&&(_faab .ReferenceCorner ==1||_faab .ReferenceCorner ==3){_faab ._cafa +=int64 (_dbdf .Height -1);};return nil ;};func (_dbgac *TableSegment )HtOOB ()int32 {return _dbgac ._ffbf };func (_gcad *SymbolDictionary )String ()string {_gceb :=&_ef .Builder {};
_gceb .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_gceb .WriteString (_c .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_gcad .SdrTemplate ));
_gceb .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_gcad .SdTemplate ));_gceb .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_gcad ._cdge ));
_gceb .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_gcad ._efba ));_gceb .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_gcad .SdHuffAggInstanceSelection ));
_gceb .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_gcad .SdHuffBMSizeSelection ));_gceb .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_gcad .SdHuffDecodeWidthSelection ));
_gceb .WriteString (_c .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_gcad .SdHuffDecodeHeightSelection ));_gceb .WriteString (_c .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_gcad .UseRefinementAggregation ));
_gceb .WriteString (_c .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_gcad .IsHuffmanEncoded ));_gceb .WriteString (_c .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_gcad .SdATX ));
_gceb .WriteString (_c .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_gcad .SdATY ));_gceb .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_gcad .SdrATX ));_gceb .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_gcad .SdrATY ));
_gceb .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_gcad .NumberOfExportedSymbols ));_gceb .WriteString (_c .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_gcad .NumberOfNewSymbols ));
_gceb .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_gcad ._bdce ));_gceb .WriteString (_c .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_gcad ._fecdc ));
return _gceb .String ();};func (_ffccd *SymbolDictionary )decodeHeightClassBitmap (_dcee *_ea .Bitmap ,_eabc int64 ,_bfbec int ,_fbfc []int )error {for _ggag :=_eabc ;_ggag < int64 (_ffccd ._fecdc );_ggag ++{var _gdead int ;for _agbf :=_eabc ;_agbf <=_ggag -1;
_agbf ++{_gdead +=_fbfc [_agbf ];};_deag :=_g .Rect (_gdead ,0,_gdead +_fbfc [_ggag ],_bfbec );_ebbd ,_eagb :=_ea .Extract (_deag ,_dcee );if _eagb !=nil {return _eagb ;};_ffccd ._dcgg [_ggag ]=_ebbd ;_ffccd ._cddf =append (_ffccd ._cddf ,_ebbd );};return nil ;
};func (_decag *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _decag ._bfgbe };func (_gggb *PageInformationSegment )String ()string {_fdaa :=&_ef .Builder {};_fdaa .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_fdaa .WriteString (_c .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_gggb .PageBMHeight ));_fdaa .WriteString (_c .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_gggb .PageBMWidth ));
_fdaa .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_gggb .ResolutionX ));_fdaa .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_gggb .ResolutionY ));
_fdaa .WriteString (_c .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_gggb ._gbga ));_fdaa .WriteString (_c .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_gggb ._bfgbe ));
_fdaa .WriteString (_c .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_gggb .IsLossless ));_fdaa .WriteString (_c .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_gggb ._gdfa ));
_fdaa .WriteString (_c .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_gggb ._cfafc ));_fdaa .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_gggb .IsStripe ));
_fdaa .WriteString (_c .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_gggb .MaxStripeSize ));return _fdaa .String ();};func (_ddef *GenericRegion )setOverrideFlag (_efddd int ){_ddef .GBAtOverride [_efddd ]=true ;
_ddef ._gfea =true ;};func (_aabb *TextRegion )decodeStripT ()(_becef int64 ,_cgab error ){if _aabb .IsHuffmanEncoded {if _aabb .SbHuffDT ==3{if _aabb ._cbgcg ==nil {var _adb int ;if _aabb .SbHuffFS ==3{_adb ++;};if _aabb .SbHuffDS ==3{_adb ++;};_aabb ._cbgcg ,_cgab =_aabb .getUserTable (_adb );
if _cgab !=nil {return 0,_cgab ;};};_becef ,_cgab =_aabb ._cbgcg .Decode (_aabb ._egge );if _cgab !=nil {return 0,_cgab ;};}else {var _efgb _ge .Tabler ;_efgb ,_cgab =_ge .GetStandardTable (11+int (_aabb .SbHuffDT ));if _cgab !=nil {return 0,_cgab ;};_becef ,_cgab =_efgb .Decode (_aabb ._egge );
if _cgab !=nil {return 0,_cgab ;};};}else {var _fcba int32 ;_fcba ,_cgab =_aabb ._cddgg .DecodeInt (_aabb ._dcbb );if _cgab !=nil {return 0,_cgab ;};_becef =int64 (_fcba );};_becef *=int64 (-_aabb .SbStrips );return _becef ,nil ;};func (_dcdcb *HalftoneRegion )computeSegmentDataStructure ()error {_dcdcb .DataOffset =_dcdcb ._ggf .AbsolutePosition ();
_dcdcb .DataHeaderLength =_dcdcb .DataOffset -_dcdcb .DataHeaderOffset ;_dcdcb .DataLength =int64 (_dcdcb ._ggf .AbsoluteLength ())-_dcdcb .DataHeaderLength ;return nil ;};func (_fgee *TextRegion )decodeRdh ()(int64 ,error ){const _gagg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";
if _fgee .IsHuffmanEncoded {if _fgee .SbHuffRDHeight ==3{if _fgee ._baba ==nil {var (_gecc int ;_gaecf error ;);if _fgee .SbHuffFS ==3{_gecc ++;};if _fgee .SbHuffDS ==3{_gecc ++;};if _fgee .SbHuffDT ==3{_gecc ++;};if _fgee .SbHuffRDWidth ==3{_gecc ++;};
_fgee ._baba ,_gaecf =_fgee .getUserTable (_gecc );if _gaecf !=nil {return 0,_cg .Wrap (_gaecf ,_gagg ,"");};};return _fgee ._baba .Decode (_fgee ._egge );};_bbbc ,_aecf :=_ge .GetStandardTable (14+int (_fgee .SbHuffRDHeight ));if _aecf !=nil {return 0,_cg .Wrap (_aecf ,_gagg ,"");
};return _bbbc .Decode (_fgee ._egge );};_eceg ,_cgfe :=_fgee ._cddgg .DecodeInt (_fgee ._cafgg );if _cgfe !=nil {return 0,_cg .Wrap (_cgfe ,_gagg ,"");};return int64 (_eceg ),nil ;};func (_aad *GenericRegion )String ()string {_edg :=&_ef .Builder {};_edg .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_edg .WriteString (_aad .RegionSegment .String ()+"\u000a");_edg .WriteString (_c .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_aad .UseExtTemplates ));_edg .WriteString (_c .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_aad .IsTPGDon ));
_edg .WriteString (_c .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_aad .GBTemplate ));_edg .WriteString (_c .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_aad .IsMMREncoded ));
_edg .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_aad .GBAtX ));_edg .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_aad .GBAtY ));
_edg .WriteString (_c .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_aad .GBAtOverride ));return _edg .String ();};func (_adeb *HalftoneRegion )renderPattern (_bdfa [][]int )(_geb error ){var _eegb ,_ageb int ;
for _gaec :=0;_gaec < int (_adeb .HGridHeight );_gaec ++{for _dddd :=0;_dddd < int (_adeb .HGridWidth );_dddd ++{_eegb =_adeb .computeX (_gaec ,_dddd );_ageb =_adeb .computeY (_gaec ,_dddd );_befe :=_adeb .Patterns [_bdfa [_gaec ][_dddd ]];if _geb =_ea .Blit (_befe ,_adeb .HalftoneRegionBitmap ,_eegb +int (_adeb .HGridX ),_ageb +int (_adeb .HGridY ),_adeb .CombinationOperator );
_geb !=nil {return _geb ;};};};return nil ;};func (_afgfg *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_dcec :=range _afgfg .Header .RTSegments {if _dcec .Type ==0{_dcga ,_cdac :=_dcec .GetSegmentData ();if _cdac !=nil {return _cdac ;};_dceca ,_decc :=_dcga .(*SymbolDictionary );
if !_decc {return _c .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_dcga );
};_cgaa ,_cdac :=_dceca .GetDictionary ();if _cdac !=nil {return _c .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_dcec .SegmentNumber ,_cdac .Error ());
};_afgfg ._gbca =append (_afgfg ._gbca ,_cgaa ...);_afgfg ._bdce +=_dceca .NumberOfExportedSymbols ;};};return nil ;};func (_adce *GenericRegion )getPixel (_cbcg ,_bege int )int8 {if _cbcg < 0||_cbcg >=_adce .Bitmap .Width {return 0;};if _bege < 0||_bege >=_adce .Bitmap .Height {return 0;
};if _adce .Bitmap .GetPixel (_cbcg ,_bege ){return 1;};return 0;};func (_gfag *Header )readSegmentPageAssociation (_fdda Documenter ,_ebdad *_cc .Reader ,_dgeg uint64 ,_gcdd ...int )(_gbdc error ){const _fcde ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_gfag .PageAssociationFieldSize {_faa ,_ege :=_ebdad .ReadBits (8);if _ege !=nil {return _cg .Wrap (_ege ,_fcde ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gfag .PageAssociation =int (_faa &0xFF);}else {_gdca ,_ggdg :=_ebdad .ReadBits (32);
if _ggdg !=nil {return _cg .Wrap (_ggdg ,_fcde ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gfag .PageAssociation =int (_gdca &_b .MaxInt32 );};if _dgeg ==0{return nil ;};if _gfag .PageAssociation !=0{_cefge ,_daeg :=_fdda .GetPage (_gfag .PageAssociation );
if _daeg !=nil {return _cg .Wrap (_daeg ,_fcde ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _dcbda int ;for _dcfa :=uint64 (0);_dcfa < _dgeg ;_dcfa ++{_dcbda =_gcdd [_dcfa ];
_gfag .RTSegments [_dcfa ],_daeg =_cefge .GetSegment (_dcbda );if _daeg !=nil {var _deef error ;_gfag .RTSegments [_dcfa ],_deef =_fdda .GetGlobalSegment (_dcbda );if _deef !=nil {return _cg .Wrapf (_daeg ,_fcde ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_gfag .PageAssociation );
};};};return nil ;};for _dege :=uint64 (0);_dege < _dgeg ;_dege ++{_gfag .RTSegments [_dege ],_gbdc =_fdda .GetGlobalSegment (_gcdd [_dege ]);if _gbdc !=nil {return _cg .Wrapf (_gbdc ,_fcde ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_gcdd [_dege ]);
};};return nil ;};func (_afbe *PatternDictionary )readIsMMREncoded ()error {_acea ,_agfd :=_afbe ._ccgb .ReadBit ();if _agfd !=nil {return _agfd ;};if _acea !=0{_afbe .IsMMREncoded =true ;};return nil ;};func _eba (_gfbb int )int {if _gfbb ==0{return 0;
};_gfbb |=_gfbb >>1;_gfbb |=_gfbb >>2;_gfbb |=_gfbb >>4;_gfbb |=_gfbb >>8;_gfbb |=_gfbb >>16;return (_gfbb +1)>>1;};func (_ffgg *HalftoneRegion )GetRegionBitmap ()(*_ea .Bitmap ,error ){if _ffgg .HalftoneRegionBitmap !=nil {return _ffgg .HalftoneRegionBitmap ,nil ;
};var _dgbd error ;_ffgg .HalftoneRegionBitmap =_ea .New (int (_ffgg .RegionSegment .BitmapWidth ),int (_ffgg .RegionSegment .BitmapHeight ));if _ffgg .Patterns ==nil ||len (_ffgg .Patterns )==0{_ffgg .Patterns ,_dgbd =_ffgg .GetPatterns ();if _dgbd !=nil {return nil ,_dgbd ;
};};if _ffgg .HDefaultPixel ==1{_ffgg .HalftoneRegionBitmap .SetDefaultPixel ();};_cgac :=_b .Ceil (_b .Log (float64 (len (_ffgg .Patterns )))/_b .Log (2));_effc :=int (_cgac );var _cebc [][]int ;_cebc ,_dgbd =_ffgg .grayScaleDecoding (_effc );if _dgbd !=nil {return nil ,_dgbd ;
};if _dgbd =_ffgg .renderPattern (_cebc );_dgbd !=nil {return nil ,_dgbd ;};return _ffgg .HalftoneRegionBitmap ,nil ;};func (_cfec *SymbolDictionary )setExportedSymbols (_agfe []int ){for _deefd :=uint32 (0);_deefd < _cfec ._bdce +_cfec .NumberOfNewSymbols ;
_deefd ++{if _agfe [_deefd ]==1{var _feecb *_ea .Bitmap ;if _deefd < _cfec ._bdce {_feecb =_cfec ._gbca [_deefd ];}else {_feecb =_cfec ._dcgg [_deefd -_cfec ._bdce ];};_cb .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_feecb );
_cfec ._ffeb =append (_cfec ._ffeb ,_feecb );};};};func (_eebb *TextRegion )readRegionFlags ()error {var (_cgfeb int ;_afbc uint64 ;_ggfe error ;);_cgfeb ,_ggfe =_eebb ._egge .ReadBit ();if _ggfe !=nil {return _ggfe ;};_eebb .SbrTemplate =int8 (_cgfeb );
_afbc ,_ggfe =_eebb ._egge .ReadBits (5);if _ggfe !=nil {return _ggfe ;};_eebb .SbDsOffset =int8 (_afbc );if _eebb .SbDsOffset > 0x0f{_eebb .SbDsOffset -=0x20;};_cgfeb ,_ggfe =_eebb ._egge .ReadBit ();if _ggfe !=nil {return _ggfe ;};_eebb .DefaultPixel =int8 (_cgfeb );
_afbc ,_ggfe =_eebb ._egge .ReadBits (2);if _ggfe !=nil {return _ggfe ;};_eebb .CombinationOperator =_ea .CombinationOperator (int (_afbc )&0x3);_cgfeb ,_ggfe =_eebb ._egge .ReadBit ();if _ggfe !=nil {return _ggfe ;};_eebb .IsTransposed =int8 (_cgfeb );
_afbc ,_ggfe =_eebb ._egge .ReadBits (2);if _ggfe !=nil {return _ggfe ;};_eebb .ReferenceCorner =int16 (_afbc )&0x3;_afbc ,_ggfe =_eebb ._egge .ReadBits (2);if _ggfe !=nil {return _ggfe ;};_eebb .LogSBStrips =int16 (_afbc )&0x3;_eebb .SbStrips =1<<uint (_eebb .LogSBStrips );
_cgfeb ,_ggfe =_eebb ._egge .ReadBit ();if _ggfe !=nil {return _ggfe ;};if _cgfeb ==1{_eebb .UseRefinement =true ;};_cgfeb ,_ggfe =_eebb ._egge .ReadBit ();if _ggfe !=nil {return _ggfe ;};if _cgfeb ==1{_eebb .IsHuffmanEncoded =true ;};return nil ;};func (_fa *GenericRefinementRegion )decodeOptimized (_ccc ,_add ,_cde ,_cce ,_bga ,_eca ,_ed int )error {var (_bbg error ;
_fcb int ;_dag int ;);_bag :=_ccc -int (_fa .ReferenceDY );if _gcb :=int (-_fa .ReferenceDX );_gcb > 0{_fcb =_gcb ;};_af :=_fa .ReferenceBitmap .GetByteIndex (_fcb ,_bag );if _fa .ReferenceDX > 0{_dag =int (_fa .ReferenceDX );};_dcf :=_fa .RegionBitmap .GetByteIndex (_dag ,_ccc );
switch _fa .TemplateID {case 0:_bbg =_fa .decodeTemplate (_ccc ,_add ,_cde ,_cce ,_bga ,_eca ,_ed ,_dcf ,_bag ,_af ,_fa ._egc );case 1:_bbg =_fa .decodeTemplate (_ccc ,_add ,_cde ,_cce ,_bga ,_eca ,_ed ,_dcf ,_bag ,_af ,_fa ._db );};return _bbg ;};func (_ebbf *SymbolDictionary )encodeRefinementATFlags (_cgea _cc .BinaryWriter )(_ffacg int ,_cbee error ){const _faad ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_ebbf .UseRefinementAggregation ||_ebbf .SdrTemplate !=0{return 0,nil ;};for _gebb :=0;_gebb < 2;_gebb ++{if _cbee =_cgea .WriteByte (byte (_ebbf .SdrATX [_gebb ]));_cbee !=nil {return _ffacg ,_cg .Wrapf (_cbee ,_faad ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_gebb );
};_ffacg ++;if _cbee =_cgea .WriteByte (byte (_ebbf .SdrATY [_gebb ]));_cbee !=nil {return _ffacg ,_cg .Wrapf (_cbee ,_faad ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_gebb );};_ffacg ++;};return _ffacg ,nil ;};var _ templater =&template1 {};
type templater interface{form (_bba ,_fce ,_abbf ,_fbe ,_cdgg int16 )int16 ;setIndex (_bgf *_a .DecoderStats );};func (_eef *PatternDictionary )readPatternWidthAndHeight ()error {_agef ,_gfec :=_eef ._ccgb .ReadByte ();if _gfec !=nil {return _gfec ;};_eef .HdpWidth =_agef ;
_agef ,_gfec =_eef ._ccgb .ReadByte ();if _gfec !=nil {return _gfec ;};_eef .HdpHeight =_agef ;return nil ;};func (_dbgfe *TextRegion )decodeDT ()(_aeeae int64 ,_fffc error ){if _dbgfe .IsHuffmanEncoded {if _dbgfe .SbHuffDT ==3{_aeeae ,_fffc =_dbgfe ._cbgcg .Decode (_dbgfe ._egge );
if _fffc !=nil {return 0,_fffc ;};}else {var _agbg _ge .Tabler ;_agbg ,_fffc =_ge .GetStandardTable (11+int (_dbgfe .SbHuffDT ));if _fffc !=nil {return 0,_fffc ;};_aeeae ,_fffc =_agbg .Decode (_dbgfe ._egge );if _fffc !=nil {return 0,_fffc ;};};}else {var _acb int32 ;
_acb ,_fffc =_dbgfe ._cddgg .DecodeInt (_dbgfe ._dcbb );if _fffc !=nil {return ;};_aeeae =int64 (_acb );};_aeeae *=int64 (_dbgfe .SbStrips );return _aeeae ,nil ;};func (_gffg *GenericRegion )decodeSLTP ()(int ,error ){switch _gffg .GBTemplate {case 0:_gffg ._cccb .SetIndex (0x9B25);
case 1:_gffg ._cccb .SetIndex (0x795);case 2:_gffg ._cccb .SetIndex (0xE5);case 3:_gffg ._cccb .SetIndex (0x195);};return _gffg ._dbf .DecodeBit (_gffg ._cccb );};func (_cgdg *SymbolDictionary )readAtPixels (_cbgca int )error {_cgdg .SdATX =make ([]int8 ,_cbgca );
_cgdg .SdATY =make ([]int8 ,_cbgca );var (_fbb byte ;_cgeg error ;);for _ceae :=0;_ceae < _cbgca ;_ceae ++{_fbb ,_cgeg =_cgdg ._gfbe .ReadByte ();if _cgeg !=nil {return _cgeg ;};_cgdg .SdATX [_ceae ]=int8 (_fbb );_fbb ,_cgeg =_cgdg ._gfbe .ReadByte ();
if _cgeg !=nil {return _cgeg ;};_cgdg .SdATY [_ceae ]=int8 (_fbb );};return nil ;};func (_cfag *SymbolDictionary )GetDictionary ()([]*_ea .Bitmap ,error ){_cb .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_cb .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_cb .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_cfag ._ffeb ,_cfag ._dcgg );
}();if _cfag ._ffeb ==nil {var _afgf error ;if _cfag .UseRefinementAggregation {_cfag ._aac =_cfag .getSbSymCodeLen ();};if !_cfag .IsHuffmanEncoded {if _afgf =_cfag .setCodingStatistics ();_afgf !=nil {return nil ,_afgf ;};};_cfag ._dcgg =make ([]*_ea .Bitmap ,_cfag .NumberOfNewSymbols );
var _dfde []int ;if _cfag .IsHuffmanEncoded &&!_cfag .UseRefinementAggregation {_dfde =make ([]int ,_cfag .NumberOfNewSymbols );};if _afgf =_cfag .setSymbolsArray ();_afgf !=nil {return nil ,_afgf ;};var _aaaf ,_baa int64 ;_cfag ._fecdc =0;for _cfag ._fecdc < _cfag .NumberOfNewSymbols {_baa ,_afgf =_cfag .decodeHeightClassDeltaHeight ();
if _afgf !=nil {return nil ,_afgf ;};_aaaf +=_baa ;var _abae ,_cafg uint32 ;_beff :=int64 (_cfag ._fecdc );for {var _bfd int64 ;_bfd ,_afgf =_cfag .decodeDifferenceWidth ();if _eg .Is (_afgf ,_df .ErrOOB ){break ;};if _afgf !=nil {return nil ,_afgf ;};
if _cfag ._fecdc >=_cfag .NumberOfNewSymbols {break ;};_abae +=uint32 (_bfd );_cafg +=_abae ;if !_cfag .IsHuffmanEncoded ||_cfag .UseRefinementAggregation {if !_cfag .UseRefinementAggregation {_afgf =_cfag .decodeDirectlyThroughGenericRegion (_abae ,uint32 (_aaaf ));
if _afgf !=nil {return nil ,_afgf ;};}else {_afgf =_cfag .decodeAggregate (_abae ,uint32 (_aaaf ));if _afgf !=nil {return nil ,_afgf ;};};}else if _cfag .IsHuffmanEncoded &&!_cfag .UseRefinementAggregation {_dfde [_cfag ._fecdc ]=int (_abae );};_cfag ._fecdc ++;
};if _cfag .IsHuffmanEncoded &&!_cfag .UseRefinementAggregation {var _eead int64 ;if _cfag .SdHuffBMSizeSelection ==0{var _fefec _ge .Tabler ;_fefec ,_afgf =_ge .GetStandardTable (1);if _afgf !=nil {return nil ,_afgf ;};_eead ,_afgf =_fefec .Decode (_cfag ._gfbe );
if _afgf !=nil {return nil ,_afgf ;};}else {_eead ,_afgf =_cfag .huffDecodeBmSize ();if _afgf !=nil {return nil ,_afgf ;};};_cfag ._gfbe .Align ();var _beeb *_ea .Bitmap ;_beeb ,_afgf =_cfag .decodeHeightClassCollectiveBitmap (_eead ,uint32 (_aaaf ),_cafg );
if _afgf !=nil {return nil ,_afgf ;};_afgf =_cfag .decodeHeightClassBitmap (_beeb ,_beff ,int (_aaaf ),_dfde );if _afgf !=nil {return nil ,_afgf ;};};};_efgf ,_afgf :=_cfag .getToExportFlags ();if _afgf !=nil {return nil ,_afgf ;};_cfag .setExportedSymbols (_efgf );
};return _cfag ._ffeb ,nil ;};func (_dadf *TableSegment )HtRS ()int32 {return _dadf ._fedfb };func (_bbc *Header )String ()string {_cdd :=&_ef .Builder {};_cdd .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");
_cdd .WriteString (_c .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_bbc .SegmentNumber ));_cdd .WriteString (_c .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_bbc .Type ));
_cdd .WriteString (_c .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_bbc .RetainFlag ));_cdd .WriteString (_c .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_bbc .PageAssociation ));
_cdd .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_bbc .PageAssociationFieldSize ));_cdd .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");
for _ ,_dbgf :=range _bbc .RTSNumbers {_cdd .WriteString (_c .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_dbgf ));};_cdd .WriteString (_c .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_bbc .HeaderLength ));
_cdd .WriteString (_c .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_bbc .SegmentDataLength ));_cdd .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_bbc .SegmentDataStartOffset ));
return _cdd .String ();};func (_fgdc *TableSegment )Init (h *Header ,r *_cc .Reader )error {_fgdc ._gecef =r ;return _fgdc .parseHeader ();};func (_gcf *GenericRegion )updateOverrideFlags ()error {const _bcb ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _gcf .GBAtX ==nil ||_gcf .GBAtY ==nil {return nil ;};if len (_gcf .GBAtX )!=len (_gcf .GBAtY ){return _cg .Errorf (_bcb ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_gcf .GBAtX ),len (_gcf .GBAtY ));
};_gcf .GBAtOverride =make ([]bool ,len (_gcf .GBAtX ));switch _gcf .GBTemplate {case 0:if !_gcf .UseExtTemplates {if _gcf .GBAtX [0]!=3||_gcf .GBAtY [0]!=-1{_gcf .setOverrideFlag (0);};if _gcf .GBAtX [1]!=-3||_gcf .GBAtY [1]!=-1{_gcf .setOverrideFlag (1);
};if _gcf .GBAtX [2]!=2||_gcf .GBAtY [2]!=-2{_gcf .setOverrideFlag (2);};if _gcf .GBAtX [3]!=-2||_gcf .GBAtY [3]!=-2{_gcf .setOverrideFlag (3);};}else {if _gcf .GBAtX [0]!=-2||_gcf .GBAtY [0]!=0{_gcf .setOverrideFlag (0);};if _gcf .GBAtX [1]!=0||_gcf .GBAtY [1]!=-2{_gcf .setOverrideFlag (1);
};if _gcf .GBAtX [2]!=-2||_gcf .GBAtY [2]!=-1{_gcf .setOverrideFlag (2);};if _gcf .GBAtX [3]!=-1||_gcf .GBAtY [3]!=-2{_gcf .setOverrideFlag (3);};if _gcf .GBAtX [4]!=1||_gcf .GBAtY [4]!=-2{_gcf .setOverrideFlag (4);};if _gcf .GBAtX [5]!=2||_gcf .GBAtY [5]!=-1{_gcf .setOverrideFlag (5);
};if _gcf .GBAtX [6]!=-3||_gcf .GBAtY [6]!=0{_gcf .setOverrideFlag (6);};if _gcf .GBAtX [7]!=-4||_gcf .GBAtY [7]!=0{_gcf .setOverrideFlag (7);};if _gcf .GBAtX [8]!=2||_gcf .GBAtY [8]!=-2{_gcf .setOverrideFlag (8);};if _gcf .GBAtX [9]!=3||_gcf .GBAtY [9]!=-1{_gcf .setOverrideFlag (9);
};if _gcf .GBAtX [10]!=-2||_gcf .GBAtY [10]!=-2{_gcf .setOverrideFlag (10);};if _gcf .GBAtX [11]!=-3||_gcf .GBAtY [11]!=-1{_gcf .setOverrideFlag (11);};};case 1:if _gcf .GBAtX [0]!=3||_gcf .GBAtY [0]!=-1{_gcf .setOverrideFlag (0);};case 2:if _gcf .GBAtX [0]!=2||_gcf .GBAtY [0]!=-1{_gcf .setOverrideFlag (0);
};case 3:if _gcf .GBAtX [0]!=2||_gcf .GBAtY [0]!=-1{_gcf .setOverrideFlag (0);};};return nil ;};func (_gacf *HalftoneRegion )GetPatterns ()([]*_ea .Bitmap ,error ){var (_dgdec []*_ea .Bitmap ;_fbac error ;);for _ ,_cbac :=range _gacf ._aefc .RTSegments {var _caf Segmenter ;
_caf ,_fbac =_cbac .GetSegmentData ();if _fbac !=nil {_cb .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_fbac );return nil ,_fbac ;};_gdfb ,_gged :=_caf .(*PatternDictionary );
if !_gged {_fbac =_c .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_caf );
return nil ,_fbac ;};var _cdeg []*_ea .Bitmap ;_cdeg ,_fbac =_gdfb .GetDictionary ();if _fbac !=nil {_cb .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fbac );
return nil ,_fbac ;};_dgdec =append (_dgdec ,_cdeg ...);};return _dgdec ,nil ;};func (_fbda *TextRegion )decodeIb (_dbc ,_bbef int64 )(*_ea .Bitmap ,error ){const _fage ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_bfcc error ;_cae *_ea .Bitmap ;
);if _dbc ==0{if int (_bbef )> len (_fbda .Symbols )-1{return nil ,_cg .Error (_fage ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _fbda .Symbols [int (_bbef )],nil ;};var _dcafd ,_gbcc ,_efbg ,_aadb int64 ;_dcafd ,_bfcc =_fbda .decodeRdw ();if _bfcc !=nil {return nil ,_cg .Wrap (_bfcc ,_fage ,"");};_gbcc ,_bfcc =_fbda .decodeRdh ();if _bfcc !=nil {return nil ,_cg .Wrap (_bfcc ,_fage ,"");
};_efbg ,_bfcc =_fbda .decodeRdx ();if _bfcc !=nil {return nil ,_cg .Wrap (_bfcc ,_fage ,"");};_aadb ,_bfcc =_fbda .decodeRdy ();if _bfcc !=nil {return nil ,_cg .Wrap (_bfcc ,_fage ,"");};if _fbda .IsHuffmanEncoded {if _ ,_bfcc =_fbda .decodeSymInRefSize ();
_bfcc !=nil {return nil ,_cg .Wrap (_bfcc ,_fage ,"");};_fbda ._egge .Align ();};_efga :=_fbda .Symbols [_bbef ];_dead :=uint32 (_efga .Width );_agee :=uint32 (_efga .Height );_ffed :=int32 (uint32 (_dcafd )>>1)+int32 (_efbg );_gdgc :=int32 (uint32 (_gbcc )>>1)+int32 (_aadb );
if _fbda ._fbab ==nil {_fbda ._fbab =_cag (_fbda ._egge ,nil );};_fbda ._fbab .setParameters (_fbda ._bgcd ,_fbda ._cddgg ,_fbda .SbrTemplate ,_dead +uint32 (_dcafd ),_agee +uint32 (_gbcc ),_efga ,_ffed ,_gdgc ,false ,_fbda .SbrATX ,_fbda .SbrATY );_cae ,_bfcc =_fbda ._fbab .GetRegionBitmap ();
if _bfcc !=nil {return nil ,_cg .Wrap (_bfcc ,_fage ,"\u0067\u0072\u0066");};if _fbda .IsHuffmanEncoded {_fbda ._egge .Align ();};return _cae ,nil ;};func (_bae *GenericRegion )decodeTemplate3 (_abgb ,_ffbc ,_fabf int ,_faff ,_bece int )(_daaf error ){const _ggbb ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_agg ,_dge int ;_fgg int ;_fbae byte ;_abf ,_cdbd int ;);if _abgb >=1{_fbae ,_daaf =_bae .Bitmap .GetByte (_bece );if _daaf !=nil {return _cg .Wrap (_daaf ,_ggbb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fgg =int (_fbae );};_agg =(_fgg >>1)&0x70;
for _ecc :=0;_ecc < _fabf ;_ecc =_abf {var (_edfb byte ;_fade int ;);_abf =_ecc +8;if _eecc :=_ffbc -_ecc ;_eecc > 8{_fade =8;}else {_fade =_eecc ;};if _abgb >=1{_fgg <<=8;if _abf < _ffbc {_fbae ,_daaf =_bae .Bitmap .GetByte (_bece +1);if _daaf !=nil {return _cg .Wrap (_daaf ,_ggbb ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_fgg |=int (_fbae );};};for _daf :=0;_daf < _fade ;_daf ++{if _bae ._gfea {_dge =_bae .overrideAtTemplate3 (_agg ,_ecc +_daf ,_abgb ,int (_edfb ),_daf );_bae ._cccb .SetIndex (int32 (_dge ));}else {_bae ._cccb .SetIndex (int32 (_agg ));};_cdbd ,_daaf =_bae ._dbf .DecodeBit (_bae ._cccb );
if _daaf !=nil {return _cg .Wrap (_daaf ,_ggbb ,"");};_edfb |=byte (_cdbd )<<byte (7-_daf );_agg =((_agg &0x1f7)<<1)|_cdbd |((_fgg >>uint (8-_daf ))&0x010);};if _cgce :=_bae .Bitmap .SetByte (_faff ,_edfb );_cgce !=nil {return _cg .Wrap (_cgce ,_ggbb ,"");
};_faff ++;_bece ++;};return nil ;};func (_faba *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_ea .Points ,symbols *_ea .Bitmaps ,classIDs *_gge .IntSlice ,boxes *_ea .Boxes ,width ,height ,symBits int ){_faba .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_faba ._bcfb =globalSymbolsMap ;_faba ._ggdb =localSymbolsMap ;_faba ._cfdc =comps ;_faba ._egb =inLL ;_faba ._fdab =symbols ;_faba ._dacg =classIDs ;_faba ._dcaca =boxes ;_faba ._ccee =symBits ;};func (_ggcea *PatternDictionary )readTemplate ()error {_ebed ,_dgcb :=_ggcea ._ccgb .ReadBits (2);
if _dgcb !=nil {return _dgcb ;};_ggcea .HDTemplate =byte (_ebed );return nil ;};type template1 struct{};func (_bcad *PageInformationSegment )encodeStripingInformation (_bcfg _cc .BinaryWriter )(_dgab int ,_bbac error ){const _fgca ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_bcad .IsStripe {if _dgab ,_bbac =_bcfg .Write ([]byte {0x00,0x00});_bbac !=nil {return 0,_cg .Wrap (_bbac ,_fgca ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _dgab ,nil ;};_ceg :=make ([]byte ,2);_bd .BigEndian .PutUint16 (_ceg ,_bcad .MaxStripeSize |1<<15);
if _dgab ,_bbac =_bcfg .Write (_ceg );_bbac !=nil {return 0,_cg .Wrapf (_bbac ,_fgca ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_bcad .MaxStripeSize );};return _dgab ,nil ;};func (_ffcc *Header )writeFlags (_ffff _cc .BinaryWriter )(_acdb error ){const _ebcd ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";
_addd :=byte (_ffcc .Type );if _acdb =_ffff .WriteByte (_addd );_acdb !=nil {return _cg .Wrap (_acdb ,_ebcd ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};if !_ffcc .RetainFlag &&!_ffcc .PageAssociationFieldSize {return nil ;};if _acdb =_ffff .SkipBits (-8);_acdb !=nil {return _cg .Wrap (_acdb ,_ebcd ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");
};var _baccf int ;if _ffcc .RetainFlag {_baccf =1;};if _acdb =_ffff .WriteBit (_baccf );_acdb !=nil {return _cg .Wrap (_acdb ,_ebcd ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_baccf =0;
if _ffcc .PageAssociationFieldSize {_baccf =1;};if _acdb =_ffff .WriteBit (_baccf );_acdb !=nil {return _cg .Wrap (_acdb ,_ebcd ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_ffff .FinishByte ();
return nil ;};var (_afge Segmenter ;_agda =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _afge },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _afge },TProfiles :func ()Segmenter {return _afge },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _afge },TBitmap :func ()Segmenter {return _afge }};
);func (_ccbg *SymbolDictionary )setRefinementAtPixels ()error {if !_ccbg .UseRefinementAggregation ||_ccbg .SdrTemplate !=0{return nil ;};if _ebfb :=_ccbg .readRefinementAtPixels (2);_ebfb !=nil {return _ebfb ;};return nil ;};func (_dbga *Header )readReferredToSegmentNumbers (_cgcea *_cc .Reader ,_bfbd int )([]int ,error ){const _gdfcf ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_gdea :=make ([]int ,_bfbd );if _bfbd > 0{_dbga .RTSegments =make ([]*Header ,_bfbd );var (_fbfd uint64 ;_efbfd error ;);for _edcc :=0;_edcc < _bfbd ;_edcc ++{_fbfd ,_efbfd =_cgcea .ReadBits (byte (_dbga .referenceSize ())<<3);if _efbfd !=nil {return nil ,_cg .Wrapf (_efbfd ,_gdfcf ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_edcc );
};_gdea [_edcc ]=int (_fbfd &_b .MaxInt32 );};};return _gdea ,nil ;};func (_gbdf *Header )readSegmentNumber (_aaa *_cc .Reader )error {const _fff ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_fcec :=make ([]byte ,4);
_ ,_deaf :=_aaa .Read (_fcec );if _deaf !=nil {return _cg .Wrap (_deaf ,_fff ,"");};_gbdf .SegmentNumber =_bd .BigEndian .Uint32 (_fcec );return nil ;};func (_beba *PatternDictionary )parseHeader ()error {_cb .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_cb .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_adaf :=_beba ._ccgb .ReadBits (5);if _adaf !=nil {return _adaf ;};if _adaf =_beba .readTemplate ();_adaf !=nil {return _adaf ;};if _adaf =_beba .readIsMMREncoded ();_adaf !=nil {return _adaf ;};if _adaf =_beba .readPatternWidthAndHeight ();_adaf !=nil {return _adaf ;
};if _adaf =_beba .readGrayMax ();_adaf !=nil {return _adaf ;};if _adaf =_beba .computeSegmentDataStructure ();_adaf !=nil {return _adaf ;};return _beba .checkInput ();};func (_egg *GenericRefinementRegion )parseHeader ()(_cac error ){_cb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_geg :=_d .Now ();defer func (){if _cac ==nil {_cb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_d .Since (_geg ).Nanoseconds ());
}else {_cb .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_cac );
};}();if _cac =_egg .RegionInfo .parseHeader ();_cac !=nil {return _cac ;};_ ,_cac =_egg ._aa .ReadBits (6);if _cac !=nil {return _cac ;};_egg .IsTPGROn ,_cac =_egg ._aa .ReadBool ();if _cac !=nil {return _cac ;};var _bbd int ;_bbd ,_cac =_egg ._aa .ReadBit ();
if _cac !=nil {return _cac ;};_egg .TemplateID =int8 (_bbd );switch _egg .TemplateID {case 0:_egg .Template =_egg ._egc ;if _cac =_egg .readAtPixels ();_cac !=nil {return ;};case 1:_egg .Template =_egg ._db ;};return nil ;};func (_aabc *SymbolDictionary )decodeNewSymbols (_fea ,_cgfa uint32 ,_cbdc *_ea .Bitmap ,_edfef ,_feab int32 )error {if _aabc ._gacb ==nil {_aabc ._gacb =_cag (_aabc ._gfbe ,nil );
if _aabc ._gddg ==nil {var _fac error ;_aabc ._gddg ,_fac =_a .New (_aabc ._gfbe );if _fac !=nil {return _fac ;};};if _aabc ._fbfe ==nil {_aabc ._fbfe =_a .NewStats (65536,1);};};_aabc ._gacb .setParameters (_aabc ._fbfe ,_aabc ._gddg ,_aabc .SdrTemplate ,_fea ,_cgfa ,_cbdc ,_edfef ,_feab ,false ,_aabc .SdrATX ,_aabc .SdrATY );
return _aabc .addSymbol (_aabc ._gacb );};func (_aedf *TextRegion )getUserTable (_ebde int )(_ge .Tabler ,error ){const _gdcb ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _bebe int ;for _ ,_faee :=range _aedf .Header .RTSegments {if _faee .Type ==53{if _bebe ==_ebde {_acba ,_gdbf :=_faee .GetSegmentData ();
if _gdbf !=nil {return nil ,_gdbf ;};_fbfee ,_gedfc :=_acba .(*TableSegment );if !_gedfc {_cb .Log .Debug (_c .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_faee .SegmentNumber ));
return nil ,_cg .Error (_gdcb ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _ge .NewEncodedTable (_fbfee );};_bebe ++;};};return nil ,nil ;};func (_gabf *HalftoneRegion )shiftAndFill (_gbg int )int {_gbg >>=8;if _gbg < 0{_fedf :=int (_b .Log (float64 (_eba (_gbg )))/_b .Log (2));_dee :=31-_fedf ;for _gceg :=1;_gceg < _dee ;
_gceg ++{_gbg |=1<<uint (31-_gceg );};};return _gbg ;};func (_ceea *SymbolDictionary )setSymbolsArray ()error {if _ceea ._gbca ==nil {if _dgfd :=_ceea .retrieveImportSymbols ();_dgfd !=nil {return _dgfd ;};};if _ceea ._cddf ==nil {_ceea ._cddf =append (_ceea ._cddf ,_ceea ._gbca ...);
};return nil ;};func (_fgd *Header )pageSize ()uint {if _fgd .PageAssociation <=255{return 1;};return 4;};func (_ggdc *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_ggdc .SdHuffAggInstanceSelection {_bfgf ,_dadd :=_ge .GetStandardTable (1);
if _dadd !=nil {return 0,_dadd ;};return _bfgf .Decode (_ggdc ._gfbe );};if _ggdc ._fcdc ==nil {var (_gcge int ;_ebbc error ;);if _ggdc .SdHuffDecodeHeightSelection ==3{_gcge ++;};if _ggdc .SdHuffDecodeWidthSelection ==3{_gcge ++;};if _ggdc .SdHuffBMSizeSelection ==3{_gcge ++;
};_ggdc ._fcdc ,_ebbc =_ggdc .getUserTable (_gcge );if _ebbc !=nil {return 0,_ebbc ;};};return _ggdc ._fcdc .Decode (_ggdc ._gfbe );};func (_afde *HalftoneRegion )computeY (_fgecb ,_fbfa int )int {return _afde .shiftAndFill (int (_afde .HGridY )+_fgecb *int (_afde .HRegionX )-_fbfa *int (_afde .HRegionY ));
};func (_eeba *Header )writeSegmentPageAssociation (_fdca _cc .BinaryWriter )(_abga int ,_caab error ){const _gaegc ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _eeba .pageSize ()!=4{if _caab =_fdca .WriteByte (byte (_eeba .PageAssociation ));_caab !=nil {return 0,_cg .Wrap (_caab ,_gaegc ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_dccf :=make ([]byte ,4);
_bd .BigEndian .PutUint32 (_dccf ,uint32 (_eeba .PageAssociation ));if _abga ,_caab =_fdca .Write (_dccf );_caab !=nil {return 0,_cg .Wrap (_caab ,_gaegc ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _abga ,nil ;
};type HalftoneRegion struct{_ggf *_cc .Reader ;_aefc *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _ea .CombinationOperator ;HSkipEnabled bool ;
HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_ea .Bitmap ;Patterns []*_ea .Bitmap ;};func (_cd *GenericRefinementRegion )decodeSLTP ()(int ,error ){_cd .Template .setIndex (_cd ._fg );
return _cd ._cea .DecodeBit (_cd ._fg );};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_bedc *SymbolDictionary )InitEncode (symbols *_ea .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _dgcg ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_bedc .SdATX =[]int8 {3,-3,2,-2};_bedc .SdATY =[]int8 {-1,-1,-2,-2};_bedc ._gbgb =symbols ;_bedc ._eefd =make ([]int ,len (symbolList ));copy (_bedc ._eefd ,symbolList );if len (_bedc ._eefd )!=_bedc ._gbgb .Size (){return _cg .Error (_dgcg ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_bedc .NumberOfNewSymbols =uint32 (symbols .Size ());_bedc .NumberOfExportedSymbols =uint32 (symbols .Size ());_bedc ._dfaf =symbolMap ;_bedc ._adfa =unborderSymbols ;return nil ;};func (_dfda *Header )readSegmentDataLength (_cfeb *_cc .Reader )(_ecfb error ){_dfda .SegmentDataLength ,_ecfb =_cfeb .ReadBits (32);
if _ecfb !=nil {return _ecfb ;};_dfda .SegmentDataLength &=_b .MaxInt32 ;return nil ;};func (_bge *GenericRegion )decodeTemplate0a (_ddc ,_bcgd ,_bacg int ,_dbbb ,_bgg int )(_dfd error ){const _bbgg ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_ace ,_dbbe int ;_dcb ,_gad int ;_edddb byte ;_agf int ;);if _ddc >=1{_edddb ,_dfd =_bge .Bitmap .GetByte (_bgg );if _dfd !=nil {return _cg .Wrap (_dfd ,_bbgg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dcb =int (_edddb );};if _ddc >=2{_edddb ,_dfd =_bge .Bitmap .GetByte (_bgg -_bge .Bitmap .RowStride );
if _dfd !=nil {return _cg .Wrap (_dfd ,_bbgg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_gad =int (_edddb )<<6;};_ace =(_dcb &0xf0)|(_gad &0x3800);for _adf :=0;_adf < _bacg ;_adf =_agf {var (_efd byte ;_dgf int ;);_agf =_adf +8;if _afgc :=_bcgd -_adf ;
_afgc > 8{_dgf =8;}else {_dgf =_afgc ;};if _ddc > 0{_dcb <<=8;if _agf < _bcgd {_edddb ,_dfd =_bge .Bitmap .GetByte (_bgg +1);if _dfd !=nil {return _cg .Wrap (_dfd ,_bbgg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_dcb |=int (_edddb );};};if _ddc > 1{_efdd :=_bgg -_bge .Bitmap .RowStride +1;
_gad <<=8;if _agf < _bcgd {_edddb ,_dfd =_bge .Bitmap .GetByte (_efdd );if _dfd !=nil {return _cg .Wrap (_dfd ,_bbgg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_gad |=int (_edddb )<<6;}else {_gad |=0;};};for _bdbg :=0;_bdbg < _dgf ;_bdbg ++{_effb :=uint (7-_bdbg );
if _bge ._gfea {_dbbe =_bge .overrideAtTemplate0a (_ace ,_adf +_bdbg ,_ddc ,int (_efd ),_bdbg ,int (_effb ));_bge ._cccb .SetIndex (int32 (_dbbe ));}else {_bge ._cccb .SetIndex (int32 (_ace ));};var _cfda int ;_cfda ,_dfd =_bge ._dbf .DecodeBit (_bge ._cccb );
if _dfd !=nil {return _cg .Wrap (_dfd ,_bbgg ,"");};_efd |=byte (_cfda )<<_effb ;_ace =((_ace &0x7bf7)<<1)|_cfda |((_dcb >>_effb )&0x10)|((_gad >>_effb )&0x800);};if _ebc :=_bge .Bitmap .SetByte (_dbbb ,_efd );_ebc !=nil {return _cg .Wrap (_ebc ,_bbgg ,"");
};_dbbb ++;_bgg ++;};return nil ;};func (_gec *HalftoneRegion )combineGrayscalePlanes (_gfg []*_ea .Bitmap ,_dfdg int )error {_fged :=0;for _gccd :=0;_gccd < _gfg [_dfdg ].Height ;_gccd ++{for _bbed :=0;_bbed < _gfg [_dfdg ].Width ;_bbed +=8{_cdf ,_fdg :=_gfg [_dfdg +1].GetByte (_fged );
if _fdg !=nil {return _fdg ;};_bgbg ,_fdg :=_gfg [_dfdg ].GetByte (_fged );if _fdg !=nil {return _fdg ;};_fdg =_gfg [_dfdg ].SetByte (_fged ,_ea .CombineBytes (_bgbg ,_cdf ,_ea .CmbOpXor ));if _fdg !=nil {return _fdg ;};_fged ++;};};return nil ;};func (_eff *GenericRegion )GetRegionBitmap ()(_cbea *_ea .Bitmap ,_gag error ){if _eff .Bitmap !=nil {return _eff .Bitmap ,nil ;
};if _eff .IsMMREncoded {if _eff ._gfcb ==nil {_eff ._gfcb ,_gag =_bc .New (_eff ._dff ,int (_eff .RegionSegment .BitmapWidth ),int (_eff .RegionSegment .BitmapHeight ),_eff .DataOffset ,_eff .DataLength );if _gag !=nil {return nil ,_gag ;};};_eff .Bitmap ,_gag =_eff ._gfcb .UncompressMMR ();
return _eff .Bitmap ,_gag ;};if _gag =_eff .updateOverrideFlags ();_gag !=nil {return nil ,_gag ;};var _bfc int ;if _eff ._dbf ==nil {_eff ._dbf ,_gag =_a .New (_eff ._dff );if _gag !=nil {return nil ,_gag ;};};if _eff ._cccb ==nil {_eff ._cccb =_a .NewStats (65536,1);
};_eff .Bitmap =_ea .New (int (_eff .RegionSegment .BitmapWidth ),int (_eff .RegionSegment .BitmapHeight ));_eggd :=int (uint32 (_eff .Bitmap .Width +7)&(^uint32 (7)));for _gegb :=0;_gegb < _eff .Bitmap .Height ;_gegb ++{if _eff .IsTPGDon {var _ebe int ;
_ebe ,_gag =_eff .decodeSLTP ();if _gag !=nil {return nil ,_gag ;};_bfc ^=_ebe ;};if _bfc ==1{if _gegb > 0{if _gag =_eff .copyLineAbove (_gegb );_gag !=nil {return nil ,_gag ;};};}else {if _gag =_eff .decodeLine (_gegb ,_eff .Bitmap .Width ,_eggd );_gag !=nil {return nil ,_gag ;
};};};return _eff .Bitmap ,nil ;};func (_cbce *PatternDictionary )computeSegmentDataStructure ()error {_cbce .DataOffset =_cbce ._ccgb .AbsolutePosition ();_cbce .DataHeaderLength =_cbce .DataOffset -_cbce .DataHeaderOffset ;_cbce .DataLength =int64 (_cbce ._ccgb .AbsoluteLength ())-_cbce .DataHeaderLength ;
return nil ;};func (_eeccb *SymbolDictionary )setAtPixels ()error {if _eeccb .IsHuffmanEncoded {return nil ;};_dcfb :=1;if _eeccb .SdTemplate ==0{_dcfb =4;};if _eaf :=_eeccb .readAtPixels (_dcfb );_eaf !=nil {return _eaf ;};return nil ;};const (ORandom OrganizationType =iota ;
OSequential ;);func (_efdda *Header )writeReferredToCount (_ccf _cc .BinaryWriter )(_cfcgf int ,_aefcc error ){const _fafd ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_efdda .RTSNumbers =make ([]int ,len (_efdda .RTSegments ));
for _acfc ,_abfg :=range _efdda .RTSegments {_efdda .RTSNumbers [_acfc ]=int (_abfg .SegmentNumber );};if len (_efdda .RTSNumbers )<=4{var _dgdf byte ;if len (_efdda .RetainBits )>=1{_dgdf =_efdda .RetainBits [0];};_dgdf |=byte (len (_efdda .RTSNumbers ))<<5;
if _aefcc =_ccf .WriteByte (_dgdf );_aefcc !=nil {return 0,_cg .Wrap (_aefcc ,_fafd ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_dcdd :=uint32 (len (_efdda .RTSNumbers ));_bacf :=make ([]byte ,4+_gge .Ceil (len (_efdda .RTSNumbers )+1,8));
_dcdd |=0x7<<29;_bd .BigEndian .PutUint32 (_bacf ,_dcdd );copy (_bacf [1:],_efdda .RetainBits );_cfcgf ,_aefcc =_ccf .Write (_bacf );if _aefcc !=nil {return 0,_cg .Wrap (_aefcc ,_fafd ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};
return _cfcgf ,nil ;};func (_ccb *GenericRefinementRegion )readAtPixels ()error {_ccb .GrAtX =make ([]int8 ,2);_ccb .GrAtY =make ([]int8 ,2);_dbee ,_aga :=_ccb ._aa .ReadByte ();if _aga !=nil {return _aga ;};_ccb .GrAtX [0]=int8 (_dbee );_dbee ,_aga =_ccb ._aa .ReadByte ();
if _aga !=nil {return _aga ;};_ccb .GrAtY [0]=int8 (_dbee );_dbee ,_aga =_ccb ._aa .ReadByte ();if _aga !=nil {return _aga ;};_ccb .GrAtX [1]=int8 (_dbee );_dbee ,_aga =_ccb ._aa .ReadByte ();if _aga !=nil {return _aga ;};_ccb .GrAtY [1]=int8 (_dbee );
return nil ;};type SymbolDictionary struct{_gfbe *_cc .Reader ;SdrTemplate int8 ;SdTemplate int8 ;_cdge bool ;_efba bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;
IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_bdce uint32 ;_gbca []*_ea .Bitmap ;_fecdc uint32 ;_dcgg []*_ea .Bitmap ;_ggcf _ge .Tabler ;_eeegb _ge .Tabler ;
_afa _ge .Tabler ;_fcdc _ge .Tabler ;_ffeb []*_ea .Bitmap ;_cddf []*_ea .Bitmap ;_gddg *_a .Decoder ;_beaf *TextRegion ;_afbee *GenericRegion ;_gacb *GenericRefinementRegion ;_fbfe *_a .DecoderStats ;_beed *_a .DecoderStats ;_ffade *_a .DecoderStats ;_deedb *_a .DecoderStats ;
_befec *_a .DecoderStats ;_dabcc *_a .DecoderStats ;_cccbe *_a .DecoderStats ;_ced *_a .DecoderStats ;_aab *_a .DecoderStats ;_aac int8 ;_gbgb *_ea .Bitmaps ;_eefd []int ;_dfaf map[int ]int ;_adfa bool ;};type Header struct{SegmentNumber uint32 ;Type Type ;
RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader *_cc .Reader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};
func NewGenericRegion (r *_cc .Reader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_dff :r };};func (_fbef *TextRegion )decodeRI ()(int64 ,error ){if !_fbef .UseRefinement {return 0,nil ;};if _fbef .IsHuffmanEncoded {_eecee ,_bgfa :=_fbef ._egge .ReadBit ();
return int64 (_eecee ),_bgfa ;};_fgad ,_dgbe :=_fbef ._cddgg .DecodeInt (_fbef ._dabccf );return int64 (_fgad ),_dgbe ;};func (_cacf *TextRegion )initSymbols ()error {const _afcg ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_dgbc :=range _cacf .Header .RTSegments {if _dgbc ==nil {return _cg .Error (_afcg ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _dgbc .Type ==0{_cafgd ,_fabd :=_dgbc .GetSegmentData ();if _fabd !=nil {return _cg .Wrap (_fabd ,_afcg ,"");};_adbb ,_fccc :=_cafgd .(*SymbolDictionary );if !_fccc {return _cg .Error (_afcg ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_adbb ._aab =_cacf ._cgcdf ;_facc ,_fabd :=_adbb .GetDictionary ();if _fabd !=nil {return _cg .Wrap (_fabd ,_afcg ,"");};_cacf .Symbols =append (_cacf .Symbols ,_facc ...);};};_cacf .NumberOfSymbols =uint32 (len (_cacf .Symbols ));return nil ;};func (_gdbe *GenericRegion )decodeTemplate2 (_fbea ,_dded ,_fdef int ,_cda ,_afd int )(_gcc error ){const _ceb ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_efff ,_gac int ;_faga ,_cgca int ;_fed byte ;_bde ,_edgd int ;);if _fbea >=1{_fed ,_gcc =_gdbe .Bitmap .GetByte (_afd );if _gcc !=nil {return _cg .Wrap (_gcc ,_ceb ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_faga =int (_fed );};if _fbea >=2{_fed ,_gcc =_gdbe .Bitmap .GetByte (_afd -_gdbe .Bitmap .RowStride );if _gcc !=nil {return _cg .Wrap (_gcc ,_ceb ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_cgca =int (_fed )<<4;
};_efff =(_faga >>3&0x7c)|(_cgca >>3&0x380);for _dffg :=0;_dffg < _fdef ;_dffg =_bde {var (_gded byte ;_fdbe int ;);_bde =_dffg +8;if _fca :=_dded -_dffg ;_fca > 8{_fdbe =8;}else {_fdbe =_fca ;};if _fbea > 0{_faga <<=8;if _bde < _dded {_fed ,_gcc =_gdbe .Bitmap .GetByte (_afd +1);
if _gcc !=nil {return _cg .Wrap (_gcc ,_ceb ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_faga |=int (_fed );};};if _fbea > 1{_cgca <<=8;if _bde < _dded {_fed ,_gcc =_gdbe .Bitmap .GetByte (_afd -_gdbe .Bitmap .RowStride +1);
if _gcc !=nil {return _cg .Wrap (_gcc ,_ceb ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_cgca |=int (_fed )<<4;};};for _fgce :=0;_fgce < _fdbe ;_fgce ++{_bbea :=uint (10-_fgce );if _gdbe ._gfea {_gac =_gdbe .overrideAtTemplate2 (_efff ,_dffg +_fgce ,_fbea ,int (_gded ),_fgce );
_gdbe ._cccb .SetIndex (int32 (_gac ));}else {_gdbe ._cccb .SetIndex (int32 (_efff ));};_edgd ,_gcc =_gdbe ._dbf .DecodeBit (_gdbe ._cccb );if _gcc !=nil {return _cg .Wrap (_gcc ,_ceb ,"");};_gded |=byte (_edgd <<uint (7-_fgce ));_efff =((_efff &0x1bd)<<1)|_edgd |((_faga >>_bbea )&0x4)|((_cgca >>_bbea )&0x80);
};if _fcbg :=_gdbe .Bitmap .SetByte (_cda ,_gded );_fcbg !=nil {return _cg .Wrap (_fcbg ,_ceb ,"");};_cda ++;_afd ++;};return nil ;};func (_dged *Header )Encode (w _cc .BinaryWriter )(_dbag int ,_fegg error ){const _bfee ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _bega _cc .BinaryWriter ;_cb .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _fegg !=nil {_cb .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_fegg );
}else {_cb .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_dged );_cb .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _dged .SegmentData !=nil {_eebc ,_aaec :=_dged .SegmentData .(SegmentEncoder );if !_aaec {return 0,_cg .Errorf (_bfee ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_dged .SegmentData );
};_bega =_cc .BufferedMSB ();_dbag ,_fegg =_eebc .Encode (_bega );if _fegg !=nil {return 0,_cg .Wrap (_fegg ,_bfee ,"");};_dged .SegmentDataLength =uint64 (_dbag );};if _dged .pageSize ()==4{_dged .PageAssociationFieldSize =true ;};var _cagg int ;_cagg ,_fegg =_dged .writeSegmentNumber (w );
if _fegg !=nil {return 0,_cg .Wrap (_fegg ,_bfee ,"");};_dbag +=_cagg ;if _fegg =_dged .writeFlags (w );_fegg !=nil {return _dbag ,_cg .Wrap (_fegg ,_bfee ,"");};_dbag ++;_cagg ,_fegg =_dged .writeReferredToCount (w );if _fegg !=nil {return 0,_cg .Wrap (_fegg ,_bfee ,"");
};_dbag +=_cagg ;_cagg ,_fegg =_dged .writeReferredToSegments (w );if _fegg !=nil {return 0,_cg .Wrap (_fegg ,_bfee ,"");};_dbag +=_cagg ;_cagg ,_fegg =_dged .writeSegmentPageAssociation (w );if _fegg !=nil {return 0,_cg .Wrap (_fegg ,_bfee ,"");};_dbag +=_cagg ;
_cagg ,_fegg =_dged .writeSegmentDataLength (w );if _fegg !=nil {return 0,_cg .Wrap (_fegg ,_bfee ,"");};_dbag +=_cagg ;_dged .HeaderLength =int64 (_dbag )-int64 (_dged .SegmentDataLength );if _bega !=nil {if _ ,_fegg =w .Write (_bega .Data ());_fegg !=nil {return _dbag ,_cg .Wrap (_fegg ,_bfee ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _dbag ,nil ;};func (_ggbbd *Header )writeSegmentDataLength (_baea _cc .BinaryWriter )(_eccd int ,_afc error ){_fbc :=make ([]byte ,4);_bd .BigEndian .PutUint32 (_fbc ,uint32 (_ggbbd .SegmentDataLength ));if _eccd ,_afc =_baea .Write (_fbc );
_afc !=nil {return 0,_cg .Wrap (_afc ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _eccd ,nil ;};func (_gcg *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_cgd ,_beg ,_gde ,_dcd ,_dd ,_ca ,_de ,_ggeb ,_dda int )error {var (_cfb ,_edf ,_ag ,_dca ,_efc ,_edd int ;
_bbe byte ;_ff error ;);if _cgd > 0{_bbe ,_ff =_gcg .RegionBitmap .GetByte (_de -_gde );if _ff !=nil {return _ff ;};_ag =int (_bbe );};if _ggeb > 0&&_ggeb <=_gcg .ReferenceBitmap .Height {_bbe ,_ff =_gcg .ReferenceBitmap .GetByte (_dda -_dcd +_ca );if _ff !=nil {return _ff ;
};_dca =int (_bbe )<<4;};if _ggeb >=0&&_ggeb < _gcg .ReferenceBitmap .Height {_bbe ,_ff =_gcg .ReferenceBitmap .GetByte (_dda +_ca );if _ff !=nil {return _ff ;};_efc =int (_bbe )<<1;};if _ggeb > -2&&_ggeb < _gcg .ReferenceBitmap .Height -1{_bbe ,_ff =_gcg .ReferenceBitmap .GetByte (_dda +_dcd +_ca );
if _ff !=nil {return _ff ;};_edd =int (_bbe );};_cfb =((_ag >>5)&0x6)|((_edd >>2)&0x30)|(_efc &0x180)|(_dca &0xc00);var _gb int ;for _ceac :=0;_ceac < _dd ;_ceac =_gb {var _edfe int ;_gb =_ceac +8;var _ga int ;if _ga =_beg -_ceac ;_ga > 8{_ga =8;};_gf :=_gb < _beg ;
_dcdc :=_gb < _gcg .ReferenceBitmap .Width ;_cbc :=_ca +1;if _cgd > 0{_bbe =0;if _gf {_bbe ,_ff =_gcg .RegionBitmap .GetByte (_de -_gde +1);if _ff !=nil {return _ff ;};};_ag =(_ag <<8)|int (_bbe );};if _ggeb > 0&&_ggeb <=_gcg .ReferenceBitmap .Height {var _gca int ;
if _dcdc {_bbe ,_ff =_gcg .ReferenceBitmap .GetByte (_dda -_dcd +_cbc );if _ff !=nil {return _ff ;};_gca =int (_bbe )<<4;};_dca =(_dca <<8)|_gca ;};if _ggeb >=0&&_ggeb < _gcg .ReferenceBitmap .Height {var _dcc int ;if _dcdc {_bbe ,_ff =_gcg .ReferenceBitmap .GetByte (_dda +_cbc );
if _ff !=nil {return _ff ;};_dcc =int (_bbe )<<1;};_efc =(_efc <<8)|_dcc ;};if _ggeb > -2&&_ggeb < (_gcg .ReferenceBitmap .Height -1){_bbe =0;if _dcdc {_bbe ,_ff =_gcg .ReferenceBitmap .GetByte (_dda +_dcd +_cbc );if _ff !=nil {return _ff ;};};_edd =(_edd <<8)|int (_bbe );
};for _dga :=0;_dga < _ga ;_dga ++{var _cfg int ;_bf :=false ;_cbg :=(_cfb >>4)&0x1ff;if _cbg ==0x1ff{_bf =true ;_cfg =1;}else if _cbg ==0x00{_bf =true ;};if !_bf {if _gcg ._ab {_edf =_gcg .overrideAtTemplate0 (_cfb ,_ceac +_dga ,_cgd ,_edfe ,_dga );_gcg ._fg .SetIndex (int32 (_edf ));
}else {_gcg ._fg .SetIndex (int32 (_cfb ));};_cfg ,_ff =_gcg ._cea .DecodeBit (_gcg ._fg );if _ff !=nil {return _ff ;};};_bce :=uint (7-_dga );_edfe |=_cfg <<_bce ;_cfb =((_cfb &0xdb6)<<1)|_cfg |(_ag >>_bce +5)&0x002|((_edd >>_bce +2)&0x010)|((_efc >>_bce )&0x080)|((_dca >>_bce )&0x400);
};_ff =_gcg .RegionBitmap .SetByte (_de ,byte (_edfe ));if _ff !=nil {return _ff ;};_de ++;_dda ++;};return nil ;};func (_dgfg *Header )readHeaderFlags ()error {const _bbbb ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_acg ,_dcge :=_dgfg .Reader .ReadBit ();if _dcge !=nil {return _cg .Wrap (_dcge ,_bbbb ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _acg !=0{_dgfg .RetainFlag =true ;};_acg ,_dcge =_dgfg .Reader .ReadBit ();if _dcge !=nil {return _cg .Wrap (_dcge ,_bbbb ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _acg !=0{_dgfg .PageAssociationFieldSize =true ;};_gagf ,_dcge :=_dgfg .Reader .ReadBits (6);if _dcge !=nil {return _cg .Wrap (_dcge ,_bbbb ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_dgfg .Type =Type (int (_gagf ));
return nil ;};func (_caa *template1 )setIndex (_gfe *_a .DecoderStats ){_gfe .SetIndex (0x080)};func (_ba *GenericRefinementRegion )Init (header *Header ,r *_cc .Reader )error {_ba ._ce =header ;_ba ._aa =r ;_ba .RegionInfo =NewRegionSegment (r );return _ba .parseHeader ();
};func (_bdde *GenericRegion )copyLineAbove (_ffbd int )error {_gdef :=_ffbd *_bdde .Bitmap .RowStride ;_bef :=_gdef -_bdde .Bitmap .RowStride ;for _bea :=0;_bea < _bdde .Bitmap .RowStride ;_bea ++{_ffca ,_bac :=_bdde .Bitmap .GetByte (_bef );if _bac !=nil {return _bac ;
};_bef ++;if _bac =_bdde .Bitmap .SetByte (_gdef ,_ffca );_bac !=nil {return _bac ;};_gdef ++;};return nil ;};func (_gda *GenericRegion )Size ()int {return _gda .RegionSegment .Size ()+1+2*len (_gda .GBAtX )};func (_dec *GenericRegion )Init (h *Header ,r *_cc .Reader )error {_dec .RegionSegment =NewRegionSegment (r );
_dec ._dff =r ;return _dec .parseHeader ();};func (_baf *GenericRegion )GetRegionInfo ()*RegionSegment {return _baf .RegionSegment };var _ templater =&template0 {};func (_geced *SymbolDictionary )addSymbol (_cdce Regioner )error {_bcbd ,_dbbd :=_cdce .GetRegionBitmap ();
if _dbbd !=nil {return _dbbd ;};_geced ._dcgg [_geced ._fecdc ]=_bcbd ;_geced ._cddf =append (_geced ._cddf ,_bcbd );_cb .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_bcbd );
return nil ;};type PatternDictionary struct{_ccgb *_cc .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_ea .Bitmap ;
GrayMax uint32 ;};func (_cfbbb *TextRegion )decodeRdw ()(int64 ,error ){const _egcg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _cfbbb .IsHuffmanEncoded {if _cfbbb .SbHuffRDWidth ==3{if _cfbbb ._fgcg ==nil {var (_ebedcf int ;_bddf error ;);if _cfbbb .SbHuffFS ==3{_ebedcf ++;
};if _cfbbb .SbHuffDS ==3{_ebedcf ++;};if _cfbbb .SbHuffDT ==3{_ebedcf ++;};_cfbbb ._fgcg ,_bddf =_cfbbb .getUserTable (_ebedcf );if _bddf !=nil {return 0,_cg .Wrap (_bddf ,_egcg ,"");};};return _cfbbb ._fgcg .Decode (_cfbbb ._egge );};_ggee ,_feee :=_ge .GetStandardTable (14+int (_cfbbb .SbHuffRDWidth ));
if _feee !=nil {return 0,_cg .Wrap (_feee ,_egcg ,"");};return _ggee .Decode (_cfbbb ._egge );};_gdde ,_eafd :=_cfbbb ._cddgg .DecodeInt (_cfbbb ._fcbgb );if _eafd !=nil {return 0,_cg .Wrap (_eafd ,_egcg ,"");};return int64 (_gdde ),nil ;};func (_cddg *SymbolDictionary )readRegionFlags ()error {var (_fbfbb uint64 ;
_ccgd int ;);_ ,_aegf :=_cddg ._gfbe .ReadBits (3);if _aegf !=nil {return _aegf ;};_ccgd ,_aegf =_cddg ._gfbe .ReadBit ();if _aegf !=nil {return _aegf ;};_cddg .SdrTemplate =int8 (_ccgd );_fbfbb ,_aegf =_cddg ._gfbe .ReadBits (2);if _aegf !=nil {return _aegf ;
};_cddg .SdTemplate =int8 (_fbfbb &0xf);_ccgd ,_aegf =_cddg ._gfbe .ReadBit ();if _aegf !=nil {return _aegf ;};if _ccgd ==1{_cddg ._cdge =true ;};_ccgd ,_aegf =_cddg ._gfbe .ReadBit ();if _aegf !=nil {return _aegf ;};if _ccgd ==1{_cddg ._efba =true ;};
_ccgd ,_aegf =_cddg ._gfbe .ReadBit ();if _aegf !=nil {return _aegf ;};if _ccgd ==1{_cddg .SdHuffAggInstanceSelection =true ;};_ccgd ,_aegf =_cddg ._gfbe .ReadBit ();if _aegf !=nil {return _aegf ;};_cddg .SdHuffBMSizeSelection =int8 (_ccgd );_fbfbb ,_aegf =_cddg ._gfbe .ReadBits (2);
if _aegf !=nil {return _aegf ;};_cddg .SdHuffDecodeWidthSelection =int8 (_fbfbb &0xf);_fbfbb ,_aegf =_cddg ._gfbe .ReadBits (2);if _aegf !=nil {return _aegf ;};_cddg .SdHuffDecodeHeightSelection =int8 (_fbfbb &0xf);_ccgd ,_aegf =_cddg ._gfbe .ReadBit ();
if _aegf !=nil {return _aegf ;};if _ccgd ==1{_cddg .UseRefinementAggregation =true ;};_ccgd ,_aegf =_cddg ._gfbe .ReadBit ();if _aegf !=nil {return _aegf ;};if _ccgd ==1{_cddg .IsHuffmanEncoded =true ;};return nil ;};func (_gga *EndOfStripe )parseHeader ()error {_fd ,_ad :=_gga ._fe .ReadBits (32);
if _ad !=nil {return _ad ;};_gga ._ac =int (_fd &_b .MaxInt32 );return nil ;};func (_eegg *PageInformationSegment )CombinationOperator ()_ea .CombinationOperator {return _eegg ._gbga ;};func (_dg *GenericRefinementRegion )getGrReference ()(*_ea .Bitmap ,error ){segments :=_dg ._ce .RTSegments ;
if len (segments )==0{return nil ,_gg .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_cgb ,_cgg :=segments [0].GetSegmentData ();
if _cgg !=nil {return nil ,_cgg ;};_fge ,_cf :=_cgb .(Regioner );if !_cf {return nil ,_c .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_cgb );
};return _fge .GetRegionBitmap ();};func (_agbb *TableSegment )StreamReader ()*_cc .Reader {return _agbb ._gecef };func (_cfgd *SymbolDictionary )encodeFlags (_aeg _cc .BinaryWriter )(_aage int ,_ccfa error ){const _ccfae ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _ccfa =_aeg .SkipBits (3);_ccfa !=nil {return 0,_cg .Wrap (_ccfa ,_ccfae ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _aabd int ;if _cfgd .SdrTemplate > 0{_aabd =1;};if _ccfa =_aeg .WriteBit (_aabd );_ccfa !=nil {return _aage ,_cg .Wrap (_ccfa ,_ccfae ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_aabd =0;if _cfgd .SdTemplate > 1{_aabd =1;};if _ccfa =_aeg .WriteBit (_aabd );_ccfa !=nil {return _aage ,_cg .Wrap (_ccfa ,_ccfae ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_aabd =0;if _cfgd .SdTemplate ==1||_cfgd .SdTemplate ==3{_aabd =1;
};if _ccfa =_aeg .WriteBit (_aabd );_ccfa !=nil {return _aage ,_cg .Wrap (_ccfa ,_ccfae ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_aabd =0;if _cfgd ._cdge {_aabd =1;};if _ccfa =_aeg .WriteBit (_aabd );_ccfa !=nil {return _aage ,_cg .Wrap (_ccfa ,_ccfae ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_aabd =0;if _cfgd ._efba {_aabd =1;};if _ccfa =_aeg .WriteBit (_aabd );_ccfa !=nil {return _aage ,_cg .Wrap (_ccfa ,_ccfae ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_aabd =0;if _cfgd .SdHuffAggInstanceSelection {_aabd =1;
};if _ccfa =_aeg .WriteBit (_aabd );_ccfa !=nil {return _aage ,_cg .Wrap (_ccfa ,_ccfae ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_aabd =int (_cfgd .SdHuffBMSizeSelection );if _ccfa =_aeg .WriteBit (_aabd );_ccfa !=nil {return _aage ,_cg .Wrap (_ccfa ,_ccfae ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");
};_aabd =0;if _cfgd .SdHuffDecodeWidthSelection > 1{_aabd =1;};if _ccfa =_aeg .WriteBit (_aabd );_ccfa !=nil {return _aage ,_cg .Wrap (_ccfa ,_ccfae ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_aabd =0;switch _cfgd .SdHuffDecodeWidthSelection {case 1,3:_aabd =1;
};if _ccfa =_aeg .WriteBit (_aabd );_ccfa !=nil {return _aage ,_cg .Wrap (_ccfa ,_ccfae ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_aabd =0;if _cfgd .SdHuffDecodeHeightSelection > 1{_aabd =1;};if _ccfa =_aeg .WriteBit (_aabd );
_ccfa !=nil {return _aage ,_cg .Wrap (_ccfa ,_ccfae ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_aabd =0;switch _cfgd .SdHuffDecodeHeightSelection {case 1,3:_aabd =1;};if _ccfa =_aeg .WriteBit (_aabd );_ccfa !=nil {return _aage ,_cg .Wrap (_ccfa ,_ccfae ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");
};_aabd =0;if _cfgd .UseRefinementAggregation {_aabd =1;};if _ccfa =_aeg .WriteBit (_aabd );_ccfa !=nil {return _aage ,_cg .Wrap (_ccfa ,_ccfae ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_aabd =0;if _cfgd .IsHuffmanEncoded {_aabd =1;};if _ccfa =_aeg .WriteBit (_aabd );
_ccfa !=nil {return _aage ,_cg .Wrap (_ccfa ,_ccfae ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_acgf *TableSegment )HtHigh ()int32 {return _acgf ._fcbd };func (_ddbg *PageInformationSegment )readDefaultPixelValue ()error {_dfaa ,_fcdbe :=_ddbg ._dgc .ReadBit ();
if _fcdbe !=nil {return _fcdbe ;};_ddbg .DefaultPixelValue =uint8 (_dfaa &0xf);return nil ;};func (_eddg *template1 )form (_ggce ,_dgaf ,_ffb ,_egcb ,_dcgb int16 )int16 {return ((_ggce &0x02)<<8)|(_dgaf <<6)|((_ffb &0x03)<<4)|(_egcb <<1)|_dcgb ;};func (_dfb *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _dfb .IsHuffmanEncoded {switch _dfb .SdHuffDecodeWidthSelection {case 0:_edgc ,_gccfg :=_ge .GetStandardTable (2);
if _gccfg !=nil {return 0,_gccfg ;};return _edgc .Decode (_dfb ._gfbe );case 1:_aeb ,_ffggd :=_ge .GetStandardTable (3);if _ffggd !=nil {return 0,_ffggd ;};return _aeb .Decode (_dfb ._gfbe );case 3:if _dfb ._eeegb ==nil {var _caaba int ;if _dfb .SdHuffDecodeHeightSelection ==3{_caaba ++;
};_acec ,_caff :=_dfb .getUserTable (_caaba );if _caff !=nil {return 0,_caff ;};_dfb ._eeegb =_acec ;};return _dfb ._eeegb .Decode (_dfb ._gfbe );};}else {_cdbg ,_baed :=_dfb ._gddg .DecodeInt (_dfb ._ffade );if _baed !=nil {return 0,_baed ;};return int64 (_cdbg ),nil ;
};return 0,nil ;};func (_dabc *GenericRegion )Encode (w _cc .BinaryWriter )(_dcag int ,_adc error ){const _edb ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _dabc .Bitmap ==nil {return 0,_cg .Error (_edb ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};_bgad ,_adc :=_dabc .RegionSegment .Encode (w );if _adc !=nil {return 0,_cg .Wrap (_adc ,_edb ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_dcag +=_bgad ;if _adc =w .SkipBits (4);_adc !=nil {return _dcag ,_cg .Wrap (_adc ,_edb ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");
};var _edfc int ;if _dabc .IsTPGDon {_edfc =1;};if _adc =w .WriteBit (_edfc );_adc !=nil {return _dcag ,_cg .Wrap (_adc ,_edb ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_edfc =0;if _adc =w .WriteBit (int (_dabc .GBTemplate >>1)&0x01);_adc !=nil {return _dcag ,_cg .Wrap (_adc ,_edb ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _adc =w .WriteBit (int (_dabc .GBTemplate )&0x01);_adc !=nil {return _dcag ,_cg .Wrap (_adc ,_edb ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _dabc .UseMMR {_edfc =1;};if _adc =w .WriteBit (_edfc );
_adc !=nil {return _dcag ,_cg .Wrap (_adc ,_edb ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_dcag ++;if _bgad ,_adc =_dabc .writeGBAtPixels (w );_adc !=nil {return _dcag ,_cg .Wrap (_adc ,_edb ,"");};_dcag +=_bgad ;_dgb :=_gd .New ();
if _adc =_dgb .EncodeBitmap (_dabc .Bitmap ,_dabc .IsTPGDon );_adc !=nil {return _dcag ,_cg .Wrap (_adc ,_edb ,"");};_dgb .Final ();var _dgde int64 ;if _dgde ,_adc =_dgb .WriteTo (w );_adc !=nil {return _dcag ,_cg .Wrap (_adc ,_edb ,"");};_dcag +=int (_dgde );
return _dcag ,nil ;};func (_ddg *GenericRegion )overrideAtTemplate0a (_bdbag ,_cefg ,_fae ,_gea ,_cacb ,_gcd int )int {if _ddg .GBAtOverride [0]{_bdbag &=0xFFEF;if _ddg .GBAtY [0]==0&&_ddg .GBAtX [0]>=-int8 (_cacb ){_bdbag |=(_gea >>uint (int8 (_gcd )-_ddg .GBAtX [0]&0x1))<<4;
}else {_bdbag |=int (_ddg .getPixel (_cefg +int (_ddg .GBAtX [0]),_fae +int (_ddg .GBAtY [0])))<<4;};};if _ddg .GBAtOverride [1]{_bdbag &=0xFBFF;if _ddg .GBAtY [1]==0&&_ddg .GBAtX [1]>=-int8 (_cacb ){_bdbag |=(_gea >>uint (int8 (_gcd )-_ddg .GBAtX [1]&0x1))<<10;
}else {_bdbag |=int (_ddg .getPixel (_cefg +int (_ddg .GBAtX [1]),_fae +int (_ddg .GBAtY [1])))<<10;};};if _ddg .GBAtOverride [2]{_bdbag &=0xF7FF;if _ddg .GBAtY [2]==0&&_ddg .GBAtX [2]>=-int8 (_cacb ){_bdbag |=(_gea >>uint (int8 (_gcd )-_ddg .GBAtX [2]&0x1))<<11;
}else {_bdbag |=int (_ddg .getPixel (_cefg +int (_ddg .GBAtX [2]),_fae +int (_ddg .GBAtY [2])))<<11;};};if _ddg .GBAtOverride [3]{_bdbag &=0x7FFF;if _ddg .GBAtY [3]==0&&_ddg .GBAtX [3]>=-int8 (_cacb ){_bdbag |=(_gea >>uint (int8 (_gcd )-_ddg .GBAtX [3]&0x1))<<15;
}else {_bdbag |=int (_ddg .getPixel (_cefg +int (_ddg .GBAtX [3]),_fae +int (_ddg .GBAtY [3])))<<15;};};return _bdbag ;};func (_fgec *HalftoneRegion )Init (hd *Header ,r *_cc .Reader )error {_fgec ._ggf =r ;_fgec ._aefc =hd ;_fgec .RegionSegment =NewRegionSegment (r );
return _fgec .parseHeader ();};func (_dddc *PatternDictionary )GetDictionary ()([]*_ea .Bitmap ,error ){if _dddc .Patterns !=nil {return _dddc .Patterns ,nil ;};if !_dddc .IsMMREncoded {_dddc .setGbAtPixels ();};_dcdf :=NewGenericRegion (_dddc ._ccgb );
_dcdf .setParametersMMR (_dddc .IsMMREncoded ,_dddc .DataOffset ,_dddc .DataLength ,uint32 (_dddc .HdpHeight ),(_dddc .GrayMax +1)*uint32 (_dddc .HdpWidth ),_dddc .HDTemplate ,false ,false ,_dddc .GBAtX ,_dddc .GBAtY );_cgee ,_ccfe :=_dcdf .GetRegionBitmap ();
if _ccfe !=nil {return nil ,_ccfe ;};if _ccfe =_dddc .extractPatterns (_cgee );_ccfe !=nil {return nil ,_ccfe ;};return _dddc .Patterns ,nil ;};func (_ebbcg *TextRegion )encodeSymbols (_cafad _cc .BinaryWriter )(_cead int ,_agfb error ){const _ead ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_fbbg :=make ([]byte ,4);_bd .BigEndian .PutUint32 (_fbbg ,_ebbcg .NumberOfSymbols );if _cead ,_agfb =_cafad .Write (_fbbg );_agfb !=nil {return _cead ,_cg .Wrap (_agfb ,_ead ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_cagge ,_agfb :=_ea .NewClassedPoints (_ebbcg ._egb ,_ebbcg ._cfdc );if _agfb !=nil {return 0,_cg .Wrap (_agfb ,_ead ,"");};var _dcgbe ,_bdbab int ;_ebg :=_gd .New ();_ebg .Init ();if _agfb =_ebg .EncodeInteger (_gd .IADT ,0);_agfb !=nil {return _cead ,_cg .Wrap (_agfb ,_ead ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_fcbgd ,_agfb :=_cagge .GroupByY ();if _agfb !=nil {return 0,_cg .Wrap (_agfb ,_ead ,"");};for _ ,_gbab :=range _fcbgd {_cada :=int (_gbab .YAtIndex (0));_fgab :=_cada -_dcgbe ;if _agfb =_ebg .EncodeInteger (_gd .IADT ,_fgab );_agfb !=nil {return _cead ,_cg .Wrap (_agfb ,_ead ,"");
};var _edag int ;for _edab ,_cfbbc :=range _gbab .IntSlice {switch _edab {case 0:_bgagd :=int (_gbab .XAtIndex (_edab ))-_bdbab ;if _agfb =_ebg .EncodeInteger (_gd .IAFS ,_bgagd );_agfb !=nil {return _cead ,_cg .Wrap (_agfb ,_ead ,"");};_bdbab +=_bgagd ;
_edag =_bdbab ;default:_gfde :=int (_gbab .XAtIndex (_edab ))-_edag ;if _agfb =_ebg .EncodeInteger (_gd .IADS ,_gfde );_agfb !=nil {return _cead ,_cg .Wrap (_agfb ,_ead ,"");};_edag +=_gfde ;};_dfdaf ,_dacag :=_ebbcg ._dacg .Get (_cfbbc );if _dacag !=nil {return _cead ,_cg .Wrap (_dacag ,_ead ,"");
};_afbg ,_afba :=_ebbcg ._bcfb [_dfdaf ];if !_afba {_afbg ,_afba =_ebbcg ._ggdb [_dfdaf ];if !_afba {return _cead ,_cg .Errorf (_ead ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_dfdaf );
};};if _dacag =_ebg .EncodeIAID (_ebbcg ._ccee ,_afbg );_dacag !=nil {return _cead ,_cg .Wrap (_dacag ,_ead ,"");};};if _agfb =_ebg .EncodeOOB (_gd .IADS );_agfb !=nil {return _cead ,_cg .Wrap (_agfb ,_ead ,"");};};_ebg .Final ();_cdec ,_agfb :=_ebg .WriteTo (_cafad );
if _agfb !=nil {return _cead ,_cg .Wrap (_agfb ,_ead ,"");};_cead +=int (_cdec );return _cead ,nil ;};func (_cgdd *RegionSegment )parseHeader ()error {const _agdf ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_cb .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_cb .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_cbd ,_bfca :=_cgdd ._feec .ReadBits (32);
if _bfca !=nil {return _cg .Wrap (_bfca ,_agdf ,"\u0077\u0069\u0064t\u0068");};_cgdd .BitmapWidth =uint32 (_cbd &_b .MaxUint32 );_cbd ,_bfca =_cgdd ._feec .ReadBits (32);if _bfca !=nil {return _cg .Wrap (_bfca ,_agdf ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_cgdd .BitmapHeight =uint32 (_cbd &_b .MaxUint32 );_cbd ,_bfca =_cgdd ._feec .ReadBits (32);if _bfca !=nil {return _cg .Wrap (_bfca ,_agdf ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_cgdd .XLocation =uint32 (_cbd &_b .MaxUint32 );
_cbd ,_bfca =_cgdd ._feec .ReadBits (32);if _bfca !=nil {return _cg .Wrap (_bfca ,_agdf ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_cgdd .YLocation =uint32 (_cbd &_b .MaxUint32 );if _ ,_bfca =_cgdd ._feec .ReadBits (5);_bfca !=nil {return _cg .Wrap (_bfca ,_agdf ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _bfca =_cgdd .readCombinationOperator ();_bfca !=nil {return _cg .Wrap (_bfca ,_agdf ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_ade *GenericRefinementRegion )decodeTypicalPredictedLine (_gce ,_dac ,_cbe ,_bed ,_acc ,_dcg int )error {_cgc :=_gce -int (_ade .ReferenceDY );
_fgf :=_ade .ReferenceBitmap .GetByteIndex (0,_cgc );_cca :=_ade .RegionBitmap .GetByteIndex (0,_gce );var _bcc error ;switch _ade .TemplateID {case 0:_bcc =_ade .decodeTypicalPredictedLineTemplate0 (_gce ,_dac ,_cbe ,_bed ,_acc ,_dcg ,_cca ,_cgc ,_fgf );
case 1:_bcc =_ade .decodeTypicalPredictedLineTemplate1 (_gce ,_dac ,_cbe ,_bed ,_acc ,_dcg ,_cca ,_cgc ,_fgf );};return _bcc ;};func NewHeader (d Documenter ,r *_cc .Reader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_bbb :=&Header {Reader :r };
if _fcbc :=_bbb .parse (d ,r ,offset ,organizationType );_fcbc !=nil {return nil ,_cg .Wrap (_fcbc ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _bbb ,nil ;};func (_agc *PatternDictionary )readGrayMax ()error {_bfge ,_gcaf :=_agc ._ccgb .ReadBits (32);
if _gcaf !=nil {return _gcaf ;};_agc .GrayMax =uint32 (_bfge &_b .MaxUint32 );return nil ;};func (_fcdbg *TextRegion )createRegionBitmap ()error {_fcdbg .RegionBitmap =_ea .New (int (_fcdbg .RegionInfo .BitmapWidth ),int (_fcdbg .RegionInfo .BitmapHeight ));
if _fcdbg .DefaultPixel !=0{_fcdbg .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_cgdad *SymbolDictionary )decodeThroughTextRegion (_bfcfa ,_eddc ,_cbag uint32 )error {if _cgdad ._beaf ==nil {_cgdad ._beaf =_bgeb (_cgdad ._gfbe ,nil );_cgdad ._beaf .setContexts (_cgdad ._fbfe ,_a .NewStats (512,1),_a .NewStats (512,1),_a .NewStats (512,1),_a .NewStats (512,1),_cgdad ._aab ,_a .NewStats (512,1),_a .NewStats (512,1),_a .NewStats (512,1),_a .NewStats (512,1));
};if _acdba :=_cgdad .setSymbolsArray ();_acdba !=nil {return _acdba ;};_cgdad ._beaf .setParameters (_cgdad ._gddg ,_cgdad .IsHuffmanEncoded ,true ,_bfcfa ,_eddc ,_cbag ,1,_cgdad ._bdce +_cgdad ._fecdc ,0,0,0,1,0,0,0,0,0,0,0,0,0,_cgdad .SdrTemplate ,_cgdad .SdrATX ,_cgdad .SdrATY ,_cgdad ._cddf ,_cgdad ._aac );
return _cgdad .addSymbol (_cgdad ._beaf );};func (_gdg *GenericRefinementRegion )getPixel (_cfa *_ea .Bitmap ,_age ,_gdd int )int {if _age < 0||_age >=_cfa .Width {return 0;};if _gdd < 0||_gdd >=_cfa .Height {return 0;};if _cfa .GetPixel (_age ,_gdd ){return 1;
};return 0;};func (_da *EndOfStripe )LineNumber ()int {return _da ._ac };func (_egef *SymbolDictionary )readNumberOfNewSymbols ()error {_dfba ,_dbbc :=_egef ._gfbe .ReadBits (32);if _dbbc !=nil {return _dbbc ;};_egef .NumberOfNewSymbols =uint32 (_dfba &_b .MaxUint32 );
return nil ;};func (_ebdab *PageInformationSegment )readIsLossless ()error {_dgedc ,_aba :=_ebdab ._dgc .ReadBit ();if _aba !=nil {return _aba ;};if _dgedc ==1{_ebdab .IsLossless =true ;};return nil ;};type TextRegion struct{_egge *_cc .Reader ;RegionInfo *RegionSegment ;
SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _ea .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;
SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_cafa int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_ea .Bitmap ;Symbols []*_ea .Bitmap ;_cddgg *_a .Decoder ;
_fbab *GenericRefinementRegion ;_dcbb *_a .DecoderStats ;_bbfc *_a .DecoderStats ;_dfga *_a .DecoderStats ;_dfaad *_a .DecoderStats ;_dabccf *_a .DecoderStats ;_fcbgb *_a .DecoderStats ;_cafgg *_a .DecoderStats ;_cgcdf *_a .DecoderStats ;_fdfbg *_a .DecoderStats ;
_aecg *_a .DecoderStats ;_bgcd *_a .DecoderStats ;_cfee int8 ;_fgdd *_ge .FixedSizeTable ;Header *Header ;_gbbc _ge .Tabler ;_bgae _ge .Tabler ;_cbgcg _ge .Tabler ;_fgcg _ge .Tabler ;_baba _ge .Tabler ;_dfee _ge .Tabler ;_fbee _ge .Tabler ;_eccg _ge .Tabler ;
_bcfb ,_ggdb map[int ]int ;_cfdc []int ;_egb *_ea .Points ;_fdab *_ea .Bitmaps ;_dacg *_gge .IntSlice ;_gdcd ,_ccee int ;_dcaca *_ea .Boxes ;};func (_cabe *TextRegion )readAmountOfSymbolInstances ()error {_bafe ,_beebf :=_cabe ._egge .ReadBits (32);if _beebf !=nil {return _beebf ;
};_cabe .NumberOfSymbolInstances =uint32 (_bafe &_b .MaxUint32 );_baef :=_cabe .RegionInfo .BitmapWidth *_cabe .RegionInfo .BitmapHeight ;if _baef < _cabe .NumberOfSymbolInstances {_cb .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_baef ,_cabe .NumberOfSymbolInstances );
_cabe .NumberOfSymbolInstances =_baef ;};return nil ;};func (_dgdd *GenericRegion )computeSegmentDataStructure ()error {_dgdd .DataOffset =_dgdd ._dff .AbsolutePosition ();_dgdd .DataHeaderLength =_dgdd .DataOffset -_dgdd .DataHeaderOffset ;_dgdd .DataLength =int64 (_dgdd ._dff .AbsoluteLength ())-_dgdd .DataHeaderLength ;
return nil ;};func (_cgdac *TextRegion )readUseRefinement ()error {if !_cgdac .UseRefinement ||_cgdac .SbrTemplate !=0{return nil ;};var (_cgff byte ;_ccdg error ;);_cgdac .SbrATX =make ([]int8 ,2);_cgdac .SbrATY =make ([]int8 ,2);_cgff ,_ccdg =_cgdac ._egge .ReadByte ();
if _ccdg !=nil {return _ccdg ;};_cgdac .SbrATX [0]=int8 (_cgff );_cgff ,_ccdg =_cgdac ._egge .ReadByte ();if _ccdg !=nil {return _ccdg ;};_cgdac .SbrATY [0]=int8 (_cgff );_cgff ,_ccdg =_cgdac ._egge .ReadByte ();if _ccdg !=nil {return _ccdg ;};_cgdac .SbrATX [1]=int8 (_cgff );
_cgff ,_ccdg =_cgdac ._egge .ReadByte ();if _ccdg !=nil {return _ccdg ;};_cgdac .SbrATY [1]=int8 (_cgff );return nil ;};func (_bgag *TextRegion )checkInput ()error {const _cfcf ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_bgag .UseRefinement {if _bgag .SbrTemplate !=0{_cb .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_bgag .SbrTemplate =0;};};if _bgag .SbHuffFS ==2||_bgag .SbHuffRDWidth ==2||_bgag .SbHuffRDHeight ==2||_bgag .SbHuffRDX ==2||_bgag .SbHuffRDY ==2{return _cg .Error (_cfcf ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_bgag .UseRefinement {if _bgag .SbHuffRSize !=0{_cb .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_bgag .SbHuffRSize =0;};if _bgag .SbHuffRDY !=0{_cb .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_bgag .SbHuffRDY =0;};if _bgag .SbHuffRDX !=0{_cb .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_bgag .SbHuffRDX =0;};if _bgag .SbHuffRDWidth !=0{_cb .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_bgag .SbHuffRDWidth =0;};if _bgag .SbHuffRDHeight !=0{_cb .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_bgag .SbHuffRDHeight =0;};};return nil ;
};func (_eagc *RegionSegment )String ()string {_aeea :=&_ef .Builder {};_aeea .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_aeea .WriteString (_c .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_eagc .BitmapWidth ,_eagc .BitmapHeight ));
_aeea .WriteString (_c .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_eagc .XLocation ,_eagc .YLocation ));_aeea .WriteString (_c .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_eagc .CombinaionOperator ));
return _aeea .String ();};func (_afe *PageInformationSegment )readResolution ()error {_agac ,_afdd :=_afe ._dgc .ReadBits (32);if _afdd !=nil {return _afdd ;};_afe .ResolutionX =int (_agac &_b .MaxInt32 );_agac ,_afdd =_afe ._dgc .ReadBits (32);if _afdd !=nil {return _afdd ;
};_afe .ResolutionY =int (_agac &_b .MaxInt32 );return nil ;};func (_edccf *SymbolDictionary )readRefinementAtPixels (_cbfe int )error {_edccf .SdrATX =make ([]int8 ,_cbfe );_edccf .SdrATY =make ([]int8 ,_cbfe );var (_ddf byte ;_ggef error ;);for _accf :=0;
_accf < _cbfe ;_accf ++{_ddf ,_ggef =_edccf ._gfbe .ReadByte ();if _ggef !=nil {return _ggef ;};_edccf .SdrATX [_accf ]=int8 (_ddf );_ddf ,_ggef =_edccf ._gfbe .ReadByte ();if _ggef !=nil {return _ggef ;};_edccf .SdrATY [_accf ]=int8 (_ddf );};return nil ;
};var _ _ge .BasicTabler =&TableSegment {};func (_aec *TableSegment )HtLow ()int32 {return _aec ._gba };func (_fbaea *SymbolDictionary )decodeRefinedSymbol (_edaa ,_fegf uint32 )error {var (_gcfd int ;_gfeca ,_dedd int32 ;);if _fbaea .IsHuffmanEncoded {_gade ,_ffbg :=_fbaea ._gfbe .ReadBits (byte (_fbaea ._aac ));
if _ffbg !=nil {return _ffbg ;};_gcfd =int (_gade );_ffbgg ,_ffbg :=_ge .GetStandardTable (15);if _ffbg !=nil {return _ffbg ;};_fabb ,_ffbg :=_ffbgg .Decode (_fbaea ._gfbe );if _ffbg !=nil {return _ffbg ;};_gfeca =int32 (_fabb );_fabb ,_ffbg =_ffbgg .Decode (_fbaea ._gfbe );
if _ffbg !=nil {return _ffbg ;};_dedd =int32 (_fabb );_ffbgg ,_ffbg =_ge .GetStandardTable (1);if _ffbg !=nil {return _ffbg ;};if _ ,_ffbg =_ffbgg .Decode (_fbaea ._gfbe );_ffbg !=nil {return _ffbg ;};_fbaea ._gfbe .Align ();}else {_dcca ,_fbce :=_fbaea ._gddg .DecodeIAID (uint64 (_fbaea ._aac ),_fbaea ._aab );
if _fbce !=nil {return _fbce ;};_gcfd =int (_dcca );_gfeca ,_fbce =_fbaea ._gddg .DecodeInt (_fbaea ._dabcc );if _fbce !=nil {return _fbce ;};_dedd ,_fbce =_fbaea ._gddg .DecodeInt (_fbaea ._cccbe );if _fbce !=nil {return _fbce ;};};if _cffe :=_fbaea .setSymbolsArray ();
_cffe !=nil {return _cffe ;};_abea :=_fbaea ._cddf [_gcfd ];if _afce :=_fbaea .decodeNewSymbols (_edaa ,_fegf ,_abea ,_gfeca ,_dedd );_afce !=nil {return _afce ;};if _fbaea .IsHuffmanEncoded {_fbaea ._gfbe .Align ();};return nil ;};func (_fedfe *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _fedfe ._afa ==nil {var (_cdcf int ;
_cbagg error ;);if _fedfe .SdHuffDecodeHeightSelection ==3{_cdcf ++;};if _fedfe .SdHuffDecodeWidthSelection ==3{_cdcf ++;};_fedfe ._afa ,_cbagg =_fedfe .getUserTable (_cdcf );if _cbagg !=nil {return 0,_cbagg ;};};return _fedfe ._afa .Decode (_fedfe ._gfbe );
};func (_acgg *TableSegment )HtPS ()int32 {return _acgg ._cgfb };type GenericRegion struct{_dff *_cc .Reader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;
GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_gfea bool ;Bitmap *_ea .Bitmap ;_dbf *_a .Decoder ;_cccb *_a .DecoderStats ;_gfcb *_bc .Decoder ;};func (_ceed *SymbolDictionary )Encode (w _cc .BinaryWriter )(_bace int ,_cgf error ){const _gee ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _ceed ==nil {return 0,_cg .Error (_gee ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _bace ,_cgf =_ceed .encodeFlags (w );_cgf !=nil {return _bace ,_cg .Wrap (_cgf ,_gee ,"");
};_abbfg ,_cgf :=_ceed .encodeATFlags (w );if _cgf !=nil {return _bace ,_cg .Wrap (_cgf ,_gee ,"");};_bace +=_abbfg ;if _abbfg ,_cgf =_ceed .encodeRefinementATFlags (w );_cgf !=nil {return _bace ,_cg .Wrap (_cgf ,_gee ,"");};_bace +=_abbfg ;if _abbfg ,_cgf =_ceed .encodeNumSyms (w );
_cgf !=nil {return _bace ,_cg .Wrap (_cgf ,_gee ,"");};_bace +=_abbfg ;if _abbfg ,_cgf =_ceed .encodeSymbols (w );_cgf !=nil {return _bace ,_cg .Wrap (_cgf ,_gee ,"");};_bace +=_abbfg ;return _bace ,nil ;};func (_dcbbg *TextRegion )decodeIds ()(int64 ,error ){const _ffgf ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";
if _dcbbg .IsHuffmanEncoded {if _dcbbg .SbHuffDS ==3{if _dcbbg ._bgae ==nil {_eefb :=0;if _dcbbg .SbHuffFS ==3{_eefb ++;};var _cgadg error ;_dcbbg ._bgae ,_cgadg =_dcbbg .getUserTable (_eefb );if _cgadg !=nil {return 0,_cg .Wrap (_cgadg ,_ffgf ,"");};};
return _dcbbg ._bgae .Decode (_dcbbg ._egge );};_gfdc ,_bdded :=_ge .GetStandardTable (8+int (_dcbbg .SbHuffDS ));if _bdded !=nil {return 0,_cg .Wrap (_bdded ,_ffgf ,"");};return _gfdc .Decode (_dcbbg ._egge );};_dgabf ,_ddfa :=_dcbbg ._cddgg .DecodeInt (_dcbbg ._dfga );
if _ddfa !=nil {return 0,_cg .Wrap (_ddfa ,_ffgf ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_dgabf ),nil ;};func (_efdf *Header )parse (_ebda Documenter ,_ddgg *_cc .Reader ,_dacc int64 ,_deec OrganizationType )(_cgcd error ){const _bdge ="\u0070\u0061\u0072s\u0065";
_cb .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _cgcd !=nil {_cb .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_cgcd );
}else {_cb .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_cgcd =_ddgg .Seek (_dacc ,_f .SeekStart );
if _cgcd !=nil {return _cg .Wrap (_cgcd ,_bdge ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _cgcd =_efdf .readSegmentNumber (_ddgg );_cgcd !=nil {return _cg .Wrap (_cgcd ,_bdge ,"");};if _cgcd =_efdf .readHeaderFlags ();_cgcd !=nil {return _cg .Wrap (_cgcd ,_bdge ,"");
};var _abfc uint64 ;_abfc ,_cgcd =_efdf .readNumberOfReferredToSegments (_ddgg );if _cgcd !=nil {return _cg .Wrap (_cgcd ,_bdge ,"");};_efdf .RTSNumbers ,_cgcd =_efdf .readReferredToSegmentNumbers (_ddgg ,int (_abfc ));if _cgcd !=nil {return _cg .Wrap (_cgcd ,_bdge ,"");
};_cgcd =_efdf .readSegmentPageAssociation (_ebda ,_ddgg ,_abfc ,_efdf .RTSNumbers ...);if _cgcd !=nil {return _cg .Wrap (_cgcd ,_bdge ,"");};if _efdf .Type !=TEndOfFile {if _cgcd =_efdf .readSegmentDataLength (_ddgg );_cgcd !=nil {return _cg .Wrap (_cgcd ,_bdge ,"");
};};_efdf .readDataStartOffset (_ddgg ,_deec );_efdf .readHeaderLength (_ddgg ,_dacc );_cb .Log .Trace ("\u0025\u0073",_efdf );return nil ;};func (_fgdg *Header )subInputReader ()(*_cc .Reader ,error ){_eegd :=int (_fgdg .SegmentDataLength );if _fgdg .SegmentDataLength ==_b .MaxInt32 {_eegd =-1;
};return _fgdg .Reader .NewPartialReader (int (_fgdg .SegmentDataStartOffset ),_eegd ,false );};func (_gaege *PageInformationSegment )readWidthAndHeight ()error {_ddbd ,_fagga :=_gaege ._dgc .ReadBits (32);if _fagga !=nil {return _fagga ;};_gaege .PageBMWidth =int (_ddbd &_b .MaxInt32 );
_ddbd ,_fagga =_gaege ._dgc .ReadBits (32);if _fagga !=nil {return _fagga ;};_gaege .PageBMHeight =int (_ddbd &_b .MaxInt32 );return nil ;};func (_fgeg *TextRegion )GetRegionInfo ()*RegionSegment {return _fgeg .RegionInfo };func (_fceg *SymbolDictionary )decodeDirectlyThroughGenericRegion (_bdgd ,_ddda uint32 )error {if _fceg ._afbee ==nil {_fceg ._afbee =NewGenericRegion (_fceg ._gfbe );
};_fceg ._afbee .setParametersWithAt (false ,byte (_fceg .SdTemplate ),false ,false ,_fceg .SdATX ,_fceg .SdATY ,_bdgd ,_ddda ,_fceg ._fbfe ,_fceg ._gddg );return _fceg .addSymbol (_fceg ._afbee );};func (_gdfc *Header )GetSegmentData ()(Segmenter ,error ){var _gaf Segmenter ;
if _gdfc .SegmentData !=nil {_gaf =_gdfc .SegmentData ;};if _gaf ==nil {_fagg ,_gbeb :=_agda [_gdfc .Type ];if !_gbeb {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_gdfc .Type ,_gdfc .Type );
};_gaf =_fagg ();_cb .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_gdfc .SegmentNumber ,_gdfc .SegmentDataStartOffset );
_gfgd ,_cdaa :=_gdfc .subInputReader ();if _cdaa !=nil {return nil ,_cdaa ;};if _dccc :=_gaf .Init (_gdfc ,_gfgd );_dccc !=nil {_cb .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_dccc ,_gaf );
return nil ,_dccc ;};_gdfc .SegmentData =_gaf ;};return _gaf ,nil ;};func (_bafc *SymbolDictionary )setInSyms ()error {if _bafc .Header .RTSegments !=nil {return _bafc .retrieveImportSymbols ();};_bafc ._gbca =make ([]*_ea .Bitmap ,0);return nil ;};func (_feff *RegionSegment )Size ()int {return 17};
type EndOfStripe struct{_fe *_cc .Reader ;_ac int ;};func (_gbcb *HalftoneRegion )computeX (_eac ,_egfa int )int {return _gbcb .shiftAndFill (int (_gbcb .HGridX )+_eac *int (_gbcb .HRegionY )+_egfa *int (_gbcb .HRegionX ));};func (_gaeg *HalftoneRegion )computeGrayScalePlanes (_fdbb []*_ea .Bitmap ,_bacgb int )([][]int ,error ){_gfdf :=make ([][]int ,_gaeg .HGridHeight );
for _feeg :=0;_feeg < len (_gfdf );_feeg ++{_gfdf [_feeg ]=make ([]int ,_gaeg .HGridWidth );};for _eabe :=0;_eabe < int (_gaeg .HGridHeight );_eabe ++{for _fdd :=0;_fdd < int (_gaeg .HGridWidth );_fdd +=8{var _dbgg int ;if _aaef :=int (_gaeg .HGridWidth )-_fdd ;
_aaef > 8{_dbgg =8;}else {_dbgg =_aaef ;};_fdbd :=_fdbb [0].GetByteIndex (_fdd ,_eabe );for _bdc :=0;_bdc < _dbgg ;_bdc ++{_faeb :=_bdc +_fdd ;_gfdf [_eabe ][_faeb ]=0;for _cgad :=0;_cgad < _bacgb ;_cgad ++{_dce ,_fbdf :=_fdbb [_cgad ].GetByte (_fdbd );
if _fbdf !=nil {return nil ,_fbdf ;};_aed :=_dce >>uint (7-_faeb &7);_dffa :=_aed &1;_gcga :=1<<uint (_cgad );_gbe :=int (_dffa )*_gcga ;_gfdf [_eabe ][_faeb ]+=_gbe ;};};};};return _gfdf ,nil ;};func (_aedb *SymbolDictionary )setRetainedCodingContexts (_fga *SymbolDictionary ){_aedb ._gddg =_fga ._gddg ;
_aedb .IsHuffmanEncoded =_fga .IsHuffmanEncoded ;_aedb .UseRefinementAggregation =_fga .UseRefinementAggregation ;_aedb .SdTemplate =_fga .SdTemplate ;_aedb .SdrTemplate =_fga .SdrTemplate ;_aedb .SdATX =_fga .SdATX ;_aedb .SdATY =_fga .SdATY ;_aedb .SdrATX =_fga .SdrATX ;
_aedb .SdrATY =_fga .SdrATY ;_aedb ._fbfe =_fga ._fbfe ;};func (_ebeb *PageInformationSegment )encodeFlags (_ecfd _cc .BinaryWriter )(_eecf error ){const _fggg ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _eecf =_ecfd .SkipBits (1);
_eecf !=nil {return _cg .Wrap (_eecf ,_fggg ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _fgef int ;if _ebeb .CombinationOperatorOverrideAllowed (){_fgef =1;};if _eecf =_ecfd .WriteBit (_fgef );_eecf !=nil {return _cg .Wrap (_eecf ,_fggg ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");
};_fgef =0;if _ebeb ._gdfa {_fgef =1;};if _eecf =_ecfd .WriteBit (_fgef );_eecf !=nil {return _cg .Wrap (_eecf ,_fggg ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _eecf =_ecfd .WriteBit ((int (_ebeb ._gbga )>>1)&0x01);
_eecf !=nil {return _cg .Wrap (_eecf ,_fggg ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _eecf =_ecfd .WriteBit (int (_ebeb ._gbga )&0x01);
_eecf !=nil {return _cg .Wrap (_eecf ,_fggg ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_fgef =int (_ebeb .DefaultPixelValue );
if _eecf =_ecfd .WriteBit (_fgef );_eecf !=nil {return _cg .Wrap (_eecf ,_fggg ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_fgef =0;if _ebeb ._cfafc {_fgef =1;
};if _eecf =_ecfd .WriteBit (_fgef );_eecf !=nil {return _cg .Wrap (_eecf ,_fggg ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_fgef =0;if _ebeb .IsLossless {_fgef =1;};if _eecf =_ecfd .WriteBit (_fgef );
_eecf !=nil {return _cg .Wrap (_eecf ,_fggg ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};var _ SegmentEncoder =&RegionSegment {};func (_aede *PageInformationSegment )parseHeader ()(_deed error ){_cb .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _cfdg ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _deed !=nil {_cfdg +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_deed .Error ();}else {_cfdg +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_cb .Log .Trace (_cfdg );}();if _deed =_aede .readWidthAndHeight ();
_deed !=nil {return _deed ;};if _deed =_aede .readResolution ();_deed !=nil {return _deed ;};_ ,_deed =_aede ._dgc .ReadBit ();if _deed !=nil {return _deed ;};if _deed =_aede .readCombinationOperatorOverrideAllowed ();_deed !=nil {return _deed ;};if _deed =_aede .readRequiresAuxiliaryBuffer ();
_deed !=nil {return _deed ;};if _deed =_aede .readCombinationOperator ();_deed !=nil {return _deed ;};if _deed =_aede .readDefaultPixelValue ();_deed !=nil {return _deed ;};if _deed =_aede .readContainsRefinement ();_deed !=nil {return _deed ;};if _deed =_aede .readIsLossless ();
_deed !=nil {return _deed ;};if _deed =_aede .readIsStriped ();_deed !=nil {return _deed ;};if _deed =_aede .readMaxStripeSize ();_deed !=nil {return _deed ;};if _deed =_aede .checkInput ();_deed !=nil {return _deed ;};_cb .Log .Trace ("\u0025\u0073",_aede );
return nil ;};func (_gddf *TextRegion )encodeFlags (_cace _cc .BinaryWriter )(_eafa int ,_dgbdc error ){const _faage ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _dgbdc =_cace .WriteBit (int (_gddf .SbrTemplate ));_dgbdc !=nil {return _eafa ,_cg .Wrap (_dgbdc ,_faage ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};if _ ,_dgbdc =_cace .WriteBits (uint64 (_gddf .SbDsOffset ),5);_dgbdc !=nil {return _eafa ,_cg .Wrap (_dgbdc ,_faage ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _dgbdc =_cace .WriteBit (int (_gddf .DefaultPixel ));_dgbdc !=nil {return _eafa ,_cg .Wrap (_dgbdc ,_faage ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");
};if _ ,_dgbdc =_cace .WriteBits (uint64 (_gddf .CombinationOperator ),2);_dgbdc !=nil {return _eafa ,_cg .Wrap (_dgbdc ,_faage ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _dgbdc =_cace .WriteBit (int (_gddf .IsTransposed ));
_dgbdc !=nil {return _eafa ,_cg .Wrap (_dgbdc ,_faage ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_dgbdc =_cace .WriteBits (uint64 (_gddf .ReferenceCorner ),2);_dgbdc !=nil {return _eafa ,_cg .Wrap (_dgbdc ,_faage ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");
};if _ ,_dgbdc =_cace .WriteBits (uint64 (_gddf .LogSBStrips ),2);_dgbdc !=nil {return _eafa ,_cg .Wrap (_dgbdc ,_faage ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _dfae int ;if _gddf .UseRefinement {_dfae =1;};if _dgbdc =_cace .WriteBit (_dfae );
_dgbdc !=nil {return _eafa ,_cg .Wrap (_dgbdc ,_faage ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_dfae =0;if _gddf .IsHuffmanEncoded {_dfae =1;};if _dgbdc =_cace .WriteBit (_dfae );_dgbdc !=nil {return _eafa ,_cg .Wrap (_dgbdc ,_faage ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");
};_eafa =2;return _eafa ,nil ;};func (_gbea *HalftoneRegion )parseHeader ()error {if _gece :=_gbea .RegionSegment .parseHeader ();_gece !=nil {return _gece ;};_fcdb ,_deg :=_gbea ._ggf .ReadBit ();if _deg !=nil {return _deg ;};_gbea .HDefaultPixel =int8 (_fcdb );
_cgbb ,_deg :=_gbea ._ggf .ReadBits (3);if _deg !=nil {return _deg ;};_gbea .CombinationOperator =_ea .CombinationOperator (_cgbb &0xf);_fcdb ,_deg =_gbea ._ggf .ReadBit ();if _deg !=nil {return _deg ;};if _fcdb ==1{_gbea .HSkipEnabled =true ;};_cgbb ,_deg =_gbea ._ggf .ReadBits (2);
if _deg !=nil {return _deg ;};_gbea .HTemplate =byte (_cgbb &0xf);_fcdb ,_deg =_gbea ._ggf .ReadBit ();if _deg !=nil {return _deg ;};if _fcdb ==1{_gbea .IsMMREncoded =true ;};_cgbb ,_deg =_gbea ._ggf .ReadBits (32);if _deg !=nil {return _deg ;};_gbea .HGridWidth =uint32 (_cgbb &_b .MaxUint32 );
_cgbb ,_deg =_gbea ._ggf .ReadBits (32);if _deg !=nil {return _deg ;};_gbea .HGridHeight =uint32 (_cgbb &_b .MaxUint32 );_cgbb ,_deg =_gbea ._ggf .ReadBits (32);if _deg !=nil {return _deg ;};_gbea .HGridX =int32 (_cgbb &_b .MaxInt32 );_cgbb ,_deg =_gbea ._ggf .ReadBits (32);
if _deg !=nil {return _deg ;};_gbea .HGridY =int32 (_cgbb &_b .MaxInt32 );_cgbb ,_deg =_gbea ._ggf .ReadBits (16);if _deg !=nil {return _deg ;};_gbea .HRegionX =uint16 (_cgbb &_b .MaxUint16 );_cgbb ,_deg =_gbea ._ggf .ReadBits (16);if _deg !=nil {return _deg ;
};_gbea .HRegionY =uint16 (_cgbb &_b .MaxUint16 );if _deg =_gbea .computeSegmentDataStructure ();_deg !=nil {return _deg ;};return _gbea .checkInput ();};func (_afcf *SymbolDictionary )decodeAggregate (_ggba ,_ffee uint32 )error {var (_ccff int64 ;_agace error ;
);if _afcf .IsHuffmanEncoded {_ccff ,_agace =_afcf .huffDecodeRefAggNInst ();if _agace !=nil {return _agace ;};}else {_abgcc ,_eece :=_afcf ._gddg .DecodeInt (_afcf ._deedb );if _eece !=nil {return _eece ;};_ccff =int64 (_abgcc );};if _ccff > 1{return _afcf .decodeThroughTextRegion (_ggba ,_ffee ,uint32 (_ccff ));
}else if _ccff ==1{return _afcf .decodeRefinedSymbol (_ggba ,_ffee );};return nil ;};func (_gdag *GenericRegion )setParameters (_fdc bool ,_bfe ,_dfa int64 ,_decd ,_dbbec uint32 ){_gdag .IsMMREncoded =_fdc ;_gdag .DataOffset =_bfe ;_gdag .DataLength =_dfa ;
_gdag .RegionSegment .BitmapHeight =_decd ;_gdag .RegionSegment .BitmapWidth =_dbbec ;_gdag ._gfcb =nil ;_gdag .Bitmap =nil ;};func (_debg *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _debg .SdHuffDecodeHeightSelection {case 0:_abaea ,_egga :=_ge .GetStandardTable (4);
if _egga !=nil {return 0,_egga ;};return _abaea .Decode (_debg ._gfbe );case 1:_abdb ,_eggg :=_ge .GetStandardTable (5);if _eggg !=nil {return 0,_eggg ;};return _abdb .Decode (_debg ._gfbe );case 3:if _debg ._ggcf ==nil {_dabeg ,_ggcfc :=_ge .GetStandardTable (0);
if _ggcfc !=nil {return 0,_ggcfc ;};_debg ._ggcf =_dabeg ;};return _debg ._ggcf .Decode (_debg ._gfbe );};return 0,nil ;};func (_adba *TextRegion )getSymbols ()error {if _adba .Header .RTSegments !=nil {return _adba .initSymbols ();};return nil ;};func (_bad *Header )readHeaderLength (_ccag *_cc .Reader ,_fec int64 ){_bad .HeaderLength =_ccag .AbsolutePosition ()-_fec ;
};func (_cadg *GenericRegion )writeGBAtPixels (_eceb _cc .BinaryWriter )(_bacc int ,_cfgc error ){const _ddcf ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _cadg .UseMMR {return 0,nil ;};_fdff :=1;if _cadg .GBTemplate ==0{_fdff =4;
}else if _cadg .UseExtTemplates {_fdff =12;};if len (_cadg .GBAtX )!=_fdff {return 0,_cg .Errorf (_ddcf ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_cadg .GBAtY )!=_fdff {return 0,_cg .Errorf (_ddcf ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _efbc :=0;_efbc < _fdff ;_efbc ++{if _cfgc =_eceb .WriteByte (byte (_cadg .GBAtX [_efbc ]));_cfgc !=nil {return _bacc ,_cg .Wrap (_cfgc ,_ddcf ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_bacc ++;if _cfgc =_eceb .WriteByte (byte (_cadg .GBAtY [_efbc ]));
_cfgc !=nil {return _bacc ,_cg .Wrap (_cfgc ,_ddcf ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_bacc ++;};return _bacc ,nil ;};func (_fadc *SymbolDictionary )setCodingStatistics ()error {if _fadc ._ced ==nil {_fadc ._ced =_a .NewStats (512,1);
};if _fadc ._beed ==nil {_fadc ._beed =_a .NewStats (512,1);};if _fadc ._ffade ==nil {_fadc ._ffade =_a .NewStats (512,1);};if _fadc ._deedb ==nil {_fadc ._deedb =_a .NewStats (512,1);};if _fadc ._befec ==nil {_fadc ._befec =_a .NewStats (512,1);};if _fadc .UseRefinementAggregation &&_fadc ._aab ==nil {_fadc ._aab =_a .NewStats (1<<uint (_fadc ._aac ),1);
_fadc ._dabcc =_a .NewStats (512,1);_fadc ._cccbe =_a .NewStats (512,1);};if _fadc ._fbfe ==nil {_fadc ._fbfe =_a .NewStats (65536,1);};if _fadc ._gddg ==nil {var _ffadc error ;_fadc ._gddg ,_ffadc =_a .New (_fadc ._gfbe );if _ffadc !=nil {return _ffadc ;
};};return nil ;};func (_fcef *TextRegion )decodeCurrentT ()(int64 ,error ){if _fcef .SbStrips !=1{if _fcef .IsHuffmanEncoded {_aafd ,_fadb :=_fcef ._egge .ReadBits (byte (_fcef .LogSBStrips ));return int64 (_aafd ),_fadb ;};_efe ,_cagdc :=_fcef ._cddgg .DecodeInt (_fcef ._dfaad );
if _cagdc !=nil {return 0,_cagdc ;};return int64 (_efe ),nil ;};return 0,nil ;};func (_eefcb *TextRegion )parseHeader ()error {var _cffbb error ;_cb .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _cffbb !=nil {_cb .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_cffbb );
}else {_cb .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _cffbb =_eefcb .RegionInfo .parseHeader ();
_cffbb !=nil {return _cffbb ;};if _cffbb =_eefcb .readRegionFlags ();_cffbb !=nil {return _cffbb ;};if _eefcb .IsHuffmanEncoded {if _cffbb =_eefcb .readHuffmanFlags ();_cffbb !=nil {return _cffbb ;};};if _cffbb =_eefcb .readUseRefinement ();_cffbb !=nil {return _cffbb ;
};if _cffbb =_eefcb .readAmountOfSymbolInstances ();_cffbb !=nil {return _cffbb ;};if _cffbb =_eefcb .getSymbols ();_cffbb !=nil {return _cffbb ;};if _cffbb =_eefcb .computeSymbolCodeLength ();_cffbb !=nil {return _cffbb ;};if _cffbb =_eefcb .checkInput ();
_cffbb !=nil {return _cffbb ;};_cb .Log .Trace ("\u0025\u0073",_eefcb .String ());return nil ;};func (_dfab *PageInformationSegment )checkInput ()error {if _dfab .PageBMHeight ==_b .MaxInt32 {if !_dfab .IsStripe {_cb .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_ggbbg *Header )referenceSize ()uint {switch {case _ggbbg .SegmentNumber <=255:return 1;case _ggbbg .SegmentNumber <=65535:return 2;default:return 4;};};type Segmenter interface{Init (_dfad *Header ,_bebg *_cc .Reader )error ;};
func (_fedc *TextRegion )Encode (w _cc .BinaryWriter )(_adaed int ,_geed error ){const _bcce ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _adaed ,_geed =_fedc .RegionInfo .Encode (w );_geed !=nil {return _adaed ,_cg .Wrap (_geed ,_bcce ,"");
};var _gbef int ;if _gbef ,_geed =_fedc .encodeFlags (w );_geed !=nil {return _adaed ,_cg .Wrap (_geed ,_bcce ,"");};_adaed +=_gbef ;if _gbef ,_geed =_fedc .encodeSymbols (w );_geed !=nil {return _adaed ,_cg .Wrap (_geed ,_bcce ,"");};_adaed +=_gbef ;return _adaed ,nil ;
};func (_ebcb *TextRegion )setParameters (_ecae *_a .Decoder ,_ebcae ,_ddadb bool ,_fgada ,_ffcdb uint32 ,_ddeb uint32 ,_feda int8 ,_dgga uint32 ,_fdfg int8 ,_eega _ea .CombinationOperator ,_ffga int8 ,_geefd int16 ,_cdcb ,_gadf ,_aadg ,_dafd ,_cage ,_eddgc ,_afcgg ,_agae ,_dagdd ,_faca int8 ,_acgd ,_ecb []int8 ,_gdeg []*_ea .Bitmap ,_aged int8 ){_ebcb ._cddgg =_ecae ;
_ebcb .IsHuffmanEncoded =_ebcae ;_ebcb .UseRefinement =_ddadb ;_ebcb .RegionInfo .BitmapWidth =_fgada ;_ebcb .RegionInfo .BitmapHeight =_ffcdb ;_ebcb .NumberOfSymbolInstances =_ddeb ;_ebcb .SbStrips =_feda ;_ebcb .NumberOfSymbols =_dgga ;_ebcb .DefaultPixel =_fdfg ;
_ebcb .CombinationOperator =_eega ;_ebcb .IsTransposed =_ffga ;_ebcb .ReferenceCorner =_geefd ;_ebcb .SbDsOffset =_cdcb ;_ebcb .SbHuffFS =_gadf ;_ebcb .SbHuffDS =_aadg ;_ebcb .SbHuffDT =_dafd ;_ebcb .SbHuffRDWidth =_cage ;_ebcb .SbHuffRDHeight =_eddgc ;
_ebcb .SbHuffRSize =_dagdd ;_ebcb .SbHuffRDX =_afcgg ;_ebcb .SbHuffRDY =_agae ;_ebcb .SbrTemplate =_faca ;_ebcb .SbrATX =_acgd ;_ebcb .SbrATY =_ecb ;_ebcb .Symbols =_gdeg ;_ebcb ._cfee =_aged ;};func (_aaeb *GenericRegion )overrideAtTemplate3 (_efcf ,_ebb ,_gcfg ,_dbd ,_bda int )int {_efcf &=0x3EF;
if _aaeb .GBAtY [0]==0&&_aaeb .GBAtX [0]>=-int8 (_bda ){_efcf |=(_dbd >>uint (7-(int8 (_bda )+_aaeb .GBAtX [0]))&0x1)<<4;}else {_efcf |=int (_aaeb .getPixel (_ebb +int (_aaeb .GBAtX [0]),_gcfg +int (_aaeb .GBAtY [0])))<<4;};return _efcf ;};func _bgeb (_gcaa *_cc .Reader ,_beeeb *Header )*TextRegion {_cegg :=&TextRegion {_egge :_gcaa ,Header :_beeeb ,RegionInfo :NewRegionSegment (_gcaa )};
return _cegg ;};func (_cfaf *HalftoneRegion )checkInput ()error {if _cfaf .IsMMREncoded {if _cfaf .HTemplate !=0{_cb .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_cfaf .HTemplate );
};if _cfaf .HSkipEnabled {_cb .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_cfaf .HSkipEnabled );
};};return nil ;};func (_abbc *PatternDictionary )checkInput ()error {if _abbc .HdpHeight < 1||_abbc .HdpWidth < 1{return _gg .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _abbc .IsMMREncoded {if _abbc .HDTemplate !=0{_cb .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_befc *TextRegion )Init (header *Header ,r *_cc .Reader )error {_befc .Header =header ;_befc ._egge =r ;_befc .RegionInfo =NewRegionSegment (_befc ._egge );return _befc .parseHeader ();};func (_babg *SymbolDictionary )decodeHeightClassCollectiveBitmap (_fdbg int64 ,_bgbaf ,_ggbe uint32 )(*_ea .Bitmap ,error ){if _fdbg ==0{_bgbe :=_ea .New (int (_ggbe ),int (_bgbaf ));
var (_abfcd byte ;_face error ;);for _fbcc :=0;_fbcc < len (_bgbe .Data );_fbcc ++{_abfcd ,_face =_babg ._gfbe .ReadByte ();if _face !=nil {return nil ,_face ;};if _face =_bgbe .SetByte (_fbcc ,_abfcd );_face !=nil {return nil ,_face ;};};return _bgbe ,nil ;
};if _babg ._afbee ==nil {_babg ._afbee =NewGenericRegion (_babg ._gfbe );};_babg ._afbee .setParameters (true ,_babg ._gfbe .AbsolutePosition (),_fdbg ,_bgbaf ,_ggbe );_fagae ,_bebb :=_babg ._afbee .GetRegionBitmap ();if _bebb !=nil {return nil ,_bebb ;
};return _fagae ,nil ;};func (_def *PatternDictionary )Init (h *Header ,r *_cc .Reader )error {_def ._ccgb =r ;return _def .parseHeader ();};func (_aebe *TextRegion )decodeRdx ()(int64 ,error ){const _acgag ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";
if _aebe .IsHuffmanEncoded {if _aebe .SbHuffRDX ==3{if _aebe ._dfee ==nil {var (_aefca int ;_gafe error ;);if _aebe .SbHuffFS ==3{_aefca ++;};if _aebe .SbHuffDS ==3{_aefca ++;};if _aebe .SbHuffDT ==3{_aefca ++;};if _aebe .SbHuffRDWidth ==3{_aefca ++;};
if _aebe .SbHuffRDHeight ==3{_aefca ++;};_aebe ._dfee ,_gafe =_aebe .getUserTable (_aefca );if _gafe !=nil {return 0,_cg .Wrap (_gafe ,_acgag ,"");};};return _aebe ._dfee .Decode (_aebe ._egge );};_bggf ,_fcae :=_ge .GetStandardTable (14+int (_aebe .SbHuffRDX ));
if _fcae !=nil {return 0,_cg .Wrap (_fcae ,_acgag ,"");};return _bggf .Decode (_aebe ._egge );};_dcae ,_bdfgg :=_aebe ._cddgg .DecodeInt (_aebe ._fdfbg );if _bdfgg !=nil {return 0,_cg .Wrap (_bdfgg ,_acgag ,"");};return int64 (_dcae ),nil ;};func (_aaefc *SymbolDictionary )getSymbol (_acgc int )(*_ea .Bitmap ,error ){const _befef ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_bbcg ,_afag :=_aaefc ._gbgb .GetBitmap (_aaefc ._eefd [_acgc ]);if _afag !=nil {return nil ,_cg .Wrap (_afag ,_befef ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _bbcg ,nil ;};func (_ccg *GenericRegion )decodeTemplate0b (_gfac ,_bee ,_cdb int ,_ggac ,_eec int )(_ebca error ){const _cffaa ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_bdfg ,_acd int ;_gbd ,_afb int ;_bccd byte ;_accd int ;);if _gfac >=1{_bccd ,_ebca =_ccg .Bitmap .GetByte (_eec );if _ebca !=nil {return _cg .Wrap (_ebca ,_cffaa ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gbd =int (_bccd );};if _gfac >=2{_bccd ,_ebca =_ccg .Bitmap .GetByte (_eec -_ccg .Bitmap .RowStride );
if _ebca !=nil {return _cg .Wrap (_ebca ,_cffaa ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_afb =int (_bccd )<<6;};_bdfg =(_gbd &0xf0)|(_afb &0x3800);for _bbag :=0;_bbag < _cdb ;_bbag =_accd {var (_ece byte ;_dea int ;);_accd =_bbag +8;if _gaa :=_bee -_bbag ;
_gaa > 8{_dea =8;}else {_dea =_gaa ;};if _gfac > 0{_gbd <<=8;if _accd < _bee {_bccd ,_ebca =_ccg .Bitmap .GetByte (_eec +1);if _ebca !=nil {return _cg .Wrap (_ebca ,_cffaa ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_gbd |=int (_bccd );};};if _gfac > 1{_afb <<=8;
if _accd < _bee {_bccd ,_ebca =_ccg .Bitmap .GetByte (_eec -_ccg .Bitmap .RowStride +1);if _ebca !=nil {return _cg .Wrap (_ebca ,_cffaa ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_afb |=int (_bccd )<<6;};};for _gdb :=0;_gdb < _dea ;_gdb ++{_fef :=uint (7-_gdb );
if _ccg ._gfea {_acd =_ccg .overrideAtTemplate0b (_bdfg ,_bbag +_gdb ,_gfac ,int (_ece ),_gdb ,int (_fef ));_ccg ._cccb .SetIndex (int32 (_acd ));}else {_ccg ._cccb .SetIndex (int32 (_bdfg ));};var _feg int ;_feg ,_ebca =_ccg ._dbf .DecodeBit (_ccg ._cccb );
if _ebca !=nil {return _cg .Wrap (_ebca ,_cffaa ,"");};_ece |=byte (_feg <<_fef );_bdfg =((_bdfg &0x7bf7)<<1)|_feg |((_gbd >>_fef )&0x10)|((_afb >>_fef )&0x800);};if _gfd :=_ccg .Bitmap .SetByte (_ggac ,_ece );_gfd !=nil {return _cg .Wrap (_gfd ,_cffaa ,"");
};_ggac ++;_eec ++;};return nil ;};func (_efgg *HalftoneRegion )grayScaleDecoding (_cdfg int )([][]int ,error ){var (_dcfd []int8 ;_beb []int8 ;);if !_efgg .IsMMREncoded {_dcfd =make ([]int8 ,4);_beb =make ([]int8 ,4);if _efgg .HTemplate <=1{_dcfd [0]=3;
}else if _efgg .HTemplate >=2{_dcfd [0]=2;};_beb [0]=-1;_dcfd [1]=-3;_beb [1]=-1;_dcfd [2]=2;_beb [2]=-2;_dcfd [3]=-2;_beb [3]=-2;};_bfbe :=make ([]*_ea .Bitmap ,_cdfg );_cdc :=NewGenericRegion (_efgg ._ggf );_cdc .setParametersMMR (_efgg .IsMMREncoded ,_efgg .DataOffset ,_efgg .DataLength ,_efgg .HGridHeight ,_efgg .HGridWidth ,_efgg .HTemplate ,false ,_efgg .HSkipEnabled ,_dcfd ,_beb );
_cffae :=_cdfg -1;var _gdff error ;_bfbe [_cffae ],_gdff =_cdc .GetRegionBitmap ();if _gdff !=nil {return nil ,_gdff ;};for _cffae > 0{_cffae --;_cdc .Bitmap =nil ;_bfbe [_cffae ],_gdff =_cdc .GetRegionBitmap ();if _gdff !=nil {return nil ,_gdff ;};if _gdff =_efgg .combineGrayscalePlanes (_bfbe ,_cffae );
_gdff !=nil {return nil ,_gdff ;};};return _efgg .computeGrayScalePlanes (_bfbe ,_cdfg );};func (_acfg *TextRegion )decodeRdy ()(int64 ,error ){const _edad ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _acfg .IsHuffmanEncoded {if _acfg .SbHuffRDY ==3{if _acfg ._fbee ==nil {var (_dabcd int ;
_dcece error ;);if _acfg .SbHuffFS ==3{_dabcd ++;};if _acfg .SbHuffDS ==3{_dabcd ++;};if _acfg .SbHuffDT ==3{_dabcd ++;};if _acfg .SbHuffRDWidth ==3{_dabcd ++;};if _acfg .SbHuffRDHeight ==3{_dabcd ++;};if _acfg .SbHuffRDX ==3{_dabcd ++;};_acfg ._fbee ,_dcece =_acfg .getUserTable (_dabcd );
if _dcece !=nil {return 0,_cg .Wrap (_dcece ,_edad ,"");};};return _acfg ._fbee .Decode (_acfg ._egge );};_bcgc ,_acce :=_ge .GetStandardTable (14+int (_acfg .SbHuffRDY ));if _acce !=nil {return 0,_acce ;};return _bcgc .Decode (_acfg ._egge );};_bfbc ,_agba :=_acfg ._cddgg .DecodeInt (_acfg ._aecg );
if _agba !=nil {return 0,_cg .Wrap (_agba ,_edad ,"");};return int64 (_bfbc ),nil ;};func (_ddad *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_fcdf int ;_abdd int32 ;_gaff error ;_eabce =int32 (_ddad ._bdce +_ddad .NumberOfNewSymbols );_bgfb =make ([]int ,_eabce );
);for _cecfd :=int32 (0);_cecfd < _eabce ;_cecfd +=_abdd {if _ddad .IsHuffmanEncoded {_eabeg ,_agga :=_ge .GetStandardTable (1);if _agga !=nil {return nil ,_agga ;};_abdf ,_agga :=_eabeg .Decode (_ddad ._gfbe );if _agga !=nil {return nil ,_agga ;};_abdd =int32 (_abdf );
}else {_abdd ,_gaff =_ddad ._gddg .DecodeInt (_ddad ._befec );if _gaff !=nil {return nil ,_gaff ;};};if _abdd !=0{if _cecfd +_abdd > _eabce {return nil ,_cg .Error ("\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0067\u0065\u0074T\u006f\u0045\u0078\u0070\u006f\u0072\u0074F\u006c\u0061\u0067\u0073","\u006d\u0061\u006c\u0066\u006f\u0072m\u0065\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0064\u0061\u0074\u0061\u0020\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u002e\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u006f\u0075\u0074\u0020\u006ff\u0020r\u0061\u006e\u0067\u0065");
};for _gaba :=_cecfd ;_gaba < _cecfd +_abdd ;_gaba ++{_bgfb [_gaba ]=_fcdf ;};};if _fcdf ==0{_fcdf =1;}else {_fcdf =0;};};return _bgfb ,nil ;};func (_agb *GenericRefinementRegion )updateOverride ()error {if _agb .GrAtX ==nil ||_agb .GrAtY ==nil {return _gg .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_agb .GrAtX )!=len (_agb .GrAtY ){return _gg .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_agb ._fc =make ([]bool ,len (_agb .GrAtX ));switch _agb .TemplateID {case 0:if _agb .GrAtX [0]!=-1&&_agb .GrAtY [0]!=-1{_agb ._fc [0]=true ;
_agb ._ab =true ;};if _agb .GrAtX [1]!=-1&&_agb .GrAtY [1]!=-1{_agb ._fc [1]=true ;_agb ._ab =true ;};case 1:_agb ._ab =false ;};return nil ;};func (_gdgd *TextRegion )String ()string {_bfag :=&_ef .Builder {};_bfag .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");
_bfag .WriteString (_gdgd .RegionInfo .String ()+"\u000a");_bfag .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_gdgd .SbrTemplate ));_bfag .WriteString (_c .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_gdgd .SbDsOffset ));
_bfag .WriteString (_c .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_gdgd .DefaultPixel ));_bfag .WriteString (_c .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_gdgd .CombinationOperator ));
_bfag .WriteString (_c .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_gdgd .IsTransposed ));_bfag .WriteString (_c .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_gdgd .ReferenceCorner ));
_bfag .WriteString (_c .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_gdgd .UseRefinement ));_bfag .WriteString (_c .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_gdgd .IsHuffmanEncoded ));
if _gdgd .IsHuffmanEncoded {_bfag .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_gdgd .SbHuffRSize ));_bfag .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_gdgd .SbHuffRDY ));
_bfag .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_gdgd .SbHuffRDX ));_bfag .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_gdgd .SbHuffRDHeight ));
_bfag .WriteString (_c .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_gdgd .SbHuffRDWidth ));_bfag .WriteString (_c .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_gdgd .SbHuffDT ));
_bfag .WriteString (_c .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_gdgd .SbHuffDS ));_bfag .WriteString (_c .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_gdgd .SbHuffFS ));
};_bfag .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_gdgd .SbrATX ));_bfag .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_gdgd .SbrATY ));
_bfag .WriteString (_c .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_gdgd .NumberOfSymbolInstances ));_bfag .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_gdgd .SbrATX ));
return _bfag .String ();};func (_bged *TextRegion )GetRegionBitmap ()(*_ea .Bitmap ,error ){if _bged .RegionBitmap !=nil {return _bged .RegionBitmap ,nil ;};if !_bged .IsHuffmanEncoded {if _bfaf :=_bged .setCodingStatistics ();_bfaf !=nil {return nil ,_bfaf ;
};};if _cfca :=_bged .createRegionBitmap ();_cfca !=nil {return nil ,_cfca ;};if _cecc :=_bged .decodeSymbolInstances ();_cecc !=nil {return nil ,_cecc ;};return _bged .RegionBitmap ,nil ;};type SegmentEncoder interface{Encode (_dfc _cc .BinaryWriter )(_cfebg int ,_cfab error );
};type RegionSegment struct{_feec *_cc .Reader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _ea .CombinationOperator ;};func (_fbf *GenericRegion )overrideAtTemplate2 (_eag ,_ebf ,_efbf ,_ebd ,_bccbd int )int {_eag &=0x3FB;
if _fbf .GBAtY [0]==0&&_fbf .GBAtX [0]>=-int8 (_bccbd ){_eag |=(_ebd >>uint (7-(int8 (_bccbd )+_fbf .GBAtX [0]))&0x1)<<2;}else {_eag |=int (_fbf .getPixel (_ebf +int (_fbf .GBAtX [0]),_efbf +int (_fbf .GBAtY [0])))<<2;};return _eag ;};func (_cggb *SymbolDictionary )checkInput ()error {if _cggb .SdHuffDecodeHeightSelection ==2{_cb .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_cggb .SdHuffDecodeHeightSelection );
};if _cggb .SdHuffDecodeWidthSelection ==2{_cb .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_cggb .SdHuffDecodeWidthSelection );
};if _cggb .IsHuffmanEncoded {if _cggb .SdTemplate !=0{_cb .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_cggb .SdTemplate );
};if !_cggb .UseRefinementAggregation {if !_cggb .UseRefinementAggregation {if _cggb ._cdge {_cb .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_cggb ._cdge =false ;};if _cggb ._efba {_cb .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_cggb ._efba =false ;};};};}else {if _cggb .SdHuffBMSizeSelection !=0{_cb .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_cggb .SdHuffBMSizeSelection =0;};if _cggb .SdHuffDecodeWidthSelection !=0{_cb .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_cggb .SdHuffDecodeWidthSelection =0;};if _cggb .SdHuffDecodeHeightSelection !=0{_cb .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_cggb .SdHuffDecodeHeightSelection =0;};};if !_cggb .UseRefinementAggregation {if _cggb .SdrTemplate !=0{_cb .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_cggb .SdrTemplate );
_cggb .SdrTemplate =0;};};if !_cggb .IsHuffmanEncoded ||!_cggb .UseRefinementAggregation {if _cggb .SdHuffAggInstanceSelection {_cb .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_cggb .SdHuffAggInstanceSelection );
};};return nil ;};func (_cfe *GenericRefinementRegion )String ()string {_ffc :=&_ef .Builder {};_ffc .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_ffc .WriteString (_cfe .RegionInfo .String ()+"\u000a");
_ffc .WriteString (_c .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_cfe .IsTPGROn ));_ffc .WriteString (_c .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_cfe .TemplateID ));
_ffc .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_cfe .GrAtX ));_ffc .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_cfe .GrAtY ));
_ffc .WriteString (_c .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_cfe .ReferenceDX ));_ffc .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_cfe .ReferenceDY ));
return _ffc .String ();};func (_ebfd *SymbolDictionary )readNumberOfExportedSymbols ()error {_dgafe ,_efcdd :=_ebfd ._gfbe .ReadBits (32);if _efcdd !=nil {return _efcdd ;};_ebfd .NumberOfExportedSymbols =uint32 (_dgafe &_b .MaxUint32 );return nil ;};func (_adcc *TableSegment )parseHeader ()error {var (_gfdfe int ;
_gbgcf uint64 ;_bgbec error ;);_gfdfe ,_bgbec =_adcc ._gecef .ReadBit ();if _bgbec !=nil {return _bgbec ;};if _gfdfe ==1{return _c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_gfdfe );
};if _gbgcf ,_bgbec =_adcc ._gecef .ReadBits (3);_bgbec !=nil {return _bgbec ;};_adcc ._fedfb =(int32 (_gbgcf )+1)&0xf;if _gbgcf ,_bgbec =_adcc ._gecef .ReadBits (3);_bgbec !=nil {return _bgbec ;};_adcc ._cgfb =(int32 (_gbgcf )+1)&0xf;if _gbgcf ,_bgbec =_adcc ._gecef .ReadBits (32);
_bgbec !=nil {return _bgbec ;};_adcc ._gba =int32 (_gbgcf &_b .MaxInt32 );if _gbgcf ,_bgbec =_adcc ._gecef .ReadBits (32);_bgbec !=nil {return _bgbec ;};_adcc ._fcbd =int32 (_gbgcf &_b .MaxInt32 );return nil ;};func (_dbgfee *TextRegion )readHuffmanFlags ()error {var (_fadaa int ;
_fbfbd uint64 ;_edgb error ;);_ ,_edgb =_dbgfee ._egge .ReadBit ();if _edgb !=nil {return _edgb ;};_fadaa ,_edgb =_dbgfee ._egge .ReadBit ();if _edgb !=nil {return _edgb ;};_dbgfee .SbHuffRSize =int8 (_fadaa );_fbfbd ,_edgb =_dbgfee ._egge .ReadBits (2);
if _edgb !=nil {return _edgb ;};_dbgfee .SbHuffRDY =int8 (_fbfbd )&0xf;_fbfbd ,_edgb =_dbgfee ._egge .ReadBits (2);if _edgb !=nil {return _edgb ;};_dbgfee .SbHuffRDX =int8 (_fbfbd )&0xf;_fbfbd ,_edgb =_dbgfee ._egge .ReadBits (2);if _edgb !=nil {return _edgb ;
};_dbgfee .SbHuffRDHeight =int8 (_fbfbd )&0xf;_fbfbd ,_edgb =_dbgfee ._egge .ReadBits (2);if _edgb !=nil {return _edgb ;};_dbgfee .SbHuffRDWidth =int8 (_fbfbd )&0xf;_fbfbd ,_edgb =_dbgfee ._egge .ReadBits (2);if _edgb !=nil {return _edgb ;};_dbgfee .SbHuffDT =int8 (_fbfbd )&0xf;
_fbfbd ,_edgb =_dbgfee ._egge .ReadBits (2);if _edgb !=nil {return _edgb ;};_dbgfee .SbHuffDS =int8 (_fbfbd )&0xf;_fbfbd ,_edgb =_dbgfee ._egge .ReadBits (2);if _edgb !=nil {return _edgb ;};_dbgfee .SbHuffFS =int8 (_fbfbd )&0xf;return nil ;};func (_ggc *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _ggc .RegionInfo };
func (_cgbc *PageInformationSegment )readIsStriped ()error {_dad ,_fecd :=_cgbc ._dgc .ReadBit ();if _fecd !=nil {return _fecd ;};if _dad ==1{_cgbc .IsStripe =true ;};return nil ;};func (_eebca *SymbolDictionary )getSbSymCodeLen ()int8 {_aacd :=int8 (_b .Ceil (_b .Log (float64 (_eebca ._bdce +_eebca .NumberOfNewSymbols ))/_b .Log (2)));
if _eebca .IsHuffmanEncoded &&_aacd < 1{return 1;};return _aacd ;};func (_becg *PageInformationSegment )Encode (w _cc .BinaryWriter )(_dcac int ,_cgcg error ){const _eegbc ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_gdeb :=make ([]byte ,4);_bd .BigEndian .PutUint32 (_gdeb ,uint32 (_becg .PageBMWidth ));_dcac ,_cgcg =w .Write (_gdeb );if _cgcg !=nil {return _dcac ,_cg .Wrap (_cgcg ,_eegbc ,"\u0077\u0069\u0064t\u0068");};_bd .BigEndian .PutUint32 (_gdeb ,uint32 (_becg .PageBMHeight ));
var _cdff int ;_cdff ,_cgcg =w .Write (_gdeb );if _cgcg !=nil {return _cdff +_dcac ,_cg .Wrap (_cgcg ,_eegbc ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_dcac +=_cdff ;_bd .BigEndian .PutUint32 (_gdeb ,uint32 (_becg .ResolutionX ));_cdff ,_cgcg =w .Write (_gdeb );
if _cgcg !=nil {return _cdff +_dcac ,_cg .Wrap (_cgcg ,_eegbc ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_dcac +=_cdff ;_bd .BigEndian .PutUint32 (_gdeb ,uint32 (_becg .ResolutionY ));if _cdff ,_cgcg =w .Write (_gdeb );_cgcg !=nil {return _cdff +_dcac ,_cg .Wrap (_cgcg ,_eegbc ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_dcac +=_cdff ;if _cgcg =_becg .encodeFlags (w );_cgcg !=nil {return _dcac ,_cg .Wrap (_cgcg ,_eegbc ,"");};_dcac ++;if _cdff ,_cgcg =_becg .encodeStripingInformation (w );_cgcg !=nil {return _dcac ,_cg .Wrap (_cgcg ,_eegbc ,"");};_dcac +=_cdff ;return _dcac ,nil ;
};func (_cffb *GenericRegion )setParametersMMR (_bcbg bool ,_ddag ,_adec int64 ,_fee ,_agfa uint32 ,_eeg byte ,_ecf ,_ageg bool ,_dcaf ,_fbd []int8 ){_cffb .DataOffset =_ddag ;_cffb .DataLength =_adec ;_cffb .RegionSegment =&RegionSegment {};_cffb .RegionSegment .BitmapHeight =_fee ;
_cffb .RegionSegment .BitmapWidth =_agfa ;_cffb .GBTemplate =_eeg ;_cffb .IsMMREncoded =_bcbg ;_cffb .IsTPGDon =_ecf ;_cffb .GBAtX =_dcaf ;_cffb .GBAtY =_fbd ;};func (_efffb *TextRegion )decodeSymbolInstances ()error {_agaa ,_fggf :=_efffb .decodeStripT ();
if _fggf !=nil {return _fggf ;};var (_ceedg int64 ;_fefbd uint32 ;);for _fefbd < _efffb .NumberOfSymbolInstances {_daad ,_fcge :=_efffb .decodeDT ();if _fcge !=nil {return _fcge ;};_agaa +=_daad ;var _gaca int64 ;_adfag :=true ;_efffb ._cafa =0;for {if _adfag {_gaca ,_fcge =_efffb .decodeDfs ();
if _fcge !=nil {return _fcge ;};_ceedg +=_gaca ;_efffb ._cafa =_ceedg ;_adfag =false ;}else {_fgga ,_bfbg :=_efffb .decodeIds ();if _eg .Is (_bfbg ,_df .ErrOOB ){break ;};if _bfbg !=nil {return _bfbg ;};if _fefbd >=_efffb .NumberOfSymbolInstances {break ;
};_efffb ._cafa +=_fgga +int64 (_efffb .SbDsOffset );};_gbgd ,_geef :=_efffb .decodeCurrentT ();if _geef !=nil {return _geef ;};_dfeg :=_agaa +_gbgd ;_bccg ,_geef :=_efffb .decodeID ();if _geef !=nil {return _geef ;};_acgfa ,_geef :=_efffb .decodeRI ();
if _geef !=nil {return _geef ;};_eefc ,_geef :=_efffb .decodeIb (_acgfa ,_bccg );if _geef !=nil {return _geef ;};if _geef =_efffb .blit (_eefc ,_dfeg );_geef !=nil {return _geef ;};_fefbd ++;};};return nil ;};type GenericRefinementRegion struct{_egc templater ;
_db templater ;_aa *_cc .Reader ;_ce *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_ea .Bitmap ;ReferenceBitmap *_ea .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_cea *_a .Decoder ;
_fg *_a .DecoderStats ;_ab bool ;_fc []bool ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_cdag *TextRegion )decodeID ()(int64 ,error ){if _cdag .IsHuffmanEncoded {if _cdag ._fgdd ==nil {_dfbaa ,_egbg :=_cdag ._egge .ReadBits (byte (_cdag ._cfee ));
return int64 (_dfbaa ),_egbg ;};return _cdag ._fgdd .Decode (_cdag ._egge );};return _cdag ._cddgg .DecodeIAID (uint64 (_cdag ._cfee ),_cdag ._cgcdf );};func (_dddf *GenericRefinementRegion )setParameters (_ceag *_a .DecoderStats ,_ddb *_a .Decoder ,_aae int8 ,_fcf ,_cfd uint32 ,_fda *_ea .Bitmap ,_abeb ,_gfa int32 ,_gdc bool ,_eeb []int8 ,_febg []int8 ){_cb .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _ceag !=nil {_dddf ._fg =_ceag ;};if _ddb !=nil {_dddf ._cea =_ddb ;};_dddf .TemplateID =_aae ;_dddf .RegionInfo .BitmapWidth =_fcf ;_dddf .RegionInfo .BitmapHeight =_cfd ;_dddf .ReferenceBitmap =_fda ;_dddf .ReferenceDX =_abeb ;_dddf .ReferenceDY =_gfa ;
_dddf .IsTPGROn =_gdc ;_dddf .GrAtX =_eeb ;_dddf .GrAtY =_febg ;_dddf .RegionBitmap =nil ;_cb .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_dddf );
};func (_bggg *GenericRegion )overrideAtTemplate1 (_gab ,_ged ,_efg ,_eebd ,_aef int )int {_gab &=0x1FF7;if _bggg .GBAtY [0]==0&&_bggg .GBAtX [0]>=-int8 (_aef ){_gab |=(_eebd >>uint (7-(int8 (_aef )+_bggg .GBAtX [0]))&0x1)<<3;}else {_gab |=int (_bggg .getPixel (_ged +int (_bggg .GBAtX [0]),_efg +int (_bggg .GBAtY [0])))<<3;
};return _gab ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;
TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;
TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_eda *Header )readDataStartOffset (_acag *_cc .Reader ,_bbab OrganizationType ){if _bbab ==OSequential {_eda .SegmentDataStartOffset =uint64 (_acag .AbsolutePosition ());
};};func (_cbgc *SymbolDictionary )parseHeader ()(_gggc error ){_cb .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _gggc !=nil {_cb .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_gggc );
}else {_cb .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _gggc =_cbgc .readRegionFlags ();_gggc !=nil {return _gggc ;};if _gggc =_cbgc .setAtPixels ();_gggc !=nil {return _gggc ;};if _gggc =_cbgc .setRefinementAtPixels ();_gggc !=nil {return _gggc ;};if _gggc =_cbgc .readNumberOfExportedSymbols ();_gggc !=nil {return _gggc ;
};if _gggc =_cbgc .readNumberOfNewSymbols ();_gggc !=nil {return _gggc ;};if _gggc =_cbgc .setInSyms ();_gggc !=nil {return _gggc ;};if _cbgc ._efba {_gbgc :=_cbgc .Header .RTSegments ;for _fbag :=len (_gbgc )-1;_fbag >=0;_fbag --{if _gbgc [_fbag ].Type ==0{_bcgdg ,_eaab :=_gbgc [_fbag ].SegmentData .(*SymbolDictionary );
if !_eaab {_gggc =_c .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_gbgc [_fbag ]);
return _gggc ;};if _bcgdg ._efba {_cbgc .setRetainedCodingContexts (_bcgdg );};break ;};};};if _gggc =_cbgc .checkInput ();_gggc !=nil {return _gggc ;};return nil ;};func (_gdfba *RegionSegment )Encode (w _cc .BinaryWriter )(_ffgd int ,_fcag error ){const _fdfb ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_dagg :=make ([]byte ,4);_bd .BigEndian .PutUint32 (_dagg ,_gdfba .BitmapWidth );_ffgd ,_fcag =w .Write (_dagg );if _fcag !=nil {return 0,_cg .Wrap (_fcag ,_fdfb ,"\u0057\u0069\u0064t\u0068");};_bd .BigEndian .PutUint32 (_dagg ,_gdfba .BitmapHeight );var _ebedc int ;
_ebedc ,_fcag =w .Write (_dagg );if _fcag !=nil {return 0,_cg .Wrap (_fcag ,_fdfb ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_ffgd +=_ebedc ;_bd .BigEndian .PutUint32 (_dagg ,_gdfba .XLocation );_ebedc ,_fcag =w .Write (_dagg );if _fcag !=nil {return 0,_cg .Wrap (_fcag ,_fdfb ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_ffgd +=_ebedc ;_bd .BigEndian .PutUint32 (_dagg ,_gdfba .YLocation );_ebedc ,_fcag =w .Write (_dagg );if _fcag !=nil {return 0,_cg .Wrap (_fcag ,_fdfb ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_ffgd +=_ebedc ;if _fcag =w .WriteByte (byte (_gdfba .CombinaionOperator )&0x07);
_fcag !=nil {return 0,_cg .Wrap (_fcag ,_fdfb ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_ffgd ++;return _ffgd ,nil ;};func (_cbae *Header )CleanSegmentData (){if _cbae .SegmentData !=nil {_cbae .SegmentData =nil ;
};};func (_ega *GenericRefinementRegion )GetRegionBitmap ()(*_ea .Bitmap ,error ){var _ec error ;_cb .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _ec !=nil {_cb .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ec );
}else {_cb .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _ega .RegionBitmap !=nil {return _ega .RegionBitmap ,nil ;};_bg :=0;if _ega .ReferenceBitmap ==nil {_ega .ReferenceBitmap ,_ec =_ega .getGrReference ();if _ec !=nil {return nil ,_ec ;};};if _ega ._cea ==nil {_ega ._cea ,_ec =_a .New (_ega ._aa );
if _ec !=nil {return nil ,_ec ;};};if _ega ._fg ==nil {_ega ._fg =_a .NewStats (8192,1);};_ega .RegionBitmap =_ea .New (int (_ega .RegionInfo .BitmapWidth ),int (_ega .RegionInfo .BitmapHeight ));if _ega .TemplateID ==0{if _ec =_ega .updateOverride ();
_ec !=nil {return nil ,_ec ;};};_bb :=(_ega .RegionBitmap .Width +7)&-8;var _be int ;if _ega .IsTPGROn {_be =int (-_ega .ReferenceDY )*_ega .ReferenceBitmap .RowStride ;};_gc :=_be +1;for _daa :=0;_daa < _ega .RegionBitmap .Height ;_daa ++{if _ega .IsTPGROn {_ae ,_dc :=_ega .decodeSLTP ();
if _dc !=nil {return nil ,_dc ;};_bg ^=_ae ;};if _bg ==0{_ec =_ega .decodeOptimized (_daa ,_ega .RegionBitmap .Width ,_ega .RegionBitmap .RowStride ,_ega .ReferenceBitmap .RowStride ,_bb ,_be ,_gc );if _ec !=nil {return nil ,_ec ;};}else {_ec =_ega .decodeTypicalPredictedLine (_daa ,_ega .RegionBitmap .Width ,_ega .RegionBitmap .RowStride ,_ega .ReferenceBitmap .RowStride ,_bb ,_be );
if _ec !=nil {return nil ,_ec ;};};};return _ega .RegionBitmap ,nil ;};func (_bcab *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _bcab .IsHuffmanEncoded {return _bcab .decodeHeightClassDeltaHeightWithHuffman ();};_fdfcd ,_abbg :=_bcab ._gddg .DecodeInt (_bcab ._beed );
if _abbg !=nil {return 0,_abbg ;};return int64 (_fdfcd ),nil ;};func (_bdd *GenericRefinementRegion )decodeTemplate (_cfcg ,_faf ,_bec ,_adg ,_bgc ,_fab ,_adae ,_bfg ,_afg ,_fb int ,_eddd templater )(_cadf error ){var (_dgd ,_fag ,_cec ,_cef ,_efb int16 ;
_cff ,_cdg ,_fdfc ,_dab int ;_eb byte ;);if _afg >=1&&(_afg -1)< _bdd .ReferenceBitmap .Height {_eb ,_cadf =_bdd .ReferenceBitmap .GetByte (_fb -_adg );if _cadf !=nil {return ;};_cff =int (_eb );};if _afg >=0&&(_afg )< _bdd .ReferenceBitmap .Height {_eb ,_cadf =_bdd .ReferenceBitmap .GetByte (_fb );
if _cadf !=nil {return ;};_cdg =int (_eb );};if _afg >=-1&&(_afg +1)< _bdd .ReferenceBitmap .Height {_eb ,_cadf =_bdd .ReferenceBitmap .GetByte (_fb +_adg );if _cadf !=nil {return ;};_fdfc =int (_eb );};_fb ++;if _cfcg >=1{_eb ,_cadf =_bdd .RegionBitmap .GetByte (_bfg -_bec );
if _cadf !=nil {return ;};_dab =int (_eb );};_bfg ++;_bdf :=_bdd .ReferenceDX %8;_cga :=6+_bdf ;_fba :=_fb %_adg ;if _cga >=0{if _cga < 8{_dgd =int16 (_cff >>uint (_cga ))&0x07;};if _cga < 8{_fag =int16 (_cdg >>uint (_cga ))&0x07;};if _cga < 8{_cec =int16 (_fdfc >>uint (_cga ))&0x07;
};if _cga ==6&&_fba > 1{if _afg >=1&&(_afg -1)< _bdd .ReferenceBitmap .Height {_eb ,_cadf =_bdd .ReferenceBitmap .GetByte (_fb -_adg -2);if _cadf !=nil {return _cadf ;};_dgd |=int16 (_eb <<2)&0x04;};if _afg >=0&&_afg < _bdd .ReferenceBitmap .Height {_eb ,_cadf =_bdd .ReferenceBitmap .GetByte (_fb -2);
if _cadf !=nil {return _cadf ;};_fag |=int16 (_eb <<2)&0x04;};if _afg >=-1&&_afg +1< _bdd .ReferenceBitmap .Height {_eb ,_cadf =_bdd .ReferenceBitmap .GetByte (_fb +_adg -2);if _cadf !=nil {return _cadf ;};_cec |=int16 (_eb <<2)&0x04;};};if _cga ==0{_cff =0;
_cdg =0;_fdfc =0;if _fba < _adg -1{if _afg >=1&&_afg -1< _bdd .ReferenceBitmap .Height {_eb ,_cadf =_bdd .ReferenceBitmap .GetByte (_fb -_adg );if _cadf !=nil {return _cadf ;};_cff =int (_eb );};if _afg >=0&&_afg < _bdd .ReferenceBitmap .Height {_eb ,_cadf =_bdd .ReferenceBitmap .GetByte (_fb );
if _cadf !=nil {return _cadf ;};_cdg =int (_eb );};if _afg >=-1&&_afg +1< _bdd .ReferenceBitmap .Height {_eb ,_cadf =_bdd .ReferenceBitmap .GetByte (_fb +_adg );if _cadf !=nil {return _cadf ;};_fdfc =int (_eb );};};_fb ++;};}else {_dgd =int16 (_cff <<1)&0x07;
_fag =int16 (_cdg <<1)&0x07;_cec =int16 (_fdfc <<1)&0x07;_cff =0;_cdg =0;_fdfc =0;if _fba < _adg -1{if _afg >=1&&_afg -1< _bdd .ReferenceBitmap .Height {_eb ,_cadf =_bdd .ReferenceBitmap .GetByte (_fb -_adg );if _cadf !=nil {return _cadf ;};_cff =int (_eb );
};if _afg >=0&&_afg < _bdd .ReferenceBitmap .Height {_eb ,_cadf =_bdd .ReferenceBitmap .GetByte (_fb );if _cadf !=nil {return _cadf ;};_cdg =int (_eb );};if _afg >=-1&&_afg +1< _bdd .ReferenceBitmap .Height {_eb ,_cadf =_bdd .ReferenceBitmap .GetByte (_fb +_adg );
if _cadf !=nil {return _cadf ;};_fdfc =int (_eb );};_fb ++;};_dgd |=int16 ((_cff >>7)&0x07);_fag |=int16 ((_cdg >>7)&0x07);_cec |=int16 ((_fdfc >>7)&0x07);};_cef =int16 (_dab >>6);_efb =0;_ffd :=(2-_bdf )%8;_cff <<=uint (_ffd );_cdg <<=uint (_ffd );_fdfc <<=uint (_ffd );
_dab <<=2;var _abg int ;for _bced :=0;_bced < _faf ;_bced ++{_fcd :=_bced &0x07;_abgc :=_eddd .form (_dgd ,_fag ,_cec ,_cef ,_efb );if _bdd ._ab {_eb ,_cadf =_bdd .RegionBitmap .GetByte (_bdd .RegionBitmap .GetByteIndex (_bced ,_cfcg ));if _cadf !=nil {return _cadf ;
};_bdd ._fg .SetIndex (int32 (_bdd .overrideAtTemplate0 (int (_abgc ),_bced ,_cfcg ,int (_eb ),_fcd )));}else {_bdd ._fg .SetIndex (int32 (_abgc ));};_abg ,_cadf =_bdd ._cea .DecodeBit (_bdd ._fg );if _cadf !=nil {return _cadf ;};if _cadf =_bdd .RegionBitmap .SetPixel (_bced ,_cfcg ,byte (_abg ));
_cadf !=nil {return _cadf ;};_dgd =((_dgd <<1)|0x01&int16 (_cff >>7))&0x07;_fag =((_fag <<1)|0x01&int16 (_cdg >>7))&0x07;_cec =((_cec <<1)|0x01&int16 (_fdfc >>7))&0x07;_cef =((_cef <<1)|0x01&int16 (_dab >>7))&0x07;_efb =int16 (_abg );if (_bced -int (_bdd .ReferenceDX ))%8==5{_cff =0;
_cdg =0;_fdfc =0;if ((_bced -int (_bdd .ReferenceDX ))/8)+1< _bdd .ReferenceBitmap .RowStride {if _afg >=1&&(_afg -1)< _bdd .ReferenceBitmap .Height {_eb ,_cadf =_bdd .ReferenceBitmap .GetByte (_fb -_adg );if _cadf !=nil {return _cadf ;};_cff =int (_eb );
};if _afg >=0&&_afg < _bdd .ReferenceBitmap .Height {_eb ,_cadf =_bdd .ReferenceBitmap .GetByte (_fb );if _cadf !=nil {return _cadf ;};_cdg =int (_eb );};if _afg >=-1&&(_afg +1)< _bdd .ReferenceBitmap .Height {_eb ,_cadf =_bdd .ReferenceBitmap .GetByte (_fb +_adg );
if _cadf !=nil {return _cadf ;};_fdfc =int (_eb );};};_fb ++;}else {_cff <<=1;_cdg <<=1;_fdfc <<=1;};if _fcd ==5&&_cfcg >=1{if ((_bced >>3)+1)>=_bdd .RegionBitmap .RowStride {_dab =0;}else {_eb ,_cadf =_bdd .RegionBitmap .GetByte (_bfg -_bec );if _cadf !=nil {return _cadf ;
};_dab =int (_eb );};_bfg ++;}else {_dab <<=1;};};return nil ;};type template0 struct{};func (_decg *TextRegion )setCodingStatistics ()error {if _decg ._dcbb ==nil {_decg ._dcbb =_a .NewStats (512,1);};if _decg ._bbfc ==nil {_decg ._bbfc =_a .NewStats (512,1);
};if _decg ._dfga ==nil {_decg ._dfga =_a .NewStats (512,1);};if _decg ._dfaad ==nil {_decg ._dfaad =_a .NewStats (512,1);};if _decg ._dabccf ==nil {_decg ._dabccf =_a .NewStats (512,1);};if _decg ._fcbgb ==nil {_decg ._fcbgb =_a .NewStats (512,1);};if _decg ._cafgg ==nil {_decg ._cafgg =_a .NewStats (512,1);
};if _decg ._cgcdf ==nil {_decg ._cgcdf =_a .NewStats (1<<uint (_decg ._cfee ),1);};if _decg ._fdfbg ==nil {_decg ._fdfbg =_a .NewStats (512,1);};if _decg ._aecg ==nil {_decg ._aecg =_a .NewStats (512,1);};if _decg ._cddgg ==nil {var _eeeb error ;_decg ._cddgg ,_eeeb =_a .New (_decg ._egge );
if _eeeb !=nil {return _eeeb ;};};return nil ;};func (_eae *Header )writeReferredToSegments (_acabc _cc .BinaryWriter )(_fada int ,_faag error ){const _gaaa ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_cgaf uint16 ;_afdec uint32 ;);_aefb :=_eae .referenceSize ();_eagga :=1;_adeba :=make ([]byte ,_aefb );for _ ,_eaef :=range _eae .RTSNumbers {switch _aefb {case 4:_afdec =uint32 (_eaef );_bd .BigEndian .PutUint32 (_adeba ,_afdec );_eagga ,_faag =_acabc .Write (_adeba );
if _faag !=nil {return 0,_cg .Wrap (_faag ,_gaaa ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_cgaf =uint16 (_eaef );_bd .BigEndian .PutUint16 (_adeba ,_cgaf );_eagga ,_faag =_acabc .Write (_adeba );if _faag !=nil {return 0,_cg .Wrap (_faag ,_gaaa ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _faag =_acabc .WriteByte (byte (_eaef ));_faag !=nil {return 0,_cg .Wrap (_faag ,_gaaa ,"\u0075\u0069\u006et\u0038");};};_fada +=_eagga ;};return _fada ,nil ;};func (_eccb *RegionSegment )readCombinationOperator ()error {_eaac ,_beaa :=_eccb ._feec .ReadBits (3);
if _beaa !=nil {return _beaa ;};_eccb .CombinaionOperator =_ea .CombinationOperator (_eaac &0xF);return nil ;};func (_bebd *SymbolDictionary )Init (h *Header ,r *_cc .Reader )error {_bebd .Header =h ;_bebd ._gfbe =r ;return _bebd .parseHeader ();};func (_fgb *SymbolDictionary )encodeNumSyms (_bfga _cc .BinaryWriter )(_ccd int ,_fdgg error ){const _bcgf ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_dfec :=make ([]byte ,4);_bd .BigEndian .PutUint32 (_dfec ,_fgb .NumberOfExportedSymbols );if _ccd ,_fdgg =_bfga .Write (_dfec );_fdgg !=nil {return _ccd ,_cg .Wrap (_fdgg ,_bcgf ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_bd .BigEndian .PutUint32 (_dfec ,_fgb .NumberOfNewSymbols );_abdag ,_fdgg :=_bfga .Write (_dfec );if _fdgg !=nil {return _ccd ,_cg .Wrap (_fdgg ,_bcgf ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _ccd +_abdag ,nil ;};func (_bdae *PatternDictionary )extractPatterns (_febaa *_ea .Bitmap )error {var _fegd int ;
_fcg :=make ([]*_ea .Bitmap ,_bdae .GrayMax +1);for _fegd <=int (_bdae .GrayMax ){_edcf :=int (_bdae .HdpWidth )*_fegd ;_ecaf :=_g .Rect (_edcf ,0,_edcf +int (_bdae .HdpWidth ),int (_bdae .HdpHeight ));_ebbg ,_dbgc :=_ea .Extract (_ecaf ,_febaa );if _dbgc !=nil {return _dbgc ;
};_fcg [_fegd ]=_ebbg ;_fegd ++;};_bdae .Patterns =_fcg ;return nil ;};func NewRegionSegment (r *_cc .Reader )*RegionSegment {return &RegionSegment {_feec :r }};func (_cfebgc *TextRegion )computeSymbolCodeLength ()error {if _cfebgc .IsHuffmanEncoded {return _cfebgc .symbolIDCodeLengths ();
};_cfebgc ._cfee =int8 (_b .Ceil (_b .Log (float64 (_cfebgc .NumberOfSymbols ))/_b .Log (2)));return nil ;};func (_gbc *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_cad ,_gfc ,_fde ,_cbb ,_ddd ,_cee ,_cfc ,_gbb ,_cbf int )(_fdf error ){var (_bdg ,_bfb int ;
_cdee ,_ede int ;_ada ,_aca int ;_dbe byte ;);if _cad > 0{_dbe ,_fdf =_gbc .RegionBitmap .GetByte (_cfc -_fde );if _fdf !=nil {return ;};_cdee =int (_dbe );};if _gbb > 0&&_gbb <=_gbc .ReferenceBitmap .Height {_dbe ,_fdf =_gbc .ReferenceBitmap .GetByte (_cbf -_cbb +_cee );
if _fdf !=nil {return ;};_ede =int (_dbe )<<2;};if _gbb >=0&&_gbb < _gbc .ReferenceBitmap .Height {_dbe ,_fdf =_gbc .ReferenceBitmap .GetByte (_cbf +_cee );if _fdf !=nil {return ;};_ada =int (_dbe );};if _gbb > -2&&_gbb < _gbc .ReferenceBitmap .Height -1{_dbe ,_fdf =_gbc .ReferenceBitmap .GetByte (_cbf +_cbb +_cee );
if _fdf !=nil {return ;};_aca =int (_dbe );};_bdg =((_cdee >>5)&0x6)|((_aca >>2)&0x30)|(_ada &0xc0)|(_ede &0x200);_bfb =((_aca >>2)&0x70)|(_ada &0xc0)|(_ede &0x700);var _cbbc int ;for _abb :=0;_abb < _ddd ;_abb =_cbbc {var (_bcg int ;_abe int ;);_cbbc =_abb +8;
if _bcg =_gfc -_abb ;_bcg > 8{_bcg =8;};_gae :=_cbbc < _gfc ;_bcf :=_cbbc < _gbc .ReferenceBitmap .Width ;_ecac :=_cee +1;if _cad > 0{_dbe =0;if _gae {_dbe ,_fdf =_gbc .RegionBitmap .GetByte (_cfc -_fde +1);if _fdf !=nil {return ;};};_cdee =(_cdee <<8)|int (_dbe );
};if _gbb > 0&&_gbb <=_gbc .ReferenceBitmap .Height {var _fad int ;if _bcf {_dbe ,_fdf =_gbc .ReferenceBitmap .GetByte (_cbf -_cbb +_ecac );if _fdf !=nil {return ;};_fad =int (_dbe )<<2;};_ede =(_ede <<8)|_fad ;};if _gbb >=0&&_gbb < _gbc .ReferenceBitmap .Height {_dbe =0;
if _bcf {_dbe ,_fdf =_gbc .ReferenceBitmap .GetByte (_cbf +_ecac );if _fdf !=nil {return ;};};_ada =(_ada <<8)|int (_dbe );};if _gbb > -2&&_gbb < (_gbc .ReferenceBitmap .Height -1){_dbe =0;if _bcf {_dbe ,_fdf =_gbc .ReferenceBitmap .GetByte (_cbf +_cbb +_ecac );
if _fdf !=nil {return ;};};_aca =(_aca <<8)|int (_dbe );};for _ee :=0;_ee < _bcg ;_ee ++{var _dbeb int ;_aff :=(_bfb >>4)&0x1ff;switch _aff {case 0x1ff:_dbeb =1;case 0x00:_dbeb =0;default:_gbc ._fg .SetIndex (int32 (_bdg ));_dbeb ,_fdf =_gbc ._cea .DecodeBit (_gbc ._fg );
if _fdf !=nil {return ;};};_dde :=uint (7-_ee );_abe |=_dbeb <<_dde ;_bdg =((_bdg &0x0d6)<<1)|_dbeb |(_cdee >>_dde +5)&0x002|((_aca >>_dde +2)&0x010)|((_ada >>_dde )&0x040)|((_ede >>_dde )&0x200);_bfb =((_bfb &0xdb)<<1)|((_aca >>_dde +2)&0x010)|((_ada >>_dde )&0x080)|((_ede >>_dde )&0x400);
};_fdf =_gbc .RegionBitmap .SetByte (_cfc ,byte (_abe ));if _fdf !=nil {return ;};_cfc ++;_cbf ++;};return nil ;};type PageInformationSegment struct{_dgc *_cc .Reader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_bfgbe bool ;_gbga _ea .CombinationOperator ;
_gdfa bool ;DefaultPixelValue uint8 ;_cfafc bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_adda *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _adda .RegionSegment };func (_caee *TextRegion )setContexts (_ecgg *_a .DecoderStats ,_feae *_a .DecoderStats ,_fafb *_a .DecoderStats ,_cbeab *_a .DecoderStats ,_fcad *_a .DecoderStats ,_gdbg *_a .DecoderStats ,_bfce *_a .DecoderStats ,_eabf *_a .DecoderStats ,_bebbg *_a .DecoderStats ,_gage *_a .DecoderStats ){_caee ._dcbb =_feae ;
_caee ._bbfc =_fafb ;_caee ._dfga =_cbeab ;_caee ._dfaad =_fcad ;_caee ._fcbgb =_bfce ;_caee ._cafgg =_eabf ;_caee ._cgcdf =_gdbg ;_caee ._fdfbg =_bebbg ;_caee ._aecg =_gage ;_caee ._bgcd =_ecgg ;};func (_eab *GenericRegion )overrideAtTemplate0b (_cgda ,_beee ,_cgga ,_bff ,_bbf ,_ffcd int )int {if _eab .GBAtOverride [0]{_cgda &=0xFFFD;
if _eab .GBAtY [0]==0&&_eab .GBAtX [0]>=-int8 (_bbf ){_cgda |=(_bff >>uint (int8 (_ffcd )-_eab .GBAtX [0]&0x1))<<1;}else {_cgda |=int (_eab .getPixel (_beee +int (_eab .GBAtX [0]),_cgga +int (_eab .GBAtY [0])))<<1;};};if _eab .GBAtOverride [1]{_cgda &=0xDFFF;
if _eab .GBAtY [1]==0&&_eab .GBAtX [1]>=-int8 (_bbf ){_cgda |=(_bff >>uint (int8 (_ffcd )-_eab .GBAtX [1]&0x1))<<13;}else {_cgda |=int (_eab .getPixel (_beee +int (_eab .GBAtX [1]),_cgga +int (_eab .GBAtY [1])))<<13;};};if _eab .GBAtOverride [2]{_cgda &=0xFDFF;
if _eab .GBAtY [2]==0&&_eab .GBAtX [2]>=-int8 (_bbf ){_cgda |=(_bff >>uint (int8 (_ffcd )-_eab .GBAtX [2]&0x1))<<9;}else {_cgda |=int (_eab .getPixel (_beee +int (_eab .GBAtX [2]),_cgga +int (_eab .GBAtY [2])))<<9;};};if _eab .GBAtOverride [3]{_cgda &=0xBFFF;
if _eab .GBAtY [3]==0&&_eab .GBAtX [3]>=-int8 (_bbf ){_cgda |=(_bff >>uint (int8 (_ffcd )-_eab .GBAtX [3]&0x1))<<14;}else {_cgda |=int (_eab .getPixel (_beee +int (_eab .GBAtX [3]),_cgga +int (_eab .GBAtY [3])))<<14;};};if _eab .GBAtOverride [4]{_cgda &=0xEFFF;
if _eab .GBAtY [4]==0&&_eab .GBAtX [4]>=-int8 (_bbf ){_cgda |=(_bff >>uint (int8 (_ffcd )-_eab .GBAtX [4]&0x1))<<12;}else {_cgda |=int (_eab .getPixel (_beee +int (_eab .GBAtX [4]),_cgga +int (_eab .GBAtY [4])))<<12;};};if _eab .GBAtOverride [5]{_cgda &=0xFFDF;
if _eab .GBAtY [5]==0&&_eab .GBAtX [5]>=-int8 (_bbf ){_cgda |=(_bff >>uint (int8 (_ffcd )-_eab .GBAtX [5]&0x1))<<5;}else {_cgda |=int (_eab .getPixel (_beee +int (_eab .GBAtX [5]),_cgga +int (_eab .GBAtY [5])))<<5;};};if _eab .GBAtOverride [6]{_cgda &=0xFFFB;
if _eab .GBAtY [6]==0&&_eab .GBAtX [6]>=-int8 (_bbf ){_cgda |=(_bff >>uint (int8 (_ffcd )-_eab .GBAtX [6]&0x1))<<2;}else {_cgda |=int (_eab .getPixel (_beee +int (_eab .GBAtX [6]),_cgga +int (_eab .GBAtY [6])))<<2;};};if _eab .GBAtOverride [7]{_cgda &=0xFFF7;
if _eab .GBAtY [7]==0&&_eab .GBAtX [7]>=-int8 (_bbf ){_cgda |=(_bff >>uint (int8 (_ffcd )-_eab .GBAtX [7]&0x1))<<3;}else {_cgda |=int (_eab .getPixel (_beee +int (_eab .GBAtX [7]),_cgga +int (_eab .GBAtY [7])))<<3;};};if _eab .GBAtOverride [8]{_cgda &=0xF7FF;
if _eab .GBAtY [8]==0&&_eab .GBAtX [8]>=-int8 (_bbf ){_cgda |=(_bff >>uint (int8 (_ffcd )-_eab .GBAtX [8]&0x1))<<11;}else {_cgda |=int (_eab .getPixel (_beee +int (_eab .GBAtX [8]),_cgga +int (_eab .GBAtY [8])))<<11;};};if _eab .GBAtOverride [9]{_cgda &=0xFFEF;
if _eab .GBAtY [9]==0&&_eab .GBAtX [9]>=-int8 (_bbf ){_cgda |=(_bff >>uint (int8 (_ffcd )-_eab .GBAtX [9]&0x1))<<4;}else {_cgda |=int (_eab .getPixel (_beee +int (_eab .GBAtX [9]),_cgga +int (_eab .GBAtY [9])))<<4;};};if _eab .GBAtOverride [10]{_cgda &=0x7FFF;
if _eab .GBAtY [10]==0&&_eab .GBAtX [10]>=-int8 (_bbf ){_cgda |=(_bff >>uint (int8 (_ffcd )-_eab .GBAtX [10]&0x1))<<15;}else {_cgda |=int (_eab .getPixel (_beee +int (_eab .GBAtX [10]),_cgga +int (_eab .GBAtY [10])))<<15;};};if _eab .GBAtOverride [11]{_cgda &=0xFDFF;
if _eab .GBAtY [11]==0&&_eab .GBAtX [11]>=-int8 (_bbf ){_cgda |=(_bff >>uint (int8 (_ffcd )-_eab .GBAtX [11]&0x1))<<10;}else {_cgda |=int (_eab .getPixel (_beee +int (_eab .GBAtX [11]),_cgga +int (_eab .GBAtY [11])))<<10;};};return _cgda ;};func (_fbfb *Header )readNumberOfReferredToSegments (_dgfe *_cc .Reader )(uint64 ,error ){const _eagf ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_fefb ,_ffda :=_dgfe .ReadBits (3);if _ffda !=nil {return 0,_cg .Wrap (_ffda ,_eagf ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_fefb &=0xf;var _bfef []byte ;if _fefb <=4{_bfef =make ([]byte ,5);for _accdb :=0;_accdb <=4;_accdb ++{_aag ,_begec :=_dgfe .ReadBit ();
if _begec !=nil {return 0,_cg .Wrap (_begec ,_eagf ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_bfef [_accdb ]=byte (_aag );};}else {_fefb ,_ffda =_dgfe .ReadBits (29);if _ffda !=nil {return 0,_ffda ;};_fefb &=_b .MaxInt32 ;
_cebf :=(_fefb +8)>>3;_cebf <<=3;_bfef =make ([]byte ,_cebf );var _cfbb uint64 ;for _cfbb =0;_cfbb < _cebf ;_cfbb ++{_daca ,_acga :=_dgfe .ReadBit ();if _acga !=nil {return 0,_cg .Wrap (_acga ,_eagf ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};_bfef [_cfbb ]=byte (_daca );};};return _fefb ,nil ;};func (_aaf *GenericRefinementRegion )overrideAtTemplate0 (_gff ,_eddf ,_cdea ,_feb ,_dbb int )int {if _aaf ._fc [0]{_gff &=0xfff7;if _aaf .GrAtY [0]==0&&int (_aaf .GrAtX [0])>=-_dbb {_gff |=(_feb >>uint (7-(_dbb +int (_aaf .GrAtX [0])))&0x1)<<3;
}else {_gff |=_aaf .getPixel (_aaf .RegionBitmap ,_eddf +int (_aaf .GrAtX [0]),_cdea +int (_aaf .GrAtY [0]))<<3;};};if _aaf ._fc [1]{_gff &=0xefff;if _aaf .GrAtY [1]==0&&int (_aaf .GrAtX [1])>=-_dbb {_gff |=(_feb >>uint (7-(_dbb +int (_aaf .GrAtX [1])))&0x1)<<12;
}else {_gff |=_aaf .getPixel (_aaf .ReferenceBitmap ,_eddf +int (_aaf .GrAtX [1]),_cdea +int (_aaf .GrAtY [1]));};};return _gff ;};func (_fefe *GenericRegion )readGBAtPixels (_fceb int )error {const _eagg ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_fefe .GBAtX =make ([]int8 ,_fceb );_fefe .GBAtY =make ([]int8 ,_fceb );for _eea :=0;_eea < _fceb ;_eea ++{_gfb ,_ccbf :=_fefe ._dff .ReadByte ();if _ccbf !=nil {return _cg .Wrapf (_ccbf ,_eagg ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_eea );
};_fefe .GBAtX [_eea ]=int8 (_gfb );_gfb ,_ccbf =_fefe ._dff .ReadByte ();if _ccbf !=nil {return _cg .Wrapf (_ccbf ,_eagg ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_eea );};_fefe .GBAtY [_eea ]=int8 (_gfb );};return nil ;};
func (_cba *EndOfStripe )Init (h *Header ,r *_cc .Reader )error {_cba ._fe =r ;return _cba .parseHeader ();};func (_dgbg *PageInformationSegment )Init (h *Header ,r *_cc .Reader )(_aagf error ){_dgbg ._dgc =r ;if _aagf =_dgbg .parseHeader ();_aagf !=nil {return _cg .Wrap (_aagf ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};type TableSegment struct{_gecef *_cc .Reader ;_ffbf int32 ;_cgfb int32 ;_fedfb int32 ;_gba int32 ;_fcbd int32 ;};func (_dfe *GenericRegion )decodeTemplate1 (_ddcc ,_dcbc ,_efcd int ,_ggd ,_deca int )(_eeeg error ){const _dbg ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_ffe ,_eaa int ;_egf ,_bdba int ;_ggb byte ;_cefe ,_bccb int ;);if _ddcc >=1{_ggb ,_eeeg =_dfe .Bitmap .GetByte (_deca );if _eeeg !=nil {return _cg .Wrap (_eeeg ,_dbg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_egf =int (_ggb );};if _ddcc >=2{_ggb ,_eeeg =_dfe .Bitmap .GetByte (_deca -_dfe .Bitmap .RowStride );
if _eeeg !=nil {return _cg .Wrap (_eeeg ,_dbg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_bdba =int (_ggb )<<5;};_ffe =((_egf >>1)&0x1f8)|((_bdba >>1)&0x1e00);for _dcbd :=0;_dcbd < _efcd ;_dcbd =_cefe {var (_gdac byte ;_dbfe int ;);_cefe =_dcbd +8;
if _dagd :=_dcbc -_dcbd ;_dagd > 8{_dbfe =8;}else {_dbfe =_dagd ;};if _ddcc > 0{_egf <<=8;if _cefe < _dcbc {_ggb ,_eeeg =_dfe .Bitmap .GetByte (_deca +1);if _eeeg !=nil {return _cg .Wrap (_eeeg ,_dbg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");
};_egf |=int (_ggb );};};if _ddcc > 1{_bdba <<=8;if _cefe < _dcbc {_ggb ,_eeeg =_dfe .Bitmap .GetByte (_deca -_dfe .Bitmap .RowStride +1);if _eeeg !=nil {return _cg .Wrap (_eeeg ,_dbg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_bdba |=int (_ggb )<<5;
};};for _aee :=0;_aee < _dbfe ;_aee ++{if _dfe ._gfea {_eaa =_dfe .overrideAtTemplate1 (_ffe ,_dcbd +_aee ,_ddcc ,int (_gdac ),_aee );_dfe ._cccb .SetIndex (int32 (_eaa ));}else {_dfe ._cccb .SetIndex (int32 (_ffe ));};_bccb ,_eeeg =_dfe ._dbf .DecodeBit (_dfe ._cccb );
if _eeeg !=nil {return _cg .Wrap (_eeeg ,_dbg ,"");};_gdac |=byte (_bccb )<<uint (7-_aee );_fdb :=uint (8-_aee );_ffe =((_ffe &0xefb)<<1)|_bccb |((_egf >>_fdb )&0x8)|((_bdba >>_fdb )&0x200);};if _abef :=_dfe .Bitmap .SetByte (_ggd ,_gdac );_abef !=nil {return _cg .Wrap (_abef ,_dbg ,"");
};_ggd ++;_deca ++;};return nil ;};func (_fdbc *PatternDictionary )setGbAtPixels (){if _fdbc .HDTemplate ==0{_fdbc .GBAtX =make ([]int8 ,4);_fdbc .GBAtY =make ([]int8 ,4);_fdbc .GBAtX [0]=-int8 (_fdbc .HdpWidth );_fdbc .GBAtY [0]=0;_fdbc .GBAtX [1]=-3;
_fdbc .GBAtY [1]=-1;_fdbc .GBAtX [2]=2;_fdbc .GBAtY [2]=-2;_fdbc .GBAtX [3]=-2;_fdbc .GBAtY [3]=-2;}else {_fdbc .GBAtX =[]int8 {-int8 (_fdbc .HdpWidth )};_fdbc .GBAtY =[]int8 {0};};};type Regioner interface{GetRegionBitmap ()(*_ea .Bitmap ,error );GetRegionInfo ()*RegionSegment ;
};func (_fegc *Header )writeSegmentNumber (_ggbbdb _cc .BinaryWriter )(_gcda int ,_dbgfc error ){_gccf :=make ([]byte ,4);_bd .BigEndian .PutUint32 (_gccf ,_fegc .SegmentNumber );if _gcda ,_dbgfc =_ggbbdb .Write (_gccf );_dbgfc !=nil {return 0,_cg .Wrap (_dbgfc ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _gcda ,nil ;};func (_dbdc *TextRegion )decodeDfs ()(int64 ,error ){if _dbdc .IsHuffmanEncoded {if _dbdc .SbHuffFS ==3{if _dbdc ._gbbc ==nil {var _ffce error ;_dbdc ._gbbc ,_ffce =_dbdc .getUserTable (0);if _ffce !=nil {return 0,_ffce ;};};return _dbdc ._gbbc .Decode (_dbdc ._egge );
};_agge ,_abgd :=_ge .GetStandardTable (6+int (_dbdc .SbHuffFS ));if _abgd !=nil {return 0,_abgd ;};return _agge .Decode (_dbdc ._egge );};_dbdb ,_bfff :=_dbdc ._cddgg .DecodeInt (_dbdc ._bbfc );if _bfff !=nil {return 0,_bfff ;};return int64 (_dbdb ),nil ;
};func (_ffdg *GenericRegion )InitEncode (bm *_ea .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _abda ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _cg .Error (_abda ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _cg .Error (_abda ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_ffdg .Bitmap =bm ;_ffdg .GBTemplate =byte (template );switch _ffdg .GBTemplate {case 0:_ffdg .GBAtX =[]int8 {3,-3,2,-2};_ffdg .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_ffdg .GBAtX =[]int8 {3};_ffdg .GBAtY =[]int8 {-1};case 2,3:_ffdg .GBAtX =[]int8 {2};_ffdg .GBAtY =[]int8 {-1};
default:return _cg .Errorf (_abda ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_ffdg .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_ffdg .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_fccf *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_cega ,_egcf :=_fccf ._dgc .ReadBit ();
if _egcf !=nil {return _egcf ;};if _cega ==1{_fccf ._gdfa =true ;};return nil ;};func (_badf Type )String ()string {switch _badf {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_dffc *GenericRegion )setParametersWithAt (_bfcf bool ,_cgbd byte ,_bcec ,_befa bool ,_bfgb ,_caga []int8 ,_bgb ,_gdf uint32 ,_dabe *_a .DecoderStats ,_ffad *_a .Decoder ){_dffc .IsMMREncoded =_bfcf ;
_dffc .GBTemplate =_cgbd ;_dffc .IsTPGDon =_bcec ;_dffc .GBAtX =_bfgb ;_dffc .GBAtY =_caga ;_dffc .RegionSegment .BitmapHeight =_gdf ;_dffc .RegionSegment .BitmapWidth =_bgb ;_dffc ._gfcb =nil ;_dffc .Bitmap =nil ;if _dabe !=nil {_dffc ._cccb =_dabe ;};
if _ffad !=nil {_dffc ._dbf =_ffad ;};_cb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_dffc );
};func (_bdfe *SymbolDictionary )getUserTable (_efa int )(_ge .Tabler ,error ){var _gedf int ;for _ ,_cfcd :=range _bdfe .Header .RTSegments {if _cfcd .Type ==53{if _gedf ==_efa {_egaf ,_aggaa :=_cfcd .GetSegmentData ();if _aggaa !=nil {return nil ,_aggaa ;
};_adca :=_egaf .(_ge .BasicTabler );return _ge .NewEncodedTable (_adca );};_gedf ++;};};return nil ,nil ;};func (_aedg *PageInformationSegment )readContainsRefinement ()error {_eacd ,_agad :=_aedg ._dgc .ReadBit ();if _agad !=nil {return _agad ;};if _eacd ==1{_aedg ._cfafc =true ;
};return nil ;};func (_dae *template0 )setIndex (_ded *_a .DecoderStats ){_ded .SetIndex (0x100)};func (_ggg *template0 )form (_eee ,_dfg ,_gggg ,_abd ,_ffg int16 )int16 {return (_eee <<10)|(_dfg <<7)|(_gggg <<4)|(_abd <<1)|_ffg ;};func _cag (_dbef *_cc .Reader ,_acf *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_aa :_dbef ,RegionInfo :NewRegionSegment (_dbef ),_ce :_acf ,_egc :&template0 {},_db :&template1 {}};
};func (_cebe *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_ccea ,_cge :=_cebe ._dgc .ReadBit ();if _cge !=nil {return _cge ;};if _ccea ==1{_cebe ._bfgbe =true ;};return nil ;};type EncodeInitializer interface{InitEncode ();
};func (_deb *PageInformationSegment )readCombinationOperator ()error {_bgba ,_fbde :=_deb ._dgc .ReadBits (2);if _fbde !=nil {return _fbde ;};_deb ._gbga =_ea .CombinationOperator (int (_bgba ));return nil ;};func (_bgge *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _cbba ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _bgge .SbHuffRSize ==0{_gfacd ,_badc :=_ge .GetStandardTable (1);if _badc !=nil {return 0,_cg .Wrap (_badc ,_cbba ,"");};return _gfacd .Decode (_bgge ._egge );};if _bgge ._eccg ==nil {var (_ddae int ;_fcfd error ;);if _bgge .SbHuffFS ==3{_ddae ++;};
if _bgge .SbHuffDS ==3{_ddae ++;};if _bgge .SbHuffDT ==3{_ddae ++;};if _bgge .SbHuffRDWidth ==3{_ddae ++;};if _bgge .SbHuffRDHeight ==3{_ddae ++;};if _bgge .SbHuffRDX ==3{_ddae ++;};if _bgge .SbHuffRDY ==3{_ddae ++;};_bgge ._eccg ,_fcfd =_bgge .getUserTable (_ddae );
if _fcfd !=nil {return 0,_cg .Wrap (_fcfd ,_cbba ,"");};};_gdcg ,_ddeg :=_bgge ._eccg .Decode (_bgge ._egge );if _ddeg !=nil {return 0,_cg .Wrap (_ddeg ,_cbba ,"");};return _gdcg ,nil ;};type Type int ;func (_daef *PageInformationSegment )readMaxStripeSize ()error {_bfcb ,_cecf :=_daef ._dgc .ReadBits (15);
if _cecf !=nil {return _cecf ;};_daef .MaxStripeSize =uint16 (_bfcb &_b .MaxUint16 );return nil ;};func (_dadc *SymbolDictionary )encodeATFlags (_cegd _cc .BinaryWriter )(_abc int ,_ebdg error ){const _gedc ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _dadc .IsHuffmanEncoded ||_dadc .SdTemplate !=0{return 0,nil ;};_effbb :=4;if _dadc .SdTemplate !=0{_effbb =1;};for _gcab :=0;_gcab < _effbb ;_gcab ++{if _ebdg =_cegd .WriteByte (byte (_dadc .SdATX [_gcab ]));_ebdg !=nil {return _abc ,_cg .Wrapf (_ebdg ,_gedc ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_gcab );
};_abc ++;if _ebdg =_cegd .WriteByte (byte (_dadc .SdATY [_gcab ]));_ebdg !=nil {return _abc ,_cg .Wrapf (_ebdg ,_gedc ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_gcab );};_abc ++;};return _abc ,nil ;};func (_fcc *GenericRegion )parseHeader ()(_fgc error ){_cb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _fgc !=nil {_cb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_fgc );
}else {_cb .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_ffa int ;_cagd uint64 ;);if _fgc =_fcc .RegionSegment .parseHeader ();_fgc !=nil {return _fgc ;};if _ ,_fgc =_fcc ._dff .ReadBits (3);_fgc !=nil {return _fgc ;};_ffa ,_fgc =_fcc ._dff .ReadBit ();if _fgc !=nil {return _fgc ;};if _ffa ==1{_fcc .UseExtTemplates =true ;
};_ffa ,_fgc =_fcc ._dff .ReadBit ();if _fgc !=nil {return _fgc ;};if _ffa ==1{_fcc .IsTPGDon =true ;};_cagd ,_fgc =_fcc ._dff .ReadBits (2);if _fgc !=nil {return _fgc ;};_fcc .GBTemplate =byte (_cagd &0xf);_ffa ,_fgc =_fcc ._dff .ReadBit ();if _fgc !=nil {return _fgc ;
};if _ffa ==1{_fcc .IsMMREncoded =true ;};if !_fcc .IsMMREncoded {_cfbf :=1;if _fcc .GBTemplate ==0{_cfbf =4;if _fcc .UseExtTemplates {_cfbf =12;};};if _fgc =_fcc .readGBAtPixels (_cfbf );_fgc !=nil {return _fgc ;};};if _fgc =_fcc .computeSegmentDataStructure ();
_fgc !=nil {return _fgc ;};_cb .Log .Trace ("\u0025\u0073",_fcc );return nil ;};func (_gbbb *GenericRegion )decodeLine (_edc ,_edfec ,_dba int )error {const _ddaf ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_fagd :=_gbbb .Bitmap .GetByteIndex (0,_edc );
_ffac :=_fagd -_gbbb .Bitmap .RowStride ;switch _gbbb .GBTemplate {case 0:if !_gbbb .UseExtTemplates {return _gbbb .decodeTemplate0a (_edc ,_edfec ,_dba ,_fagd ,_ffac );};return _gbbb .decodeTemplate0b (_edc ,_edfec ,_dba ,_fagd ,_ffac );case 1:return _gbbb .decodeTemplate1 (_edc ,_edfec ,_dba ,_fagd ,_ffac );
case 2:return _gbbb .decodeTemplate2 (_edc ,_edfec ,_dba ,_fagd ,_ffac );case 3:return _gbbb .decodeTemplate3 (_edc ,_edfec ,_dba ,_fagd ,_ffac );};return _cg .Errorf (_ddaf ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_gbbb .GBTemplate );
};