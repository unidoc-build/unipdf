//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_b "encoding/binary";_bf "errors";_g "fmt";_df "github.com/unidoc/unipdf/v3/common";_gg "github.com/unidoc/unipdf/v3/internal/bitwise";_bb "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_cb "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_a "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_ffd "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_dbe "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_ee "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_ff "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_fd "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_fb "golang.org/x/xerrors";_db "image";_f "io";_c "math";_cf "strings";_e "time";);func (_aaf *GenericRegion )Init (h *Header ,r _gg .StreamReader )error {_aaf .RegionSegment =NewRegionSegment (r );
_aaf ._acbc =r ;return _aaf .parseHeader ();};func (_aagd *template0 )setIndex (_dbaf *_a .DecoderStats ){_dbaf .SetIndex (0x100)};func (_abbcc *TextRegion )symbolIDCodeLengths ()error {var (_bacd []*_ffd .Code ;_bbaeg uint64 ;_bbbg _ffd .Tabler ;_fece error ;
);for _cceb :=0;_cceb < 35;_cceb ++{_bbaeg ,_fece =_abbcc ._baf .ReadBits (4);if _fece !=nil {return _fece ;};_gdad :=int (_bbaeg &0xf);if _gdad > 0{_bacd =append (_bacd ,_ffd .NewCode (int32 (_gdad ),0,int32 (_cceb ),false ));};};_bbbg ,_fece =_ffd .NewFixedSizeTable (_bacd );
if _fece !=nil {return _fece ;};var (_gega int64 ;_aaab uint32 ;_bebb []*_ffd .Code ;_ccgee int64 ;);for _aaab < _abbcc .NumberOfSymbols {_ccgee ,_fece =_bbbg .Decode (_abbcc ._baf );if _fece !=nil {return _fece ;};if _ccgee < 32{if _ccgee > 0{_bebb =append (_bebb ,_ffd .NewCode (int32 (_ccgee ),0,int32 (_aaab ),false ));
};_gega =_ccgee ;_aaab ++;}else {var _bcfaa ,_gead int64 ;switch _ccgee {case 32:_bbaeg ,_fece =_abbcc ._baf .ReadBits (2);if _fece !=nil {return _fece ;};_bcfaa =3+int64 (_bbaeg );if _aaab > 0{_gead =_gega ;};case 33:_bbaeg ,_fece =_abbcc ._baf .ReadBits (3);
if _fece !=nil {return _fece ;};_bcfaa =3+int64 (_bbaeg );case 34:_bbaeg ,_fece =_abbcc ._baf .ReadBits (7);if _fece !=nil {return _fece ;};_bcfaa =11+int64 (_bbaeg );};for _agdcc :=0;_agdcc < int (_bcfaa );_agdcc ++{if _gead > 0{_bebb =append (_bebb ,_ffd .NewCode (int32 (_gead ),0,int32 (_aaab ),false ));
};_aaab ++;};};};_abbcc ._baf .Align ();_abbcc ._ggfc ,_fece =_ffd .NewFixedSizeTable (_bebb );return _fece ;};func (_afgb *SymbolDictionary )setCodingStatistics ()error {if _afgb ._afda ==nil {_afgb ._afda =_a .NewStats (512,1);};if _afgb ._gefg ==nil {_afgb ._gefg =_a .NewStats (512,1);
};if _afgb ._bfae ==nil {_afgb ._bfae =_a .NewStats (512,1);};if _afgb ._gafec ==nil {_afgb ._gafec =_a .NewStats (512,1);};if _afgb ._affga ==nil {_afgb ._affga =_a .NewStats (512,1);};if _afgb .UseRefinementAggregation &&_afgb ._fecg ==nil {_afgb ._fecg =_a .NewStats (1<<uint (_afgb ._faff ),1);
_afgb ._bfbd =_a .NewStats (512,1);_afgb ._beeeb =_a .NewStats (512,1);};if _afgb ._dfdd ==nil {_afgb ._dfdd =_a .NewStats (65536,1);};if _afgb ._dbafb ==nil {var _geefa error ;_afgb ._dbafb ,_geefa =_a .New (_afgb ._effd );if _geefa !=nil {return _geefa ;
};};return nil ;};func (_babfa *SymbolDictionary )encodeRefinementATFlags (_aafa _gg .BinaryWriter )(_ccbag int ,_dgca error ){const _bdgg ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_babfa .UseRefinementAggregation ||_babfa .SdrTemplate !=0{return 0,nil ;};for _gecc :=0;_gecc < 2;_gecc ++{if _dgca =_aafa .WriteByte (byte (_babfa .SdrATX [_gecc ]));_dgca !=nil {return _ccbag ,_ff .Wrapf (_dgca ,_bdgg ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_gecc );
};_ccbag ++;if _dgca =_aafa .WriteByte (byte (_babfa .SdrATY [_gecc ]));_dgca !=nil {return _ccbag ,_ff .Wrapf (_dgca ,_bdgg ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_gecc );};_ccbag ++;};return _ccbag ,nil ;};func (_edbcb *TextRegion )decodeRdw ()(int64 ,error ){const _adec ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";
if _edbcb .IsHuffmanEncoded {if _edbcb .SbHuffRDWidth ==3{if _edbcb ._fbgbe ==nil {var (_bdegb int ;_fbbd error ;);if _edbcb .SbHuffFS ==3{_bdegb ++;};if _edbcb .SbHuffDS ==3{_bdegb ++;};if _edbcb .SbHuffDT ==3{_bdegb ++;};_edbcb ._fbgbe ,_fbbd =_edbcb .getUserTable (_bdegb );
if _fbbd !=nil {return 0,_ff .Wrap (_fbbd ,_adec ,"");};};return _edbcb ._fbgbe .Decode (_edbcb ._baf );};_cbcf ,_cfdc :=_ffd .GetStandardTable (14+int (_edbcb .SbHuffRDWidth ));if _cfdc !=nil {return 0,_ff .Wrap (_cfdc ,_adec ,"");};return _cbcf .Decode (_edbcb ._baf );
};_adcc ,_cdcbe :=_edbcb ._ccgd .DecodeInt (_edbcb ._fecb );if _cdcbe !=nil {return 0,_ff .Wrap (_cdcbe ,_adec ,"");};return int64 (_adcc ),nil ;};type TableSegment struct{_ecee _gg .StreamReader ;_fbge int32 ;_egbe int32 ;_bcdg int32 ;_gbdd int32 ;_fbbc int32 ;
};func (_cffbd *TextRegion )setContexts (_bcdb *_a .DecoderStats ,_afdd *_a .DecoderStats ,_dfcc *_a .DecoderStats ,_bgcaf *_a .DecoderStats ,_dadee *_a .DecoderStats ,_bfab *_a .DecoderStats ,_abeab *_a .DecoderStats ,_cfbb *_a .DecoderStats ,_fbdf *_a .DecoderStats ,_cegaf *_a .DecoderStats ){_cffbd ._fbcf =_afdd ;
_cffbd ._dgcd =_dfcc ;_cffbd ._eccab =_bgcaf ;_cffbd ._bcdf =_dadee ;_cffbd ._fecb =_abeab ;_cffbd ._dgebg =_cfbb ;_cffbd ._eegc =_bfab ;_cffbd ._geac =_fbdf ;_cffbd ._dcgd =_cegaf ;_cffbd ._bbab =_bcdb ;};func (_ggeg *PageInformationSegment )readIsLossless ()error {_fgc ,_edf :=_ggeg ._acac .ReadBit ();
if _edf !=nil {return _edf ;};if _fgc ==1{_ggeg .IsLossless =true ;};return nil ;};func (_cbbe *Header )writeReferredToSegments (_cdb _gg .BinaryWriter )(_accf int ,_cdde error ){const _bbbfg ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
var (_eecea uint16 ;_cad uint32 ;);_ebcf :=_cbbe .referenceSize ();_gcc :=1;_aebc :=make ([]byte ,_ebcf );for _ ,_fdeb :=range _cbbe .RTSNumbers {switch _ebcf {case 4:_cad =uint32 (_fdeb );_b .BigEndian .PutUint32 (_aebc ,_cad );_gcc ,_cdde =_cdb .Write (_aebc );
if _cdde !=nil {return 0,_ff .Wrap (_cdde ,_bbbfg ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_eecea =uint16 (_fdeb );_b .BigEndian .PutUint16 (_aebc ,_eecea );_gcc ,_cdde =_cdb .Write (_aebc );if _cdde !=nil {return 0,_ff .Wrap (_cdde ,_bbbfg ,"\u0075\u0069\u006e\u0074\u0031\u0036");
};default:if _cdde =_cdb .WriteByte (byte (_fdeb ));_cdde !=nil {return 0,_ff .Wrap (_cdde ,_bbbfg ,"\u0075\u0069\u006et\u0038");};};_accf +=_gcc ;};return _accf ,nil ;};type template1 struct{};func (_fbe *SymbolDictionary )readNumberOfNewSymbols ()error {_egca ,_ggefb :=_fbe ._effd .ReadBits (32);
if _ggefb !=nil {return _ggefb ;};_fbe .NumberOfNewSymbols =uint32 (_egca &_c .MaxUint32 );return nil ;};func (_gaba *TextRegion )GetRegionBitmap ()(*_cb .Bitmap ,error ){if _gaba .RegionBitmap !=nil {return _gaba .RegionBitmap ,nil ;};if !_gaba .IsHuffmanEncoded {if _fedc :=_gaba .setCodingStatistics ();
_fedc !=nil {return nil ,_fedc ;};};if _gfeac :=_gaba .createRegionBitmap ();_gfeac !=nil {return nil ,_gfeac ;};if _fggg :=_gaba .decodeSymbolInstances ();_fggg !=nil {return nil ,_fggg ;};return _gaba .RegionBitmap ,nil ;};func (_aegab *SymbolDictionary )Encode (w _gg .BinaryWriter )(_cfcfa int ,_gabe error ){const _fcbe ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _aegab ==nil {return 0,_ff .Error (_fcbe ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _cfcfa ,_gabe =_aegab .encodeFlags (w );
_gabe !=nil {return _cfcfa ,_ff .Wrap (_gabe ,_fcbe ,"");};_edgb ,_gabe :=_aegab .encodeATFlags (w );if _gabe !=nil {return _cfcfa ,_ff .Wrap (_gabe ,_fcbe ,"");};_cfcfa +=_edgb ;if _edgb ,_gabe =_aegab .encodeRefinementATFlags (w );_gabe !=nil {return _cfcfa ,_ff .Wrap (_gabe ,_fcbe ,"");
};_cfcfa +=_edgb ;if _edgb ,_gabe =_aegab .encodeNumSyms (w );_gabe !=nil {return _cfcfa ,_ff .Wrap (_gabe ,_fcbe ,"");};_cfcfa +=_edgb ;if _edgb ,_gabe =_aegab .encodeSymbols (w );_gabe !=nil {return _cfcfa ,_ff .Wrap (_gabe ,_fcbe ,"");};_cfcfa +=_edgb ;
return _cfcfa ,nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _gg .StreamReader ;
SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_daad *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_bdac int ;_eaaa int32 ;_cbbb error ;_bcce =int32 (_daad ._ecbe +_daad .NumberOfNewSymbols );_aeff =make ([]int ,_bcce );
);for _efbe :=int32 (0);_efbe < _bcce ;_efbe +=_eaaa {if _daad .IsHuffmanEncoded {_bbec ,_deaa :=_ffd .GetStandardTable (1);if _deaa !=nil {return nil ,_deaa ;};_cddc ,_deaa :=_bbec .Decode (_daad ._effd );if _deaa !=nil {return nil ,_deaa ;};_eaaa =int32 (_cddc );
}else {_eaaa ,_cbbb =_daad ._dbafb .DecodeInt (_daad ._affga );if _cbbb !=nil {return nil ,_cbbb ;};};if _eaaa !=0{for _fabc :=_efbe ;_fabc < _efbe +_eaaa ;_fabc ++{_aeff [_fabc ]=_bdac ;};};if _bdac ==0{_bdac =1;}else {_bdac =0;};};return _aeff ,nil ;
};func (_gffe *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _gffe ._def };func (_ddfe *TextRegion )checkInput ()error {const _afce ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_ddfe .UseRefinement {if _ddfe .SbrTemplate !=0{_df .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_ddfe .SbrTemplate =0;};};if _ddfe .SbHuffFS ==2||_ddfe .SbHuffRDWidth ==2||_ddfe .SbHuffRDHeight ==2||_ddfe .SbHuffRDX ==2||_ddfe .SbHuffRDY ==2{return _ff .Error (_afce ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_ddfe .UseRefinement {if _ddfe .SbHuffRSize !=0{_df .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_ddfe .SbHuffRSize =0;};if _ddfe .SbHuffRDY !=0{_df .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_ddfe .SbHuffRDY =0;};if _ddfe .SbHuffRDX !=0{_df .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_ddfe .SbHuffRDX =0;};if _ddfe .SbHuffRDWidth !=0{_df .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_ddfe .SbHuffRDWidth =0;};if _ddfe .SbHuffRDHeight !=0{_df .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_ddfe .SbHuffRDHeight =0;};};return nil ;
};func (_dccg *HalftoneRegion )checkInput ()error {if _dccg .IsMMREncoded {if _dccg .HTemplate !=0{_df .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_dccg .HTemplate );
};if _dccg .HSkipEnabled {_df .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_dccg .HSkipEnabled );
};};return nil ;};func (_dfegg *TextRegion )setCodingStatistics ()error {if _dfegg ._fbcf ==nil {_dfegg ._fbcf =_a .NewStats (512,1);};if _dfegg ._dgcd ==nil {_dfegg ._dgcd =_a .NewStats (512,1);};if _dfegg ._eccab ==nil {_dfegg ._eccab =_a .NewStats (512,1);
};if _dfegg ._bcdf ==nil {_dfegg ._bcdf =_a .NewStats (512,1);};if _dfegg ._bgbgc ==nil {_dfegg ._bgbgc =_a .NewStats (512,1);};if _dfegg ._fecb ==nil {_dfegg ._fecb =_a .NewStats (512,1);};if _dfegg ._dgebg ==nil {_dfegg ._dgebg =_a .NewStats (512,1);
};if _dfegg ._eegc ==nil {_dfegg ._eegc =_a .NewStats (1<<uint (_dfegg ._adcgf ),1);};if _dfegg ._geac ==nil {_dfegg ._geac =_a .NewStats (512,1);};if _dfegg ._dcgd ==nil {_dfegg ._dcgd =_a .NewStats (512,1);};if _dfegg ._ccgd ==nil {var _dfgef error ;
_dfegg ._ccgd ,_dfgef =_a .New (_dfegg ._baf );if _dfgef !=nil {return _dfgef ;};};return nil ;};func (_ddgd *GenericRegion )setParametersMMR (_gefb bool ,_aced ,_cdd int64 ,_badg ,_dde uint32 ,_bbae byte ,_fcd ,_dfbb bool ,_aeb ,_daag []int8 ){_ddgd .DataOffset =_aced ;
_ddgd .DataLength =_cdd ;_ddgd .RegionSegment =&RegionSegment {};_ddgd .RegionSegment .BitmapHeight =_badg ;_ddgd .RegionSegment .BitmapWidth =_dde ;_ddgd .GBTemplate =_bbae ;_ddgd .IsMMREncoded =_gefb ;_ddgd .IsTPGDon =_fcd ;_ddgd .GBAtX =_aeb ;_ddgd .GBAtY =_daag ;
};func (_gcde *GenericRegion )decodeSLTP ()(int ,error ){switch _gcde .GBTemplate {case 0:_gcde ._bcac .SetIndex (0x9B25);case 1:_gcde ._bcac .SetIndex (0x795);case 2:_gcde ._bcac .SetIndex (0xE5);case 3:_gcde ._bcac .SetIndex (0x195);};return _gcde ._afaa .DecodeBit (_gcde ._bcac );
};func (_acbae *PatternDictionary )Init (h *Header ,r _gg .StreamReader )error {_acbae ._feccc =r ;return _acbae .parseHeader ();};func (_geaf *TableSegment )HtHigh ()int32 {return _geaf ._fbbc };func (_cbd *Header )writeSegmentDataLength (_bea _gg .BinaryWriter )(_ddf int ,_gbcd error ){_cbga :=make ([]byte ,4);
_b .BigEndian .PutUint32 (_cbga ,uint32 (_cbd .SegmentDataLength ));if _ddf ,_gbcd =_bea .Write (_cbga );_gbcd !=nil {return 0,_ff .Wrap (_gbcd ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _ddf ,nil ;};func (_bfde *PageInformationSegment )encodeStripingInformation (_eceb _gg .BinaryWriter )(_aecc int ,_eggd error ){const _dfdg ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_bfde .IsStripe {if _aecc ,_eggd =_eceb .Write ([]byte {0x00,0x00});_eggd !=nil {return 0,_ff .Wrap (_eggd ,_dfdg ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _aecc ,nil ;};_ffbg :=make ([]byte ,2);_b .BigEndian .PutUint16 (_ffbg ,_bfde .MaxStripeSize |1<<15);
if _aecc ,_eggd =_eceb .Write (_ffbg );_eggd !=nil {return 0,_ff .Wrapf (_eggd ,_dfdg ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_bfde .MaxStripeSize );};return _aecc ,nil ;};func (_dbab *GenericRegion )parseHeader ()(_fff error ){_df .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _fff !=nil {_df .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_fff );
}else {_df .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_eaad int ;_cgef uint64 ;);if _fff =_dbab .RegionSegment .parseHeader ();_fff !=nil {return _fff ;};if _ ,_fff =_dbab ._acbc .ReadBits (3);_fff !=nil {return _fff ;};_eaad ,_fff =_dbab ._acbc .ReadBit ();if _fff !=nil {return _fff ;};if _eaad ==1{_dbab .UseExtTemplates =true ;
};_eaad ,_fff =_dbab ._acbc .ReadBit ();if _fff !=nil {return _fff ;};if _eaad ==1{_dbab .IsTPGDon =true ;};_cgef ,_fff =_dbab ._acbc .ReadBits (2);if _fff !=nil {return _fff ;};_dbab .GBTemplate =byte (_cgef &0xf);_eaad ,_fff =_dbab ._acbc .ReadBit ();
if _fff !=nil {return _fff ;};if _eaad ==1{_dbab .IsMMREncoded =true ;};if !_dbab .IsMMREncoded {_ccd :=1;if _dbab .GBTemplate ==0{_ccd =4;if _dbab .UseExtTemplates {_ccd =12;};};if _fff =_dbab .readGBAtPixels (_ccd );_fff !=nil {return _fff ;};};if _fff =_dbab .computeSegmentDataStructure ();
_fff !=nil {return _fff ;};_df .Log .Trace ("\u0025\u0073",_dbab );return nil ;};func _dabfd (_fcaa int )int {if _fcaa ==0{return 0;};_fcaa |=_fcaa >>1;_fcaa |=_fcaa >>2;_fcaa |=_fcaa >>4;_fcaa |=_fcaa >>8;_fcaa |=_fcaa >>16;return (_fcaa +1)>>1;};type TextRegion struct{_baf _gg .StreamReader ;
RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _cb .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;
SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_dgeb int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_cb .Bitmap ;Symbols []*_cb .Bitmap ;
_ccgd *_a .Decoder ;_cead *GenericRefinementRegion ;_fbcf *_a .DecoderStats ;_dgcd *_a .DecoderStats ;_eccab *_a .DecoderStats ;_bcdf *_a .DecoderStats ;_bgbgc *_a .DecoderStats ;_fecb *_a .DecoderStats ;_dgebg *_a .DecoderStats ;_eegc *_a .DecoderStats ;
_geac *_a .DecoderStats ;_dcgd *_a .DecoderStats ;_bbab *_a .DecoderStats ;_adcgf int8 ;_ggfc *_ffd .FixedSizeTable ;Header *Header ;_ecgc _ffd .Tabler ;_acde _ffd .Tabler ;_edfcf _ffd .Tabler ;_fbgbe _ffd .Tabler ;_cggg _ffd .Tabler ;_fgcf _ffd .Tabler ;
_ccfd _ffd .Tabler ;_fbaae _ffd .Tabler ;_geefe ,_ddefd map[int ]int ;_ggec []int ;_dgddb *_cb .Points ;_afbed *_cb .Bitmaps ;_gbef *_bb .IntSlice ;_dffg ,_fgdg int ;_cefa *_cb .Boxes ;};func (_dcca *HalftoneRegion )computeY (_afbdc ,_cfef int )int {return _dcca .shiftAndFill (int (_dcca .HGridY )+_afbdc *int (_dcca .HRegionX )-_cfef *int (_dcca .HRegionY ));
};func (_fbaa *GenericRegion )updateOverrideFlags ()error {const _gfb ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _fbaa .GBAtX ==nil ||_fbaa .GBAtY ==nil {return nil ;};if len (_fbaa .GBAtX )!=len (_fbaa .GBAtY ){return _ff .Errorf (_gfb ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_fbaa .GBAtX ),len (_fbaa .GBAtY ));
};_fbaa .GBAtOverride =make ([]bool ,len (_fbaa .GBAtX ));switch _fbaa .GBTemplate {case 0:if !_fbaa .UseExtTemplates {if _fbaa .GBAtX [0]!=3||_fbaa .GBAtY [0]!=-1{_fbaa .setOverrideFlag (0);};if _fbaa .GBAtX [1]!=-3||_fbaa .GBAtY [1]!=-1{_fbaa .setOverrideFlag (1);
};if _fbaa .GBAtX [2]!=2||_fbaa .GBAtY [2]!=-2{_fbaa .setOverrideFlag (2);};if _fbaa .GBAtX [3]!=-2||_fbaa .GBAtY [3]!=-2{_fbaa .setOverrideFlag (3);};}else {if _fbaa .GBAtX [0]!=-2||_fbaa .GBAtY [0]!=0{_fbaa .setOverrideFlag (0);};if _fbaa .GBAtX [1]!=0||_fbaa .GBAtY [1]!=-2{_fbaa .setOverrideFlag (1);
};if _fbaa .GBAtX [2]!=-2||_fbaa .GBAtY [2]!=-1{_fbaa .setOverrideFlag (2);};if _fbaa .GBAtX [3]!=-1||_fbaa .GBAtY [3]!=-2{_fbaa .setOverrideFlag (3);};if _fbaa .GBAtX [4]!=1||_fbaa .GBAtY [4]!=-2{_fbaa .setOverrideFlag (4);};if _fbaa .GBAtX [5]!=2||_fbaa .GBAtY [5]!=-1{_fbaa .setOverrideFlag (5);
};if _fbaa .GBAtX [6]!=-3||_fbaa .GBAtY [6]!=0{_fbaa .setOverrideFlag (6);};if _fbaa .GBAtX [7]!=-4||_fbaa .GBAtY [7]!=0{_fbaa .setOverrideFlag (7);};if _fbaa .GBAtX [8]!=2||_fbaa .GBAtY [8]!=-2{_fbaa .setOverrideFlag (8);};if _fbaa .GBAtX [9]!=3||_fbaa .GBAtY [9]!=-1{_fbaa .setOverrideFlag (9);
};if _fbaa .GBAtX [10]!=-2||_fbaa .GBAtY [10]!=-2{_fbaa .setOverrideFlag (10);};if _fbaa .GBAtX [11]!=-3||_fbaa .GBAtY [11]!=-1{_fbaa .setOverrideFlag (11);};};case 1:if _fbaa .GBAtX [0]!=3||_fbaa .GBAtY [0]!=-1{_fbaa .setOverrideFlag (0);};case 2:if _fbaa .GBAtX [0]!=2||_fbaa .GBAtY [0]!=-1{_fbaa .setOverrideFlag (0);
};case 3:if _fbaa .GBAtX [0]!=2||_fbaa .GBAtY [0]!=-1{_fbaa .setOverrideFlag (0);};};return nil ;};func (_cbcae *TextRegion )decodeRdy ()(int64 ,error ){const _ecba ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _cbcae .IsHuffmanEncoded {if _cbcae .SbHuffRDY ==3{if _cbcae ._ccfd ==nil {var (_cegb int ;
_abfe error ;);if _cbcae .SbHuffFS ==3{_cegb ++;};if _cbcae .SbHuffDS ==3{_cegb ++;};if _cbcae .SbHuffDT ==3{_cegb ++;};if _cbcae .SbHuffRDWidth ==3{_cegb ++;};if _cbcae .SbHuffRDHeight ==3{_cegb ++;};if _cbcae .SbHuffRDX ==3{_cegb ++;};_cbcae ._ccfd ,_abfe =_cbcae .getUserTable (_cegb );
if _abfe !=nil {return 0,_ff .Wrap (_abfe ,_ecba ,"");};};return _cbcae ._ccfd .Decode (_cbcae ._baf );};_bed ,_aeega :=_ffd .GetStandardTable (14+int (_cbcae .SbHuffRDY ));if _aeega !=nil {return 0,_aeega ;};return _bed .Decode (_cbcae ._baf );};_ggada ,_dcab :=_cbcae ._ccgd .DecodeInt (_cbcae ._dcgd );
if _dcab !=nil {return 0,_ff .Wrap (_dcab ,_ecba ,"");};return int64 (_ggada ),nil ;};func (_ggae *SymbolDictionary )GetDictionary ()([]*_cb .Bitmap ,error ){_df .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_df .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_df .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_ggae ._ddde ,_ggae ._bdegd );
}();if _ggae ._ddde ==nil {var _bcab error ;if _ggae .UseRefinementAggregation {_ggae ._faff =_ggae .getSbSymCodeLen ();};if !_ggae .IsHuffmanEncoded {if _bcab =_ggae .setCodingStatistics ();_bcab !=nil {return nil ,_bcab ;};};_ggae ._bdegd =make ([]*_cb .Bitmap ,_ggae .NumberOfNewSymbols );
var _gdcba []int ;if _ggae .IsHuffmanEncoded &&!_ggae .UseRefinementAggregation {_gdcba =make ([]int ,_ggae .NumberOfNewSymbols );};if _bcab =_ggae .setSymbolsArray ();_bcab !=nil {return nil ,_bcab ;};var _agcb ,_dcg int64 ;_ggae ._bgbg =0;for _ggae ._bgbg < _ggae .NumberOfNewSymbols {_dcg ,_bcab =_ggae .decodeHeightClassDeltaHeight ();
if _bcab !=nil {return nil ,_bcab ;};_agcb +=_dcg ;var _ddbeb ,_cbef uint32 ;_agecc :=int64 (_ggae ._bgbg );for {var _eaab int64 ;_eaab ,_bcab =_ggae .decodeDifferenceWidth ();if _fb .Is (_bcab ,_fd .ErrOOB ){break ;};if _bcab !=nil {return nil ,_bcab ;
};if _ggae ._bgbg >=_ggae .NumberOfNewSymbols {break ;};_ddbeb +=uint32 (_eaab );_cbef +=_ddbeb ;if !_ggae .IsHuffmanEncoded ||_ggae .UseRefinementAggregation {if !_ggae .UseRefinementAggregation {_bcab =_ggae .decodeDirectlyThroughGenericRegion (_ddbeb ,uint32 (_agcb ));
if _bcab !=nil {return nil ,_bcab ;};}else {_bcab =_ggae .decodeAggregate (_ddbeb ,uint32 (_agcb ));if _bcab !=nil {return nil ,_bcab ;};};}else if _ggae .IsHuffmanEncoded &&!_ggae .UseRefinementAggregation {_gdcba [_ggae ._bgbg ]=int (_ddbeb );};_ggae ._bgbg ++;
};if _ggae .IsHuffmanEncoded &&!_ggae .UseRefinementAggregation {var _gace int64 ;if _ggae .SdHuffBMSizeSelection ==0{var _eagcf _ffd .Tabler ;_eagcf ,_bcab =_ffd .GetStandardTable (1);if _bcab !=nil {return nil ,_bcab ;};_gace ,_bcab =_eagcf .Decode (_ggae ._effd );
if _bcab !=nil {return nil ,_bcab ;};}else {_gace ,_bcab =_ggae .huffDecodeBmSize ();if _bcab !=nil {return nil ,_bcab ;};};_ggae ._effd .Align ();var _fcbf *_cb .Bitmap ;_fcbf ,_bcab =_ggae .decodeHeightClassCollectiveBitmap (_gace ,uint32 (_agcb ),_cbef );
if _bcab !=nil {return nil ,_bcab ;};_bcab =_ggae .decodeHeightClassBitmap (_fcbf ,_agecc ,int (_agcb ),_gdcba );if _bcab !=nil {return nil ,_bcab ;};};};_bgfc ,_bcab :=_ggae .getToExportFlags ();if _bcab !=nil {return nil ,_bcab ;};_ggae .setExportedSymbols (_bgfc );
};return _ggae ._ddde ,nil ;};func (_fabg *RegionSegment )Size ()int {return 17};func (_aeeb *HalftoneRegion )grayScaleDecoding (_gbea int )([][]int ,error ){var (_dbed []int8 ;_bfbf []int8 ;);if !_aeeb .IsMMREncoded {_dbed =make ([]int8 ,4);_bfbf =make ([]int8 ,4);
if _aeeb .HTemplate <=1{_dbed [0]=3;}else if _aeeb .HTemplate >=2{_dbed [0]=2;};_bfbf [0]=-1;_dbed [1]=-3;_bfbf [1]=-1;_dbed [2]=2;_bfbf [2]=-2;_dbed [3]=-2;_bfbf [3]=-2;};_gbb :=make ([]*_cb .Bitmap ,_gbea );_gbc :=NewGenericRegion (_aeeb ._eaff );_gbc .setParametersMMR (_aeeb .IsMMREncoded ,_aeeb .DataOffset ,_aeeb .DataLength ,_aeeb .HGridHeight ,_aeeb .HGridWidth ,_aeeb .HTemplate ,false ,_aeeb .HSkipEnabled ,_dbed ,_bfbf );
_gbeb :=_gbea -1;var _gegg error ;_gbb [_gbeb ],_gegg =_gbc .GetRegionBitmap ();if _gegg !=nil {return nil ,_gegg ;};for _gbeb > 0{_gbeb --;_gbc .Bitmap =nil ;_gbb [_gbeb ],_gegg =_gbc .GetRegionBitmap ();if _gegg !=nil {return nil ,_gegg ;};if _gegg =_aeeb .combineGrayscalePlanes (_gbb ,_gbeb );
_gegg !=nil {return nil ,_gegg ;};};return _aeeb .computeGrayScalePlanes (_gbb ,_gbea );};func (_eab *SymbolDictionary )decodeHeightClassBitmap (_gcce *_cb .Bitmap ,_ceff int64 ,_gfdc int ,_eddd []int )error {for _ecfd :=_ceff ;_ecfd < int64 (_eab ._bgbg );
_ecfd ++{var _edfcb int ;for _aaeec :=_ceff ;_aaeec <=_ecfd -1;_aaeec ++{_edfcb +=_eddd [_aaeec ];};_dfeaa :=_db .Rect (_edfcb ,0,_edfcb +_eddd [_ecfd ],_gfdc );_adg ,_badf :=_cb .Extract (_dfeaa ,_gcce );if _badf !=nil {return _badf ;};_eab ._bdegd [_ecfd ]=_adg ;
_eab ._dffa =append (_eab ._dffa ,_adg );};return nil ;};func (_eaag *Header )readReferredToSegmentNumbers (_abed _gg .StreamReader ,_cdcg int )([]int ,error ){const _gga ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_cgee :=make ([]int ,_cdcg );if _cdcg > 0{_eaag .RTSegments =make ([]*Header ,_cdcg );var (_feca uint64 ;_ebbc error ;);for _dgg :=0;_dgg < _cdcg ;_dgg ++{_feca ,_ebbc =_abed .ReadBits (byte (_eaag .referenceSize ())<<3);if _ebbc !=nil {return nil ,_ff .Wrapf (_ebbc ,_gga ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_dgg );
};_cgee [_dgg ]=int (_feca &_c .MaxInt32 );};};return _cgee ,nil ;};func (_fgbg *SymbolDictionary )decodeHeightClassCollectiveBitmap (_gdbd int64 ,_afdc ,_ccefe uint32 )(*_cb .Bitmap ,error ){if _gdbd ==0{_ddee :=_cb .New (int (_ccefe ),int (_afdc ));var (_fbgg byte ;
_dgba error ;);for _cdef :=0;_cdef < len (_ddee .Data );_cdef ++{_fbgg ,_dgba =_fgbg ._effd .ReadByte ();if _dgba !=nil {return nil ,_dgba ;};if _dgba =_ddee .SetByte (_cdef ,_fbgg );_dgba !=nil {return nil ,_dgba ;};};return _ddee ,nil ;};if _fgbg ._gfd ==nil {_fgbg ._gfd =NewGenericRegion (_fgbg ._effd );
};_fgbg ._gfd .setParameters (true ,_fgbg ._effd .StreamPosition (),_gdbd ,_afdc ,_ccefe );_ccea ,_geea :=_fgbg ._gfd .GetRegionBitmap ();if _geea !=nil {return nil ,_geea ;};return _ccea ,nil ;};type Pager interface{GetSegment (int )(*Header ,error );
GetBitmap ()(*_cb .Bitmap ,error );};func (_aefd *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _aefd .IsHuffmanEncoded {switch _aefd .SdHuffDecodeWidthSelection {case 0:_eabg ,_dbabf :=_ffd .GetStandardTable (2);if _dbabf !=nil {return 0,_dbabf ;
};return _eabg .Decode (_aefd ._effd );case 1:_gecbb ,_dabg :=_ffd .GetStandardTable (3);if _dabg !=nil {return 0,_dabg ;};return _gecbb .Decode (_aefd ._effd );case 3:if _aefd ._deae ==nil {var _abcac int ;if _aefd .SdHuffDecodeHeightSelection ==3{_abcac ++;
};_cged ,_afac :=_aefd .getUserTable (_abcac );if _afac !=nil {return 0,_afac ;};_aefd ._deae =_cged ;};return _aefd ._deae .Decode (_aefd ._effd );};}else {_fcgafb ,_baae :=_aefd ._dbafb .DecodeInt (_aefd ._bfae );if _baae !=nil {return 0,_baae ;};return int64 (_fcgafb ),nil ;
};return 0,nil ;};func (_cgda *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _cgda .SdHuffDecodeHeightSelection {case 0:_bdef ,_cadce :=_ffd .GetStandardTable (4);if _cadce !=nil {return 0,_cadce ;};return _bdef .Decode (_cgda ._effd );
case 1:_fgce ,_babe :=_ffd .GetStandardTable (5);if _babe !=nil {return 0,_babe ;};return _fgce .Decode (_cgda ._effd );case 3:if _cgda ._eggg ==nil {_ebeb ,_cece :=_ffd .GetStandardTable (0);if _cece !=nil {return 0,_cece ;};_cgda ._eggg =_ebeb ;};return _cgda ._eggg .Decode (_cgda ._effd );
};return 0,nil ;};func (_faae *PageInformationSegment )readMaxStripeSize ()error {_beca ,_dfe :=_faae ._acac .ReadBits (15);if _dfe !=nil {return _dfe ;};_faae .MaxStripeSize =uint16 (_beca &_c .MaxUint16 );return nil ;};func (_aceg *SymbolDictionary )readAtPixels (_dbebg int )error {_aceg .SdATX =make ([]int8 ,_dbebg );
_aceg .SdATY =make ([]int8 ,_dbebg );var (_ebaa byte ;_fefe error ;);for _aegb :=0;_aegb < _dbebg ;_aegb ++{_ebaa ,_fefe =_aceg ._effd .ReadByte ();if _fefe !=nil {return _fefe ;};_aceg .SdATX [_aegb ]=int8 (_ebaa );_ebaa ,_fefe =_aceg ._effd .ReadByte ();
if _fefe !=nil {return _fefe ;};_aceg .SdATY [_aegb ]=int8 (_ebaa );};return nil ;};var (_aga Segmenter ;_bae =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _aga },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _aga },TProfiles :func ()Segmenter {return _aga },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _aga },TBitmap :func ()Segmenter {return _aga }};
);func (_fcdbc *TableSegment )HtLow ()int32 {return _fcdbc ._gbdd };func (_fcfe *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _gcfb ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _fcfe .SbHuffRSize ==0{_bcdc ,_abedf :=_ffd .GetStandardTable (1);
if _abedf !=nil {return 0,_ff .Wrap (_abedf ,_gcfb ,"");};return _bcdc .Decode (_fcfe ._baf );};if _fcfe ._fbaae ==nil {var (_ecbad int ;_dfcde error ;);if _fcfe .SbHuffFS ==3{_ecbad ++;};if _fcfe .SbHuffDS ==3{_ecbad ++;};if _fcfe .SbHuffDT ==3{_ecbad ++;
};if _fcfe .SbHuffRDWidth ==3{_ecbad ++;};if _fcfe .SbHuffRDHeight ==3{_ecbad ++;};if _fcfe .SbHuffRDX ==3{_ecbad ++;};if _fcfe .SbHuffRDY ==3{_ecbad ++;};_fcfe ._fbaae ,_dfcde =_fcfe .getUserTable (_ecbad );if _dfcde !=nil {return 0,_ff .Wrap (_dfcde ,_gcfb ,"");
};};_dbae ,_bfaea :=_fcfe ._fbaae .Decode (_fcfe ._baf );if _bfaea !=nil {return 0,_ff .Wrap (_bfaea ,_gcfb ,"");};return _dbae ,nil ;};func (_ffbd *Header )readHeaderFlags ()error {const _fegb ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";
_gbabg ,_egc :=_ffbd .Reader .ReadBit ();if _egc !=nil {return _ff .Wrap (_egc ,_fegb ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _gbabg !=0{_ffbd .RetainFlag =true ;};_gbabg ,_egc =_ffbd .Reader .ReadBit ();if _egc !=nil {return _ff .Wrap (_egc ,_fegb ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");
};if _gbabg !=0{_ffbd .PageAssociationFieldSize =true ;};_bec ,_egc :=_ffbd .Reader .ReadBits (6);if _egc !=nil {return _ff .Wrap (_egc ,_fegb ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_ffbd .Type =Type (int (_bec ));return nil ;
};func (_ebfc *Header )readSegmentNumber (_faag _gg .StreamReader )error {const _edgf ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_cgga :=make ([]byte ,4);_ ,_acca :=_faag .Read (_cgga );if _acca !=nil {return _ff .Wrap (_acca ,_edgf ,"");
};_ebfc .SegmentNumber =_b .BigEndian .Uint32 (_cgga );return nil ;};func (_affg *Header )pageSize ()uint {if _affg .PageAssociation <=255{return 1;};return 4;};func (_gdag *GenericRegion )setParameters (_ebb bool ,_bfc ,_bgge int64 ,_fegd ,_daa uint32 ){_gdag .IsMMREncoded =_ebb ;
_gdag .DataOffset =_bfc ;_gdag .DataLength =_bgge ;_gdag .RegionSegment .BitmapHeight =_fegd ;_gdag .RegionSegment .BitmapWidth =_daa ;_gdag ._dbg =nil ;_gdag .Bitmap =nil ;};func (_bgagg *TextRegion )decodeCurrentT ()(int64 ,error ){if _bgagg .SbStrips !=1{if _bgagg .IsHuffmanEncoded {_fbbba ,_ggcd :=_bgagg ._baf .ReadBits (byte (_bgagg .LogSBStrips ));
return int64 (_fbbba ),_ggcd ;};_feefa ,_eced :=_bgagg ._ccgd .DecodeInt (_bgagg ._bcdf );if _eced !=nil {return 0,_eced ;};return int64 (_feefa ),nil ;};return 0,nil ;};func (_dgbd *SymbolDictionary )readRefinementAtPixels (_feef int )error {_dgbd .SdrATX =make ([]int8 ,_feef );
_dgbd .SdrATY =make ([]int8 ,_feef );var (_fcde byte ;_babgb error ;);for _aeeg :=0;_aeeg < _feef ;_aeeg ++{_fcde ,_babgb =_dgbd ._effd .ReadByte ();if _babgb !=nil {return _babgb ;};_dgbd .SdrATX [_aeeg ]=int8 (_fcde );_fcde ,_babgb =_dgbd ._effd .ReadByte ();
if _babgb !=nil {return _babgb ;};_dgbd .SdrATY [_aeeg ]=int8 (_fcde );};return nil ;};func (_bbac *PageInformationSegment )readContainsRefinement ()error {_gcaag ,_gdbe :=_bbac ._acac .ReadBit ();if _gdbe !=nil {return _gdbe ;};if _gcaag ==1{_bbac ._faf =true ;
};return nil ;};var _ _ffd .BasicTabler =&TableSegment {};func (_adede *PageInformationSegment )String ()string {_cfac :=&_cf .Builder {};_cfac .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_cfac .WriteString (_g .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_adede .PageBMHeight ));_cfac .WriteString (_g .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_adede .PageBMWidth ));
_cfac .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_adede .ResolutionX ));_cfac .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_adede .ResolutionY ));
_cfac .WriteString (_g .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_adede ._dbbe ));_cfac .WriteString (_g .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_adede ._def ));
_cfac .WriteString (_g .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_adede .IsLossless ));_cfac .WriteString (_g .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_adede ._bdab ));
_cfac .WriteString (_g .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_adede ._faf ));_cfac .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_adede .IsStripe ));
_cfac .WriteString (_g .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_adede .MaxStripeSize ));return _cfac .String ();};func (_dcac *SymbolDictionary )InitEncode (symbols *_cb .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _fggc ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_dcac .SdATX =[]int8 {3,-3,2,-2};_dcac .SdATY =[]int8 {-1,-1,-2,-2};_dcac ._dege =symbols ;_dcac ._cgb =make ([]int ,len (symbolList ));copy (_dcac ._cgb ,symbolList );if len (_dcac ._cgb )!=_dcac ._dege .Size (){return _ff .Error (_fggc ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_dcac .NumberOfNewSymbols =uint32 (symbols .Size ());_dcac .NumberOfExportedSymbols =uint32 (symbols .Size ());_dcac ._aedbg =symbolMap ;_dcac ._gbbg =unborderSymbols ;return nil ;};func (_fed *GenericRegion )GetRegionBitmap ()(_ecb *_cb .Bitmap ,_fgdf error ){if _fed .Bitmap !=nil {return _fed .Bitmap ,nil ;
};if _fed .IsMMREncoded {if _fed ._dbg ==nil {_fed ._dbg ,_fgdf =_dbe .New (_fed ._acbc ,int (_fed .RegionSegment .BitmapWidth ),int (_fed .RegionSegment .BitmapHeight ),_fed .DataOffset ,_fed .DataLength );if _fgdf !=nil {return nil ,_fgdf ;};};_fed .Bitmap ,_fgdf =_fed ._dbg .UncompressMMR ();
return _fed .Bitmap ,_fgdf ;};if _fgdf =_fed .updateOverrideFlags ();_fgdf !=nil {return nil ,_fgdf ;};var _cbc int ;if _fed ._afaa ==nil {_fed ._afaa ,_fgdf =_a .New (_fed ._acbc );if _fgdf !=nil {return nil ,_fgdf ;};};if _fed ._bcac ==nil {_fed ._bcac =_a .NewStats (65536,1);
};_fed .Bitmap =_cb .New (int (_fed .RegionSegment .BitmapWidth ),int (_fed .RegionSegment .BitmapHeight ));_gdge :=int (uint32 (_fed .Bitmap .Width +7)&(^uint32 (7)));for _bba :=0;_bba < _fed .Bitmap .Height ;_bba ++{if _fed .IsTPGDon {var _agc int ;_agc ,_fgdf =_fed .decodeSLTP ();
if _fgdf !=nil {return nil ,_fgdf ;};_cbc ^=_agc ;};if _cbc ==1{if _bba > 0{if _fgdf =_fed .copyLineAbove (_bba );_fgdf !=nil {return nil ,_fgdf ;};};}else {if _fgdf =_fed .decodeLine (_bba ,_fed .Bitmap .Width ,_gdge );_fgdf !=nil {return nil ,_fgdf ;
};};};return _fed .Bitmap ,nil ;};func (_ffgc *Header )readHeaderLength (_cdcf _gg .StreamReader ,_gfeb int64 ){_ffgc .HeaderLength =_cdcf .StreamPosition ()-_gfeb ;};func (_fbfg *SymbolDictionary )decodeRefinedSymbol (_fddd ,_acgb uint32 )error {var (_effea int ;
_aadd ,_bfe int32 ;);if _fbfg .IsHuffmanEncoded {_edb ,_ddfg :=_fbfg ._effd .ReadBits (byte (_fbfg ._faff ));if _ddfg !=nil {return _ddfg ;};_effea =int (_edb );_egcf ,_ddfg :=_ffd .GetStandardTable (15);if _ddfg !=nil {return _ddfg ;};_bcag ,_ddfg :=_egcf .Decode (_fbfg ._effd );
if _ddfg !=nil {return _ddfg ;};_aadd =int32 (_bcag );_bcag ,_ddfg =_egcf .Decode (_fbfg ._effd );if _ddfg !=nil {return _ddfg ;};_bfe =int32 (_bcag );_egcf ,_ddfg =_ffd .GetStandardTable (1);if _ddfg !=nil {return _ddfg ;};if _ ,_ddfg =_egcf .Decode (_fbfg ._effd );
_ddfg !=nil {return _ddfg ;};_fbfg ._effd .Align ();}else {_dge ,_cbab :=_fbfg ._dbafb .DecodeIAID (uint64 (_fbfg ._faff ),_fbfg ._fecg );if _cbab !=nil {return _cbab ;};_effea =int (_dge );_aadd ,_cbab =_fbfg ._dbafb .DecodeInt (_fbfg ._bfbd );if _cbab !=nil {return _cbab ;
};_bfe ,_cbab =_fbfg ._dbafb .DecodeInt (_fbfg ._beeeb );if _cbab !=nil {return _cbab ;};};if _dbeb :=_fbfg .setSymbolsArray ();_dbeb !=nil {return _dbeb ;};_aabe :=_fbfg ._dffa [_effea ];if _baegf :=_fbfg .decodeNewSymbols (_fddd ,_acgb ,_aabe ,_aadd ,_bfe );
_baegf !=nil {return _baegf ;};if _fbfg .IsHuffmanEncoded {_fbfg ._effd .Align ();};return nil ;};func (_bgfb *template1 )form (_ccba ,_ecd ,_acc ,_fdgd ,_afad int16 )int16 {return ((_ccba &0x02)<<8)|(_ecd <<6)|((_acc &0x03)<<4)|(_fdgd <<1)|_afad ;};type template0 struct{};
func (_aff *GenericRegion )setOverrideFlag (_ffb int ){_aff .GBAtOverride [_ffb ]=true ;_aff ._bbf =true ;};type Regioner interface{GetRegionBitmap ()(*_cb .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_egb *GenericRefinementRegion )decodeSLTP ()(int ,error ){_egb .Template .setIndex (_egb ._ge );
return _egb ._bbe .DecodeBit (_egb ._ge );};func (_fdcb *PageInformationSegment )Size ()int {return 19};func (_eaaf *PageInformationSegment )parseHeader ()(_afgce error ){_df .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _aega ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _afgce !=nil {_aega +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_afgce .Error ();}else {_aega +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_df .Log .Trace (_aega );}();if _afgce =_eaaf .readWidthAndHeight ();
_afgce !=nil {return _afgce ;};if _afgce =_eaaf .readResolution ();_afgce !=nil {return _afgce ;};_ ,_afgce =_eaaf ._acac .ReadBit ();if _afgce !=nil {return _afgce ;};if _afgce =_eaaf .readCombinationOperatorOverrideAllowed ();_afgce !=nil {return _afgce ;
};if _afgce =_eaaf .readRequiresAuxiliaryBuffer ();_afgce !=nil {return _afgce ;};if _afgce =_eaaf .readCombinationOperator ();_afgce !=nil {return _afgce ;};if _afgce =_eaaf .readDefaultPixelValue ();_afgce !=nil {return _afgce ;};if _afgce =_eaaf .readContainsRefinement ();
_afgce !=nil {return _afgce ;};if _afgce =_eaaf .readIsLossless ();_afgce !=nil {return _afgce ;};if _afgce =_eaaf .readIsStriped ();_afgce !=nil {return _afgce ;};if _afgce =_eaaf .readMaxStripeSize ();_afgce !=nil {return _afgce ;};if _afgce =_eaaf .checkInput ();
_afgce !=nil {return _afgce ;};_df .Log .Trace ("\u0025\u0073",_eaaf );return nil ;};func (_babd *GenericRegion )overrideAtTemplate2 (_afadg ,_bfga ,_ccdd ,_ffgd ,_dea int )int {_afadg &=0x3FB;if _babd .GBAtY [0]==0&&_babd .GBAtX [0]>=-int8 (_dea ){_afadg |=(_ffgd >>uint (7-(int8 (_dea )+_babd .GBAtX [0]))&0x1)<<2;
}else {_afadg |=int (_babd .getPixel (_bfga +int (_babd .GBAtX [0]),_ccdd +int (_babd .GBAtY [0])))<<2;};return _afadg ;};func (_cgfb *RegionSegment )String ()string {_dadf :=&_cf .Builder {};_dadf .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");
_dadf .WriteString (_g .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_cgfb .BitmapWidth ,_cgfb .BitmapHeight ));
_dadf .WriteString (_g .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_cgfb .XLocation ,_cgfb .YLocation ));_dadf .WriteString (_g .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_cgfb .CombinaionOperator ));
return _dadf .String ();};func (_cegg *TextRegion )Init (header *Header ,r _gg .StreamReader )error {_cegg .Header =header ;_cegg ._baf =r ;_cegg .RegionInfo =NewRegionSegment (_cegg ._baf );return _cegg .parseHeader ();};func (_dbf *GenericRegion )overrideAtTemplate0b (_bdcd ,_dgda ,_aad ,_gaa ,_befe ,_gfa int )int {if _dbf .GBAtOverride [0]{_bdcd &=0xFFFD;
if _dbf .GBAtY [0]==0&&_dbf .GBAtX [0]>=-int8 (_befe ){_bdcd |=(_gaa >>uint (int8 (_gfa )-_dbf .GBAtX [0]&0x1))<<1;}else {_bdcd |=int (_dbf .getPixel (_dgda +int (_dbf .GBAtX [0]),_aad +int (_dbf .GBAtY [0])))<<1;};};if _dbf .GBAtOverride [1]{_bdcd &=0xDFFF;
if _dbf .GBAtY [1]==0&&_dbf .GBAtX [1]>=-int8 (_befe ){_bdcd |=(_gaa >>uint (int8 (_gfa )-_dbf .GBAtX [1]&0x1))<<13;}else {_bdcd |=int (_dbf .getPixel (_dgda +int (_dbf .GBAtX [1]),_aad +int (_dbf .GBAtY [1])))<<13;};};if _dbf .GBAtOverride [2]{_bdcd &=0xFDFF;
if _dbf .GBAtY [2]==0&&_dbf .GBAtX [2]>=-int8 (_befe ){_bdcd |=(_gaa >>uint (int8 (_gfa )-_dbf .GBAtX [2]&0x1))<<9;}else {_bdcd |=int (_dbf .getPixel (_dgda +int (_dbf .GBAtX [2]),_aad +int (_dbf .GBAtY [2])))<<9;};};if _dbf .GBAtOverride [3]{_bdcd &=0xBFFF;
if _dbf .GBAtY [3]==0&&_dbf .GBAtX [3]>=-int8 (_befe ){_bdcd |=(_gaa >>uint (int8 (_gfa )-_dbf .GBAtX [3]&0x1))<<14;}else {_bdcd |=int (_dbf .getPixel (_dgda +int (_dbf .GBAtX [3]),_aad +int (_dbf .GBAtY [3])))<<14;};};if _dbf .GBAtOverride [4]{_bdcd &=0xEFFF;
if _dbf .GBAtY [4]==0&&_dbf .GBAtX [4]>=-int8 (_befe ){_bdcd |=(_gaa >>uint (int8 (_gfa )-_dbf .GBAtX [4]&0x1))<<12;}else {_bdcd |=int (_dbf .getPixel (_dgda +int (_dbf .GBAtX [4]),_aad +int (_dbf .GBAtY [4])))<<12;};};if _dbf .GBAtOverride [5]{_bdcd &=0xFFDF;
if _dbf .GBAtY [5]==0&&_dbf .GBAtX [5]>=-int8 (_befe ){_bdcd |=(_gaa >>uint (int8 (_gfa )-_dbf .GBAtX [5]&0x1))<<5;}else {_bdcd |=int (_dbf .getPixel (_dgda +int (_dbf .GBAtX [5]),_aad +int (_dbf .GBAtY [5])))<<5;};};if _dbf .GBAtOverride [6]{_bdcd &=0xFFFB;
if _dbf .GBAtY [6]==0&&_dbf .GBAtX [6]>=-int8 (_befe ){_bdcd |=(_gaa >>uint (int8 (_gfa )-_dbf .GBAtX [6]&0x1))<<2;}else {_bdcd |=int (_dbf .getPixel (_dgda +int (_dbf .GBAtX [6]),_aad +int (_dbf .GBAtY [6])))<<2;};};if _dbf .GBAtOverride [7]{_bdcd &=0xFFF7;
if _dbf .GBAtY [7]==0&&_dbf .GBAtX [7]>=-int8 (_befe ){_bdcd |=(_gaa >>uint (int8 (_gfa )-_dbf .GBAtX [7]&0x1))<<3;}else {_bdcd |=int (_dbf .getPixel (_dgda +int (_dbf .GBAtX [7]),_aad +int (_dbf .GBAtY [7])))<<3;};};if _dbf .GBAtOverride [8]{_bdcd &=0xF7FF;
if _dbf .GBAtY [8]==0&&_dbf .GBAtX [8]>=-int8 (_befe ){_bdcd |=(_gaa >>uint (int8 (_gfa )-_dbf .GBAtX [8]&0x1))<<11;}else {_bdcd |=int (_dbf .getPixel (_dgda +int (_dbf .GBAtX [8]),_aad +int (_dbf .GBAtY [8])))<<11;};};if _dbf .GBAtOverride [9]{_bdcd &=0xFFEF;
if _dbf .GBAtY [9]==0&&_dbf .GBAtX [9]>=-int8 (_befe ){_bdcd |=(_gaa >>uint (int8 (_gfa )-_dbf .GBAtX [9]&0x1))<<4;}else {_bdcd |=int (_dbf .getPixel (_dgda +int (_dbf .GBAtX [9]),_aad +int (_dbf .GBAtY [9])))<<4;};};if _dbf .GBAtOverride [10]{_bdcd &=0x7FFF;
if _dbf .GBAtY [10]==0&&_dbf .GBAtX [10]>=-int8 (_befe ){_bdcd |=(_gaa >>uint (int8 (_gfa )-_dbf .GBAtX [10]&0x1))<<15;}else {_bdcd |=int (_dbf .getPixel (_dgda +int (_dbf .GBAtX [10]),_aad +int (_dbf .GBAtY [10])))<<15;};};if _dbf .GBAtOverride [11]{_bdcd &=0xFDFF;
if _dbf .GBAtY [11]==0&&_dbf .GBAtX [11]>=-int8 (_befe ){_bdcd |=(_gaa >>uint (int8 (_gfa )-_dbf .GBAtX [11]&0x1))<<10;}else {_bdcd |=int (_dbf .getPixel (_dgda +int (_dbf .GBAtX [11]),_aad +int (_dbf .GBAtY [11])))<<10;};};return _bdcd ;};func (_fbag *TextRegion )blit (_bdfe *_cb .Bitmap ,_bace int64 )error {if _fbag .IsTransposed ==0&&(_fbag .ReferenceCorner ==2||_fbag .ReferenceCorner ==3){_fbag ._dgeb +=int64 (_bdfe .Width -1);
}else if _fbag .IsTransposed ==1&&(_fbag .ReferenceCorner ==0||_fbag .ReferenceCorner ==2){_fbag ._dgeb +=int64 (_bdfe .Height -1);};_gfbg :=_fbag ._dgeb ;if _fbag .IsTransposed ==1{_gfbg ,_bace =_bace ,_gfbg ;};switch _fbag .ReferenceCorner {case 0:_bace -=int64 (_bdfe .Height -1);
case 2:_bace -=int64 (_bdfe .Height -1);_gfbg -=int64 (_bdfe .Width -1);case 3:_gfbg -=int64 (_bdfe .Width -1);};_ggad :=_cb .Blit (_bdfe ,_fbag .RegionBitmap ,int (_gfbg ),int (_bace ),_fbag .CombinationOperator );if _ggad !=nil {return _ggad ;};if _fbag .IsTransposed ==0&&(_fbag .ReferenceCorner ==0||_fbag .ReferenceCorner ==1){_fbag ._dgeb +=int64 (_bdfe .Width -1);
};if _fbag .IsTransposed ==1&&(_fbag .ReferenceCorner ==1||_fbag .ReferenceCorner ==3){_fbag ._dgeb +=int64 (_bdfe .Height -1);};return nil ;};func (_bdebf *SymbolDictionary )decodeNewSymbols (_fdae ,_eeda uint32 ,_fgdff *_cb .Bitmap ,_dcbf ,_cdaa int32 )error {if _bdebf ._gddcf ==nil {_bdebf ._gddcf =_eaa (_bdebf ._effd ,nil );
if _bdebf ._dbafb ==nil {var _ddcd error ;_bdebf ._dbafb ,_ddcd =_a .New (_bdebf ._effd );if _ddcd !=nil {return _ddcd ;};};if _bdebf ._dfdd ==nil {_bdebf ._dfdd =_a .NewStats (65536,1);};};_bdebf ._gddcf .setParameters (_bdebf ._dfdd ,_bdebf ._dbafb ,_bdebf .SdrTemplate ,_fdae ,_eeda ,_fgdff ,_dcbf ,_cdaa ,false ,_bdebf .SdrATX ,_bdebf .SdrATY );
return _bdebf .addSymbol (_bdebf ._gddcf );};func (_gfbb *HalftoneRegion )Init (hd *Header ,r _gg .StreamReader )error {_gfbb ._eaff =r ;_gfbb ._dbdc =hd ;_gfbb .RegionSegment =NewRegionSegment (r );return _gfbb .parseHeader ();};func (_cgcc *SymbolDictionary )decodeAggregate (_fdba ,_eeff uint32 )error {var (_bbeff int64 ;
_cedd error ;);if _cgcc .IsHuffmanEncoded {_bbeff ,_cedd =_cgcc .huffDecodeRefAggNInst ();if _cedd !=nil {return _cedd ;};}else {_adfe ,_dacb :=_cgcc ._dbafb .DecodeInt (_cgcc ._gafec );if _dacb !=nil {return _dacb ;};_bbeff =int64 (_adfe );};if _bbeff > 1{return _cgcc .decodeThroughTextRegion (_fdba ,_eeff ,uint32 (_bbeff ));
}else if _bbeff ==1{return _cgcc .decodeRefinedSymbol (_fdba ,_eeff );};return nil ;};func (_fdbc *TableSegment )StreamReader ()_gg .StreamReader {return _fdbc ._ecee };func (_gda *GenericRegion )copyLineAbove (_eba int )error {_bcg :=_eba *_gda .Bitmap .RowStride ;
_bbbf :=_bcg -_gda .Bitmap .RowStride ;for _cgcg :=0;_cgcg < _gda .Bitmap .RowStride ;_cgcg ++{_fae ,_fagf :=_gda .Bitmap .GetByte (_bbbf );if _fagf !=nil {return _fagf ;};_bbbf ++;if _fagf =_gda .Bitmap .SetByte (_bcg ,_fae );_fagf !=nil {return _fagf ;
};_bcg ++;};return nil ;};func (_ecde *TextRegion )getSymbols ()error {if _ecde .Header .RTSegments !=nil {return _ecde .initSymbols ();};return nil ;};func (_acgbf *TextRegion )setParameters (_gaaa *_a .Decoder ,_fbgac ,_dbce bool ,_eabb ,_cbde uint32 ,_fgfa uint32 ,_bedc int8 ,_bedf uint32 ,_adca int8 ,_ffdc _cb .CombinationOperator ,_egege int8 ,_aefe int16 ,_adfga ,_gaaff ,_edda ,_efgb ,_cdge ,_bfgg ,_fceg ,_ecad ,_cbbbc ,_bgeac int8 ,_deag ,_cfcbbe []int8 ,_cfbdf []*_cb .Bitmap ,_cabe int8 ){_acgbf ._ccgd =_gaaa ;
_acgbf .IsHuffmanEncoded =_fbgac ;_acgbf .UseRefinement =_dbce ;_acgbf .RegionInfo .BitmapWidth =_eabb ;_acgbf .RegionInfo .BitmapHeight =_cbde ;_acgbf .NumberOfSymbolInstances =_fgfa ;_acgbf .SbStrips =_bedc ;_acgbf .NumberOfSymbols =_bedf ;_acgbf .DefaultPixel =_adca ;
_acgbf .CombinationOperator =_ffdc ;_acgbf .IsTransposed =_egege ;_acgbf .ReferenceCorner =_aefe ;_acgbf .SbDsOffset =_adfga ;_acgbf .SbHuffFS =_gaaff ;_acgbf .SbHuffDS =_edda ;_acgbf .SbHuffDT =_efgb ;_acgbf .SbHuffRDWidth =_cdge ;_acgbf .SbHuffRDHeight =_bfgg ;
_acgbf .SbHuffRSize =_cbbbc ;_acgbf .SbHuffRDX =_fceg ;_acgbf .SbHuffRDY =_ecad ;_acgbf .SbrTemplate =_bgeac ;_acgbf .SbrATX =_deag ;_acgbf .SbrATY =_cfcbbe ;_acgbf .Symbols =_cfbdf ;_acgbf ._adcgf =_cabe ;};func (_eeaa *PatternDictionary )setGbAtPixels (){if _eeaa .HDTemplate ==0{_eeaa .GBAtX =make ([]int8 ,4);
_eeaa .GBAtY =make ([]int8 ,4);_eeaa .GBAtX [0]=-int8 (_eeaa .HdpWidth );_eeaa .GBAtY [0]=0;_eeaa .GBAtX [1]=-3;_eeaa .GBAtY [1]=-1;_eeaa .GBAtX [2]=2;_eeaa .GBAtY [2]=-2;_eeaa .GBAtX [3]=-2;_eeaa .GBAtY [3]=-2;}else {_eeaa .GBAtX =[]int8 {-int8 (_eeaa .HdpWidth )};
_eeaa .GBAtY =[]int8 {0};};};func (_bdec *PageInformationSegment )Init (h *Header ,r _gg .StreamReader )(_bbfc error ){_bdec ._acac =r ;if _bbfc =_bdec .parseHeader ();_bbfc !=nil {return _ff .Wrap (_bbfc ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};func (_efcg *TextRegion )readUseRefinement ()error {if !_efcg .UseRefinement ||_efcg .SbrTemplate !=0{return nil ;};var (_feed byte ;_bgged error ;);_efcg .SbrATX =make ([]int8 ,2);_efcg .SbrATY =make ([]int8 ,2);_feed ,_bgged =_efcg ._baf .ReadByte ();
if _bgged !=nil {return _bgged ;};_efcg .SbrATX [0]=int8 (_feed );_feed ,_bgged =_efcg ._baf .ReadByte ();if _bgged !=nil {return _bgged ;};_efcg .SbrATY [0]=int8 (_feed );_feed ,_bgged =_efcg ._baf .ReadByte ();if _bgged !=nil {return _bgged ;};_efcg .SbrATX [1]=int8 (_feed );
_feed ,_bgged =_efcg ._baf .ReadByte ();if _bgged !=nil {return _bgged ;};_efcg .SbrATY [1]=int8 (_feed );return nil ;};func (_edab *Header )CleanSegmentData (){if _edab .SegmentData !=nil {_edab .SegmentData =nil ;};};func (_aagg *PageInformationSegment )readDefaultPixelValue ()error {_bbd ,_ccef :=_aagg ._acac .ReadBit ();
if _ccef !=nil {return _ccef ;};_aagg .DefaultPixelValue =uint8 (_bbd &0xf);return nil ;};type Type int ;func (_ecfg *PatternDictionary )readIsMMREncoded ()error {_gfaf ,_agge :=_ecfg ._feccc .ReadBit ();if _agge !=nil {return _agge ;};if _gfaf !=0{_ecfg .IsMMREncoded =true ;
};return nil ;};func (_gagb *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_cdcbc ,_abca :=_gagb ._acac .ReadBit ();if _abca !=nil {return _abca ;};if _cdcbc ==1{_gagb ._def =true ;};return nil ;};func (_daaa *TextRegion )getUserTable (_ecag int )(_ffd .Tabler ,error ){const _bgeff ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _ebce int ;for _ ,_afbcf :=range _daaa .Header .RTSegments {if _afbcf .Type ==53{if _ebce ==_ecag {_egff ,_ffa :=_afbcf .GetSegmentData ();if _ffa !=nil {return nil ,_ffa ;};_fcaf ,_bfdf :=_egff .(*TableSegment );if !_bfdf {_df .Log .Debug (_g .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_afbcf .SegmentNumber ));
return nil ,_ff .Error (_bgeff ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _ffd .NewEncodedTable (_fcaf );};_ebce ++;};};return nil ,nil ;};func (_agbc *SymbolDictionary )setRefinementAtPixels ()error {if !_agbc .UseRefinementAggregation ||_agbc .SdrTemplate !=0{return nil ;};if _bbcg :=_agbc .readRefinementAtPixels (2);
_bbcg !=nil {return _bbcg ;};return nil ;};func (_bbccd *TextRegion )decodeID ()(int64 ,error ){if _bbccd .IsHuffmanEncoded {if _bbccd ._ggfc ==nil {_gdeb ,_edcc :=_bbccd ._baf .ReadBits (byte (_bbccd ._adcgf ));return int64 (_gdeb ),_edcc ;};return _bbccd ._ggfc .Decode (_bbccd ._baf );
};return _bbccd ._ccgd .DecodeIAID (uint64 (_bbccd ._adcgf ),_bbccd ._eegc );};func (_ccbg *GenericRegion )decodeTemplate0b (_ecc ,_abbb ,_gacc int ,_eeg ,_aaef int )(_bgff error ){const _ada ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";
var (_cgdb ,_fede int ;_ddab ,_dcc int ;_cae byte ;_ebe int ;);if _ecc >=1{_cae ,_bgff =_ccbg .Bitmap .GetByte (_aaef );if _bgff !=nil {return _ff .Wrap (_bgff ,_ada ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ddab =int (_cae );};if _ecc >=2{_cae ,_bgff =_ccbg .Bitmap .GetByte (_aaef -_ccbg .Bitmap .RowStride );
if _bgff !=nil {return _ff .Wrap (_bgff ,_ada ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_dcc =int (_cae )<<6;};_cgdb =(_ddab &0xf0)|(_dcc &0x3800);for _bcgd :=0;_bcgd < _gacc ;_bcgd =_ebe {var (_dfg byte ;_cdae int ;);_ebe =_bcgd +8;if _cdgg :=_abbb -_bcgd ;
_cdgg > 8{_cdae =8;}else {_cdae =_cdgg ;};if _ecc > 0{_ddab <<=8;if _ebe < _abbb {_cae ,_bgff =_ccbg .Bitmap .GetByte (_aaef +1);if _bgff !=nil {return _ff .Wrap (_bgff ,_ada ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ddab |=int (_cae );};
};if _ecc > 1{_dcc <<=8;if _ebe < _abbb {_cae ,_bgff =_ccbg .Bitmap .GetByte (_aaef -_ccbg .Bitmap .RowStride +1);if _bgff !=nil {return _ff .Wrap (_bgff ,_ada ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_dcc |=int (_cae )<<6;};};for _efa :=0;
_efa < _cdae ;_efa ++{_bbgb :=uint (7-_efa );if _ccbg ._bbf {_fede =_ccbg .overrideAtTemplate0b (_cgdb ,_bcgd +_efa ,_ecc ,int (_dfg ),_efa ,int (_bbgb ));_ccbg ._bcac .SetIndex (int32 (_fede ));}else {_ccbg ._bcac .SetIndex (int32 (_cgdb ));};var _bega int ;
_bega ,_bgff =_ccbg ._afaa .DecodeBit (_ccbg ._bcac );if _bgff !=nil {return _ff .Wrap (_bgff ,_ada ,"");};_dfg |=byte (_bega <<_bbgb );_cgdb =((_cgdb &0x7bf7)<<1)|_bega |((_ddab >>_bbgb )&0x10)|((_dcc >>_bbgb )&0x800);};if _gecb :=_ccbg .Bitmap .SetByte (_eeg ,_dfg );
_gecb !=nil {return _ff .Wrap (_gecb ,_ada ,"");};_eeg ++;_aaef ++;};return nil ;};var _ SegmentEncoder =&RegionSegment {};func (_gac *GenericRegion )computeSegmentDataStructure ()error {_gac .DataOffset =_gac ._acbc .StreamPosition ();_gac .DataHeaderLength =_gac .DataOffset -_gac .DataHeaderOffset ;
_gac .DataLength =int64 (_gac ._acbc .Length ())-_gac .DataHeaderLength ;return nil ;};func (_deb *Header )readSegmentPageAssociation (_bfce Documenter ,_dfbd _gg .StreamReader ,_gdae uint64 ,_fee ...int )(_gabfc error ){const _cbcb ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_deb .PageAssociationFieldSize {_aaeeb ,_gfgf :=_dfbd .ReadBits (8);if _gfgf !=nil {return _ff .Wrap (_gfgf ,_cbcb ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_deb .PageAssociation =int (_aaeeb &0xFF);}else {_adedg ,_gbfa :=_dfbd .ReadBits (32);
if _gbfa !=nil {return _ff .Wrap (_gbfa ,_cbcb ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_deb .PageAssociation =int (_adedg &_c .MaxInt32 );};if _gdae ==0{return nil ;};if _deb .PageAssociation !=0{_gdbb ,_ddbe :=_bfce .GetPage (_deb .PageAssociation );
if _ddbe !=nil {return _ff .Wrap (_ddbe ,_cbcb ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _addg int ;for _dgbg :=uint64 (0);_dgbg < _gdae ;_dgbg ++{_addg =_fee [_dgbg ];
_deb .RTSegments [_dgbg ],_ddbe =_gdbb .GetSegment (_addg );if _ddbe !=nil {var _dee error ;_deb .RTSegments [_dgbg ],_dee =_bfce .GetGlobalSegment (_addg );if _dee !=nil {return _ff .Wrapf (_ddbe ,_cbcb ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_deb .PageAssociation );
};};};return nil ;};for _eef :=uint64 (0);_eef < _gdae ;_eef ++{_deb .RTSegments [_eef ],_gabfc =_bfce .GetGlobalSegment (_fee [_eef ]);if _gabfc !=nil {return _ff .Wrapf (_gabfc ,_cbcb ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_fee [_eef ]);
};};return nil ;};func (_adfg *Header )writeFlags (_ggef _gg .BinaryWriter )(_deba error ){const _bdeg ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_bcd :=byte (_adfg .Type );if _deba =_ggef .WriteByte (_bcd );
_deba !=nil {return _ff .Wrap (_deba ,_bdeg ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_adfg .RetainFlag &&!_adfg .PageAssociationFieldSize {return nil ;
};if _deba =_ggef .SkipBits (-8);_deba !=nil {return _ff .Wrap (_deba ,_bdeg ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _ffbc int ;
if _adfg .RetainFlag {_ffbc =1;};if _deba =_ggef .WriteBit (_ffbc );_deba !=nil {return _ff .Wrap (_deba ,_bdeg ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_ffbc =0;if _adfg .PageAssociationFieldSize {_ffbc =1;
};if _deba =_ggef .WriteBit (_ffbc );_deba !=nil {return _ff .Wrap (_deba ,_bdeg ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_ggef .FinishByte ();return nil ;};func (_cacb *RegionSegment )Encode (w _gg .BinaryWriter )(_dbbcc int ,_fggb error ){const _gcfd ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";
_ggfg :=make ([]byte ,4);_b .BigEndian .PutUint32 (_ggfg ,_cacb .BitmapWidth );_dbbcc ,_fggb =w .Write (_ggfg );if _fggb !=nil {return 0,_ff .Wrap (_fggb ,_gcfd ,"\u0057\u0069\u0064t\u0068");};_b .BigEndian .PutUint32 (_ggfg ,_cacb .BitmapHeight );var _fcdbd int ;
_fcdbd ,_fggb =w .Write (_ggfg );if _fggb !=nil {return 0,_ff .Wrap (_fggb ,_gcfd ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_dbbcc +=_fcdbd ;_b .BigEndian .PutUint32 (_ggfg ,_cacb .XLocation );_fcdbd ,_fggb =w .Write (_ggfg );if _fggb !=nil {return 0,_ff .Wrap (_fggb ,_gcfd ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_dbbcc +=_fcdbd ;_b .BigEndian .PutUint32 (_ggfg ,_cacb .YLocation );_fcdbd ,_fggb =w .Write (_ggfg );if _fggb !=nil {return 0,_ff .Wrap (_fggb ,_gcfd ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_dbbcc +=_fcdbd ;if _fggb =w .WriteByte (byte (_cacb .CombinaionOperator )&0x07);
_fggb !=nil {return 0,_ff .Wrap (_fggb ,_gcfd ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_dbbcc ++;return _dbbcc ,nil ;};func (_cbce *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_cbce .SdHuffAggInstanceSelection {_gffd ,_fffd :=_ffd .GetStandardTable (1);
if _fffd !=nil {return 0,_fffd ;};return _gffd .Decode (_cbce ._effd );};if _cbce ._ecbed ==nil {var (_bdcdd int ;_bege error ;);if _cbce .SdHuffDecodeHeightSelection ==3{_bdcdd ++;};if _cbce .SdHuffDecodeWidthSelection ==3{_bdcdd ++;};if _cbce .SdHuffBMSizeSelection ==3{_bdcdd ++;
};_cbce ._ecbed ,_bege =_cbce .getUserTable (_bdcdd );if _bege !=nil {return 0,_bege ;};};return _cbce ._ecbed .Decode (_cbce ._effd );};func (_afbd *GenericRefinementRegion )readAtPixels ()error {_afbd .GrAtX =make ([]int8 ,2);_afbd .GrAtY =make ([]int8 ,2);
_bdaf ,_gba :=_afbd ._fcc .ReadByte ();if _gba !=nil {return _gba ;};_afbd .GrAtX [0]=int8 (_bdaf );_bdaf ,_gba =_afbd ._fcc .ReadByte ();if _gba !=nil {return _gba ;};_afbd .GrAtY [0]=int8 (_bdaf );_bdaf ,_gba =_afbd ._fcc .ReadByte ();if _gba !=nil {return _gba ;
};_afbd .GrAtX [1]=int8 (_bdaf );_bdaf ,_gba =_afbd ._fcc .ReadByte ();if _gba !=nil {return _gba ;};_afbd .GrAtY [1]=int8 (_bdaf );return nil ;};func (_eaga *PatternDictionary )checkInput ()error {if _eaga .HdpHeight < 1||_eaga .HdpWidth < 1{return _bf .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _eaga .IsMMREncoded {if _eaga .HDTemplate !=0{_df .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_dba *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_gafe ,_aedd ,_dfd ,_dbaa ,_dfb ,_dcbd ,_edc ,_gfe ,_fa int )error {var (_gdb ,_dbd ,_acb ,_dca ,_cge ,_fcb int ;_ccb byte ;_abfg error ;);if _gafe > 0{_ccb ,_abfg =_dba .RegionBitmap .GetByte (_edc -_dfd );
if _abfg !=nil {return _abfg ;};_acb =int (_ccb );};if _gfe > 0&&_gfe <=_dba .ReferenceBitmap .Height {_ccb ,_abfg =_dba .ReferenceBitmap .GetByte (_fa -_dbaa +_dcbd );if _abfg !=nil {return _abfg ;};_dca =int (_ccb )<<4;};if _gfe >=0&&_gfe < _dba .ReferenceBitmap .Height {_ccb ,_abfg =_dba .ReferenceBitmap .GetByte (_fa +_dcbd );
if _abfg !=nil {return _abfg ;};_cge =int (_ccb )<<1;};if _gfe > -2&&_gfe < _dba .ReferenceBitmap .Height -1{_ccb ,_abfg =_dba .ReferenceBitmap .GetByte (_fa +_dbaa +_dcbd );if _abfg !=nil {return _abfg ;};_fcb =int (_ccb );};_gdb =((_acb >>5)&0x6)|((_fcb >>2)&0x30)|(_cge &0x180)|(_dca &0xc00);
var _gce int ;for _dad :=0;_dad < _dfb ;_dad =_gce {var _ddc int ;_gce =_dad +8;var _fab int ;if _fab =_aedd -_dad ;_fab > 8{_fab =8;};_eeba :=_gce < _aedd ;_de :=_gce < _dba .ReferenceBitmap .Width ;_geb :=_dcbd +1;if _gafe > 0{_ccb =0;if _eeba {_ccb ,_abfg =_dba .RegionBitmap .GetByte (_edc -_dfd +1);
if _abfg !=nil {return _abfg ;};};_acb =(_acb <<8)|int (_ccb );};if _gfe > 0&&_gfe <=_dba .ReferenceBitmap .Height {var _ebf int ;if _de {_ccb ,_abfg =_dba .ReferenceBitmap .GetByte (_fa -_dbaa +_geb );if _abfg !=nil {return _abfg ;};_ebf =int (_ccb )<<4;
};_dca =(_dca <<8)|_ebf ;};if _gfe >=0&&_gfe < _dba .ReferenceBitmap .Height {var _cd int ;if _de {_ccb ,_abfg =_dba .ReferenceBitmap .GetByte (_fa +_geb );if _abfg !=nil {return _abfg ;};_cd =int (_ccb )<<1;};_cge =(_cge <<8)|_cd ;};if _gfe > -2&&_gfe < (_dba .ReferenceBitmap .Height -1){_ccb =0;
if _de {_ccb ,_abfg =_dba .ReferenceBitmap .GetByte (_fa +_dbaa +_geb );if _abfg !=nil {return _abfg ;};};_fcb =(_fcb <<8)|int (_ccb );};for _gec :=0;_gec < _fab ;_gec ++{var _fe int ;_fbc :=false ;_geg :=(_gdb >>4)&0x1ff;if _geg ==0x1ff{_fbc =true ;_fe =1;
}else if _geg ==0x00{_fbc =true ;};if !_fbc {if _dba ._dd {_dbd =_dba .overrideAtTemplate0 (_gdb ,_dad +_gec ,_gafe ,_ddc ,_gec );_dba ._ge .SetIndex (int32 (_dbd ));}else {_dba ._ge .SetIndex (int32 (_gdb ));};_fe ,_abfg =_dba ._bbe .DecodeBit (_dba ._ge );
if _abfg !=nil {return _abfg ;};};_acba :=uint (7-_gec );_ddc |=_fe <<_acba ;_gdb =((_gdb &0xdb6)<<1)|_fe |(_acb >>_acba +5)&0x002|((_fcb >>_acba +2)&0x010)|((_cge >>_acba )&0x080)|((_dca >>_acba )&0x400);};_abfg =_dba .RegionBitmap .SetByte (_edc ,byte (_ddc ));
if _abfg !=nil {return _abfg ;};_edc ++;_fa ++;};return nil ;};func (_fcdb *PageInformationSegment )CombinationOperator ()_cb .CombinationOperator {return _fcdb ._dbbe ;};func (_ceeb *PatternDictionary )readPatternWidthAndHeight ()error {_accd ,_gdgd :=_ceeb ._feccc .ReadByte ();
if _gdgd !=nil {return _gdgd ;};_ceeb .HdpWidth =_accd ;_accd ,_gdgd =_ceeb ._feccc .ReadByte ();if _gdgd !=nil {return _gdgd ;};_ceeb .HdpHeight =_accd ;return nil ;};func (_bbcc *TextRegion )String ()string {_ddgc :=&_cf .Builder {};_ddgc .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");
_ddgc .WriteString (_bbcc .RegionInfo .String ()+"\u000a");_ddgc .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_bbcc .SbrTemplate ));_ddgc .WriteString (_g .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_bbcc .SbDsOffset ));
_ddgc .WriteString (_g .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_bbcc .DefaultPixel ));_ddgc .WriteString (_g .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_bbcc .CombinationOperator ));
_ddgc .WriteString (_g .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_bbcc .IsTransposed ));_ddgc .WriteString (_g .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_bbcc .ReferenceCorner ));
_ddgc .WriteString (_g .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_bbcc .UseRefinement ));_ddgc .WriteString (_g .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_bbcc .IsHuffmanEncoded ));
if _bbcc .IsHuffmanEncoded {_ddgc .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_bbcc .SbHuffRSize ));_ddgc .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_bbcc .SbHuffRDY ));
_ddgc .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_bbcc .SbHuffRDX ));_ddgc .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_bbcc .SbHuffRDHeight ));
_ddgc .WriteString (_g .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_bbcc .SbHuffRDWidth ));_ddgc .WriteString (_g .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_bbcc .SbHuffDT ));
_ddgc .WriteString (_g .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_bbcc .SbHuffDS ));_ddgc .WriteString (_g .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_bbcc .SbHuffFS ));
};_ddgc .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bbcc .SbrATX ));_ddgc .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_bbcc .SbrATY ));
_ddgc .WriteString (_g .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_bbcc .NumberOfSymbolInstances ));_ddgc .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_bbcc .SbrATX ));
return _ddgc .String ();};func (_baba *SymbolDictionary )decodeThroughTextRegion (_adge ,_geeb ,_bdfc uint32 )error {if _baba ._beb ==nil {_baba ._beb =_ffgec (_baba ._effd ,nil );_baba ._beb .setContexts (_baba ._dfdd ,_a .NewStats (512,1),_a .NewStats (512,1),_a .NewStats (512,1),_a .NewStats (512,1),_baba ._fecg ,_a .NewStats (512,1),_a .NewStats (512,1),_a .NewStats (512,1),_a .NewStats (512,1));
};if _ffbdg :=_baba .setSymbolsArray ();_ffbdg !=nil {return _ffbdg ;};_baba ._beb .setParameters (_baba ._dbafb ,_baba .IsHuffmanEncoded ,true ,_adge ,_geeb ,_bdfc ,1,_baba ._ecbe +_baba ._bgbg ,0,0,0,1,0,0,0,0,0,0,0,0,0,_baba .SdrTemplate ,_baba .SdrATX ,_baba .SdrATY ,_baba ._dffa ,_baba ._faff );
return _baba .addSymbol (_baba ._beb );};func (_cacab *PatternDictionary )parseHeader ()error {_df .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_df .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_dfea :=_cacab ._feccc .ReadBits (5);if _dfea !=nil {return _dfea ;};if _dfea =_cacab .readTemplate ();_dfea !=nil {return _dfea ;};if _dfea =_cacab .readIsMMREncoded ();_dfea !=nil {return _dfea ;};if _dfea =_cacab .readPatternWidthAndHeight ();
_dfea !=nil {return _dfea ;};if _dfea =_cacab .readGrayMax ();_dfea !=nil {return _dfea ;};if _dfea =_cacab .computeSegmentDataStructure ();_dfea !=nil {return _dfea ;};return _cacab .checkInput ();};func (_ebde *SymbolDictionary )decodeDirectlyThroughGenericRegion (_aecd ,_degeg uint32 )error {if _ebde ._gfd ==nil {_ebde ._gfd =NewGenericRegion (_ebde ._effd );
};_ebde ._gfd .setParametersWithAt (false ,byte (_ebde .SdTemplate ),false ,false ,_ebde .SdATX ,_ebde .SdATY ,_aecd ,_degeg ,_ebde ._dfdd ,_ebde ._dbafb );return _ebde .addSymbol (_ebde ._gfd );};func (_ggbf *GenericRegion )overrideAtTemplate1 (_ecf ,_cgefa ,_abfd ,_gfea ,_fege int )int {_ecf &=0x1FF7;
if _ggbf .GBAtY [0]==0&&_ggbf .GBAtX [0]>=-int8 (_fege ){_ecf |=(_gfea >>uint (7-(int8 (_fege )+_ggbf .GBAtX [0]))&0x1)<<3;}else {_ecf |=int (_ggbf .getPixel (_cgefa +int (_ggbf .GBAtX [0]),_abfd +int (_ggbf .GBAtY [0])))<<3;};return _ecf ;};func (_gdf *RegionSegment )readCombinationOperator ()error {_dcbc ,_dag :=_gdf ._cega .ReadBits (3);
if _dag !=nil {return _dag ;};_gdf .CombinaionOperator =_cb .CombinationOperator (_dcbc &0xF);return nil ;};func (_cdeg *GenericRegion )Encode (w _gg .BinaryWriter )(_aab int ,_fdbe error ){const _fge ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";
if _cdeg .Bitmap ==nil {return 0,_ff .Error (_fge ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_bac ,_fdbe :=_cdeg .RegionSegment .Encode (w );if _fdbe !=nil {return 0,_ff .Wrap (_fdbe ,_fge ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};_aab +=_bac ;if _fdbe =w .SkipBits (4);_fdbe !=nil {return _aab ,_ff .Wrap (_fdbe ,_fge ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _fag int ;if _cdeg .IsTPGDon {_fag =1;};if _fdbe =w .WriteBit (_fag );
_fdbe !=nil {return _aab ,_ff .Wrap (_fdbe ,_fge ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_fag =0;if _fdbe =w .WriteBit (int (_cdeg .GBTemplate >>1)&0x01);_fdbe !=nil {return _aab ,_ff .Wrap (_fdbe ,_fge ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _fdbe =w .WriteBit (int (_cdeg .GBTemplate )&0x01);_fdbe !=nil {return _aab ,_ff .Wrap (_fdbe ,_fge ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _cdeg .UseMMR {_fag =1;};if _fdbe =w .WriteBit (_fag );
_fdbe !=nil {return _aab ,_ff .Wrap (_fdbe ,_fge ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_aab ++;if _bac ,_fdbe =_cdeg .writeGBAtPixels (w );_fdbe !=nil {return _aab ,_ff .Wrap (_fdbe ,_fge ,"");};_aab +=_bac ;_ddd :=_ee .New ();
if _fdbe =_ddd .EncodeBitmap (_cdeg .Bitmap ,_cdeg .IsTPGDon );_fdbe !=nil {return _aab ,_ff .Wrap (_fdbe ,_fge ,"");};_ddd .Final ();var _bgb int64 ;if _bgb ,_fdbe =_ddd .WriteTo (w );_fdbe !=nil {return _aab ,_ff .Wrap (_fdbe ,_fge ,"");};_aab +=int (_bgb );
return _aab ,nil ;};func (_ecae *TextRegion )readRegionFlags ()error {var (_dadcf int ;_aadb uint64 ;_edec error ;);_dadcf ,_edec =_ecae ._baf .ReadBit ();if _edec !=nil {return _edec ;};_ecae .SbrTemplate =int8 (_dadcf );_aadb ,_edec =_ecae ._baf .ReadBits (5);
if _edec !=nil {return _edec ;};_ecae .SbDsOffset =int8 (_aadb );if _ecae .SbDsOffset > 0x0f{_ecae .SbDsOffset -=0x20;};_dadcf ,_edec =_ecae ._baf .ReadBit ();if _edec !=nil {return _edec ;};_ecae .DefaultPixel =int8 (_dadcf );_aadb ,_edec =_ecae ._baf .ReadBits (2);
if _edec !=nil {return _edec ;};_ecae .CombinationOperator =_cb .CombinationOperator (int (_aadb )&0x3);_dadcf ,_edec =_ecae ._baf .ReadBit ();if _edec !=nil {return _edec ;};_ecae .IsTransposed =int8 (_dadcf );_aadb ,_edec =_ecae ._baf .ReadBits (2);if _edec !=nil {return _edec ;
};_ecae .ReferenceCorner =int16 (_aadb )&0x3;_aadb ,_edec =_ecae ._baf .ReadBits (2);if _edec !=nil {return _edec ;};_ecae .LogSBStrips =int16 (_aadb )&0x3;_ecae .SbStrips =1<<uint (_ecae .LogSBStrips );_dadcf ,_edec =_ecae ._baf .ReadBit ();if _edec !=nil {return _edec ;
};if _dadcf ==1{_ecae .UseRefinement =true ;};_dadcf ,_edec =_ecae ._baf .ReadBit ();if _edec !=nil {return _edec ;};if _dadcf ==1{_ecae .IsHuffmanEncoded =true ;};return nil ;};type OrganizationType uint8 ;type GenericRegion struct{_acbc _gg .StreamReader ;
DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_bbf bool ;
Bitmap *_cb .Bitmap ;_afaa *_a .Decoder ;_bcac *_a .DecoderStats ;_dbg *_dbe .Decoder ;};func (_ecca *PageInformationSegment )readWidthAndHeight ()error {_caea ,_ddga :=_ecca ._acac .ReadBits (32);if _ddga !=nil {return _ddga ;};_ecca .PageBMWidth =int (_caea &_c .MaxInt32 );
_caea ,_ddga =_ecca ._acac .ReadBits (32);if _ddga !=nil {return _ddga ;};_ecca .PageBMHeight =int (_caea &_c .MaxInt32 );return nil ;};func (_ecbb *SymbolDictionary )encodeSymbols (_ffbcc _gg .BinaryWriter )(_afcb int ,_fagb error ){const _efbb ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_eebe :=_ee .New ();_eebe .Init ();_fggd ,_fagb :=_ecbb ._dege .SelectByIndexes (_ecbb ._cgb );if _fagb !=nil {return 0,_ff .Wrap (_fagb ,_efbb ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_dfeb :=map[*_cb .Bitmap ]int {};for _ffge ,_edfc :=range _fggd .Values {_dfeb [_edfc ]=_ffge ;
};_fggd .SortByHeight ();var _dgcf ,_eegg int ;_abbbc ,_fagb :=_fggd .GroupByHeight ();if _fagb !=nil {return 0,_ff .Wrap (_fagb ,_efbb ,"");};for _ ,_cfge :=range _abbbc .Values {_gfc :=_cfge .Values [0].Height ;_fdeg :=_gfc -_dgcf ;if _fagb =_eebe .EncodeInteger (_ee .IADH ,_fdeg );
_fagb !=nil {return 0,_ff .Wrapf (_fagb ,_efbb ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_fdeg );};_dgcf =_gfc ;_feec ,_acfc :=_cfge .GroupByWidth ();if _acfc !=nil {return 0,_ff .Wrapf (_acfc ,_efbb ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_gfc );
};var _gceb int ;for _ ,_fdaa :=range _feec .Values {for _ ,_gffa :=range _fdaa .Values {_ebbf :=_gffa .Width ;_ced :=_ebbf -_gceb ;if _acfc =_eebe .EncodeInteger (_ee .IADW ,_ced );_acfc !=nil {return 0,_ff .Wrapf (_acfc ,_efbb ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_ced );
};_gceb +=_ced ;if _acfc =_eebe .EncodeBitmap (_gffa ,false );_acfc !=nil {return 0,_ff .Wrapf (_acfc ,_efbb ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_gfc ,_ebbf );};_bgffe :=_dfeb [_gffa ];_ecbb ._aedbg [_bgffe ]=_eegg ;
_eegg ++;};};if _acfc =_eebe .EncodeOOB (_ee .IADW );_acfc !=nil {return 0,_ff .Wrap (_acfc ,_efbb ,"\u0049\u0041\u0044\u0057");};};if _fagb =_eebe .EncodeInteger (_ee .IAEX ,0);_fagb !=nil {return 0,_ff .Wrap (_fagb ,_efbb ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _fagb =_eebe .EncodeInteger (_ee .IAEX ,len (_ecbb ._cgb ));_fagb !=nil {return 0,_ff .Wrap (_fagb ,_efbb ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_eebe .Final ();_accaf ,_fagb :=_eebe .WriteTo (_ffbcc );
if _fagb !=nil {return 0,_ff .Wrap (_fagb ,_efbb ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};
return int (_accaf ),nil ;};func (_dfgee *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_bdgga :=range _dfgee .Header .RTSegments {if _bdgga .Type ==0{_feeca ,_fbfc :=_bdgga .GetSegmentData ();if _fbfc !=nil {return _fbfc ;};_edee ,_aeee :=_feeca .(*SymbolDictionary );
if !_aeee {return _g .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_feeca );
};_fcdc ,_fbfc :=_edee .GetDictionary ();if _fbfc !=nil {return _g .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_bdgga .SegmentNumber ,_fbfc .Error ());
};_dfgee ._cadf =append (_dfgee ._cadf ,_fcdc ...);_dfgee ._ecbe +=_edee .NumberOfExportedSymbols ;};};return nil ;};func (_gbcg *SymbolDictionary )readNumberOfExportedSymbols ()error {_cafg ,_cgea :=_gbcg ._effd .ReadBits (32);if _cgea !=nil {return _cgea ;
};_gbcg .NumberOfExportedSymbols =uint32 (_cafg &_c .MaxUint32 );return nil ;};func (_edd *PatternDictionary )extractPatterns (_ddgac *_cb .Bitmap )error {var _befa int ;_ebd :=make ([]*_cb .Bitmap ,_edd .GrayMax +1);for _befa <=int (_edd .GrayMax ){_cfebd :=int (_edd .HdpWidth )*_befa ;
_dec :=_db .Rect (_cfebd ,0,_cfebd +int (_edd .HdpWidth ),int (_edd .HdpHeight ));_gbfe ,_cgeb :=_cb .Extract (_dec ,_ddgac );if _cgeb !=nil {return _cgeb ;};_ebd [_befa ]=_gbfe ;_befa ++;};_edd .Patterns =_ebd ;return nil ;};func (_cacc *SymbolDictionary )encodeFlags (_fcgaf _gg .BinaryWriter )(_cffc int ,_aceb error ){const _edeg ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _aceb =_fcgaf .SkipBits (3);_aceb !=nil {return 0,_ff .Wrap (_aceb ,_edeg ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _ddbg int ;if _cacc .SdrTemplate > 0{_ddbg =1;};if _aceb =_fcgaf .WriteBit (_ddbg );_aceb !=nil {return _cffc ,_ff .Wrap (_aceb ,_edeg ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_ddbg =0;if _cacc .SdTemplate > 1{_ddbg =1;};if _aceb =_fcgaf .WriteBit (_ddbg );_aceb !=nil {return _cffc ,_ff .Wrap (_aceb ,_edeg ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_ddbg =0;if _cacc .SdTemplate ==1||_cacc .SdTemplate ==3{_ddbg =1;
};if _aceb =_fcgaf .WriteBit (_ddbg );_aceb !=nil {return _cffc ,_ff .Wrap (_aceb ,_edeg ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_ddbg =0;if _cacc ._fgde {_ddbg =1;};if _aceb =_fcgaf .WriteBit (_ddbg );_aceb !=nil {return _cffc ,_ff .Wrap (_aceb ,_edeg ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_ddbg =0;if _cacc ._bdebg {_ddbg =1;};if _aceb =_fcgaf .WriteBit (_ddbg );_aceb !=nil {return _cffc ,_ff .Wrap (_aceb ,_edeg ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_ddbg =0;if _cacc .SdHuffAggInstanceSelection {_ddbg =1;
};if _aceb =_fcgaf .WriteBit (_ddbg );_aceb !=nil {return _cffc ,_ff .Wrap (_aceb ,_edeg ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_ddbg =int (_cacc .SdHuffBMSizeSelection );if _aceb =_fcgaf .WriteBit (_ddbg );
_aceb !=nil {return _cffc ,_ff .Wrap (_aceb ,_edeg ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_ddbg =0;if _cacc .SdHuffDecodeWidthSelection > 1{_ddbg =1;};if _aceb =_fcgaf .WriteBit (_ddbg );_aceb !=nil {return _cffc ,_ff .Wrap (_aceb ,_edeg ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_ddbg =0;switch _cacc .SdHuffDecodeWidthSelection {case 1,3:_ddbg =1;};if _aceb =_fcgaf .WriteBit (_ddbg );_aceb !=nil {return _cffc ,_ff .Wrap (_aceb ,_edeg ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_ddbg =0;if _cacc .SdHuffDecodeHeightSelection > 1{_ddbg =1;
};if _aceb =_fcgaf .WriteBit (_ddbg );_aceb !=nil {return _cffc ,_ff .Wrap (_aceb ,_edeg ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_ddbg =0;switch _cacc .SdHuffDecodeHeightSelection {case 1,3:_ddbg =1;};if _aceb =_fcgaf .WriteBit (_ddbg );
_aceb !=nil {return _cffc ,_ff .Wrap (_aceb ,_edeg ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_ddbg =0;if _cacc .UseRefinementAggregation {_ddbg =1;};if _aceb =_fcgaf .WriteBit (_ddbg );_aceb !=nil {return _cffc ,_ff .Wrap (_aceb ,_edeg ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");
};_ddbg =0;if _cacc .IsHuffmanEncoded {_ddbg =1;};if _aceb =_fcgaf .WriteBit (_ddbg );_aceb !=nil {return _cffc ,_ff .Wrap (_aceb ,_edeg ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};type SymbolDictionary struct{_effd _gg .StreamReader ;SdrTemplate int8 ;
SdTemplate int8 ;_fgde bool ;_bdebg bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;
SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_ecbe uint32 ;_cadf []*_cb .Bitmap ;_bgbg uint32 ;_bdegd []*_cb .Bitmap ;_eggg _ffd .Tabler ;_deae _ffd .Tabler ;_cbe _ffd .Tabler ;_ecbed _ffd .Tabler ;
_ddde []*_cb .Bitmap ;_dffa []*_cb .Bitmap ;_dbafb *_a .Decoder ;_beb *TextRegion ;_gfd *GenericRegion ;_gddcf *GenericRefinementRegion ;_dfdd *_a .DecoderStats ;_gefg *_a .DecoderStats ;_bfae *_a .DecoderStats ;_gafec *_a .DecoderStats ;_affga *_a .DecoderStats ;
_bfbd *_a .DecoderStats ;_beeeb *_a .DecoderStats ;_afda *_a .DecoderStats ;_fecg *_a .DecoderStats ;_faff int8 ;_dege *_cb .Bitmaps ;_cgb []int ;_aedbg map[int ]int ;_gbbg bool ;};func (_cfcbb Type )String ()string {switch _cfcbb {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_ggge *TextRegion )initSymbols ()error {const _affd ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
for _ ,_ffbe :=range _ggge .Header .RTSegments {if _ffbe ==nil {return _ff .Error (_affd ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _ffbe .Type ==0{_fgbca ,_gdgc :=_ffbe .GetSegmentData ();if _gdgc !=nil {return _ff .Wrap (_gdgc ,_affd ,"");};_egeaf ,_bcee :=_fgbca .(*SymbolDictionary );if !_bcee {return _ff .Error (_affd ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_egeaf ._fecg =_ggge ._eegc ;_ddbgf ,_gdgc :=_egeaf .GetDictionary ();if _gdgc !=nil {return _ff .Wrap (_gdgc ,_affd ,"");};_ggge .Symbols =append (_ggge .Symbols ,_ddbgf ...);};};_ggge .NumberOfSymbols =uint32 (len (_ggge .Symbols ));return nil ;};const (ORandom OrganizationType =iota ;
OSequential ;);func NewGenericRegion (r _gg .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_acbc :r };};func (_fdf *Header )GetSegmentData ()(Segmenter ,error ){var _abfa Segmenter ;if _fdf .SegmentData !=nil {_abfa =_fdf .SegmentData ;
};if _abfa ==nil {_ccgb ,_ceab :=_bae [_fdf .Type ];if !_ceab {return nil ,_g .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_fdf .Type ,_fdf .Type );
};_abfa =_ccgb ();_df .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_fdf .SegmentNumber ,_fdf .SegmentDataStartOffset );
_fga ,_egfg :=_fdf .subInputReader ();if _egfg !=nil {return nil ,_egfg ;};if _fef :=_abfa .Init (_fdf ,_fga );_fef !=nil {_df .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_fef ,_abfa );
return nil ,_fef ;};_fdf .SegmentData =_abfa ;};return _abfa ,nil ;};func (_eaf *GenericRefinementRegion )String ()string {_aae :=&_cf .Builder {};_aae .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_aae .WriteString (_eaf .RegionInfo .String ()+"\u000a");_aae .WriteString (_g .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_eaf .IsTPGROn ));_aae .WriteString (_g .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_eaf .TemplateID ));
_aae .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_eaf .GrAtX ));_aae .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_eaf .GrAtY ));
_aae .WriteString (_g .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_eaf .ReferenceDX ));_aae .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_eaf .ReferenceDY ));
return _aae .String ();};func (_be *GenericRefinementRegion )setParameters (_ccf *_a .DecoderStats ,_afa *_a .Decoder ,_fdc int8 ,_cdg ,_bef uint32 ,_ccg *_cb .Bitmap ,_gad ,_bgag int32 ,_afgc bool ,_aaa []int8 ,_ecg []int8 ){_df .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _ccf !=nil {_be ._ge =_ccf ;};if _afa !=nil {_be ._bbe =_afa ;};_be .TemplateID =_fdc ;_be .RegionInfo .BitmapWidth =_cdg ;_be .RegionInfo .BitmapHeight =_bef ;_be .ReferenceBitmap =_ccg ;_be .ReferenceDX =_gad ;_be .ReferenceDY =_bgag ;_be .IsTPGROn =_afgc ;
_be .GrAtX =_aaa ;_be .GrAtY =_ecg ;_be .RegionBitmap =nil ;_df .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_be );
};func (_ad *GenericRefinementRegion )decodeTypicalPredictedLine (_gafa ,_baa ,_agf ,_eedg ,_abb ,_aeg int )error {_ed :=_gafa -int (_ad .ReferenceDY );_bab :=_ad .ReferenceBitmap .GetByteIndex (0,_ed );_aed :=_ad .RegionBitmap .GetByteIndex (0,_gafa );
var _ggb error ;switch _ad .TemplateID {case 0:_ggb =_ad .decodeTypicalPredictedLineTemplate0 (_gafa ,_baa ,_agf ,_eedg ,_abb ,_aeg ,_aed ,_ed ,_bab );case 1:_ggb =_ad .decodeTypicalPredictedLineTemplate1 (_gafa ,_baa ,_agf ,_eedg ,_abb ,_aeg ,_aed ,_ed ,_bab );
};return _ggb ;};func (_cdgge *TextRegion )decodeDT ()(_aadcb int64 ,_gdfa error ){if _cdgge .IsHuffmanEncoded {if _cdgge .SbHuffDT ==3{_aadcb ,_gdfa =_cdgge ._edfcf .Decode (_cdgge ._baf );if _gdfa !=nil {return 0,_gdfa ;};}else {var _daaf _ffd .Tabler ;
_daaf ,_gdfa =_ffd .GetStandardTable (11+int (_cdgge .SbHuffDT ));if _gdfa !=nil {return 0,_gdfa ;};_aadcb ,_gdfa =_daaf .Decode (_cdgge ._baf );if _gdfa !=nil {return 0,_gdfa ;};};}else {var _dacg int32 ;_dacg ,_gdfa =_cdgge ._ccgd .DecodeInt (_cdgge ._fbcf );
if _gdfa !=nil {return ;};_aadcb =int64 (_dacg );};_aadcb *=int64 (_cdgge .SbStrips );return _aadcb ,nil ;};type Segmenter interface{Init (_gaab *Header ,_edca _gg .StreamReader )error ;};func (_cfd *EndOfStripe )parseHeader (_da *Header ,_fc _gg .StreamReader )error {_gdc ,_ae :=_cfd ._ce .ReadBits (32);
if _ae !=nil {return _ae ;};_cfd ._eea =int (_gdc &_c .MaxInt32 );return nil ;};func (_aegc *GenericRegion )getPixel (_cfc ,_cbca int )int8 {if _cfc < 0||_cfc >=_aegc .Bitmap .Width {return 0;};if _cbca < 0||_cbca >=_aegc .Bitmap .Height {return 0;};if _aegc .Bitmap .GetPixel (_cfc ,_cbca ){return 1;
};return 0;};func (_effg *TextRegion )decodeRdx ()(int64 ,error ){const _fdbca ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _effg .IsHuffmanEncoded {if _effg .SbHuffRDX ==3{if _effg ._fgcf ==nil {var (_eeefb int ;_egdg error ;);if _effg .SbHuffFS ==3{_eeefb ++;
};if _effg .SbHuffDS ==3{_eeefb ++;};if _effg .SbHuffDT ==3{_eeefb ++;};if _effg .SbHuffRDWidth ==3{_eeefb ++;};if _effg .SbHuffRDHeight ==3{_eeefb ++;};_effg ._fgcf ,_egdg =_effg .getUserTable (_eeefb );if _egdg !=nil {return 0,_ff .Wrap (_egdg ,_fdbca ,"");
};};return _effg ._fgcf .Decode (_effg ._baf );};_bgac ,_adea :=_ffd .GetStandardTable (14+int (_effg .SbHuffRDX ));if _adea !=nil {return 0,_ff .Wrap (_adea ,_fdbca ,"");};return _bgac .Decode (_effg ._baf );};_aabb ,_bgbb :=_effg ._ccgd .DecodeInt (_effg ._geac );
if _bgbb !=nil {return 0,_ff .Wrap (_bgbb ,_fdbca ,"");};return int64 (_aabb ),nil ;};func (_ebdg *SymbolDictionary )String ()string {_dgaa :=&_cf .Builder {};_dgaa .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");
_dgaa .WriteString (_g .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_ebdg .SdrTemplate ));_dgaa .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_ebdg .SdTemplate ));
_dgaa .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_ebdg ._fgde ));_dgaa .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_ebdg ._bdebg ));
_dgaa .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_ebdg .SdHuffAggInstanceSelection ));
_dgaa .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_ebdg .SdHuffBMSizeSelection ));_dgaa .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_ebdg .SdHuffDecodeWidthSelection ));
_dgaa .WriteString (_g .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_ebdg .SdHuffDecodeHeightSelection ));_dgaa .WriteString (_g .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_ebdg .UseRefinementAggregation ));
_dgaa .WriteString (_g .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_ebdg .IsHuffmanEncoded ));_dgaa .WriteString (_g .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_ebdg .SdATX ));
_dgaa .WriteString (_g .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_ebdg .SdATY ));_dgaa .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_ebdg .SdrATX ));_dgaa .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_ebdg .SdrATY ));
_dgaa .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_ebdg .NumberOfExportedSymbols ));_dgaa .WriteString (_g .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_ebdg .NumberOfNewSymbols ));
_dgaa .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_ebdg ._ecbe ));_dgaa .WriteString (_g .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_ebdg ._bgbg ));
return _dgaa .String ();};func (_cgaa *Header )String ()string {_cfde :=&_cf .Builder {};_cfde .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_cfde .WriteString (_g .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_cgaa .SegmentNumber ));
_cfde .WriteString (_g .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_cgaa .Type ));_cfde .WriteString (_g .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_cgaa .RetainFlag ));
_cfde .WriteString (_g .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_cgaa .PageAssociation ));_cfde .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_cgaa .PageAssociationFieldSize ));
_cfde .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_cfcf :=range _cgaa .RTSNumbers {_cfde .WriteString (_g .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_cfcf ));};_cfde .WriteString (_g .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_cgaa .HeaderLength ));
_cfde .WriteString (_g .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_cgaa .SegmentDataLength ));_cfde .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_cgaa .SegmentDataStartOffset ));
return _cfde .String ();};func _eaa (_gbg _gg .StreamReader ,_ggc *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_fcc :_gbg ,RegionInfo :NewRegionSegment (_gbg ),_gc :_ggc ,_ggf :&template0 {},_gf :&template1 {}};};type HalftoneRegion struct{_eaff _gg .StreamReader ;
_dbdc *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _cb .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;
HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_cb .Bitmap ;Patterns []*_cb .Bitmap ;};type PatternDictionary struct{_feccc _gg .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;
DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_cb .Bitmap ;GrayMax uint32 ;};func (_bca *GenericRefinementRegion )decodeTemplate (_cab ,_cda ,_fdb ,_efb ,_aag ,_gece ,_cfe ,_afg ,_bce ,_eac int ,_gca templater )(_bgf error ){var (_fgf ,_gef ,_cabb ,_caf ,_fgb int16 ;
_dbb ,_cef ,_bbg ,_cde int ;_aedb byte ;);if _bce >=1&&(_bce -1)< _bca .ReferenceBitmap .Height {_aedb ,_bgf =_bca .ReferenceBitmap .GetByte (_eac -_efb );if _bgf !=nil {return ;};_dbb =int (_aedb );};if _bce >=0&&(_bce )< _bca .ReferenceBitmap .Height {_aedb ,_bgf =_bca .ReferenceBitmap .GetByte (_eac );
if _bgf !=nil {return ;};_cef =int (_aedb );};if _bce >=-1&&(_bce +1)< _bca .ReferenceBitmap .Height {_aedb ,_bgf =_bca .ReferenceBitmap .GetByte (_eac +_efb );if _bgf !=nil {return ;};_bbg =int (_aedb );};_eac ++;if _cab >=1{_aedb ,_bgf =_bca .RegionBitmap .GetByte (_afg -_fdb );
if _bgf !=nil {return ;};_cde =int (_aedb );};_afg ++;_aef :=_bca .ReferenceDX %8;_bbge :=6+_aef ;_gdd :=_eac %_efb ;if _bbge >=0{if _bbge < 8{_fgf =int16 (_dbb >>uint (_bbge ))&0x07;};if _bbge < 8{_gef =int16 (_cef >>uint (_bbge ))&0x07;};if _bbge < 8{_cabb =int16 (_bbg >>uint (_bbge ))&0x07;
};if _bbge ==6&&_gdd > 1{if _bce >=1&&(_bce -1)< _bca .ReferenceBitmap .Height {_aedb ,_bgf =_bca .ReferenceBitmap .GetByte (_eac -_efb -2);if _bgf !=nil {return _bgf ;};_fgf |=int16 (_aedb <<2)&0x04;};if _bce >=0&&_bce < _bca .ReferenceBitmap .Height {_aedb ,_bgf =_bca .ReferenceBitmap .GetByte (_eac -2);
if _bgf !=nil {return _bgf ;};_gef |=int16 (_aedb <<2)&0x04;};if _bce >=-1&&_bce +1< _bca .ReferenceBitmap .Height {_aedb ,_bgf =_bca .ReferenceBitmap .GetByte (_eac +_efb -2);if _bgf !=nil {return _bgf ;};_cabb |=int16 (_aedb <<2)&0x04;};};if _bbge ==0{_dbb =0;
_cef =0;_bbg =0;if _gdd < _efb -1{if _bce >=1&&_bce -1< _bca .ReferenceBitmap .Height {_aedb ,_bgf =_bca .ReferenceBitmap .GetByte (_eac -_efb );if _bgf !=nil {return _bgf ;};_dbb =int (_aedb );};if _bce >=0&&_bce < _bca .ReferenceBitmap .Height {_aedb ,_bgf =_bca .ReferenceBitmap .GetByte (_eac );
if _bgf !=nil {return _bgf ;};_cef =int (_aedb );};if _bce >=-1&&_bce +1< _bca .ReferenceBitmap .Height {_aedb ,_bgf =_bca .ReferenceBitmap .GetByte (_eac +_efb );if _bgf !=nil {return _bgf ;};_bbg =int (_aedb );};};_eac ++;};}else {_fgf =int16 (_dbb <<1)&0x07;
_gef =int16 (_cef <<1)&0x07;_cabb =int16 (_bbg <<1)&0x07;_dbb =0;_cef =0;_bbg =0;if _gdd < _efb -1{if _bce >=1&&_bce -1< _bca .ReferenceBitmap .Height {_aedb ,_bgf =_bca .ReferenceBitmap .GetByte (_eac -_efb );if _bgf !=nil {return _bgf ;};_dbb =int (_aedb );
};if _bce >=0&&_bce < _bca .ReferenceBitmap .Height {_aedb ,_bgf =_bca .ReferenceBitmap .GetByte (_eac );if _bgf !=nil {return _bgf ;};_cef =int (_aedb );};if _bce >=-1&&_bce +1< _bca .ReferenceBitmap .Height {_aedb ,_bgf =_bca .ReferenceBitmap .GetByte (_eac +_efb );
if _bgf !=nil {return _bgf ;};_bbg =int (_aedb );};_eac ++;};_fgf |=int16 ((_dbb >>7)&0x07);_gef |=int16 ((_cef >>7)&0x07);_cabb |=int16 ((_bbg >>7)&0x07);};_caf =int16 (_cde >>6);_fgb =0;_bgea :=(2-_aef )%8;_dbb <<=uint (_bgea );_cef <<=uint (_bgea );
_bbg <<=uint (_bgea );_cde <<=2;var _abe int ;for _bfff :=0;_bfff < _cda ;_bfff ++{_fdd :=_bfff &0x07;_fdg :=_gca .form (_fgf ,_gef ,_cabb ,_caf ,_fgb );if _bca ._dd {_aedb ,_bgf =_bca .RegionBitmap .GetByte (_bca .RegionBitmap .GetByteIndex (_bfff ,_cab ));
if _bgf !=nil {return _bgf ;};_bca ._ge .SetIndex (int32 (_bca .overrideAtTemplate0 (int (_fdg ),_bfff ,_cab ,int (_aedb ),_fdd )));}else {_bca ._ge .SetIndex (int32 (_fdg ));};_abe ,_bgf =_bca ._bbe .DecodeBit (_bca ._ge );if _bgf !=nil {return _bgf ;
};if _bgf =_bca .RegionBitmap .SetPixel (_bfff ,_cab ,byte (_abe ));_bgf !=nil {return _bgf ;};_fgf =((_fgf <<1)|0x01&int16 (_dbb >>7))&0x07;_gef =((_gef <<1)|0x01&int16 (_cef >>7))&0x07;_cabb =((_cabb <<1)|0x01&int16 (_bbg >>7))&0x07;_caf =((_caf <<1)|0x01&int16 (_cde >>7))&0x07;
_fgb =int16 (_abe );if (_bfff -int (_bca .ReferenceDX ))%8==5{_dbb =0;_cef =0;_bbg =0;if ((_bfff -int (_bca .ReferenceDX ))/8)+1< _bca .ReferenceBitmap .RowStride {if _bce >=1&&(_bce -1)< _bca .ReferenceBitmap .Height {_aedb ,_bgf =_bca .ReferenceBitmap .GetByte (_eac -_efb );
if _bgf !=nil {return _bgf ;};_dbb =int (_aedb );};if _bce >=0&&_bce < _bca .ReferenceBitmap .Height {_aedb ,_bgf =_bca .ReferenceBitmap .GetByte (_eac );if _bgf !=nil {return _bgf ;};_cef =int (_aedb );};if _bce >=-1&&(_bce +1)< _bca .ReferenceBitmap .Height {_aedb ,_bgf =_bca .ReferenceBitmap .GetByte (_eac +_efb );
if _bgf !=nil {return _bgf ;};_bbg =int (_aedb );};};_eac ++;}else {_dbb <<=1;_cef <<=1;_bbg <<=1;};if _fdd ==5&&_cab >=1{if ((_bfff >>3)+1)>=_bca .RegionBitmap .RowStride {_cde =0;}else {_aedb ,_bgf =_bca .RegionBitmap .GetByte (_afg -_fdb );if _bgf !=nil {return _bgf ;
};_cde =int (_aedb );};_afg ++;}else {_cde <<=1;};};return nil ;};func (_afbb *SymbolDictionary )getSbSymCodeLen ()int8 {_acda :=int8 (_c .Ceil (_c .Log (float64 (_afbb ._ecbe +_afbb .NumberOfNewSymbols ))/_c .Log (2)));if _afbb .IsHuffmanEncoded &&_acda < 1{return 1;
};return _acda ;};func (_bdad *GenericRegion )setParametersWithAt (_gff bool ,_afd byte ,_afc ,_dgcg bool ,_aded ,_cee []int8 ,_bad ,_bgad uint32 ,_cdc *_a .DecoderStats ,_deaf *_a .Decoder ){_bdad .IsMMREncoded =_gff ;_bdad .GBTemplate =_afd ;_bdad .IsTPGDon =_afc ;
_bdad .GBAtX =_aded ;_bdad .GBAtY =_cee ;_bdad .RegionSegment .BitmapHeight =_bgad ;_bdad .RegionSegment .BitmapWidth =_bad ;_bdad ._dbg =nil ;_bdad .Bitmap =nil ;if _cdc !=nil {_bdad ._bcac =_cdc ;};if _deaf !=nil {_bdad ._afaa =_deaf ;};_df .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_bdad );
};func (_gdbee *TextRegion )decodeRdh ()(int64 ,error ){const _geebf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _gdbee .IsHuffmanEncoded {if _gdbee .SbHuffRDHeight ==3{if _gdbee ._cggg ==nil {var (_cefg int ;_cfeg error ;);if _gdbee .SbHuffFS ==3{_cefg ++;
};if _gdbee .SbHuffDS ==3{_cefg ++;};if _gdbee .SbHuffDT ==3{_cefg ++;};if _gdbee .SbHuffRDWidth ==3{_cefg ++;};_gdbee ._cggg ,_cfeg =_gdbee .getUserTable (_cefg );if _cfeg !=nil {return 0,_ff .Wrap (_cfeg ,_geebf ,"");};};return _gdbee ._cggg .Decode (_gdbee ._baf );
};_facd ,_adaf :=_ffd .GetStandardTable (14+int (_gdbee .SbHuffRDHeight ));if _adaf !=nil {return 0,_ff .Wrap (_adaf ,_geebf ,"");};return _facd .Decode (_gdbee ._baf );};_gdac ,_eeed :=_gdbee ._ccgd .DecodeInt (_gdbee ._dgebg );if _eeed !=nil {return 0,_ff .Wrap (_eeed ,_geebf ,"");
};return int64 (_gdac ),nil ;};func (_adbg *GenericRegion )decodeTemplate3 (_cbb ,_dcd ,_dcce int ,_agdc ,_gcbb int )(_ede error ){const _dab ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_agb ,_agef int ;_daeb int ;
_adbe byte ;_gbf ,_eacg int ;);if _cbb >=1{_adbe ,_ede =_adbg .Bitmap .GetByte (_gcbb );if _ede !=nil {return _ff .Wrap (_ede ,_dab ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_daeb =int (_adbe );};_agb =(_daeb >>1)&0x70;for _gebd :=0;_gebd < _dcce ;
_gebd =_gbf {var (_acae byte ;_fbf int ;);_gbf =_gebd +8;if _ace :=_dcd -_gebd ;_ace > 8{_fbf =8;}else {_fbf =_ace ;};if _cbb >=1{_daeb <<=8;if _gbf < _dcd {_adbe ,_ede =_adbg .Bitmap .GetByte (_gcbb +1);if _ede !=nil {return _ff .Wrap (_ede ,_dab ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_daeb |=int (_adbe );};};for _bgef :=0;_bgef < _fbf ;_bgef ++{if _adbg ._bbf {_agef =_adbg .overrideAtTemplate3 (_agb ,_gebd +_bgef ,_cbb ,int (_acae ),_bgef );_adbg ._bcac .SetIndex (int32 (_agef ));}else {_adbg ._bcac .SetIndex (int32 (_agb ));};_eacg ,_ede =_adbg ._afaa .DecodeBit (_adbg ._bcac );
if _ede !=nil {return _ff .Wrap (_ede ,_dab ,"");};_acae |=byte (_eacg )<<byte (7-_bgef );_agb =((_agb &0x1f7)<<1)|_eacg |((_daeb >>uint (8-_bgef ))&0x010);};if _gag :=_adbg .Bitmap .SetByte (_agdc ,_acae );_gag !=nil {return _ff .Wrap (_gag ,_dab ,"");
};_agdc ++;_gcbb ++;};return nil ;};func (_ade *GenericRefinementRegion )updateOverride ()error {if _ade .GrAtX ==nil ||_ade .GrAtY ==nil {return _bf .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_ade .GrAtX )!=len (_ade .GrAtY ){return _bf .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_ade ._eed =make ([]bool ,len (_ade .GrAtX ));switch _ade .TemplateID {case 0:if _ade .GrAtX [0]!=-1&&_ade .GrAtY [0]!=-1{_ade ._eed [0]=true ;
_ade ._dd =true ;};if _ade .GrAtX [1]!=-1&&_ade .GrAtY [1]!=-1{_ade ._eed [1]=true ;_ade ._dd =true ;};case 1:_ade ._dd =false ;};return nil ;};var _ SegmentEncoder =&GenericRegion {};func (_abcg *TextRegion )parseHeader ()error {var _fbad error ;_df .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _fbad !=nil {_df .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_fbad );
}else {_df .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _fbad =_abcg .RegionInfo .parseHeader ();
_fbad !=nil {return _fbad ;};if _fbad =_abcg .readRegionFlags ();_fbad !=nil {return _fbad ;};if _abcg .IsHuffmanEncoded {if _fbad =_abcg .readHuffmanFlags ();_fbad !=nil {return _fbad ;};};if _fbad =_abcg .readUseRefinement ();_fbad !=nil {return _fbad ;
};if _fbad =_abcg .readAmountOfSymbolInstances ();_fbad !=nil {return _fbad ;};if _fbad =_abcg .getSymbols ();_fbad !=nil {return _fbad ;};if _fbad =_abcg .computeSymbolCodeLength ();_fbad !=nil {return _fbad ;};if _fbad =_abcg .checkInput ();_fbad !=nil {return _fbad ;
};_df .Log .Trace ("\u0025\u0073",_abcg .String ());return nil ;};func (_cccf *TextRegion )GetRegionInfo ()*RegionSegment {return _cccf .RegionInfo };func (_cdcc *HalftoneRegion )computeX (_fdec ,_gagc int )int {return _cdcc .shiftAndFill (int (_cdcc .HGridX )+_fdec *int (_cdcc .HRegionY )+_gagc *int (_cdcc .HRegionX ));
};func (_cgfd *Header )parse (_bbc Documenter ,_ddef _gg .StreamReader ,_cdaef int64 ,_cfbd OrganizationType )(_ece error ){const _bbcd ="\u0070\u0061\u0072s\u0065";_df .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _ece !=nil {_df .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ece );}else {_df .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
};}();_ ,_ece =_ddef .Seek (_cdaef ,_f .SeekStart );if _ece !=nil {return _ff .Wrap (_ece ,_bbcd ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _ece =_cgfd .readSegmentNumber (_ddef );_ece !=nil {return _ff .Wrap (_ece ,_bbcd ,"");
};if _ece =_cgfd .readHeaderFlags ();_ece !=nil {return _ff .Wrap (_ece ,_bbcd ,"");};var _cgada uint64 ;_cgada ,_ece =_cgfd .readNumberOfReferredToSegments (_ddef );if _ece !=nil {return _ff .Wrap (_ece ,_bbcd ,"");};_cgfd .RTSNumbers ,_ece =_cgfd .readReferredToSegmentNumbers (_ddef ,int (_cgada ));
if _ece !=nil {return _ff .Wrap (_ece ,_bbcd ,"");};_ece =_cgfd .readSegmentPageAssociation (_bbc ,_ddef ,_cgada ,_cgfd .RTSNumbers ...);if _ece !=nil {return _ff .Wrap (_ece ,_bbcd ,"");};if _cgfd .Type !=TEndOfFile {if _ece =_cgfd .readSegmentDataLength (_ddef );
_ece !=nil {return _ff .Wrap (_ece ,_bbcd ,"");};};_cgfd .readDataStartOffset (_ddef ,_cfbd );_cgfd .readHeaderLength (_ddef ,_cdaef );_df .Log .Trace ("\u0025\u0073",_cgfd );return nil ;};type SegmentEncoder interface{Encode (_deafc _gg .BinaryWriter )(_dfgg int ,_bfd error );
};func (_bfag *Header )writeReferredToCount (_ebcd _gg .BinaryWriter )(_cfga int ,_babf error ){const _fgad ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_bfag .RTSNumbers =make ([]int ,len (_bfag .RTSegments ));
for _fbb ,_eaae :=range _bfag .RTSegments {_bfag .RTSNumbers [_fbb ]=int (_eaae .SegmentNumber );};if len (_bfag .RTSNumbers )<=4{var _gdcf byte ;if len (_bfag .RetainBits )>=1{_gdcf =_bfag .RetainBits [0];};_gdcf |=byte (len (_bfag .RTSNumbers ))<<5;if _babf =_ebcd .WriteByte (_gdcf );
_babf !=nil {return 0,_ff .Wrap (_babf ,_fgad ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_fbac :=uint32 (len (_bfag .RTSNumbers ));_efab :=make ([]byte ,4+_bb .Ceil (len (_bfag .RTSNumbers )+1,8));_fbac |=0x7<<29;
_b .BigEndian .PutUint32 (_efab ,_fbac );copy (_efab [1:],_bfag .RetainBits );_cfga ,_babf =_ebcd .Write (_efab );if _babf !=nil {return 0,_ff .Wrap (_babf ,_fgad ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _cfga ,nil ;};
func (_cgad *HalftoneRegion )computeGrayScalePlanes (_eagc []*_cb .Bitmap ,_ebbg int )([][]int ,error ){_gfg :=make ([][]int ,_cgad .HGridHeight );for _abd :=0;_abd < len (_gfg );_abd ++{_gfg [_abd ]=make ([]int ,_cgad .HGridWidth );};for _fgfb :=0;_fgfb < int (_cgad .HGridHeight );
_fgfb ++{for _bgab :=0;_bgab < int (_cgad .HGridWidth );_bgab +=8{var _geae int ;if _acf :=int (_cgad .HGridWidth )-_bgab ;_acf > 8{_geae =8;}else {_geae =_acf ;};_fbfe :=_eagc [0].GetByteIndex (_bgab ,_fgfb );for _eece :=0;_eece < _geae ;_eece ++{_ebc :=_eece +_bgab ;
_gfg [_fgfb ][_ebc ]=0;for _cfgf :=0;_cfgf < _ebbg ;_cfgf ++{_dgce ,_abef :=_eagc [_cfgf ].GetByte (_fbfe );if _abef !=nil {return nil ,_abef ;};_gabf :=_dgce >>uint (7-_ebc &7);_adcg :=_gabf &1;_cgffb :=1<<uint (_cfgf );_gecbg :=int (_adcg )*_cgffb ;_gfg [_fgfb ][_ebc ]+=_gecbg ;
};};};};return _gfg ,nil ;};func (_fcec *TextRegion )readAmountOfSymbolInstances ()error {_eecf ,_bgca :=_fcec ._baf .ReadBits (32);if _bgca !=nil {return _bgca ;};_fcec .NumberOfSymbolInstances =uint32 (_eecf &_c .MaxUint32 );_gcfg :=_fcec .RegionInfo .BitmapWidth *_fcec .RegionInfo .BitmapHeight ;
if _gcfg < _fcec .NumberOfSymbolInstances {_df .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_gcfg ,_fcec .NumberOfSymbolInstances );
_fcec .NumberOfSymbolInstances =_gcfg ;};return nil ;};func (_aca *GenericRegion )InitEncode (bm *_cb .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _bbb ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _ff .Error (_bbb ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _ff .Error (_bbb ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_aca .Bitmap =bm ;_aca .GBTemplate =byte (template );switch _aca .GBTemplate {case 0:_aca .GBAtX =[]int8 {3,-3,2,-2};_aca .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_aca .GBAtX =[]int8 {3};_aca .GBAtY =[]int8 {-1};case 2,3:_aca .GBAtX =[]int8 {2};_aca .GBAtY =[]int8 {-1};
default:return _ff .Errorf (_bbb ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_aca .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_aca .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_dabf *GenericRegion )readGBAtPixels (_ffff int )error {const _fdgb ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";
_dabf .GBAtX =make ([]int8 ,_ffff );_dabf .GBAtY =make ([]int8 ,_ffff );for _dgf :=0;_dgf < _ffff ;_dgf ++{_fceb ,_bdd :=_dabf ._acbc .ReadByte ();if _bdd !=nil {return _ff .Wrapf (_bdd ,_fdgb ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_dgf );
};_dabf .GBAtX [_dgf ]=int8 (_fceb );_fceb ,_bdd =_dabf ._acbc .ReadByte ();if _bdd !=nil {return _ff .Wrapf (_bdd ,_fdgb ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_dgf );};_dabf .GBAtY [_dgf ]=int8 (_fceb );};return nil ;};
func (_fbd *HalftoneRegion )GetPatterns ()([]*_cb .Bitmap ,error ){var (_cfeb []*_cb .Bitmap ;_egd error ;);for _ ,_aee :=range _fbd ._dbdc .RTSegments {var _cafe Segmenter ;_cafe ,_egd =_aee .GetSegmentData ();if _egd !=nil {_df .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_egd );
return nil ,_egd ;};_feccf ,_ccadg :=_cafe .(*PatternDictionary );if !_ccadg {_egd =_g .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_cafe );
return nil ,_egd ;};var _bde []*_cb .Bitmap ;_bde ,_egd =_feccf .GetDictionary ();if _egd !=nil {_df .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_egd );
return nil ,_egd ;};_cfeb =append (_cfeb ,_bde ...);};return _cfeb ,nil ;};func (_fce *GenericRefinementRegion )GetRegionBitmap ()(*_cb .Bitmap ,error ){var _ea error ;_df .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _ea !=nil {_df .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ea );
}else {_df .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _fce .RegionBitmap !=nil {return _fce .RegionBitmap ,nil ;};_ca :=0;if _fce .ReferenceBitmap ==nil {_fce .ReferenceBitmap ,_ea =_fce .getGrReference ();if _ea !=nil {return nil ,_ea ;};};if _fce ._bbe ==nil {_fce ._bbe ,_ea =_a .New (_fce ._fcc );
if _ea !=nil {return nil ,_ea ;};};if _fce ._ge ==nil {_fce ._ge =_a .NewStats (8192,1);};_fce .RegionBitmap =_cb .New (int (_fce .RegionInfo .BitmapWidth ),int (_fce .RegionInfo .BitmapHeight ));if _fce .TemplateID ==0{if _ea =_fce .updateOverride ();
_ea !=nil {return nil ,_ea ;};};_bff :=(_fce .RegionBitmap .Width +7)&-8;var _fcg int ;if _fce .IsTPGROn {_fcg =int (-_fce .ReferenceDY )*_fce .ReferenceBitmap .RowStride ;};_eb :=_fcg +1;for _gdg :=0;_gdg < _fce .RegionBitmap .Height ;_gdg ++{if _fce .IsTPGROn {_dc ,_eeb :=_fce .decodeSLTP ();
if _eeb !=nil {return nil ,_eeb ;};_ca ^=_dc ;};if _ca ==0{_ea =_fce .decodeOptimized (_gdg ,_fce .RegionBitmap .Width ,_fce .RegionBitmap .RowStride ,_fce .ReferenceBitmap .RowStride ,_bff ,_fcg ,_eb );if _ea !=nil {return nil ,_ea ;};}else {_ea =_fce .decodeTypicalPredictedLine (_gdg ,_fce .RegionBitmap .Width ,_fce .RegionBitmap .RowStride ,_fce .ReferenceBitmap .RowStride ,_bff ,_fcg );
if _ea !=nil {return nil ,_ea ;};};};return _fce .RegionBitmap ,nil ;};type EndOfStripe struct{_ce _gg .StreamReader ;_eea int ;};func (_fba *EndOfStripe )Init (h *Header ,r _gg .StreamReader )error {_fba ._ce =r ;return _fba .parseHeader (h ,r );};func (_fecc *GenericRegion )overrideAtTemplate3 (_bcgg ,_gcaa ,_fgg ,_eee ,_ebfe int )int {_bcgg &=0x3EF;
if _fecc .GBAtY [0]==0&&_fecc .GBAtX [0]>=-int8 (_ebfe ){_bcgg |=(_eee >>uint (7-(int8 (_ebfe )+_fecc .GBAtX [0]))&0x1)<<4;}else {_bcgg |=int (_fecc .getPixel (_gcaa +int (_fecc .GBAtX [0]),_fgg +int (_fecc .GBAtY [0])))<<4;};return _bcgg ;};func (_ebba *SymbolDictionary )getSymbol (_afcbd int )(*_cb .Bitmap ,error ){const _cadc ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";
_dabd ,_eege :=_ebba ._dege .GetBitmap (_ebba ._cgb [_afcbd ]);if _eege !=nil {return nil ,_ff .Wrap (_eege ,_cadc ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _dabd ,nil ;};func (_ebea *GenericRegion )decodeTemplate2 (_gbag ,_gddc ,_cff int ,_gcb ,_ccgf int )(_cdaee error ){const _add ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_fdbg ,_edgg int ;_efd ,_cfee int ;_afga byte ;_cec ,_bacg int ;);if _gbag >=1{_afga ,_cdaee =_ebea .Bitmap .GetByte (_ccgf );if _cdaee !=nil {return _ff .Wrap (_cdaee ,_add ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_efd =int (_afga );};if _gbag >=2{_afga ,_cdaee =_ebea .Bitmap .GetByte (_ccgf -_ebea .Bitmap .RowStride );if _cdaee !=nil {return _ff .Wrap (_cdaee ,_add ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_cfee =int (_afga )<<4;
};_fdbg =(_efd >>3&0x7c)|(_cfee >>3&0x380);for _aagdf :=0;_aagdf < _cff ;_aagdf =_cec {var (_deg byte ;_bdc int ;);_cec =_aagdf +8;if _egef :=_gddc -_aagdf ;_egef > 8{_bdc =8;}else {_bdc =_egef ;};if _gbag > 0{_efd <<=8;if _cec < _gddc {_afga ,_cdaee =_ebea .Bitmap .GetByte (_ccgf +1);
if _cdaee !=nil {return _ff .Wrap (_cdaee ,_add ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_efd |=int (_afga );};};if _gbag > 1{_cfee <<=8;if _cec < _gddc {_afga ,_cdaee =_ebea .Bitmap .GetByte (_ccgf -_ebea .Bitmap .RowStride +1);
if _cdaee !=nil {return _ff .Wrap (_cdaee ,_add ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_cfee |=int (_afga )<<4;};};for _fec :=0;_fec < _bdc ;_fec ++{_faa :=uint (10-_fec );if _ebea ._bbf {_edgg =_ebea .overrideAtTemplate2 (_fdbg ,_aagdf +_fec ,_gbag ,int (_deg ),_fec );
_ebea ._bcac .SetIndex (int32 (_edgg ));}else {_ebea ._bcac .SetIndex (int32 (_fdbg ));};_bacg ,_cdaee =_ebea ._afaa .DecodeBit (_ebea ._bcac );if _cdaee !=nil {return _ff .Wrap (_cdaee ,_add ,"");};_deg |=byte (_bacg <<uint (7-_fec ));_fdbg =((_fdbg &0x1bd)<<1)|_bacg |((_efd >>_faa )&0x4)|((_cfee >>_faa )&0x80);
};if _aba :=_ebea .Bitmap .SetByte (_gcb ,_deg );_aba !=nil {return _ff .Wrap (_aba ,_add ,"");};_gcb ++;_ccgf ++;};return nil ;};func (_ccdf *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_fbde ,_dbc :=_ccdf ._acac .ReadBit ();if _dbc !=nil {return _dbc ;
};if _fbde ==1{_ccdf ._bdab =true ;};return nil ;};func (_cfcb *GenericRegion )overrideAtTemplate0a (_cfg ,_ddca ,_bfg ,_cfa ,_ddg ,_bcfg int )int {if _cfcb .GBAtOverride [0]{_cfg &=0xFFEF;if _cfcb .GBAtY [0]==0&&_cfcb .GBAtX [0]>=-int8 (_ddg ){_cfg |=(_cfa >>uint (int8 (_bcfg )-_cfcb .GBAtX [0]&0x1))<<4;
}else {_cfg |=int (_cfcb .getPixel (_ddca +int (_cfcb .GBAtX [0]),_bfg +int (_cfcb .GBAtY [0])))<<4;};};if _cfcb .GBAtOverride [1]{_cfg &=0xFBFF;if _cfcb .GBAtY [1]==0&&_cfcb .GBAtX [1]>=-int8 (_ddg ){_cfg |=(_cfa >>uint (int8 (_bcfg )-_cfcb .GBAtX [1]&0x1))<<10;
}else {_cfg |=int (_cfcb .getPixel (_ddca +int (_cfcb .GBAtX [1]),_bfg +int (_cfcb .GBAtY [1])))<<10;};};if _cfcb .GBAtOverride [2]{_cfg &=0xF7FF;if _cfcb .GBAtY [2]==0&&_cfcb .GBAtX [2]>=-int8 (_ddg ){_cfg |=(_cfa >>uint (int8 (_bcfg )-_cfcb .GBAtX [2]&0x1))<<11;
}else {_cfg |=int (_cfcb .getPixel (_ddca +int (_cfcb .GBAtX [2]),_bfg +int (_cfcb .GBAtY [2])))<<11;};};if _cfcb .GBAtOverride [3]{_cfg &=0x7FFF;if _cfcb .GBAtY [3]==0&&_cfcb .GBAtX [3]>=-int8 (_ddg ){_cfg |=(_cfa >>uint (int8 (_bcfg )-_cfcb .GBAtX [3]&0x1))<<15;
}else {_cfg |=int (_cfcb .getPixel (_ddca +int (_cfcb .GBAtX [3]),_bfg +int (_cfcb .GBAtY [3])))<<15;};};return _cfg ;};func (_dccgc *PageInformationSegment )readIsStriped ()error {_eggc ,_dcdbb :=_dccgc ._acac .ReadBit ();if _dcdbb !=nil {return _dcdbb ;
};if _eggc ==1{_dccgc .IsStripe =true ;};return nil ;};func (_dcee *TableSegment )HtPS ()int32 {return _dcee ._egbe };func (_bcge *Header )Encode (w _gg .BinaryWriter )(_dfce int ,_ceaf error ){const _aea ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";
var _gbca _gg .BinaryWriter ;_df .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _ceaf !=nil {_df .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_ceaf );
}else {_df .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_bcge );_df .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");
};}();w .FinishByte ();if _bcge .SegmentData !=nil {_gbaa ,_bcga :=_bcge .SegmentData .(SegmentEncoder );if !_bcga {return 0,_ff .Errorf (_aea ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_bcge .SegmentData );
};_gbca =_gg .BufferedMSB ();_dfce ,_ceaf =_gbaa .Encode (_gbca );if _ceaf !=nil {return 0,_ff .Wrap (_ceaf ,_aea ,"");};_bcge .SegmentDataLength =uint64 (_dfce );};if _bcge .pageSize ()==4{_bcge .PageAssociationFieldSize =true ;};var _cbf int ;_cbf ,_ceaf =_bcge .writeSegmentNumber (w );
if _ceaf !=nil {return 0,_ff .Wrap (_ceaf ,_aea ,"");};_dfce +=_cbf ;if _ceaf =_bcge .writeFlags (w );_ceaf !=nil {return _dfce ,_ff .Wrap (_ceaf ,_aea ,"");};_dfce ++;_cbf ,_ceaf =_bcge .writeReferredToCount (w );if _ceaf !=nil {return 0,_ff .Wrap (_ceaf ,_aea ,"");
};_dfce +=_cbf ;_cbf ,_ceaf =_bcge .writeReferredToSegments (w );if _ceaf !=nil {return 0,_ff .Wrap (_ceaf ,_aea ,"");};_dfce +=_cbf ;_cbf ,_ceaf =_bcge .writeSegmentPageAssociation (w );if _ceaf !=nil {return 0,_ff .Wrap (_ceaf ,_aea ,"");};_dfce +=_cbf ;
_cbf ,_ceaf =_bcge .writeSegmentDataLength (w );if _ceaf !=nil {return 0,_ff .Wrap (_ceaf ,_aea ,"");};_dfce +=_cbf ;_bcge .HeaderLength =int64 (_dfce )-int64 (_bcge .SegmentDataLength );if _gbca !=nil {if _ ,_ceaf =w .Write (_gbca .Data ());_ceaf !=nil {return _dfce ,_ff .Wrap (_ceaf ,_aea ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _dfce ,nil ;};func (_eag *HalftoneRegion )combineGrayscalePlanes (_afge []*_cb .Bitmap ,_egbc int )error {_aadc :=0;for _cafb :=0;_cafb < _afge [_egbc ].Height ;_cafb ++{for _ecgg :=0;_ecgg < _afge [_egbc ].Width ;_ecgg +=8{_gbab ,_ecab :=_afge [_egbc +1].GetByte (_aadc );
if _ecab !=nil {return _ecab ;};_dccf ,_ecab :=_afge [_egbc ].GetByte (_aadc );if _ecab !=nil {return _ecab ;};_ecab =_afge [_egbc ].SetByte (_aadc ,_cb .CombineBytes (_dccf ,_gbab ,_cb .CmbOpXor ));if _ecab !=nil {return _ecab ;};_aadc ++;};};return nil ;
};func (_ga *GenericRefinementRegion )getGrReference ()(*_cb .Bitmap ,error ){segments :=_ga ._gc .RTSegments ;if len (segments )==0{return nil ,_bf .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_ba ,_gaf :=segments [0].GetSegmentData ();if _gaf !=nil {return nil ,_gaf ;};_bg ,_fde :=_ba .(Regioner );if !_fde {return nil ,_g .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_ba );
};return _bg .GetRegionBitmap ();};func (_ecgf *PatternDictionary )GetDictionary ()([]*_cb .Bitmap ,error ){if _ecgf .Patterns !=nil {return _ecgf .Patterns ,nil ;};if !_ecgf .IsMMREncoded {_ecgf .setGbAtPixels ();};_feaag :=NewGenericRegion (_ecgf ._feccc );
_feaag .setParametersMMR (_ecgf .IsMMREncoded ,_ecgf .DataOffset ,_ecgf .DataLength ,uint32 (_ecgf .HdpHeight ),(_ecgf .GrayMax +1)*uint32 (_ecgf .HdpWidth ),_ecgf .HDTemplate ,false ,false ,_ecgf .GBAtX ,_ecgf .GBAtY );_dac ,_edac :=_feaag .GetRegionBitmap ();
if _edac !=nil {return nil ,_edac ;};if _edac =_ecgf .extractPatterns (_dac );_edac !=nil {return nil ,_edac ;};return _ecgf .Patterns ,nil ;};func (_bead *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _bead .IsHuffmanEncoded {return _bead .decodeHeightClassDeltaHeightWithHuffman ();
};_affc ,_caff :=_bead ._dbafb .DecodeInt (_bead ._gefg );if _caff !=nil {return 0,_caff ;};return int64 (_affc ),nil ;};func (_ggbd *Header )readNumberOfReferredToSegments (_dgdd _gg .StreamReader )(uint64 ,error ){const _beee ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_dcdc ,_ead :=_dgdd .ReadBits (3);if _ead !=nil {return 0,_ff .Wrap (_ead ,_beee ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_dcdc &=0xf;var _gddg []byte ;if _dcdc <=4{_gddg =make ([]byte ,5);for _dcdb :=0;_dcdb <=4;_dcdb ++{_afde ,_ddea :=_dgdd .ReadBit ();
if _ddea !=nil {return 0,_ff .Wrap (_ddea ,_beee ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gddg [_dcdb ]=byte (_afde );};}else {_dcdc ,_ead =_dgdd .ReadBits (29);if _ead !=nil {return 0,_ead ;};_dcdc &=_c .MaxInt32 ;_aaee :=(_dcdc +8)>>3;
_aaee <<=3;_gddg =make ([]byte ,_aaee );var _dfcd uint64 ;for _dfcd =0;_dfcd < _aaee ;_dfcd ++{_degf ,_ebed :=_dgdd .ReadBit ();if _ebed !=nil {return 0,_ff .Wrap (_ebed ,_beee ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gddg [_dfcd ]=byte (_degf );
};};return _dcdc ,nil ;};func NewHeader (d Documenter ,r _gg .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_dceg :=&Header {Reader :r };if _caa :=_dceg .parse (d ,r ,offset ,organizationType );_caa !=nil {return nil ,_ff .Wrap (_caa ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");
};return _dceg ,nil ;};func (_cgaf *PatternDictionary )readTemplate ()error {_ffe ,_bbaa :=_cgaf ._feccc .ReadBits (2);if _bbaa !=nil {return _bbaa ;};_cgaf .HDTemplate =byte (_ffe );return nil ;};func (_febd *TextRegion )decodeDfs ()(int64 ,error ){if _febd .IsHuffmanEncoded {if _febd .SbHuffFS ==3{if _febd ._ecgc ==nil {var _deaae error ;
_febd ._ecgc ,_deaae =_febd .getUserTable (0);if _deaae !=nil {return 0,_deaae ;};};return _febd ._ecgc .Decode (_febd ._baf );};_caagb ,_ebdgf :=_ffd .GetStandardTable (6+int (_febd .SbHuffFS ));if _ebdgf !=nil {return 0,_ebdgf ;};return _caagb .Decode (_febd ._baf );
};_ddeg ,_bgfe :=_febd ._ccgd .DecodeInt (_febd ._dgcd );if _bgfe !=nil {return 0,_bgfe ;};return int64 (_ddeg ),nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;
TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;
TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;
);func (_eg *GenericRefinementRegion )Init (header *Header ,r _gg .StreamReader )error {_eg ._gc =header ;_eg ._fcc =r ;_eg .RegionInfo =NewRegionSegment (r );return _eg .parseHeader ();};func (_bagg *GenericRegion )String ()string {_ecdb :=&_cf .Builder {};
_ecdb .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_ecdb .WriteString (_bagg .RegionSegment .String ()+"\u000a");_ecdb .WriteString (_g .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_bagg .UseExtTemplates ));
_ecdb .WriteString (_g .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_bagg .IsTPGDon ));_ecdb .WriteString (_g .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_bagg .GBTemplate ));
_ecdb .WriteString (_g .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_bagg .IsMMREncoded ));_ecdb .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_bagg .GBAtX ));
_ecdb .WriteString (_g .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_bagg .GBAtY ));_ecdb .WriteString (_g .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_bagg .GBAtOverride ));
return _ecdb .String ();};func (_eecb *SymbolDictionary )setAtPixels ()error {if _eecb .IsHuffmanEncoded {return nil ;};_deef :=1;if _eecb .SdTemplate ==0{_deef =4;};if _bcef :=_eecb .readAtPixels (_deef );_bcef !=nil {return _bcef ;};return nil ;};var (_ Regioner =&TextRegion {};
_ Segmenter =&TextRegion {};);func (_gaff *Header )readSegmentDataLength (_fac _gg .StreamReader )(_bgd error ){_gaff .SegmentDataLength ,_bgd =_fac .ReadBits (32);if _bgd !=nil {return _bgd ;};_gaff .SegmentDataLength &=_c .MaxInt32 ;return nil ;};func (_ccc *SymbolDictionary )checkInput ()error {if _ccc .SdHuffDecodeHeightSelection ==2{_df .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_ccc .SdHuffDecodeHeightSelection );
};if _ccc .SdHuffDecodeWidthSelection ==2{_df .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_ccc .SdHuffDecodeWidthSelection );
};if _ccc .IsHuffmanEncoded {if _ccc .SdTemplate !=0{_df .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_ccc .SdTemplate );};
if !_ccc .UseRefinementAggregation {if !_ccc .UseRefinementAggregation {if _ccc ._fgde {_df .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_ccc ._fgde =false ;};if _ccc ._bdebg {_df .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_ccc ._bdebg =false ;};};};}else {if _ccc .SdHuffBMSizeSelection !=0{_df .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_ccc .SdHuffBMSizeSelection =0;};if _ccc .SdHuffDecodeWidthSelection !=0{_df .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_ccc .SdHuffDecodeWidthSelection =0;};if _ccc .SdHuffDecodeHeightSelection !=0{_df .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_ccc .SdHuffDecodeHeightSelection =0;};};if !_ccc .UseRefinementAggregation {if _ccc .SdrTemplate !=0{_df .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ccc .SdrTemplate );
_ccc .SdrTemplate =0;};};if !_ccc .IsHuffmanEncoded ||!_ccc .UseRefinementAggregation {if _ccc .SdHuffAggInstanceSelection {_df .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ccc .SdHuffAggInstanceSelection );
};};return nil ;};func (_ccec *Header )readDataStartOffset (_cdcb _gg .StreamReader ,_cbbf OrganizationType ){if _cbbf ==OSequential {_ccec .SegmentDataStartOffset =uint64 (_cdcb .StreamPosition ());};};func (_bggd *TextRegion )decodeRI ()(int64 ,error ){if !_bggd .UseRefinement {return 0,nil ;
};if _bggd .IsHuffmanEncoded {_fabba ,_fdbf :=_bggd ._baf .ReadBit ();return int64 (_fabba ),_fdbf ;};_ggeca ,_eeeb :=_bggd ._ccgd .DecodeInt (_bggd ._bgbgc );return int64 (_ggeca ),_eeeb ;};func (_gee *Header )subInputReader ()(_gg .StreamReader ,error ){return _gg .NewSubstreamReader (_gee .Reader ,_gee .SegmentDataStartOffset ,_gee .SegmentDataLength );
};func (_gdde *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _gdde .RegionSegment };func (_dade *TextRegion )Encode (w _gg .BinaryWriter )(_ccge int ,_fcf error ){const _ffga ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";
if _ccge ,_fcf =_dade .RegionInfo .Encode (w );_fcf !=nil {return _ccge ,_ff .Wrap (_fcf ,_ffga ,"");};var _ebbb int ;if _ebbb ,_fcf =_dade .encodeFlags (w );_fcf !=nil {return _ccge ,_ff .Wrap (_fcf ,_ffga ,"");};_ccge +=_ebbb ;if _ebbb ,_fcf =_dade .encodeSymbols (w );
_fcf !=nil {return _ccge ,_ff .Wrap (_fcf ,_ffga ,"");};_ccge +=_ebbb ;return _ccge ,nil ;};func (_ggfge *SymbolDictionary )setInSyms ()error {if _ggfge .Header .RTSegments !=nil {return _ggfge .retrieveImportSymbols ();};_ggfge ._cadf =make ([]*_cb .Bitmap ,0);
return nil ;};func (_aabg *SymbolDictionary )addSymbol (_begag Regioner )error {_gdgf ,_ebee :=_begag .GetRegionBitmap ();if _ebee !=nil {return _ebee ;};_aabg ._bdegd [_aabg ._bgbg ]=_gdgf ;_aabg ._dffa =append (_aabg ._dffa ,_gdgf );_df .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_gdgf );
return nil ;};func (_cadg *TableSegment )parseHeader ()error {var (_cecc int ;_fdbge uint64 ;_dgdac error ;);_cecc ,_dgdac =_cadg ._ecee .ReadBit ();if _dgdac !=nil {return _dgdac ;};if _cecc ==1{return _g .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_cecc );
};if _fdbge ,_dgdac =_cadg ._ecee .ReadBits (3);_dgdac !=nil {return _dgdac ;};_cadg ._bcdg =(int32 (_fdbge )+1)&0xf;if _fdbge ,_dgdac =_cadg ._ecee .ReadBits (3);_dgdac !=nil {return _dgdac ;};_cadg ._egbe =(int32 (_fdbge )+1)&0xf;if _fdbge ,_dgdac =_cadg ._ecee .ReadBits (32);
_dgdac !=nil {return _dgdac ;};_cadg ._gbdd =int32 (_fdbge &_c .MaxInt32 );if _fdbge ,_dgdac =_cadg ._ecee .ReadBits (32);_dgdac !=nil {return _dgdac ;};_cadg ._fbbc =int32 (_fdbge &_c .MaxInt32 );return nil ;};func (_ccaa *SymbolDictionary )Init (h *Header ,r _gg .StreamReader )error {_ccaa .Header =h ;
_ccaa ._effd =r ;return _ccaa .parseHeader ();};func (_dcae *TextRegion )readHuffmanFlags ()error {var (_efff int ;_fafff uint64 ;_agbe error ;);_ ,_agbe =_dcae ._baf .ReadBit ();if _agbe !=nil {return _agbe ;};_efff ,_agbe =_dcae ._baf .ReadBit ();if _agbe !=nil {return _agbe ;
};_dcae .SbHuffRSize =int8 (_efff );_fafff ,_agbe =_dcae ._baf .ReadBits (2);if _agbe !=nil {return _agbe ;};_dcae .SbHuffRDY =int8 (_fafff )&0xf;_fafff ,_agbe =_dcae ._baf .ReadBits (2);if _agbe !=nil {return _agbe ;};_dcae .SbHuffRDX =int8 (_fafff )&0xf;
_fafff ,_agbe =_dcae ._baf .ReadBits (2);if _agbe !=nil {return _agbe ;};_dcae .SbHuffRDHeight =int8 (_fafff )&0xf;_fafff ,_agbe =_dcae ._baf .ReadBits (2);if _agbe !=nil {return _agbe ;};_dcae .SbHuffRDWidth =int8 (_fafff )&0xf;_fafff ,_agbe =_dcae ._baf .ReadBits (2);
if _agbe !=nil {return _agbe ;};_dcae .SbHuffDT =int8 (_fafff )&0xf;_fafff ,_agbe =_dcae ._baf .ReadBits (2);if _agbe !=nil {return _agbe ;};_dcae .SbHuffDS =int8 (_fafff )&0xf;_fafff ,_agbe =_dcae ._baf .ReadBits (2);if _agbe !=nil {return _agbe ;};_dcae .SbHuffFS =int8 (_fafff )&0xf;
return nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_dgae *TextRegion )decodeIds ()(int64 ,error ){const _fgcg ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _dgae .IsHuffmanEncoded {if _dgae .SbHuffDS ==3{if _dgae ._acde ==nil {_bbbd :=0;
if _dgae .SbHuffFS ==3{_bbbd ++;};var _ebg error ;_dgae ._acde ,_ebg =_dgae .getUserTable (_bbbd );if _ebg !=nil {return 0,_ff .Wrap (_ebg ,_fgcg ,"");};};return _dgae ._acde .Decode (_dgae ._baf );};_bcagg ,_ccgda :=_ffd .GetStandardTable (8+int (_dgae .SbHuffDS ));
if _ccgda !=nil {return 0,_ff .Wrap (_ccgda ,_fgcg ,"");};return _bcagg .Decode (_dgae ._baf );};_eeef ,_cccc :=_dgae ._ccgd .DecodeInt (_dgae ._eccab );if _cccc !=nil {return 0,_ff .Wrap (_cccc ,_fgcg ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_eeef ),nil ;
};func (_aec *template0 )form (_agg ,_abc ,_beg ,_fcga ,_ege int16 )int16 {return (_agg <<10)|(_abc <<7)|(_beg <<4)|(_fcga <<1)|_ege ;};func (_fedd *TextRegion )decodeSymbolInstances ()error {_caec ,_accg :=_fedd .decodeStripT ();if _accg !=nil {return _accg ;
};var (_gfdf int64 ;_bbgf uint32 ;);for _bbgf < _fedd .NumberOfSymbolInstances {_ffbb ,_ebbd :=_fedd .decodeDT ();if _ebbd !=nil {return _ebbd ;};_caec +=_ffbb ;var _gbac int64 ;_fega :=true ;_fedd ._dgeb =0;for {if _fega {_gbac ,_ebbd =_fedd .decodeDfs ();
if _ebbd !=nil {return _ebbd ;};_gfdf +=_gbac ;_fedd ._dgeb =_gfdf ;_fega =false ;}else {_cgfe ,_edbd :=_fedd .decodeIds ();if _fb .Is (_edbd ,_fd .ErrOOB ){break ;};if _edbd !=nil {return _edbd ;};if _bbgf >=_fedd .NumberOfSymbolInstances {break ;};_fedd ._dgeb +=_cgfe +int64 (_fedd .SbDsOffset );
};_dbcd ,_fbcd :=_fedd .decodeCurrentT ();if _fbcd !=nil {return _fbcd ;};_agfb :=_caec +_dbcd ;_cbgf ,_fbcd :=_fedd .decodeID ();if _fbcd !=nil {return _fbcd ;};_fbbb ,_fbcd :=_fedd .decodeRI ();if _fbcd !=nil {return _fbcd ;};_eefc ,_fbcd :=_fedd .decodeIb (_fbbb ,_cbgf );
if _fbcd !=nil {return _fbcd ;};if _fbcd =_fedd .blit (_eefc ,_agfb );_fbcd !=nil {return _fbcd ;};_bbgf ++;};};return nil ;};func (_effe *Header )writeSegmentPageAssociation (_beag _gg .BinaryWriter )(_ged int ,_egeac error ){const _gcg ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _effe .pageSize ()!=4{if _egeac =_beag .WriteByte (byte (_effe .PageAssociation ));_egeac !=nil {return 0,_ff .Wrap (_egeac ,_gcg ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_fdcc :=make ([]byte ,4);
_b .BigEndian .PutUint32 (_fdcc ,uint32 (_effe .PageAssociation ));if _ged ,_egeac =_beag .Write (_fdcc );_egeac !=nil {return 0,_ff .Wrap (_egeac ,_gcg ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _ged ,nil ;
};func (_adf *GenericRegion )writeGBAtPixels (_dbbc _gg .BinaryWriter )(_fcgb int ,_gdga error ){const _dbgff ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _adf .UseMMR {return 0,nil ;};_beef :=1;if _adf .GBTemplate ==0{_beef =4;
}else if _adf .UseExtTemplates {_beef =12;};if len (_adf .GBAtX )!=_beef {return 0,_ff .Errorf (_dbgff ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_adf .GBAtY )!=_beef {return 0,_ff .Errorf (_dbgff ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _egf :=0;_egf < _beef ;_egf ++{if _gdga =_dbbc .WriteByte (byte (_adf .GBAtX [_egf ]));_gdga !=nil {return _fcgb ,_ff .Wrap (_gdga ,_dbgff ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_fcgb ++;if _gdga =_dbbc .WriteByte (byte (_adf .GBAtY [_egf ]));
_gdga !=nil {return _fcgb ,_ff .Wrap (_gdga ,_dbgff ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_fcgb ++;};return _fcgb ,nil ;};func (_fgbc *RegionSegment )parseHeader ()error {const _eeea ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";
_df .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_df .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_cfefd ,_gdda :=_fgbc ._cega .ReadBits (32);if _gdda !=nil {return _ff .Wrap (_gdda ,_eeea ,"\u0077\u0069\u0064t\u0068");};_fgbc .BitmapWidth =uint32 (_cfefd &_c .MaxUint32 );_cfefd ,_gdda =_fgbc ._cega .ReadBits (32);if _gdda !=nil {return _ff .Wrap (_gdda ,_eeea ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_fgbc .BitmapHeight =uint32 (_cfefd &_c .MaxUint32 );_cfefd ,_gdda =_fgbc ._cega .ReadBits (32);if _gdda !=nil {return _ff .Wrap (_gdda ,_eeea ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_fgbc .XLocation =uint32 (_cfefd &_c .MaxUint32 );
_cfefd ,_gdda =_fgbc ._cega .ReadBits (32);if _gdda !=nil {return _ff .Wrap (_gdda ,_eeea ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_fgbc .YLocation =uint32 (_cfefd &_c .MaxUint32 );if _ ,_gdda =_fgbc ._cega .ReadBits (5);_gdda !=nil {return _ff .Wrap (_gdda ,_eeea ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _gdda =_fgbc .readCombinationOperator ();_gdda !=nil {return _ff .Wrap (_gdda ,_eeea ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_fccd *PatternDictionary )computeSegmentDataStructure ()error {_fccd .DataOffset =_fccd ._feccc .StreamPosition ();
_fccd .DataHeaderLength =_fccd .DataOffset -_fccd .DataHeaderOffset ;_fccd .DataLength =int64 (_fccd ._feccc .Length ())-_fccd .DataHeaderLength ;return nil ;};func (_afagd *SymbolDictionary )setSymbolsArray ()error {if _afagd ._cadf ==nil {if _eceg :=_afagd .retrieveImportSymbols ();
_eceg !=nil {return _eceg ;};};if _afagd ._dffa ==nil {_afagd ._dffa =append (_afagd ._dffa ,_afagd ._cadf ...);};return nil ;};func (_ega *TextRegion )decodeStripT ()(_gfaba int64 ,_cfce error ){if _ega .IsHuffmanEncoded {if _ega .SbHuffDT ==3{if _ega ._edfcf ==nil {var _fecbe int ;
if _ega .SbHuffFS ==3{_fecbe ++;};if _ega .SbHuffDS ==3{_fecbe ++;};_ega ._edfcf ,_cfce =_ega .getUserTable (_fecbe );if _cfce !=nil {return 0,_cfce ;};};_gfaba ,_cfce =_ega ._edfcf .Decode (_ega ._baf );if _cfce !=nil {return 0,_cfce ;};}else {var _cbbfe _ffd .Tabler ;
_cbbfe ,_cfce =_ffd .GetStandardTable (11+int (_ega .SbHuffDT ));if _cfce !=nil {return 0,_cfce ;};_gfaba ,_cfce =_cbbfe .Decode (_ega ._baf );if _cfce !=nil {return 0,_cfce ;};};}else {var _dceb int32 ;_dceb ,_cfce =_ega ._ccgd .DecodeInt (_ega ._fbcf );
if _cfce !=nil {return 0,_cfce ;};_gfaba =int64 (_dceb );};_gfaba *=int64 (-_ega .SbStrips );return _gfaba ,nil ;};func (_gadf *TextRegion )encodeSymbols (_fbed _gg .BinaryWriter )(_fdea int ,_cddf error ){const _ccfe ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_ggbe :=make ([]byte ,4);_b .BigEndian .PutUint32 (_ggbe ,_gadf .NumberOfSymbols );if _fdea ,_cddf =_fbed .Write (_ggbe );_cddf !=nil {return _fdea ,_ff .Wrap (_cddf ,_ccfe ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_abee ,_cddf :=_cb .NewClassedPoints (_gadf ._dgddb ,_gadf ._ggec );if _cddf !=nil {return 0,_ff .Wrap (_cddf ,_ccfe ,"");};var _ccgg ,_cffb int ;_ccce :=_ee .New ();_ccce .Init ();if _cddf =_ccce .EncodeInteger (_ee .IADT ,0);_cddf !=nil {return _fdea ,_ff .Wrap (_cddf ,_ccfe ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_bccgg ,_cddf :=_abee .GroupByY ();if _cddf !=nil {return 0,_ff .Wrap (_cddf ,_ccfe ,"");};for _ ,_bbdb :=range _bccgg {_fbaaea :=int (_bbdb .YAtIndex (0));_agda :=_fbaaea -_ccgg ;if _cddf =_ccce .EncodeInteger (_ee .IADT ,_agda );_cddf !=nil {return _fdea ,_ff .Wrap (_cddf ,_ccfe ,"");
};var _ebgg int ;for _cbdg ,_geaa :=range _bbdb .IntSlice {switch _cbdg {case 0:_beda :=int (_bbdb .XAtIndex (_cbdg ))-_cffb ;if _cddf =_ccce .EncodeInteger (_ee .IAFS ,_beda );_cddf !=nil {return _fdea ,_ff .Wrap (_cddf ,_ccfe ,"");};_cffb +=_beda ;_ebgg =_cffb ;
default:_acebc :=int (_bbdb .XAtIndex (_cbdg ))-_ebgg ;if _cddf =_ccce .EncodeInteger (_ee .IADS ,_acebc );_cddf !=nil {return _fdea ,_ff .Wrap (_cddf ,_ccfe ,"");};_ebgg +=_acebc ;};_abfbc ,_agfea :=_gadf ._gbef .Get (_geaa );if _agfea !=nil {return _fdea ,_ff .Wrap (_agfea ,_ccfe ,"");
};_ageg ,_daebf :=_gadf ._geefe [_abfbc ];if !_daebf {_ageg ,_daebf =_gadf ._ddefd [_abfbc ];if !_daebf {return _fdea ,_ff .Errorf (_ccfe ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_abfbc );
};};if _agfea =_ccce .EncodeIAID (_gadf ._fgdg ,_ageg );_agfea !=nil {return _fdea ,_ff .Wrap (_agfea ,_ccfe ,"");};};if _cddf =_ccce .EncodeOOB (_ee .IADS );_cddf !=nil {return _fdea ,_ff .Wrap (_cddf ,_ccfe ,"");};};_ccce .Final ();_gadff ,_cddf :=_ccce .WriteTo (_fbed );
if _cddf !=nil {return _fdea ,_ff .Wrap (_cddf ,_ccfe ,"");};_fdea +=int (_gadff );return _fdea ,nil ;};func (_bdce *TableSegment )Init (h *Header ,r _gg .StreamReader )error {_bdce ._ecee =r ;return _bdce .parseHeader ();};func (_cddb *SymbolDictionary )setRetainedCodingContexts (_fcgd *SymbolDictionary ){_cddb ._dbafb =_fcgd ._dbafb ;
_cddb .IsHuffmanEncoded =_fcgd .IsHuffmanEncoded ;_cddb .UseRefinementAggregation =_fcgd .UseRefinementAggregation ;_cddb .SdTemplate =_fcgd .SdTemplate ;_cddb .SdrTemplate =_fcgd .SdrTemplate ;_cddb .SdATX =_fcgd .SdATX ;_cddb .SdATY =_fcgd .SdATY ;_cddb .SdrATX =_fcgd .SdrATX ;
_cddb .SdrATY =_fcgd .SdrATY ;_cddb ._dfdd =_fcgd ._dfdd ;};func (_bbfd *PatternDictionary )readGrayMax ()error {_bccc ,_aafg :=_bbfd ._feccc .ReadBits (32);if _aafg !=nil {return _aafg ;};_bbfd .GrayMax =uint32 (_bccc &_c .MaxUint32 );return nil ;};func (_gd *EndOfStripe )LineNumber ()int {return _gd ._eea };
func (_fg *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_daf ,_bcf ,_bge ,_ded ,_dcbdb ,_dda ,_fad ,_fgd ,_cfdb int )(_cgg error ){var (_ddce ,_fbce int ;_dg ,_dgd int ;_gcd ,_af int ;_fcgg byte ;);if _daf > 0{_fcgg ,_cgg =_fg .RegionBitmap .GetByte (_fad -_bge );
if _cgg !=nil {return ;};_dg =int (_fcgg );};if _fgd > 0&&_fgd <=_fg .ReferenceBitmap .Height {_fcgg ,_cgg =_fg .ReferenceBitmap .GetByte (_cfdb -_ded +_dda );if _cgg !=nil {return ;};_dgd =int (_fcgg )<<2;};if _fgd >=0&&_fgd < _fg .ReferenceBitmap .Height {_fcgg ,_cgg =_fg .ReferenceBitmap .GetByte (_cfdb +_dda );
if _cgg !=nil {return ;};_gcd =int (_fcgg );};if _fgd > -2&&_fgd < _fg .ReferenceBitmap .Height -1{_fcgg ,_cgg =_fg .ReferenceBitmap .GetByte (_cfdb +_ded +_dda );if _cgg !=nil {return ;};_af =int (_fcgg );};_ddce =((_dg >>5)&0x6)|((_af >>2)&0x30)|(_gcd &0xc0)|(_dgd &0x200);
_fbce =((_af >>2)&0x70)|(_gcd &0xc0)|(_dgd &0x700);var _bgg int ;for _fea :=0;_fea < _dcbdb ;_fea =_bgg {var (_afb int ;_cfb int ;);_bgg =_fea +8;if _afb =_bcf -_fea ;_afb > 8{_afb =8;};_cca :=_bgg < _bcf ;_dfc :=_bgg < _fg .ReferenceBitmap .Width ;_ef :=_dda +1;
if _daf > 0{_fcgg =0;if _cca {_fcgg ,_cgg =_fg .RegionBitmap .GetByte (_fad -_bge +1);if _cgg !=nil {return ;};};_dg =(_dg <<8)|int (_fcgg );};if _fgd > 0&&_fgd <=_fg .ReferenceBitmap .Height {var _bda int ;if _dfc {_fcgg ,_cgg =_fg .ReferenceBitmap .GetByte (_cfdb -_ded +_ef );
if _cgg !=nil {return ;};_bda =int (_fcgg )<<2;};_dgd =(_dgd <<8)|_bda ;};if _fgd >=0&&_fgd < _fg .ReferenceBitmap .Height {_fcgg =0;if _dfc {_fcgg ,_cgg =_fg .ReferenceBitmap .GetByte (_cfdb +_ef );if _cgg !=nil {return ;};};_gcd =(_gcd <<8)|int (_fcgg );
};if _fgd > -2&&_fgd < (_fg .ReferenceBitmap .Height -1){_fcgg =0;if _dfc {_fcgg ,_cgg =_fg .ReferenceBitmap .GetByte (_cfdb +_ded +_ef );if _cgg !=nil {return ;};};_af =(_af <<8)|int (_fcgg );};for _afbe :=0;_afbe < _afb ;_afbe ++{var _fca int ;_bgc :=(_fbce >>4)&0x1ff;
switch _bgc {case 0x1ff:_fca =1;case 0x00:_fca =0;default:_fg ._ge .SetIndex (int32 (_ddce ));_fca ,_cgg =_fg ._bbe .DecodeBit (_fg ._ge );if _cgg !=nil {return ;};};_dae :=uint (7-_afbe );_cfb |=_fca <<_dae ;_ddce =((_ddce &0x0d6)<<1)|_fca |(_dg >>_dae +5)&0x002|((_af >>_dae +2)&0x010)|((_gcd >>_dae )&0x040)|((_dgd >>_dae )&0x200);
_fbce =((_fbce &0xdb)<<1)|((_af >>_dae +2)&0x010)|((_gcd >>_dae )&0x080)|((_dgd >>_dae )&0x400);};_cgg =_fg .RegionBitmap .SetByte (_fad ,byte (_cfb ));if _cgg !=nil {return ;};_fad ++;_cfdb ++;};return nil ;};func (_cbgaa *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_cb .Points ,symbols *_cb .Bitmaps ,classIDs *_bb .IntSlice ,boxes *_cb .Boxes ,width ,height ,symBits int ){_cbgaa .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_cbgaa ._geefe =globalSymbolsMap ;_cbgaa ._ddefd =localSymbolsMap ;_cbgaa ._ggec =comps ;_cbgaa ._dgddb =inLL ;_cbgaa ._afbed =symbols ;_cbgaa ._gbef =classIDs ;_cbgaa ._cefa =boxes ;_cbgaa ._fgdg =symBits ;};func (_fgff *TextRegion )computeSymbolCodeLength ()error {if _fgff .IsHuffmanEncoded {return _fgff .symbolIDCodeLengths ();
};_fgff ._adcgf =int8 (_c .Ceil (_c .Log (float64 (_fgff .NumberOfSymbols ))/_c .Log (2)));return nil ;};func (_baeb *SymbolDictionary )setExportedSymbols (_egefe []int ){for _edbc :=uint32 (0);_edbc < _baeb ._ecbe +_baeb .NumberOfNewSymbols ;_edbc ++{if _egefe [_edbc ]==1{var _bccg *_cb .Bitmap ;
if _edbc < _baeb ._ecbe {_bccg =_baeb ._cadf [_edbc ];}else {_bccg =_baeb ._bdegd [_edbc -_baeb ._ecbe ];};_df .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_bccg );
_baeb ._ddde =append (_baeb ._ddde ,_bccg );};};};func (_caag *SymbolDictionary )getUserTable (_egeg int )(_ffd .Tabler ,error ){var _gaaf int ;for _ ,_bcabg :=range _caag .Header .RTSegments {if _bcabg .Type ==53{if _gaaf ==_egeg {_fggf ,_fgbcd :=_bcabg .GetSegmentData ();
if _fgbcd !=nil {return nil ,_fgbcd ;};_eaed :=_fggf .(_ffd .BasicTabler );return _ffd .NewEncodedTable (_eaed );};_gaaf ++;};};return nil ,nil ;};func (_bga *GenericRefinementRegion )parseHeader ()(_dfbg error ){_df .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_cea :=_e .Now ();defer func (){if _dfbg ==nil {_df .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_e .Since (_cea ).Nanoseconds ());
}else {_df .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_dfbg );
};}();if _dfbg =_bga .RegionInfo .parseHeader ();_dfbg !=nil {return _dfbg ;};_ ,_dfbg =_bga ._fcc .ReadBits (6);if _dfbg !=nil {return _dfbg ;};_bga .IsTPGROn ,_dfbg =_bga ._fcc .ReadBool ();if _dfbg !=nil {return _dfbg ;};var _gb int ;_gb ,_dfbg =_bga ._fcc .ReadBit ();
if _dfbg !=nil {return _dfbg ;};_bga .TemplateID =int8 (_gb );switch _bga .TemplateID {case 0:_bga .Template =_bga ._ggf ;if _dfbg =_bga .readAtPixels ();_dfbg !=nil {return ;};case 1:_bga .Template =_bga ._gf ;};return nil ;};func (_cce *GenericRegion )decodeTemplate1 (_bcec ,_dgc ,_dfbc int ,_egea ,_gae int )(_eec error ){const _dbbf ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_fedeg ,_ccdc int ;_agec ,_fccb int ;_ebeg byte ;_dbge ,_afbc int ;);if _bcec >=1{_ebeg ,_eec =_cce .Bitmap .GetByte (_gae );if _eec !=nil {return _ff .Wrap (_eec ,_dbbf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_agec =int (_ebeg );};if _bcec >=2{_ebeg ,_eec =_cce .Bitmap .GetByte (_gae -_cce .Bitmap .RowStride );
if _eec !=nil {return _ff .Wrap (_eec ,_dbbf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_fccb =int (_ebeg )<<5;};_fedeg =((_agec >>1)&0x1f8)|((_fccb >>1)&0x1e00);for _dbgf :=0;_dbgf < _dfbc ;_dbgf =_dbge {var (_afae byte ;_bbef int ;);_dbge =_dbgf +8;
if _feg :=_dgc -_dbgf ;_feg > 8{_bbef =8;}else {_bbef =_feg ;};if _bcec > 0{_agec <<=8;if _dbge < _dgc {_ebeg ,_eec =_cce .Bitmap .GetByte (_gae +1);if _eec !=nil {return _ff .Wrap (_eec ,_dbbf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_agec |=int (_ebeg );
};};if _bcec > 1{_fccb <<=8;if _dbge < _dgc {_ebeg ,_eec =_cce .Bitmap .GetByte (_gae -_cce .Bitmap .RowStride +1);if _eec !=nil {return _ff .Wrap (_eec ,_dbbf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_fccb |=int (_ebeg )<<5;};};for _fda :=0;
_fda < _bbef ;_fda ++{if _cce ._bbf {_ccdc =_cce .overrideAtTemplate1 (_fedeg ,_dbgf +_fda ,_bcec ,int (_afae ),_fda );_cce ._bcac .SetIndex (int32 (_ccdc ));}else {_cce ._bcac .SetIndex (int32 (_fedeg ));};_afbc ,_eec =_cce ._afaa .DecodeBit (_cce ._bcac );
if _eec !=nil {return _ff .Wrap (_eec ,_dbbf ,"");};_afae |=byte (_afbc )<<uint (7-_fda );_gddb :=uint (8-_fda );_fedeg =((_fedeg &0xefb)<<1)|_afbc |((_agec >>_gddb )&0x8)|((_fccb >>_gddb )&0x200);};if _bbgg :=_cce .Bitmap .SetByte (_egea ,_afae );_bbgg !=nil {return _ff .Wrap (_bbgg ,_dbbf ,"");
};_egea ++;_gae ++;};return nil ;};func (_fbgb *PageInformationSegment )Encode (w _gg .BinaryWriter )(_dega int ,_dbee error ){const _cfaa ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_dgff :=make ([]byte ,4);_b .BigEndian .PutUint32 (_dgff ,uint32 (_fbgb .PageBMWidth ));_dega ,_dbee =w .Write (_dgff );if _dbee !=nil {return _dega ,_ff .Wrap (_dbee ,_cfaa ,"\u0077\u0069\u0064t\u0068");};_b .BigEndian .PutUint32 (_dgff ,uint32 (_fbgb .PageBMHeight ));
var _fabb int ;_fabb ,_dbee =w .Write (_dgff );if _dbee !=nil {return _fabb +_dega ,_ff .Wrap (_dbee ,_cfaa ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_dega +=_fabb ;_b .BigEndian .PutUint32 (_dgff ,uint32 (_fbgb .ResolutionX ));_fabb ,_dbee =w .Write (_dgff );
if _dbee !=nil {return _fabb +_dega ,_ff .Wrap (_dbee ,_cfaa ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_dega +=_fabb ;_b .BigEndian .PutUint32 (_dgff ,uint32 (_fbgb .ResolutionY ));if _fabb ,_dbee =w .Write (_dgff );_dbee !=nil {return _fabb +_dega ,_ff .Wrap (_dbee ,_cfaa ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_dega +=_fabb ;if _dbee =_fbgb .encodeFlags (w );_dbee !=nil {return _dega ,_ff .Wrap (_dbee ,_cfaa ,"");};_dega ++;if _fabb ,_dbee =_fbgb .encodeStripingInformation (w );_dbee !=nil {return _dega ,_ff .Wrap (_dbee ,_cfaa ,"");};_dega +=_fabb ;return _dega ,nil ;
};func (_eggb *TableSegment )HtOOB ()int32 {return _eggb ._fbge };func (_bcaf *TextRegion )createRegionBitmap ()error {_bcaf .RegionBitmap =_cb .New (int (_bcaf .RegionInfo .BitmapWidth ),int (_bcaf .RegionInfo .BitmapHeight ));if _bcaf .DefaultPixel !=0{_bcaf .RegionBitmap .SetDefaultPixel ();
};return nil ;};func (_addd *HalftoneRegion )shiftAndFill (_acbg int )int {_acbg >>=8;if _acbg < 0{_fcee :=int (_c .Log (float64 (_dabfd (_acbg )))/_c .Log (2));_bdeb :=31-_fcee ;for _fbg :=1;_fbg < _bdeb ;_fbg ++{_acbg |=1<<uint (31-_fbg );};};return _acbg ;
};func (_cc *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _cc .RegionInfo };func (_cgec *TextRegion )decodeIb (_eeeaf ,_gecba int64 )(*_cb .Bitmap ,error ){const _bccd ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_ggea error ;
_ecdf *_cb .Bitmap ;);if _eeeaf ==0{if int (_gecba )> len (_cgec .Symbols )-1{return nil ,_ff .Error (_bccd ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _cgec .Symbols [int (_gecba )],nil ;};var _dfgf ,_bbda ,_dfec ,_fbbbc int64 ;_dfgf ,_ggea =_cgec .decodeRdw ();if _ggea !=nil {return nil ,_ff .Wrap (_ggea ,_bccd ,"");};_bbda ,_ggea =_cgec .decodeRdh ();if _ggea !=nil {return nil ,_ff .Wrap (_ggea ,_bccd ,"");
};_dfec ,_ggea =_cgec .decodeRdx ();if _ggea !=nil {return nil ,_ff .Wrap (_ggea ,_bccd ,"");};_fbbbc ,_ggea =_cgec .decodeRdy ();if _ggea !=nil {return nil ,_ff .Wrap (_ggea ,_bccd ,"");};if _cgec .IsHuffmanEncoded {if _ ,_ggea =_cgec .decodeSymInRefSize ();
_ggea !=nil {return nil ,_ff .Wrap (_ggea ,_bccd ,"");};_cgec ._baf .Align ();};_afbg :=_cgec .Symbols [_gecba ];_aegd :=uint32 (_afbg .Width );_bdbd :=uint32 (_afbg .Height );_cfae :=int32 (uint32 (_dfgf )>>1)+int32 (_dfec );_agae :=int32 (uint32 (_bbda )>>1)+int32 (_fbbbc );
if _cgec ._cead ==nil {_cgec ._cead =_eaa (_cgec ._baf ,nil );};_cgec ._cead .setParameters (_cgec ._bbab ,_cgec ._ccgd ,_cgec .SbrTemplate ,_aegd +uint32 (_dfgf ),_bdbd +uint32 (_bbda ),_afbg ,_cfae ,_agae ,false ,_cgec .SbrATX ,_cgec .SbrATY );_ecdf ,_ggea =_cgec ._cead .GetRegionBitmap ();
if _ggea !=nil {return nil ,_ff .Wrap (_ggea ,_bccd ,"\u0067\u0072\u0066");};if _cgec .IsHuffmanEncoded {_cgec ._baf .Align ();};return _ecdf ,nil ;};func (_gbde *Header )writeSegmentNumber (_agea _gg .BinaryWriter )(_dgfb int ,_cggf error ){_acef :=make ([]byte ,4);
_b .BigEndian .PutUint32 (_acef ,_gbde .SegmentNumber );if _dgfb ,_cggf =_agea .Write (_acef );_cggf !=nil {return 0,_ff .Wrap (_cggf ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _dgfb ,nil ;};func (_feb *SymbolDictionary )readRegionFlags ()error {var (_deea uint64 ;_abfcb int ;);_ ,_gfgeb :=_feb ._effd .ReadBits (3);if _gfgeb !=nil {return _gfgeb ;};_abfcb ,_gfgeb =_feb ._effd .ReadBit ();if _gfgeb !=nil {return _gfgeb ;
};_feb .SdrTemplate =int8 (_abfcb );_deea ,_gfgeb =_feb ._effd .ReadBits (2);if _gfgeb !=nil {return _gfgeb ;};_feb .SdTemplate =int8 (_deea &0xf);_abfcb ,_gfgeb =_feb ._effd .ReadBit ();if _gfgeb !=nil {return _gfgeb ;};if _abfcb ==1{_feb ._fgde =true ;
};_abfcb ,_gfgeb =_feb ._effd .ReadBit ();if _gfgeb !=nil {return _gfgeb ;};if _abfcb ==1{_feb ._bdebg =true ;};_abfcb ,_gfgeb =_feb ._effd .ReadBit ();if _gfgeb !=nil {return _gfgeb ;};if _abfcb ==1{_feb .SdHuffAggInstanceSelection =true ;};_abfcb ,_gfgeb =_feb ._effd .ReadBit ();
if _gfgeb !=nil {return _gfgeb ;};_feb .SdHuffBMSizeSelection =int8 (_abfcb );_deea ,_gfgeb =_feb ._effd .ReadBits (2);if _gfgeb !=nil {return _gfgeb ;};_feb .SdHuffDecodeWidthSelection =int8 (_deea &0xf);_deea ,_gfgeb =_feb ._effd .ReadBits (2);if _gfgeb !=nil {return _gfgeb ;
};_feb .SdHuffDecodeHeightSelection =int8 (_deea &0xf);_abfcb ,_gfgeb =_feb ._effd .ReadBit ();if _gfgeb !=nil {return _gfgeb ;};if _abfcb ==1{_feb .UseRefinementAggregation =true ;};_abfcb ,_gfgeb =_feb ._effd .ReadBit ();if _gfgeb !=nil {return _gfgeb ;
};if _abfcb ==1{_feb .IsHuffmanEncoded =true ;};return nil ;};func (_cacd *HalftoneRegion )parseHeader ()error {if _faga :=_cacd .RegionSegment .parseHeader ();_faga !=nil {return _faga ;};_efc ,_caca :=_cacd ._eaff .ReadBit ();if _caca !=nil {return _caca ;
};_cacd .HDefaultPixel =int8 (_efc );_dadc ,_caca :=_cacd ._eaff .ReadBits (3);if _caca !=nil {return _caca ;};_cacd .CombinationOperator =_cb .CombinationOperator (_dadc &0xf);_efc ,_caca =_cacd ._eaff .ReadBit ();if _caca !=nil {return _caca ;};if _efc ==1{_cacd .HSkipEnabled =true ;
};_dadc ,_caca =_cacd ._eaff .ReadBits (2);if _caca !=nil {return _caca ;};_cacd .HTemplate =byte (_dadc &0xf);_efc ,_caca =_cacd ._eaff .ReadBit ();if _caca !=nil {return _caca ;};if _efc ==1{_cacd .IsMMREncoded =true ;};_dadc ,_caca =_cacd ._eaff .ReadBits (32);
if _caca !=nil {return _caca ;};_cacd .HGridWidth =uint32 (_dadc &_c .MaxUint32 );_dadc ,_caca =_cacd ._eaff .ReadBits (32);if _caca !=nil {return _caca ;};_cacd .HGridHeight =uint32 (_dadc &_c .MaxUint32 );_dadc ,_caca =_cacd ._eaff .ReadBits (32);if _caca !=nil {return _caca ;
};_cacd .HGridX =int32 (_dadc &_c .MaxInt32 );_dadc ,_caca =_cacd ._eaff .ReadBits (32);if _caca !=nil {return _caca ;};_cacd .HGridY =int32 (_dadc &_c .MaxInt32 );_dadc ,_caca =_cacd ._eaff .ReadBits (16);if _caca !=nil {return _caca ;};_cacd .HRegionX =uint16 (_dadc &_c .MaxUint16 );
_dadc ,_caca =_cacd ._eaff .ReadBits (16);if _caca !=nil {return _caca ;};_cacd .HRegionY =uint16 (_dadc &_c .MaxUint16 );if _caca =_cacd .computeSegmentDataStructure ();_caca !=nil {return _caca ;};return _cacd .checkInput ();};func _ffgec (_cfaeg _gg .StreamReader ,_bbee *Header )*TextRegion {_feff :=&TextRegion {_baf :_cfaeg ,Header :_bbee ,RegionInfo :NewRegionSegment (_cfaeg )};
return _feff ;};type RegionSegment struct{_cega _gg .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _cb .CombinationOperator ;};func (_gbe *GenericRegion )decodeTemplate0a (_eeace ,_bdg ,_edcg int ,_eafe ,_ebac int )(_edga error ){const _gdcb ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_agd ,_bcc int ;_eca ,_gge int ;_abea byte ;_ddbd int ;);if _eeace >=1{_abea ,_edga =_gbe .Bitmap .GetByte (_ebac );if _edga !=nil {return _ff .Wrap (_edga ,_gdcb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_eca =int (_abea );};if _eeace >=2{_abea ,_edga =_gbe .Bitmap .GetByte (_ebac -_gbe .Bitmap .RowStride );
if _edga !=nil {return _ff .Wrap (_edga ,_gdcb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_gge =int (_abea )<<6;};_agd =(_eca &0xf0)|(_gge &0x3800);for _adc :=0;_adc < _edcg ;_adc =_ddbd {var (_abbc byte ;_eff int ;);_ddbd =_adc +8;if _cbae :=_bdg -_adc ;
_cbae > 8{_eff =8;}else {_eff =_cbae ;};if _eeace > 0{_eca <<=8;if _ddbd < _bdg {_abea ,_edga =_gbe .Bitmap .GetByte (_ebac +1);if _edga !=nil {return _ff .Wrap (_edga ,_gdcb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_eca |=int (_abea );};
};if _eeace > 1{_gea :=_ebac -_gbe .Bitmap .RowStride +1;_gge <<=8;if _ddbd < _bdg {_abea ,_edga =_gbe .Bitmap .GetByte (_gea );if _edga !=nil {return _ff .Wrap (_edga ,_gdcb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_gge |=int (_abea )<<6;
}else {_gge |=0;};};for _gfed :=0;_gfed < _eff ;_gfed ++{_cbg :=uint (7-_gfed );if _gbe ._bbf {_bcc =_gbe .overrideAtTemplate0a (_agd ,_adc +_gfed ,_eeace ,int (_abbc ),_gfed ,int (_cbg ));_gbe ._bcac .SetIndex (int32 (_bcc ));}else {_gbe ._bcac .SetIndex (int32 (_agd ));
};var _efec int ;_efec ,_edga =_gbe ._afaa .DecodeBit (_gbe ._bcac );if _edga !=nil {return _ff .Wrap (_edga ,_gdcb ,"");};_abbc |=byte (_efec )<<_cbg ;_agd =((_agd &0x7bf7)<<1)|_efec |((_eca >>_cbg )&0x10)|((_gge >>_cbg )&0x800);};if _cefc :=_gbe .Bitmap .SetByte (_eafe ,_abbc );
_cefc !=nil {return _ff .Wrap (_cefc ,_gdcb ,"");};_eafe ++;_ebac ++;};return nil ;};func (_eefe *PageInformationSegment )encodeFlags (_ccbb _gg .BinaryWriter )(_dedb error ){const _ddbc ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _dedb =_ccbb .SkipBits (1);_dedb !=nil {return _ff .Wrap (_dedb ,_ddbc ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _ffc int ;if _eefe .CombinationOperatorOverrideAllowed (){_ffc =1;};if _dedb =_ccbb .WriteBit (_ffc );
_dedb !=nil {return _ff .Wrap (_dedb ,_ddbc ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_ffc =0;if _eefe ._bdab {_ffc =1;
};if _dedb =_ccbb .WriteBit (_ffc );_dedb !=nil {return _ff .Wrap (_dedb ,_ddbc ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _dedb =_ccbb .WriteBit ((int (_eefe ._dbbe )>>1)&0x01);
_dedb !=nil {return _ff .Wrap (_dedb ,_ddbc ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _dedb =_ccbb .WriteBit (int (_eefe ._dbbe )&0x01);
_dedb !=nil {return _ff .Wrap (_dedb ,_ddbc ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_ffc =int (_eefe .DefaultPixelValue );
if _dedb =_ccbb .WriteBit (_ffc );_dedb !=nil {return _ff .Wrap (_dedb ,_ddbc ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_ffc =0;if _eefe ._faf {_ffc =1;};
if _dedb =_ccbb .WriteBit (_ffc );_dedb !=nil {return _ff .Wrap (_dedb ,_ddbc ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_ffc =0;if _eefe .IsLossless {_ffc =1;};if _dedb =_ccbb .WriteBit (_ffc );
_dedb !=nil {return _ff .Wrap (_dedb ,_ddbc ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};var _ templater =&template1 {};func (_gde *PageInformationSegment )readCombinationOperator ()error {_dga ,_cfgd :=_gde ._acac .ReadBits (2);
if _cfgd !=nil {return _cfgd ;};_gde ._dbbe =_cb .CombinationOperator (int (_dga ));return nil ;};func (_gbd *GenericRegion )decodeLine (_adb ,_abfc ,_ccad int )error {const _gab ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_eda :=_gbd .Bitmap .GetByteIndex (0,_adb );
_ffg :=_eda -_gbd .Bitmap .RowStride ;switch _gbd .GBTemplate {case 0:if !_gbd .UseExtTemplates {return _gbd .decodeTemplate0a (_adb ,_abfc ,_ccad ,_eda ,_ffg );};return _gbd .decodeTemplate0b (_adb ,_abfc ,_ccad ,_eda ,_ffg );case 1:return _gbd .decodeTemplate1 (_adb ,_abfc ,_ccad ,_eda ,_ffg );
case 2:return _gbd .decodeTemplate2 (_adb ,_abfc ,_ccad ,_eda ,_ffg );case 3:return _gbd .decodeTemplate3 (_adb ,_abfc ,_ccad ,_eda ,_ffg );};return _ff .Errorf (_gab ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_gbd .GBTemplate );
};func (_ffba *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _ffba ._cbe ==nil {var (_gbbgb int ;_ebeed error ;);if _ffba .SdHuffDecodeHeightSelection ==3{_gbbgb ++;};if _ffba .SdHuffDecodeWidthSelection ==3{_gbbgb ++;};_ffba ._cbe ,_ebeed =_ffba .getUserTable (_gbbgb );
if _ebeed !=nil {return 0,_ebeed ;};};return _ffba ._cbe .Decode (_ffba ._effd );};var _ templater =&template0 {};func (_bdgc *Header )referenceSize ()uint {switch {case _bdgc .SegmentNumber <=255:return 1;case _bdgc .SegmentNumber <=65535:return 2;default:return 4;
};};func (_agfa *HalftoneRegion )GetRegionBitmap ()(*_cb .Bitmap ,error ){if _agfa .HalftoneRegionBitmap !=nil {return _agfa .HalftoneRegionBitmap ,nil ;};var _acg error ;_agfa .HalftoneRegionBitmap =_cb .New (int (_agfa .RegionSegment .BitmapWidth ),int (_agfa .RegionSegment .BitmapHeight ));
if _agfa .Patterns ==nil ||len (_agfa .Patterns )==0{_agfa .Patterns ,_acg =_agfa .GetPatterns ();if _acg !=nil {return nil ,_acg ;};};if _agfa .HDefaultPixel ==1{_agfa .HalftoneRegionBitmap .SetDefaultPixel ();};_ggg :=_c .Ceil (_c .Log (float64 (len (_agfa .Patterns )))/_c .Log (2));
_daed :=int (_ggg );var _gcab [][]int ;_gcab ,_acg =_agfa .grayScaleDecoding (_daed );if _acg !=nil {return nil ,_acg ;};if _acg =_agfa .renderPattern (_gcab );_acg !=nil {return nil ,_acg ;};return _agfa .HalftoneRegionBitmap ,nil ;};func (_cac *GenericRefinementRegion )decodeOptimized (_ec ,_bd ,_ac ,_bc ,_ab ,_aa ,_cga int )error {var (_bfb error ;
_dcb int ;_egg int ;);_ag :=_ec -int (_cac .ReferenceDY );if _dce :=int (-_cac .ReferenceDX );_dce > 0{_dcb =_dce ;};_age :=_cac .ReferenceBitmap .GetByteIndex (_dcb ,_ag );if _cac .ReferenceDX > 0{_egg =int (_cac .ReferenceDX );};_abf :=_cac .RegionBitmap .GetByteIndex (_egg ,_ec );
switch _cac .TemplateID {case 0:_bfb =_cac .decodeTemplate (_ec ,_bd ,_ac ,_bc ,_ab ,_aa ,_cga ,_abf ,_ag ,_age ,_cac ._ggf );case 1:_bfb =_cac .decodeTemplate (_ec ,_bd ,_ac ,_bc ,_ab ,_aa ,_cga ,_abf ,_ag ,_age ,_cac ._gf );};return _bfb ;};func (_aac *HalftoneRegion )computeSegmentDataStructure ()error {_aac .DataOffset =_aac ._eaff .StreamPosition ();
_aac .DataHeaderLength =_aac .DataOffset -_aac .DataHeaderOffset ;_aac .DataLength =int64 (_aac ._eaff .Length ())-_aac .DataHeaderLength ;return nil ;};func NewRegionSegment (r _gg .StreamReader )*RegionSegment {return &RegionSegment {_cega :r }};func (_agfe *GenericRefinementRegion )getPixel (_edg *_cb .Bitmap ,_bag ,_dfba int )int {if _bag < 0||_bag >=_edg .Width {return 0;
};if _dfba < 0||_dfba >=_edg .Height {return 0;};if _edg .GetPixel (_bag ,_dfba ){return 1;};return 0;};type EncodeInitializer interface{InitEncode ();};func (_fceee *PageInformationSegment )readResolution ()error {_fdee ,_bdb :=_fceee ._acac .ReadBits (32);
if _bdb !=nil {return _bdb ;};_fceee .ResolutionX =int (_fdee &_c .MaxInt32 );_fdee ,_bdb =_fceee ._acac .ReadBits (32);if _bdb !=nil {return _bdb ;};_fceee .ResolutionY =int (_fdee &_c .MaxInt32 );return nil ;};func (_feaa *GenericRegion )GetRegionInfo ()*RegionSegment {return _feaa .RegionSegment };
func (_gcbc *HalftoneRegion )renderPattern (_dadb [][]int )(_dfga error ){var _acgf ,_gfge int ;for _gfab :=0;_gfab < int (_gcbc .HGridHeight );_gfab ++{for _dgb :=0;_dgb < int (_gcbc .HGridWidth );_dgb ++{_acgf =_gcbc .computeX (_gfab ,_dgb );_gfge =_gcbc .computeY (_gfab ,_dgb );
_bdf :=_gcbc .Patterns [_dadb [_gfab ][_dgb ]];if _dfga =_cb .Blit (_bdf ,_gcbc .HalftoneRegionBitmap ,_acgf +int (_gcbc .HGridX ),_gfge +int (_gcbc .HGridY ),_gcbc .CombinationOperator );_dfga !=nil {return _dfga ;};};};return nil ;};func (_abg *SymbolDictionary )encodeATFlags (_bgfg _gg .BinaryWriter )(_gdbc int ,_befd error ){const _baeg ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if _abg .IsHuffmanEncoded ||_abg .SdTemplate !=0{return 0,nil ;};_bbfg :=4;if _abg .SdTemplate !=0{_bbfg =1;};for _bgeg :=0;_bgeg < _bbfg ;_bgeg ++{if _befd =_bgfg .WriteByte (byte (_abg .SdATX [_bgeg ]));_befd !=nil {return _gdbc ,_ff .Wrapf (_befd ,_baeg ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_bgeg );
};_gdbc ++;if _befd =_bgfg .WriteByte (byte (_abg .SdATY [_bgeg ]));_befd !=nil {return _gdbc ,_ff .Wrapf (_befd ,_baeg ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_bgeg );};_gdbc ++;};return _gdbc ,nil ;};func (_baaa *TableSegment )HtRS ()int32 {return _baaa ._bcdg };
func (_ceg *GenericRegion )Size ()int {return _ceg .RegionSegment .Size ()+1+2*len (_ceg .GBAtX )};type PageInformationSegment struct{_acac _gg .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_def bool ;_dbbe _cb .CombinationOperator ;
_bdab bool ;DefaultPixelValue uint8 ;_faf bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};type templater interface{form (_afag ,_bee ,_cba ,_bcfa ,_cgf int16 )int16 ;setIndex (_cgff *_a .DecoderStats );};func (_ddgg *TextRegion )encodeFlags (_afgg _gg .BinaryWriter )(_cdda int ,_ggeb error ){const _eeebd ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _ggeb =_afgg .WriteBit (int (_ddgg .SbrTemplate ));_ggeb !=nil {return _cdda ,_ff .Wrap (_ggeb ,_eeebd ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_ggeb =_afgg .WriteBits (uint64 (_ddgg .SbDsOffset ),5);_ggeb !=nil {return _cdda ,_ff .Wrap (_ggeb ,_eeebd ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");
};if _ggeb =_afgg .WriteBit (int (_ddgg .DefaultPixel ));_ggeb !=nil {return _cdda ,_ff .Wrap (_ggeb ,_eeebd ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_ggeb =_afgg .WriteBits (uint64 (_ddgg .CombinationOperator ),2);
_ggeb !=nil {return _cdda ,_ff .Wrap (_ggeb ,_eeebd ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _ggeb =_afgg .WriteBit (int (_ddgg .IsTransposed ));_ggeb !=nil {return _cdda ,_ff .Wrap (_ggeb ,_eeebd ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");
};if _ ,_ggeb =_afgg .WriteBits (uint64 (_ddgg .ReferenceCorner ),2);_ggeb !=nil {return _cdda ,_ff .Wrap (_ggeb ,_eeebd ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_ggeb =_afgg .WriteBits (uint64 (_ddgg .LogSBStrips ),2);
_ggeb !=nil {return _cdda ,_ff .Wrap (_ggeb ,_eeebd ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _fegde int ;if _ddgg .UseRefinement {_fegde =1;};if _ggeb =_afgg .WriteBit (_fegde );_ggeb !=nil {return _cdda ,_ff .Wrap (_ggeb ,_eeebd ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");
};_fegde =0;if _ddgg .IsHuffmanEncoded {_fegde =1;};if _ggeb =_afgg .WriteBit (_fegde );_ggeb !=nil {return _cdda ,_ff .Wrap (_ggeb ,_eeebd ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_cdda =2;return _cdda ,nil ;};func (_agdd *SymbolDictionary )encodeNumSyms (_gagf _gg .BinaryWriter )(_dfge int ,_fbga error ){const _gfbba ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";
_becg :=make ([]byte ,4);_b .BigEndian .PutUint32 (_becg ,_agdd .NumberOfExportedSymbols );if _dfge ,_fbga =_gagf .Write (_becg );_fbga !=nil {return _dfge ,_ff .Wrap (_fbga ,_gfbba ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};_b .BigEndian .PutUint32 (_becg ,_agdd .NumberOfNewSymbols );_efae ,_fbga :=_gagf .Write (_becg );if _fbga !=nil {return _dfge ,_ff .Wrap (_fbga ,_gfbba ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _dfge +_efae ,nil ;};func (_dgde *GenericRefinementRegion )overrideAtTemplate0 (_eae ,_dff ,_efe ,_cgc ,_acd int )int {if _dgde ._eed [0]{_eae &=0xfff7;
if _dgde .GrAtY [0]==0&&int (_dgde .GrAtX [0])>=-_acd {_eae |=(_cgc >>uint (7-(_acd +int (_dgde .GrAtX [0])))&0x1)<<3;}else {_eae |=_dgde .getPixel (_dgde .RegionBitmap ,_dff +int (_dgde .GrAtX [0]),_efe +int (_dgde .GrAtY [0]))<<3;};};if _dgde ._eed [1]{_eae &=0xefff;
if _dgde .GrAtY [1]==0&&int (_dgde .GrAtX [1])>=-_acd {_eae |=(_cgc >>uint (7-(_acd +int (_dgde .GrAtX [1])))&0x1)<<12;}else {_eae |=_dgde .getPixel (_dgde .ReferenceBitmap ,_dff +int (_dgde .GrAtX [1]),_efe +int (_dgde .GrAtY [1]));};};return _eae ;};
type GenericRefinementRegion struct{_ggf templater ;_gf templater ;_fcc _gg .StreamReader ;_gc *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_cb .Bitmap ;ReferenceBitmap *_cb .Bitmap ;
ReferenceDX int32 ;ReferenceDY int32 ;_bbe *_a .Decoder ;_ge *_a .DecoderStats ;_dd bool ;_eed []bool ;};func (_dafb *SymbolDictionary )parseHeader ()(_bdba error ){_df .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _bdba !=nil {_df .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_bdba );
}else {_df .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _bdba =_dafb .readRegionFlags ();_bdba !=nil {return _bdba ;};if _bdba =_dafb .setAtPixels ();_bdba !=nil {return _bdba ;};if _bdba =_dafb .setRefinementAtPixels ();_bdba !=nil {return _bdba ;};if _bdba =_dafb .readNumberOfExportedSymbols ();_bdba !=nil {return _bdba ;
};if _bdba =_dafb .readNumberOfNewSymbols ();_bdba !=nil {return _bdba ;};if _bdba =_dafb .setInSyms ();_bdba !=nil {return _bdba ;};if _dafb ._bdebg {_dbgfg :=_dafb .Header .RTSegments ;for _gfac :=len (_dbgfg )-1;_gfac >=0;_gfac --{if _dbgfg [_gfac ].Type ==0{_afca ,_geef :=_dbgfg [_gfac ].SegmentData .(*SymbolDictionary );
if !_geef {_bdba =_g .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_dbgfg [_gfac ]);
return _bdba ;};if _afca ._bdebg {_dafb .setRetainedCodingContexts (_afca );};break ;};};};if _bdba =_dafb .checkInput ();_bdba !=nil {return _bdba ;};return nil ;};func (_babg *PageInformationSegment )checkInput ()error {if _babg .PageBMHeight ==_c .MaxInt32 {if !_babg .IsStripe {_df .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_cgd *template1 )setIndex (_eeac *_a .DecoderStats ){_eeac .SetIndex (0x080)};