//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_b "encoding/binary";_ff "errors";_e "fmt";_ec "github.com/unidoc/unipdf/v3/common";_cb "github.com/unidoc/unipdf/v3/internal/bitwise";_fc "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_cbd "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_aa "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_ae "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_d "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_bb "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";_fd "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_bg "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_ac "golang.org/x/xerrors";_cd "image";_a "io";_f "math";_ca "strings";_ag "time";);func (_ddad *GenericRegion )GetRegionBitmap ()(_ebcg *_cbd .Bitmap ,_egg error ){if _ddad .Bitmap !=nil {return _ddad .Bitmap ,nil ;};if _ddad .IsMMREncoded {if _ddad ._bca ==nil {_ddad ._bca ,_egg =_d .New (_ddad ._cfcd ,int (_ddad .RegionSegment .BitmapWidth ),int (_ddad .RegionSegment .BitmapHeight ),_ddad .DataOffset ,_ddad .DataLength );if _egg !=nil {return nil ,_egg ;};};_ddad .Bitmap ,_egg =_ddad ._bca .UncompressMMR ();return _ddad .Bitmap ,_egg ;};if _egg =_ddad .updateOverrideFlags ();_egg !=nil {return nil ,_egg ;};var _aeaa int ;if _ddad ._bfd ==nil {_ddad ._bfd ,_egg =_aa .New (_ddad ._cfcd );if _egg !=nil {return nil ,_egg ;};};if _ddad ._egce ==nil {_ddad ._egce =_aa .NewStats (65536,1);};_ddad .Bitmap =_cbd .New (int (_ddad .RegionSegment .BitmapWidth ),int (_ddad .RegionSegment .BitmapHeight ));_faa :=int (uint32 (_ddad .Bitmap .Width +7)&(^uint32 (7)));for _ecc :=0;_ecc < _ddad .Bitmap .Height ;_ecc ++{if _ddad .IsTPGDon {var _dbgd int ;_dbgd ,_egg =_ddad .decodeSLTP ();if _egg !=nil {return nil ,_egg ;};_aeaa ^=_dbgd ;};if _aeaa ==1{if _ecc > 0{if _egg =_ddad .copyLineAbove (_ecc );_egg !=nil {return nil ,_egg ;};};}else {if _egg =_ddad .decodeLine (_ecc ,_ddad .Bitmap .Width ,_faa );_egg !=nil {return nil ,_egg ;};};};return _ddad .Bitmap ,nil ;};func (_egbga *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_ddef :=range _egbga .Header .RTSegments {if _ddef .Type ==0{_gabd ,_dega :=_ddef .GetSegmentData ();if _dega !=nil {return _dega ;};_defb ,_afbcd :=_gabd .(*SymbolDictionary );if !_afbcd {return _e .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_gabd );};_adgg ,_dega :=_defb .GetDictionary ();if _dega !=nil {return _e .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_ddef .SegmentNumber ,_dega .Error ());};_egbga ._caeg =append (_egbga ._caeg ,_adgg ...);_egbga ._gbda +=_defb .NumberOfExportedSymbols ;};};return nil ;};func (_bdbb *PatternDictionary )computeSegmentDataStructure ()error {_bdbb .DataOffset =_bdbb ._dage .StreamPosition ();_bdbb .DataHeaderLength =_bdbb .DataOffset -_bdbb .DataHeaderOffset ;_bdbb .DataLength =int64 (_bdbb ._dage .Length ())-_bdbb .DataHeaderLength ;return nil ;};func (_aegec *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_aaga ,_defeb :=_aegec ._ggab .ReadBit ();if _defeb !=nil {return _defeb ;};if _aaga ==1{_aegec ._bdgf =true ;};return nil ;};var _ templater =&template0 {};func (_ddadc *Header )writeFlags (_gcc _cb .BinaryWriter )(_egd error ){const _aecc ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_gfb :=byte (_ddadc .Type );if _egd =_gcc .WriteByte (_gfb );_egd !=nil {return _fd .Wrap (_egd ,_aecc ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_ddadc .RetainFlag &&!_ddadc .PageAssociationFieldSize {return nil ;};if _egd =_gcc .SkipBits (-8);_egd !=nil {return _fd .Wrap (_egd ,_aecc ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _eada int ;if _ddadc .RetainFlag {_eada =1;};if _egd =_gcc .WriteBit (_eada );_egd !=nil {return _fd .Wrap (_egd ,_aecc ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_eada =0;if _ddadc .PageAssociationFieldSize {_eada =1;};if _egd =_gcc .WriteBit (_eada );_egd !=nil {return _fd .Wrap (_egd ,_aecc ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_gcc .FinishByte ();return nil ;};func (_acaa *SymbolDictionary )encodeFlags (_gfbf _cb .BinaryWriter )(_cfd int ,_ccgd error ){const _cbdd ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _ccgd =_gfbf .SkipBits (3);_ccgd !=nil {return 0,_fd .Wrap (_ccgd ,_cbdd ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _fgca int ;if _acaa .SdrTemplate > 0{_fgca =1;};if _ccgd =_gfbf .WriteBit (_fgca );_ccgd !=nil {return _cfd ,_fd .Wrap (_ccgd ,_cbdd ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_fgca =0;if _acaa .SdTemplate > 1{_fgca =1;};if _ccgd =_gfbf .WriteBit (_fgca );_ccgd !=nil {return _cfd ,_fd .Wrap (_ccgd ,_cbdd ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_fgca =0;if _acaa .SdTemplate ==1||_acaa .SdTemplate ==3{_fgca =1;};if _ccgd =_gfbf .WriteBit (_fgca );_ccgd !=nil {return _cfd ,_fd .Wrap (_ccgd ,_cbdd ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_fgca =0;if _acaa ._bdce {_fgca =1;};if _ccgd =_gfbf .WriteBit (_fgca );_ccgd !=nil {return _cfd ,_fd .Wrap (_ccgd ,_cbdd ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");};_fgca =0;if _acaa ._gfdc {_fgca =1;};if _ccgd =_gfbf .WriteBit (_fgca );_ccgd !=nil {return _cfd ,_fd .Wrap (_ccgd ,_cbdd ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_fgca =0;if _acaa .SdHuffAggInstanceSelection {_fgca =1;};if _ccgd =_gfbf .WriteBit (_fgca );_ccgd !=nil {return _cfd ,_fd .Wrap (_ccgd ,_cbdd ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_fgca =int (_acaa .SdHuffBMSizeSelection );if _ccgd =_gfbf .WriteBit (_fgca );_ccgd !=nil {return _cfd ,_fd .Wrap (_ccgd ,_cbdd ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_fgca =0;if _acaa .SdHuffDecodeWidthSelection > 1{_fgca =1;};if _ccgd =_gfbf .WriteBit (_fgca );_ccgd !=nil {return _cfd ,_fd .Wrap (_ccgd ,_cbdd ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_fgca =0;switch _acaa .SdHuffDecodeWidthSelection {case 1,3:_fgca =1;};if _ccgd =_gfbf .WriteBit (_fgca );_ccgd !=nil {return _cfd ,_fd .Wrap (_ccgd ,_cbdd ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_fgca =0;if _acaa .SdHuffDecodeHeightSelection > 1{_fgca =1;};if _ccgd =_gfbf .WriteBit (_fgca );_ccgd !=nil {return _cfd ,_fd .Wrap (_ccgd ,_cbdd ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_fgca =0;switch _acaa .SdHuffDecodeHeightSelection {case 1,3:_fgca =1;};if _ccgd =_gfbf .WriteBit (_fgca );_ccgd !=nil {return _cfd ,_fd .Wrap (_ccgd ,_cbdd ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_fgca =0;if _acaa .UseRefinementAggregation {_fgca =1;};if _ccgd =_gfbf .WriteBit (_fgca );_ccgd !=nil {return _cfd ,_fd .Wrap (_ccgd ,_cbdd ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_fgca =0;if _acaa .IsHuffmanEncoded {_fgca =1;};if _ccgd =_gfbf .WriteBit (_fgca );_ccgd !=nil {return _cfd ,_fd .Wrap (_ccgd ,_cbdd ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_gbd *HalftoneRegion )GetRegionBitmap ()(*_cbd .Bitmap ,error ){if _gbd .HalftoneRegionBitmap !=nil {return _gbd .HalftoneRegionBitmap ,nil ;};var _bdg error ;_gbd .HalftoneRegionBitmap =_cbd .New (int (_gbd .RegionSegment .BitmapWidth ),int (_gbd .RegionSegment .BitmapHeight ));if _gbd .Patterns ==nil ||len (_gbd .Patterns )==0{_gbd .Patterns ,_bdg =_gbd .GetPatterns ();if _bdg !=nil {return nil ,_bdg ;};};if _gbd .HDefaultPixel ==1{_gbd .HalftoneRegionBitmap .SetDefaultPixel ();};_adgb :=_f .Ceil (_f .Log (float64 (len (_gbd .Patterns )))/_f .Log (2));_aac :=int (_adgb );var _eba [][]int ;_eba ,_bdg =_gbd .grayScaleDecoding (_aac );if _bdg !=nil {return nil ,_bdg ;};if _bdg =_gbd .renderPattern (_eba );_bdg !=nil {return nil ,_bdg ;};return _gbd .HalftoneRegionBitmap ,nil ;};func (_gefg *TextRegion )decodeRI ()(int64 ,error ){if !_gefg .UseRefinement {return 0,nil ;};if _gefg .IsHuffmanEncoded {_ebcf ,_fgace :=_gefg ._fdce .ReadBit ();return int64 (_ebcf ),_fgace ;};_fcfa ,_fbca :=_gefg ._dccfb .DecodeInt (_gefg ._abb );return int64 (_fcfa ),_fbca ;};type template1 struct{};func (_gcec *GenericRegion )getPixel (_ebcb ,_daf int )int8 {if _ebcb < 0||_ebcb >=_gcec .Bitmap .Width {return 0;};if _daf < 0||_daf >=_gcec .Bitmap .Height {return 0;};if _gcec .Bitmap .GetPixel (_ebcb ,_daf ){return 1;};return 0;};func (_ebff *GenericRegion )decodeTemplate1 (_fccag ,_ecba ,_fga int ,_bag ,_ddf int )(_cad error ){const _fdde ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_bgc ,_ebfc int ;_eagf ,_aeag int ;_dec byte ;_gcaaa ,_cddg int ;);if _fccag >=1{_dec ,_cad =_ebff .Bitmap .GetByte (_ddf );if _cad !=nil {return _fd .Wrap (_cad ,_fdde ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_eagf =int (_dec );};if _fccag >=2{_dec ,_cad =_ebff .Bitmap .GetByte (_ddf -_ebff .Bitmap .RowStride );if _cad !=nil {return _fd .Wrap (_cad ,_fdde ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_aeag =int (_dec )<<5;};_bgc =((_eagf >>1)&0x1f8)|((_aeag >>1)&0x1e00);for _fgeb :=0;_fgeb < _fga ;_fgeb =_gcaaa {var (_dgc byte ;_eac int ;);_gcaaa =_fgeb +8;if _eddf :=_ecba -_fgeb ;_eddf > 8{_eac =8;}else {_eac =_eddf ;};if _fccag > 0{_eagf <<=8;if _gcaaa < _ecba {_dec ,_cad =_ebff .Bitmap .GetByte (_ddf +1);if _cad !=nil {return _fd .Wrap (_cad ,_fdde ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_eagf |=int (_dec );};};if _fccag > 1{_aeag <<=8;if _gcaaa < _ecba {_dec ,_cad =_ebff .Bitmap .GetByte (_ddf -_ebff .Bitmap .RowStride +1);if _cad !=nil {return _fd .Wrap (_cad ,_fdde ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_aeag |=int (_dec )<<5;};};for _agge :=0;_agge < _eac ;_agge ++{if _ebff ._aca {_ebfc =_ebff .overrideAtTemplate1 (_bgc ,_fgeb +_agge ,_fccag ,int (_dgc ),_agge );_ebff ._egce .SetIndex (int32 (_ebfc ));}else {_ebff ._egce .SetIndex (int32 (_bgc ));};_cddg ,_cad =_ebff ._bfd .DecodeBit (_ebff ._egce );if _cad !=nil {return _fd .Wrap (_cad ,_fdde ,"");};_dgc |=byte (_cddg )<<uint (7-_agge );_dagc :=uint (8-_agge );_bgc =((_bgc &0xefb)<<1)|_cddg |((_eagf >>_dagc )&0x8)|((_aeag >>_dagc )&0x200);};if _dcdf :=_ebff .Bitmap .SetByte (_bag ,_dgc );_dcdf !=nil {return _fd .Wrap (_dcdf ,_fdde ,"");};_bag ++;_ddf ++;};return nil ;};func (_dbcf *SymbolDictionary )setCodingStatistics ()error {if _dbcf ._gcbb ==nil {_dbcf ._gcbb =_aa .NewStats (512,1);};if _dbcf ._cefd ==nil {_dbcf ._cefd =_aa .NewStats (512,1);};if _dbcf ._bced ==nil {_dbcf ._bced =_aa .NewStats (512,1);};if _dbcf ._gace ==nil {_dbcf ._gace =_aa .NewStats (512,1);};if _dbcf ._ggcfc ==nil {_dbcf ._ggcfc =_aa .NewStats (512,1);};if _dbcf .UseRefinementAggregation &&_dbcf ._dbge ==nil {_dbcf ._dbge =_aa .NewStats (1<<uint (_dbcf ._feae ),1);_dbcf ._ddb =_aa .NewStats (512,1);_dbcf ._gcgc =_aa .NewStats (512,1);};if _dbcf ._bafa ==nil {_dbcf ._bafa =_aa .NewStats (65536,1);};if _dbcf ._gcbg ==nil {var _deaf error ;_dbcf ._gcbg ,_deaf =_aa .New (_dbcf ._gcff );if _deaf !=nil {return _deaf ;};};return nil ;};func (_fggcc *TextRegion )readUseRefinement ()error {if !_fggcc .UseRefinement ||_fggcc .SbrTemplate !=0{return nil ;};var (_cafb byte ;_bedf error ;);_fggcc .SbrATX =make ([]int8 ,2);_fggcc .SbrATY =make ([]int8 ,2);_cafb ,_bedf =_fggcc ._fdce .ReadByte ();if _bedf !=nil {return _bedf ;};_fggcc .SbrATX [0]=int8 (_cafb );_cafb ,_bedf =_fggcc ._fdce .ReadByte ();if _bedf !=nil {return _bedf ;};_fggcc .SbrATY [0]=int8 (_cafb );_cafb ,_bedf =_fggcc ._fdce .ReadByte ();if _bedf !=nil {return _bedf ;};_fggcc .SbrATX [1]=int8 (_cafb );_cafb ,_bedf =_fggcc ._fdce .ReadByte ();if _bedf !=nil {return _bedf ;};_fggcc .SbrATY [1]=int8 (_cafb );return nil ;};func (_eafec *SymbolDictionary )readAtPixels (_fabc int )error {_eafec .SdATX =make ([]int8 ,_fabc );_eafec .SdATY =make ([]int8 ,_fabc );var (_efffc byte ;_dgcb error ;);for _geacbc :=0;_geacbc < _fabc ;_geacbc ++{_efffc ,_dgcb =_eafec ._gcff .ReadByte ();if _dgcb !=nil {return _dgcb ;};_eafec .SdATX [_geacbc ]=int8 (_efffc );_efffc ,_dgcb =_eafec ._gcff .ReadByte ();if _dgcb !=nil {return _dgcb ;};_eafec .SdATY [_geacbc ]=int8 (_efffc );};return nil ;};func (_db *EndOfStripe )Init (h *Header ,r _cb .StreamReader )error {_db ._da =r ;return _db .parseHeader (h ,r );};func (_aga *GenericRegion )Init (h *Header ,r _cb .StreamReader )error {_aga .RegionSegment =NewRegionSegment (r );_aga ._cfcd =r ;return _aga .parseHeader ();};func (_eddcd *SymbolDictionary )Init (h *Header ,r _cb .StreamReader )error {_eddcd .Header =h ;_eddcd ._gcff =r ;return _eddcd .parseHeader ();};func (_cegd *TextRegion )decodeStripT ()(_dcde int64 ,_adeg error ){if _cegd .IsHuffmanEncoded {if _cegd .SbHuffDT ==3{if _cegd ._eaec ==nil {var _gfbc int ;if _cegd .SbHuffFS ==3{_gfbc ++;};if _cegd .SbHuffDS ==3{_gfbc ++;};_cegd ._eaec ,_adeg =_cegd .getUserTable (_gfbc );if _adeg !=nil {return 0,_adeg ;};};_dcde ,_adeg =_cegd ._eaec .Decode (_cegd ._fdce );if _adeg !=nil {return 0,_adeg ;};}else {var _eabe _ae .Tabler ;_eabe ,_adeg =_ae .GetStandardTable (11+int (_cegd .SbHuffDT ));if _adeg !=nil {return 0,_adeg ;};_dcde ,_adeg =_eabe .Decode (_cegd ._fdce );if _adeg !=nil {return 0,_adeg ;};};}else {var _afbg int32 ;_afbg ,_adeg =_cegd ._dccfb .DecodeInt (_cegd ._abga );if _adeg !=nil {return 0,_adeg ;};_dcde =int64 (_afbg );};_dcde *=int64 (-_cegd .SbStrips );return _dcde ,nil ;};func (_cgf *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_cbd .Points ,symbols *_cbd .Bitmaps ,classIDs *_fc .IntSlice ,boxes *_cbd .Boxes ,width ,height ,symBits int ){_cgf .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};_cgf ._gbcda =globalSymbolsMap ;_cgf ._cefg =localSymbolsMap ;_cgf ._fddb =comps ;_cgf ._cbdda =inLL ;_cgf ._cbaa =symbols ;_cgf ._gdfa =classIDs ;_cgf ._bgbed =boxes ;_cgf ._fegf =symBits ;};func (_ebag *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_bfge int ;_cfed int32 ;_dfdb error ;_dcfd =int32 (_ebag ._gbda +_ebag .NumberOfNewSymbols );_gaff =make ([]int ,_dcfd ););for _fgac :=int32 (0);_fgac < _dcfd ;_fgac +=_cfed {if _ebag .IsHuffmanEncoded {_fdag ,_bfea :=_ae .GetStandardTable (1);if _bfea !=nil {return nil ,_bfea ;};_dagcad ,_bfea :=_fdag .Decode (_ebag ._gcff );if _bfea !=nil {return nil ,_bfea ;};_cfed =int32 (_dagcad );}else {_cfed ,_dfdb =_ebag ._gcbg .DecodeInt (_ebag ._ggcfc );if _dfdb !=nil {return nil ,_dfdb ;};};if _cfed !=0{for _abfc :=_fgac ;_abfc < _fgac +_cfed ;_abfc ++{_gaff [_abfc ]=_bfge ;};};if _bfge ==0{_bfge =1;}else {_bfge =0;};};return _gaff ,nil ;};func (_acd *GenericRegion )overrideAtTemplate1 (_age ,_eacg ,_cgbe ,_cgd ,_cdg int )int {_age &=0x1FF7;if _acd .GBAtY [0]==0&&_acd .GBAtX [0]>=-int8 (_cdg ){_age |=(_cgd >>uint (7-(int8 (_cdg )+_acd .GBAtX [0]))&0x1)<<3;}else {_age |=int (_acd .getPixel (_eacg +int (_acd .GBAtX [0]),_cgbe +int (_acd .GBAtY [0])))<<3;};return _age ;};func (_be *EndOfStripe )LineNumber ()int {return _be ._acg };func (_afa *PatternDictionary )readPatternWidthAndHeight ()error {_abcf ,_face :=_afa ._dage .ReadByte ();if _face !=nil {return _face ;};_afa .HdpWidth =_abcf ;_abcf ,_face =_afa ._dage .ReadByte ();if _face !=nil {return _face ;};_afa .HdpHeight =_abcf ;return nil ;};func (_ef *EndOfStripe )parseHeader (_fe *Header ,_fa _cb .StreamReader )error {_fcf ,_de :=_ef ._da .ReadBits (32);if _de !=nil {return _de ;};_ef ._acg =int (_fcf &_f .MaxInt32 );return nil ;};type EncodeInitializer interface{InitEncode ();};func (_ddbd *TextRegion )computeSymbolCodeLength ()error {if _ddbd .IsHuffmanEncoded {return _ddbd .symbolIDCodeLengths ();};_ddbd ._fcgg =int8 (_f .Ceil (_f .Log (float64 (_ddbd .NumberOfSymbols ))/_f .Log (2)));return nil ;};func (_bfeb *TextRegion )createRegionBitmap ()error {_bfeb .RegionBitmap =_cbd .New (int (_bfeb .RegionInfo .BitmapWidth ),int (_bfeb .RegionInfo .BitmapHeight ));if _bfeb .DefaultPixel !=0{_bfeb .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_ebbb *GenericRegion )overrideAtTemplate0a (_fgebg ,_ged ,_dcac ,_deba ,_cbce ,_agag int )int {if _ebbb .GBAtOverride [0]{_fgebg &=0xFFEF;if _ebbb .GBAtY [0]==0&&_ebbb .GBAtX [0]>=-int8 (_cbce ){_fgebg |=(_deba >>uint (int8 (_agag )-_ebbb .GBAtX [0]&0x1))<<4;}else {_fgebg |=int (_ebbb .getPixel (_ged +int (_ebbb .GBAtX [0]),_dcac +int (_ebbb .GBAtY [0])))<<4;};};if _ebbb .GBAtOverride [1]{_fgebg &=0xFBFF;if _ebbb .GBAtY [1]==0&&_ebbb .GBAtX [1]>=-int8 (_cbce ){_fgebg |=(_deba >>uint (int8 (_agag )-_ebbb .GBAtX [1]&0x1))<<10;}else {_fgebg |=int (_ebbb .getPixel (_ged +int (_ebbb .GBAtX [1]),_dcac +int (_ebbb .GBAtY [1])))<<10;};};if _ebbb .GBAtOverride [2]{_fgebg &=0xF7FF;if _ebbb .GBAtY [2]==0&&_ebbb .GBAtX [2]>=-int8 (_cbce ){_fgebg |=(_deba >>uint (int8 (_agag )-_ebbb .GBAtX [2]&0x1))<<11;}else {_fgebg |=int (_ebbb .getPixel (_ged +int (_ebbb .GBAtX [2]),_dcac +int (_ebbb .GBAtY [2])))<<11;};};if _ebbb .GBAtOverride [3]{_fgebg &=0x7FFF;if _ebbb .GBAtY [3]==0&&_ebbb .GBAtX [3]>=-int8 (_cbce ){_fgebg |=(_deba >>uint (int8 (_agag )-_ebbb .GBAtX [3]&0x1))<<15;}else {_fgebg |=int (_ebbb .getPixel (_ged +int (_ebbb .GBAtX [3]),_dcac +int (_ebbb .GBAtY [3])))<<15;};};return _fgebg ;};func (_ccac *GenericRegion )String ()string {_bgdg :=&_ca .Builder {};_bgdg .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_bgdg .WriteString (_ccac .RegionSegment .String ()+"\u000a");_bgdg .WriteString (_e .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_ccac .UseExtTemplates ));_bgdg .WriteString (_e .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ccac .IsTPGDon ));_bgdg .WriteString (_e .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_ccac .GBTemplate ));_bgdg .WriteString (_e .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_ccac .IsMMREncoded ));_bgdg .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_ccac .GBAtX ));_bgdg .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_ccac .GBAtY ));_bgdg .WriteString (_e .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_ccac .GBAtOverride ));return _bgdg .String ();};func (_egccc *GenericRegion )decodeTemplate0b (_cfcg ,_cgbg ,_bee int ,_ebf ,_gac int )(_ded error ){const _dcaf ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_bgec ,_afec int ;_adgf ,_bcf int ;_egf byte ;_aab int ;);if _cfcg >=1{_egf ,_ded =_egccc .Bitmap .GetByte (_gac );if _ded !=nil {return _fd .Wrap (_ded ,_dcaf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_adgf =int (_egf );};if _cfcg >=2{_egf ,_ded =_egccc .Bitmap .GetByte (_gac -_egccc .Bitmap .RowStride );if _ded !=nil {return _fd .Wrap (_ded ,_dcaf ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_bcf =int (_egf )<<6;};_bgec =(_adgf &0xf0)|(_bcf &0x3800);for _cbf :=0;_cbf < _bee ;_cbf =_aab {var (_eee byte ;_eage int ;);_aab =_cbf +8;if _gfd :=_cgbg -_cbf ;_gfd > 8{_eage =8;}else {_eage =_gfd ;};if _cfcg > 0{_adgf <<=8;if _aab < _cgbg {_egf ,_ded =_egccc .Bitmap .GetByte (_gac +1);if _ded !=nil {return _fd .Wrap (_ded ,_dcaf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_adgf |=int (_egf );};};if _cfcg > 1{_bcf <<=8;if _aab < _cgbg {_egf ,_ded =_egccc .Bitmap .GetByte (_gac -_egccc .Bitmap .RowStride +1);if _ded !=nil {return _fd .Wrap (_ded ,_dcaf ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_bcf |=int (_egf )<<6;};};for _egba :=0;_egba < _eage ;_egba ++{_bfc :=uint (7-_egba );if _egccc ._aca {_afec =_egccc .overrideAtTemplate0b (_bgec ,_cbf +_egba ,_cfcg ,int (_eee ),_egba ,int (_bfc ));_egccc ._egce .SetIndex (int32 (_afec ));}else {_egccc ._egce .SetIndex (int32 (_bgec ));};var _gfac int ;_gfac ,_ded =_egccc ._bfd .DecodeBit (_egccc ._egce );if _ded !=nil {return _fd .Wrap (_ded ,_dcaf ,"");};_eee |=byte (_gfac <<_bfc );_bgec =((_bgec &0x7bf7)<<1)|_gfac |((_adgf >>_bfc )&0x10)|((_bcf >>_bfc )&0x800);};if _gff :=_egccc .Bitmap .SetByte (_ebf ,_eee );_gff !=nil {return _fd .Wrap (_gff ,_dcaf ,"");};_ebf ++;_gac ++;};return nil ;};func (_cgef *Header )parse (_dce Documenter ,_ffaab _cb .StreamReader ,_eddd int64 ,_aaea OrganizationType )(_dcff error ){const _aegd ="\u0070\u0061\u0072s\u0065";_ec .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _dcff !=nil {_ec .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_dcff );}else {_ec .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_dcff =_ffaab .Seek (_eddd ,_a .SeekStart );if _dcff !=nil {return _fd .Wrap (_dcff ,_aegd ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _dcff =_cgef .readSegmentNumber (_ffaab );_dcff !=nil {return _fd .Wrap (_dcff ,_aegd ,"");};if _dcff =_cgef .readHeaderFlags ();_dcff !=nil {return _fd .Wrap (_dcff ,_aegd ,"");};var _bead uint64 ;_bead ,_dcff =_cgef .readNumberOfReferredToSegments (_ffaab );if _dcff !=nil {return _fd .Wrap (_dcff ,_aegd ,"");};_cgef .RTSNumbers ,_dcff =_cgef .readReferredToSegmentNumbers (_ffaab ,int (_bead ));if _dcff !=nil {return _fd .Wrap (_dcff ,_aegd ,"");};_dcff =_cgef .readSegmentPageAssociation (_dce ,_ffaab ,_bead ,_cgef .RTSNumbers ...);if _dcff !=nil {return _fd .Wrap (_dcff ,_aegd ,"");};if _cgef .Type !=TEndOfFile {if _dcff =_cgef .readSegmentDataLength (_ffaab );_dcff !=nil {return _fd .Wrap (_dcff ,_aegd ,"");};};_cgef .readDataStartOffset (_ffaab ,_aaea );_cgef .readHeaderLength (_ffaab ,_eddd );_ec .Log .Trace ("\u0025\u0073",_cgef );return nil ;};var _ templater =&template1 {};func (_bdbg *SymbolDictionary )getUserTable (_eeeb int )(_ae .Tabler ,error ){var _cdfg int ;for _ ,_egfb :=range _bdbg .Header .RTSegments {if _egfb .Type ==53{if _cdfg ==_eeeb {_bcgb ,_cdec :=_egfb .GetSegmentData ();if _cdec !=nil {return nil ,_cdec ;};_fed :=_bcgb .(_ae .BasicTabler );return _ae .NewEncodedTable (_fed );};_cdfg ++;};};return nil ,nil ;};func (_caae *GenericRegion )setParametersWithAt (_agcc bool ,_bgea byte ,_cadd ,_daa bool ,_gbbd ,_fabe []int8 ,_bcd ,_fddd uint32 ,_bad *_aa .DecoderStats ,_gbcb *_aa .Decoder ){_caae .IsMMREncoded =_agcc ;_caae .GBTemplate =_bgea ;_caae .IsTPGDon =_cadd ;_caae .GBAtX =_gbbd ;_caae .GBAtY =_fabe ;_caae .RegionSegment .BitmapHeight =_fddd ;_caae .RegionSegment .BitmapWidth =_bcd ;_caae ._bca =nil ;_caae .Bitmap =nil ;if _bad !=nil {_caae ._egce =_bad ;};if _gbcb !=nil {_caae ._bfd =_gbcb ;};_ec .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_caae );};func (_bbb *GenericRefinementRegion )decodeSLTP ()(int ,error ){_bbb .Template .setIndex (_bbb ._gd );return _bbb ._g .DecodeBit (_bbb ._gd );};type GenericRefinementRegion struct{_dd templater ;_ee templater ;_ecb _cb .StreamReader ;_dbg *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_cbd .Bitmap ;ReferenceBitmap *_cbd .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_g *_aa .Decoder ;_gd *_aa .DecoderStats ;_def bool ;_fb []bool ;};func (_ecbe *GenericRegion )readGBAtPixels (_ddd int )error {const _ceb ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_ecbe .GBAtX =make ([]int8 ,_ddd );_ecbe .GBAtY =make ([]int8 ,_ddd );for _cbg :=0;_cbg < _ddd ;_cbg ++{_dagd ,_afef :=_ecbe ._cfcd .ReadByte ();if _afef !=nil {return _fd .Wrapf (_afef ,_ceb ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_cbg );};_ecbe .GBAtX [_cbg ]=int8 (_dagd );_dagd ,_afef =_ecbe ._cfcd .ReadByte ();if _afef !=nil {return _fd .Wrapf (_afef ,_ceb ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_cbg );};_ecbe .GBAtY [_cbg ]=int8 (_dagd );};return nil ;};func (_gbbg *SymbolDictionary )readNumberOfNewSymbols ()error {_cfdc ,_bgca :=_gbbg ._gcff .ReadBits (32);if _bgca !=nil {return _bgca ;};_gbbg .NumberOfNewSymbols =uint32 (_cfdc &_f .MaxUint32 );return nil ;};type EndOfStripe struct{_da _cb .StreamReader ;_acg int ;};func (_dafa *RegionSegment )Encode (w _cb .BinaryWriter )(_egcea int ,_aegg error ){const _bbfad ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_cdcc :=make ([]byte ,4);_b .BigEndian .PutUint32 (_cdcc ,_dafa .BitmapWidth );_egcea ,_aegg =w .Write (_cdcc );if _aegg !=nil {return 0,_fd .Wrap (_aegg ,_bbfad ,"\u0057\u0069\u0064t\u0068");};_b .BigEndian .PutUint32 (_cdcc ,_dafa .BitmapHeight );var _cebc int ;_cebc ,_aegg =w .Write (_cdcc );if _aegg !=nil {return 0,_fd .Wrap (_aegg ,_bbfad ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_egcea +=_cebc ;_b .BigEndian .PutUint32 (_cdcc ,_dafa .XLocation );_cebc ,_aegg =w .Write (_cdcc );if _aegg !=nil {return 0,_fd .Wrap (_aegg ,_bbfad ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_egcea +=_cebc ;_b .BigEndian .PutUint32 (_cdcc ,_dafa .YLocation );_cebc ,_aegg =w .Write (_cdcc );if _aegg !=nil {return 0,_fd .Wrap (_aegg ,_bbfad ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_egcea +=_cebc ;if _aegg =w .WriteByte (byte (_dafa .CombinaionOperator )&0x07);_aegg !=nil {return 0,_fd .Wrap (_aegg ,_bbfad ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_egcea ++;return _egcea ,nil ;};func (_gceg *TextRegion )readAmountOfSymbolInstances ()error {_fdfgbf ,_aeed :=_gceg ._fdce .ReadBits (32);if _aeed !=nil {return _aeed ;};_gceg .NumberOfSymbolInstances =uint32 (_fdfgbf &_f .MaxUint32 );_abaa :=_gceg .RegionInfo .BitmapWidth *_gceg .RegionInfo .BitmapHeight ;if _abaa < _gceg .NumberOfSymbolInstances {_ec .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_abaa ,_gceg .NumberOfSymbolInstances );_gceg .NumberOfSymbolInstances =_abaa ;};return nil ;};func (_fgc *Header )CleanSegmentData (){if _fgc .SegmentData !=nil {_fgc .SegmentData =nil ;};};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_cbd .Bitmap ,error );};func (_aeb *GenericRefinementRegion )getGrReference ()(*_cbd .Bitmap ,error ){segments :=_aeb ._dbg .RTSegments ;if len (segments )==0{return nil ,_ff .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_faf ,_gb :=segments [0].GetSegmentData ();if _gb !=nil {return nil ,_gb ;};_gg ,_dfe :=_faf .(Regioner );if !_dfe {return nil ,_e .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_faf );};return _gg .GetRegionBitmap ();};func (_dba *GenericRefinementRegion )readAtPixels ()error {_dba .GrAtX =make ([]int8 ,2);_dba .GrAtY =make ([]int8 ,2);_cefc ,_bac :=_dba ._ecb .ReadByte ();if _bac !=nil {return _bac ;};_dba .GrAtX [0]=int8 (_cefc );_cefc ,_bac =_dba ._ecb .ReadByte ();if _bac !=nil {return _bac ;};_dba .GrAtY [0]=int8 (_cefc );_cefc ,_bac =_dba ._ecb .ReadByte ();if _bac !=nil {return _bac ;};_dba .GrAtX [1]=int8 (_cefc );_cefc ,_bac =_dba ._ecb .ReadByte ();if _bac !=nil {return _bac ;};_dba .GrAtY [1]=int8 (_cefc );return nil ;};func (_dggg *HalftoneRegion )combineGrayscalePlanes (_dgge []*_cbd .Bitmap ,_bgdd int )error {_cfef :=0;for _cagf :=0;_cagf < _dgge [_bgdd ].Height ;_cagf ++{for _gafe :=0;_gafe < _dgge [_bgdd ].Width ;_gafe +=8{_cbde ,_fgec :=_dgge [_bgdd +1].GetByte (_cfef );if _fgec !=nil {return _fgec ;};_bgf ,_fgec :=_dgge [_bgdd ].GetByte (_cfef );if _fgec !=nil {return _fgec ;};_fgec =_dgge [_bgdd ].SetByte (_cfef ,_cbd .CombineBytes (_bgf ,_cbde ,_cbd .CmbOpXor ));if _fgec !=nil {return _fgec ;};_cfef ++;};};return nil ;};type OrganizationType uint8 ;func (_bccc *SymbolDictionary )encodeRefinementATFlags (_cfg _cb .BinaryWriter )(_aeeae int ,_gafea error ){const _gede ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if !_bccc .UseRefinementAggregation ||_bccc .SdrTemplate !=0{return 0,nil ;};for _aaad :=0;_aaad < 2;_aaad ++{if _gafea =_cfg .WriteByte (byte (_bccc .SdrATX [_aaad ]));_gafea !=nil {return _aeeae ,_fd .Wrapf (_gafea ,_gede ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_aaad );};_aeeae ++;if _gafea =_cfg .WriteByte (byte (_bccc .SdrATY [_aaad ]));_gafea !=nil {return _aeeae ,_fd .Wrapf (_gafea ,_gede ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_aaad );};_aeeae ++;};return _aeeae ,nil ;};func (_dedc *PatternDictionary )GetDictionary ()([]*_cbd .Bitmap ,error ){if _dedc .Patterns !=nil {return _dedc .Patterns ,nil ;};if !_dedc .IsMMREncoded {_dedc .setGbAtPixels ();};_gbcg :=NewGenericRegion (_dedc ._dage );_gbcg .setParametersMMR (_dedc .IsMMREncoded ,_dedc .DataOffset ,_dedc .DataLength ,uint32 (_dedc .HdpHeight ),(_dedc .GrayMax +1)*uint32 (_dedc .HdpWidth ),_dedc .HDTemplate ,false ,false ,_dedc .GBAtX ,_dedc .GBAtY );_cgbf ,_fgebcb :=_gbcg .GetRegionBitmap ();if _fgebcb !=nil {return nil ,_fgebcb ;};if _fgebcb =_dedc .extractPatterns (_cgbf );_fgebcb !=nil {return nil ,_fgebcb ;};return _dedc .Patterns ,nil ;};func (_dfb *Header )readSegmentNumber (_cacf _cb .StreamReader )error {const _debc ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_bcaaf :=make ([]byte ,4);_ ,_agbgf :=_cacf .Read (_bcaaf );if _agbgf !=nil {return _fd .Wrap (_agbgf ,_debc ,"");};_dfb .SegmentNumber =_b .BigEndian .Uint32 (_bcaaf );return nil ;};func (_ffe *PageInformationSegment )encodeStripingInformation (_bdcf _cb .BinaryWriter )(_gded int ,_aafc error ){const _bfff ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";if !_ffe .IsStripe {if _gded ,_aafc =_bdcf .Write ([]byte {0x00,0x00});_aafc !=nil {return 0,_fd .Wrap (_aafc ,_bfff ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _gded ,nil ;};_eacgc :=make ([]byte ,2);_b .BigEndian .PutUint16 (_eacgc ,_ffe .MaxStripeSize |1<<15);if _gded ,_aafc =_bdcf .Write (_eacgc );_aafc !=nil {return 0,_fd .Wrapf (_aafc ,_bfff ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_ffe .MaxStripeSize );};return _gded ,nil ;};func (_fcdc *HalftoneRegion )checkInput ()error {if _fcdc .IsMMREncoded {if _fcdc .HTemplate !=0{_ec .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_fcdc .HTemplate );};if _fcdc .HSkipEnabled {_ec .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_fcdc .HSkipEnabled );};};return nil ;};type RegionSegment struct{_gedd _cb .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _cbd .CombinationOperator ;};func _gad (_dde int )int {if _dde ==0{return 0;};_dde |=_dde >>1;_dde |=_dde >>2;_dde |=_dde >>4;_dde |=_dde >>8;_dde |=_dde >>16;return (_dde +1)>>1;};func (_ggcg *TextRegion )decodeDT ()(_fgdg int64 ,_gcdfc error ){if _ggcg .IsHuffmanEncoded {if _ggcg .SbHuffDT ==3{_fgdg ,_gcdfc =_ggcg ._eaec .Decode (_ggcg ._fdce );if _gcdfc !=nil {return 0,_gcdfc ;};}else {var _deadg _ae .Tabler ;_deadg ,_gcdfc =_ae .GetStandardTable (11+int (_ggcg .SbHuffDT ));if _gcdfc !=nil {return 0,_gcdfc ;};_fgdg ,_gcdfc =_deadg .Decode (_ggcg ._fdce );if _gcdfc !=nil {return 0,_gcdfc ;};};}else {var _fbfdf int32 ;_fbfdf ,_gcdfc =_ggcg ._dccfb .DecodeInt (_ggcg ._abga );if _gcdfc !=nil {return ;};_fgdg =int64 (_fbfdf );};_fgdg *=int64 (_ggcg .SbStrips );return _fgdg ,nil ;};func (_bbgd *PageInformationSegment )Size ()int {return 19};func (_aee *GenericRefinementRegion )decodeOptimized (_cg ,_egb ,_fdf ,_fad ,_ad ,_dc ,_dg int )error {var (_dea error ;_dfc int ;_fge int ;);_efd :=_cg -int (_aee .ReferenceDY );if _ffg :=int (-_aee .ReferenceDX );_ffg > 0{_dfc =_ffg ;};_fcg :=_aee .ReferenceBitmap .GetByteIndex (_dfc ,_efd );if _aee .ReferenceDX > 0{_fge =int (_aee .ReferenceDX );};_bbg :=_aee .RegionBitmap .GetByteIndex (_fge ,_cg );switch _aee .TemplateID {case 0:_dea =_aee .decodeTemplate (_cg ,_egb ,_fdf ,_fad ,_ad ,_dc ,_dg ,_bbg ,_efd ,_fcg ,_aee ._dd );case 1:_dea =_aee .decodeTemplate (_cg ,_egb ,_fdf ,_fad ,_ad ,_dc ,_dg ,_bbg ,_efd ,_fcg ,_aee ._ee );};return _dea ;};func (_gaf *GenericRegion )setParametersMMR (_fff bool ,_bgcf ,_gec int64 ,_fbgd ,_fec uint32 ,_bfg byte ,_adf ,_fffg bool ,_ggag ,_ggfd []int8 ){_gaf .DataOffset =_bgcf ;_gaf .DataLength =_gec ;_gaf .RegionSegment =&RegionSegment {};_gaf .RegionSegment .BitmapHeight =_fbgd ;_gaf .RegionSegment .BitmapWidth =_fec ;_gaf .GBTemplate =_bfg ;_gaf .IsMMREncoded =_fff ;_gaf .IsTPGDon =_adf ;_gaf .GBAtX =_ggag ;_gaf .GBAtY =_ggfd ;};func (_gdcc *TextRegion )setContexts (_afg *_aa .DecoderStats ,_bcef *_aa .DecoderStats ,_cgfe *_aa .DecoderStats ,_efcc *_aa .DecoderStats ,_fecf *_aa .DecoderStats ,_cafbb *_aa .DecoderStats ,_aecga *_aa .DecoderStats ,_fcba *_aa .DecoderStats ,_cfde *_aa .DecoderStats ,_dbdf *_aa .DecoderStats ){_gdcc ._abga =_bcef ;_gdcc ._ccab =_cgfe ;_gdcc ._edfa =_efcc ;_gdcc ._fcgd =_fecf ;_gdcc ._bcba =_aecga ;_gdcc ._daca =_fcba ;_gdcc ._accdc =_cafbb ;_gdcc ._cegc =_cfde ;_gdcc ._dbdg =_dbdf ;_gdcc ._aggg =_afg ;};func (_fddgg *TextRegion )blit (_cadda *_cbd .Bitmap ,_cffe int64 )error {if _fddgg .IsTransposed ==0&&(_fddgg .ReferenceCorner ==2||_fddgg .ReferenceCorner ==3){_fddgg ._dbgb +=int64 (_cadda .Width -1);}else if _fddgg .IsTransposed ==1&&(_fddgg .ReferenceCorner ==0||_fddgg .ReferenceCorner ==2){_fddgg ._dbgb +=int64 (_cadda .Height -1);};_dbdab :=_fddgg ._dbgb ;if _fddgg .IsTransposed ==1{_dbdab ,_cffe =_cffe ,_dbdab ;};switch _fddgg .ReferenceCorner {case 0:_cffe -=int64 (_cadda .Height -1);case 2:_cffe -=int64 (_cadda .Height -1);_dbdab -=int64 (_cadda .Width -1);case 3:_dbdab -=int64 (_cadda .Width -1);};_acdb :=_cbd .Blit (_cadda ,_fddgg .RegionBitmap ,int (_dbdab ),int (_cffe ),_fddgg .CombinationOperator );if _acdb !=nil {return _acdb ;};if _fddgg .IsTransposed ==0&&(_fddgg .ReferenceCorner ==0||_fddgg .ReferenceCorner ==1){_fddgg ._dbgb +=int64 (_cadda .Width -1);};if _fddgg .IsTransposed ==1&&(_fddgg .ReferenceCorner ==1||_fddgg .ReferenceCorner ==3){_fddgg ._dbgb +=int64 (_cadda .Height -1);};return nil ;};func (_bdc Type )String ()string {switch _bdc {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_fdec *HalftoneRegion )renderPattern (_dcg [][]int )(_dcad error ){var _acgb ,_eddb int ;for _dbbe :=0;_dbbe < int (_fdec .HGridHeight );_dbbe ++{for _afbc :=0;_afbc < int (_fdec .HGridWidth );_afbc ++{_acgb =_fdec .computeX (_dbbe ,_afbc );_eddb =_fdec .computeY (_dbbe ,_afbc );_cce :=_fdec .Patterns [_dcg [_dbbe ][_afbc ]];if _dcad =_cbd .Blit (_cce ,_fdec .HalftoneRegionBitmap ,_acgb +int (_fdec .HGridX ),_eddb +int (_fdec .HGridY ),_fdec .CombinationOperator );_dcad !=nil {return _dcad ;};};};return nil ;};type TextRegion struct{_fdce _cb .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _cbd .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_dbgb int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_cbd .Bitmap ;Symbols []*_cbd .Bitmap ;_dccfb *_aa .Decoder ;_cbcg *GenericRefinementRegion ;_abga *_aa .DecoderStats ;_ccab *_aa .DecoderStats ;_edfa *_aa .DecoderStats ;_fcgd *_aa .DecoderStats ;_abb *_aa .DecoderStats ;_bcba *_aa .DecoderStats ;_daca *_aa .DecoderStats ;_accdc *_aa .DecoderStats ;_cegc *_aa .DecoderStats ;_dbdg *_aa .DecoderStats ;_aggg *_aa .DecoderStats ;_fcgg int8 ;_gdbf *_ae .FixedSizeTable ;Header *Header ;_dgfa _ae .Tabler ;_fafe _ae .Tabler ;_eaec _ae .Tabler ;_caad _ae .Tabler ;_acb _ae .Tabler ;_daba _ae .Tabler ;_ebac _ae .Tabler ;_bcad _ae .Tabler ;_gbcda ,_cefg map[int ]int ;_fddb []int ;_cbdda *_cbd .Points ;_cbaa *_cbd .Bitmaps ;_gdfa *_fc .IntSlice ;_adaa ,_fegf int ;_bgbed *_cbd .Boxes ;};func (_effc *Header )writeReferredToSegments (_fcgc _cb .BinaryWriter )(_abff int ,_cgee error ){const _bbcf ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";var (_cfbb uint16 ;_gdac uint32 ;);_edce :=_effc .referenceSize ();_gdga :=1;_fdfa :=make ([]byte ,_edce );for _ ,_gag :=range _effc .RTSNumbers {switch _edce {case 4:_gdac =uint32 (_gag );_b .BigEndian .PutUint32 (_fdfa ,_gdac );_gdga ,_cgee =_fcgc .Write (_fdfa );if _cgee !=nil {return 0,_fd .Wrap (_cgee ,_bbcf ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_cfbb =uint16 (_gag );_b .BigEndian .PutUint16 (_fdfa ,_cfbb );_gdga ,_cgee =_fcgc .Write (_fdfa );if _cgee !=nil {return 0,_fd .Wrap (_cgee ,_bbcf ,"\u0075\u0069\u006e\u0074\u0031\u0036");};default:if _cgee =_fcgc .WriteByte (byte (_gag ));_cgee !=nil {return 0,_fd .Wrap (_cgee ,_bbcf ,"\u0075\u0069\u006et\u0038");};};_abff +=_gdga ;};return _abff ,nil ;};func (_feab *PatternDictionary )checkInput ()error {if _feab .HdpHeight < 1||_feab .HdpWidth < 1{return _ff .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");};if _feab .IsMMREncoded {if _feab .HDTemplate !=0{_ec .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");};};return nil ;};func (_ddg *GenericRegion )decodeTemplate0a (_dge ,_acgc ,_ecdc int ,_bcaa ,_bcag int )(_deab error ){const _bea ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_ebba ,_fadbg int ;_eea ,_fbea int ;_fbbc byte ;_gcd int ;);if _dge >=1{_fbbc ,_deab =_ddg .Bitmap .GetByte (_bcag );if _deab !=nil {return _fd .Wrap (_deab ,_bea ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_eea =int (_fbbc );};if _dge >=2{_fbbc ,_deab =_ddg .Bitmap .GetByte (_bcag -_ddg .Bitmap .RowStride );if _deab !=nil {return _fd .Wrap (_deab ,_bea ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_fbea =int (_fbbc )<<6;};_ebba =(_eea &0xf0)|(_fbea &0x3800);for _cde :=0;_cde < _ecdc ;_cde =_gcd {var (_fdc byte ;_dfg int ;);_gcd =_cde +8;if _ffga :=_acgc -_cde ;_ffga > 8{_dfg =8;}else {_dfg =_ffga ;};if _dge > 0{_eea <<=8;if _gcd < _acgc {_fbbc ,_deab =_ddg .Bitmap .GetByte (_bcag +1);if _deab !=nil {return _fd .Wrap (_deab ,_bea ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_eea |=int (_fbbc );};};if _dge > 1{_dfag :=_bcag -_ddg .Bitmap .RowStride +1;_fbea <<=8;if _gcd < _acgc {_fbbc ,_deab =_ddg .Bitmap .GetByte (_dfag );if _deab !=nil {return _fd .Wrap (_deab ,_bea ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_fbea |=int (_fbbc )<<6;}else {_fbea |=0;};};for _aaf :=0;_aaf < _dfg ;_aaf ++{_gebb :=uint (7-_aaf );if _ddg ._aca {_fadbg =_ddg .overrideAtTemplate0a (_ebba ,_cde +_aaf ,_dge ,int (_fdc ),_aaf ,int (_gebb ));_ddg ._egce .SetIndex (int32 (_fadbg ));}else {_ddg ._egce .SetIndex (int32 (_ebba ));};var _feg int ;_feg ,_deab =_ddg ._bfd .DecodeBit (_ddg ._egce );if _deab !=nil {return _fd .Wrap (_deab ,_bea ,"");};_fdc |=byte (_feg )<<_gebb ;_ebba =((_ebba &0x7bf7)<<1)|_feg |((_eea >>_gebb )&0x10)|((_fbea >>_gebb )&0x800);};if _fbbgg :=_ddg .Bitmap .SetByte (_bcaa ,_fdc );_fbbgg !=nil {return _fd .Wrap (_fbbgg ,_bea ,"");};_bcaa ++;_bcag ++;};return nil ;};func (_adee *PageInformationSegment )Init (h *Header ,r _cb .StreamReader )(_eeac error ){_adee ._ggab =r ;if _eeac =_adee .parseHeader ();_eeac !=nil {return _fd .Wrap (_eeac ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};func (_eddfa *Header )readHeaderLength (_eed _cb .StreamReader ,_aafg int64 ){_eddfa .HeaderLength =_eed .StreamPosition ()-_aafg ;};type Regioner interface{GetRegionBitmap ()(*_cbd .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_dca *template1 )form (_aeg ,_aege ,_fgea ,_gba ,_bce int16 )int16 {return ((_aeg &0x02)<<8)|(_aege <<6)|((_fgea &0x03)<<4)|(_gba <<1)|_bce ;};func (_caef *SymbolDictionary )decodeAggregate (_gbef ,_eaba uint32 )error {var (_cgcb int64 ;_cbcd error ;);if _caef .IsHuffmanEncoded {_cgcb ,_cbcd =_caef .huffDecodeRefAggNInst ();if _cbcd !=nil {return _cbcd ;};}else {_dgag ,_cba :=_caef ._gcbg .DecodeInt (_caef ._gace );if _cba !=nil {return _cba ;};_cgcb =int64 (_dgag );};if _cgcb > 1{return _caef .decodeThroughTextRegion (_gbef ,_eaba ,uint32 (_cgcb ));}else if _cgcb ==1{return _caef .decodeRefinedSymbol (_gbef ,_eaba );};return nil ;};func (_aeba *PageInformationSegment )readContainsRefinement ()error {_bagec ,_dbag :=_aeba ._ggab .ReadBit ();if _dbag !=nil {return _dbag ;};if _bagec ==1{_aeba ._ddeb =true ;};return nil ;};func (_fgbf *Header )readHeaderFlags ()error {const _fgaa ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_ggdf ,_cbcb :=_fgbf .Reader .ReadBit ();if _cbcb !=nil {return _fd .Wrap (_cbcb ,_fgaa ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _ggdf !=0{_fgbf .RetainFlag =true ;};_ggdf ,_cbcb =_fgbf .Reader .ReadBit ();if _cbcb !=nil {return _fd .Wrap (_cbcb ,_fgaa ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _ggdf !=0{_fgbf .PageAssociationFieldSize =true ;};_bage ,_cbcb :=_fgbf .Reader .ReadBits (6);if _cbcb !=nil {return _fd .Wrap (_cbcb ,_fgaa ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_fgbf .Type =Type (int (_bage ));return nil ;};type template0 struct{};func (_bcbd *SymbolDictionary )readRefinementAtPixels (_aebgd int )error {_bcbd .SdrATX =make ([]int8 ,_aebgd );_bcbd .SdrATY =make ([]int8 ,_aebgd );var (_gcbga byte ;_gcdg error ;);for _eadac :=0;_eadac < _aebgd ;_eadac ++{_gcbga ,_gcdg =_bcbd ._gcff .ReadByte ();if _gcdg !=nil {return _gcdg ;};_bcbd .SdrATX [_eadac ]=int8 (_gcbga );_gcbga ,_gcdg =_bcbd ._gcff .ReadByte ();if _gcdg !=nil {return _gcdg ;};_bcbd .SdrATY [_eadac ]=int8 (_gcbga );};return nil ;};func (_ebd *GenericRegion )updateOverrideFlags ()error {const _deaa ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _ebd .GBAtX ==nil ||_ebd .GBAtY ==nil {return nil ;};if len (_ebd .GBAtX )!=len (_ebd .GBAtY ){return _fd .Errorf (_deaa ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_ebd .GBAtX ),len (_ebd .GBAtY ));};_ebd .GBAtOverride =make ([]bool ,len (_ebd .GBAtX ));switch _ebd .GBTemplate {case 0:if !_ebd .UseExtTemplates {if _ebd .GBAtX [0]!=3||_ebd .GBAtY [0]!=-1{_ebd .setOverrideFlag (0);};if _ebd .GBAtX [1]!=-3||_ebd .GBAtY [1]!=-1{_ebd .setOverrideFlag (1);};if _ebd .GBAtX [2]!=2||_ebd .GBAtY [2]!=-2{_ebd .setOverrideFlag (2);};if _ebd .GBAtX [3]!=-2||_ebd .GBAtY [3]!=-2{_ebd .setOverrideFlag (3);};}else {if _ebd .GBAtX [0]!=-2||_ebd .GBAtY [0]!=0{_ebd .setOverrideFlag (0);};if _ebd .GBAtX [1]!=0||_ebd .GBAtY [1]!=-2{_ebd .setOverrideFlag (1);};if _ebd .GBAtX [2]!=-2||_ebd .GBAtY [2]!=-1{_ebd .setOverrideFlag (2);};if _ebd .GBAtX [3]!=-1||_ebd .GBAtY [3]!=-2{_ebd .setOverrideFlag (3);};if _ebd .GBAtX [4]!=1||_ebd .GBAtY [4]!=-2{_ebd .setOverrideFlag (4);};if _ebd .GBAtX [5]!=2||_ebd .GBAtY [5]!=-1{_ebd .setOverrideFlag (5);};if _ebd .GBAtX [6]!=-3||_ebd .GBAtY [6]!=0{_ebd .setOverrideFlag (6);};if _ebd .GBAtX [7]!=-4||_ebd .GBAtY [7]!=0{_ebd .setOverrideFlag (7);};if _ebd .GBAtX [8]!=2||_ebd .GBAtY [8]!=-2{_ebd .setOverrideFlag (8);};if _ebd .GBAtX [9]!=3||_ebd .GBAtY [9]!=-1{_ebd .setOverrideFlag (9);};if _ebd .GBAtX [10]!=-2||_ebd .GBAtY [10]!=-2{_ebd .setOverrideFlag (10);};if _ebd .GBAtX [11]!=-3||_ebd .GBAtY [11]!=-1{_ebd .setOverrideFlag (11);};};case 1:if _ebd .GBAtX [0]!=3||_ebd .GBAtY [0]!=-1{_ebd .setOverrideFlag (0);};case 2:if _ebd .GBAtX [0]!=2||_ebd .GBAtY [0]!=-1{_ebd .setOverrideFlag (0);};case 3:if _ebd .GBAtX [0]!=2||_ebd .GBAtY [0]!=-1{_ebd .setOverrideFlag (0);};};return nil ;};func (_abdc *GenericRegion )decodeTemplate3 (_bbc ,_deac ,_dbd int ,_ffaa ,_fbbgc int )(_caac error ){const _adbc ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_cbcc ,_geeeb int ;_geac int ;_ege byte ;_aag ,_fcbf int ;);if _bbc >=1{_ege ,_caac =_abdc .Bitmap .GetByte (_fbbgc );if _caac !=nil {return _fd .Wrap (_caac ,_adbc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_geac =int (_ege );};_cbcc =(_geac >>1)&0x70;for _aaa :=0;_aaa < _dbd ;_aaa =_aag {var (_fccae byte ;_edbg int ;);_aag =_aaa +8;if _dab :=_deac -_aaa ;_dab > 8{_edbg =8;}else {_edbg =_dab ;};if _bbc >=1{_geac <<=8;if _aag < _deac {_ege ,_caac =_abdc .Bitmap .GetByte (_fbbgc +1);if _caac !=nil {return _fd .Wrap (_caac ,_adbc ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");};_geac |=int (_ege );};};for _cgbbf :=0;_cgbbf < _edbg ;_cgbbf ++{if _abdc ._aca {_geeeb =_abdc .overrideAtTemplate3 (_cbcc ,_aaa +_cgbbf ,_bbc ,int (_fccae ),_cgbbf );_abdc ._egce .SetIndex (int32 (_geeeb ));}else {_abdc ._egce .SetIndex (int32 (_cbcc ));};_fcbf ,_caac =_abdc ._bfd .DecodeBit (_abdc ._egce );if _caac !=nil {return _fd .Wrap (_caac ,_adbc ,"");};_fccae |=byte (_fcbf )<<byte (7-_cgbbf );_cbcc =((_cbcc &0x1f7)<<1)|_fcbf |((_geac >>uint (8-_cgbbf ))&0x010);};if _cff :=_abdc .Bitmap .SetByte (_ffaa ,_fccae );_cff !=nil {return _fd .Wrap (_cff ,_adbc ,"");};_ffaa ++;_fbbgc ++;};return nil ;};func (_ffbc *PageInformationSegment )CombinationOperator ()_cbd .CombinationOperator {return _ffbc ._bde ;};func (_efef *TextRegion )decodeRdw ()(int64 ,error ){const _bcagb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _efef .IsHuffmanEncoded {if _efef .SbHuffRDWidth ==3{if _efef ._caad ==nil {var (_eagfg int ;_bbcfe error ;);if _efef .SbHuffFS ==3{_eagfg ++;};if _efef .SbHuffDS ==3{_eagfg ++;};if _efef .SbHuffDT ==3{_eagfg ++;};_efef ._caad ,_bbcfe =_efef .getUserTable (_eagfg );if _bbcfe !=nil {return 0,_fd .Wrap (_bbcfe ,_bcagb ,"");};};return _efef ._caad .Decode (_efef ._fdce );};_eedf ,_ccgb :=_ae .GetStandardTable (14+int (_efef .SbHuffRDWidth ));if _ccgb !=nil {return 0,_fd .Wrap (_ccgb ,_bcagb ,"");};return _eedf .Decode (_efef ._fdce );};_ggdeb ,_ggfb :=_efef ._dccfb .DecodeInt (_efef ._bcba );if _ggfb !=nil {return 0,_fd .Wrap (_ggfb ,_bcagb ,"");};return int64 (_ggdeb ),nil ;};func (_ddab *SymbolDictionary )getSbSymCodeLen ()int8 {_facg :=int8 (_f .Ceil (_f .Log (float64 (_ddab ._gbda +_ddab .NumberOfNewSymbols ))/_f .Log (2)));if _ddab .IsHuffmanEncoded &&_facg < 1{return 1;};return _facg ;};func (_gcfe *SymbolDictionary )decodeHeightClassBitmap (_acdc *_cbd .Bitmap ,_abg int64 ,_bgaf int ,_dgcae []int )error {for _edbe :=_abg ;_edbe < int64 (_gcfe ._bfa );_edbe ++{var _adac int ;for _aefbd :=_abg ;_aefbd <=_edbe -1;_aefbd ++{_adac +=_dgcae [_aefbd ];};_eebb :=_cd .Rect (_adac ,0,_adac +_dgcae [_edbe ],_bgaf );_adacb ,_cbbe :=_cbd .Extract (_eebb ,_acdc );if _cbbe !=nil {return _cbbe ;};_gcfe ._acce [_edbe ]=_adacb ;_gcfe ._deagf =append (_gcfe ._deagf ,_adacb );};return nil ;};func (_cgce *GenericRegion )computeSegmentDataStructure ()error {_cgce .DataOffset =_cgce ._cfcd .StreamPosition ();_cgce .DataHeaderLength =_cgce .DataOffset -_cgce .DataHeaderOffset ;_cgce .DataLength =int64 (_cgce ._cfcd .Length ())-_cgce .DataHeaderLength ;return nil ;};func (_dccf *PageInformationSegment )encodeFlags (_gfda _cb .BinaryWriter )(_fbf error ){const _eeg ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _fbf =_gfda .SkipBits (1);_fbf !=nil {return _fd .Wrap (_fbf ,_eeg ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _agd int ;if _dccf .CombinationOperatorOverrideAllowed (){_agd =1;};if _fbf =_gfda .WriteBit (_agd );_fbf !=nil {return _fd .Wrap (_fbf ,_eeg ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_agd =0;if _dccf ._bdgf {_agd =1;};if _fbf =_gfda .WriteBit (_agd );_fbf !=nil {return _fd .Wrap (_fbf ,_eeg ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _fbf =_gfda .WriteBit ((int (_dccf ._bde )>>1)&0x01);_fbf !=nil {return _fd .Wrap (_fbf ,_eeg ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _fbf =_gfda .WriteBit (int (_dccf ._bde )&0x01);_fbf !=nil {return _fd .Wrap (_fbf ,_eeg ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_agd =int (_dccf ._ddda );if _fbf =_gfda .WriteBit (_agd );_fbf !=nil {return _fd .Wrap (_fbf ,_eeg ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_agd =0;if _dccf ._ddeb {_agd =1;};if _fbf =_gfda .WriteBit (_agd );_fbf !=nil {return _fd .Wrap (_fbf ,_eeg ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_agd =0;if _dccf .IsLossless {_agd =1;};if _fbf =_gfda .WriteBit (_agd );_fbf !=nil {return _fd .Wrap (_fbf ,_eeg ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_bgdaf *Header )referenceSize ()uint {switch {case _bgdaf .SegmentNumber <=255:return 1;case _bgdaf .SegmentNumber <=65535:return 2;default:return 4;};};func (_cddc *PageInformationSegment )readIsLossless ()error {_gaea ,_eca :=_cddc ._ggab .ReadBit ();if _eca !=nil {return _eca ;};if _gaea ==1{_cddc .IsLossless =true ;};return nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func _cdfe (_affag _cb .StreamReader ,_ccgc *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_ecb :_affag ,RegionInfo :NewRegionSegment (_affag ),_dbg :_ccgc ,_dd :&template0 {},_ee :&template1 {}};};type Type int ;func (_fbce *TextRegion )readRegionFlags ()error {var (_ecde int ;_bgdgg uint64 ;_ebde error ;);_ecde ,_ebde =_fbce ._fdce .ReadBit ();if _ebde !=nil {return _ebde ;};_fbce .SbrTemplate =int8 (_ecde );_bgdgg ,_ebde =_fbce ._fdce .ReadBits (5);if _ebde !=nil {return _ebde ;};_fbce .SbDsOffset =int8 (_bgdgg );if _fbce .SbDsOffset > 0x0f{_fbce .SbDsOffset -=0x20;};_ecde ,_ebde =_fbce ._fdce .ReadBit ();if _ebde !=nil {return _ebde ;};_fbce .DefaultPixel =int8 (_ecde );_bgdgg ,_ebde =_fbce ._fdce .ReadBits (2);if _ebde !=nil {return _ebde ;};_fbce .CombinationOperator =_cbd .CombinationOperator (int (_bgdgg )&0x3);_ecde ,_ebde =_fbce ._fdce .ReadBit ();if _ebde !=nil {return _ebde ;};_fbce .IsTransposed =int8 (_ecde );_bgdgg ,_ebde =_fbce ._fdce .ReadBits (2);if _ebde !=nil {return _ebde ;};_fbce .ReferenceCorner =int16 (_bgdgg )&0x3;_bgdgg ,_ebde =_fbce ._fdce .ReadBits (2);if _ebde !=nil {return _ebde ;};_fbce .LogSBStrips =int16 (_bgdgg )&0x3;_fbce .SbStrips =1<<uint (_fbce .LogSBStrips );_ecde ,_ebde =_fbce ._fdce .ReadBit ();if _ebde !=nil {return _ebde ;};if _ecde ==1{_fbce .UseRefinement =true ;};_ecde ,_ebde =_fbce ._fdce .ReadBit ();if _ebde !=nil {return _ebde ;};if _ecde ==1{_fbce .IsHuffmanEncoded =true ;};return nil ;};func (_daae *Header )writeReferredToCount (_gbf _cb .BinaryWriter )(_dfagf int ,_dddg error ){const _egab ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_daae .RTSNumbers =make ([]int ,len (_daae .RTSegments ));for _bgab ,_debb :=range _daae .RTSegments {_daae .RTSNumbers [_bgab ]=int (_debb .SegmentNumber );};if len (_daae .RTSNumbers )<=4{var _cfcf byte ;if len (_daae .RetainBits )>=1{_cfcf =_daae .RetainBits [0];};_cfcf |=byte (len (_daae .RTSNumbers ))<<5;if _dddg =_gbf .WriteByte (_cfcf );_dddg !=nil {return 0,_fd .Wrap (_dddg ,_egab ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_dbc :=uint32 (len (_daae .RTSNumbers ));_cdbd :=make ([]byte ,4+_fc .Ceil (len (_daae .RTSNumbers )+1,8));_dbc |=0x7<<29;_b .BigEndian .PutUint32 (_cdbd ,_dbc );copy (_cdbd [1:],_daae .RetainBits );_dfagf ,_dddg =_gbf .Write (_cdbd );if _dddg !=nil {return 0,_fd .Wrap (_dddg ,_egab ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _dfagf ,nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_bccd *SymbolDictionary )decodeThroughTextRegion (_bbfadf ,_fcbc ,_adfc uint32 )error {if _bccd ._fgfg ==nil {_bccd ._fgfg =_gdgbc (_bccd ._gcff ,nil );_bccd ._fgfg .setContexts (_bccd ._bafa ,_aa .NewStats (512,1),_aa .NewStats (512,1),_aa .NewStats (512,1),_aa .NewStats (512,1),_bccd ._dbge ,_aa .NewStats (512,1),_aa .NewStats (512,1),_aa .NewStats (512,1),_aa .NewStats (512,1));};if _fggc :=_bccd .setSymbolsArray ();_fggc !=nil {return _fggc ;};_bccd ._fgfg .setParameters (_bccd ._gcbg ,_bccd .IsHuffmanEncoded ,true ,_bbfadf ,_fcbc ,_adfc ,1,_bccd ._gbda +_bccd ._bfa ,0,0,0,1,0,0,0,0,0,0,0,0,0,_bccd .SdrTemplate ,_bccd .SdrATX ,_bccd .SdrATY ,_bccd ._deagf ,_bccd ._feae );return _bccd .addSymbol (_bccd ._fgfg );};func (_aeae *RegionSegment )parseHeader ()error {const _ggfg ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_ec .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_ec .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_gebgg ,_ccef :=_aeae ._gedd .ReadBits (32);if _ccef !=nil {return _fd .Wrap (_ccef ,_ggfg ,"\u0077\u0069\u0064t\u0068");};_aeae .BitmapWidth =uint32 (_gebgg &_f .MaxUint32 );_gebgg ,_ccef =_aeae ._gedd .ReadBits (32);if _ccef !=nil {return _fd .Wrap (_ccef ,_ggfg ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_aeae .BitmapHeight =uint32 (_gebgg &_f .MaxUint32 );_gebgg ,_ccef =_aeae ._gedd .ReadBits (32);if _ccef !=nil {return _fd .Wrap (_ccef ,_ggfg ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_aeae .XLocation =uint32 (_gebgg &_f .MaxUint32 );_gebgg ,_ccef =_aeae ._gedd .ReadBits (32);if _ccef !=nil {return _fd .Wrap (_ccef ,_ggfg ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_aeae .YLocation =uint32 (_gebgg &_f .MaxUint32 );if _ ,_ccef =_aeae ._gedd .ReadBits (5);_ccef !=nil {return _fd .Wrap (_ccef ,_ggfg ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");};if _ccef =_aeae .readCombinationOperator ();_ccef !=nil {return _fd .Wrap (_ccef ,_ggfg ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_aged *TextRegion )decodeIb (_edfc ,_daga int64 )(*_cbd .Bitmap ,error ){const _cbee ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_gbcbf error ;_ccda *_cbd .Bitmap ;);if _edfc ==0{if int (_daga )> len (_aged .Symbols )-1{return nil ,_fd .Error (_cbee ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");};return _aged .Symbols [int (_daga )],nil ;};var _dgda ,_eacd ,_badb ,_dfeda int64 ;_dgda ,_gbcbf =_aged .decodeRdw ();if _gbcbf !=nil {return nil ,_fd .Wrap (_gbcbf ,_cbee ,"");};_eacd ,_gbcbf =_aged .decodeRdh ();if _gbcbf !=nil {return nil ,_fd .Wrap (_gbcbf ,_cbee ,"");};_badb ,_gbcbf =_aged .decodeRdx ();if _gbcbf !=nil {return nil ,_fd .Wrap (_gbcbf ,_cbee ,"");};_dfeda ,_gbcbf =_aged .decodeRdy ();if _gbcbf !=nil {return nil ,_fd .Wrap (_gbcbf ,_cbee ,"");};if _aged .IsHuffmanEncoded {if _ ,_gbcbf =_aged .decodeSymInRefSize ();_gbcbf !=nil {return nil ,_fd .Wrap (_gbcbf ,_cbee ,"");};_aged ._fdce .Align ();};_gafad :=_aged .Symbols [_daga ];_bfda :=uint32 (_gafad .Width );_affagb :=uint32 (_gafad .Height );_gaee :=int32 (uint32 (_dgda )>>1)+int32 (_badb );_dbcff :=int32 (uint32 (_eacd )>>1)+int32 (_dfeda );if _aged ._cbcg ==nil {_aged ._cbcg =_cdfe (_aged ._fdce ,nil );};_aged ._cbcg .setParameters (_aged ._aggg ,_aged ._dccfb ,_aged .SbrTemplate ,_bfda +uint32 (_dgda ),_affagb +uint32 (_eacd ),_gafad ,_gaee ,_dbcff ,false ,_aged .SbrATX ,_aged .SbrATY );_ccda ,_gbcbf =_aged ._cbcg .GetRegionBitmap ();if _gbcbf !=nil {return nil ,_fd .Wrap (_gbcbf ,_cbee ,"\u0067\u0072\u0066");};if _aged .IsHuffmanEncoded {_aged ._fdce .Align ();};return _ccda ,nil ;};func (_fag *GenericRefinementRegion )String ()string {_ggd :=&_ca .Builder {};_ggd .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_ggd .WriteString (_fag .RegionInfo .String ()+"\u000a");_ggd .WriteString (_e .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_fag .IsTPGROn ));_ggd .WriteString (_e .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_fag .TemplateID ));_ggd .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_fag .GrAtX ));_ggd .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_fag .GrAtY ));_ggd .WriteString (_e .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_fag .ReferenceDX ));_ggd .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_fag .ReferenceDY ));return _ggd .String ();};func (_dggag *SymbolDictionary )parseHeader ()(_edgf error ){_ec .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _edgf !=nil {_ec .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_edgf );}else {_ec .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _edgf =_dggag .readRegionFlags ();_edgf !=nil {return _edgf ;};if _edgf =_dggag .setAtPixels ();_edgf !=nil {return _edgf ;};if _edgf =_dggag .setRefinementAtPixels ();_edgf !=nil {return _edgf ;};if _edgf =_dggag .readNumberOfExportedSymbols ();_edgf !=nil {return _edgf ;};if _edgf =_dggag .readNumberOfNewSymbols ();_edgf !=nil {return _edgf ;};if _edgf =_dggag .setInSyms ();_edgf !=nil {return _edgf ;};if _dggag ._gfdc {_bgge :=_dggag .Header .RTSegments ;for _bcbeb :=len (_bgge )-1;_bcbeb >=0;_bcbeb --{if _bgge [_bcbeb ].Type ==0{_ecec ,_beba :=_bgge [_bcbeb ].SegmentData .(*SymbolDictionary );if !_beba {_edgf =_e .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_bgge [_bcbeb ]);return _edgf ;};if _ecec ._gfdc {_dggag .setRetainedCodingContexts (_ecec );};break ;};};};if _edgf =_dggag .checkInput ();_edgf !=nil {return _edgf ;};return nil ;};func (_faag *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _faag .SdHuffDecodeHeightSelection {case 0:_adfb ,_fdca :=_ae .GetStandardTable (4);if _fdca !=nil {return 0,_fdca ;};return _adfb .Decode (_faag ._gcff );case 1:_dfgd ,_bcfc :=_ae .GetStandardTable (5);if _bcfc !=nil {return 0,_bcfc ;};return _dfgd .Decode (_faag ._gcff );case 3:if _faag ._faaf ==nil {_ebgb ,_bbcd :=_ae .GetStandardTable (0);if _bbcd !=nil {return 0,_bbcd ;};_faag ._faaf =_ebgb ;};return _faag ._faaf .Decode (_faag ._gcff );};return 0,nil ;};func (_gef *SymbolDictionary )Encode (w _cb .BinaryWriter )(_ddce int ,_dfafe error ){const _aecg ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";if _gef ==nil {return 0,_fd .Error (_aecg ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _ddce ,_dfafe =_gef .encodeFlags (w );_dfafe !=nil {return _ddce ,_fd .Wrap (_dfafe ,_aecg ,"");};_afaa ,_dfafe :=_gef .encodeATFlags (w );if _dfafe !=nil {return _ddce ,_fd .Wrap (_dfafe ,_aecg ,"");};_ddce +=_afaa ;if _afaa ,_dfafe =_gef .encodeRefinementATFlags (w );_dfafe !=nil {return _ddce ,_fd .Wrap (_dfafe ,_aecg ,"");};_ddce +=_afaa ;if _afaa ,_dfafe =_gef .encodeNumSyms (w );_dfafe !=nil {return _ddce ,_fd .Wrap (_dfafe ,_aecg ,"");};_ddce +=_afaa ;if _afaa ,_dfafe =_gef .encodeSymbols (w );_dfafe !=nil {return _ddce ,_fd .Wrap (_dfafe ,_aecg ,"");};_ddce +=_afaa ;return _ddce ,nil ;};const (ORandom OrganizationType =iota ;OSequential ;);func (_ggfdd *PageInformationSegment )readWidthAndHeight ()error {_aefb ,_dcgd :=_ggfdd ._ggab .ReadBits (32);if _dcgd !=nil {return _dcgd ;};_ggfdd .PageBMWidth =int (_aefb &_f .MaxInt32 );_aefb ,_dcgd =_ggfdd ._ggab .ReadBits (32);if _dcgd !=nil {return _dcgd ;};_ggfdd .PageBMHeight =int (_aefb &_f .MaxInt32 );return nil ;};func (_edcg *HalftoneRegion )computeGrayScalePlanes (_ebfcc []*_cbd .Bitmap ,_fbcf int )([][]int ,error ){_egaf :=make ([][]int ,_edcg .HGridHeight );for _abf :=0;_abf < len (_egaf );_abf ++{_egaf [_abf ]=make ([]int ,_edcg .HGridWidth );};for _bfdc :=0;_bfdc < int (_edcg .HGridHeight );_bfdc ++{for _fac :=0;_fac < int (_edcg .HGridWidth );_fac +=8{var _eecb int ;if _abdf :=int (_edcg .HGridWidth )-_fac ;_abdf > 8{_eecb =8;}else {_eecb =_abdf ;};_dcf :=_ebfcc [0].GetByteIndex (_fac ,_bfdc );for _bfcd :=0;_bfcd < _eecb ;_bfcd ++{_baf :=_bfcd +_fac ;_egaf [_bfdc ][_baf ]=0;for _gdcg :=0;_gdcg < _fbcf ;_gdcg ++{_aceb ,_afeb :=_ebfcc [_gdcg ].GetByte (_dcf );if _afeb !=nil {return nil ,_afeb ;};_gae :=_aceb >>uint (7-_baf &7);_geae :=_gae &1;_fgdd :=1<<uint (_gdcg );_cfba :=int (_geae )*_fgdd ;_egaf [_bfdc ][_baf ]+=_cfba ;};};};};return _egaf ,nil ;};func (_gcbe *SymbolDictionary )decodeRefinedSymbol (_dbfe ,_ffbbc uint32 )error {var (_acgd int ;_ecae ,_dead int32 ;);if _gcbe .IsHuffmanEncoded {_bcbec ,_fcbcg :=_gcbe ._gcff .ReadBits (byte (_gcbe ._feae ));if _fcbcg !=nil {return _fcbcg ;};_acgd =int (_bcbec );_cga ,_fcbcg :=_ae .GetStandardTable (15);if _fcbcg !=nil {return _fcbcg ;};_accb ,_fcbcg :=_cga .Decode (_gcbe ._gcff );if _fcbcg !=nil {return _fcbcg ;};_ecae =int32 (_accb );_accb ,_fcbcg =_cga .Decode (_gcbe ._gcff );if _fcbcg !=nil {return _fcbcg ;};_dead =int32 (_accb );_cga ,_fcbcg =_ae .GetStandardTable (1);if _fcbcg !=nil {return _fcbcg ;};if _ ,_fcbcg =_cga .Decode (_gcbe ._gcff );_fcbcg !=nil {return _fcbcg ;};_gcbe ._gcff .Align ();}else {_ecbd ,_gbcd :=_gcbe ._gcbg .DecodeIAID (uint64 (_gcbe ._feae ),_gcbe ._dbge );if _gbcd !=nil {return _gbcd ;};_acgd =int (_ecbd );_ecae ,_gbcd =_gcbe ._gcbg .DecodeInt (_gcbe ._ddb );if _gbcd !=nil {return _gbcd ;};_dead ,_gbcd =_gcbe ._gcbg .DecodeInt (_gcbe ._gcgc );if _gbcd !=nil {return _gbcd ;};};if _fbec :=_gcbe .setSymbolsArray ();_fbec !=nil {return _fbec ;};_gaa :=_gcbe ._deagf [_acgd ];if _gcdf :=_gcbe .decodeNewSymbols (_dbfe ,_ffbbc ,_gaa ,_ecae ,_dead );_gcdf !=nil {return _gcdf ;};if _gcbe .IsHuffmanEncoded {_gcbe ._gcff .Align ();};return nil ;};func (_eff *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _eff .RegionInfo };func (_dfba *SymbolDictionary )encodeATFlags (_dcadd _cb .BinaryWriter )(_deed int ,_dacc error ){const _dbba ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _dfba .IsHuffmanEncoded ||_dfba .SdTemplate !=0{return 0,nil ;};_bcg :=4;if _dfba .SdTemplate !=0{_bcg =1;};for _ggga :=0;_ggga < _bcg ;_ggga ++{if _dacc =_dcadd .WriteByte (byte (_dfba .SdATX [_ggga ]));_dacc !=nil {return _deed ,_fd .Wrapf (_dacc ,_dbba ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_ggga );};_deed ++;if _dacc =_dcadd .WriteByte (byte (_dfba .SdATY [_ggga ]));_dacc !=nil {return _deed ,_fd .Wrapf (_dacc ,_dbba ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_ggga );};_deed ++;};return _deed ,nil ;};func (_aafd *PageInformationSegment )DefaultPixelValue ()uint8 {return _aafd ._ddda };var _ _ae .BasicTabler =&TableSegment {};func _gdgbc (_bddg _cb .StreamReader ,_cgfg *Header )*TextRegion {_eabd :=&TextRegion {_fdce :_bddg ,Header :_cgfg ,RegionInfo :NewRegionSegment (_bddg )};return _eabd ;};func (_cedf *PatternDictionary )readIsMMREncoded ()error {_fbfd ,_fbd :=_cedf ._dage .ReadBit ();if _fbd !=nil {return _fbd ;};if _fbfd !=0{_cedf .IsMMREncoded =true ;};return nil ;};func NewGenericRegion (r _cb .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_cfcd :r };};func (_gdf *HalftoneRegion )shiftAndFill (_bcac int )int {_bcac >>=8;if _bcac < 0{_bceb :=int (_f .Log (float64 (_gad (_bcac )))/_f .Log (2));_caab :=31-_bceb ;for _ebg :=1;_ebg < _caab ;_ebg ++{_bcac |=1<<uint (31-_ebg );};};return _bcac ;};func (_aeab *TextRegion )getUserTable (_edcb int )(_ae .Tabler ,error ){const _cecb ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _bdcg int ;for _ ,_cbgg :=range _aeab .Header .RTSegments {if _cbgg .Type ==53{if _bdcg ==_edcb {_ffc ,_gfg :=_cbgg .GetSegmentData ();if _gfg !=nil {return nil ,_gfg ;};_facab ,_agagg :=_ffc .(*TableSegment );if !_agagg {_ec .Log .Debug (_e .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_cbgg .SegmentNumber ));return nil ,_fd .Error (_cecb ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};return _ae .NewEncodedTable (_facab );};_bdcg ++;};};return nil ,nil ;};func (_bcdf *TextRegion )decodeRdh ()(int64 ,error ){const _cecg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _bcdf .IsHuffmanEncoded {if _bcdf .SbHuffRDHeight ==3{if _bcdf ._acb ==nil {var (_adff int ;_cgfa error ;);if _bcdf .SbHuffFS ==3{_adff ++;};if _bcdf .SbHuffDS ==3{_adff ++;};if _bcdf .SbHuffDT ==3{_adff ++;};if _bcdf .SbHuffRDWidth ==3{_adff ++;};_bcdf ._acb ,_cgfa =_bcdf .getUserTable (_adff );if _cgfa !=nil {return 0,_fd .Wrap (_cgfa ,_cecg ,"");};};return _bcdf ._acb .Decode (_bcdf ._fdce );};_bgbb ,_dgbg :=_ae .GetStandardTable (14+int (_bcdf .SbHuffRDHeight ));if _dgbg !=nil {return 0,_fd .Wrap (_dgbg ,_cecg ,"");};return _bgbb .Decode (_bcdf ._fdce );};_ecdg ,_cggaa :=_bcdf ._dccfb .DecodeInt (_bcdf ._daca );if _cggaa !=nil {return 0,_fd .Wrap (_cggaa ,_cecg ,"");};return int64 (_ecdg ),nil ;};func (_dgac *TextRegion )encodeFlags (_acbg _cb .BinaryWriter )(_fdac int ,_fffc error ){const _gddg ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _fffc =_acbg .WriteBit (int (_dgac .SbrTemplate ));_fffc !=nil {return _fdac ,_fd .Wrap (_fffc ,_gddg ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_fffc =_acbg .WriteBits (uint64 (_dgac .SbDsOffset ),5);_fffc !=nil {return _fdac ,_fd .Wrap (_fffc ,_gddg ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _fffc =_acbg .WriteBit (int (_dgac .DefaultPixel ));_fffc !=nil {return _fdac ,_fd .Wrap (_fffc ,_gddg ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_fffc =_acbg .WriteBits (uint64 (_dgac .CombinationOperator ),2);_fffc !=nil {return _fdac ,_fd .Wrap (_fffc ,_gddg ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _fffc =_acbg .WriteBit (int (_dgac .IsTransposed ));_fffc !=nil {return _fdac ,_fd .Wrap (_fffc ,_gddg ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_fffc =_acbg .WriteBits (uint64 (_dgac .ReferenceCorner ),2);_fffc !=nil {return _fdac ,_fd .Wrap (_fffc ,_gddg ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_fffc =_acbg .WriteBits (uint64 (_dgac .LogSBStrips ),2);_fffc !=nil {return _fdac ,_fd .Wrap (_fffc ,_gddg ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _dafd int ;if _dgac .UseRefinement {_dafd =1;};if _fffc =_acbg .WriteBit (_dafd );_fffc !=nil {return _fdac ,_fd .Wrap (_fffc ,_gddg ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_dafd =0;if _dgac .IsHuffmanEncoded {_dafd =1;};if _fffc =_acbg .WriteBit (_dafd );_fffc !=nil {return _fdac ,_fd .Wrap (_fffc ,_gddg ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_fdac =2;return _fdac ,nil ;};func (_cdgb *TextRegion )encodeSymbols (_fgad _cb .BinaryWriter )(_gebed int ,_aeec error ){const _eggb ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";_adbd :=make ([]byte ,4);_b .BigEndian .PutUint32 (_adbd ,_cdgb .NumberOfSymbols );if _gebed ,_aeec =_fgad .Write (_adbd );_aeec !=nil {return _gebed ,_fd .Wrap (_aeec ,_eggb ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");};_ebeg ,_aeec :=_cbd .NewClassedPoints (_cdgb ._cbdda ,_cdgb ._fddb );if _aeec !=nil {return 0,_fd .Wrap (_aeec ,_eggb ,"");};var _egdd ,_gccb int ;_gdeb :=_bb .New ();_gdeb .Init ();if _aeec =_gdeb .EncodeInteger (_bb .IADT ,0);_aeec !=nil {return _gebed ,_fd .Wrap (_aeec ,_eggb ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");};_abbb ,_aeec :=_ebeg .GroupByY ();if _aeec !=nil {return 0,_fd .Wrap (_aeec ,_eggb ,"");};for _ ,_bbea :=range _abbb {_fage :=int (_bbea .YAtIndex (0));_bfdca :=_fage -_egdd ;if _aeec =_gdeb .EncodeInteger (_bb .IADT ,_bfdca );_aeec !=nil {return _gebed ,_fd .Wrap (_aeec ,_eggb ,"");};var _ebcd int ;for _befc ,_dbbgb :=range _bbea .IntSlice {switch _befc {case 0:_ddeg :=int (_bbea .XAtIndex (_befc ))-_gccb ;if _aeec =_gdeb .EncodeInteger (_bb .IAFS ,_ddeg );_aeec !=nil {return _gebed ,_fd .Wrap (_aeec ,_eggb ,"");};_gccb +=_ddeg ;_ebcd =_gccb ;default:_dgcfb :=int (_bbea .XAtIndex (_befc ))-_ebcd ;if _aeec =_gdeb .EncodeInteger (_bb .IADS ,_dgcfb );_aeec !=nil {return _gebed ,_fd .Wrap (_aeec ,_eggb ,"");};_ebcd +=_dgcfb ;};_ceff ,_bada :=_cdgb ._gdfa .Get (_dbbgb );if _bada !=nil {return _gebed ,_fd .Wrap (_bada ,_eggb ,"");};_fdcbe ,_dbfd :=_cdgb ._gbcda [_ceff ];if !_dbfd {_fdcbe ,_dbfd =_cdgb ._cefg [_ceff ];if !_dbfd {return _gebed ,_fd .Errorf (_eggb ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_ceff );};};if _bada =_gdeb .EncodeIAID (_cdgb ._fegf ,_fdcbe );_bada !=nil {return _gebed ,_fd .Wrap (_bada ,_eggb ,"");};};if _aeec =_gdeb .EncodeOOB (_bb .IADS );_aeec !=nil {return _gebed ,_fd .Wrap (_aeec ,_eggb ,"");};};_gdeb .Final ();_aebga ,_aeec :=_gdeb .WriteTo (_fgad );if _aeec !=nil {return _gebed ,_fd .Wrap (_aeec ,_eggb ,"");};_gebed +=int (_aebga );return _gebed ,nil ;};func (_cebg *Header )String ()string {_ddcd :=&_ca .Builder {};_ddcd .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_ddcd .WriteString (_e .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_cebg .SegmentNumber ));_ddcd .WriteString (_e .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_cebg .Type ));_ddcd .WriteString (_e .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_cebg .RetainFlag ));_ddcd .WriteString (_e .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_cebg .PageAssociation ));_ddcd .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_cebg .PageAssociationFieldSize ));_ddcd .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_adc :=range _cebg .RTSNumbers {_ddcd .WriteString (_e .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_adc ));};_ddcd .WriteString (_e .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_cebg .HeaderLength ));_ddcd .WriteString (_e .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_cebg .SegmentDataLength ));_ddcd .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_cebg .SegmentDataStartOffset ));return _ddcd .String ();};func (_fbed *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _fbed ._acc };func (_dacg *TextRegion )setCodingStatistics ()error {if _dacg ._abga ==nil {_dacg ._abga =_aa .NewStats (512,1);};if _dacg ._ccab ==nil {_dacg ._ccab =_aa .NewStats (512,1);};if _dacg ._edfa ==nil {_dacg ._edfa =_aa .NewStats (512,1);};if _dacg ._fcgd ==nil {_dacg ._fcgd =_aa .NewStats (512,1);};if _dacg ._abb ==nil {_dacg ._abb =_aa .NewStats (512,1);};if _dacg ._bcba ==nil {_dacg ._bcba =_aa .NewStats (512,1);};if _dacg ._daca ==nil {_dacg ._daca =_aa .NewStats (512,1);};if _dacg ._accdc ==nil {_dacg ._accdc =_aa .NewStats (1<<uint (_dacg ._fcgg ),1);};if _dacg ._cegc ==nil {_dacg ._cegc =_aa .NewStats (512,1);};if _dacg ._dbdg ==nil {_dacg ._dbdg =_aa .NewStats (512,1);};if _dacg ._dccfb ==nil {var _fdbc error ;_dacg ._dccfb ,_fdbc =_aa .New (_dacg ._fdce );if _fdbc !=nil {return _fdbc ;};};return nil ;};func (_dcaa *PageInformationSegment )readResolution ()error {_caaee ,_cfcdb :=_dcaa ._ggab .ReadBits (32);if _cfcdb !=nil {return _cfcdb ;};_dcaa .ResolutionX =int (_caaee &_f .MaxInt32 );_caaee ,_cfcdb =_dcaa ._ggab .ReadBits (32);if _cfcdb !=nil {return _cfcdb ;};_dcaa .ResolutionY =int (_caaee &_f .MaxInt32 );return nil ;};func (_adaf *TableSegment )HtHigh ()int32 {return _adaf ._aegc };func (_afd *GenericRegion )overrideAtTemplate3 (_ccd ,_agec ,_cabg ,_bggd ,_bbf int )int {_ccd &=0x3EF;if _afd .GBAtY [0]==0&&_afd .GBAtX [0]>=-int8 (_bbf ){_ccd |=(_bggd >>uint (7-(int8 (_bbf )+_afd .GBAtX [0]))&0x1)<<4;}else {_ccd |=int (_afd .getPixel (_agec +int (_afd .GBAtX [0]),_cabg +int (_afd .GBAtY [0])))<<4;};return _ccd ;};func (_agecb *TableSegment )StreamReader ()_cb .StreamReader {return _agecb ._eagb };func (_fdba *TextRegion )GetRegionBitmap ()(*_cbd .Bitmap ,error ){if _fdba .RegionBitmap !=nil {return _fdba .RegionBitmap ,nil ;};if !_fdba .IsHuffmanEncoded {if _eeagd :=_fdba .setCodingStatistics ();_eeagd !=nil {return nil ,_eeagd ;};};if _feed :=_fdba .createRegionBitmap ();_feed !=nil {return nil ,_feed ;};if _bcdb :=_fdba .decodeSymbolInstances ();_bcdb !=nil {return nil ,_bcdb ;};return _fdba .RegionBitmap ,nil ;};func (_bbac *PatternDictionary )extractPatterns (_dgga *_cbd .Bitmap )error {var _befe int ;_bdfe :=make ([]*_cbd .Bitmap ,_bbac .GrayMax +1);for _befe <=int (_bbac .GrayMax ){_ebbe :=int (_bbac .HdpWidth )*_befe ;_aeeb :=_cd .Rect (_ebbe ,0,_ebbe +int (_bbac .HdpWidth ),int (_bbac .HdpHeight ));_dfd ,_dgdfe :=_cbd .Extract (_aeeb ,_dgga );if _dgdfe !=nil {return _dgdfe ;};_bdfe [_befe ]=_dfd ;_befe ++;};_bbac .Patterns =_bdfe ;return nil ;};func (_dfae *GenericRegion )writeGBAtPixels (_cfe _cb .BinaryWriter )(_eagd int ,_bgbe error ){const _ebfcf ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _dfae .UseMMR {return 0,nil ;};_ddfc :=1;if _dfae .GBTemplate ==0{_ddfc =4;}else if _dfae .UseExtTemplates {_ddfc =12;};if len (_dfae .GBAtX )!=_ddfc {return 0,_fd .Errorf (_ebfcf ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};if len (_dfae .GBAtY )!=_ddfc {return 0,_fd .Errorf (_ebfcf ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};for _bccf :=0;_bccf < _ddfc ;_bccf ++{if _bgbe =_cfe .WriteByte (byte (_dfae .GBAtX [_bccf ]));_bgbe !=nil {return _eagd ,_fd .Wrap (_bgbe ,_ebfcf ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_eagd ++;if _bgbe =_cfe .WriteByte (byte (_dfae .GBAtY [_bccf ]));_bgbe !=nil {return _eagd ,_fd .Wrap (_bgbe ,_ebfcf ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_eagd ++;};return _eagd ,nil ;};func (_fdfb *PageInformationSegment )readCombinationOperator ()error {_eeca ,_facf :=_fdfb ._ggab .ReadBits (2);if _facf !=nil {return _facf ;};_fdfb ._bde =_cbd .CombinationOperator (int (_eeca ));return nil ;};var _ SegmentEncoder =&RegionSegment {};func (_dfbae *TableSegment )HtRS ()int32 {return _dfbae ._befa };func (_dcee *SymbolDictionary )setAtPixels ()error {if _dcee .IsHuffmanEncoded {return nil ;};_fgdb :=1;if _dcee .SdTemplate ==0{_fgdb =4;};if _bdcc :=_dcee .readAtPixels (_fgdb );_bdcc !=nil {return _bdcc ;};return nil ;};func (_egcd *GenericRegion )decodeSLTP ()(int ,error ){switch _egcd .GBTemplate {case 0:_egcd ._egce .SetIndex (0x9B25);case 1:_egcd ._egce .SetIndex (0x795);case 2:_egcd ._egce .SetIndex (0xE5);case 3:_egcd ._egce .SetIndex (0x195);};return _egcd ._bfd .DecodeBit (_egcd ._egce );};func NewRegionSegment (r _cb .StreamReader )*RegionSegment {return &RegionSegment {_gedd :r }};func (_eecf *GenericRegion )overrideAtTemplate2 (_gggg ,_ageb ,_ddc ,_bcc ,_dafc int )int {_gggg &=0x3FB;if _eecf .GBAtY [0]==0&&_eecf .GBAtX [0]>=-int8 (_dafc ){_gggg |=(_bcc >>uint (7-(int8 (_dafc )+_eecf .GBAtX [0]))&0x1)<<2;}else {_gggg |=int (_eecf .getPixel (_ageb +int (_eecf .GBAtX [0]),_ddc +int (_eecf .GBAtY [0])))<<2;};return _gggg ;};func (_gdgg *TextRegion )getSymbols ()error {if _gdgg .Header .RTSegments !=nil {return _gdgg .initSymbols ();};return nil ;};func (_dbda *PatternDictionary )setGbAtPixels (){if _dbda .HDTemplate ==0{_dbda .GBAtX =make ([]int8 ,4);_dbda .GBAtY =make ([]int8 ,4);_dbda .GBAtX [0]=-int8 (_dbda .HdpWidth );_dbda .GBAtY [0]=0;_dbda .GBAtX [1]=-3;_dbda .GBAtY [1]=-1;_dbda .GBAtX [2]=2;_dbda .GBAtY [2]=-2;_dbda .GBAtX [3]=-2;_dbda .GBAtY [3]=-2;}else {_dbda .GBAtX =[]int8 {-int8 (_dbda .HdpWidth )};_dbda .GBAtY =[]int8 {0};};};func (_bdb *Header )GetSegmentData ()(Segmenter ,error ){var _dagca Segmenter ;if _bdb .SegmentData !=nil {_dagca =_bdb .SegmentData ;};if _dagca ==nil {_cac ,_dee :=_ddge [_bdb .Type ];if !_dee {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_bdb .Type ,_bdb .Type );};_dagca =_cac ();_ec .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_bdb .SegmentNumber ,_bdb .SegmentDataStartOffset );_aba ,_becc :=_bdb .subInputReader ();if _becc !=nil {return nil ,_becc ;};if _cgcg :=_dagca .Init (_bdb ,_aba );_cgcg !=nil {_ec .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_cgcg ,_dagca );return nil ,_cgcg ;};_bdb .SegmentData =_dagca ;};return _dagca ,nil ;};func (_dacf *GenericRegion )InitEncode (bm *_cbd .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _dbbg ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";if bm ==nil {return _fd .Error (_dbbg ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _fd .Error (_dbbg ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");};_dacf .Bitmap =bm ;_dacf .GBTemplate =byte (template );switch _dacf .GBTemplate {case 0:_dacf .GBAtX =[]int8 {3,-3,2,-2};_dacf .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_dacf .GBAtX =[]int8 {3};_dacf .GBAtY =[]int8 {-1};case 2,3:_dacf .GBAtX =[]int8 {2};_dacf .GBAtY =[]int8 {-1};default:return _fd .Errorf (_dbbg ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );};_dacf .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_dacf .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_aaab *SymbolDictionary )addSymbol (_efce Regioner )error {_eeag ,_bdae :=_efce .GetRegionBitmap ();if _bdae !=nil {return _bdae ;};_aaab ._acce [_aaab ._bfa ]=_eeag ;_aaab ._deagf =append (_aaab ._deagf ,_eeag );_ec .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_eeag );return nil ;};func (_dccd *GenericRefinementRegion )updateOverride ()error {if _dccd .GrAtX ==nil ||_dccd .GrAtY ==nil {return _ff .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if len (_dccd .GrAtX )!=len (_dccd .GrAtY ){return _ff .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_dccd ._fb =make ([]bool ,len (_dccd .GrAtX ));switch _dccd .TemplateID {case 0:if _dccd .GrAtX [0]!=-1&&_dccd .GrAtY [0]!=-1{_dccd ._fb [0]=true ;_dccd ._def =true ;};if _dccd .GrAtX [1]!=-1&&_dccd .GrAtY [1]!=-1{_dccd ._fb [1]=true ;_dccd ._def =true ;};case 1:_dccd ._def =false ;};return nil ;};type HalftoneRegion struct{_ddfca _cb .StreamReader ;_dbac *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _cbd .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_cbd .Bitmap ;Patterns []*_cbd .Bitmap ;};type Segmenter interface{Init (_cebef *Header ,_bed _cb .StreamReader )error ;};func (_aebg *SymbolDictionary )readRegionFlags ()error {var (_ddba uint64 ;_abdbe int ;);_ ,_cgba :=_aebg ._gcff .ReadBits (3);if _cgba !=nil {return _cgba ;};_abdbe ,_cgba =_aebg ._gcff .ReadBit ();if _cgba !=nil {return _cgba ;};_aebg .SdrTemplate =int8 (_abdbe );_ddba ,_cgba =_aebg ._gcff .ReadBits (2);if _cgba !=nil {return _cgba ;};_aebg .SdTemplate =int8 (_ddba &0xf);_abdbe ,_cgba =_aebg ._gcff .ReadBit ();if _cgba !=nil {return _cgba ;};if _abdbe ==1{_aebg ._bdce =true ;};_abdbe ,_cgba =_aebg ._gcff .ReadBit ();if _cgba !=nil {return _cgba ;};if _abdbe ==1{_aebg ._gfdc =true ;};_abdbe ,_cgba =_aebg ._gcff .ReadBit ();if _cgba !=nil {return _cgba ;};if _abdbe ==1{_aebg .SdHuffAggInstanceSelection =true ;};_abdbe ,_cgba =_aebg ._gcff .ReadBit ();if _cgba !=nil {return _cgba ;};_aebg .SdHuffBMSizeSelection =int8 (_abdbe );_ddba ,_cgba =_aebg ._gcff .ReadBits (2);if _cgba !=nil {return _cgba ;};_aebg .SdHuffDecodeWidthSelection =int8 (_ddba &0xf);_ddba ,_cgba =_aebg ._gcff .ReadBits (2);if _cgba !=nil {return _cgba ;};_aebg .SdHuffDecodeHeightSelection =int8 (_ddba &0xf);_abdbe ,_cgba =_aebg ._gcff .ReadBit ();if _cgba !=nil {return _cgba ;};if _abdbe ==1{_aebg .UseRefinementAggregation =true ;};_abdbe ,_cgba =_aebg ._gcff .ReadBit ();if _cgba !=nil {return _cgba ;};if _abdbe ==1{_aebg .IsHuffmanEncoded =true ;};return nil ;};func (_fafg *TextRegion )String ()string {_fgba :=&_ca .Builder {};_fgba .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_fgba .WriteString (_fafg .RegionInfo .String ()+"\u000a");_fgba .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_fafg .SbrTemplate ));_fgba .WriteString (_e .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_fafg .SbDsOffset ));_fgba .WriteString (_e .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_fafg .DefaultPixel ));_fgba .WriteString (_e .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_fafg .CombinationOperator ));_fgba .WriteString (_e .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_fafg .IsTransposed ));_fgba .WriteString (_e .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_fafg .ReferenceCorner ));_fgba .WriteString (_e .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_fafg .UseRefinement ));_fgba .WriteString (_e .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_fafg .IsHuffmanEncoded ));if _fafg .IsHuffmanEncoded {_fgba .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_fafg .SbHuffRSize ));_fgba .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_fafg .SbHuffRDY ));_fgba .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_fafg .SbHuffRDX ));_fgba .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_fafg .SbHuffRDHeight ));_fgba .WriteString (_e .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_fafg .SbHuffRDWidth ));_fgba .WriteString (_e .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_fafg .SbHuffDT ));_fgba .WriteString (_e .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_fafg .SbHuffDS ));_fgba .WriteString (_e .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_fafg .SbHuffFS ));};_fgba .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_fafg .SbrATX ));_fgba .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_fafg .SbrATY ));_fgba .WriteString (_e .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_fafg .NumberOfSymbolInstances ));_fgba .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_fafg .SbrATX ));return _fgba .String ();};func (_efa *PageInformationSegment )String ()string {_dddag :=&_ca .Builder {};_dddag .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_dddag .WriteString (_e .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_efa .PageBMHeight ));_dddag .WriteString (_e .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_efa .PageBMWidth ));_dddag .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_efa .ResolutionX ));_dddag .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_efa .ResolutionY ));_dddag .WriteString (_e .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_efa ._bde ));_dddag .WriteString (_e .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_efa ._acc ));_dddag .WriteString (_e .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_efa .IsLossless ));_dddag .WriteString (_e .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_efa ._bdgf ));_dddag .WriteString (_e .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_efa ._ddeb ));_dddag .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_efa .IsStripe ));_dddag .WriteString (_e .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_efa .MaxStripeSize ));return _dddag .String ();};func (_afff *GenericRegion )copyLineAbove (_dag int )error {_fee :=_dag *_afff .Bitmap .RowStride ;_gfc :=_fee -_afff .Bitmap .RowStride ;for _egge :=0;_egge < _afff .Bitmap .RowStride ;_egge ++{_eefe ,_gce :=_afff .Bitmap .GetByte (_gfc );if _gce !=nil {return _gce ;};_gfc ++;if _gce =_afff .Bitmap .SetByte (_fee ,_eefe );_gce !=nil {return _gce ;};_fee ++;};return nil ;};func (_bcdbf *TextRegion )readHuffmanFlags ()error {var (_fcfbd int ;_fbdc uint64 ;_efcd error ;);_ ,_efcd =_bcdbf ._fdce .ReadBit ();if _efcd !=nil {return _efcd ;};_fcfbd ,_efcd =_bcdbf ._fdce .ReadBit ();if _efcd !=nil {return _efcd ;};_bcdbf .SbHuffRSize =int8 (_fcfbd );_fbdc ,_efcd =_bcdbf ._fdce .ReadBits (2);if _efcd !=nil {return _efcd ;};_bcdbf .SbHuffRDY =int8 (_fbdc )&0xf;_fbdc ,_efcd =_bcdbf ._fdce .ReadBits (2);if _efcd !=nil {return _efcd ;};_bcdbf .SbHuffRDX =int8 (_fbdc )&0xf;_fbdc ,_efcd =_bcdbf ._fdce .ReadBits (2);if _efcd !=nil {return _efcd ;};_bcdbf .SbHuffRDHeight =int8 (_fbdc )&0xf;_fbdc ,_efcd =_bcdbf ._fdce .ReadBits (2);if _efcd !=nil {return _efcd ;};_bcdbf .SbHuffRDWidth =int8 (_fbdc )&0xf;_fbdc ,_efcd =_bcdbf ._fdce .ReadBits (2);if _efcd !=nil {return _efcd ;};_bcdbf .SbHuffDT =int8 (_fbdc )&0xf;_fbdc ,_efcd =_bcdbf ._fdce .ReadBits (2);if _efcd !=nil {return _efcd ;};_bcdbf .SbHuffDS =int8 (_fbdc )&0xf;_fbdc ,_efcd =_bcdbf ._fdce .ReadBits (2);if _efcd !=nil {return _efcd ;};_bcdbf .SbHuffFS =int8 (_fbdc )&0xf;return nil ;};func (_fdbd *SymbolDictionary )getSymbol (_cceg int )(*_cbd .Bitmap ,error ){const _fgge ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_eefc ,_bdgb :=_fdbd ._ffd .GetBitmap (_fdbd ._feea [_cceg ]);if _bdgb !=nil {return nil ,_fd .Wrap (_bdgb ,_fgge ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _eefc ,nil ;};func (_fbe *GenericRegion )decodeLine (_dbga ,_deagb ,_cddb int )error {const _bdf ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_fdbf :=_fbe .Bitmap .GetByteIndex (0,_dbga );_dfaf :=_fdbf -_fbe .Bitmap .RowStride ;switch _fbe .GBTemplate {case 0:if !_fbe .UseExtTemplates {return _fbe .decodeTemplate0a (_dbga ,_deagb ,_cddb ,_fdbf ,_dfaf );};return _fbe .decodeTemplate0b (_dbga ,_deagb ,_cddb ,_fdbf ,_dfaf );case 1:return _fbe .decodeTemplate1 (_dbga ,_deagb ,_cddb ,_fdbf ,_dfaf );case 2:return _fbe .decodeTemplate2 (_dbga ,_deagb ,_cddb ,_fdbf ,_dfaf );case 3:return _fbe .decodeTemplate3 (_dbga ,_deagb ,_cddb ,_fdbf ,_dfaf );};return _fd .Errorf (_bdf ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_fbe .GBTemplate );};func (_cdb *GenericRefinementRegion )GetRegionBitmap ()(*_cbd .Bitmap ,error ){var _df error ;_ec .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _df !=nil {_ec .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_df );}else {_ec .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _cdb .RegionBitmap !=nil {return _cdb .RegionBitmap ,nil ;};_eg :=0;if _cdb .ReferenceBitmap ==nil {_cdb .ReferenceBitmap ,_df =_cdb .getGrReference ();if _df !=nil {return nil ,_df ;};};if _cdb ._g ==nil {_cdb ._g ,_df =_aa .New (_cdb ._ecb );if _df !=nil {return nil ,_df ;};};if _cdb ._gd ==nil {_cdb ._gd =_aa .NewStats (8192,1);};_cdb .RegionBitmap =_cbd .New (int (_cdb .RegionInfo .BitmapWidth ),int (_cdb .RegionInfo .BitmapHeight ));if _cdb .TemplateID ==0{if _df =_cdb .updateOverride ();_df !=nil {return nil ,_df ;};};_ge :=(_cdb .RegionBitmap .Width +7)&-8;var _cdc int ;if _cdb .IsTPGROn {_cdc =int (-_cdb .ReferenceDY )*_cdb .ReferenceBitmap .RowStride ;};_cc :=_cdc +1;for _dac :=0;_dac < _cdb .RegionBitmap .Height ;_dac ++{if _cdb .IsTPGROn {_fg ,_gc :=_cdb .decodeSLTP ();if _gc !=nil {return nil ,_gc ;};_eg ^=_fg ;};if _eg ==0{_df =_cdb .decodeOptimized (_dac ,_cdb .RegionBitmap .Width ,_cdb .RegionBitmap .RowStride ,_cdb .ReferenceBitmap .RowStride ,_ge ,_cdc ,_cc );if _df !=nil {return nil ,_df ;};}else {_df =_cdb .decodeTypicalPredictedLine (_dac ,_cdb .RegionBitmap .Width ,_cdb .RegionBitmap .RowStride ,_cdb .ReferenceBitmap .RowStride ,_ge ,_cdc );if _df !=nil {return nil ,_df ;};};};return _cdb .RegionBitmap ,nil ;};func (_fadg *SymbolDictionary )setRefinementAtPixels ()error {if !_fadg .UseRefinementAggregation ||_fadg .SdrTemplate !=0{return nil ;};if _bbgc :=_fadg .readRefinementAtPixels (2);_bbgc !=nil {return _bbgc ;};return nil ;};func (_adba *GenericRefinementRegion )overrideAtTemplate0 (_afb ,_cef ,_gga ,_dacd ,_fdb int )int {if _adba ._fb [0]{_afb &=0xfff7;if _adba .GrAtY [0]==0&&int (_adba .GrAtX [0])>=-_fdb {_afb |=(_dacd >>uint (7-(_fdb +int (_adba .GrAtX [0])))&0x1)<<3;}else {_afb |=_adba .getPixel (_adba .RegionBitmap ,_cef +int (_adba .GrAtX [0]),_gga +int (_adba .GrAtY [0]))<<3;};};if _adba ._fb [1]{_afb &=0xefff;if _adba .GrAtY [1]==0&&int (_adba .GrAtX [1])>=-_fdb {_afb |=(_dacd >>uint (7-(_fdb +int (_adba .GrAtX [1])))&0x1)<<12;}else {_afb |=_adba .getPixel (_adba .ReferenceBitmap ,_cef +int (_adba .GrAtX [1]),_gga +int (_adba .GrAtY [1]));};};return _afb ;};func (_fegb *SymbolDictionary )setInSyms ()error {if _fegb .Header .RTSegments !=nil {return _fegb .retrieveImportSymbols ();};_fegb ._caeg =make ([]*_cbd .Bitmap ,0);return nil ;};func (_bagg *SymbolDictionary )decodeNewSymbols (_fggcg ,_edde uint32 ,_dfde *_cbd .Bitmap ,_aeff ,_accea int32 )error {if _bagg ._gbg ==nil {_bagg ._gbg =_cdfe (_bagg ._gcff ,nil );if _bagg ._gcbg ==nil {var _bffc error ;_bagg ._gcbg ,_bffc =_aa .New (_bagg ._gcff );if _bffc !=nil {return _bffc ;};};if _bagg ._bafa ==nil {_bagg ._bafa =_aa .NewStats (65536,1);};};_bagg ._gbg .setParameters (_bagg ._bafa ,_bagg ._gcbg ,_bagg .SdrTemplate ,_fggcg ,_edde ,_dfde ,_aeff ,_accea ,false ,_bagg .SdrATX ,_bagg .SdrATY );return _bagg .addSymbol (_bagg ._gbg );};var _ SegmentEncoder =&GenericRegion {};type TableSegment struct{_eagb _cb .StreamReader ;_agbe int32 ;_gdeg int32 ;_befa int32 ;_efgdg int32 ;_aegc int32 ;};func (_fae *GenericRefinementRegion )Init (header *Header ,r _cb .StreamReader )error {_fae ._dbg =header ;_fae ._ecb =r ;_fae .RegionInfo =NewRegionSegment (r );return _fae .parseHeader ();};func (_gbb *template0 )setIndex (_fdfg *_aa .DecoderStats ){_fdfg .SetIndex (0x100)};func (_gdff *Header )readNumberOfReferredToSegments (_feff _cb .StreamReader )(uint64 ,error ){const _debe ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";_fgcf ,_fbba :=_feff .ReadBits (3);if _fbba !=nil {return 0,_fd .Wrap (_fbba ,_debe ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_fgcf &=0xf;var _gadf []byte ;if _fgcf <=4{_gadf =make ([]byte ,5);for _faca :=0;_faca <=4;_faca ++{_faac ,_fgdc :=_feff .ReadBit ();if _fgdc !=nil {return 0,_fd .Wrap (_fgdc ,_debe ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gadf [_faca ]=byte (_faac );};}else {_fgcf ,_fbba =_feff .ReadBits (29);if _fbba !=nil {return 0,_fbba ;};_fgcf &=_f .MaxInt32 ;_gdgc :=(_fgcf +8)>>3;_gdgc <<=3;_gadf =make ([]byte ,_gdgc );var _bdgc uint64 ;for _bdgc =0;_bdgc < _gdgc ;_bdgc ++{_fcfb ,_affd :=_feff .ReadBit ();if _affd !=nil {return 0,_fd .Wrap (_affd ,_debe ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gadf [_bdgc ]=byte (_fcfb );};};return _fgcf ,nil ;};func (_gafa *SymbolDictionary )encodeNumSyms (_fda _cb .BinaryWriter )(_dfed int ,_dfbb error ){const _cfa ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_aaeb :=make ([]byte ,4);_b .BigEndian .PutUint32 (_aaeb ,_gafa .NumberOfExportedSymbols );if _dfed ,_dfbb =_fda .Write (_aaeb );_dfbb !=nil {return _dfed ,_fd .Wrap (_dfbb ,_cfa ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_b .BigEndian .PutUint32 (_aaeb ,_gafa .NumberOfNewSymbols );_dafab ,_dfbb :=_fda .Write (_aaeb );if _dfbb !=nil {return _dfed ,_fd .Wrap (_dfbb ,_cfa ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _dfed +_dafab ,nil ;};func (_efeb *Header )readReferredToSegmentNumbers (_fdg _cb .StreamReader ,_bbfa int )([]int ,error ){const _cbb ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";_cbbf :=make ([]int ,_bbfa );if _bbfa > 0{_efeb .RTSegments =make ([]*Header ,_bbfa );var (_cebe uint64 ;_cbga error ;);for _cage :=0;_cage < _bbfa ;_cage ++{_cebe ,_cbga =_fdg .ReadBits (byte (_efeb .referenceSize ())<<3);if _cbga !=nil {return nil ,_fd .Wrapf (_cbga ,_cbb ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_cage );};_cbbf [_cage ]=int (_cebe &_f .MaxInt32 );};};return _cbbf ,nil ;};func (_cggd *RegionSegment )Size ()int {return 17};func (_bbca *TextRegion )decodeID ()(int64 ,error ){if _bbca .IsHuffmanEncoded {if _bbca ._gdbf ==nil {_addb ,_bfcdd :=_bbca ._fdce .ReadBits (byte (_bbca ._fcgg ));return int64 (_addb ),_bfcdd ;};return _bbca ._gdbf .Decode (_bbca ._fdce );};return _bbca ._dccfb .DecodeIAID (uint64 (_bbca ._fcgg ),_bbca ._accdc );};func (_gebbf *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_fefa ,_gagg :=_gebbf ._ggab .ReadBit ();if _gagg !=nil {return _gagg ;};if _fefa ==1{_gebbf ._acc =true ;};return nil ;};func (_gaba *TextRegion )setParameters (_ddga *_aa .Decoder ,_bgdde ,_cdac bool ,_gebf ,_gggc uint32 ,_cbba uint32 ,_eadf int8 ,_dfee uint32 ,_defeg int8 ,_geca _cbd .CombinationOperator ,_cdcf int8 ,_cbeeb int16 ,_aegeg ,_fgeg ,_edddb ,_cdgbf ,_ceda ,_cdfa ,_ecff ,_eged ,_ceeg ,_daeb int8 ,_fgce ,_fada []int8 ,_efbe []*_cbd .Bitmap ,_eccb int8 ){_gaba ._dccfb =_ddga ;_gaba .IsHuffmanEncoded =_bgdde ;_gaba .UseRefinement =_cdac ;_gaba .RegionInfo .BitmapWidth =_gebf ;_gaba .RegionInfo .BitmapHeight =_gggc ;_gaba .NumberOfSymbolInstances =_cbba ;_gaba .SbStrips =_eadf ;_gaba .NumberOfSymbols =_dfee ;_gaba .DefaultPixel =_defeg ;_gaba .CombinationOperator =_geca ;_gaba .IsTransposed =_cdcf ;_gaba .ReferenceCorner =_cbeeb ;_gaba .SbDsOffset =_aegeg ;_gaba .SbHuffFS =_fgeg ;_gaba .SbHuffDS =_edddb ;_gaba .SbHuffDT =_cdgbf ;_gaba .SbHuffRDWidth =_ceda ;_gaba .SbHuffRDHeight =_cdfa ;_gaba .SbHuffRSize =_ceeg ;_gaba .SbHuffRDX =_ecff ;_gaba .SbHuffRDY =_eged ;_gaba .SbrTemplate =_daeb ;_gaba .SbrATX =_fgce ;_gaba .SbrATY =_fada ;_gaba .Symbols =_efbe ;_gaba ._fcgg =_eccb ;};type PatternDictionary struct{_dage _cb .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_cbd .Bitmap ;GrayMax uint32 ;};func (_fcca *GenericRegion )GetRegionInfo ()*RegionSegment {return _fcca .RegionSegment };func (_eegf *TableSegment )parseHeader ()error {var (_fabb int ;_bedc uint64 ;_ccbd error ;);_fabb ,_ccbd =_eegf ._eagb .ReadBit ();if _ccbd !=nil {return _ccbd ;};if _fabb ==1{return _e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_fabb );};if _bedc ,_ccbd =_eegf ._eagb .ReadBits (3);_ccbd !=nil {return _ccbd ;};_eegf ._befa =(int32 (_bedc )+1)&0xf;if _bedc ,_ccbd =_eegf ._eagb .ReadBits (3);_ccbd !=nil {return _ccbd ;};_eegf ._gdeg =(int32 (_bedc )+1)&0xf;if _bedc ,_ccbd =_eegf ._eagb .ReadBits (32);_ccbd !=nil {return _ccbd ;};_eegf ._efgdg =int32 (_bedc &_f .MaxInt32 );if _bedc ,_ccbd =_eegf ._eagb .ReadBits (32);_ccbd !=nil {return _ccbd ;};_eegf ._aegc =int32 (_bedc &_f .MaxInt32 );return nil ;};func (_cagg *HalftoneRegion )computeY (_edf ,_gabc int )int {return _cagg .shiftAndFill (int (_cagg .HGridY )+_edf *int (_cagg .HRegionX )-_gabc *int (_cagg .HRegionY ));};func (_bfdcg *SymbolDictionary )setSymbolsArray ()error {if _bfdcg ._caeg ==nil {if _dgb :=_bfdcg .retrieveImportSymbols ();_dgb !=nil {return _dgb ;};};if _bfdcg ._deagf ==nil {_bfdcg ._deagf =append (_bfdcg ._deagf ,_bfdcg ._caeg ...);};return nil ;};func (_ecfg *GenericRegion )Size ()int {return _ecfg .RegionSegment .Size ()+1+2*len (_ecfg .GBAtX )};func (_gcb *HalftoneRegion )grayScaleDecoding (_agfe int )([][]int ,error ){var (_bbe []int8 ;_bfb []int8 ;);if !_gcb .IsMMREncoded {_bbe =make ([]int8 ,4);_bfb =make ([]int8 ,4);if _gcb .HTemplate <=1{_bbe [0]=3;}else if _gcb .HTemplate >=2{_bbe [0]=2;};_bfb [0]=-1;_bbe [1]=-3;_bfb [1]=-1;_bbe [2]=2;_bfb [2]=-2;_bbe [3]=-2;_bfb [3]=-2;};_eceg :=make ([]*_cbd .Bitmap ,_agfe );_cbea :=NewGenericRegion (_gcb ._ddfca );_cbea .setParametersMMR (_gcb .IsMMREncoded ,_gcb .DataOffset ,_gcb .DataLength ,_gcb .HGridHeight ,_gcb .HGridWidth ,_gcb .HTemplate ,false ,_gcb .HSkipEnabled ,_bbe ,_bfb );_bgda :=_agfe -1;var _cccfg error ;_eceg [_bgda ],_cccfg =_cbea .GetRegionBitmap ();if _cccfg !=nil {return nil ,_cccfg ;};for _bgda > 0{_bgda --;_cbea .Bitmap =nil ;_eceg [_bgda ],_cccfg =_cbea .GetRegionBitmap ();if _cccfg !=nil {return nil ,_cccfg ;};if _cccfg =_gcb .combineGrayscalePlanes (_eceg ,_bgda );_cccfg !=nil {return nil ,_cccfg ;};};return _gcb .computeGrayScalePlanes (_eceg ,_agfe );};func (_gbcf *HalftoneRegion )parseHeader ()error {if _ggc :=_gbcf .RegionSegment .parseHeader ();_ggc !=nil {return _ggc ;};_ada ,_beg :=_gbcf ._ddfca .ReadBit ();if _beg !=nil {return _beg ;};_gbcf .HDefaultPixel =int8 (_ada );_bae ,_beg :=_gbcf ._ddfca .ReadBits (3);if _beg !=nil {return _beg ;};_gbcf .CombinationOperator =_cbd .CombinationOperator (_bae &0xf);_ada ,_beg =_gbcf ._ddfca .ReadBit ();if _beg !=nil {return _beg ;};if _ada ==1{_gbcf .HSkipEnabled =true ;};_bae ,_beg =_gbcf ._ddfca .ReadBits (2);if _beg !=nil {return _beg ;};_gbcf .HTemplate =byte (_bae &0xf);_ada ,_beg =_gbcf ._ddfca .ReadBit ();if _beg !=nil {return _beg ;};if _ada ==1{_gbcf .IsMMREncoded =true ;};_bae ,_beg =_gbcf ._ddfca .ReadBits (32);if _beg !=nil {return _beg ;};_gbcf .HGridWidth =uint32 (_bae &_f .MaxUint32 );_bae ,_beg =_gbcf ._ddfca .ReadBits (32);if _beg !=nil {return _beg ;};_gbcf .HGridHeight =uint32 (_bae &_f .MaxUint32 );_bae ,_beg =_gbcf ._ddfca .ReadBits (32);if _beg !=nil {return _beg ;};_gbcf .HGridX =int32 (_bae &_f .MaxInt32 );_bae ,_beg =_gbcf ._ddfca .ReadBits (32);if _beg !=nil {return _beg ;};_gbcf .HGridY =int32 (_bae &_f .MaxInt32 );_bae ,_beg =_gbcf ._ddfca .ReadBits (16);if _beg !=nil {return _beg ;};_gbcf .HRegionX =uint16 (_bae &_f .MaxUint16 );_bae ,_beg =_gbcf ._ddfca .ReadBits (16);if _beg !=nil {return _beg ;};_gbcf .HRegionY =uint16 (_bae &_f .MaxUint16 );if _beg =_gbcf .computeSegmentDataStructure ();_beg !=nil {return _beg ;};return _gbcf .checkInput ();};func (_fbdd *TextRegion )decodeDfs ()(int64 ,error ){if _fbdd .IsHuffmanEncoded {if _fbdd .SbHuffFS ==3{if _fbdd ._dgfa ==nil {var _fggeb error ;_fbdd ._dgfa ,_fggeb =_fbdd .getUserTable (0);if _fggeb !=nil {return 0,_fggeb ;};};return _fbdd ._dgfa .Decode (_fbdd ._fdce );};_gcbc ,_ccfa :=_ae .GetStandardTable (6+int (_fbdd .SbHuffFS ));if _ccfa !=nil {return 0,_ccfa ;};return _gcbc .Decode (_fbdd ._fdce );};_cgdc ,_bgbd :=_fbdd ._dccfb .DecodeInt (_fbdd ._ccab );if _bgbd !=nil {return 0,_bgbd ;};return int64 (_cgdc ),nil ;};type GenericRegion struct{_cfcd _cb .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_aca bool ;Bitmap *_cbd .Bitmap ;_bfd *_aa .Decoder ;_egce *_aa .DecoderStats ;_bca *_d .Decoder ;};func (_fcfe *PatternDictionary )parseHeader ()error {_ec .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");defer func (){_ec .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_ ,_gdef :=_fcfe ._dage .ReadBits (5);if _gdef !=nil {return _gdef ;};if _gdef =_fcfe .readTemplate ();_gdef !=nil {return _gdef ;};if _gdef =_fcfe .readIsMMREncoded ();_gdef !=nil {return _gdef ;};if _gdef =_fcfe .readPatternWidthAndHeight ();_gdef !=nil {return _gdef ;};if _gdef =_fcfe .readGrayMax ();_gdef !=nil {return _gdef ;};if _gdef =_fcfe .computeSegmentDataStructure ();_gdef !=nil {return _gdef ;};return _fcfe .checkInput ();};func (_cegb *GenericRegion )decodeTemplate2 (_feba ,_dadf ,_edcfa int ,_eaca ,_gffb int )(_dgf error ){const _agbgb ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_eaa ,_caa int ;_deda ,_bcbe int ;_gcf byte ;_fcdb ,_agaa int ;);if _feba >=1{_gcf ,_dgf =_cegb .Bitmap .GetByte (_gffb );if _dgf !=nil {return _fd .Wrap (_dgf ,_agbgb ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_deda =int (_gcf );};if _feba >=2{_gcf ,_dgf =_cegb .Bitmap .GetByte (_gffb -_cegb .Bitmap .RowStride );if _dgf !=nil {return _fd .Wrap (_dgf ,_agbgb ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_bcbe =int (_gcf )<<4;};_eaa =(_deda >>3&0x7c)|(_bcbe >>3&0x380);for _cdba :=0;_cdba < _edcfa ;_cdba =_fcdb {var (_cfbf byte ;_bda int ;);_fcdb =_cdba +8;if _bgdgc :=_dadf -_cdba ;_bgdgc > 8{_bda =8;}else {_bda =_bgdgc ;};if _feba > 0{_deda <<=8;if _fcdb < _dadf {_gcf ,_dgf =_cegb .Bitmap .GetByte (_gffb +1);if _dgf !=nil {return _fd .Wrap (_dgf ,_agbgb ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_deda |=int (_gcf );};};if _feba > 1{_bcbe <<=8;if _fcdb < _dadf {_gcf ,_dgf =_cegb .Bitmap .GetByte (_gffb -_cegb .Bitmap .RowStride +1);if _dgf !=nil {return _fd .Wrap (_dgf ,_agbgb ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_bcbe |=int (_gcf )<<4;};};for _dgcf :=0;_dgcf < _bda ;_dgcf ++{_fbc :=uint (10-_dgcf );if _cegb ._aca {_caa =_cegb .overrideAtTemplate2 (_eaa ,_cdba +_dgcf ,_feba ,int (_cfbf ),_dgcf );_cegb ._egce .SetIndex (int32 (_caa ));}else {_cegb ._egce .SetIndex (int32 (_eaa ));};_agaa ,_dgf =_cegb ._bfd .DecodeBit (_cegb ._egce );if _dgf !=nil {return _fd .Wrap (_dgf ,_agbgb ,"");};_cfbf |=byte (_agaa <<uint (7-_dgcf ));_eaa =((_eaa &0x1bd)<<1)|_agaa |((_deda >>_fbc )&0x4)|((_bcbe >>_fbc )&0x80);};if _fdfgb :=_cegb .Bitmap .SetByte (_eaca ,_cfbf );_fdfgb !=nil {return _fd .Wrap (_fdfgb ,_agbgb ,"");};_eaca ++;_gffb ++;};return nil ;};func (_gcab *SymbolDictionary )setRetainedCodingContexts (_daaa *SymbolDictionary ){_gcab ._gcbg =_daaa ._gcbg ;_gcab .IsHuffmanEncoded =_daaa .IsHuffmanEncoded ;_gcab .UseRefinementAggregation =_daaa .UseRefinementAggregation ;_gcab .SdTemplate =_daaa .SdTemplate ;_gcab .SdrTemplate =_daaa .SdrTemplate ;_gcab .SdATX =_daaa .SdATX ;_gcab .SdATY =_daaa .SdATY ;_gcab .SdrATX =_daaa .SdrATX ;_gcab .SdrATY =_daaa .SdrATY ;_gcab ._bafa =_daaa ._bafa ;};func (_cfb *GenericRefinementRegion )getPixel (_fgd *_cbd .Bitmap ,_cgcc ,_gda int )int {if _cgcc < 0||_cgcc >=_fgd .Width {return 0;};if _gda < 0||_gda >=_fgd .Height {return 0;};if _fgd .GetPixel (_cgcc ,_gda ){return 1;};return 0;};func (_fba *Header )readSegmentDataLength (_eaeb _cb .StreamReader )(_cefcb error ){_fba .SegmentDataLength ,_cefcb =_eaeb .ReadBits (32);if _cefcb !=nil {return _cefcb ;};_fba .SegmentDataLength &=_f .MaxInt32 ;return nil ;};func (_daff *Header )readSegmentPageAssociation (_gebg Documenter ,_cbfg _cb .StreamReader ,_ggcf uint64 ,_defgc ...int )(_cacb error ){const _dga ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";if !_daff .PageAssociationFieldSize {_afbe ,_bba :=_cbfg .ReadBits (8);if _bba !=nil {return _fd .Wrap (_bba ,_dga ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_daff .PageAssociation =int (_afbe &0xFF);}else {_dggc ,_ced :=_cbfg .ReadBits (32);if _ced !=nil {return _fd .Wrap (_ced ,_dga ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_daff .PageAssociation =int (_dggc &_f .MaxInt32 );};if _ggcf ==0{return nil ;};if _daff .PageAssociation !=0{_gbae ,_fgcfc :=_gebg .GetPage (_daff .PageAssociation );if _fgcfc !=nil {return _fd .Wrap (_fgcfc ,_dga ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _edddd int ;for _babe :=uint64 (0);_babe < _ggcf ;_babe ++{_edddd =_defgc [_babe ];_daff .RTSegments [_babe ],_fgcfc =_gbae .GetSegment (_edddd );if _fgcfc !=nil {var _ddca error ;_daff .RTSegments [_babe ],_ddca =_gebg .GetGlobalSegment (_edddd );if _ddca !=nil {return _fd .Wrapf (_fgcfc ,_dga ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_daff .PageAssociation );};};};return nil ;};for _dbdd :=uint64 (0);_dbdd < _ggcf ;_dbdd ++{_daff .RTSegments [_dbdd ],_cacb =_gebg .GetGlobalSegment (_defgc [_dbdd ]);if _cacb !=nil {return _fd .Wrapf (_cacb ,_dga ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_defgc [_dbdd ]);};};return nil ;};func (_dgcaa *TextRegion )decodeCurrentT ()(int64 ,error ){if _dgcaa .SbStrips !=1{if _dgcaa .IsHuffmanEncoded {_efbf ,_fbfb :=_dgcaa ._fdce .ReadBits (byte (_dgcaa .LogSBStrips ));return int64 (_efbf ),_fbfb ;};_edfd ,_fcfg :=_dgcaa ._dccfb .DecodeInt (_dgcaa ._fcgd );if _fcfg !=nil {return 0,_fcfg ;};return int64 (_edfd ),nil ;};return 0,nil ;};func (_eaf *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _eaf .RegionSegment };func (_egeb *Header )writeSegmentDataLength (_acdf _cb .BinaryWriter )(_efcg int ,_abc error ){_efcb :=make ([]byte ,4);_b .BigEndian .PutUint32 (_efcb ,uint32 (_egeb .SegmentDataLength ));if _efcg ,_abc =_acdf .Write (_efcb );_abc !=nil {return 0,_fd .Wrap (_abc ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _efcg ,nil ;};func (_cgbb *GenericRegion )parseHeader ()(_eded error ){_ec .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");defer func (){if _eded !=nil {_ec .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_eded );}else {_ec .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");};}();var (_eag int ;_ecd uint64 ;);if _eded =_cgbb .RegionSegment .parseHeader ();_eded !=nil {return _eded ;};if _ ,_eded =_cgbb ._cfcd .ReadBits (3);_eded !=nil {return _eded ;};_eag ,_eded =_cgbb ._cfcd .ReadBit ();if _eded !=nil {return _eded ;};if _eag ==1{_cgbb .UseExtTemplates =true ;};_eag ,_eded =_cgbb ._cfcd .ReadBit ();if _eded !=nil {return _eded ;};if _eag ==1{_cgbb .IsTPGDon =true ;};_ecd ,_eded =_cgbb ._cfcd .ReadBits (2);if _eded !=nil {return _eded ;};_cgbb .GBTemplate =byte (_ecd &0xf);_eag ,_eded =_cgbb ._cfcd .ReadBit ();if _eded !=nil {return _eded ;};if _eag ==1{_cgbb .IsMMREncoded =true ;};if !_cgbb .IsMMREncoded {_geee :=1;if _cgbb .GBTemplate ==0{_geee =4;if _cgbb .UseExtTemplates {_geee =12;};};if _eded =_cgbb .readGBAtPixels (_geee );_eded !=nil {return _eded ;};};if _eded =_cgbb .computeSegmentDataStructure ();_eded !=nil {return _eded ;};_ec .Log .Trace ("\u0025\u0073",_cgbb );return nil ;};func (_fddg *GenericRegion )setParameters (_fgff bool ,_cbfa ,_efc int64 ,_bgeb ,_bdfc uint32 ){_fddg .IsMMREncoded =_fgff ;_fddg .DataOffset =_cbfa ;_fddg .DataLength =_efc ;_fddg .RegionSegment .BitmapHeight =_bgeb ;_fddg .RegionSegment .BitmapWidth =_bdfc ;_fddg ._bca =nil ;_fddg .Bitmap =nil ;};func (_feag *PageInformationSegment )Encode (w _cb .BinaryWriter )(_daaed int ,_fbgda error ){const _aaff ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";_bede :=make ([]byte ,4);_b .BigEndian .PutUint32 (_bede ,uint32 (_feag .PageBMWidth ));_daaed ,_fbgda =w .Write (_bede );if _fbgda !=nil {return _daaed ,_fd .Wrap (_fbgda ,_aaff ,"\u0077\u0069\u0064t\u0068");};_b .BigEndian .PutUint32 (_bede ,uint32 (_feag .PageBMHeight ));var _fdga int ;_fdga ,_fbgda =w .Write (_bede );if _fbgda !=nil {return _fdga +_daaed ,_fd .Wrap (_fbgda ,_aaff ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_daaed +=_fdga ;_b .BigEndian .PutUint32 (_bede ,uint32 (_feag .ResolutionX ));_fdga ,_fbgda =w .Write (_bede );if _fbgda !=nil {return _fdga +_daaed ,_fd .Wrap (_fbgda ,_aaff ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_daaed +=_fdga ;_b .BigEndian .PutUint32 (_bede ,uint32 (_feag .ResolutionY ));if _fdga ,_fbgda =w .Write (_bede );_fbgda !=nil {return _fdga +_daaed ,_fd .Wrap (_fbgda ,_aaff ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_daaed +=_fdga ;if _fbgda =_feag .encodeFlags (w );_fbgda !=nil {return _daaed ,_fd .Wrap (_fbgda ,_aaff ,"");};_daaed ++;if _fdga ,_fbgda =_feag .encodeStripingInformation (w );_fbgda !=nil {return _daaed ,_fd .Wrap (_fbgda ,_aaff ,"");};_daaed +=_fdga ;return _daaed ,nil ;};func (_eeb *Header )Encode (w _cb .BinaryWriter )(_gcbf int ,_caf error ){const _adga ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _dcb _cb .BinaryWriter ;_ec .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _caf !=nil {_ec .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_caf );}else {_ec .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_eeb );_ec .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _eeb .SegmentData !=nil {_gebd ,_gfdg :=_eeb .SegmentData .(SegmentEncoder );if !_gfdg {return 0,_fd .Errorf (_adga ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_eeb .SegmentData );};_dcb =_cb .BufferedMSB ();_gcbf ,_caf =_gebd .Encode (_dcb );if _caf !=nil {return 0,_fd .Wrap (_caf ,_adga ,"");};_eeb .SegmentDataLength =uint64 (_gcbf );};if _eeb .pageSize ()==4{_eeb .PageAssociationFieldSize =true ;};var _ecfb int ;_ecfb ,_caf =_eeb .writeSegmentNumber (w );if _caf !=nil {return 0,_fd .Wrap (_caf ,_adga ,"");};_gcbf +=_ecfb ;if _caf =_eeb .writeFlags (w );_caf !=nil {return _gcbf ,_fd .Wrap (_caf ,_adga ,"");};_gcbf ++;_ecfb ,_caf =_eeb .writeReferredToCount (w );if _caf !=nil {return 0,_fd .Wrap (_caf ,_adga ,"");};_gcbf +=_ecfb ;_ecfb ,_caf =_eeb .writeReferredToSegments (w );if _caf !=nil {return 0,_fd .Wrap (_caf ,_adga ,"");};_gcbf +=_ecfb ;_ecfb ,_caf =_eeb .writeSegmentPageAssociation (w );if _caf !=nil {return 0,_fd .Wrap (_caf ,_adga ,"");};_gcbf +=_ecfb ;_ecfb ,_caf =_eeb .writeSegmentDataLength (w );if _caf !=nil {return 0,_fd .Wrap (_caf ,_adga ,"");};_gcbf +=_ecfb ;_eeb .HeaderLength =int64 (_gcbf )-int64 (_eeb .SegmentDataLength );if _dcb !=nil {if _ ,_caf =w .Write (_dcb .Data ());_caf !=nil {return _gcbf ,_fd .Wrap (_caf ,_adga ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");};};return _gcbf ,nil ;};func (_gece *SymbolDictionary )encodeSymbols (_fccg _cb .BinaryWriter )(_gccf int ,_aecf error ){const _fefad ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_efff :=_bb .New ();_efff .Init ();_gbdac ,_aecf :=_gece ._ffd .SelectByIndexes (_gece ._feea );if _aecf !=nil {return 0,_fd .Wrap (_aecf ,_fefad ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_fbda :=map[*_cbd .Bitmap ]int {};for _cccb ,_dgfg :=range _gbdac .Values {_fbda [_dgfg ]=_cccb ;};_gbdac .SortByHeight ();var _bdbbb ,_deca int ;_cgcec ,_aecf :=_gbdac .GroupByHeight ();if _aecf !=nil {return 0,_fd .Wrap (_aecf ,_fefad ,"");};for _ ,_dbacd :=range _cgcec .Values {_gdgd :=_dbacd .Values [0].Height ;_fgg :=_gdgd -_bdbbb ;if _aecf =_efff .EncodeInteger (_bb .IADH ,_fgg );_aecf !=nil {return 0,_fd .Wrapf (_aecf ,_fefad ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_fgg );};_bdbbb =_gdgd ;_dbef ,_gebgb :=_dbacd .GroupByWidth ();if _gebgb !=nil {return 0,_fd .Wrapf (_gebgb ,_fefad ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_gdgd );};var _cadb int ;for _ ,_daaf :=range _dbef .Values {for _ ,_ccgg :=range _daaf .Values {_egbf :=_ccgg .Width ;_bdbf :=_egbf -_cadb ;if _gebgb =_efff .EncodeInteger (_bb .IADW ,_bdbf );_gebgb !=nil {return 0,_fd .Wrapf (_gebgb ,_fefad ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_bdbf );};_cadb +=_bdbf ;if _gebgb =_efff .EncodeBitmap (_ccgg ,false );_gebgb !=nil {return 0,_fd .Wrapf (_gebgb ,_fefad ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_gdgd ,_egbf );};_gecf :=_fbda [_ccgg ];_gece ._gggf [_gecf ]=_deca ;_deca ++;};};if _gebgb =_efff .EncodeOOB (_bb .IADW );_gebgb !=nil {return 0,_fd .Wrap (_gebgb ,_fefad ,"\u0049\u0041\u0044\u0057");};};if _aecf =_efff .EncodeInteger (_bb .IAEX ,0);_aecf !=nil {return 0,_fd .Wrap (_aecf ,_fefad ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};if _aecf =_efff .EncodeInteger (_bb .IAEX ,len (_gece ._feea ));_aecf !=nil {return 0,_fd .Wrap (_aecf ,_fefad ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_efff .Final ();_accd ,_aecf :=_efff .WriteTo (_fccg );if _aecf !=nil {return 0,_fd .Wrap (_aecf ,_fefad ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};return int (_accd ),nil ;};func (_babed *SymbolDictionary )readNumberOfExportedSymbols ()error {_ecgc ,_faff :=_babed ._gcff .ReadBits (32);if _faff !=nil {return _faff ;};_babed .NumberOfExportedSymbols =uint32 (_ecgc &_f .MaxUint32 );return nil ;};func (_egcb *TableSegment )HtOOB ()int32 {return _egcb ._agbe };func (_bcdc *SymbolDictionary )GetDictionary ()([]*_cbd .Bitmap ,error ){_ec .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){_ec .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");_ec .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_bcdc ._geaf ,_bcdc ._acce );}();if _bcdc ._geaf ==nil {var _dcafc error ;if _bcdc .UseRefinementAggregation {_bcdc ._feae =_bcdc .getSbSymCodeLen ();};if !_bcdc .IsHuffmanEncoded {if _dcafc =_bcdc .setCodingStatistics ();_dcafc !=nil {return nil ,_dcafc ;};};_bcdc ._acce =make ([]*_cbd .Bitmap ,_bcdc .NumberOfNewSymbols );var _gebgc []int ;if _bcdc .IsHuffmanEncoded &&!_bcdc .UseRefinementAggregation {_gebgc =make ([]int ,_bcdc .NumberOfNewSymbols );};if _dcafc =_bcdc .setSymbolsArray ();_dcafc !=nil {return nil ,_dcafc ;};var _ggfdb ,_gdb int64 ;_bcdc ._bfa =0;for _bcdc ._bfa < _bcdc .NumberOfNewSymbols {_gdb ,_dcafc =_bcdc .decodeHeightClassDeltaHeight ();if _dcafc !=nil {return nil ,_dcafc ;};_ggfdb +=_gdb ;var _ggb ,_dcga uint32 ;_dff :=int64 (_bcdc ._bfa );for {var _aage int64 ;_aage ,_dcafc =_bcdc .decodeDifferenceWidth ();if _ac .Is (_dcafc ,_bg .ErrOOB ){break ;};if _dcafc !=nil {return nil ,_dcafc ;};if _bcdc ._bfa >=_bcdc .NumberOfNewSymbols {break ;};_ggb +=uint32 (_aage );_dcga +=_ggb ;if !_bcdc .IsHuffmanEncoded ||_bcdc .UseRefinementAggregation {if !_bcdc .UseRefinementAggregation {_dcafc =_bcdc .decodeDirectlyThroughGenericRegion (_ggb ,uint32 (_ggfdb ));if _dcafc !=nil {return nil ,_dcafc ;};}else {_dcafc =_bcdc .decodeAggregate (_ggb ,uint32 (_ggfdb ));if _dcafc !=nil {return nil ,_dcafc ;};};}else if _bcdc .IsHuffmanEncoded &&!_bcdc .UseRefinementAggregation {_gebgc [_bcdc ._bfa ]=int (_ggb );};_bcdc ._bfa ++;};if _bcdc .IsHuffmanEncoded &&!_bcdc .UseRefinementAggregation {var _cdea int64 ;if _bcdc .SdHuffBMSizeSelection ==0{var _acff _ae .Tabler ;_acff ,_dcafc =_ae .GetStandardTable (1);if _dcafc !=nil {return nil ,_dcafc ;};_cdea ,_dcafc =_acff .Decode (_bcdc ._gcff );if _dcafc !=nil {return nil ,_dcafc ;};}else {_cdea ,_dcafc =_bcdc .huffDecodeBmSize ();if _dcafc !=nil {return nil ,_dcafc ;};};_bcdc ._gcff .Align ();var _eefb *_cbd .Bitmap ;_eefb ,_dcafc =_bcdc .decodeHeightClassCollectiveBitmap (_cdea ,uint32 (_ggfdb ),_dcga );if _dcafc !=nil {return nil ,_dcafc ;};_dcafc =_bcdc .decodeHeightClassBitmap (_eefb ,_dff ,int (_ggfdb ),_gebgc );if _dcafc !=nil {return nil ,_dcafc ;};};};_abdb ,_dcafc :=_bcdc .getToExportFlags ();if _dcafc !=nil {return nil ,_dcafc ;};_bcdc .setExportedSymbols (_abdb );};return _bcdc ._geaf ,nil ;};func (_gdgcc *TextRegion )Init (header *Header ,r _cb .StreamReader )error {_gdgcc .Header =header ;_gdgcc ._fdce =r ;_gdgcc .RegionInfo =NewRegionSegment (_gdgcc ._fdce );return _gdgcc .parseHeader ();};func (_gege *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _gege .IsHuffmanEncoded {return _gege .decodeHeightClassDeltaHeightWithHuffman ();};_gebe ,_fcbcge :=_gege ._gcbg .DecodeInt (_gege ._cefd );if _fcbcge !=nil {return 0,_fcbcge ;};return int64 (_gebe ),nil ;};func (_gceb *PatternDictionary )Init (h *Header ,r _cb .StreamReader )error {_gceb ._dage =r ;return _gceb .parseHeader ();};type PageInformationSegment struct{_ggab _cb .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_acc bool ;_bde _cbd .CombinationOperator ;_bdgf bool ;_ddda uint8 ;_ddeb bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_cade *RegionSegment )readCombinationOperator ()error {_cdbe ,_cec :=_cade ._gedd .ReadBits (3);if _cec !=nil {return _cec ;};_cade .CombinaionOperator =_cbd .CombinationOperator (_cdbe &0xF);return nil ;};func (_fbcg *Header )readDataStartOffset (_geaeg _cb .StreamReader ,_eabf OrganizationType ){if _eabf ==OSequential {_fbcg .SegmentDataStartOffset =uint64 (_geaeg .StreamPosition ());};};func (_bgeg *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _bgeg .IsHuffmanEncoded {switch _bgeg .SdHuffDecodeWidthSelection {case 0:_gecg ,_cgeee :=_ae .GetStandardTable (2);if _cgeee !=nil {return 0,_cgeee ;};return _gecg .Decode (_bgeg ._gcff );case 1:_fefb ,_cfcfb :=_ae .GetStandardTable (3);if _cfcfb !=nil {return 0,_cfcfb ;};return _fefb .Decode (_bgeg ._gcff );case 3:if _bgeg ._dadg ==nil {var _fabea int ;if _bgeg .SdHuffDecodeHeightSelection ==3{_fabea ++;};_cfbbf ,_ecga :=_bgeg .getUserTable (_fabea );if _ecga !=nil {return 0,_ecga ;};_bgeg ._dadg =_cfbbf ;};return _bgeg ._dadg .Decode (_bgeg ._gcff );};}else {_cfcgg ,_ddbe :=_bgeg ._gcbg .DecodeInt (_bgeg ._bced );if _ddbe !=nil {return 0,_ddbe ;};return int64 (_cfcgg ),nil ;};return 0,nil ;};func (_ceca *SymbolDictionary )setExportedSymbols (_efge []int ){for _ebab :=uint32 (0);_ebab < _ceca ._gbda +_ceca .NumberOfNewSymbols ;_ebab ++{if _efge [_ebab ]==1{var _eadd *_cbd .Bitmap ;if _ebab < _ceca ._gbda {_eadd =_ceca ._caeg [_ebab ];}else {_eadd =_ceca ._acce [_ebab -_ceca ._gbda ];};_ec .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_eadd );_ceca ._geaf =append (_ceca ._geaf ,_eadd );};};};type SymbolDictionary struct{_gcff _cb .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_bdce bool ;_gfdc bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_gbda uint32 ;_caeg []*_cbd .Bitmap ;_bfa uint32 ;_acce []*_cbd .Bitmap ;_faaf _ae .Tabler ;_dadg _ae .Tabler ;_dbff _ae .Tabler ;_geacb _ae .Tabler ;_geaf []*_cbd .Bitmap ;_deagf []*_cbd .Bitmap ;_gcbg *_aa .Decoder ;_fgfg *TextRegion ;_beee *GenericRegion ;_gbg *GenericRefinementRegion ;_bafa *_aa .DecoderStats ;_cefd *_aa .DecoderStats ;_bced *_aa .DecoderStats ;_gace *_aa .DecoderStats ;_ggcfc *_aa .DecoderStats ;_ddb *_aa .DecoderStats ;_gcgc *_aa .DecoderStats ;_gcbb *_aa .DecoderStats ;_dbge *_aa .DecoderStats ;_feae int8 ;_ffd *_cbd .Bitmaps ;_feea []int ;_gggf map[int ]int ;_efgd bool ;};func (_ebaec *TableSegment )HtPS ()int32 {return _ebaec ._gdeg };func (_cgb *GenericRegion )Encode (w _cb .BinaryWriter )(_ggg int ,_eecc error ){const _faee ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _cgb .Bitmap ==nil {return 0,_fd .Error (_faee ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_cdce ,_eecc :=_cgb .RegionSegment .Encode (w );if _eecc !=nil {return 0,_fd .Wrap (_eecc ,_faee ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_ggg +=_cdce ;if _eecc =w .SkipBits (4);_eecc !=nil {return _ggg ,_fd .Wrap (_eecc ,_faee ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _fab int ;if _cgb .IsTPGDon {_fab =1;};if _eecc =w .WriteBit (_fab );_eecc !=nil {return _ggg ,_fd .Wrap (_eecc ,_faee ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_fab =0;if _eecc =w .WriteBit (int (_cgb .GBTemplate >>1)&0x01);_eecc !=nil {return _ggg ,_fd .Wrap (_eecc ,_faee ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");};if _eecc =w .WriteBit (int (_cgb .GBTemplate )&0x01);_eecc !=nil {return _ggg ,_fd .Wrap (_eecc ,_faee ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _cgb .UseMMR {_fab =1;};if _eecc =w .WriteBit (_fab );_eecc !=nil {return _ggg ,_fd .Wrap (_eecc ,_faee ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_ggg ++;if _cdce ,_eecc =_cgb .writeGBAtPixels (w );_eecc !=nil {return _ggg ,_fd .Wrap (_eecc ,_faee ,"");};_ggg +=_cdce ;_beb :=_bb .New ();if _eecc =_beb .EncodeBitmap (_cgb .Bitmap ,_cgb .IsTPGDon );_eecc !=nil {return _ggg ,_fd .Wrap (_eecc ,_faee ,"");};_beb .Final ();var _ecg int64 ;if _ecg ,_eecc =_beb .WriteTo (w );_eecc !=nil {return _ggg ,_fd .Wrap (_eecc ,_faee ,"");};_ggg +=int (_ecg );return _ggg ,nil ;};func (_fgb *GenericRefinementRegion )setParameters (_adg *_aa .DecoderStats ,_ccf *_aa .Decoder ,_ecf int8 ,_gea ,_eef uint32 ,_bab *_cbd .Bitmap ,_gbc ,_aef int32 ,_eaef bool ,_gcac []int8 ,_gf []int8 ){_ec .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");if _adg !=nil {_fgb ._gd =_adg ;};if _ccf !=nil {_fgb ._g =_ccf ;};_fgb .TemplateID =_ecf ;_fgb .RegionInfo .BitmapWidth =_gea ;_fgb .RegionInfo .BitmapHeight =_eef ;_fgb .ReferenceBitmap =_bab ;_fgb .ReferenceDX =_gbc ;_fgb .ReferenceDY =_aef ;_fgb .IsTPGROn =_eaef ;_fgb .GrAtX =_gcac ;_fgb .GrAtY =_gf ;_fgb .RegionBitmap =nil ;_ec .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_fgb );};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _cb .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_fafgg *TextRegion )decodeRdx ()(int64 ,error ){const _adbf ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _fafgg .IsHuffmanEncoded {if _fafgg .SbHuffRDX ==3{if _fafgg ._daba ==nil {var (_fdcb int ;_adea error ;);if _fafgg .SbHuffFS ==3{_fdcb ++;};if _fafgg .SbHuffDS ==3{_fdcb ++;};if _fafgg .SbHuffDT ==3{_fdcb ++;};if _fafgg .SbHuffRDWidth ==3{_fdcb ++;};if _fafgg .SbHuffRDHeight ==3{_fdcb ++;};_fafgg ._daba ,_adea =_fafgg .getUserTable (_fdcb );if _adea !=nil {return 0,_fd .Wrap (_adea ,_adbf ,"");};};return _fafgg ._daba .Decode (_fafgg ._fdce );};_edfb ,_gfdgg :=_ae .GetStandardTable (14+int (_fafgg .SbHuffRDX ));if _gfdgg !=nil {return 0,_fd .Wrap (_gfdgg ,_adbf ,"");};return _edfb .Decode (_fafgg ._fdce );};_bdee ,_cacc :=_fafgg ._dccfb .DecodeInt (_fafgg ._cegc );if _cacc !=nil {return 0,_fd .Wrap (_cacc ,_adbf ,"");};return int64 (_bdee ),nil ;};func (_ecgb *TextRegion )parseHeader ()error {var _fgfb error ;_ec .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _fgfb !=nil {_ec .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_fgfb );}else {_ec .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _fgfb =_ecgb .RegionInfo .parseHeader ();_fgfb !=nil {return _fgfb ;};if _fgfb =_ecgb .readRegionFlags ();_fgfb !=nil {return _fgfb ;};if _ecgb .IsHuffmanEncoded {if _fgfb =_ecgb .readHuffmanFlags ();_fgfb !=nil {return _fgfb ;};};if _fgfb =_ecgb .readUseRefinement ();_fgfb !=nil {return _fgfb ;};if _fgfb =_ecgb .readAmountOfSymbolInstances ();_fgfb !=nil {return _fgfb ;};if _fgfb =_ecgb .getSymbols ();_fgfb !=nil {return _fgfb ;};if _fgfb =_ecgb .computeSymbolCodeLength ();_fgfb !=nil {return _fgfb ;};if _fgfb =_ecgb .checkInput ();_fgfb !=nil {return _fgfb ;};_ec .Log .Trace ("\u0025\u0073",_ecgb .String ());return nil ;};func (_gcaa *GenericRefinementRegion )decodeTemplate (_dcc ,_cdd ,_cbdf ,_gee ,_defe ,_bec ,_bgd ,_efg ,_aae ,_dgdfd int ,_adb templater )(_bgag error ){var (_agc ,_ade ,_fbg ,_agfb ,_egcc int16 ;_cda ,_ebc ,_fdd ,_gab int ;_gdc byte ;);if _aae >=1&&(_aae -1)< _gcaa .ReferenceBitmap .Height {_gdc ,_bgag =_gcaa .ReferenceBitmap .GetByte (_dgdfd -_gee );if _bgag !=nil {return ;};_cda =int (_gdc );};if _aae >=0&&(_aae )< _gcaa .ReferenceBitmap .Height {_gdc ,_bgag =_gcaa .ReferenceBitmap .GetByte (_dgdfd );if _bgag !=nil {return ;};_ebc =int (_gdc );};if _aae >=-1&&(_aae +1)< _gcaa .ReferenceBitmap .Height {_gdc ,_bgag =_gcaa .ReferenceBitmap .GetByte (_dgdfd +_gee );if _bgag !=nil {return ;};_fdd =int (_gdc );};_dgdfd ++;if _dcc >=1{_gdc ,_bgag =_gcaa .RegionBitmap .GetByte (_efg -_cbdf );if _bgag !=nil {return ;};_gab =int (_gdc );};_efg ++;_cfc :=_gcaa .ReferenceDX %8;_bc :=6+_cfc ;_bcb :=_dgdfd %_gee ;if _bc >=0{if _bc < 8{_agc =int16 (_cda >>uint (_bc ))&0x07;};if _bc < 8{_ade =int16 (_ebc >>uint (_bc ))&0x07;};if _bc < 8{_fbg =int16 (_fdd >>uint (_bc ))&0x07;};if _bc ==6&&_bcb > 1{if _aae >=1&&(_aae -1)< _gcaa .ReferenceBitmap .Height {_gdc ,_bgag =_gcaa .ReferenceBitmap .GetByte (_dgdfd -_gee -2);if _bgag !=nil {return _bgag ;};_agc |=int16 (_gdc <<2)&0x04;};if _aae >=0&&_aae < _gcaa .ReferenceBitmap .Height {_gdc ,_bgag =_gcaa .ReferenceBitmap .GetByte (_dgdfd -2);if _bgag !=nil {return _bgag ;};_ade |=int16 (_gdc <<2)&0x04;};if _aae >=-1&&_aae +1< _gcaa .ReferenceBitmap .Height {_gdc ,_bgag =_gcaa .ReferenceBitmap .GetByte (_dgdfd +_gee -2);if _bgag !=nil {return _bgag ;};_fbg |=int16 (_gdc <<2)&0x04;};};if _bc ==0{_cda =0;_ebc =0;_fdd =0;if _bcb < _gee -1{if _aae >=1&&_aae -1< _gcaa .ReferenceBitmap .Height {_gdc ,_bgag =_gcaa .ReferenceBitmap .GetByte (_dgdfd -_gee );if _bgag !=nil {return _bgag ;};_cda =int (_gdc );};if _aae >=0&&_aae < _gcaa .ReferenceBitmap .Height {_gdc ,_bgag =_gcaa .ReferenceBitmap .GetByte (_dgdfd );if _bgag !=nil {return _bgag ;};_ebc =int (_gdc );};if _aae >=-1&&_aae +1< _gcaa .ReferenceBitmap .Height {_gdc ,_bgag =_gcaa .ReferenceBitmap .GetByte (_dgdfd +_gee );if _bgag !=nil {return _bgag ;};_fdd =int (_gdc );};};_dgdfd ++;};}else {_agc =int16 (_cda <<1)&0x07;_ade =int16 (_ebc <<1)&0x07;_fbg =int16 (_fdd <<1)&0x07;_cda =0;_ebc =0;_fdd =0;if _bcb < _gee -1{if _aae >=1&&_aae -1< _gcaa .ReferenceBitmap .Height {_gdc ,_bgag =_gcaa .ReferenceBitmap .GetByte (_dgdfd -_gee );if _bgag !=nil {return _bgag ;};_cda =int (_gdc );};if _aae >=0&&_aae < _gcaa .ReferenceBitmap .Height {_gdc ,_bgag =_gcaa .ReferenceBitmap .GetByte (_dgdfd );if _bgag !=nil {return _bgag ;};_ebc =int (_gdc );};if _aae >=-1&&_aae +1< _gcaa .ReferenceBitmap .Height {_gdc ,_bgag =_gcaa .ReferenceBitmap .GetByte (_dgdfd +_gee );if _bgag !=nil {return _bgag ;};_fdd =int (_gdc );};_dgdfd ++;};_agc |=int16 ((_cda >>7)&0x07);_ade |=int16 ((_ebc >>7)&0x07);_fbg |=int16 ((_fdd >>7)&0x07);};_agfb =int16 (_gab >>6);_egcc =0;_edd :=(2-_cfc )%8;_cda <<=uint (_edd );_ebc <<=uint (_edd );_fdd <<=uint (_edd );_gab <<=2;var _deb int ;for _dda :=0;_dda < _cdd ;_dda ++{_affa :=_dda &0x07;_edg :=_adb .form (_agc ,_ade ,_fbg ,_agfb ,_egcc );if _gcaa ._def {_gdc ,_bgag =_gcaa .RegionBitmap .GetByte (_gcaa .RegionBitmap .GetByteIndex (_dda ,_dcc ));if _bgag !=nil {return _bgag ;};_gcaa ._gd .SetIndex (int32 (_gcaa .overrideAtTemplate0 (int (_edg ),_dda ,_dcc ,int (_gdc ),_affa )));}else {_gcaa ._gd .SetIndex (int32 (_edg ));};_deb ,_bgag =_gcaa ._g .DecodeBit (_gcaa ._gd );if _bgag !=nil {return _bgag ;};if _bgag =_gcaa .RegionBitmap .SetPixel (_dda ,_dcc ,byte (_deb ));_bgag !=nil {return _bgag ;};_agc =((_agc <<1)|0x01&int16 (_cda >>7))&0x07;_ade =((_ade <<1)|0x01&int16 (_ebc >>7))&0x07;_fbg =((_fbg <<1)|0x01&int16 (_fdd >>7))&0x07;_agfb =((_agfb <<1)|0x01&int16 (_gab >>7))&0x07;_egcc =int16 (_deb );if (_dda -int (_gcaa .ReferenceDX ))%8==5{_cda =0;_ebc =0;_fdd =0;if ((_dda -int (_gcaa .ReferenceDX ))/8)+1< _gcaa .ReferenceBitmap .RowStride {if _aae >=1&&(_aae -1)< _gcaa .ReferenceBitmap .Height {_gdc ,_bgag =_gcaa .ReferenceBitmap .GetByte (_dgdfd -_gee );if _bgag !=nil {return _bgag ;};_cda =int (_gdc );};if _aae >=0&&_aae < _gcaa .ReferenceBitmap .Height {_gdc ,_bgag =_gcaa .ReferenceBitmap .GetByte (_dgdfd );if _bgag !=nil {return _bgag ;};_ebc =int (_gdc );};if _aae >=-1&&(_aae +1)< _gcaa .ReferenceBitmap .Height {_gdc ,_bgag =_gcaa .ReferenceBitmap .GetByte (_dgdfd +_gee );if _bgag !=nil {return _bgag ;};_fdd =int (_gdc );};};_dgdfd ++;}else {_cda <<=1;_ebc <<=1;_fdd <<=1;};if _affa ==5&&_dcc >=1{if ((_dda >>3)+1)>=_gcaa .RegionBitmap .RowStride {_gab =0;}else {_gdc ,_bgag =_gcaa .RegionBitmap .GetByte (_efg -_cbdf );if _bgag !=nil {return _bgag ;};_gab =int (_gdc );};_efg ++;}else {_gab <<=1;};};return nil ;};func (_cefa *TableSegment )HtLow ()int32 {return _cefa ._efgdg };func (_bacb *PageInformationSegment )readMaxStripeSize ()error {_beaa ,_afba :=_bacb ._ggab .ReadBits (15);if _afba !=nil {return _afba ;};_bacb .MaxStripeSize =uint16 (_beaa &_f .MaxUint16 );return nil ;};func (_bgbg *Header )pageSize ()uint {if _bgbg .PageAssociation <=255{return 1;};return 4;};func (_caaf *Header )subInputReader ()(_cb .StreamReader ,error ){return _cb .NewSubstreamReader (_caaf .Reader ,_caaf .SegmentDataStartOffset ,_caaf .SegmentDataLength );};func (_gdge *Header )writeSegmentPageAssociation (_cgg _cb .BinaryWriter )(_dccg int ,_caafa error ){const _egaa ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";if _gdge .pageSize ()!=4{if _caafa =_cgg .WriteByte (byte (_gdge .PageAssociation ));_caafa !=nil {return 0,_fd .Wrap (_caafa ,_egaa ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_dbfb :=make ([]byte ,4);_b .BigEndian .PutUint32 (_dbfb ,uint32 (_gdge .PageAssociation ));if _dccg ,_caafa =_cgg .Write (_dbfb );_caafa !=nil {return 0,_fd .Wrap (_caafa ,_egaa ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _dccg ,nil ;};func (_geec *HalftoneRegion )computeX (_dcce ,_eafe int )int {return _geec .shiftAndFill (int (_geec .HGridX )+_dcce *int (_geec .HRegionY )+_eafe *int (_geec .HRegionX ));};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_fgebc *HalftoneRegion )GetPatterns ()([]*_cbd .Bitmap ,error ){var (_ffbb []*_cbd .Bitmap ;_ace error ;);for _ ,_aagf :=range _fgebc ._dbac .RTSegments {var _adge Segmenter ;_adge ,_ace =_aagf .GetSegmentData ();if _ace !=nil {_ec .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_ace );return nil ,_ace ;};_fgag ,_bcaac :=_adge .(*PatternDictionary );if !_bcaac {_ace =_e .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_adge );return nil ,_ace ;};var _cag []*_cbd .Bitmap ;_cag ,_ace =_fgag .GetDictionary ();if _ace !=nil {_ec .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ace );return nil ,_ace ;};_ffbb =append (_ffbb ,_cag ...);};return _ffbb ,nil ;};func (_befg *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_befg .SdHuffAggInstanceSelection {_caba ,_cbeb :=_ae .GetStandardTable (1);if _cbeb !=nil {return 0,_cbeb ;};return _caba .Decode (_befg ._gcff );};if _befg ._geacb ==nil {var (_bdd int ;_gdae error ;);if _befg .SdHuffDecodeHeightSelection ==3{_bdd ++;};if _befg .SdHuffDecodeWidthSelection ==3{_bdd ++;};if _befg .SdHuffBMSizeSelection ==3{_bdd ++;};_befg ._geacb ,_gdae =_befg .getUserTable (_bdd );if _gdae !=nil {return 0,_gdae ;};};return _befg ._geacb .Decode (_befg ._gcff );};func NewHeader (d Documenter ,r _cb .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_eaaf :=&Header {Reader :r };if _bebd :=_eaaf .parse (d ,r ,offset ,organizationType );_bebd !=nil {return nil ,_fd .Wrap (_bebd ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _eaaf ,nil ;};type templater interface{form (_cdf ,_ffa ,_fcfd ,_gdg ,_fcb int16 )int16 ;setIndex (_dgg *_aa .DecoderStats );};func (_gddb *PageInformationSegment )parseHeader ()(_edgc error ){_ec .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");defer func (){var _fbbf ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";if _edgc !=nil {_fbbf +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_edgc .Error ();}else {_fbbf +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_ec .Log .Trace (_fbbf );}();if _edgc =_gddb .readWidthAndHeight ();_edgc !=nil {return _edgc ;};if _edgc =_gddb .readResolution ();_edgc !=nil {return _edgc ;};_ ,_edgc =_gddb ._ggab .ReadBit ();if _edgc !=nil {return _edgc ;};if _edgc =_gddb .readCombinationOperatorOverrideAllowed ();_edgc !=nil {return _edgc ;};if _edgc =_gddb .readRequiresAuxiliaryBuffer ();_edgc !=nil {return _edgc ;};if _edgc =_gddb .readCombinationOperator ();_edgc !=nil {return _edgc ;};if _edgc =_gddb .readDefaultPixelValue ();_edgc !=nil {return _edgc ;};if _edgc =_gddb .readContainsRefinement ();_edgc !=nil {return _edgc ;};if _edgc =_gddb .readIsLossless ();_edgc !=nil {return _edgc ;};if _edgc =_gddb .readIsStriped ();_edgc !=nil {return _edgc ;};if _edgc =_gddb .readMaxStripeSize ();_edgc !=nil {return _edgc ;};if _edgc =_gddb .checkInput ();_edgc !=nil {return _edgc ;};_ec .Log .Trace ("\u0025\u0073",_gddb );return nil ;};func (_fagc *TextRegion )initSymbols ()error {const _gddga ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_aad :=range _fagc .Header .RTSegments {if _aad ==nil {return _fd .Error (_gddga ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");};if _aad .Type ==0{_gefd ,_ecaef :=_aad .GetSegmentData ();if _ecaef !=nil {return _fd .Wrap (_ecaef ,_gddga ,"");};_ggdebf ,_dcdeb :=_gefd .(*SymbolDictionary );if !_dcdeb {return _fd .Error (_gddga ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_ggdebf ._dbge =_fagc ._accdc ;_gdgeb ,_ecaef :=_ggdebf .GetDictionary ();if _ecaef !=nil {return _fd .Wrap (_ecaef ,_gddga ,"");};_fagc .Symbols =append (_fagc .Symbols ,_gdgeb ...);};};_fagc .NumberOfSymbols =uint32 (len (_fagc .Symbols ));return nil ;};func (_ece *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_edc ,_ab ,_fadb ,_dgd ,_ede ,_dgdf ,_egc ,_bbbb ,_agb int )error {var (_defg ,_ead ,_geb ,_eb ,_feb ,_ffb int ;_fcc byte ;_eae error ;);if _edc > 0{_fcc ,_eae =_ece .RegionBitmap .GetByte (_egc -_fadb );if _eae !=nil {return _eae ;};_geb =int (_fcc );};if _bbbb > 0&&_bbbb <=_ece .ReferenceBitmap .Height {_fcc ,_eae =_ece .ReferenceBitmap .GetByte (_agb -_dgd +_dgdf );if _eae !=nil {return _eae ;};_eb =int (_fcc )<<4;};if _bbbb >=0&&_bbbb < _ece .ReferenceBitmap .Height {_fcc ,_eae =_ece .ReferenceBitmap .GetByte (_agb +_dgdf );if _eae !=nil {return _eae ;};_feb =int (_fcc )<<1;};if _bbbb > -2&&_bbbb < _ece .ReferenceBitmap .Height -1{_fcc ,_eae =_ece .ReferenceBitmap .GetByte (_agb +_dgd +_dgdf );if _eae !=nil {return _eae ;};_ffb =int (_fcc );};_defg =((_geb >>5)&0x6)|((_ffb >>2)&0x30)|(_feb &0x180)|(_eb &0xc00);var _ba int ;for _edcf :=0;_edcf < _ede ;_edcf =_ba {var _cge int ;_ba =_edcf +8;var _deag int ;if _deag =_ab -_edcf ;_deag > 8{_deag =8;};_cbc :=_ba < _ab ;_fea :=_ba < _ece .ReferenceBitmap .Width ;_dfea :=_dgdf +1;if _edc > 0{_fcc =0;if _cbc {_fcc ,_eae =_ece .RegionBitmap .GetByte (_egc -_fadb +1);if _eae !=nil {return _eae ;};};_geb =(_geb <<8)|int (_fcc );};if _bbbb > 0&&_bbbb <=_ece .ReferenceBitmap .Height {var _agbg int ;if _fea {_fcc ,_eae =_ece .ReferenceBitmap .GetByte (_agb -_dgd +_dfea );if _eae !=nil {return _eae ;};_agbg =int (_fcc )<<4;};_eb =(_eb <<8)|_agbg ;};if _bbbb >=0&&_bbbb < _ece .ReferenceBitmap .Height {var _add int ;if _fea {_fcc ,_eae =_ece .ReferenceBitmap .GetByte (_agb +_dfea );if _eae !=nil {return _eae ;};_add =int (_fcc )<<1;};_feb =(_feb <<8)|_add ;};if _bbbb > -2&&_bbbb < (_ece .ReferenceBitmap .Height -1){_fcc =0;if _fea {_fcc ,_eae =_ece .ReferenceBitmap .GetByte (_agb +_dgd +_dfea );if _eae !=nil {return _eae ;};};_ffb =(_ffb <<8)|int (_fcc );};for _cab :=0;_cab < _deag ;_cab ++{var _bf int ;_bga :=false ;_eab :=(_defg >>4)&0x1ff;if _eab ==0x1ff{_bga =true ;_bf =1;}else if _eab ==0x00{_bga =true ;};if !_bga {if _ece ._def {_ead =_ece .overrideAtTemplate0 (_defg ,_edcf +_cab ,_edc ,_cge ,_cab );_ece ._gd .SetIndex (int32 (_ead ));}else {_ece ._gd .SetIndex (int32 (_defg ));};_bf ,_eae =_ece ._g .DecodeBit (_ece ._gd );if _eae !=nil {return _eae ;};};_fef :=uint (7-_cab );_cge |=_bf <<_fef ;_defg =((_defg &0xdb6)<<1)|_bf |(_geb >>_fef +5)&0x002|((_ffb >>_fef +2)&0x010)|((_feb >>_fef )&0x080)|((_eb >>_fef )&0x400);};_eae =_ece .RegionBitmap .SetByte (_egc ,byte (_cge ));if _eae !=nil {return _eae ;};_egc ++;_agb ++;};return nil ;};func (_gge *PatternDictionary )readTemplate ()error {_cdfc ,_dae :=_gge ._dage .ReadBits (2);if _dae !=nil {return _dae ;};_gge .HDTemplate =byte (_cdfc );return nil ;};func (_ggde *PageInformationSegment )readIsStriped ()error {_efga ,_gcg :=_ggde ._ggab .ReadBit ();if _gcg !=nil {return _gcg ;};if _efga ==1{_ggde .IsStripe =true ;};return nil ;};func (_eddg *SymbolDictionary )String ()string {_dgca :=&_ca .Builder {};_dgca .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_dgca .WriteString (_e .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_eddg .SdrTemplate ));_dgca .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_eddg .SdTemplate ));_dgca .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_eddg ._bdce ));_dgca .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_eddg ._gfdc ));_dgca .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_eddg .SdHuffAggInstanceSelection ));_dgca .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_eddg .SdHuffBMSizeSelection ));_dgca .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_eddg .SdHuffDecodeWidthSelection ));_dgca .WriteString (_e .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_eddg .SdHuffDecodeHeightSelection ));_dgca .WriteString (_e .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_eddg .UseRefinementAggregation ));_dgca .WriteString (_e .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_eddg .IsHuffmanEncoded ));_dgca .WriteString (_e .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_eddg .SdATX ));_dgca .WriteString (_e .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_eddg .SdATY ));_dgca .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_eddg .SdrATX ));_dgca .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_eddg .SdrATY ));_dgca .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_eddg .NumberOfExportedSymbols ));_dgca .WriteString (_e .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_eddg .NumberOfNewSymbols ));_dgca .WriteString (_e .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_eddg ._gbda ));_dgca .WriteString (_e .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_eddg ._bfa ));return _dgca .String ();};func (_fgacc *TextRegion )symbolIDCodeLengths ()error {var (_bbd []*_ae .Code ;_dbbf uint64 ;_abcg _ae .Tabler ;_bdfd error ;);for _aefg :=0;_aefg < 35;_aefg ++{_dbbf ,_bdfd =_fgacc ._fdce .ReadBits (4);if _bdfd !=nil {return _bdfd ;};_dgdc :=int (_dbbf &0xf);if _dgdc > 0{_bbd =append (_bbd ,_ae .NewCode (int32 (_dgdc ),0,int32 (_aefg ),false ));};};_abcg ,_bdfd =_ae .NewFixedSizeTable (_bbd );if _bdfd !=nil {return _bdfd ;};var (_cgdg int64 ;_aaeac uint32 ;_ceffa []*_ae .Code ;_bgfe int64 ;);for _aaeac < _fgacc .NumberOfSymbols {_bgfe ,_bdfd =_abcg .Decode (_fgacc ._fdce );if _bdfd !=nil {return _bdfd ;};if _bgfe < 32{if _bgfe > 0{_ceffa =append (_ceffa ,_ae .NewCode (int32 (_bgfe ),0,int32 (_aaeac ),false ));};_cgdg =_bgfe ;_aaeac ++;}else {var _dgdg ,_acef int64 ;switch _bgfe {case 32:_dbbf ,_bdfd =_fgacc ._fdce .ReadBits (2);if _bdfd !=nil {return _bdfd ;};_dgdg =3+int64 (_dbbf );if _aaeac > 0{_acef =_cgdg ;};case 33:_dbbf ,_bdfd =_fgacc ._fdce .ReadBits (3);if _bdfd !=nil {return _bdfd ;};_dgdg =3+int64 (_dbbf );case 34:_dbbf ,_bdfd =_fgacc ._fdce .ReadBits (7);if _bdfd !=nil {return _bdfd ;};_dgdg =11+int64 (_dbbf );};for _fbef :=0;_fbef < int (_dgdg );_fbef ++{if _acef > 0{_ceffa =append (_ceffa ,_ae .NewCode (int32 (_acef ),0,int32 (_aaeac ),false ));};_aaeac ++;};};};_fgacc ._fdce .Align ();_fgacc ._gdbf ,_bdfd =_ae .NewFixedSizeTable (_ceffa );return _bdfd ;};func (_eddc *PageInformationSegment )checkInput ()error {if _eddc .PageBMHeight ==_f .MaxInt32 {if !_eddc .IsStripe {_ec .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");};};return nil ;};func (_aabf *SymbolDictionary )InitEncode (symbols *_cbd .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _dddb ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";_aabf .SdATX =[]int8 {3,-3,2,-2};_aabf .SdATY =[]int8 {-1,-1,-2,-2};_aabf ._ffd =symbols ;_aabf ._feea =make ([]int ,len (symbolList ));copy (_aabf ._feea ,symbolList );if len (_aabf ._feea )!=_aabf ._ffd .Size (){return _fd .Error (_dddb ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");};_aabf .NumberOfNewSymbols =uint32 (symbols .Size ());_aabf .NumberOfExportedSymbols =uint32 (symbols .Size ());_aabf ._gggf =symbolMap ;_aabf ._efgd =unborderSymbols ;return nil ;};func (_cddd *HalftoneRegion )computeSegmentDataStructure ()error {_cddd .DataOffset =_cddd ._ddfca .StreamPosition ();_cddd .DataHeaderLength =_cddd .DataOffset -_cddd .DataHeaderOffset ;_cddd .DataLength =int64 (_cddd ._ddfca .Length ())-_cddd .DataHeaderLength ;return nil ;};func (_ebae *SymbolDictionary )decodeHeightClassCollectiveBitmap (_efaf int64 ,_bcae ,_gddc uint32 )(*_cbd .Bitmap ,error ){if _efaf ==0{_efb :=_cbd .New (int (_gddc ),int (_bcae ));var (_cfdf byte ;_egbb error ;);for _bgac :=0;_bgac < len (_efb .Data );_bgac ++{_cfdf ,_egbb =_ebae ._gcff .ReadByte ();if _egbb !=nil {return nil ,_egbb ;};if _egbb =_efb .SetByte (_bgac ,_cfdf );_egbb !=nil {return nil ,_egbb ;};};return _efb ,nil ;};if _ebae ._beee ==nil {_ebae ._beee =NewGenericRegion (_ebae ._gcff );};_ebae ._beee .setParameters (true ,_ebae ._gcff .StreamPosition (),_efaf ,_bcae ,_gddc );_fafb ,_edcd :=_ebae ._beee .GetRegionBitmap ();if _edcd !=nil {return nil ,_edcd ;};return _fafb ,nil ;};func (_af *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_deff ,_gbe ,_aff ,_fbb ,_ebb ,_bd ,_ggf ,_gdd ,_ga int )(_dcd error ){var (_bgb ,_dad int ;_abd ,_eec int ;_agg ,_fead int ;_ccg byte ;);if _deff > 0{_ccg ,_dcd =_af .RegionBitmap .GetByte (_ggf -_aff );if _dcd !=nil {return ;};_abd =int (_ccg );};if _gdd > 0&&_gdd <=_af .ReferenceBitmap .Height {_ccg ,_dcd =_af .ReferenceBitmap .GetByte (_ga -_fbb +_bd );if _dcd !=nil {return ;};_eec =int (_ccg )<<2;};if _gdd >=0&&_gdd < _af .ReferenceBitmap .Height {_ccg ,_dcd =_af .ReferenceBitmap .GetByte (_ga +_bd );if _dcd !=nil {return ;};_agg =int (_ccg );};if _gdd > -2&&_gdd < _af .ReferenceBitmap .Height -1{_ccg ,_dcd =_af .ReferenceBitmap .GetByte (_ga +_fbb +_bd );if _dcd !=nil {return ;};_fead =int (_ccg );};_bgb =((_abd >>5)&0x6)|((_fead >>2)&0x30)|(_agg &0xc0)|(_eec &0x200);_dad =((_fead >>2)&0x70)|(_agg &0xc0)|(_eec &0x700);var _dgdd int ;for _cca :=0;_cca < _ebb ;_cca =_dgdd {var (_ce int ;_ceg int ;);_dgdd =_cca +8;if _ce =_gbe -_cca ;_ce > 8{_ce =8;};_dbf :=_dgdd < _gbe ;_cgc :=_dgdd < _af .ReferenceBitmap .Width ;_fcd :=_bd +1;if _deff > 0{_ccg =0;if _dbf {_ccg ,_dcd =_af .RegionBitmap .GetByte (_ggf -_aff +1);if _dcd !=nil {return ;};};_abd =(_abd <<8)|int (_ccg );};if _gdd > 0&&_gdd <=_af .ReferenceBitmap .Height {var _gca int ;if _cgc {_ccg ,_dcd =_af .ReferenceBitmap .GetByte (_ga -_fbb +_fcd );if _dcd !=nil {return ;};_gca =int (_ccg )<<2;};_eec =(_eec <<8)|_gca ;};if _gdd >=0&&_gdd < _af .ReferenceBitmap .Height {_ccg =0;if _cgc {_ccg ,_dcd =_af .ReferenceBitmap .GetByte (_ga +_fcd );if _dcd !=nil {return ;};};_agg =(_agg <<8)|int (_ccg );};if _gdd > -2&&_gdd < (_af .ReferenceBitmap .Height -1){_ccg =0;if _cgc {_ccg ,_dcd =_af .ReferenceBitmap .GetByte (_ga +_fbb +_fcd );if _dcd !=nil {return ;};};_fead =(_fead <<8)|int (_ccg );};for _ega :=0;_ega < _ce ;_ega ++{var _aeea int ;_aggf :=(_dad >>4)&0x1ff;switch _aggf {case 0x1ff:_aeea =1;case 0x00:_aeea =0;default:_af ._gd .SetIndex (int32 (_bgb ));_aeea ,_dcd =_af ._g .DecodeBit (_af ._gd );if _dcd !=nil {return ;};};_fde :=uint (7-_ega );_ceg |=_aeea <<_fde ;_bgb =((_bgb &0x0d6)<<1)|_aeea |(_abd >>_fde +5)&0x002|((_fead >>_fde +2)&0x010)|((_agg >>_fde )&0x040)|((_eec >>_fde )&0x200);_dad =((_dad &0xdb)<<1)|((_fead >>_fde +2)&0x010)|((_agg >>_fde )&0x080)|((_eec >>_fde )&0x400);};_dcd =_af .RegionBitmap .SetByte (_ggf ,byte (_ceg ));if _dcd !=nil {return ;};_ggf ++;_ga ++;};return nil ;};func (_deg *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _deg ._dbff ==nil {var (_ebcgc int ;_bcdca error ;);if _deg .SdHuffDecodeHeightSelection ==3{_ebcgc ++;};if _deg .SdHuffDecodeWidthSelection ==3{_ebcgc ++;};_deg ._dbff ,_bcdca =_deg .getUserTable (_ebcgc );if _bcdca !=nil {return 0,_bcdca ;};};return _deg ._dbff .Decode (_deg ._gcff );};type SegmentEncoder interface{Encode (_ebe _cb .BinaryWriter )(_dcfe int ,_gfba error );};func (_cdcb *GenericRefinementRegion )parseHeader ()(_agcg error ){_ec .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");_cbe :=_ag .Now ();defer func (){if _agcg ==nil {_ec .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_ag .Since (_cbe ).Nanoseconds ());}else {_ec .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_agcg );};}();if _agcg =_cdcb .RegionInfo .parseHeader ();_agcg !=nil {return _agcg ;};_ ,_agcg =_cdcb ._ecb .ReadBits (6);if _agcg !=nil {return _agcg ;};_cdcb .IsTPGROn ,_agcg =_cdcb ._ecb .ReadBool ();if _agcg !=nil {return _agcg ;};var _bef int ;_bef ,_agcg =_cdcb ._ecb .ReadBit ();if _agcg !=nil {return _agcg ;};_cdcb .TemplateID =int8 (_bef );switch _cdcb .TemplateID {case 0:_cdcb .Template =_cdcb ._dd ;if _agcg =_cdcb .readAtPixels ();_agcg !=nil {return ;};case 1:_cdcb .Template =_cdcb ._ee ;};return nil ;};func (_daaec *TextRegion )decodeRdy ()(int64 ,error ){const _bdeb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _daaec .IsHuffmanEncoded {if _daaec .SbHuffRDY ==3{if _daaec ._ebac ==nil {var (_fccgg int ;_egae error ;);if _daaec .SbHuffFS ==3{_fccgg ++;};if _daaec .SbHuffDS ==3{_fccgg ++;};if _daaec .SbHuffDT ==3{_fccgg ++;};if _daaec .SbHuffRDWidth ==3{_fccgg ++;};if _daaec .SbHuffRDHeight ==3{_fccgg ++;};if _daaec .SbHuffRDX ==3{_fccgg ++;};_daaec ._ebac ,_egae =_daaec .getUserTable (_fccgg );if _egae !=nil {return 0,_fd .Wrap (_egae ,_bdeb ,"");};};return _daaec ._ebac .Decode (_daaec ._fdce );};_feadb ,_fbge :=_ae .GetStandardTable (14+int (_daaec .SbHuffRDY ));if _fbge !=nil {return 0,_fbge ;};return _feadb .Decode (_daaec ._fdce );};_adab ,_ccdc :=_daaec ._dccfb .DecodeInt (_daaec ._dbdg );if _ccdc !=nil {return 0,_fd .Wrap (_ccdc ,_bdeb ,"");};return int64 (_adab ),nil ;};func (_gbcgf *SymbolDictionary )decodeDirectlyThroughGenericRegion (_bggc ,_deaag uint32 )error {if _gbcgf ._beee ==nil {_gbcgf ._beee =NewGenericRegion (_gbcgf ._gcff );};_gbcgf ._beee .setParametersWithAt (false ,byte (_gbcgf .SdTemplate ),false ,false ,_gbcgf .SdATX ,_gbcgf .SdATY ,_bggc ,_deaag ,_gbcgf ._bafa ,_gbcgf ._gcbg );return _gbcgf .addSymbol (_gbcgf ._beee );};func (_cdcec *TextRegion )decodeIds ()(int64 ,error ){const _eddca ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _cdcec .IsHuffmanEncoded {if _cdcec .SbHuffDS ==3{if _cdcec ._fafe ==nil {_egdc :=0;if _cdcec .SbHuffFS ==3{_egdc ++;};var _gfe error ;_cdcec ._fafe ,_gfe =_cdcec .getUserTable (_egdc );if _gfe !=nil {return 0,_fd .Wrap (_gfe ,_eddca ,"");};};return _cdcec ._fafe .Decode (_cdcec ._fdce );};_cbbb ,_ebdf :=_ae .GetStandardTable (8+int (_cdcec .SbHuffDS ));if _ebdf !=nil {return 0,_fd .Wrap (_ebdf ,_eddca ,"");};return _cbbb .Decode (_cdcec ._fdce );};_ddbb ,_cbeac :=_cdcec ._dccfb .DecodeInt (_cdcec ._edfa );if _cbeac !=nil {return 0,_fd .Wrap (_cbeac ,_eddca ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_ddbb ),nil ;};func (_eda *RegionSegment )String ()string {_ggff :=&_ca .Builder {};_ggff .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_ggff .WriteString (_e .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_eda .BitmapWidth ,_eda .BitmapHeight ));_ggff .WriteString (_e .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_eda .XLocation ,_eda .YLocation ));_ggff .WriteString (_e .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_eda .CombinaionOperator ));return _ggff .String ();};func (_adcg *TextRegion )decodeSymbolInstances ()error {_cee ,_ffbf :=_adcg .decodeStripT ();if _ffbf !=nil {return _ffbf ;};var (_egdg int64 ;_efed uint32 ;);for _efed < _adcg .NumberOfSymbolInstances {_ccge ,_abcc :=_adcg .decodeDT ();if _abcc !=nil {return _abcc ;};_cee +=_ccge ;var _cfcggg int64 ;_edba :=true ;_adcg ._dbgb =0;for {if _edba {_cfcggg ,_abcc =_adcg .decodeDfs ();if _abcc !=nil {return _abcc ;};_egdg +=_cfcggg ;_adcg ._dbgb =_egdg ;_edba =false ;}else {_bdceg ,_egbd :=_adcg .decodeIds ();if _ac .Is (_egbd ,_bg .ErrOOB ){break ;};if _egbd !=nil {return _egbd ;};if _efed >=_adcg .NumberOfSymbolInstances {break ;};_adcg ._dbgb +=_bdceg +int64 (_adcg .SbDsOffset );};_gfacg ,_abae :=_adcg .decodeCurrentT ();if _abae !=nil {return _abae ;};_dcfdg :=_cee +_gfacg ;_gdgb ,_abae :=_adcg .decodeID ();if _abae !=nil {return _abae ;};_cdfgc ,_abae :=_adcg .decodeRI ();if _abae !=nil {return _abae ;};_acgcc ,_abae :=_adcg .decodeIb (_cdfgc ,_gdgb );if _abae !=nil {return _abae ;};if _abae =_adcg .blit (_acgcc ,_dcfdg );_abae !=nil {return _abae ;};_efed ++;};};return nil ;};func (_bgde *template1 )setIndex (_gfa *_aa .DecoderStats ){_gfa .SetIndex (0x080)};func (_bcea *GenericRegion )setOverrideFlag (_dbbd int ){_bcea .GBAtOverride [_dbbd ]=true ;_bcea ._aca =true ;};var (_cgga Segmenter ;_ddge =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _cgga },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _cgga },TProfiles :func ()Segmenter {return _cgga },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _cgga },TBitmap :func ()Segmenter {return _cgga }};);func (_gde *GenericRefinementRegion )decodeTypicalPredictedLine (_agf ,_ed ,_fgf ,_aec ,_cf ,_dbb int )error {_ea :=_agf -int (_gde .ReferenceDY );_bge :=_gde .ReferenceBitmap .GetByteIndex (0,_ea );_edb :=_gde .RegionBitmap .GetByteIndex (0,_agf );var _dfa error ;switch _gde .TemplateID {case 0:_dfa =_gde .decodeTypicalPredictedLineTemplate0 (_agf ,_ed ,_fgf ,_aec ,_cf ,_dbb ,_edb ,_ea ,_bge );case 1:_dfa =_gde .decodeTypicalPredictedLineTemplate1 (_agf ,_ed ,_fgf ,_aec ,_cf ,_dbb ,_edb ,_ea ,_bge );};return _dfa ;};func (_dcab *GenericRegion )overrideAtTemplate0b (_ccb ,_eggef ,_aaac ,_fbgg ,_efe ,_acf int )int {if _dcab .GBAtOverride [0]{_ccb &=0xFFFD;if _dcab .GBAtY [0]==0&&_dcab .GBAtX [0]>=-int8 (_efe ){_ccb |=(_fbgg >>uint (int8 (_acf )-_dcab .GBAtX [0]&0x1))<<1;}else {_ccb |=int (_dcab .getPixel (_eggef +int (_dcab .GBAtX [0]),_aaac +int (_dcab .GBAtY [0])))<<1;};};if _dcab .GBAtOverride [1]{_ccb &=0xDFFF;if _dcab .GBAtY [1]==0&&_dcab .GBAtX [1]>=-int8 (_efe ){_ccb |=(_fbgg >>uint (int8 (_acf )-_dcab .GBAtX [1]&0x1))<<13;}else {_ccb |=int (_dcab .getPixel (_eggef +int (_dcab .GBAtX [1]),_aaac +int (_dcab .GBAtY [1])))<<13;};};if _dcab .GBAtOverride [2]{_ccb &=0xFDFF;if _dcab .GBAtY [2]==0&&_dcab .GBAtX [2]>=-int8 (_efe ){_ccb |=(_fbgg >>uint (int8 (_acf )-_dcab .GBAtX [2]&0x1))<<9;}else {_ccb |=int (_dcab .getPixel (_eggef +int (_dcab .GBAtX [2]),_aaac +int (_dcab .GBAtY [2])))<<9;};};if _dcab .GBAtOverride [3]{_ccb &=0xBFFF;if _dcab .GBAtY [3]==0&&_dcab .GBAtX [3]>=-int8 (_efe ){_ccb |=(_fbgg >>uint (int8 (_acf )-_dcab .GBAtX [3]&0x1))<<14;}else {_ccb |=int (_dcab .getPixel (_eggef +int (_dcab .GBAtX [3]),_aaac +int (_dcab .GBAtY [3])))<<14;};};if _dcab .GBAtOverride [4]{_ccb &=0xEFFF;if _dcab .GBAtY [4]==0&&_dcab .GBAtX [4]>=-int8 (_efe ){_ccb |=(_fbgg >>uint (int8 (_acf )-_dcab .GBAtX [4]&0x1))<<12;}else {_ccb |=int (_dcab .getPixel (_eggef +int (_dcab .GBAtX [4]),_aaac +int (_dcab .GBAtY [4])))<<12;};};if _dcab .GBAtOverride [5]{_ccb &=0xFFDF;if _dcab .GBAtY [5]==0&&_dcab .GBAtX [5]>=-int8 (_efe ){_ccb |=(_fbgg >>uint (int8 (_acf )-_dcab .GBAtX [5]&0x1))<<5;}else {_ccb |=int (_dcab .getPixel (_eggef +int (_dcab .GBAtX [5]),_aaac +int (_dcab .GBAtY [5])))<<5;};};if _dcab .GBAtOverride [6]{_ccb &=0xFFFB;if _dcab .GBAtY [6]==0&&_dcab .GBAtX [6]>=-int8 (_efe ){_ccb |=(_fbgg >>uint (int8 (_acf )-_dcab .GBAtX [6]&0x1))<<2;}else {_ccb |=int (_dcab .getPixel (_eggef +int (_dcab .GBAtX [6]),_aaac +int (_dcab .GBAtY [6])))<<2;};};if _dcab .GBAtOverride [7]{_ccb &=0xFFF7;if _dcab .GBAtY [7]==0&&_dcab .GBAtX [7]>=-int8 (_efe ){_ccb |=(_fbgg >>uint (int8 (_acf )-_dcab .GBAtX [7]&0x1))<<3;}else {_ccb |=int (_dcab .getPixel (_eggef +int (_dcab .GBAtX [7]),_aaac +int (_dcab .GBAtY [7])))<<3;};};if _dcab .GBAtOverride [8]{_ccb &=0xF7FF;if _dcab .GBAtY [8]==0&&_dcab .GBAtX [8]>=-int8 (_efe ){_ccb |=(_fbgg >>uint (int8 (_acf )-_dcab .GBAtX [8]&0x1))<<11;}else {_ccb |=int (_dcab .getPixel (_eggef +int (_dcab .GBAtX [8]),_aaac +int (_dcab .GBAtY [8])))<<11;};};if _dcab .GBAtOverride [9]{_ccb &=0xFFEF;if _dcab .GBAtY [9]==0&&_dcab .GBAtX [9]>=-int8 (_efe ){_ccb |=(_fbgg >>uint (int8 (_acf )-_dcab .GBAtX [9]&0x1))<<4;}else {_ccb |=int (_dcab .getPixel (_eggef +int (_dcab .GBAtX [9]),_aaac +int (_dcab .GBAtY [9])))<<4;};};if _dcab .GBAtOverride [10]{_ccb &=0x7FFF;if _dcab .GBAtY [10]==0&&_dcab .GBAtX [10]>=-int8 (_efe ){_ccb |=(_fbgg >>uint (int8 (_acf )-_dcab .GBAtX [10]&0x1))<<15;}else {_ccb |=int (_dcab .getPixel (_eggef +int (_dcab .GBAtX [10]),_aaac +int (_dcab .GBAtY [10])))<<15;};};if _dcab .GBAtOverride [11]{_ccb &=0xFDFF;if _dcab .GBAtY [11]==0&&_dcab .GBAtX [11]>=-int8 (_efe ){_ccb |=(_fbgg >>uint (int8 (_acf )-_dcab .GBAtX [11]&0x1))<<10;}else {_ccb |=int (_dcab .getPixel (_eggef +int (_dcab .GBAtX [11]),_aaac +int (_dcab .GBAtY [11])))<<10;};};return _ccb ;};func (_bfcf *TextRegion )checkInput ()error {const _dfcd ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_bfcf .UseRefinement {if _bfcf .SbrTemplate !=0{_ec .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_bfcf .SbrTemplate =0;};};if _bfcf .SbHuffFS ==2||_bfcf .SbHuffRDWidth ==2||_bfcf .SbHuffRDHeight ==2||_bfcf .SbHuffRDX ==2||_bfcf .SbHuffRDY ==2{return _fd .Error (_dfcd ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");};if !_bfcf .UseRefinement {if _bfcf .SbHuffRSize !=0{_ec .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_bfcf .SbHuffRSize =0;};if _bfcf .SbHuffRDY !=0{_ec .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_bfcf .SbHuffRDY =0;};if _bfcf .SbHuffRDX !=0{_ec .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_bfcf .SbHuffRDX =0;};if _bfcf .SbHuffRDWidth !=0{_ec .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");_bfcf .SbHuffRDWidth =0;};if _bfcf .SbHuffRDHeight !=0{_ec .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_bfcf .SbHuffRDHeight =0;};};return nil ;};func (_ffdf *SymbolDictionary )checkInput ()error {if _ffdf .SdHuffDecodeHeightSelection ==2{_ec .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_ffdf .SdHuffDecodeHeightSelection );};if _ffdf .SdHuffDecodeWidthSelection ==2{_ec .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_ffdf .SdHuffDecodeWidthSelection );};if _ffdf .IsHuffmanEncoded {if _ffdf .SdTemplate !=0{_ec .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_ffdf .SdTemplate );};if !_ffdf .UseRefinementAggregation {if !_ffdf .UseRefinementAggregation {if _ffdf ._bdce {_ec .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");_ffdf ._bdce =false ;};if _ffdf ._gfdc {_ec .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");_ffdf ._gfdc =false ;};};};}else {if _ffdf .SdHuffBMSizeSelection !=0{_ec .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_ffdf .SdHuffBMSizeSelection =0;};if _ffdf .SdHuffDecodeWidthSelection !=0{_ec .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");_ffdf .SdHuffDecodeWidthSelection =0;};if _ffdf .SdHuffDecodeHeightSelection !=0{_ec .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_ffdf .SdHuffDecodeHeightSelection =0;};};if !_ffdf .UseRefinementAggregation {if _ffdf .SdrTemplate !=0{_ec .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ffdf .SdrTemplate );_ffdf .SdrTemplate =0;};};if !_ffdf .IsHuffmanEncoded ||!_ffdf .UseRefinementAggregation {if _ffdf .SdHuffAggInstanceSelection {_ec .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ffdf .SdHuffAggInstanceSelection );};};return nil ;};func (_bcacb *PageInformationSegment )readDefaultPixelValue ()error {_ccbe ,_geg :=_bcacb ._ggab .ReadBit ();if _geg !=nil {return _geg ;};_bcacb ._ddda =uint8 (_ccbe &0xf);return nil ;};func (_bfe *template0 )form (_cccf ,_fbgf ,_bgbc ,_bgg ,_edge int16 )int16 {return (_cccf <<10)|(_fbgf <<7)|(_bgbc <<4)|(_bgg <<1)|_edge ;};func (_dbacc *PatternDictionary )readGrayMax ()error {_egbe ,_cbfga :=_dbacc ._dage .ReadBits (32);if _cbfga !=nil {return _cbfga ;};_dbacc .GrayMax =uint32 (_egbe &_f .MaxUint32 );return nil ;};func (_gbbf *HalftoneRegion )Init (hd *Header ,r _cb .StreamReader )error {_gbbf ._ddfca =r ;_gbbf ._dbac =hd ;_gbbf .RegionSegment =NewRegionSegment (r );return _gbbf .parseHeader ();};func (_eefg *TableSegment )Init (h *Header ,r _cb .StreamReader )error {_eefg ._eagb =r ;return _eefg .parseHeader ();};func (_cggde *TextRegion )GetRegionInfo ()*RegionSegment {return _cggde .RegionInfo };func (_cabb *TextRegion )Encode (w _cb .BinaryWriter )(_fgacg int ,_dcbf error ){const _abaf ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _fgacg ,_dcbf =_cabb .RegionInfo .Encode (w );_dcbf !=nil {return _fgacg ,_fd .Wrap (_dcbf ,_abaf ,"");};var _fggd int ;if _fggd ,_dcbf =_cabb .encodeFlags (w );_dcbf !=nil {return _fgacg ,_fd .Wrap (_dcbf ,_abaf ,"");};_fgacg +=_fggd ;if _fggd ,_dcbf =_cabb .encodeSymbols (w );_dcbf !=nil {return _fgacg ,_fd .Wrap (_dcbf ,_abaf ,"");};_fgacg +=_fggd ;return _fgacg ,nil ;};func (_cbef *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _cded ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _cbef .SbHuffRSize ==0{_dfaa ,_fffa :=_ae .GetStandardTable (1);if _fffa !=nil {return 0,_fd .Wrap (_fffa ,_cded ,"");};return _dfaa .Decode (_cbef ._fdce );};if _cbef ._bcad ==nil {var (_ddgf int ;_bfbd error ;);if _cbef .SbHuffFS ==3{_ddgf ++;};if _cbef .SbHuffDS ==3{_ddgf ++;};if _cbef .SbHuffDT ==3{_ddgf ++;};if _cbef .SbHuffRDWidth ==3{_ddgf ++;};if _cbef .SbHuffRDHeight ==3{_ddgf ++;};if _cbef .SbHuffRDX ==3{_ddgf ++;};if _cbef .SbHuffRDY ==3{_ddgf ++;};_cbef ._bcad ,_bfbd =_cbef .getUserTable (_ddgf );if _bfbd !=nil {return 0,_fd .Wrap (_bfbd ,_cded ,"");};};_daee ,_edega :=_cbef ._bcad .Decode (_cbef ._fdce );if _edega !=nil {return 0,_fd .Wrap (_edega ,_cded ,"");};return _daee ,nil ;};func (_bdgcd *Header )writeSegmentNumber (_gcea _cb .BinaryWriter )(_eeed int ,_fcbd error ){_gcbd :=make ([]byte ,4);_b .BigEndian .PutUint32 (_gcbd ,_bdgcd .SegmentNumber );if _eeed ,_fcbd =_gcea .Write (_gcbd );_fcbd !=nil {return 0,_fd .Wrap (_fcbd ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _eeed ,nil ;};