//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_g "encoding/binary";_fe "errors";_cf "fmt";_gd "github.com/unidoc/unipdf/v3/common";_ca "github.com/unidoc/unipdf/v3/internal/bitwise";_cfe "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_df "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_fd "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_bf "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_cb "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_fb "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";_de "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_fee "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_cg "golang.org/x/xerrors";_c "image";_d "io";_b "math";_bc "strings";_bb "time";);func (_eaaa *TextRegion )decodeDT ()(_ddef int64 ,_cdbee error ){if _eaaa .IsHuffmanEncoded {if _eaaa .SbHuffDT ==3{_ddef ,_cdbee =_eaaa ._acec .Decode (_eaaa ._gcff );if _cdbee !=nil {return 0,_cdbee ;};}else {var _acde _bf .Tabler ;_acde ,_cdbee =_bf .GetStandardTable (11+int (_eaaa .SbHuffDT ));if _cdbee !=nil {return 0,_cdbee ;};_ddef ,_cdbee =_acde .Decode (_eaaa ._gcff );if _cdbee !=nil {return 0,_cdbee ;};};}else {var _dgdd int32 ;_dgdd ,_cdbee =_eaaa ._badc .DecodeInt (_eaaa ._dbde );if _cdbee !=nil {return ;};_ddef =int64 (_dgdd );};_ddef *=int64 (_eaaa .SbStrips );return _ddef ,nil ;};func (_dadc *HalftoneRegion )GetPatterns ()([]*_df .Bitmap ,error ){var (_dabe []*_df .Bitmap ;_ebce error ;);for _ ,_bdba :=range _dadc ._fgb .RTSegments {var _dcd Segmenter ;_dcd ,_ebce =_bdba .GetSegmentData ();if _ebce !=nil {_gd .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_ebce );return nil ,_ebce ;};_gae ,_dcgd :=_dcd .(*PatternDictionary );if !_dcgd {_ebce =_cf .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_dcd );return nil ,_ebce ;};var _fagf []*_df .Bitmap ;_fagf ,_ebce =_gae .GetDictionary ();if _ebce !=nil {_gd .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ebce );return nil ,_ebce ;};_dabe =append (_dabe ,_fagf ...);};return _dabe ,nil ;};func (_gcad *PageInformationSegment )Encode (w _ca .BinaryWriter )(_aggfga int ,_dec error ){const _adce ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";_cgg :=make ([]byte ,4);_g .BigEndian .PutUint32 (_cgg ,uint32 (_gcad .PageBMWidth ));_aggfga ,_dec =w .Write (_cgg );if _dec !=nil {return _aggfga ,_de .Wrap (_dec ,_adce ,"\u0077\u0069\u0064t\u0068");};_g .BigEndian .PutUint32 (_cgg ,uint32 (_gcad .PageBMHeight ));var _bfca int ;_bfca ,_dec =w .Write (_cgg );if _dec !=nil {return _bfca +_aggfga ,_de .Wrap (_dec ,_adce ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_aggfga +=_bfca ;_g .BigEndian .PutUint32 (_cgg ,uint32 (_gcad .ResolutionX ));_bfca ,_dec =w .Write (_cgg );if _dec !=nil {return _bfca +_aggfga ,_de .Wrap (_dec ,_adce ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_aggfga +=_bfca ;_g .BigEndian .PutUint32 (_cgg ,uint32 (_gcad .ResolutionY ));if _bfca ,_dec =w .Write (_cgg );_dec !=nil {return _bfca +_aggfga ,_de .Wrap (_dec ,_adce ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_aggfga +=_bfca ;if _dec =_gcad .encodeFlags (w );_dec !=nil {return _aggfga ,_de .Wrap (_dec ,_adce ,"");};_aggfga ++;if _bfca ,_dec =_gcad .encodeStripingInformation (w );_dec !=nil {return _aggfga ,_de .Wrap (_dec ,_adce ,"");};_aggfga +=_bfca ;return _aggfga ,nil ;};func (_daed *TextRegion )decodeSymbolInstances ()error {_eceb ,_cgbd :=_daed .decodeStripT ();if _cgbd !=nil {return _cgbd ;};var (_abbcd int64 ;_fabd uint32 ;);for _fabd < _daed .NumberOfSymbolInstances {_bbdd ,_acba :=_daed .decodeDT ();if _acba !=nil {return _acba ;};_eceb +=_bbdd ;var _eccf int64 ;_aeda :=true ;_daed ._acd =0;for {if _aeda {_eccf ,_acba =_daed .decodeDfs ();if _acba !=nil {return _acba ;};_abbcd +=_eccf ;_daed ._acd =_abbcd ;_aeda =false ;}else {_cgeg ,_gdffd :=_daed .decodeIds ();if _cg .Is (_gdffd ,_fee .ErrOOB ){break ;};if _gdffd !=nil {return _gdffd ;};if _fabd >=_daed .NumberOfSymbolInstances {break ;};_daed ._acd +=_cgeg +int64 (_daed .SbDsOffset );};_cdfc ,_ddada :=_daed .decodeCurrentT ();if _ddada !=nil {return _ddada ;};_dddg :=_eceb +_cdfc ;_bdcf ,_ddada :=_daed .decodeID ();if _ddada !=nil {return _ddada ;};_agbb ,_ddada :=_daed .decodeRI ();if _ddada !=nil {return _ddada ;};_acea ,_ddada :=_daed .decodeIb (_agbb ,_bdcf );if _ddada !=nil {return _ddada ;};if _ddada =_daed .blit (_acea ,_dddg );_ddada !=nil {return _ddada ;};_fabd ++;};};return nil ;};func (_fgdeb *SymbolDictionary )setCodingStatistics ()error {if _fgdeb ._efc ==nil {_fgdeb ._efc =_fd .NewStats (512,1);};if _fgdeb ._agceg ==nil {_fgdeb ._agceg =_fd .NewStats (512,1);};if _fgdeb ._bdbd ==nil {_fgdeb ._bdbd =_fd .NewStats (512,1);};if _fgdeb ._cgba ==nil {_fgdeb ._cgba =_fd .NewStats (512,1);};if _fgdeb ._bbaa ==nil {_fgdeb ._bbaa =_fd .NewStats (512,1);};if _fgdeb .UseRefinementAggregation &&_fgdeb ._ace ==nil {_fgdeb ._ace =_fd .NewStats (1<<uint (_fgdeb ._afdd ),1);_fgdeb ._eade =_fd .NewStats (512,1);_fgdeb ._eefc =_fd .NewStats (512,1);};if _fgdeb ._efae ==nil {_fgdeb ._efae =_fd .NewStats (65536,1);};if _fgdeb ._dbcg ==nil {var _cfafb error ;_fgdeb ._dbcg ,_cfafb =_fd .New (_fgdeb ._fddg );if _cfafb !=nil {return _cfafb ;};};return nil ;};func (_acb *GenericRegion )overrideAtTemplate0b (_fcf ,_bdad ,_dbff ,_eca ,_gcgc ,_bbc int )int {if _acb .GBAtOverride [0]{_fcf &=0xFFFD;if _acb .GBAtY [0]==0&&_acb .GBAtX [0]>=-int8 (_gcgc ){_fcf |=(_eca >>uint (int8 (_bbc )-_acb .GBAtX [0]&0x1))<<1;}else {_fcf |=int (_acb .getPixel (_bdad +int (_acb .GBAtX [0]),_dbff +int (_acb .GBAtY [0])))<<1;};};if _acb .GBAtOverride [1]{_fcf &=0xDFFF;if _acb .GBAtY [1]==0&&_acb .GBAtX [1]>=-int8 (_gcgc ){_fcf |=(_eca >>uint (int8 (_bbc )-_acb .GBAtX [1]&0x1))<<13;}else {_fcf |=int (_acb .getPixel (_bdad +int (_acb .GBAtX [1]),_dbff +int (_acb .GBAtY [1])))<<13;};};if _acb .GBAtOverride [2]{_fcf &=0xFDFF;if _acb .GBAtY [2]==0&&_acb .GBAtX [2]>=-int8 (_gcgc ){_fcf |=(_eca >>uint (int8 (_bbc )-_acb .GBAtX [2]&0x1))<<9;}else {_fcf |=int (_acb .getPixel (_bdad +int (_acb .GBAtX [2]),_dbff +int (_acb .GBAtY [2])))<<9;};};if _acb .GBAtOverride [3]{_fcf &=0xBFFF;if _acb .GBAtY [3]==0&&_acb .GBAtX [3]>=-int8 (_gcgc ){_fcf |=(_eca >>uint (int8 (_bbc )-_acb .GBAtX [3]&0x1))<<14;}else {_fcf |=int (_acb .getPixel (_bdad +int (_acb .GBAtX [3]),_dbff +int (_acb .GBAtY [3])))<<14;};};if _acb .GBAtOverride [4]{_fcf &=0xEFFF;if _acb .GBAtY [4]==0&&_acb .GBAtX [4]>=-int8 (_gcgc ){_fcf |=(_eca >>uint (int8 (_bbc )-_acb .GBAtX [4]&0x1))<<12;}else {_fcf |=int (_acb .getPixel (_bdad +int (_acb .GBAtX [4]),_dbff +int (_acb .GBAtY [4])))<<12;};};if _acb .GBAtOverride [5]{_fcf &=0xFFDF;if _acb .GBAtY [5]==0&&_acb .GBAtX [5]>=-int8 (_gcgc ){_fcf |=(_eca >>uint (int8 (_bbc )-_acb .GBAtX [5]&0x1))<<5;}else {_fcf |=int (_acb .getPixel (_bdad +int (_acb .GBAtX [5]),_dbff +int (_acb .GBAtY [5])))<<5;};};if _acb .GBAtOverride [6]{_fcf &=0xFFFB;if _acb .GBAtY [6]==0&&_acb .GBAtX [6]>=-int8 (_gcgc ){_fcf |=(_eca >>uint (int8 (_bbc )-_acb .GBAtX [6]&0x1))<<2;}else {_fcf |=int (_acb .getPixel (_bdad +int (_acb .GBAtX [6]),_dbff +int (_acb .GBAtY [6])))<<2;};};if _acb .GBAtOverride [7]{_fcf &=0xFFF7;if _acb .GBAtY [7]==0&&_acb .GBAtX [7]>=-int8 (_gcgc ){_fcf |=(_eca >>uint (int8 (_bbc )-_acb .GBAtX [7]&0x1))<<3;}else {_fcf |=int (_acb .getPixel (_bdad +int (_acb .GBAtX [7]),_dbff +int (_acb .GBAtY [7])))<<3;};};if _acb .GBAtOverride [8]{_fcf &=0xF7FF;if _acb .GBAtY [8]==0&&_acb .GBAtX [8]>=-int8 (_gcgc ){_fcf |=(_eca >>uint (int8 (_bbc )-_acb .GBAtX [8]&0x1))<<11;}else {_fcf |=int (_acb .getPixel (_bdad +int (_acb .GBAtX [8]),_dbff +int (_acb .GBAtY [8])))<<11;};};if _acb .GBAtOverride [9]{_fcf &=0xFFEF;if _acb .GBAtY [9]==0&&_acb .GBAtX [9]>=-int8 (_gcgc ){_fcf |=(_eca >>uint (int8 (_bbc )-_acb .GBAtX [9]&0x1))<<4;}else {_fcf |=int (_acb .getPixel (_bdad +int (_acb .GBAtX [9]),_dbff +int (_acb .GBAtY [9])))<<4;};};if _acb .GBAtOverride [10]{_fcf &=0x7FFF;if _acb .GBAtY [10]==0&&_acb .GBAtX [10]>=-int8 (_gcgc ){_fcf |=(_eca >>uint (int8 (_bbc )-_acb .GBAtX [10]&0x1))<<15;}else {_fcf |=int (_acb .getPixel (_bdad +int (_acb .GBAtX [10]),_dbff +int (_acb .GBAtY [10])))<<15;};};if _acb .GBAtOverride [11]{_fcf &=0xFDFF;if _acb .GBAtY [11]==0&&_acb .GBAtX [11]>=-int8 (_gcgc ){_fcf |=(_eca >>uint (int8 (_bbc )-_acb .GBAtX [11]&0x1))<<10;}else {_fcf |=int (_acb .getPixel (_bdad +int (_acb .GBAtX [11]),_dbff +int (_acb .GBAtY [11])))<<10;};};return _fcf ;};func (_dgag *GenericRegion )Encode (w _ca .BinaryWriter )(_geb int ,_adc error ){const _agge ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _dgag .Bitmap ==nil {return 0,_de .Error (_agge ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_fgc ,_adc :=_dgag .RegionSegment .Encode (w );if _adc !=nil {return 0,_de .Wrap (_adc ,_agge ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_geb +=_fgc ;if _adc =w .SkipBits (4);_adc !=nil {return _geb ,_de .Wrap (_adc ,_agge ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _aeg int ;if _dgag .IsTPGDon {_aeg =1;};if _adc =w .WriteBit (_aeg );_adc !=nil {return _geb ,_de .Wrap (_adc ,_agge ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_aeg =0;if _adc =w .WriteBit (int (_dgag .GBTemplate >>1)&0x01);_adc !=nil {return _geb ,_de .Wrap (_adc ,_agge ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");};if _adc =w .WriteBit (int (_dgag .GBTemplate )&0x01);_adc !=nil {return _geb ,_de .Wrap (_adc ,_agge ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _dgag .UseMMR {_aeg =1;};if _adc =w .WriteBit (_aeg );_adc !=nil {return _geb ,_de .Wrap (_adc ,_agge ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_geb ++;if _fgc ,_adc =_dgag .writeGBAtPixels (w );_adc !=nil {return _geb ,_de .Wrap (_adc ,_agge ,"");};_geb +=_fgc ;_babf :=_fb .New ();if _adc =_babf .EncodeBitmap (_dgag .Bitmap ,_dgag .IsTPGDon );_adc !=nil {return _geb ,_de .Wrap (_adc ,_agge ,"");};_babf .Final ();var _bdd int64 ;if _bdd ,_adc =_babf .WriteTo (w );_adc !=nil {return _geb ,_de .Wrap (_adc ,_agge ,"");};_geb +=int (_bdd );return _geb ,nil ;};func (_bdg *SymbolDictionary )readNumberOfNewSymbols ()error {_facac ,_deed :=_bdg ._fddg .ReadBits (32);if _deed !=nil {return _deed ;};_bdg .NumberOfNewSymbols =uint32 (_facac &_b .MaxUint32 );return nil ;};func (_gaga *Header )readReferredToSegmentNumbers (_effd _ca .StreamReader ,_abeb int )([]int ,error ){const _bcg ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";_dfdad :=make ([]int ,_abeb );if _abeb > 0{_gaga .RTSegments =make ([]*Header ,_abeb );var (_gfe uint64 ;_accef error ;);for _aade :=0;_aade < _abeb ;_aade ++{_gfe ,_accef =_effd .ReadBits (byte (_gaga .referenceSize ())<<3);if _accef !=nil {return nil ,_de .Wrapf (_accef ,_bcg ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_aade );};_dfdad [_aade ]=int (_gfe &_b .MaxInt32 );};};return _dfdad ,nil ;};func (_ccgf *TextRegion )decodeRdh ()(int64 ,error ){const _baagb ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _ccgf .IsHuffmanEncoded {if _ccgf .SbHuffRDHeight ==3{if _ccgf ._ceada ==nil {var (_gddf int ;_bddb error ;);if _ccgf .SbHuffFS ==3{_gddf ++;};if _ccgf .SbHuffDS ==3{_gddf ++;};if _ccgf .SbHuffDT ==3{_gddf ++;};if _ccgf .SbHuffRDWidth ==3{_gddf ++;};_ccgf ._ceada ,_bddb =_ccgf .getUserTable (_gddf );if _bddb !=nil {return 0,_de .Wrap (_bddb ,_baagb ,"");};};return _ccgf ._ceada .Decode (_ccgf ._gcff );};_ccgdf ,_gdbd :=_bf .GetStandardTable (14+int (_ccgf .SbHuffRDHeight ));if _gdbd !=nil {return 0,_de .Wrap (_gdbd ,_baagb ,"");};return _ccgdf .Decode (_ccgf ._gcff );};_bcbf ,_gbfac :=_ccgf ._badc .DecodeInt (_ccgf ._gege );if _gbfac !=nil {return 0,_de .Wrap (_gbfac ,_baagb ,"");};return int64 (_bcbf ),nil ;};func (_gddeb Type )String ()string {switch _gddeb {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_afdc *GenericRegion )updateOverrideFlags ()error {const _aafe ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _afdc .GBAtX ==nil ||_afdc .GBAtY ==nil {return nil ;};if len (_afdc .GBAtX )!=len (_afdc .GBAtY ){return _de .Errorf (_aafe ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_afdc .GBAtX ),len (_afdc .GBAtY ));};_afdc .GBAtOverride =make ([]bool ,len (_afdc .GBAtX ));switch _afdc .GBTemplate {case 0:if !_afdc .UseExtTemplates {if _afdc .GBAtX [0]!=3||_afdc .GBAtY [0]!=-1{_afdc .setOverrideFlag (0);};if _afdc .GBAtX [1]!=-3||_afdc .GBAtY [1]!=-1{_afdc .setOverrideFlag (1);};if _afdc .GBAtX [2]!=2||_afdc .GBAtY [2]!=-2{_afdc .setOverrideFlag (2);};if _afdc .GBAtX [3]!=-2||_afdc .GBAtY [3]!=-2{_afdc .setOverrideFlag (3);};}else {if _afdc .GBAtX [0]!=-2||_afdc .GBAtY [0]!=0{_afdc .setOverrideFlag (0);};if _afdc .GBAtX [1]!=0||_afdc .GBAtY [1]!=-2{_afdc .setOverrideFlag (1);};if _afdc .GBAtX [2]!=-2||_afdc .GBAtY [2]!=-1{_afdc .setOverrideFlag (2);};if _afdc .GBAtX [3]!=-1||_afdc .GBAtY [3]!=-2{_afdc .setOverrideFlag (3);};if _afdc .GBAtX [4]!=1||_afdc .GBAtY [4]!=-2{_afdc .setOverrideFlag (4);};if _afdc .GBAtX [5]!=2||_afdc .GBAtY [5]!=-1{_afdc .setOverrideFlag (5);};if _afdc .GBAtX [6]!=-3||_afdc .GBAtY [6]!=0{_afdc .setOverrideFlag (6);};if _afdc .GBAtX [7]!=-4||_afdc .GBAtY [7]!=0{_afdc .setOverrideFlag (7);};if _afdc .GBAtX [8]!=2||_afdc .GBAtY [8]!=-2{_afdc .setOverrideFlag (8);};if _afdc .GBAtX [9]!=3||_afdc .GBAtY [9]!=-1{_afdc .setOverrideFlag (9);};if _afdc .GBAtX [10]!=-2||_afdc .GBAtY [10]!=-2{_afdc .setOverrideFlag (10);};if _afdc .GBAtX [11]!=-3||_afdc .GBAtY [11]!=-1{_afdc .setOverrideFlag (11);};};case 1:if _afdc .GBAtX [0]!=3||_afdc .GBAtY [0]!=-1{_afdc .setOverrideFlag (0);};case 2:if _afdc .GBAtX [0]!=2||_afdc .GBAtY [0]!=-1{_afdc .setOverrideFlag (0);};case 3:if _afdc .GBAtX [0]!=2||_afdc .GBAtY [0]!=-1{_afdc .setOverrideFlag (0);};};return nil ;};func (_faec *GenericRegion )decodeTemplate0b (_fcgc ,_ddeg ,_adg int ,_badf ,_deac int )(_aeb error ){const _fdfd ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_fedf ,_dedcc int ;_fedd ,_gdb int ;_eff byte ;_efe int ;);if _fcgc >=1{_eff ,_aeb =_faec .Bitmap .GetByte (_deac );if _aeb !=nil {return _de .Wrap (_aeb ,_fdfd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_fedd =int (_eff );};if _fcgc >=2{_eff ,_aeb =_faec .Bitmap .GetByte (_deac -_faec .Bitmap .RowStride );if _aeb !=nil {return _de .Wrap (_aeb ,_fdfd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_gdb =int (_eff )<<6;};_fedf =(_fedd &0xf0)|(_gdb &0x3800);for _cdb :=0;_cdb < _adg ;_cdb =_efe {var (_adgb byte ;_baef int ;);_efe =_cdb +8;if _caab :=_ddeg -_cdb ;_caab > 8{_baef =8;}else {_baef =_caab ;};if _fcgc > 0{_fedd <<=8;if _efe < _ddeg {_eff ,_aeb =_faec .Bitmap .GetByte (_deac +1);if _aeb !=nil {return _de .Wrap (_aeb ,_fdfd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_fedd |=int (_eff );};};if _fcgc > 1{_gdb <<=8;if _efe < _ddeg {_eff ,_aeb =_faec .Bitmap .GetByte (_deac -_faec .Bitmap .RowStride +1);if _aeb !=nil {return _de .Wrap (_aeb ,_fdfd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_gdb |=int (_eff )<<6;};};for _cgde :=0;_cgde < _baef ;_cgde ++{_bagc :=uint (7-_cgde );if _faec ._gcdd {_dedcc =_faec .overrideAtTemplate0b (_fedf ,_cdb +_cgde ,_fcgc ,int (_adgb ),_cgde ,int (_bagc ));_faec ._baa .SetIndex (int32 (_dedcc ));}else {_faec ._baa .SetIndex (int32 (_fedf ));};var _agff int ;_agff ,_aeb =_faec ._agf .DecodeBit (_faec ._baa );if _aeb !=nil {return _de .Wrap (_aeb ,_fdfd ,"");};_adgb |=byte (_agff <<_bagc );_fedf =((_fedf &0x7bf7)<<1)|_agff |((_fedd >>_bagc )&0x10)|((_gdb >>_bagc )&0x800);};if _bbd :=_faec .Bitmap .SetByte (_badf ,_adgb );_bbd !=nil {return _de .Wrap (_bbd ,_fdfd ,"");};_badf ++;_deac ++;};return nil ;};func (_dccae *TableSegment )StreamReader ()_ca .StreamReader {return _dccae ._ebf };func (_bece *SymbolDictionary )setAtPixels ()error {if _bece .IsHuffmanEncoded {return nil ;};_efag :=1;if _bece .SdTemplate ==0{_efag =4;};if _cegcc :=_bece .readAtPixels (_efag );_cegcc !=nil {return _cegcc ;};return nil ;};func (_fabe *RegionSegment )Size ()int {return 17};func (_bddg *SymbolDictionary )decodeThroughTextRegion (_aead ,_bgf ,_gfgc uint32 )error {if _bddg ._fcedd ==nil {_bddg ._fcedd =_fdfda (_bddg ._fddg ,nil );_bddg ._fcedd .setContexts (_bddg ._efae ,_fd .NewStats (512,1),_fd .NewStats (512,1),_fd .NewStats (512,1),_fd .NewStats (512,1),_bddg ._ace ,_fd .NewStats (512,1),_fd .NewStats (512,1),_fd .NewStats (512,1),_fd .NewStats (512,1));};if _fecd :=_bddg .setSymbolsArray ();_fecd !=nil {return _fecd ;};_bddg ._fcedd .setParameters (_bddg ._dbcg ,_bddg .IsHuffmanEncoded ,true ,_aead ,_bgf ,_gfgc ,1,_bddg ._dcga +_bddg ._bddf ,0,0,0,1,0,0,0,0,0,0,0,0,0,_bddg .SdrTemplate ,_bddg .SdrATX ,_bddg .SdrATY ,_bddg ._cffaa ,_bddg ._afdd );return _bddg .addSymbol (_bddg ._fcedd );};func (_babb *GenericRegion )String ()string {_ggag :=&_bc .Builder {};_ggag .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_ggag .WriteString (_babb .RegionSegment .String ()+"\u000a");_ggag .WriteString (_cf .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_babb .UseExtTemplates ));_ggag .WriteString (_cf .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_babb .IsTPGDon ));_ggag .WriteString (_cf .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_babb .GBTemplate ));_ggag .WriteString (_cf .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_babb .IsMMREncoded ));_ggag .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_babb .GBAtX ));_ggag .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_babb .GBAtY ));_ggag .WriteString (_cf .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_babb .GBAtOverride ));return _ggag .String ();};func (_gca *template1 )form (_eedc ,_eefb ,_bbef ,_cge ,_gdc int16 )int16 {return ((_eedc &0x02)<<8)|(_eefb <<6)|((_bbef &0x03)<<4)|(_cge <<1)|_gdc ;};func (_ceef *GenericRefinementRegion )String ()string {_dad :=&_bc .Builder {};_dad .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_dad .WriteString (_ceef .RegionInfo .String ()+"\u000a");_dad .WriteString (_cf .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ceef .IsTPGROn ));_dad .WriteString (_cf .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_ceef .TemplateID ));_dad .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_ceef .GrAtX ));_dad .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_ceef .GrAtY ));_dad .WriteString (_cf .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_ceef .ReferenceDX ));_dad .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_ceef .ReferenceDY ));return _dad .String ();};func (_gbgb *SymbolDictionary )InitEncode (symbols *_df .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _bceg ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";_gbgb .SdATX =[]int8 {3,-3,2,-2};_gbgb .SdATY =[]int8 {-1,-1,-2,-2};_gbgb ._gbg =symbols ;_gbgb ._cdeg =make ([]int ,len (symbolList ));copy (_gbgb ._cdeg ,symbolList );if len (_gbgb ._cdeg )!=_gbgb ._gbg .Size (){return _de .Error (_bceg ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");};_gbgb .NumberOfNewSymbols =uint32 (symbols .Size ());_gbgb .NumberOfExportedSymbols =uint32 (symbols .Size ());_gbgb ._gafa =symbolMap ;_gbgb ._aae =unborderSymbols ;return nil ;};func (_afag *PageInformationSegment )DefaultPixelValue ()uint8 {return _afag ._bdbf };func (_ffbfb *HalftoneRegion )computeSegmentDataStructure ()error {_ffbfb .DataOffset =_ffbfb ._bdae .StreamPosition ();_ffbfb .DataHeaderLength =_ffbfb .DataOffset -_ffbfb .DataHeaderOffset ;_ffbfb .DataLength =int64 (_ffbfb ._bdae .Length ())-_ffbfb .DataHeaderLength ;return nil ;};func (_bbcf *TableSegment )Init (h *Header ,r _ca .StreamReader )error {_bbcf ._ebf =r ;return _bbcf .parseHeader ();};func (_cdbe *GenericRegion )setParametersMMR (_bgaca bool ,_gdcf ,_aaad int64 ,_fab ,_efeb uint32 ,_abe byte ,_ceac ,_bec bool ,_eea ,_gff []int8 ){_cdbe .DataOffset =_gdcf ;_cdbe .DataLength =_aaad ;_cdbe .RegionSegment =&RegionSegment {};_cdbe .RegionSegment .BitmapHeight =_fab ;_cdbe .RegionSegment .BitmapWidth =_efeb ;_cdbe .GBTemplate =_abe ;_cdbe .IsMMREncoded =_bgaca ;_cdbe .IsTPGDon =_ceac ;_cdbe .GBAtX =_eea ;_cdbe .GBAtY =_gff ;};func (_dadce *SymbolDictionary )String ()string {_ecfa :=&_bc .Builder {};_ecfa .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_ecfa .WriteString (_cf .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_dadce .SdrTemplate ));_ecfa .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_dadce .SdTemplate ));_ecfa .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_dadce ._fbde ));_ecfa .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_dadce ._caabc ));_ecfa .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_dadce .SdHuffAggInstanceSelection ));_ecfa .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_dadce .SdHuffBMSizeSelection ));_ecfa .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_dadce .SdHuffDecodeWidthSelection ));_ecfa .WriteString (_cf .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_dadce .SdHuffDecodeHeightSelection ));_ecfa .WriteString (_cf .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_dadce .UseRefinementAggregation ));_ecfa .WriteString (_cf .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_dadce .IsHuffmanEncoded ));_ecfa .WriteString (_cf .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_dadce .SdATX ));_ecfa .WriteString (_cf .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_dadce .SdATY ));_ecfa .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_dadce .SdrATX ));_ecfa .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_dadce .SdrATY ));_ecfa .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_dadce .NumberOfExportedSymbols ));_ecfa .WriteString (_cf .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_dadce .NumberOfNewSymbols ));_ecfa .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_dadce ._dcga ));_ecfa .WriteString (_cf .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_dadce ._bddf ));return _ecfa .String ();};func (_cbfg *Header )Encode (w _ca .BinaryWriter )(_dgab int ,_ebeg error ){const _bge ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _dfeg _ca .BinaryWriter ;_gd .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _ebeg !=nil {_gd .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_ebeg );}else {_gd .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_cbfg );_gd .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _cbfg .SegmentData !=nil {_gea ,_dgggd :=_cbfg .SegmentData .(SegmentEncoder );if !_dgggd {return 0,_de .Errorf (_bge ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_cbfg .SegmentData );};_dfeg =_ca .BufferedMSB ();_dgab ,_ebeg =_gea .Encode (_dfeg );if _ebeg !=nil {return 0,_de .Wrap (_ebeg ,_bge ,"");};_cbfg .SegmentDataLength =uint64 (_dgab );};if _cbfg .pageSize ()==4{_cbfg .PageAssociationFieldSize =true ;};var _ddga int ;_ddga ,_ebeg =_cbfg .writeSegmentNumber (w );if _ebeg !=nil {return 0,_de .Wrap (_ebeg ,_bge ,"");};_dgab +=_ddga ;if _ebeg =_cbfg .writeFlags (w );_ebeg !=nil {return _dgab ,_de .Wrap (_ebeg ,_bge ,"");};_dgab ++;_ddga ,_ebeg =_cbfg .writeReferredToCount (w );if _ebeg !=nil {return 0,_de .Wrap (_ebeg ,_bge ,"");};_dgab +=_ddga ;_ddga ,_ebeg =_cbfg .writeReferredToSegments (w );if _ebeg !=nil {return 0,_de .Wrap (_ebeg ,_bge ,"");};_dgab +=_ddga ;_ddga ,_ebeg =_cbfg .writeSegmentPageAssociation (w );if _ebeg !=nil {return 0,_de .Wrap (_ebeg ,_bge ,"");};_dgab +=_ddga ;_ddga ,_ebeg =_cbfg .writeSegmentDataLength (w );if _ebeg !=nil {return 0,_de .Wrap (_ebeg ,_bge ,"");};_dgab +=_ddga ;_cbfg .HeaderLength =int64 (_dgab )-int64 (_cbfg .SegmentDataLength );if _dfeg !=nil {if _ ,_ebeg =w .Write (_dfeg .Data ());_ebeg !=nil {return _dgab ,_de .Wrap (_ebeg ,_bge ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");};};return _dgab ,nil ;};func (_feeca *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_ccfg :=range _feeca .Header .RTSegments {if _ccfg .Type ==0{_fbba ,_dgca :=_ccfg .GetSegmentData ();if _dgca !=nil {return _dgca ;};_ccgbb ,_gbgfa :=_fbba .(*SymbolDictionary );if !_gbgfa {return _cf .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_fbba );};_dacd ,_dgca :=_ccgbb .GetDictionary ();if _dgca !=nil {return _cf .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_ccfg .SegmentNumber ,_dgca .Error ());};_feeca ._bfef =append (_feeca ._bfef ,_dacd ...);_feeca ._dcga +=_ccgbb .NumberOfExportedSymbols ;};};return nil ;};func (_cfb *GenericRegion )parseHeader ()(_fag error ){_gd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");defer func (){if _fag !=nil {_gd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_fag );}else {_gd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");};}();var (_agcd int ;_gacc uint64 ;);if _fag =_cfb .RegionSegment .parseHeader ();_fag !=nil {return _fag ;};if _ ,_fag =_cfb ._afec .ReadBits (3);_fag !=nil {return _fag ;};_agcd ,_fag =_cfb ._afec .ReadBit ();if _fag !=nil {return _fag ;};if _agcd ==1{_cfb .UseExtTemplates =true ;};_agcd ,_fag =_cfb ._afec .ReadBit ();if _fag !=nil {return _fag ;};if _agcd ==1{_cfb .IsTPGDon =true ;};_gacc ,_fag =_cfb ._afec .ReadBits (2);if _fag !=nil {return _fag ;};_cfb .GBTemplate =byte (_gacc &0xf);_agcd ,_fag =_cfb ._afec .ReadBit ();if _fag !=nil {return _fag ;};if _agcd ==1{_cfb .IsMMREncoded =true ;};if !_cfb .IsMMREncoded {_dgc :=1;if _cfb .GBTemplate ==0{_dgc =4;if _cfb .UseExtTemplates {_dgc =12;};};if _fag =_cfb .readGBAtPixels (_dgc );_fag !=nil {return _fag ;};};if _fag =_cfb .computeSegmentDataStructure ();_fag !=nil {return _fag ;};_gd .Log .Trace ("\u0025\u0073",_cfb );return nil ;};func (_cbef *PatternDictionary )GetDictionary ()([]*_df .Bitmap ,error ){if _cbef .Patterns !=nil {return _cbef .Patterns ,nil ;};if !_cbef .IsMMREncoded {_cbef .setGbAtPixels ();};_dbcd :=NewGenericRegion (_cbef ._faad );_dbcd .setParametersMMR (_cbef .IsMMREncoded ,_cbef .DataOffset ,_cbef .DataLength ,uint32 (_cbef .HdpHeight ),(_cbef .GrayMax +1)*uint32 (_cbef .HdpWidth ),_cbef .HDTemplate ,false ,false ,_cbef .GBAtX ,_cbef .GBAtY );_dbb ,_bbdc :=_dbcd .GetRegionBitmap ();if _bbdc !=nil {return nil ,_bbdc ;};if _bbdc =_cbef .extractPatterns (_dbb );_bbdc !=nil {return nil ,_bbdc ;};return _cbef .Patterns ,nil ;};func (_cfee *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_ccd ,_bfb :=_cfee ._fga .ReadBit ();if _bfb !=nil {return _bfb ;};if _ccd ==1{_cfee ._efed =true ;};return nil ;};func (_dgdf *GenericRegion )overrideAtTemplate3 (_baf ,_cdf ,_dfde ,_fafa ,_fcbd int )int {_baf &=0x3EF;if _dgdf .GBAtY [0]==0&&_dgdf .GBAtX [0]>=-int8 (_fcbd ){_baf |=(_fafa >>uint (7-(int8 (_fcbd )+_dgdf .GBAtX [0]))&0x1)<<4;}else {_baf |=int (_dgdf .getPixel (_cdf +int (_dgdf .GBAtX [0]),_dfde +int (_dgdf .GBAtY [0])))<<4;};return _baf ;};func (_cfd *GenericRefinementRegion )getGrReference ()(*_df .Bitmap ,error ){segments :=_cfd ._cgb .RTSegments ;if len (segments )==0{return nil ,_fe .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_gbb ,_bff :=segments [0].GetSegmentData ();if _bff !=nil {return nil ,_bff ;};_cfg ,_ag :=_gbb .(Regioner );if !_ag {return nil ,_cf .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_gbb );};return _cfg .GetRegionBitmap ();};func (_cgac *Header )readHeaderFlags ()error {const _ebbd ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_bgb ,_afde :=_cgac .Reader .ReadBit ();if _afde !=nil {return _de .Wrap (_afde ,_ebbd ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _bgb !=0{_cgac .RetainFlag =true ;};_bgb ,_afde =_cgac .Reader .ReadBit ();if _afde !=nil {return _de .Wrap (_afde ,_ebbd ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _bgb !=0{_cgac .PageAssociationFieldSize =true ;};_aabf ,_afde :=_cgac .Reader .ReadBits (6);if _afde !=nil {return _de .Wrap (_afde ,_ebbd ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_cgac .Type =Type (int (_aabf ));return nil ;};func (_cgge *SymbolDictionary )encodeNumSyms (_gbgg _ca .BinaryWriter )(_abcfc int ,_fafb error ){const _faca ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_dcca :=make ([]byte ,4);_g .BigEndian .PutUint32 (_dcca ,_cgge .NumberOfExportedSymbols );if _abcfc ,_fafb =_gbgg .Write (_dcca );_fafb !=nil {return _abcfc ,_de .Wrap (_fafb ,_faca ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_g .BigEndian .PutUint32 (_dcca ,_cgge .NumberOfNewSymbols );_gdbe ,_fafb :=_gbgg .Write (_dcca );if _fafb !=nil {return _abcfc ,_de .Wrap (_fafb ,_faca ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _abcfc +_gdbe ,nil ;};func (_dd *GenericRefinementRegion )GetRegionBitmap ()(*_df .Bitmap ,error ){var _bd error ;_gd .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _bd !=nil {_gd .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_bd );}else {_gd .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _dd .RegionBitmap !=nil {return _dd .RegionBitmap ,nil ;};_gb :=0;if _dd .ReferenceBitmap ==nil {_dd .ReferenceBitmap ,_bd =_dd .getGrReference ();if _bd !=nil {return nil ,_bd ;};};if _dd ._dc ==nil {_dd ._dc ,_bd =_fd .New (_dd ._ab );if _bd !=nil {return nil ,_bd ;};};if _dd ._cbg ==nil {_dd ._cbg =_fd .NewStats (8192,1);};_dd .RegionBitmap =_df .New (int (_dd .RegionInfo .BitmapWidth ),int (_dd .RegionInfo .BitmapHeight ));if _dd .TemplateID ==0{if _bd =_dd .updateOverride ();_bd !=nil {return nil ,_bd ;};};_deb :=(_dd .RegionBitmap .Width +7)&-8;var _bag int ;if _dd .IsTPGROn {_bag =int (-_dd .ReferenceDY )*_dd .ReferenceBitmap .RowStride ;};_fc :=_bag +1;for _af :=0;_af < _dd .RegionBitmap .Height ;_af ++{if _dd .IsTPGROn {_cd ,_cdd :=_dd .decodeSLTP ();if _cdd !=nil {return nil ,_cdd ;};_gb ^=_cd ;};if _gb ==0{_bd =_dd .decodeOptimized (_af ,_dd .RegionBitmap .Width ,_dd .RegionBitmap .RowStride ,_dd .ReferenceBitmap .RowStride ,_deb ,_bag ,_fc );if _bd !=nil {return nil ,_bd ;};}else {_bd =_dd .decodeTypicalPredictedLine (_af ,_dd .RegionBitmap .Width ,_dd .RegionBitmap .RowStride ,_dd .ReferenceBitmap .RowStride ,_deb ,_bag );if _bd !=nil {return nil ,_bd ;};};};return _dd .RegionBitmap ,nil ;};func (_ggca *SymbolDictionary )decodeHeightClassCollectiveBitmap (_aaed int64 ,_fgdb ,_dafb uint32 )(*_df .Bitmap ,error ){if _aaed ==0{_bgd :=_df .New (int (_dafb ),int (_fgdb ));var (_bbda byte ;_gfaa error ;);for _gbdd :=0;_gbdd < len (_bgd .Data );_gbdd ++{_bbda ,_gfaa =_ggca ._fddg .ReadByte ();if _gfaa !=nil {return nil ,_gfaa ;};if _gfaa =_bgd .SetByte (_gbdd ,_bbda );_gfaa !=nil {return nil ,_gfaa ;};};return _bgd ,nil ;};if _ggca ._bcec ==nil {_ggca ._bcec =NewGenericRegion (_ggca ._fddg );};_ggca ._bcec .setParameters (true ,_ggca ._fddg .StreamPosition (),_aaed ,_fgdb ,_dafb );_cebg ,_defe :=_ggca ._bcec .GetRegionBitmap ();if _defe !=nil {return nil ,_defe ;};return _cebg ,nil ;};func (_fgdd *GenericRegion )InitEncode (bm *_df .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _faf ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";if bm ==nil {return _de .Error (_faf ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _de .Error (_faf ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");};_fgdd .Bitmap =bm ;_fgdd .GBTemplate =byte (template );switch _fgdd .GBTemplate {case 0:_fgdd .GBAtX =[]int8 {3,-3,2,-2};_fgdd .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_fgdd .GBAtX =[]int8 {3};_fgdd .GBAtY =[]int8 {-1};case 2,3:_fgdd .GBAtX =[]int8 {2};_fgdd .GBAtY =[]int8 {-1};default:return _de .Errorf (_faf ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );};_fgdd .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_fgdd .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_cgd *EndOfStripe )parseHeader (_cff *Header ,_cfc _ca .StreamReader )error {_ba ,_a :=_cgd ._ce .ReadBits (32);if _a !=nil {return _a ;};_cgd ._da =int (_ba &_b .MaxInt32 );return nil ;};func (_egfd *PageInformationSegment )Size ()int {return 19};func (_deaf *SymbolDictionary )getUserTable (_fdbd int )(_bf .Tabler ,error ){var _aefb int ;for _ ,_adag :=range _deaf .Header .RTSegments {if _adag .Type ==53{if _aefb ==_fdbd {_dacge ,_cegc :=_adag .GetSegmentData ();if _cegc !=nil {return nil ,_cegc ;};_eafd :=_dacge .(_bf .BasicTabler );return _bf .NewEncodedTable (_eafd );};_aefb ++;};};return nil ,nil ;};func (_dffc *TextRegion )String ()string {_ebcg :=&_bc .Builder {};_ebcg .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_ebcg .WriteString (_dffc .RegionInfo .String ()+"\u000a");_ebcg .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_dffc .SbrTemplate ));_ebcg .WriteString (_cf .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_dffc .SbDsOffset ));_ebcg .WriteString (_cf .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_dffc .DefaultPixel ));_ebcg .WriteString (_cf .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_dffc .CombinationOperator ));_ebcg .WriteString (_cf .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_dffc .IsTransposed ));_ebcg .WriteString (_cf .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_dffc .ReferenceCorner ));_ebcg .WriteString (_cf .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_dffc .UseRefinement ));_ebcg .WriteString (_cf .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_dffc .IsHuffmanEncoded ));if _dffc .IsHuffmanEncoded {_ebcg .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_dffc .SbHuffRSize ));_ebcg .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_dffc .SbHuffRDY ));_ebcg .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_dffc .SbHuffRDX ));_ebcg .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_dffc .SbHuffRDHeight ));_ebcg .WriteString (_cf .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_dffc .SbHuffRDWidth ));_ebcg .WriteString (_cf .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_dffc .SbHuffDT ));_ebcg .WriteString (_cf .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_dffc .SbHuffDS ));_ebcg .WriteString (_cf .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_dffc .SbHuffFS ));};_ebcg .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_dffc .SbrATX ));_ebcg .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_dffc .SbrATY ));_ebcg .WriteString (_cf .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_dffc .NumberOfSymbolInstances ));_ebcg .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_dffc .SbrATX ));return _ebcg .String ();};func (_gbd *template0 )form (_ceg ,_bcbg ,_gef ,_bbb ,_ddcb int16 )int16 {return (_ceg <<10)|(_bcbg <<7)|(_gef <<4)|(_bbb <<1)|_ddcb ;};type template0 struct{};func (_gcg *GenericRefinementRegion )getPixel (_fdfe *_df .Bitmap ,_abf ,_dff int )int {if _abf < 0||_abf >=_fdfe .Width {return 0;};if _dff < 0||_dff >=_fdfe .Height {return 0;};if _fdfe .GetPixel (_abf ,_dff ){return 1;};return 0;};func (_gda *GenericRegion )getPixel (_eda ,_adcg int )int8 {if _eda < 0||_eda >=_gda .Bitmap .Width {return 0;};if _adcg < 0||_adcg >=_gda .Bitmap .Height {return 0;};if _gda .Bitmap .GetPixel (_eda ,_adcg ){return 1;};return 0;};func (_fbe *SymbolDictionary )decodeHeightClassBitmap (_bbbf *_df .Bitmap ,_eeec int64 ,_dbge int ,_aea []int )error {for _gbgc :=_eeec ;_gbgc < int64 (_fbe ._bddf );_gbgc ++{var _ddd int ;for _agd :=_eeec ;_agd <=_gbgc -1;_agd ++{_ddd +=_aea [_agd ];};_debe :=_c .Rect (_ddd ,0,_ddd +_aea [_gbgc ],_dbge );_dgffc ,_ccdb :=_df .Extract (_debe ,_bbbf );if _ccdb !=nil {return _ccdb ;};_fbe ._edfb [_gbgc ]=_dgffc ;_fbe ._cffaa =append (_fbe ._cffaa ,_dgffc );};return nil ;};func (_eege *HalftoneRegion )Init (hd *Header ,r _ca .StreamReader )error {_eege ._bdae =r ;_eege ._fgb =hd ;_eege .RegionSegment =NewRegionSegment (r );return _eege .parseHeader ();};func (_addc *TextRegion )decodeID ()(int64 ,error ){if _addc .IsHuffmanEncoded {if _addc ._cedb ==nil {_adcf ,_afaa :=_addc ._gcff .ReadBits (byte (_addc ._cbce ));return int64 (_adcf ),_afaa ;};return _addc ._cedb .Decode (_addc ._gcff );};return _addc ._badc .DecodeIAID (uint64 (_addc ._cbce ),_addc ._ebff );};type TableSegment struct{_ebf _ca .StreamReader ;_dgaf int32 ;_debg int32 ;_cddc int32 ;_afdba int32 ;_gdad int32 ;};func (_fcfc *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _fcfc .RegionSegment };func (_cccd *TextRegion )computeSymbolCodeLength ()error {if _cccd .IsHuffmanEncoded {return _cccd .symbolIDCodeLengths ();};_cccd ._cbce =int8 (_b .Ceil (_b .Log (float64 (_cccd .NumberOfSymbols ))/_b .Log (2)));return nil ;};func (_afdb *Header )parse (_egac Documenter ,_ffa _ca .StreamReader ,_cadfg int64 ,_egfa OrganizationType )(_edca error ){const _fdg ="\u0070\u0061\u0072s\u0065";_gd .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _edca !=nil {_gd .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_edca );}else {_gd .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_edca =_ffa .Seek (_cadfg ,_d .SeekStart );if _edca !=nil {return _de .Wrap (_edca ,_fdg ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _edca =_afdb .readSegmentNumber (_ffa );_edca !=nil {return _de .Wrap (_edca ,_fdg ,"");};if _edca =_afdb .readHeaderFlags ();_edca !=nil {return _de .Wrap (_edca ,_fdg ,"");};var _aag uint64 ;_aag ,_edca =_afdb .readNumberOfReferredToSegments (_ffa );if _edca !=nil {return _de .Wrap (_edca ,_fdg ,"");};_afdb .RTSNumbers ,_edca =_afdb .readReferredToSegmentNumbers (_ffa ,int (_aag ));if _edca !=nil {return _de .Wrap (_edca ,_fdg ,"");};_edca =_afdb .readSegmentPageAssociation (_egac ,_ffa ,_aag ,_afdb .RTSNumbers ...);if _edca !=nil {return _de .Wrap (_edca ,_fdg ,"");};if _afdb .Type !=TEndOfFile {if _edca =_afdb .readSegmentDataLength (_ffa );_edca !=nil {return _de .Wrap (_edca ,_fdg ,"");};};_afdb .readDataStartOffset (_ffa ,_egfa );_afdb .readHeaderLength (_ffa ,_cadfg );_gd .Log .Trace ("\u0025\u0073",_afdb );return nil ;};func (_efcg *SymbolDictionary )setRetainedCodingContexts (_ggfc *SymbolDictionary ){_efcg ._dbcg =_ggfc ._dbcg ;_efcg .IsHuffmanEncoded =_ggfc .IsHuffmanEncoded ;_efcg .UseRefinementAggregation =_ggfc .UseRefinementAggregation ;_efcg .SdTemplate =_ggfc .SdTemplate ;_efcg .SdrTemplate =_ggfc .SdrTemplate ;_efcg .SdATX =_ggfc .SdATX ;_efcg .SdATY =_ggfc .SdATY ;_efcg .SdrATX =_ggfc .SdrATX ;_efcg .SdrATY =_ggfc .SdrATY ;_efcg ._efae =_ggfc ._efae ;};func (_abed *TextRegion )GetRegionBitmap ()(*_df .Bitmap ,error ){if _abed .RegionBitmap !=nil {return _abed .RegionBitmap ,nil ;};if !_abed .IsHuffmanEncoded {if _cfda :=_abed .setCodingStatistics ();_cfda !=nil {return nil ,_cfda ;};};if _abaf :=_abed .createRegionBitmap ();_abaf !=nil {return nil ,_abaf ;};if _eggf :=_abed .decodeSymbolInstances ();_eggf !=nil {return nil ,_eggf ;};return _abed .RegionBitmap ,nil ;};func (_fcff *TextRegion )initSymbols ()error {const _bagd ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_fcedc :=range _fcff .Header .RTSegments {if _fcedc ==nil {return _de .Error (_bagd ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");};if _fcedc .Type ==0{_gcaa ,_caea :=_fcedc .GetSegmentData ();if _caea !=nil {return _de .Wrap (_caea ,_bagd ,"");};_ddefc ,_dfed :=_gcaa .(*SymbolDictionary );if !_dfed {return _de .Error (_bagd ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_ddefc ._ace =_fcff ._ebff ;_efffc ,_caea :=_ddefc .GetDictionary ();if _caea !=nil {return _de .Wrap (_caea ,_bagd ,"");};_fcff .Symbols =append (_fcff .Symbols ,_efffc ...);};};_fcff .NumberOfSymbols =uint32 (len (_fcff .Symbols ));return nil ;};func (_baagf *HalftoneRegion )GetRegionBitmap ()(*_df .Bitmap ,error ){if _baagf .HalftoneRegionBitmap !=nil {return _baagf .HalftoneRegionBitmap ,nil ;};var _eadb error ;_baagf .HalftoneRegionBitmap =_df .New (int (_baagf .RegionSegment .BitmapWidth ),int (_baagf .RegionSegment .BitmapHeight ));if _baagf .Patterns ==nil ||len (_baagf .Patterns )==0{_baagf .Patterns ,_eadb =_baagf .GetPatterns ();if _eadb !=nil {return nil ,_eadb ;};};if _baagf .HDefaultPixel ==1{_baagf .HalftoneRegionBitmap .SetDefaultPixel ();};_feed :=_b .Ceil (_b .Log (float64 (len (_baagf .Patterns )))/_b .Log (2));_cdfd :=int (_feed );var _aaff [][]int ;_aaff ,_eadb =_baagf .grayScaleDecoding (_cdfd );if _eadb !=nil {return nil ,_eadb ;};if _eadb =_baagf .renderPattern (_aaff );_eadb !=nil {return nil ,_eadb ;};return _baagf .HalftoneRegionBitmap ,nil ;};func (_agdf *TextRegion )Init (header *Header ,r _ca .StreamReader )error {_agdf .Header =header ;_agdf ._gcff =r ;_agdf .RegionInfo =NewRegionSegment (_agdf ._gcff );return _agdf .parseHeader ();};type GenericRegion struct{_afec _ca .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_gcdd bool ;Bitmap *_df .Bitmap ;_agf *_fd .Decoder ;_baa *_fd .DecoderStats ;_abd *_cb .Decoder ;};func (_agbc *TableSegment )HtLow ()int32 {return _agbc ._afdba };func (_ded *GenericRefinementRegion )decodeOptimized (_ae ,_aed ,_fdf ,_bac ,_bg ,_ge ,_bab int )error {var (_ad error ;_e int ;_gc int ;);_ef :=_ae -int (_ded .ReferenceDY );if _bdf :=int (-_ded .ReferenceDX );_bdf > 0{_e =_bdf ;};_cad :=_ded .ReferenceBitmap .GetByteIndex (_e ,_ef );if _ded .ReferenceDX > 0{_gc =int (_ded .ReferenceDX );};_bad :=_ded .RegionBitmap .GetByteIndex (_gc ,_ae );switch _ded .TemplateID {case 0:_ad =_ded .decodeTemplate (_ae ,_aed ,_fdf ,_bac ,_bg ,_ge ,_bab ,_bad ,_ef ,_cad ,_ded ._gdg );case 1:_ad =_ded .decodeTemplate (_ae ,_aed ,_fdf ,_bac ,_bg ,_ge ,_bab ,_bad ,_ef ,_cad ,_ded ._cc );};return _ad ;};const (ORandom OrganizationType =iota ;OSequential ;);func (_fcge *HalftoneRegion )renderPattern (_gdcb [][]int )(_baca error ){var _ddad ,_ddbb int ;for _gada :=0;_gada < int (_fcge .HGridHeight );_gada ++{for _eaa :=0;_eaa < int (_fcge .HGridWidth );_eaa ++{_ddad =_fcge .computeX (_gada ,_eaa );_ddbb =_fcge .computeY (_gada ,_eaa );_ffeg :=_fcge .Patterns [_gdcb [_gada ][_eaa ]];if _baca =_df .Blit (_ffeg ,_fcge .HalftoneRegionBitmap ,_ddad +int (_fcge .HGridX ),_ddbb +int (_fcge .HGridY ),_fcge .CombinationOperator );_baca !=nil {return _baca ;};};};return nil ;};func (_cgad *PageInformationSegment )readContainsRefinement ()error {_bfabc ,_dcac :=_cgad ._fga .ReadBit ();if _dcac !=nil {return _dcac ;};if _bfabc ==1{_cgad ._ecbg =true ;};return nil ;};func (_abac *SymbolDictionary )getSymbol (_bbde int )(*_df .Bitmap ,error ){const _bceb ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_dccb ,_gfad :=_abac ._gbg .GetBitmap (_abac ._cdeg [_bbde ]);if _gfad !=nil {return nil ,_de .Wrap (_gfad ,_bceb ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _dccb ,nil ;};func (_cbcg *Header )GetSegmentData ()(Segmenter ,error ){var _fafc Segmenter ;if _cbcg .SegmentData !=nil {_fafc =_cbcg .SegmentData ;};if _fafc ==nil {_dfe ,_gbdf :=_gafc [_cbcg .Type ];if !_gbdf {return nil ,_cf .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_cbcg .Type ,_cbcg .Type );};_fafc =_dfe ();_gd .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_cbcg .SegmentNumber ,_cbcg .SegmentDataStartOffset );_gadb ,_ecea :=_cbcg .subInputReader ();if _ecea !=nil {return nil ,_ecea ;};if _fabf :=_fafc .Init (_cbcg ,_gadb );_fabf !=nil {_gd .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_fabf ,_fafc );return nil ,_fabf ;};_cbcg .SegmentData =_fafc ;};return _fafc ,nil ;};func (_fceeg *TextRegion )symbolIDCodeLengths ()error {var (_febf []*_bf .Code ;_bgfc uint64 ;_fbgd _bf .Tabler ;_aefce error ;);for _baabc :=0;_baabc < 35;_baabc ++{_bgfc ,_aefce =_fceeg ._gcff .ReadBits (4);if _aefce !=nil {return _aefce ;};_gddd :=int (_bgfc &0xf);if _gddd > 0{_febf =append (_febf ,_bf .NewCode (int32 (_gddd ),0,int32 (_baabc ),false ));};};_fbgd ,_aefce =_bf .NewFixedSizeTable (_febf );if _aefce !=nil {return _aefce ;};var (_bfde int64 ;_acda uint32 ;_faefc []*_bf .Code ;_eacda int64 ;);for _acda < _fceeg .NumberOfSymbols {_eacda ,_aefce =_fbgd .Decode (_fceeg ._gcff );if _aefce !=nil {return _aefce ;};if _eacda < 32{if _eacda > 0{_faefc =append (_faefc ,_bf .NewCode (int32 (_eacda ),0,int32 (_acda ),false ));};_bfde =_eacda ;_acda ++;}else {var _aadef ,_debd int64 ;switch _eacda {case 32:_bgfc ,_aefce =_fceeg ._gcff .ReadBits (2);if _aefce !=nil {return _aefce ;};_aadef =3+int64 (_bgfc );if _acda > 0{_debd =_bfde ;};case 33:_bgfc ,_aefce =_fceeg ._gcff .ReadBits (3);if _aefce !=nil {return _aefce ;};_aadef =3+int64 (_bgfc );case 34:_bgfc ,_aefce =_fceeg ._gcff .ReadBits (7);if _aefce !=nil {return _aefce ;};_aadef =11+int64 (_bgfc );};for _fffg :=0;_fffg < int (_aadef );_fffg ++{if _debd > 0{_faefc =append (_faefc ,_bf .NewCode (int32 (_debd ),0,int32 (_acda ),false ));};_acda ++;};};};_fceeg ._gcff .Align ();_fceeg ._cedb ,_aefce =_bf .NewFixedSizeTable (_faefc );return _aefce ;};func (_bae *GenericRefinementRegion )decodeSLTP ()(int ,error ){_bae .Template .setIndex (_bae ._cbg );return _bae ._dc .DecodeBit (_bae ._cbg );};func (_gcgfa *Header )readNumberOfReferredToSegments (_gab _ca .StreamReader )(uint64 ,error ){const _abga ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";_cagd ,_cde :=_gab .ReadBits (3);if _cde !=nil {return 0,_de .Wrap (_cde ,_abga ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_cagd &=0xf;var _eedg []byte ;if _cagd <=4{_eedg =make ([]byte ,5);for _gaab :=0;_gaab <=4;_gaab ++{_gggc ,_aebf :=_gab .ReadBit ();if _aebf !=nil {return 0,_de .Wrap (_aebf ,_abga ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_eedg [_gaab ]=byte (_gggc );};}else {_cagd ,_cde =_gab .ReadBits (29);if _cde !=nil {return 0,_cde ;};_cagd &=_b .MaxInt32 ;_aca :=(_cagd +8)>>3;_aca <<=3;_eedg =make ([]byte ,_aca );var _cbb uint64 ;for _cbb =0;_cbb < _aca ;_cbb ++{_fbd ,_edf :=_gab .ReadBit ();if _edf !=nil {return 0,_de .Wrap (_edf ,_abga ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_eedg [_cbb ]=byte (_fbd );};};return _cagd ,nil ;};func (_eaad *TableSegment )HtOOB ()int32 {return _eaad ._dgaf };func (_gcdcf *RegionSegment )readCombinationOperator ()error {_egef ,_gdbg :=_gcdcf ._bcda .ReadBits (3);if _gdbg !=nil {return _gdbg ;};_gcdcf .CombinaionOperator =_df .CombinationOperator (_egef &0xF);return nil ;};func (_aacc *SymbolDictionary )encodeSymbols (_eafb _ca .BinaryWriter )(_gfbc int ,_dggf error ){const _bbbe ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_cfbc :=_fb .New ();_cfbc .Init ();_aaaf ,_dggf :=_aacc ._gbg .SelectByIndexes (_aacc ._cdeg );if _dggf !=nil {return 0,_de .Wrap (_dggf ,_bbbe ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_gffd :=map[*_df .Bitmap ]int {};for _fef ,_eac :=range _aaaf .Values {_gffd [_eac ]=_fef ;};_aaaf .SortByHeight ();var _fcdb ,_deaa int ;_eage ,_dggf :=_aaaf .GroupByHeight ();if _dggf !=nil {return 0,_de .Wrap (_dggf ,_bbbe ,"");};for _ ,_dagd :=range _eage .Values {_fecg :=_dagd .Values [0].Height ;_dfaa :=_fecg -_fcdb ;if _dggf =_cfbc .EncodeInteger (_fb .IADH ,_dfaa );_dggf !=nil {return 0,_de .Wrapf (_dggf ,_bbbe ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_dfaa );};_fcdb =_fecg ;_dabg ,_eeef :=_dagd .GroupByWidth ();if _eeef !=nil {return 0,_de .Wrapf (_eeef ,_bbbe ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_fecg );};var _gbfa int ;for _ ,_fgdec :=range _dabg .Values {for _ ,_gdac :=range _fgdec .Values {_cccg :=_gdac .Width ;_gbgf :=_cccg -_gbfa ;if _eeef =_cfbc .EncodeInteger (_fb .IADW ,_gbgf );_eeef !=nil {return 0,_de .Wrapf (_eeef ,_bbbe ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_gbgf );};_gbfa +=_gbgf ;if _eeef =_cfbc .EncodeBitmap (_gdac ,false );_eeef !=nil {return 0,_de .Wrapf (_eeef ,_bbbe ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_fecg ,_cccg );};_fgda :=_gffd [_gdac ];_aacc ._gafa [_fgda ]=_deaa ;_deaa ++;};};if _eeef =_cfbc .EncodeOOB (_fb .IADW );_eeef !=nil {return 0,_de .Wrap (_eeef ,_bbbe ,"\u0049\u0041\u0044\u0057");};};if _dggf =_cfbc .EncodeInteger (_fb .IAEX ,0);_dggf !=nil {return 0,_de .Wrap (_dggf ,_bbbe ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};if _dggf =_cfbc .EncodeInteger (_fb .IAEX ,len (_aacc ._cdeg ));_dggf !=nil {return 0,_de .Wrap (_dggf ,_bbbe ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_cfbc .Final ();_cgef ,_dggf :=_cfbc .WriteTo (_eafb );if _dggf !=nil {return 0,_de .Wrap (_dggf ,_bbbe ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};return int (_cgef ),nil ;};var _ templater =&template0 {};func (_bgad *GenericRegion )setOverrideFlag (_bcbd int ){_bgad .GBAtOverride [_bcbd ]=true ;_bgad ._gcdd =true ;};func (_cdda *HalftoneRegion )combineGrayscalePlanes (_ffbf []*_df .Bitmap ,_aedb int )error {_bddc :=0;for _fgcb :=0;_fgcb < _ffbf [_aedb ].Height ;_fgcb ++{for _bcf :=0;_bcf < _ffbf [_aedb ].Width ;_bcf +=8{_gffg ,_cfdg :=_ffbf [_aedb +1].GetByte (_bddc );if _cfdg !=nil {return _cfdg ;};_egdf ,_cfdg :=_ffbf [_aedb ].GetByte (_bddc );if _cfdg !=nil {return _cfdg ;};_cfdg =_ffbf [_aedb ].SetByte (_bddc ,_df .CombineBytes (_egdf ,_gffg ,_df .CmbOpXor ));if _cfdg !=nil {return _cfdg ;};_bddc ++;};};return nil ;};func (_gf *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_bce ,_gdf ,_ee ,_fae ,_fdb ,_dabd ,_bfab ,_fba ,_dag int )(_efb error ){var (_bcb ,_dcg int ;_eg ,_cbgg int ;_dbe ,_eee int ;_fbaa byte ;);if _bce > 0{_fbaa ,_efb =_gf .RegionBitmap .GetByte (_bfab -_ee );if _efb !=nil {return ;};_eg =int (_fbaa );};if _fba > 0&&_fba <=_gf .ReferenceBitmap .Height {_fbaa ,_efb =_gf .ReferenceBitmap .GetByte (_dag -_fae +_dabd );if _efb !=nil {return ;};_cbgg =int (_fbaa )<<2;};if _fba >=0&&_fba < _gf .ReferenceBitmap .Height {_fbaa ,_efb =_gf .ReferenceBitmap .GetByte (_dag +_dabd );if _efb !=nil {return ;};_dbe =int (_fbaa );};if _fba > -2&&_fba < _gf .ReferenceBitmap .Height -1{_fbaa ,_efb =_gf .ReferenceBitmap .GetByte (_dag +_fae +_dabd );if _efb !=nil {return ;};_eee =int (_fbaa );};_bcb =((_eg >>5)&0x6)|((_eee >>2)&0x30)|(_dbe &0xc0)|(_cbgg &0x200);_dcg =((_eee >>2)&0x70)|(_dbe &0xc0)|(_cbgg &0x700);var _ggb int ;for _cee :=0;_cee < _fdb ;_cee =_ggb {var (_ageb int ;_cadf int ;);_ggb =_cee +8;if _ageb =_gdf -_cee ;_ageb > 8{_ageb =8;};_egd :=_ggb < _gdf ;_gad :=_ggb < _gf .ReferenceBitmap .Width ;_gec :=_dabd +1;if _bce > 0{_fbaa =0;if _egd {_fbaa ,_efb =_gf .RegionBitmap .GetByte (_bfab -_ee +1);if _efb !=nil {return ;};};_eg =(_eg <<8)|int (_fbaa );};if _fba > 0&&_fba <=_gf .ReferenceBitmap .Height {var _aede int ;if _gad {_fbaa ,_efb =_gf .ReferenceBitmap .GetByte (_dag -_fae +_gec );if _efb !=nil {return ;};_aede =int (_fbaa )<<2;};_cbgg =(_cbgg <<8)|_aede ;};if _fba >=0&&_fba < _gf .ReferenceBitmap .Height {_fbaa =0;if _gad {_fbaa ,_efb =_gf .ReferenceBitmap .GetByte (_dag +_gec );if _efb !=nil {return ;};};_dbe =(_dbe <<8)|int (_fbaa );};if _fba > -2&&_fba < (_gf .ReferenceBitmap .Height -1){_fbaa =0;if _gad {_fbaa ,_efb =_gf .ReferenceBitmap .GetByte (_dag +_fae +_gec );if _efb !=nil {return ;};};_eee =(_eee <<8)|int (_fbaa );};for _dabc :=0;_dabc < _ageb ;_dabc ++{var _gcd int ;_eec :=(_dcg >>4)&0x1ff;switch _eec {case 0x1ff:_gcd =1;case 0x00:_gcd =0;default:_gf ._cbg .SetIndex (int32 (_bcb ));_gcd ,_efb =_gf ._dc .DecodeBit (_gf ._cbg );if _efb !=nil {return ;};};_gaf :=uint (7-_dabc );_cadf |=_gcd <<_gaf ;_bcb =((_bcb &0x0d6)<<1)|_gcd |(_eg >>_gaf +5)&0x002|((_eee >>_gaf +2)&0x010)|((_dbe >>_gaf )&0x040)|((_cbgg >>_gaf )&0x200);_dcg =((_dcg &0xdb)<<1)|((_eee >>_gaf +2)&0x010)|((_dbe >>_gaf )&0x080)|((_cbgg >>_gaf )&0x400);};_efb =_gf .RegionBitmap .SetByte (_bfab ,byte (_cadf ));if _efb !=nil {return ;};_bfab ++;_dag ++;};return nil ;};func (_gecb *Header )writeSegmentDataLength (_gdde _ca .BinaryWriter )(_becb int ,_gcgg error ){_bgeb :=make ([]byte ,4);_g .BigEndian .PutUint32 (_bgeb ,uint32 (_gecb .SegmentDataLength ));if _becb ,_gcgg =_gdde .Write (_bgeb );_gcgg !=nil {return 0,_de .Wrap (_gcgg ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _becb ,nil ;};func (_bgbcd *TextRegion )checkInput ()error {const _dcgg ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_bgbcd .UseRefinement {if _bgbcd .SbrTemplate !=0{_gd .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_bgbcd .SbrTemplate =0;};};if _bgbcd .SbHuffFS ==2||_bgbcd .SbHuffRDWidth ==2||_bgbcd .SbHuffRDHeight ==2||_bgbcd .SbHuffRDX ==2||_bgbcd .SbHuffRDY ==2{return _de .Error (_dcgg ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");};if !_bgbcd .UseRefinement {if _bgbcd .SbHuffRSize !=0{_gd .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_bgbcd .SbHuffRSize =0;};if _bgbcd .SbHuffRDY !=0{_gd .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_bgbcd .SbHuffRDY =0;};if _bgbcd .SbHuffRDX !=0{_gd .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_bgbcd .SbHuffRDX =0;};if _bgbcd .SbHuffRDWidth !=0{_gd .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");_bgbcd .SbHuffRDWidth =0;};if _bgbcd .SbHuffRDHeight !=0{_gd .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_bgbcd .SbHuffRDHeight =0;};};return nil ;};func (_dbfc *SymbolDictionary )Encode (w _ca .BinaryWriter )(_bggdc int ,_cab error ){const _cgf ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";if _dbfc ==nil {return 0,_de .Error (_cgf ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _bggdc ,_cab =_dbfc .encodeFlags (w );_cab !=nil {return _bggdc ,_de .Wrap (_cab ,_cgf ,"");};_eaac ,_cab :=_dbfc .encodeATFlags (w );if _cab !=nil {return _bggdc ,_de .Wrap (_cab ,_cgf ,"");};_bggdc +=_eaac ;if _eaac ,_cab =_dbfc .encodeRefinementATFlags (w );_cab !=nil {return _bggdc ,_de .Wrap (_cab ,_cgf ,"");};_bggdc +=_eaac ;if _eaac ,_cab =_dbfc .encodeNumSyms (w );_cab !=nil {return _bggdc ,_de .Wrap (_cab ,_cgf ,"");};_bggdc +=_eaac ;if _eaac ,_cab =_dbfc .encodeSymbols (w );_cab !=nil {return _bggdc ,_de .Wrap (_cab ,_cgf ,"");};_bggdc +=_eaac ;return _bggdc ,nil ;};func (_fgf *GenericRegion )decodeLine (_bfd ,_bdc ,_ccbe int )error {const _fcg ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_dac :=_fgf .Bitmap .GetByteIndex (0,_bfd );_bccd :=_dac -_fgf .Bitmap .RowStride ;switch _fgf .GBTemplate {case 0:if !_fgf .UseExtTemplates {return _fgf .decodeTemplate0a (_bfd ,_bdc ,_ccbe ,_dac ,_bccd );};return _fgf .decodeTemplate0b (_bfd ,_bdc ,_ccbe ,_dac ,_bccd );case 1:return _fgf .decodeTemplate1 (_bfd ,_bdc ,_ccbe ,_dac ,_bccd );case 2:return _fgf .decodeTemplate2 (_bfd ,_bdc ,_ccbe ,_dac ,_bccd );case 3:return _fgf .decodeTemplate3 (_bfd ,_bdc ,_ccbe ,_dac ,_bccd );};return _de .Errorf (_fcg ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_fgf .GBTemplate );};func (_dccf *TextRegion )Encode (w _ca .BinaryWriter )(_gdebf int ,_agdc error ){const _gcfgg ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _gdebf ,_agdc =_dccf .RegionInfo .Encode (w );_agdc !=nil {return _gdebf ,_de .Wrap (_agdc ,_gcfgg ,"");};var _ggcc int ;if _ggcc ,_agdc =_dccf .encodeFlags (w );_agdc !=nil {return _gdebf ,_de .Wrap (_agdc ,_gcfgg ,"");};_gdebf +=_ggcc ;if _ggcc ,_agdc =_dccf .encodeSymbols (w );_agdc !=nil {return _gdebf ,_de .Wrap (_agdc ,_gcfgg ,"");};_gdebf +=_ggcc ;return _gdebf ,nil ;};func (_cefa *TextRegion )readAmountOfSymbolInstances ()error {_aefca ,_ffaa :=_cefa ._gcff .ReadBits (32);if _ffaa !=nil {return _ffaa ;};_cefa .NumberOfSymbolInstances =uint32 (_aefca &_b .MaxUint32 );_dgafd :=_cefa .RegionInfo .BitmapWidth *_cefa .RegionInfo .BitmapHeight ;if _dgafd < _cefa .NumberOfSymbolInstances {_gd .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_dgafd ,_cefa .NumberOfSymbolInstances );_cefa .NumberOfSymbolInstances =_dgafd ;};return nil ;};func (_deeb *TableSegment )HtHigh ()int32 {return _deeb ._gdad };type SymbolDictionary struct{_fddg _ca .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_fbde bool ;_caabc bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_dcga uint32 ;_bfef []*_df .Bitmap ;_bddf uint32 ;_edfb []*_df .Bitmap ;_dbdd _bf .Tabler ;_bdcce _bf .Tabler ;_agebf _bf .Tabler ;_dadae _bf .Tabler ;_dcf []*_df .Bitmap ;_cffaa []*_df .Bitmap ;_dbcg *_fd .Decoder ;_fcedd *TextRegion ;_bcec *GenericRegion ;_faafb *GenericRefinementRegion ;_efae *_fd .DecoderStats ;_agceg *_fd .DecoderStats ;_bdbd *_fd .DecoderStats ;_cgba *_fd .DecoderStats ;_bbaa *_fd .DecoderStats ;_eade *_fd .DecoderStats ;_eefc *_fd .DecoderStats ;_efc *_fd .DecoderStats ;_ace *_fd .DecoderStats ;_afdd int8 ;_gbg *_df .Bitmaps ;_cdeg []int ;_gafa map[int ]int ;_aae bool ;};func (_efa *Header )writeFlags (_dbee _ca .BinaryWriter )(_geg error ){const _agcg ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_aeef :=byte (_efa .Type );if _geg =_dbee .WriteByte (_aeef );_geg !=nil {return _de .Wrap (_geg ,_agcg ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_efa .RetainFlag &&!_efa .PageAssociationFieldSize {return nil ;};if _geg =_dbee .SkipBits (-8);_geg !=nil {return _de .Wrap (_geg ,_agcg ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _aggb int ;if _efa .RetainFlag {_aggb =1;};if _geg =_dbee .WriteBit (_aggb );_geg !=nil {return _de .Wrap (_geg ,_agcg ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_aggb =0;if _efa .PageAssociationFieldSize {_aggb =1;};if _geg =_dbee .WriteBit (_aggb );_geg !=nil {return _de .Wrap (_geg ,_agcg ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_dbee .FinishByte ();return nil ;};func (_dbd *GenericRefinementRegion )readAtPixels ()error {_dbd .GrAtX =make ([]int8 ,2);_dbd .GrAtY =make ([]int8 ,2);_fbab ,_aggf :=_dbd ._ab .ReadByte ();if _aggf !=nil {return _aggf ;};_dbd .GrAtX [0]=int8 (_fbab );_fbab ,_aggf =_dbd ._ab .ReadByte ();if _aggf !=nil {return _aggf ;};_dbd .GrAtY [0]=int8 (_fbab );_fbab ,_aggf =_dbd ._ab .ReadByte ();if _aggf !=nil {return _aggf ;};_dbd .GrAtX [1]=int8 (_fbab );_fbab ,_aggf =_dbd ._ab .ReadByte ();if _aggf !=nil {return _aggf ;};_dbd .GrAtY [1]=int8 (_fbab );return nil ;};func (_dab *EndOfStripe )LineNumber ()int {return _dab ._da };func (_bbg *HalftoneRegion )computeX (_fcce ,_gba int )int {return _bbg .shiftAndFill (int (_bbg .HGridX )+_fcce *int (_bbg .HRegionY )+_gba *int (_bbg .HRegionX ));};func (_fbcb *PageInformationSegment )readCombinationOperator ()error {_baed ,_gdcc :=_fbcb ._fga .ReadBits (2);if _gdcc !=nil {return _gdcc ;};_fbcb ._fcd =_df .CombinationOperator (int (_baed ));return nil ;};func (_cgae *SymbolDictionary )decodeDirectlyThroughGenericRegion (_gaeg ,_eaea uint32 )error {if _cgae ._bcec ==nil {_cgae ._bcec =NewGenericRegion (_cgae ._fddg );};_cgae ._bcec .setParametersWithAt (false ,byte (_cgae .SdTemplate ),false ,false ,_cgae .SdATX ,_cgae .SdATY ,_gaeg ,_eaea ,_cgae ._efae ,_cgae ._dbcg );return _cgae .addSymbol (_cgae ._bcec );};type EndOfStripe struct{_ce _ca .StreamReader ;_da int ;};func (_cddf *template1 )setIndex (_baea *_fd .DecoderStats ){_baea .SetIndex (0x080)};func (_egfdd *TableSegment )HtRS ()int32 {return _egfdd ._cddc };func (_bgacb *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _bgacb .IsHuffmanEncoded {switch _bgacb .SdHuffDecodeWidthSelection {case 0:_fbb ,_ddce :=_bf .GetStandardTable (2);if _ddce !=nil {return 0,_ddce ;};return _fbb .Decode (_bgacb ._fddg );case 1:_cfge ,_dfb :=_bf .GetStandardTable (3);if _dfb !=nil {return 0,_dfb ;};return _cfge .Decode (_bgacb ._fddg );case 3:if _bgacb ._bdcce ==nil {var _eabc int ;if _bgacb .SdHuffDecodeHeightSelection ==3{_eabc ++;};_dffb ,_ffcd :=_bgacb .getUserTable (_eabc );if _ffcd !=nil {return 0,_ffcd ;};_bgacb ._bdcce =_dffb ;};return _bgacb ._bdcce .Decode (_bgacb ._fddg );};}else {_feec ,_bgbc :=_bgacb ._dbcg .DecodeInt (_bgacb ._bdbd );if _bgbc !=nil {return 0,_bgbc ;};return int64 (_feec ),nil ;};return 0,nil ;};func (_dbec *HalftoneRegion )checkInput ()error {if _dbec .IsMMREncoded {if _dbec .HTemplate !=0{_gd .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_dbec .HTemplate );};if _dbec .HSkipEnabled {_gd .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_dbec .HSkipEnabled );};};return nil ;};func (_gffca *PatternDictionary )extractPatterns (_gebg *_df .Bitmap )error {var _gbbe int ;_gcf :=make ([]*_df .Bitmap ,_gffca .GrayMax +1);for _gbbe <=int (_gffca .GrayMax ){_ecge :=int (_gffca .HdpWidth )*_gbbe ;_ebbg :=_c .Rect (_ecge ,0,_ecge +int (_gffca .HdpWidth ),int (_gffca .HdpHeight ));_gfbb ,_gdgc :=_df .Extract (_ebbg ,_gebg );if _gdgc !=nil {return _gdgc ;};_gcf [_gbbe ]=_gfbb ;_gbbe ++;};_gffca .Patterns =_gcf ;return nil ;};func (_aaea *TextRegion )decodeRdx ()(int64 ,error ){const _dgee ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _aaea .IsHuffmanEncoded {if _aaea .SbHuffRDX ==3{if _aaea ._egde ==nil {var (_gagc int ;_ddfb error ;);if _aaea .SbHuffFS ==3{_gagc ++;};if _aaea .SbHuffDS ==3{_gagc ++;};if _aaea .SbHuffDT ==3{_gagc ++;};if _aaea .SbHuffRDWidth ==3{_gagc ++;};if _aaea .SbHuffRDHeight ==3{_gagc ++;};_aaea ._egde ,_ddfb =_aaea .getUserTable (_gagc );if _ddfb !=nil {return 0,_de .Wrap (_ddfb ,_dgee ,"");};};return _aaea ._egde .Decode (_aaea ._gcff );};_dccc ,_cgga :=_bf .GetStandardTable (14+int (_aaea .SbHuffRDX ));if _cgga !=nil {return 0,_de .Wrap (_cgga ,_dgee ,"");};return _dccc .Decode (_aaea ._gcff );};_dfbf ,_eaade :=_aaea ._badc .DecodeInt (_aaea ._agaf );if _eaade !=nil {return 0,_de .Wrap (_eaade ,_dgee ,"");};return int64 (_dfbf ),nil ;};func (_gee *GenericRegion )copyLineAbove (_cae int )error {_egc :=_cae *_gee .Bitmap .RowStride ;_bfabg :=_egc -_gee .Bitmap .RowStride ;for _dae :=0;_dae < _gee .Bitmap .RowStride ;_dae ++{_adb ,_degb :=_gee .Bitmap .GetByte (_bfabg );if _degb !=nil {return _degb ;};_bfabg ++;if _degb =_gee .Bitmap .SetByte (_egc ,_adb );_degb !=nil {return _degb ;};_egc ++;};return nil ;};func (_dadcf *Header )readHeaderLength (_eab _ca .StreamReader ,_daf int64 ){_dadcf .HeaderLength =_eab .StreamPosition ()-_daf ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);type PageInformationSegment struct{_fga _ca .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_efed bool ;_fcd _df .CombinationOperator ;_becd bool ;_bdbf uint8 ;_ecbg bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_ddfa *TextRegion )getSymbols ()error {if _ddfa .Header .RTSegments !=nil {return _ddfa .initSymbols ();};return nil ;};func (_eccg *HalftoneRegion )parseHeader ()error {if _gbc :=_eccg .RegionSegment .parseHeader ();_gbc !=nil {return _gbc ;};_eeea ,_fcfd :=_eccg ._bdae .ReadBit ();if _fcfd !=nil {return _fcfd ;};_eccg .HDefaultPixel =int8 (_eeea );_gace ,_fcfd :=_eccg ._bdae .ReadBits (3);if _fcfd !=nil {return _fcfd ;};_eccg .CombinationOperator =_df .CombinationOperator (_gace &0xf);_eeea ,_fcfd =_eccg ._bdae .ReadBit ();if _fcfd !=nil {return _fcfd ;};if _eeea ==1{_eccg .HSkipEnabled =true ;};_gace ,_fcfd =_eccg ._bdae .ReadBits (2);if _fcfd !=nil {return _fcfd ;};_eccg .HTemplate =byte (_gace &0xf);_eeea ,_fcfd =_eccg ._bdae .ReadBit ();if _fcfd !=nil {return _fcfd ;};if _eeea ==1{_eccg .IsMMREncoded =true ;};_gace ,_fcfd =_eccg ._bdae .ReadBits (32);if _fcfd !=nil {return _fcfd ;};_eccg .HGridWidth =uint32 (_gace &_b .MaxUint32 );_gace ,_fcfd =_eccg ._bdae .ReadBits (32);if _fcfd !=nil {return _fcfd ;};_eccg .HGridHeight =uint32 (_gace &_b .MaxUint32 );_gace ,_fcfd =_eccg ._bdae .ReadBits (32);if _fcfd !=nil {return _fcfd ;};_eccg .HGridX =int32 (_gace &_b .MaxInt32 );_gace ,_fcfd =_eccg ._bdae .ReadBits (32);if _fcfd !=nil {return _fcfd ;};_eccg .HGridY =int32 (_gace &_b .MaxInt32 );_gace ,_fcfd =_eccg ._bdae .ReadBits (16);if _fcfd !=nil {return _fcfd ;};_eccg .HRegionX =uint16 (_gace &_b .MaxUint16 );_gace ,_fcfd =_eccg ._bdae .ReadBits (16);if _fcfd !=nil {return _fcfd ;};_eccg .HRegionY =uint16 (_gace &_b .MaxUint16 );if _fcfd =_eccg .computeSegmentDataStructure ();_fcfd !=nil {return _fcfd ;};return _eccg .checkInput ();};func (_deae *PatternDictionary )setGbAtPixels (){if _deae .HDTemplate ==0{_deae .GBAtX =make ([]int8 ,4);_deae .GBAtY =make ([]int8 ,4);_deae .GBAtX [0]=-int8 (_deae .HdpWidth );_deae .GBAtY [0]=0;_deae .GBAtX [1]=-3;_deae .GBAtY [1]=-1;_deae .GBAtX [2]=2;_deae .GBAtY [2]=-2;_deae .GBAtX [3]=-2;_deae .GBAtY [3]=-2;}else {_deae .GBAtX =[]int8 {-int8 (_deae .HdpWidth )};_deae .GBAtY =[]int8 {0};};};func (_dffe *GenericRefinementRegion )updateOverride ()error {if _dffe .GrAtX ==nil ||_dffe .GrAtY ==nil {return _fe .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if len (_dffe .GrAtX )!=len (_dffe .GrAtY ){return _fe .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_dffe ._cec =make ([]bool ,len (_dffe .GrAtX ));switch _dffe .TemplateID {case 0:if _dffe .GrAtX [0]!=-1&&_dffe .GrAtY [0]!=-1{_dffe ._cec [0]=true ;_dffe ._dg =true ;};if _dffe .GrAtX [1]!=-1&&_dffe .GrAtY [1]!=-1{_dffe ._cec [1]=true ;_dffe ._dg =true ;};case 1:_dffe ._dg =false ;};return nil ;};func (_fgdc *TextRegion )decodeIds ()(int64 ,error ){const _efgg ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _fgdc .IsHuffmanEncoded {if _fgdc .SbHuffDS ==3{if _fgdc ._cddcb ==nil {_gdeg :=0;if _fgdc .SbHuffFS ==3{_gdeg ++;};var _gcgfg error ;_fgdc ._cddcb ,_gcgfg =_fgdc .getUserTable (_gdeg );if _gcgfg !=nil {return 0,_de .Wrap (_gcgfg ,_efgg ,"");};};return _fgdc ._cddcb .Decode (_fgdc ._gcff );};_bbce ,_bbdec :=_bf .GetStandardTable (8+int (_fgdc .SbHuffDS ));if _bbdec !=nil {return 0,_de .Wrap (_bbdec ,_efgg ,"");};return _bbce .Decode (_fgdc ._gcff );};_dbce ,_abfb :=_fgdc ._badc .DecodeInt (_fgdc ._ccba );if _abfb !=nil {return 0,_de .Wrap (_abfb ,_efgg ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_dbce ),nil ;};func (_dfda *GenericRegion )decodeTemplate3 (_dbea ,_gge ,_ecce int ,_eeg ,_dgd int )(_cfea error ){const _fced ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_fdff ,_aad int ;_dggc int ;_eaec byte ;_gfa ,_cbgge int ;);if _dbea >=1{_eaec ,_cfea =_dfda .Bitmap .GetByte (_dgd );if _cfea !=nil {return _de .Wrap (_cfea ,_fced ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dggc =int (_eaec );};_fdff =(_dggc >>1)&0x70;for _bgcb :=0;_bgcb < _ecce ;_bgcb =_gfa {var (_edc byte ;_ccag int ;);_gfa =_bgcb +8;if _dbc :=_gge -_bgcb ;_dbc > 8{_ccag =8;}else {_ccag =_dbc ;};if _dbea >=1{_dggc <<=8;if _gfa < _gge {_eaec ,_cfea =_dfda .Bitmap .GetByte (_dgd +1);if _cfea !=nil {return _de .Wrap (_cfea ,_fced ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");};_dggc |=int (_eaec );};};for _aaf :=0;_aaf < _ccag ;_aaf ++{if _dfda ._gcdd {_aad =_dfda .overrideAtTemplate3 (_fdff ,_bgcb +_aaf ,_dbea ,int (_edc ),_aaf );_dfda ._baa .SetIndex (int32 (_aad ));}else {_dfda ._baa .SetIndex (int32 (_fdff ));};_cbgge ,_cfea =_dfda ._agf .DecodeBit (_dfda ._baa );if _cfea !=nil {return _de .Wrap (_cfea ,_fced ,"");};_edc |=byte (_cbgge )<<byte (7-_aaf );_fdff =((_fdff &0x1f7)<<1)|_cbgge |((_dggc >>uint (8-_aaf ))&0x010);};if _ega :=_dfda .Bitmap .SetByte (_eeg ,_edc );_ega !=nil {return _de .Wrap (_ega ,_fced ,"");};_eeg ++;_dgd ++;};return nil ;};func (_dfc *SymbolDictionary )getSbSymCodeLen ()int8 {_cgfe :=int8 (_b .Ceil (_b .Log (float64 (_dfc ._dcga +_dfc .NumberOfNewSymbols ))/_b .Log (2)));if _dfc .IsHuffmanEncoded &&_cgfe < 1{return 1;};return _cgfe ;};func (_ffba *GenericRefinementRegion )setParameters (_dcb *_fd .DecoderStats ,_dcbb *_fd .Decoder ,_fbg int8 ,_edb ,_fgd uint32 ,_cfccb *_df .Bitmap ,_afd ,_eaf int32 ,_cddg bool ,_bda []int8 ,_afe []int8 ){_gd .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");if _dcb !=nil {_ffba ._cbg =_dcb ;};if _dcbb !=nil {_ffba ._dc =_dcbb ;};_ffba .TemplateID =_fbg ;_ffba .RegionInfo .BitmapWidth =_edb ;_ffba .RegionInfo .BitmapHeight =_fgd ;_ffba .ReferenceBitmap =_cfccb ;_ffba .ReferenceDX =_afd ;_ffba .ReferenceDY =_eaf ;_ffba .IsTPGROn =_cddg ;_ffba .GrAtX =_bda ;_ffba .GrAtY =_afe ;_ffba .RegionBitmap =nil ;_gd .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_ffba );};var _ SegmentEncoder =&GenericRegion {};func (_fgbc *SymbolDictionary )encodeFlags (_afdef _ca .BinaryWriter )(_gdec int ,_dgbf error ){const _bbdeb ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _dgbf =_afdef .SkipBits (3);_dgbf !=nil {return 0,_de .Wrap (_dgbf ,_bbdeb ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _cfca int ;if _fgbc .SdrTemplate > 0{_cfca =1;};if _dgbf =_afdef .WriteBit (_cfca );_dgbf !=nil {return _gdec ,_de .Wrap (_dgbf ,_bbdeb ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_cfca =0;if _fgbc .SdTemplate > 1{_cfca =1;};if _dgbf =_afdef .WriteBit (_cfca );_dgbf !=nil {return _gdec ,_de .Wrap (_dgbf ,_bbdeb ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_cfca =0;if _fgbc .SdTemplate ==1||_fgbc .SdTemplate ==3{_cfca =1;};if _dgbf =_afdef .WriteBit (_cfca );_dgbf !=nil {return _gdec ,_de .Wrap (_dgbf ,_bbdeb ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_cfca =0;if _fgbc ._fbde {_cfca =1;};if _dgbf =_afdef .WriteBit (_cfca );_dgbf !=nil {return _gdec ,_de .Wrap (_dgbf ,_bbdeb ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");};_cfca =0;if _fgbc ._caabc {_cfca =1;};if _dgbf =_afdef .WriteBit (_cfca );_dgbf !=nil {return _gdec ,_de .Wrap (_dgbf ,_bbdeb ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_cfca =0;if _fgbc .SdHuffAggInstanceSelection {_cfca =1;};if _dgbf =_afdef .WriteBit (_cfca );_dgbf !=nil {return _gdec ,_de .Wrap (_dgbf ,_bbdeb ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_cfca =int (_fgbc .SdHuffBMSizeSelection );if _dgbf =_afdef .WriteBit (_cfca );_dgbf !=nil {return _gdec ,_de .Wrap (_dgbf ,_bbdeb ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_cfca =0;if _fgbc .SdHuffDecodeWidthSelection > 1{_cfca =1;};if _dgbf =_afdef .WriteBit (_cfca );_dgbf !=nil {return _gdec ,_de .Wrap (_dgbf ,_bbdeb ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_cfca =0;switch _fgbc .SdHuffDecodeWidthSelection {case 1,3:_cfca =1;};if _dgbf =_afdef .WriteBit (_cfca );_dgbf !=nil {return _gdec ,_de .Wrap (_dgbf ,_bbdeb ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_cfca =0;if _fgbc .SdHuffDecodeHeightSelection > 1{_cfca =1;};if _dgbf =_afdef .WriteBit (_cfca );_dgbf !=nil {return _gdec ,_de .Wrap (_dgbf ,_bbdeb ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_cfca =0;switch _fgbc .SdHuffDecodeHeightSelection {case 1,3:_cfca =1;};if _dgbf =_afdef .WriteBit (_cfca );_dgbf !=nil {return _gdec ,_de .Wrap (_dgbf ,_bbdeb ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_cfca =0;if _fgbc .UseRefinementAggregation {_cfca =1;};if _dgbf =_afdef .WriteBit (_cfca );_dgbf !=nil {return _gdec ,_de .Wrap (_dgbf ,_bbdeb ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_cfca =0;if _fgbc .IsHuffmanEncoded {_cfca =1;};if _dgbf =_afdef .WriteBit (_cfca );_dgbf !=nil {return _gdec ,_de .Wrap (_dgbf ,_bbdeb ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_eeab *SymbolDictionary )encodeATFlags (_bdff _ca .BinaryWriter )(_egff int ,_afb error ){const _aga ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _eeab .IsHuffmanEncoded ||_eeab .SdTemplate !=0{return 0,nil ;};_afgfg :=4;if _eeab .SdTemplate !=0{_afgfg =1;};for _abcgb :=0;_abcgb < _afgfg ;_abcgb ++{if _afb =_bdff .WriteByte (byte (_eeab .SdATX [_abcgb ]));_afb !=nil {return _egff ,_de .Wrapf (_afb ,_aga ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_abcgb );};_egff ++;if _afb =_bdff .WriteByte (byte (_eeab .SdATY [_abcgb ]));_afb !=nil {return _egff ,_de .Wrapf (_afb ,_aga ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_abcgb );};_egff ++;};return _egff ,nil ;};func (_gdff *TableSegment )HtPS ()int32 {return _gdff ._debg };func (_eebd *TextRegion )decodeRdw ()(int64 ,error ){const _fcee ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _eebd .IsHuffmanEncoded {if _eebd .SbHuffRDWidth ==3{if _eebd ._gcfg ==nil {var (_fcaga int ;_cecc error ;);if _eebd .SbHuffFS ==3{_fcaga ++;};if _eebd .SbHuffDS ==3{_fcaga ++;};if _eebd .SbHuffDT ==3{_fcaga ++;};_eebd ._gcfg ,_cecc =_eebd .getUserTable (_fcaga );if _cecc !=nil {return 0,_de .Wrap (_cecc ,_fcee ,"");};};return _eebd ._gcfg .Decode (_eebd ._gcff );};_begg ,_gcac :=_bf .GetStandardTable (14+int (_eebd .SbHuffRDWidth ));if _gcac !=nil {return 0,_de .Wrap (_gcac ,_fcee ,"");};return _begg .Decode (_eebd ._gcff );};_cfbf ,_eacb :=_eebd ._badc .DecodeInt (_eebd ._ffdc );if _eacb !=nil {return 0,_de .Wrap (_eacb ,_fcee ,"");};return int64 (_cfbf ),nil ;};func (_degaa *PatternDictionary )readIsMMREncoded ()error {_dbcb ,_bface :=_degaa ._faad .ReadBit ();if _bface !=nil {return _bface ;};if _dbcb !=0{_degaa .IsMMREncoded =true ;};return nil ;};func (_feea *PageInformationSegment )readDefaultPixelValue ()error {_cbga ,_afdae :=_feea ._fga .ReadBit ();if _afdae !=nil {return _afdae ;};_feea ._bdbf =uint8 (_cbga &0xf);return nil ;};func _ggd (_bee int )int {if _bee ==0{return 0;};_bee |=_bee >>1;_bee |=_bee >>2;_bee |=_bee >>4;_bee |=_bee >>8;_bee |=_bee >>16;return (_bee +1)>>1;};func (_abgab *SymbolDictionary )Init (h *Header ,r _ca .StreamReader )error {_abgab .Header =h ;_abgab ._fddg =r ;return _abgab .parseHeader ();};func (_aebfc *Header )writeSegmentNumber (_dcc _ca .BinaryWriter )(_dded int ,_cecf error ){_fafaa :=make ([]byte ,4);_g .BigEndian .PutUint32 (_fafaa ,_aebfc .SegmentNumber );if _dded ,_cecf =_dcc .Write (_fafaa );_cecf !=nil {return 0,_de .Wrap (_cecf ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _dded ,nil ;};func (_cgbca *SymbolDictionary )decodeNewSymbols (_gegd ,_cdeb uint32 ,_bbbb *_df .Bitmap ,_bbab ,_fbf int32 )error {if _cgbca ._faafb ==nil {_cgbca ._faafb =_afcb (_cgbca ._fddg ,nil );if _cgbca ._dbcg ==nil {var _efgda error ;_cgbca ._dbcg ,_efgda =_fd .New (_cgbca ._fddg );if _efgda !=nil {return _efgda ;};};if _cgbca ._efae ==nil {_cgbca ._efae =_fd .NewStats (65536,1);};};_cgbca ._faafb .setParameters (_cgbca ._efae ,_cgbca ._dbcg ,_cgbca .SdrTemplate ,_gegd ,_cdeb ,_bbbb ,_bbab ,_fbf ,false ,_cgbca .SdrATX ,_cgbca .SdrATY );return _cgbca .addSymbol (_cgbca ._faafb );};func NewGenericRegion (r _ca .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_afec :r };};func (_fdcb *PageInformationSegment )String ()string {_adda :=&_bc .Builder {};_adda .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_adda .WriteString (_cf .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_fdcb .PageBMHeight ));_adda .WriteString (_cf .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_fdcb .PageBMWidth ));_adda .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_fdcb .ResolutionX ));_adda .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_fdcb .ResolutionY ));_adda .WriteString (_cf .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_fdcb ._fcd ));_adda .WriteString (_cf .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_fdcb ._efed ));_adda .WriteString (_cf .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_fdcb .IsLossless ));_adda .WriteString (_cf .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_fdcb ._becd ));_adda .WriteString (_cf .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_fdcb ._ecbg ));_adda .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_fdcb .IsStripe ));_adda .WriteString (_cf .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_fdcb .MaxStripeSize ));return _adda .String ();};func (_daaa *PageInformationSegment )readIsStriped ()error {_eged ,_bffdd :=_daaa ._fga .ReadBit ();if _bffdd !=nil {return _bffdd ;};if _eged ==1{_daaa .IsStripe =true ;};return nil ;};func (_dfbd *TableSegment )parseHeader ()error {var (_gebe int ;_aced uint64 ;_cfcdb error ;);_gebe ,_cfcdb =_dfbd ._ebf .ReadBit ();if _cfcdb !=nil {return _cfcdb ;};if _gebe ==1{return _cf .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_gebe );};if _aced ,_cfcdb =_dfbd ._ebf .ReadBits (3);_cfcdb !=nil {return _cfcdb ;};_dfbd ._cddc =(int32 (_aced )+1)&0xf;if _aced ,_cfcdb =_dfbd ._ebf .ReadBits (3);_cfcdb !=nil {return _cfcdb ;};_dfbd ._debg =(int32 (_aced )+1)&0xf;if _aced ,_cfcdb =_dfbd ._ebf .ReadBits (32);_cfcdb !=nil {return _cfcdb ;};_dfbd ._afdba =int32 (_aced &_b .MaxInt32 );if _aced ,_cfcdb =_dfbd ._ebf .ReadBits (32);_cfcdb !=nil {return _cfcdb ;};_dfbd ._gdad =int32 (_aced &_b .MaxInt32 );return nil ;};func (_dbcbb *TextRegion )setContexts (_aagf *_fd .DecoderStats ,_egbf *_fd .DecoderStats ,_ddgdc *_fd .DecoderStats ,_gdgb *_fd .DecoderStats ,_dbcc *_fd .DecoderStats ,_gbdbb *_fd .DecoderStats ,_cgcd *_fd .DecoderStats ,_abea *_fd .DecoderStats ,_beac *_fd .DecoderStats ,_bfg *_fd .DecoderStats ){_dbcbb ._dbde =_egbf ;_dbcbb ._dfeb =_ddgdc ;_dbcbb ._ccba =_gdgb ;_dbcbb ._fffdf =_dbcc ;_dbcbb ._ffdc =_cgcd ;_dbcbb ._gege =_abea ;_dbcbb ._ebff =_gbdbb ;_dbcbb ._agaf =_beac ;_dbcbb ._ccgbd =_bfg ;_dbcbb ._eegac =_aagf ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_cfgc *GenericRegion )overrideAtTemplate1 (_dbdb ,_gged ,_eegf ,_abcg ,_feef int )int {_dbdb &=0x1FF7;if _cfgc .GBAtY [0]==0&&_cfgc .GBAtX [0]>=-int8 (_feef ){_dbdb |=(_abcg >>uint (7-(int8 (_feef )+_cfgc .GBAtX [0]))&0x1)<<3;}else {_dbdb |=int (_cfgc .getPixel (_gged +int (_cfgc .GBAtX [0]),_eegf +int (_cfgc .GBAtY [0])))<<3;};return _dbdb ;};func (_dedcce *SymbolDictionary )readRefinementAtPixels (_gbbg int )error {_dedcce .SdrATX =make ([]int8 ,_gbbg );_dedcce .SdrATY =make ([]int8 ,_gbbg );var (_babbb byte ;_feb error ;);for _cfac :=0;_cfac < _gbbg ;_cfac ++{_babbb ,_feb =_dedcce ._fddg .ReadByte ();if _feb !=nil {return _feb ;};_dedcce .SdrATX [_cfac ]=int8 (_babbb );_babbb ,_feb =_dedcce ._fddg .ReadByte ();if _feb !=nil {return _feb ;};_dedcce .SdrATY [_cfac ]=int8 (_babbb );};return nil ;};func (_aebfa *PageInformationSegment )readWidthAndHeight ()error {_fadd ,_ebbe :=_aebfa ._fga .ReadBits (32);if _ebbe !=nil {return _ebbe ;};_aebfa .PageBMWidth =int (_fadd &_b .MaxInt32 );_fadd ,_ebbe =_aebfa ._fga .ReadBits (32);if _ebbe !=nil {return _ebbe ;};_aebfa .PageBMHeight =int (_fadd &_b .MaxInt32 );return nil ;};func (_dcdg *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_fgcc int ;_dcbf int32 ;_bbf error ;_baae =int32 (_dcdg ._dcga +_dcdg .NumberOfNewSymbols );_fgfff =make ([]int ,_baae ););for _ccge :=int32 (0);_ccge < _baae ;_ccge +=_dcbf {if _dcdg .IsHuffmanEncoded {_ggad ,_dcfbg :=_bf .GetStandardTable (1);if _dcfbg !=nil {return nil ,_dcfbg ;};_cbec ,_dcfbg :=_ggad .Decode (_dcdg ._fddg );if _dcfbg !=nil {return nil ,_dcfbg ;};_dcbf =int32 (_cbec );}else {_dcbf ,_bbf =_dcdg ._dbcg .DecodeInt (_dcdg ._bbaa );if _bbf !=nil {return nil ,_bbf ;};};if _dcbf !=0{for _ddca :=_ccge ;_ddca < _ccge +_dcbf ;_ddca ++{_fgfff [_ddca ]=_fgcc ;};};if _fgcc ==0{_fgcc =1;}else {_fgcc =0;};};return _fgfff ,nil ;};func (_gg *EndOfStripe )Init (h *Header ,r _ca .StreamReader )error {_gg ._ce =r ;return _gg .parseHeader (h ,r );};type EncodeInitializer interface{InitEncode ();};func (_efgd *PatternDictionary )readPatternWidthAndHeight ()error {_accc ,_fffd :=_efgd ._faad .ReadByte ();if _fffd !=nil {return _fffd ;};_efgd .HdpWidth =_accc ;_accc ,_fffd =_efgd ._faad .ReadByte ();if _fffd !=nil {return _fffd ;};_efgd .HdpHeight =_accc ;return nil ;};var _ SegmentEncoder =&RegionSegment {};func (_eaee *HalftoneRegion )computeY (_geed ,_fdeg int )int {return _eaee .shiftAndFill (int (_eaee .HGridY )+_geed *int (_eaee .HRegionX )-_fdeg *int (_eaee .HRegionY ));};func (_baagg *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _baagg .SdHuffDecodeHeightSelection {case 0:_bbca ,_dbcga :=_bf .GetStandardTable (4);if _dbcga !=nil {return 0,_dbcga ;};return _bbca .Decode (_baagg ._fddg );case 1:_ecfab ,_daac :=_bf .GetStandardTable (5);if _daac !=nil {return 0,_daac ;};return _ecfab .Decode (_baagg ._fddg );case 3:if _baagg ._dbdd ==nil {_abef ,_bbegd :=_bf .GetStandardTable (0);if _bbegd !=nil {return 0,_bbegd ;};_baagg ._dbdd =_abef ;};return _baagg ._dbdd .Decode (_baagg ._fddg );};return 0,nil ;};func (_abg *Header )readSegmentNumber (_dfdc _ca .StreamReader )error {const _bdfb ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_dacf :=make ([]byte ,4);_ ,_cddgb :=_dfdc .Read (_dacf );if _cddgb !=nil {return _de .Wrap (_cddgb ,_bdfb ,"");};_abg .SegmentNumber =_g .BigEndian .Uint32 (_dacf );return nil ;};func (_bgbe *SymbolDictionary )addSymbol (_dagde Regioner )error {_afef ,_fcbde :=_dagde .GetRegionBitmap ();if _fcbde !=nil {return _fcbde ;};_bgbe ._edfb [_bgbe ._bddf ]=_afef ;_bgbe ._cffaa =append (_bgbe ._cffaa ,_afef );_gd .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_afef );return nil ;};func (_ggfe *PageInformationSegment )checkInput ()error {if _ggfe .PageBMHeight ==_b .MaxInt32 {if !_ggfe .IsStripe {_gd .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");};};return nil ;};func (_baag *GenericRegion )overrideAtTemplate0a (_bfdf ,_cdad ,_bbba ,_afed ,_fbgb ,_gdcg int )int {if _baag .GBAtOverride [0]{_bfdf &=0xFFEF;if _baag .GBAtY [0]==0&&_baag .GBAtX [0]>=-int8 (_fbgb ){_bfdf |=(_afed >>uint (int8 (_gdcg )-_baag .GBAtX [0]&0x1))<<4;}else {_bfdf |=int (_baag .getPixel (_cdad +int (_baag .GBAtX [0]),_bbba +int (_baag .GBAtY [0])))<<4;};};if _baag .GBAtOverride [1]{_bfdf &=0xFBFF;if _baag .GBAtY [1]==0&&_baag .GBAtX [1]>=-int8 (_fbgb ){_bfdf |=(_afed >>uint (int8 (_gdcg )-_baag .GBAtX [1]&0x1))<<10;}else {_bfdf |=int (_baag .getPixel (_cdad +int (_baag .GBAtX [1]),_bbba +int (_baag .GBAtY [1])))<<10;};};if _baag .GBAtOverride [2]{_bfdf &=0xF7FF;if _baag .GBAtY [2]==0&&_baag .GBAtX [2]>=-int8 (_fbgb ){_bfdf |=(_afed >>uint (int8 (_gdcg )-_baag .GBAtX [2]&0x1))<<11;}else {_bfdf |=int (_baag .getPixel (_cdad +int (_baag .GBAtX [2]),_bbba +int (_baag .GBAtY [2])))<<11;};};if _baag .GBAtOverride [3]{_bfdf &=0x7FFF;if _baag .GBAtY [3]==0&&_baag .GBAtX [3]>=-int8 (_fbgb ){_bfdf |=(_afed >>uint (int8 (_gdcg )-_baag .GBAtX [3]&0x1))<<15;}else {_bfdf |=int (_baag .getPixel (_cdad +int (_baag .GBAtX [3]),_bbba +int (_baag .GBAtY [3])))<<15;};};return _bfdf ;};func (_ceff *TextRegion )blit (_fgab *_df .Bitmap ,_cddfe int64 )error {if _ceff .IsTransposed ==0&&(_ceff .ReferenceCorner ==2||_ceff .ReferenceCorner ==3){_ceff ._acd +=int64 (_fgab .Width -1);}else if _ceff .IsTransposed ==1&&(_ceff .ReferenceCorner ==0||_ceff .ReferenceCorner ==2){_ceff ._acd +=int64 (_fgab .Height -1);};_cega :=_ceff ._acd ;if _ceff .IsTransposed ==1{_cega ,_cddfe =_cddfe ,_cega ;};switch _ceff .ReferenceCorner {case 0:_cddfe -=int64 (_fgab .Height -1);case 2:_cddfe -=int64 (_fgab .Height -1);_cega -=int64 (_fgab .Width -1);case 3:_cega -=int64 (_fgab .Width -1);};_dadf :=_df .Blit (_fgab ,_ceff .RegionBitmap ,int (_cega ),int (_cddfe ),_ceff .CombinationOperator );if _dadf !=nil {return _dadf ;};if _ceff .IsTransposed ==0&&(_ceff .ReferenceCorner ==0||_ceff .ReferenceCorner ==1){_ceff ._acd +=int64 (_fgab .Width -1);};if _ceff .IsTransposed ==1&&(_ceff .ReferenceCorner ==1||_ceff .ReferenceCorner ==3){_ceff ._acd +=int64 (_fgab .Height -1);};return nil ;};func (_dfg *PatternDictionary )computeSegmentDataStructure ()error {_dfg .DataOffset =_dfg ._faad .StreamPosition ();_dfg .DataHeaderLength =_dfg .DataOffset -_dfg .DataHeaderOffset ;_dfg .DataLength =int64 (_dfg ._faad .Length ())-_dfg .DataHeaderLength ;return nil ;};type GenericRefinementRegion struct{_gdg templater ;_cc templater ;_ab _ca .StreamReader ;_cgb *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_df .Bitmap ;ReferenceBitmap *_df .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_dc *_fd .Decoder ;_cbg *_fd .DecoderStats ;_dg bool ;_cec []bool ;};func (_bccg *PageInformationSegment )Init (h *Header ,r _ca .StreamReader )(_edbb error ){_bccg ._fga =r ;if _edbb =_bccg .parseHeader ();_edbb !=nil {return _de .Wrap (_edbb ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};func (_gaec *SymbolDictionary )readNumberOfExportedSymbols ()error {_cbeb ,_dge :=_gaec ._fddg .ReadBits (32);if _dge !=nil {return _dge ;};_gaec .NumberOfExportedSymbols =uint32 (_cbeb &_b .MaxUint32 );return nil ;};func (_bced *PageInformationSegment )readIsLossless ()error {_abebb ,_ffd :=_bced ._fga .ReadBit ();if _ffd !=nil {return _ffd ;};if _abebb ==1{_bced .IsLossless =true ;};return nil ;};func (_bgeg *Header )referenceSize ()uint {switch {case _bgeg .SegmentNumber <=255:return 1;case _bgeg .SegmentNumber <=65535:return 2;default:return 4;};};func (_bace *HalftoneRegion )grayScaleDecoding (_dgfe int )([][]int ,error ){var (_ecg []int8 ;_gaed []int8 ;);if !_bace .IsMMREncoded {_ecg =make ([]int8 ,4);_gaed =make ([]int8 ,4);if _bace .HTemplate <=1{_ecg [0]=3;}else if _bace .HTemplate >=2{_ecg [0]=2;};_gaed [0]=-1;_ecg [1]=-3;_gaed [1]=-1;_ecg [2]=2;_gaed [2]=-2;_ecg [3]=-2;_gaed [3]=-2;};_ffcf :=make ([]*_df .Bitmap ,_dgfe );_dada :=NewGenericRegion (_bace ._bdae );_dada .setParametersMMR (_bace .IsMMREncoded ,_bace .DataOffset ,_bace .DataLength ,_bace .HGridHeight ,_bace .HGridWidth ,_bace .HTemplate ,false ,_bace .HSkipEnabled ,_ecg ,_gaed );_gdga :=_dgfe -1;var _eebb error ;_ffcf [_gdga ],_eebb =_dada .GetRegionBitmap ();if _eebb !=nil {return nil ,_eebb ;};for _gdga > 0{_gdga --;_dada .Bitmap =nil ;_ffcf [_gdga ],_eebb =_dada .GetRegionBitmap ();if _eebb !=nil {return nil ,_eebb ;};if _eebb =_bace .combineGrayscalePlanes (_ffcf ,_gdga );_eebb !=nil {return nil ,_eebb ;};};return _bace .computeGrayScalePlanes (_ffcf ,_dgfe );};func (_gacd *PageInformationSegment )CombinationOperator ()_df .CombinationOperator {return _gacd ._fcd };var (_bfcc Segmenter ;_gafc =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _bfcc },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _bfcc },TProfiles :func ()Segmenter {return _bfcc },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _bfcc },TBitmap :func ()Segmenter {return _bfcc }};);func NewRegionSegment (r _ca .StreamReader )*RegionSegment {return &RegionSegment {_bcda :r }};type HalftoneRegion struct{_bdae _ca .StreamReader ;_fgb *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _df .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_df .Bitmap ;Patterns []*_df .Bitmap ;};func (_fbag *RegionSegment )Encode (w _ca .BinaryWriter )(_gefcc int ,_eagc error ){const _gcdg ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_ddgf :=make ([]byte ,4);_g .BigEndian .PutUint32 (_ddgf ,_fbag .BitmapWidth );_gefcc ,_eagc =w .Write (_ddgf );if _eagc !=nil {return 0,_de .Wrap (_eagc ,_gcdg ,"\u0057\u0069\u0064t\u0068");};_g .BigEndian .PutUint32 (_ddgf ,_fbag .BitmapHeight );var _edbba int ;_edbba ,_eagc =w .Write (_ddgf );if _eagc !=nil {return 0,_de .Wrap (_eagc ,_gcdg ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_gefcc +=_edbba ;_g .BigEndian .PutUint32 (_ddgf ,_fbag .XLocation );_edbba ,_eagc =w .Write (_ddgf );if _eagc !=nil {return 0,_de .Wrap (_eagc ,_gcdg ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_gefcc +=_edbba ;_g .BigEndian .PutUint32 (_ddgf ,_fbag .YLocation );_edbba ,_eagc =w .Write (_ddgf );if _eagc !=nil {return 0,_de .Wrap (_eagc ,_gcdg ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_gefcc +=_edbba ;if _eagc =w .WriteByte (byte (_fbag .CombinaionOperator )&0x07);_eagc !=nil {return 0,_de .Wrap (_eagc ,_gcdg ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_gefcc ++;return _gefcc ,nil ;};type TextRegion struct{_gcff _ca .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _df .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_acd int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_df .Bitmap ;Symbols []*_df .Bitmap ;_badc *_fd .Decoder ;_gaef *GenericRefinementRegion ;_dbde *_fd .DecoderStats ;_dfeb *_fd .DecoderStats ;_ccba *_fd .DecoderStats ;_fffdf *_fd .DecoderStats ;_bfea *_fd .DecoderStats ;_ffdc *_fd .DecoderStats ;_gege *_fd .DecoderStats ;_ebff *_fd .DecoderStats ;_agaf *_fd .DecoderStats ;_ccgbd *_fd .DecoderStats ;_eegac *_fd .DecoderStats ;_cbce int8 ;_cedb *_bf .FixedSizeTable ;Header *Header ;_bbee _bf .Tabler ;_cddcb _bf .Tabler ;_acec _bf .Tabler ;_gcfg _bf .Tabler ;_ceada _bf .Tabler ;_egde _bf .Tabler ;_babba _bf .Tabler ;_faddb _bf .Tabler ;_ebge ,_adcee map[int ]int ;_cgee []int ;_ebcd *_df .Points ;_cfcg *_df .Bitmaps ;_bgbcb *_cfe .IntSlice ;_efdf ,_gdeb int ;_bbfd *_df .Boxes ;};func (_fcga *TextRegion )readHuffmanFlags ()error {var (_eccba int ;_feaf uint64 ;_gfgcb error ;);_ ,_gfgcb =_fcga ._gcff .ReadBit ();if _gfgcb !=nil {return _gfgcb ;};_eccba ,_gfgcb =_fcga ._gcff .ReadBit ();if _gfgcb !=nil {return _gfgcb ;};_fcga .SbHuffRSize =int8 (_eccba );_feaf ,_gfgcb =_fcga ._gcff .ReadBits (2);if _gfgcb !=nil {return _gfgcb ;};_fcga .SbHuffRDY =int8 (_feaf )&0xf;_feaf ,_gfgcb =_fcga ._gcff .ReadBits (2);if _gfgcb !=nil {return _gfgcb ;};_fcga .SbHuffRDX =int8 (_feaf )&0xf;_feaf ,_gfgcb =_fcga ._gcff .ReadBits (2);if _gfgcb !=nil {return _gfgcb ;};_fcga .SbHuffRDHeight =int8 (_feaf )&0xf;_feaf ,_gfgcb =_fcga ._gcff .ReadBits (2);if _gfgcb !=nil {return _gfgcb ;};_fcga .SbHuffRDWidth =int8 (_feaf )&0xf;_feaf ,_gfgcb =_fcga ._gcff .ReadBits (2);if _gfgcb !=nil {return _gfgcb ;};_fcga .SbHuffDT =int8 (_feaf )&0xf;_feaf ,_gfgcb =_fcga ._gcff .ReadBits (2);if _gfgcb !=nil {return _gfgcb ;};_fcga .SbHuffDS =int8 (_feaf )&0xf;_feaf ,_gfgcb =_fcga ._gcff .ReadBits (2);if _gfgcb !=nil {return _gfgcb ;};_fcga .SbHuffFS =int8 (_feaf )&0xf;return nil ;};func (_ebc *GenericRegion )decodeTemplate1 (_ddf ,_agfd ,_cdgc int ,_ced ,_gcda int )(_afda error ){const _agcb ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_bgg ,_fca int ;_abcc ,_fdbf int ;_bfe byte ;_faa ,_eccb int ;);if _ddf >=1{_bfe ,_afda =_ebc .Bitmap .GetByte (_gcda );if _afda !=nil {return _de .Wrap (_afda ,_agcb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_abcc =int (_bfe );};if _ddf >=2{_bfe ,_afda =_ebc .Bitmap .GetByte (_gcda -_ebc .Bitmap .RowStride );if _afda !=nil {return _de .Wrap (_afda ,_agcb ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_fdbf =int (_bfe )<<5;};_bgg =((_abcc >>1)&0x1f8)|((_fdbf >>1)&0x1e00);for _fcef :=0;_fcef < _cdgc ;_fcef =_faa {var (_cga byte ;_dgf int ;);_faa =_fcef +8;if _aaa :=_agfd -_fcef ;_aaa > 8{_dgf =8;}else {_dgf =_aaa ;};if _ddf > 0{_abcc <<=8;if _faa < _agfd {_bfe ,_afda =_ebc .Bitmap .GetByte (_gcda +1);if _afda !=nil {return _de .Wrap (_afda ,_agcb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_abcc |=int (_bfe );};};if _ddf > 1{_fdbf <<=8;if _faa < _agfd {_bfe ,_afda =_ebc .Bitmap .GetByte (_gcda -_ebc .Bitmap .RowStride +1);if _afda !=nil {return _de .Wrap (_afda ,_agcb ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_fdbf |=int (_bfe )<<5;};};for _ddg :=0;_ddg < _dgf ;_ddg ++{if _ebc ._gcdd {_fca =_ebc .overrideAtTemplate1 (_bgg ,_fcef +_ddg ,_ddf ,int (_cga ),_ddg );_ebc ._baa .SetIndex (int32 (_fca ));}else {_ebc ._baa .SetIndex (int32 (_bgg ));};_eccb ,_afda =_ebc ._agf .DecodeBit (_ebc ._baa );if _afda !=nil {return _de .Wrap (_afda ,_agcb ,"");};_cga |=byte (_eccb )<<uint (7-_ddg );_ccf :=uint (8-_ddg );_bgg =((_bgg &0xefb)<<1)|_eccb |((_abcc >>_ccf )&0x8)|((_fdbf >>_ccf )&0x200);};if _ggfa :=_ebc .Bitmap .SetByte (_ced ,_cga );_ggfa !=nil {return _de .Wrap (_ggfa ,_agcb ,"");};_ced ++;_gcda ++;};return nil ;};type SegmentEncoder interface{Encode (_bggd _ca .BinaryWriter )(_dfag int ,_bbaf error );};func (_fdda *SymbolDictionary )setInSyms ()error {if _fdda .Header .RTSegments !=nil {return _fdda .retrieveImportSymbols ();};_fdda ._bfef =make ([]*_df .Bitmap ,0);return nil ;};func (_dfd *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _dfd .RegionInfo };func (_aec *PatternDictionary )Init (h *Header ,r _ca .StreamReader )error {_aec ._faad =r ;return _aec .parseHeader ();};func (_agb *SymbolDictionary )setSymbolsArray ()error {if _agb ._bfef ==nil {if _cac :=_agb .retrieveImportSymbols ();_cac !=nil {return _cac ;};};if _agb ._cffaa ==nil {_agb ._cffaa =append (_agb ._cffaa ,_agb ._bfef ...);};return nil ;};func (_egg *GenericRegion )setParameters (_aaaa bool ,_dcaa ,_ccc int64 ,_aebd ,_efd uint32 ){_egg .IsMMREncoded =_aaaa ;_egg .DataOffset =_dcaa ;_egg .DataLength =_ccc ;_egg .RegionSegment .BitmapHeight =_aebd ;_egg .RegionSegment .BitmapWidth =_efd ;_egg ._abd =nil ;_egg .Bitmap =nil ;};func (_ebgb *TextRegion )readUseRefinement ()error {if !_ebgb .UseRefinement ||_ebgb .SbrTemplate !=0{return nil ;};var (_acbg byte ;_acg error ;);_ebgb .SbrATX =make ([]int8 ,2);_ebgb .SbrATY =make ([]int8 ,2);_acbg ,_acg =_ebgb ._gcff .ReadByte ();if _acg !=nil {return _acg ;};_ebgb .SbrATX [0]=int8 (_acbg );_acbg ,_acg =_ebgb ._gcff .ReadByte ();if _acg !=nil {return _acg ;};_ebgb .SbrATY [0]=int8 (_acbg );_acbg ,_acg =_ebgb ._gcff .ReadByte ();if _acg !=nil {return _acg ;};_ebgb .SbrATX [1]=int8 (_acbg );_acbg ,_acg =_ebgb ._gcff .ReadByte ();if _acg !=nil {return _acg ;};_ebgb .SbrATY [1]=int8 (_acbg );return nil ;};func (_dbg *Header )writeSegmentPageAssociation (_fgde _ca .BinaryWriter )(_cfec int ,_ccfe error ){const _facc ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";if _dbg .pageSize ()!=4{if _ccfe =_fgde .WriteByte (byte (_dbg .PageAssociation ));_ccfe !=nil {return 0,_de .Wrap (_ccfe ,_facc ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_add :=make ([]byte ,4);_g .BigEndian .PutUint32 (_add ,uint32 (_dbg .PageAssociation ));if _cfec ,_ccfe =_fgde .Write (_add );_ccfe !=nil {return 0,_de .Wrap (_ccfe ,_facc ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _cfec ,nil ;};func (_gfb *Header )writeReferredToSegments (_aeed _ca .BinaryWriter )(_ebbb int ,_gaba error ){const _dbeac ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";var (_ecae uint16 ;_defg uint32 ;);_geeg :=_gfb .referenceSize ();_gcdaf :=1;_bffd :=make ([]byte ,_geeg );for _ ,_gfg :=range _gfb .RTSNumbers {switch _geeg {case 4:_defg =uint32 (_gfg );_g .BigEndian .PutUint32 (_bffd ,_defg );_gcdaf ,_gaba =_aeed .Write (_bffd );if _gaba !=nil {return 0,_de .Wrap (_gaba ,_dbeac ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_ecae =uint16 (_gfg );_g .BigEndian .PutUint16 (_bffd ,_ecae );_gcdaf ,_gaba =_aeed .Write (_bffd );if _gaba !=nil {return 0,_de .Wrap (_gaba ,_dbeac ,"\u0075\u0069\u006e\u0074\u0031\u0036");};default:if _gaba =_aeed .WriteByte (byte (_gfg ));_gaba !=nil {return 0,_de .Wrap (_gaba ,_dbeac ,"\u0075\u0069\u006et\u0038");};};_ebbb +=_gcdaf ;};return _ebbb ,nil ;};var _ templater =&template1 {};func (_eggb *SymbolDictionary )setRefinementAtPixels ()error {if !_eggb .UseRefinementAggregation ||_eggb .SdrTemplate !=0{return nil ;};if _adge :=_eggb .readRefinementAtPixels (2);_adge !=nil {return _adge ;};return nil ;};func (_dca *GenericRegion )readGBAtPixels (_ffce int )error {const _faaf ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_dca .GBAtX =make ([]int8 ,_ffce );_dca .GBAtY =make ([]int8 ,_ffce );for _abbc :=0;_abbc < _ffce ;_abbc ++{_eega ,_gag :=_dca ._afec .ReadByte ();if _gag !=nil {return _de .Wrapf (_gag ,_faaf ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_abbc );};_dca .GBAtX [_abbc ]=int8 (_eega );_eega ,_gag =_dca ._afec .ReadByte ();if _gag !=nil {return _de .Wrapf (_gag ,_faaf ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_abbc );};_dca .GBAtY [_abbc ]=int8 (_eega );};return nil ;};func (_gce *GenericRegion )decodeSLTP ()(int ,error ){switch _gce .GBTemplate {case 0:_gce ._baa .SetIndex (0x9B25);case 1:_gce ._baa .SetIndex (0x795);case 2:_gce ._baa .SetIndex (0xE5);case 3:_gce ._baa .SetIndex (0x195);};return _gce ._agf .DecodeBit (_gce ._baa );};func (_caabe *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _caabe .IsHuffmanEncoded {return _caabe .decodeHeightClassDeltaHeightWithHuffman ();};_dfad ,_dcaf :=_caabe ._dbcg .DecodeInt (_caabe ._agceg );if _dcaf !=nil {return 0,_dcaf ;};return int64 (_dfad ),nil ;};func (_feeg *TextRegion )decodeRI ()(int64 ,error ){if !_feeg .UseRefinement {return 0,nil ;};if _feeg .IsHuffmanEncoded {_acccg ,_afgff :=_feeg ._gcff .ReadBit ();return int64 (_acccg ),_afgff ;};_bfbd ,_gcada :=_feeg ._badc .DecodeInt (_feeg ._bfea );return int64 (_bfbd ),_gcada ;};func (_ggbd *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _ggbd ._agebf ==nil {var (_ccgd int ;_bbdcb error ;);if _ggbd .SdHuffDecodeHeightSelection ==3{_ccgd ++;};if _ggbd .SdHuffDecodeWidthSelection ==3{_ccgd ++;};_ggbd ._agebf ,_bbdcb =_ggbd .getUserTable (_ccgd );if _bbdcb !=nil {return 0,_bbdcb ;};};return _ggbd ._agebf .Decode (_ggbd ._fddg );};type PatternDictionary struct{_faad _ca .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_df .Bitmap ;GrayMax uint32 ;};func (_gfcec *RegionSegment )String ()string {_cfba :=&_bc .Builder {};_cfba .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_cfba .WriteString (_cf .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_gfcec .BitmapWidth ,_gfcec .BitmapHeight ));_cfba .WriteString (_cf .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_gfcec .XLocation ,_gfcec .YLocation ));_cfba .WriteString (_cf .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_gfcec .CombinaionOperator ));return _cfba .String ();};func (_debc *SymbolDictionary )readRegionFlags ()error {var (_cfecb uint64 ;_cecfa int ;);_ ,_agfc :=_debc ._fddg .ReadBits (3);if _agfc !=nil {return _agfc ;};_cecfa ,_agfc =_debc ._fddg .ReadBit ();if _agfc !=nil {return _agfc ;};_debc .SdrTemplate =int8 (_cecfa );_cfecb ,_agfc =_debc ._fddg .ReadBits (2);if _agfc !=nil {return _agfc ;};_debc .SdTemplate =int8 (_cfecb &0xf);_cecfa ,_agfc =_debc ._fddg .ReadBit ();if _agfc !=nil {return _agfc ;};if _cecfa ==1{_debc ._fbde =true ;};_cecfa ,_agfc =_debc ._fddg .ReadBit ();if _agfc !=nil {return _agfc ;};if _cecfa ==1{_debc ._caabc =true ;};_cecfa ,_agfc =_debc ._fddg .ReadBit ();if _agfc !=nil {return _agfc ;};if _cecfa ==1{_debc .SdHuffAggInstanceSelection =true ;};_cecfa ,_agfc =_debc ._fddg .ReadBit ();if _agfc !=nil {return _agfc ;};_debc .SdHuffBMSizeSelection =int8 (_cecfa );_cfecb ,_agfc =_debc ._fddg .ReadBits (2);if _agfc !=nil {return _agfc ;};_debc .SdHuffDecodeWidthSelection =int8 (_cfecb &0xf);_cfecb ,_agfc =_debc ._fddg .ReadBits (2);if _agfc !=nil {return _agfc ;};_debc .SdHuffDecodeHeightSelection =int8 (_cfecb &0xf);_cecfa ,_agfc =_debc ._fddg .ReadBit ();if _agfc !=nil {return _agfc ;};if _cecfa ==1{_debc .UseRefinementAggregation =true ;};_cecfa ,_agfc =_debc ._fddg .ReadBit ();if _agfc !=nil {return _agfc ;};if _cecfa ==1{_debc .IsHuffmanEncoded =true ;};return nil ;};func (_eefbg *TextRegion )GetRegionInfo ()*RegionSegment {return _eefbg .RegionInfo };type Regioner interface{GetRegionBitmap ()(*_df .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};type templater interface{form (_ffbe ,_ecc ,_eadf ,_ffc ,_ggfb int16 )int16 ;setIndex (_bba *_fd .DecoderStats );};func (_ecaf *SymbolDictionary )checkInput ()error {if _ecaf .SdHuffDecodeHeightSelection ==2{_gd .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_ecaf .SdHuffDecodeHeightSelection );};if _ecaf .SdHuffDecodeWidthSelection ==2{_gd .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_ecaf .SdHuffDecodeWidthSelection );};if _ecaf .IsHuffmanEncoded {if _ecaf .SdTemplate !=0{_gd .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_ecaf .SdTemplate );};if !_ecaf .UseRefinementAggregation {if !_ecaf .UseRefinementAggregation {if _ecaf ._fbde {_gd .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");_ecaf ._fbde =false ;};if _ecaf ._caabc {_gd .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");_ecaf ._caabc =false ;};};};}else {if _ecaf .SdHuffBMSizeSelection !=0{_gd .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_ecaf .SdHuffBMSizeSelection =0;};if _ecaf .SdHuffDecodeWidthSelection !=0{_gd .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");_ecaf .SdHuffDecodeWidthSelection =0;};if _ecaf .SdHuffDecodeHeightSelection !=0{_gd .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_ecaf .SdHuffDecodeHeightSelection =0;};};if !_ecaf .UseRefinementAggregation {if _ecaf .SdrTemplate !=0{_gd .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ecaf .SdrTemplate );_ecaf .SdrTemplate =0;};};if !_ecaf .IsHuffmanEncoded ||!_ecaf .UseRefinementAggregation {if _ecaf .SdHuffAggInstanceSelection {_gd .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_ecaf .SdHuffAggInstanceSelection );};};return nil ;};func (_fac *GenericRegion )computeSegmentDataStructure ()error {_fac .DataOffset =_fac ._afec .StreamPosition ();_fac .DataHeaderLength =_fac .DataOffset -_fac .DataHeaderOffset ;_fac .DataLength =int64 (_fac ._afec .Length ())-_fac .DataHeaderLength ;return nil ;};func (_cacf *TextRegion )decodeStripT ()(_gdfe int64 ,_dgggc error ){if _cacf .IsHuffmanEncoded {if _cacf .SbHuffDT ==3{if _cacf ._acec ==nil {var _daad int ;if _cacf .SbHuffFS ==3{_daad ++;};if _cacf .SbHuffDS ==3{_daad ++;};_cacf ._acec ,_dgggc =_cacf .getUserTable (_daad );if _dgggc !=nil {return 0,_dgggc ;};};_gdfe ,_dgggc =_cacf ._acec .Decode (_cacf ._gcff );if _dgggc !=nil {return 0,_dgggc ;};}else {var _gdbb _bf .Tabler ;_gdbb ,_dgggc =_bf .GetStandardTable (11+int (_cacf .SbHuffDT ));if _dgggc !=nil {return 0,_dgggc ;};_gdfe ,_dgggc =_gdbb .Decode (_cacf ._gcff );if _dgggc !=nil {return 0,_dgggc ;};};}else {var _bebe int32 ;_bebe ,_dgggc =_cacf ._badc .DecodeInt (_cacf ._dbde );if _dgggc !=nil {return 0,_dgggc ;};_gdfe =int64 (_bebe );};_gdfe *=int64 (-_cacf .SbStrips );return _gdfe ,nil ;};func (_ceag *TextRegion )decodeRdy ()(int64 ,error ){const _babg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _ceag .IsHuffmanEncoded {if _ceag .SbHuffRDY ==3{if _ceag ._babba ==nil {var (_aabb int ;_dcgga error ;);if _ceag .SbHuffFS ==3{_aabb ++;};if _ceag .SbHuffDS ==3{_aabb ++;};if _ceag .SbHuffDT ==3{_aabb ++;};if _ceag .SbHuffRDWidth ==3{_aabb ++;};if _ceag .SbHuffRDHeight ==3{_aabb ++;};if _ceag .SbHuffRDX ==3{_aabb ++;};_ceag ._babba ,_dcgga =_ceag .getUserTable (_aabb );if _dcgga !=nil {return 0,_de .Wrap (_dcgga ,_babg ,"");};};return _ceag ._babba .Decode (_ceag ._gcff );};_acfd ,_aefc :=_bf .GetStandardTable (14+int (_ceag .SbHuffRDY ));if _aefc !=nil {return 0,_aefc ;};return _acfd .Decode (_ceag ._gcff );};_beegd ,_afgdg :=_ceag ._badc .DecodeInt (_ceag ._ccgbd );if _afgdg !=nil {return 0,_de .Wrap (_afgdg ,_babg ,"");};return int64 (_beegd ),nil ;};func (_fgcf *Header )pageSize ()uint {if _fgcf .PageAssociation <=255{return 1;};return 4;};func (_aggff *SymbolDictionary )parseHeader ()(_geacg error ){_gd .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _geacg !=nil {_gd .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_geacg );}else {_gd .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _geacg =_aggff .readRegionFlags ();_geacg !=nil {return _geacg ;};if _geacg =_aggff .setAtPixels ();_geacg !=nil {return _geacg ;};if _geacg =_aggff .setRefinementAtPixels ();_geacg !=nil {return _geacg ;};if _geacg =_aggff .readNumberOfExportedSymbols ();_geacg !=nil {return _geacg ;};if _geacg =_aggff .readNumberOfNewSymbols ();_geacg !=nil {return _geacg ;};if _geacg =_aggff .setInSyms ();_geacg !=nil {return _geacg ;};if _aggff ._caabc {_eacf :=_aggff .Header .RTSegments ;for _fadb :=len (_eacf )-1;_fadb >=0;_fadb --{if _eacf [_fadb ].Type ==0{_bege ,_fge :=_eacf [_fadb ].SegmentData .(*SymbolDictionary );if !_fge {_geacg =_cf .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_eacf [_fadb ]);return _geacg ;};if _bege ._caabc {_aggff .setRetainedCodingContexts (_bege );};break ;};};};if _geacg =_aggff .checkInput ();_geacg !=nil {return _geacg ;};return nil ;};func (_feag *TextRegion )createRegionBitmap ()error {_feag .RegionBitmap =_df .New (int (_feag .RegionInfo .BitmapWidth ),int (_feag .RegionInfo .BitmapHeight ));if _feag .DefaultPixel !=0{_feag .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_gdaf *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_df .Points ,symbols *_df .Bitmaps ,classIDs *_cfe .IntSlice ,boxes *_df .Boxes ,width ,height ,symBits int ){_gdaf .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};_gdaf ._ebge =globalSymbolsMap ;_gdaf ._adcee =localSymbolsMap ;_gdaf ._cgee =comps ;_gdaf ._ebcd =inLL ;_gdaf ._cfcg =symbols ;_gdaf ._bgbcb =classIDs ;_gdaf ._bbfd =boxes ;_gdaf ._gdeb =symBits ;};func (_babc *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _babc ._efed };func (_cbcga *PatternDictionary )parseHeader ()error {_gd .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");defer func (){_gd .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_ ,_gfff :=_cbcga ._faad .ReadBits (5);if _gfff !=nil {return _gfff ;};if _gfff =_cbcga .readTemplate ();_gfff !=nil {return _gfff ;};if _gfff =_cbcga .readIsMMREncoded ();_gfff !=nil {return _gfff ;};if _gfff =_cbcga .readPatternWidthAndHeight ();_gfff !=nil {return _gfff ;};if _gfff =_cbcga .readGrayMax ();_gfff !=nil {return _gfff ;};if _gfff =_cbcga .computeSegmentDataStructure ();_gfff !=nil {return _gfff ;};return _cbcga .checkInput ();};func (_aff *Header )readDataStartOffset (_fege _ca .StreamReader ,_fcba OrganizationType ){if _fcba ==OSequential {_aff .SegmentDataStartOffset =uint64 (_fege .StreamPosition ());};};func (_agdff *TextRegion )encodeFlags (_gfee _ca .BinaryWriter )(_feegg int ,_ddbg error ){const _bddfd ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _ddbg =_gfee .WriteBit (int (_agdff .SbrTemplate ));_ddbg !=nil {return _feegg ,_de .Wrap (_ddbg ,_bddfd ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_ddbg =_gfee .WriteBits (uint64 (_agdff .SbDsOffset ),5);_ddbg !=nil {return _feegg ,_de .Wrap (_ddbg ,_bddfd ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _ddbg =_gfee .WriteBit (int (_agdff .DefaultPixel ));_ddbg !=nil {return _feegg ,_de .Wrap (_ddbg ,_bddfd ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_ddbg =_gfee .WriteBits (uint64 (_agdff .CombinationOperator ),2);_ddbg !=nil {return _feegg ,_de .Wrap (_ddbg ,_bddfd ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _ddbg =_gfee .WriteBit (int (_agdff .IsTransposed ));_ddbg !=nil {return _feegg ,_de .Wrap (_ddbg ,_bddfd ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_ddbg =_gfee .WriteBits (uint64 (_agdff .ReferenceCorner ),2);_ddbg !=nil {return _feegg ,_de .Wrap (_ddbg ,_bddfd ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_ddbg =_gfee .WriteBits (uint64 (_agdff .LogSBStrips ),2);_ddbg !=nil {return _feegg ,_de .Wrap (_ddbg ,_bddfd ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _dfdea int ;if _agdff .UseRefinement {_dfdea =1;};if _ddbg =_gfee .WriteBit (_dfdea );_ddbg !=nil {return _feegg ,_de .Wrap (_ddbg ,_bddfd ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_dfdea =0;if _agdff .IsHuffmanEncoded {_dfdea =1;};if _ddbg =_gfee .WriteBit (_dfdea );_ddbg !=nil {return _feegg ,_de .Wrap (_ddbg ,_bddfd ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_feegg =2;return _feegg ,nil ;};type OrganizationType uint8 ;func (_aaaag *SymbolDictionary )setExportedSymbols (_eeaa []int ){for _cefd :=uint32 (0);_cefd < _aaaag ._dcga +_aaaag .NumberOfNewSymbols ;_cefd ++{if _eeaa [_cefd ]==1{var _begc *_df .Bitmap ;if _cefd < _aaaag ._dcga {_begc =_aaaag ._bfef [_cefd ];}else {_begc =_aaaag ._edfb [_cefd -_aaaag ._dcga ];};_gd .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_begc );_aaaag ._dcf =append (_aaaag ._dcf ,_begc );};};};func (_bfc *GenericRefinementRegion )decodeTypicalPredictedLine (_ea ,_ed ,_dga ,_cda ,_gcb ,_eae int )error {_cdg :=_ea -int (_bfc .ReferenceDY );_fcc :=_bfc .ReferenceBitmap .GetByteIndex (0,_cdg );_bcc :=_bfc .RegionBitmap .GetByteIndex (0,_ea );var _bga error ;switch _bfc .TemplateID {case 0:_bga =_bfc .decodeTypicalPredictedLineTemplate0 (_ea ,_ed ,_dga ,_cda ,_gcb ,_eae ,_bcc ,_cdg ,_fcc );case 1:_bga =_bfc .decodeTypicalPredictedLineTemplate1 (_ea ,_ed ,_dga ,_cda ,_gcb ,_eae ,_bcc ,_cdg ,_fcc );};return _bga ;};func (_eece *TextRegion )encodeSymbols (_cce _ca .BinaryWriter )(_bdbe int ,_agebb error ){const _fecdc ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";_dgbfd :=make ([]byte ,4);_g .BigEndian .PutUint32 (_dgbfd ,_eece .NumberOfSymbols );if _bdbe ,_agebb =_cce .Write (_dgbfd );_agebb !=nil {return _bdbe ,_de .Wrap (_agebb ,_fecdc ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");};_fagg ,_agebb :=_df .NewClassedPoints (_eece ._ebcd ,_eece ._cgee );if _agebb !=nil {return 0,_de .Wrap (_agebb ,_fecdc ,"");};var _afefe ,_bcdf int ;_bdfe :=_fb .New ();_bdfe .Init ();if _agebb =_bdfe .EncodeInteger (_fb .IADT ,0);_agebb !=nil {return _bdbe ,_de .Wrap (_agebb ,_fecdc ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");};_fda ,_agebb :=_fagg .GroupByY ();if _agebb !=nil {return 0,_de .Wrap (_agebb ,_fecdc ,"");};for _ ,_eeaf :=range _fda {_bcgc :=int (_eeaf .YAtIndex (0));_ffbfe :=_bcgc -_afefe ;if _agebb =_bdfe .EncodeInteger (_fb .IADT ,_ffbfe );_agebb !=nil {return _bdbe ,_de .Wrap (_agebb ,_fecdc ,"");};var _fbbg int ;for _bgcg ,_gfca :=range _eeaf .IntSlice {switch _bgcg {case 0:_cegd :=int (_eeaf .XAtIndex (_bgcg ))-_bcdf ;if _agebb =_bdfe .EncodeInteger (_fb .IAFS ,_cegd );_agebb !=nil {return _bdbe ,_de .Wrap (_agebb ,_fecdc ,"");};_bcdf +=_cegd ;_fbbg =_bcdf ;default:_facad :=int (_eeaf .XAtIndex (_bgcg ))-_fbbg ;if _agebb =_bdfe .EncodeInteger (_fb .IADS ,_facad );_agebb !=nil {return _bdbe ,_de .Wrap (_agebb ,_fecdc ,"");};_fbbg +=_facad ;};_fbdc ,_acdd :=_eece ._bgbcb .Get (_gfca );if _acdd !=nil {return _bdbe ,_de .Wrap (_acdd ,_fecdc ,"");};_egaf ,_eaaca :=_eece ._ebge [_fbdc ];if !_eaaca {_egaf ,_eaaca =_eece ._adcee [_fbdc ];if !_eaaca {return _bdbe ,_de .Errorf (_fecdc ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_fbdc );};};if _acdd =_bdfe .EncodeIAID (_eece ._gdeb ,_egaf );_acdd !=nil {return _bdbe ,_de .Wrap (_acdd ,_fecdc ,"");};};if _agebb =_bdfe .EncodeOOB (_fb .IADS );_agebb !=nil {return _bdbe ,_de .Wrap (_agebb ,_fecdc ,"");};};_bdfe .Final ();_efac ,_agebb :=_bdfe .WriteTo (_cce );if _agebb !=nil {return _bdbe ,_de .Wrap (_agebb ,_fecdc ,"");};_bdbe +=int (_efac );return _bdbe ,nil ;};type Type int ;func (_ffgca *SymbolDictionary )decodeRefinedSymbol (_ecaa ,_ddgg uint32 )error {var (_efaa int ;_ebee ,_dfega int32 ;);if _ffgca .IsHuffmanEncoded {_caec ,_gddg :=_ffgca ._fddg .ReadBits (byte (_ffgca ._afdd ));if _gddg !=nil {return _gddg ;};_efaa =int (_caec );_fcaf ,_gddg :=_bf .GetStandardTable (15);if _gddg !=nil {return _gddg ;};_fgge ,_gddg :=_fcaf .Decode (_ffgca ._fddg );if _gddg !=nil {return _gddg ;};_ebee =int32 (_fgge );_fgge ,_gddg =_fcaf .Decode (_ffgca ._fddg );if _gddg !=nil {return _gddg ;};_dfega =int32 (_fgge );_fcaf ,_gddg =_bf .GetStandardTable (1);if _gddg !=nil {return _gddg ;};if _ ,_gddg =_fcaf .Decode (_ffgca ._fddg );_gddg !=nil {return _gddg ;};_ffgca ._fddg .Align ();}else {_ggcb ,_bbgd :=_ffgca ._dbcg .DecodeIAID (uint64 (_ffgca ._afdd ),_ffgca ._ace );if _bbgd !=nil {return _bbgd ;};_efaa =int (_ggcb );_ebee ,_bbgd =_ffgca ._dbcg .DecodeInt (_ffgca ._eade );if _bbgd !=nil {return _bbgd ;};_dfega ,_bbgd =_ffgca ._dbcg .DecodeInt (_ffgca ._eefc );if _bbgd !=nil {return _bbgd ;};};if _cefg :=_ffgca .setSymbolsArray ();_cefg !=nil {return _cefg ;};_agaa :=_ffgca ._cffaa [_efaa ];if _cdbab :=_ffgca .decodeNewSymbols (_ecaa ,_ddgg ,_agaa ,_ebee ,_dfega );_cdbab !=nil {return _cdbab ;};if _ffgca .IsHuffmanEncoded {_ffgca ._fddg .Align ();};return nil ;};func (_aedg *GenericRegion )Init (h *Header ,r _ca .StreamReader )error {_aedg .RegionSegment =NewRegionSegment (r );_aedg ._afec =r ;return _aedg .parseHeader ();};func (_cead *Header )subInputReader ()(_ca .StreamReader ,error ){return _ca .NewSubstreamReader (_cead .Reader ,_cead .SegmentDataStartOffset ,_cead .SegmentDataLength );};func (_bef *GenericRegion )setParametersWithAt (_afae bool ,_abcf byte ,_dfaf ,_bfac bool ,_acce ,_aebdg []int8 ,_cadg ,_daa uint32 ,_fadf *_fd .DecoderStats ,_cdba *_fd .Decoder ){_bef .IsMMREncoded =_afae ;_bef .GBTemplate =_abcf ;_bef .IsTPGDon =_dfaf ;_bef .GBAtX =_acce ;_bef .GBAtY =_aebdg ;_bef .RegionSegment .BitmapHeight =_daa ;_bef .RegionSegment .BitmapWidth =_cadg ;_bef ._abd =nil ;_bef .Bitmap =nil ;if _fadf !=nil {_bef ._baa =_fadf ;};if _cdba !=nil {_bef ._agf =_cdba ;};_gd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_bef );};func (_fbc *template0 )setIndex (_aab *_fd .DecoderStats ){_aab .SetIndex (0x100)};func (_aee *Header )String ()string {_dgbb :=&_bc .Builder {};_dgbb .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_dgbb .WriteString (_cf .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_aee .SegmentNumber ));_dgbb .WriteString (_cf .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_aee .Type ));_dgbb .WriteString (_cf .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_aee .RetainFlag ));_dgbb .WriteString (_cf .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_aee .PageAssociation ));_dgbb .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_aee .PageAssociationFieldSize ));_dgbb .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_baab :=range _aee .RTSNumbers {_dgbb .WriteString (_cf .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_baab ));};_dgbb .WriteString (_cf .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_aee .HeaderLength ));_dgbb .WriteString (_cf .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_aee .SegmentDataLength ));_dgbb .WriteString (_cf .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_aee .SegmentDataStartOffset ));return _dgbb .String ();};func (_ggf *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_deg ,_age ,_eb ,_fa ,_dgb ,_agg ,_ec ,_ff ,_afgf int )error {var (_cea ,_dda ,_caf ,_fdd ,_db ,_ecd int ;_ga byte ;_dea error ;);if _deg > 0{_ga ,_dea =_ggf .RegionBitmap .GetByte (_ec -_eb );if _dea !=nil {return _dea ;};_caf =int (_ga );};if _ff > 0&&_ff <=_ggf .ReferenceBitmap .Height {_ga ,_dea =_ggf .ReferenceBitmap .GetByte (_afgf -_fa +_agg );if _dea !=nil {return _dea ;};_fdd =int (_ga )<<4;};if _ff >=0&&_ff < _ggf .ReferenceBitmap .Height {_ga ,_dea =_ggf .ReferenceBitmap .GetByte (_afgf +_agg );if _dea !=nil {return _dea ;};_db =int (_ga )<<1;};if _ff > -2&&_ff < _ggf .ReferenceBitmap .Height -1{_ga ,_dea =_ggf .ReferenceBitmap .GetByte (_afgf +_fa +_agg );if _dea !=nil {return _dea ;};_ecd =int (_ga );};_cea =((_caf >>5)&0x6)|((_ecd >>2)&0x30)|(_db &0x180)|(_fdd &0xc00);var _abb int ;for _cfa :=0;_cfa < _dgb ;_cfa =_abb {var _agc int ;_abb =_cfa +8;var _bfa int ;if _bfa =_age -_cfa ;_bfa > 8{_bfa =8;};_ebe :=_abb < _age ;_feg :=_abb < _ggf .ReferenceBitmap .Width ;_gaa :=_agg +1;if _deg > 0{_ga =0;if _ebe {_ga ,_dea =_ggf .RegionBitmap .GetByte (_ec -_eb +1);if _dea !=nil {return _dea ;};};_caf =(_caf <<8)|int (_ga );};if _ff > 0&&_ff <=_ggf .ReferenceBitmap .Height {var _gac int ;if _feg {_ga ,_dea =_ggf .ReferenceBitmap .GetByte (_afgf -_fa +_gaa );if _dea !=nil {return _dea ;};_gac =int (_ga )<<4;};_fdd =(_fdd <<8)|_gac ;};if _ff >=0&&_ff < _ggf .ReferenceBitmap .Height {var _ac int ;if _feg {_ga ,_dea =_ggf .ReferenceBitmap .GetByte (_afgf +_gaa );if _dea !=nil {return _dea ;};_ac =int (_ga )<<1;};_db =(_db <<8)|_ac ;};if _ff > -2&&_ff < (_ggf .ReferenceBitmap .Height -1){_ga =0;if _feg {_ga ,_dea =_ggf .ReferenceBitmap .GetByte (_afgf +_fa +_gaa );if _dea !=nil {return _dea ;};};_ecd =(_ecd <<8)|int (_ga );};for _be :=0;_be < _bfa ;_be ++{var _cfcc int ;_ceb :=false ;_dde :=(_cea >>4)&0x1ff;if _dde ==0x1ff{_ceb =true ;_cfcc =1;}else if _dde ==0x00{_ceb =true ;};if !_ceb {if _ggf ._dg {_dda =_ggf .overrideAtTemplate0 (_cea ,_cfa +_be ,_deg ,_agc ,_be );_ggf ._cbg .SetIndex (int32 (_dda ));}else {_ggf ._cbg .SetIndex (int32 (_cea ));};_cfcc ,_dea =_ggf ._dc .DecodeBit (_ggf ._cbg );if _dea !=nil {return _dea ;};};_ece :=uint (7-_be );_agc |=_cfcc <<_ece ;_cea =((_cea &0xdb6)<<1)|_cfcc |(_caf >>_ece +5)&0x002|((_ecd >>_ece +2)&0x010)|((_db >>_ece )&0x080)|((_fdd >>_ece )&0x400);};_dea =_ggf .RegionBitmap .SetByte (_ec ,byte (_agc ));if _dea !=nil {return _dea ;};_ec ++;_afgf ++;};return nil ;};func (_cegf *GenericRegion )overrideAtTemplate2 (_cgbb ,_abfc ,_bfag ,_aggfg ,_ege int )int {_cgbb &=0x3FB;if _cegf .GBAtY [0]==0&&_cegf .GBAtX [0]>=-int8 (_ege ){_cgbb |=(_aggfg >>uint (7-(int8 (_ege )+_cegf .GBAtX [0]))&0x1)<<2;}else {_cgbb |=int (_cegf .getPixel (_abfc +int (_cegf .GBAtX [0]),_bfag +int (_cegf .GBAtY [0])))<<2;};return _cgbb ;};func (_cbc *GenericRegion )writeGBAtPixels (_dce _ca .BinaryWriter )(_cgdf int ,_fcag error ){const _dbef ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _cbc .UseMMR {return 0,nil ;};_afea :=1;if _cbc .GBTemplate ==0{_afea =4;}else if _cbc .UseExtTemplates {_afea =12;};if len (_cbc .GBAtX )!=_afea {return 0,_de .Errorf (_dbef ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};if len (_cbc .GBAtY )!=_afea {return 0,_de .Errorf (_dbef ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};for _cfcd :=0;_cfcd < _afea ;_cfcd ++{if _fcag =_dce .WriteByte (byte (_cbc .GBAtX [_cfcd ]));_fcag !=nil {return _cgdf ,_de .Wrap (_fcag ,_dbef ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_cgdf ++;if _fcag =_dce .WriteByte (byte (_cbc .GBAtY [_cfcd ]));_fcag !=nil {return _cgdf ,_de .Wrap (_fcag ,_dbef ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_cgdf ++;};return _cgdf ,nil ;};func (_aba *PageInformationSegment )readMaxStripeSize ()error {_dagg ,_bbdb :=_aba ._fga .ReadBits (15);if _bbdb !=nil {return _bbdb ;};_aba .MaxStripeSize =uint16 (_dagg &_b .MaxUint16 );return nil ;};func (_bbcd *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_bbcd .SdHuffAggInstanceSelection {_bdcdc ,_fcbc :=_bf .GetStandardTable (1);if _fcbc !=nil {return 0,_fcbc ;};return _bdcdc .Decode (_bbcd ._fddg );};if _bbcd ._dadae ==nil {var (_fgdf int ;_efdgg error ;);if _bbcd .SdHuffDecodeHeightSelection ==3{_fgdf ++;};if _bbcd .SdHuffDecodeWidthSelection ==3{_fgdf ++;};if _bbcd .SdHuffBMSizeSelection ==3{_fgdf ++;};_bbcd ._dadae ,_efdgg =_bbcd .getUserTable (_fgdf );if _efdgg !=nil {return 0,_efdgg ;};};return _bbcd ._dadae .Decode (_bbcd ._fddg );};func (_faab *RegionSegment )parseHeader ()error {const _cffd ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_gd .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_gd .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_facg ,_afcd :=_faab ._bcda .ReadBits (32);if _afcd !=nil {return _de .Wrap (_afcd ,_cffd ,"\u0077\u0069\u0064t\u0068");};_faab .BitmapWidth =uint32 (_facg &_b .MaxUint32 );_facg ,_afcd =_faab ._bcda .ReadBits (32);if _afcd !=nil {return _de .Wrap (_afcd ,_cffd ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_faab .BitmapHeight =uint32 (_facg &_b .MaxUint32 );_facg ,_afcd =_faab ._bcda .ReadBits (32);if _afcd !=nil {return _de .Wrap (_afcd ,_cffd ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_faab .XLocation =uint32 (_facg &_b .MaxUint32 );_facg ,_afcd =_faab ._bcda .ReadBits (32);if _afcd !=nil {return _de .Wrap (_afcd ,_cffd ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_faab .YLocation =uint32 (_facg &_b .MaxUint32 );if _ ,_afcd =_faab ._bcda .ReadBits (5);_afcd !=nil {return _de .Wrap (_afcd ,_cffd ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");};if _afcd =_faab .readCombinationOperator ();_afcd !=nil {return _de .Wrap (_afcd ,_cffd ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_dbcfa *TextRegion )decodeIb (_edfc ,_ecaeg int64 )(*_df .Bitmap ,error ){const _bea ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_dgaa error ;_cagf *_df .Bitmap ;);if _edfc ==0{if int (_ecaeg )> len (_dbcfa .Symbols )-1{return nil ,_de .Error (_bea ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");};return _dbcfa .Symbols [int (_ecaeg )],nil ;};var _fgbcd ,_fecb ,_dcgb ,_edg int64 ;_fgbcd ,_dgaa =_dbcfa .decodeRdw ();if _dgaa !=nil {return nil ,_de .Wrap (_dgaa ,_bea ,"");};_fecb ,_dgaa =_dbcfa .decodeRdh ();if _dgaa !=nil {return nil ,_de .Wrap (_dgaa ,_bea ,"");};_dcgb ,_dgaa =_dbcfa .decodeRdx ();if _dgaa !=nil {return nil ,_de .Wrap (_dgaa ,_bea ,"");};_edg ,_dgaa =_dbcfa .decodeRdy ();if _dgaa !=nil {return nil ,_de .Wrap (_dgaa ,_bea ,"");};if _dbcfa .IsHuffmanEncoded {if _ ,_dgaa =_dbcfa .decodeSymInRefSize ();_dgaa !=nil {return nil ,_de .Wrap (_dgaa ,_bea ,"");};_dbcfa ._gcff .Align ();};_afgd :=_dbcfa .Symbols [_ecaeg ];_fdcc :=uint32 (_afgd .Width );_ecdb :=uint32 (_afgd .Height );_abgdb :=int32 (uint32 (_fgbcd )>>1)+int32 (_dcgb );_gffdc :=int32 (uint32 (_fecb )>>1)+int32 (_edg );if _dbcfa ._gaef ==nil {_dbcfa ._gaef =_afcb (_dbcfa ._gcff ,nil );};_dbcfa ._gaef .setParameters (_dbcfa ._eegac ,_dbcfa ._badc ,_dbcfa .SbrTemplate ,_fdcc +uint32 (_fgbcd ),_ecdb +uint32 (_fecb ),_afgd ,_abgdb ,_gffdc ,false ,_dbcfa .SbrATX ,_dbcfa .SbrATY );_cagf ,_dgaa =_dbcfa ._gaef .GetRegionBitmap ();if _dgaa !=nil {return nil ,_de .Wrap (_dgaa ,_bea ,"\u0067\u0072\u0066");};if _dbcfa .IsHuffmanEncoded {_dbcfa ._gcff .Align ();};return _cagf ,nil ;};func NewHeader (d Documenter ,r _ca .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_eded :=&Header {Reader :r };if _afeb :=_eded .parse (d ,r ,offset ,organizationType );_afeb !=nil {return nil ,_de .Wrap (_afeb ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _eded ,nil ;};func (_fea *Header )readSegmentDataLength (_eedgb _ca .StreamReader )(_faef error ){_fea .SegmentDataLength ,_faef =_eedgb .ReadBits (32);if _faef !=nil {return _faef ;};_fea .SegmentDataLength &=_b .MaxInt32 ;return nil ;};func (_bgaa *TextRegion )decodeDfs ()(int64 ,error ){if _bgaa .IsHuffmanEncoded {if _bgaa .SbHuffFS ==3{if _bgaa ._bbee ==nil {var _cafe error ;_bgaa ._bbee ,_cafe =_bgaa .getUserTable (0);if _cafe !=nil {return 0,_cafe ;};};return _bgaa ._bbee .Decode (_bgaa ._gcff );};_dbcgd ,_gfdd :=_bf .GetStandardTable (6+int (_bgaa .SbHuffFS ));if _gfdd !=nil {return 0,_gfdd ;};return _dbcgd .Decode (_bgaa ._gcff );};_gbdb ,_adcc :=_bgaa ._badc .DecodeInt (_bgaa ._dfeb );if _adcc !=nil {return 0,_adcc ;};return int64 (_gbdb ),nil ;};func (_fbacc *PatternDictionary )readGrayMax ()error {_efdg ,_egca :=_fbacc ._faad .ReadBits (32);if _egca !=nil {return _egca ;};_fbacc .GrayMax =uint32 (_efdg &_b .MaxUint32 );return nil ;};func (_dccd *PageInformationSegment )parseHeader ()(_aagb error ){_gd .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");defer func (){var _gecf ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";if _aagb !=nil {_gecf +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_aagb .Error ();}else {_gecf +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_gd .Log .Trace (_gecf );}();if _aagb =_dccd .readWidthAndHeight ();_aagb !=nil {return _aagb ;};if _aagb =_dccd .readResolution ();_aagb !=nil {return _aagb ;};_ ,_aagb =_dccd ._fga .ReadBit ();if _aagb !=nil {return _aagb ;};if _aagb =_dccd .readCombinationOperatorOverrideAllowed ();_aagb !=nil {return _aagb ;};if _aagb =_dccd .readRequiresAuxiliaryBuffer ();_aagb !=nil {return _aagb ;};if _aagb =_dccd .readCombinationOperator ();_aagb !=nil {return _aagb ;};if _aagb =_dccd .readDefaultPixelValue ();_aagb !=nil {return _aagb ;};if _aagb =_dccd .readContainsRefinement ();_aagb !=nil {return _aagb ;};if _aagb =_dccd .readIsLossless ();_aagb !=nil {return _aagb ;};if _aagb =_dccd .readIsStriped ();_aagb !=nil {return _aagb ;};if _aagb =_dccd .readMaxStripeSize ();_aagb !=nil {return _aagb ;};if _aagb =_dccd .checkInput ();_aagb !=nil {return _aagb ;};_gd .Log .Trace ("\u0025\u0073",_dccd );return nil ;};func (_eeda *SymbolDictionary )encodeRefinementATFlags (_efab _ca .BinaryWriter )(_befa int ,_dbcf error ){const _ggeb ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if !_eeda .UseRefinementAggregation ||_eeda .SdrTemplate !=0{return 0,nil ;};for _gabg :=0;_gabg < 2;_gabg ++{if _dbcf =_efab .WriteByte (byte (_eeda .SdrATX [_gabg ]));_dbcf !=nil {return _befa ,_de .Wrapf (_dbcf ,_ggeb ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_gabg );};_befa ++;if _dbcf =_efab .WriteByte (byte (_eeda .SdrATY [_gabg ]));_dbcf !=nil {return _befa ,_de .Wrapf (_dbcf ,_ggeb ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_gabg );};_befa ++;};return _befa ,nil ;};func (_fgeg *TextRegion )setCodingStatistics ()error {if _fgeg ._dbde ==nil {_fgeg ._dbde =_fd .NewStats (512,1);};if _fgeg ._dfeb ==nil {_fgeg ._dfeb =_fd .NewStats (512,1);};if _fgeg ._ccba ==nil {_fgeg ._ccba =_fd .NewStats (512,1);};if _fgeg ._fffdf ==nil {_fgeg ._fffdf =_fd .NewStats (512,1);};if _fgeg ._bfea ==nil {_fgeg ._bfea =_fd .NewStats (512,1);};if _fgeg ._ffdc ==nil {_fgeg ._ffdc =_fd .NewStats (512,1);};if _fgeg ._gege ==nil {_fgeg ._gege =_fd .NewStats (512,1);};if _fgeg ._ebff ==nil {_fgeg ._ebff =_fd .NewStats (1<<uint (_fgeg ._cbce ),1);};if _fgeg ._agaf ==nil {_fgeg ._agaf =_fd .NewStats (512,1);};if _fgeg ._ccgbd ==nil {_fgeg ._ccgbd =_fd .NewStats (512,1);};if _fgeg ._badc ==nil {var _dged error ;_fgeg ._badc ,_dged =_fd .New (_fgeg ._gcff );if _dged !=nil {return _dged ;};};return nil ;};func (_fdec *SymbolDictionary )decodeAggregate (_affe ,_efgc uint32 )error {var (_dacg int64 ;_edcf error ;);if _fdec .IsHuffmanEncoded {_dacg ,_edcf =_fdec .huffDecodeRefAggNInst ();if _edcf !=nil {return _edcf ;};}else {_cbd ,_feee :=_fdec ._dbcg .DecodeInt (_fdec ._cgba );if _feee !=nil {return _feee ;};_dacg =int64 (_cbd );};if _dacg > 1{return _fdec .decodeThroughTextRegion (_affe ,_efgc ,uint32 (_dacg ));}else if _dacg ==1{return _fdec .decodeRefinedSymbol (_affe ,_efgc );};return nil ;};func (_gfd *Header )writeReferredToCount (_bdcc _ca .BinaryWriter )(_cbfe int ,_cagdg error ){const _dee ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_gfd .RTSNumbers =make ([]int ,len (_gfd .RTSegments ));for _efg ,_fegf :=range _gfd .RTSegments {_gfd .RTSNumbers [_efg ]=int (_fegf .SegmentNumber );};if len (_gfd .RTSNumbers )<=4{var _gde byte ;if len (_gfd .RetainBits )>=1{_gde =_gfd .RetainBits [0];};_gde |=byte (len (_gfd .RTSNumbers ))<<5;if _cagdg =_bdcc .WriteByte (_gde );_cagdg !=nil {return 0,_de .Wrap (_cagdg ,_dee ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_fcagf :=uint32 (len (_gfd .RTSNumbers ));_afecd :=make ([]byte ,4+_cfe .Ceil (len (_gfd .RTSNumbers )+1,8));_fcagf |=0x7<<29;_g .BigEndian .PutUint32 (_afecd ,_fcagf );copy (_afecd [1:],_gfd .RetainBits );_cbfe ,_cagdg =_bdcc .Write (_afecd );if _cagdg !=nil {return 0,_de .Wrap (_cagdg ,_dee ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _cbfe ,nil ;};func (_ecb *GenericRegion )Size ()int {return _ecb .RegionSegment .Size ()+1+2*len (_ecb .GBAtX )};func (_bccda *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _bcee ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _bccda .SbHuffRSize ==0{_abeg ,_afcg :=_bf .GetStandardTable (1);if _afcg !=nil {return 0,_de .Wrap (_afcg ,_bcee ,"");};return _abeg .Decode (_bccda ._gcff );};if _bccda ._faddb ==nil {var (_dfbc int ;_agfdfb error ;);if _bccda .SbHuffFS ==3{_dfbc ++;};if _bccda .SbHuffDS ==3{_dfbc ++;};if _bccda .SbHuffDT ==3{_dfbc ++;};if _bccda .SbHuffRDWidth ==3{_dfbc ++;};if _bccda .SbHuffRDHeight ==3{_dfbc ++;};if _bccda .SbHuffRDX ==3{_dfbc ++;};if _bccda .SbHuffRDY ==3{_dfbc ++;};_bccda ._faddb ,_agfdfb =_bccda .getUserTable (_dfbc );if _agfdfb !=nil {return 0,_de .Wrap (_agfdfb ,_bcee ,"");};};_cggeg ,_gbfc :=_bccda ._faddb .Decode (_bccda ._gcff );if _gbfc !=nil {return 0,_de .Wrap (_gbfc ,_bcee ,"");};return _cggeg ,nil ;};func (_geac *PageInformationSegment )encodeStripingInformation (_aeff _ca .BinaryWriter )(_acbc int ,_dcdc error ){const _ggef ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";if !_geac .IsStripe {if _acbc ,_dcdc =_aeff .Write ([]byte {0x00,0x00});_dcdc !=nil {return 0,_de .Wrap (_dcdc ,_ggef ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _acbc ,nil ;};_abgd :=make ([]byte ,2);_g .BigEndian .PutUint16 (_abgd ,_geac .MaxStripeSize |1<<15);if _acbc ,_dcdc =_aeff .Write (_abgd );_dcdc !=nil {return 0,_de .Wrapf (_dcdc ,_ggef ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_geac .MaxStripeSize );};return _acbc ,nil ;};func (_gaad *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_bega ,_bebb :=_gaad ._fga .ReadBit ();if _bebb !=nil {return _bebb ;};if _bega ==1{_gaad ._becd =true ;};return nil ;};func (_eacd *SymbolDictionary )readAtPixels (_ebdf int )error {_eacd .SdATX =make ([]int8 ,_ebdf );_eacd .SdATY =make ([]int8 ,_ebdf );var (_gggbg byte ;_dcbe error ;);for _efff :=0;_efff < _ebdf ;_efff ++{_gggbg ,_dcbe =_eacd ._fddg .ReadByte ();if _dcbe !=nil {return _dcbe ;};_eacd .SdATX [_efff ]=int8 (_gggbg );_gggbg ,_dcbe =_eacd ._fddg .ReadByte ();if _dcbe !=nil {return _dcbe ;};_eacd .SdATY [_efff ]=int8 (_gggbg );};return nil ;};func (_ade *GenericRefinementRegion )decodeTemplate (_ffb ,_eef ,_cgc ,_bdb ,_gfc ,_bdfc ,_dbf ,_ebg ,_fec ,_fcb int ,_afgc templater )(_aa error ){var (_bgc ,_fed ,_acc ,_bbe ,_afc int16 ;_beg ,_ead ,_ggg ,_bcd int ;_bgab byte ;);if _fec >=1&&(_fec -1)< _ade .ReferenceBitmap .Height {_bgab ,_aa =_ade .ReferenceBitmap .GetByte (_fcb -_bdb );if _aa !=nil {return ;};_beg =int (_bgab );};if _fec >=0&&(_fec )< _ade .ReferenceBitmap .Height {_bgab ,_aa =_ade .ReferenceBitmap .GetByte (_fcb );if _aa !=nil {return ;};_ead =int (_bgab );};if _fec >=-1&&(_fec +1)< _ade .ReferenceBitmap .Height {_bgab ,_aa =_ade .ReferenceBitmap .GetByte (_fcb +_bdb );if _aa !=nil {return ;};_ggg =int (_bgab );};_fcb ++;if _ffb >=1{_bgab ,_aa =_ade .RegionBitmap .GetByte (_ebg -_cgc );if _aa !=nil {return ;};_bcd =int (_bgab );};_ebg ++;_dbfb :=_ade .ReferenceDX %8;_cgdg :=6+_dbfb ;_cdac :=_fcb %_bdb ;if _cgdg >=0{if _cgdg < 8{_bgc =int16 (_beg >>uint (_cgdg ))&0x07;};if _cgdg < 8{_fed =int16 (_ead >>uint (_cgdg ))&0x07;};if _cgdg < 8{_acc =int16 (_ggg >>uint (_cgdg ))&0x07;};if _cgdg ==6&&_cdac > 1{if _fec >=1&&(_fec -1)< _ade .ReferenceBitmap .Height {_bgab ,_aa =_ade .ReferenceBitmap .GetByte (_fcb -_bdb -2);if _aa !=nil {return _aa ;};_bgc |=int16 (_bgab <<2)&0x04;};if _fec >=0&&_fec < _ade .ReferenceBitmap .Height {_bgab ,_aa =_ade .ReferenceBitmap .GetByte (_fcb -2);if _aa !=nil {return _aa ;};_fed |=int16 (_bgab <<2)&0x04;};if _fec >=-1&&_fec +1< _ade .ReferenceBitmap .Height {_bgab ,_aa =_ade .ReferenceBitmap .GetByte (_fcb +_bdb -2);if _aa !=nil {return _aa ;};_acc |=int16 (_bgab <<2)&0x04;};};if _cgdg ==0{_beg =0;_ead =0;_ggg =0;if _cdac < _bdb -1{if _fec >=1&&_fec -1< _ade .ReferenceBitmap .Height {_bgab ,_aa =_ade .ReferenceBitmap .GetByte (_fcb -_bdb );if _aa !=nil {return _aa ;};_beg =int (_bgab );};if _fec >=0&&_fec < _ade .ReferenceBitmap .Height {_bgab ,_aa =_ade .ReferenceBitmap .GetByte (_fcb );if _aa !=nil {return _aa ;};_ead =int (_bgab );};if _fec >=-1&&_fec +1< _ade .ReferenceBitmap .Height {_bgab ,_aa =_ade .ReferenceBitmap .GetByte (_fcb +_bdb );if _aa !=nil {return _aa ;};_ggg =int (_bgab );};};_fcb ++;};}else {_bgc =int16 (_beg <<1)&0x07;_fed =int16 (_ead <<1)&0x07;_acc =int16 (_ggg <<1)&0x07;_beg =0;_ead =0;_ggg =0;if _cdac < _bdb -1{if _fec >=1&&_fec -1< _ade .ReferenceBitmap .Height {_bgab ,_aa =_ade .ReferenceBitmap .GetByte (_fcb -_bdb );if _aa !=nil {return _aa ;};_beg =int (_bgab );};if _fec >=0&&_fec < _ade .ReferenceBitmap .Height {_bgab ,_aa =_ade .ReferenceBitmap .GetByte (_fcb );if _aa !=nil {return _aa ;};_ead =int (_bgab );};if _fec >=-1&&_fec +1< _ade .ReferenceBitmap .Height {_bgab ,_aa =_ade .ReferenceBitmap .GetByte (_fcb +_bdb );if _aa !=nil {return _aa ;};_ggg =int (_bgab );};_fcb ++;};_bgc |=int16 ((_beg >>7)&0x07);_fed |=int16 ((_ead >>7)&0x07);_acc |=int16 ((_ggg >>7)&0x07);};_bbe =int16 (_bcd >>6);_afc =0;_cecb :=(2-_dbfb )%8;_beg <<=uint (_cecb );_ead <<=uint (_cecb );_ggg <<=uint (_cecb );_bcd <<=2;var _ebed int ;for _ggfd :=0;_ggfd < _eef ;_ggfd ++{_cfaf :=_ggfd &0x07;_ddc :=_afgc .form (_bgc ,_fed ,_acc ,_bbe ,_afc );if _ade ._dg {_bgab ,_aa =_ade .RegionBitmap .GetByte (_ade .RegionBitmap .GetByteIndex (_ggfd ,_ffb ));if _aa !=nil {return _aa ;};_ade ._cbg .SetIndex (int32 (_ade .overrideAtTemplate0 (int (_ddc ),_ggfd ,_ffb ,int (_bgab ),_cfaf )));}else {_ade ._cbg .SetIndex (int32 (_ddc ));};_ebed ,_aa =_ade ._dc .DecodeBit (_ade ._cbg );if _aa !=nil {return _aa ;};if _aa =_ade .RegionBitmap .SetPixel (_ggfd ,_ffb ,byte (_ebed ));_aa !=nil {return _aa ;};_bgc =((_bgc <<1)|0x01&int16 (_beg >>7))&0x07;_fed =((_fed <<1)|0x01&int16 (_ead >>7))&0x07;_acc =((_acc <<1)|0x01&int16 (_ggg >>7))&0x07;_bbe =((_bbe <<1)|0x01&int16 (_bcd >>7))&0x07;_afc =int16 (_ebed );if (_ggfd -int (_ade .ReferenceDX ))%8==5{_beg =0;_ead =0;_ggg =0;if ((_ggfd -int (_ade .ReferenceDX ))/8)+1< _ade .ReferenceBitmap .RowStride {if _fec >=1&&(_fec -1)< _ade .ReferenceBitmap .Height {_bgab ,_aa =_ade .ReferenceBitmap .GetByte (_fcb -_bdb );if _aa !=nil {return _aa ;};_beg =int (_bgab );};if _fec >=0&&_fec < _ade .ReferenceBitmap .Height {_bgab ,_aa =_ade .ReferenceBitmap .GetByte (_fcb );if _aa !=nil {return _aa ;};_ead =int (_bgab );};if _fec >=-1&&(_fec +1)< _ade .ReferenceBitmap .Height {_bgab ,_aa =_ade .ReferenceBitmap .GetByte (_fcb +_bdb );if _aa !=nil {return _aa ;};_ggg =int (_bgab );};};_fcb ++;}else {_beg <<=1;_ead <<=1;_ggg <<=1;};if _cfaf ==5&&_ffb >=1{if ((_ggfd >>3)+1)>=_ade .RegionBitmap .RowStride {_bcd =0;}else {_bgab ,_aa =_ade .RegionBitmap .GetByte (_ebg -_cgc );if _aa !=nil {return _aa ;};_bcd =int (_bgab );};_ebg ++;}else {_bcd <<=1;};};return nil ;};func (_gdfc *TextRegion )getUserTable (_ffcb int )(_bf .Tabler ,error ){const _bgbed ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _bafe int ;for _ ,_cdab :=range _gdfc .Header .RTSegments {if _cdab .Type ==53{if _bafe ==_ffcb {_efge ,_edeb :=_cdab .GetSegmentData ();if _edeb !=nil {return nil ,_edeb ;};_ddgd ,_cdga :=_efge .(*TableSegment );if !_cdga {_gd .Log .Debug (_cf .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_cdab .SegmentNumber ));return nil ,_de .Error (_bgbed ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};return _bf .NewEncodedTable (_ddgd );};_bafe ++;};};return nil ,nil ;};func _afcb (_dfa _ca .StreamReader ,_agca *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_ab :_dfa ,RegionInfo :NewRegionSegment (_dfa ),_cgb :_agca ,_gdg :&template0 {},_cc :&template1 {}};};func (_aac *HalftoneRegion )computeGrayScalePlanes (_fde []*_df .Bitmap ,_dba int )([][]int ,error ){_bfcdd :=make ([][]int ,_aac .HGridHeight );for _ggee :=0;_ggee < len (_bfcdd );_ggee ++{_bfcdd [_ggee ]=make ([]int ,_aac .HGridWidth );};for _cgcb :=0;_cgcb < int (_aac .HGridHeight );_cgcb ++{for _ffbd :=0;_ffbd < int (_aac .HGridWidth );_ffbd +=8{var _cafa int ;if _acca :=int (_aac .HGridWidth )-_ffbd ;_acca > 8{_cafa =8;}else {_cafa =_acca ;};_adcd :=_fde [0].GetByteIndex (_ffbd ,_cgcb );for _ggagc :=0;_ggagc < _cafa ;_ggagc ++{_faae :=_ggagc +_ffbd ;_bfcdd [_cgcb ][_faae ]=0;for _ffe :=0;_ffe < _dba ;_ffe ++{_feca ,_adcdb :=_fde [_ffe ].GetByte (_adcd );if _adcdb !=nil {return nil ,_adcdb ;};_edad :=_feca >>uint (7-_faae &7);_egb :=_edad &1;_ffgc :=1<<uint (_ffe );_adf :=int (_egb )*_ffgc ;_bfcdd [_cgcb ][_faae ]+=_adf ;};};};};return _bfcdd ,nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _ca .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_aef *GenericRefinementRegion )parseHeader ()(_ffg error ){_gd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");_dfdb :=_bb .Now ();defer func (){if _ffg ==nil {_gd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_bb .Since (_dfdb ).Nanoseconds ());}else {_gd .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_ffg );};}();if _ffg =_aef .RegionInfo .parseHeader ();_ffg !=nil {return _ffg ;};_ ,_ffg =_aef ._ab .ReadBits (6);if _ffg !=nil {return _ffg ;};_aef .IsTPGROn ,_ffg =_aef ._ab .ReadBool ();if _ffg !=nil {return _ffg ;};var _gga int ;_gga ,_ffg =_aef ._ab .ReadBit ();if _ffg !=nil {return _ffg ;};_aef .TemplateID =int8 (_gga );switch _aef .TemplateID {case 0:_aef .Template =_aef ._gdg ;if _ffg =_aef .readAtPixels ();_ffg !=nil {return ;};case 1:_aef .Template =_aef ._cc ;};return nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_fff *GenericRegion )GetRegionBitmap ()(_abc *_df .Bitmap ,_cag error ){if _fff .Bitmap !=nil {return _fff .Bitmap ,nil ;};if _fff .IsMMREncoded {if _fff ._abd ==nil {_fff ._abd ,_cag =_cb .New (_fff ._afec ,int (_fff .RegionSegment .BitmapWidth ),int (_fff .RegionSegment .BitmapHeight ),_fff .DataOffset ,_fff .DataLength );if _cag !=nil {return nil ,_cag ;};};_fff .Bitmap ,_cag =_fff ._abd .UncompressMMR ();return _fff .Bitmap ,_cag ;};if _cag =_fff .updateOverrideFlags ();_cag !=nil {return nil ,_cag ;};var _ebd int ;if _fff ._agf ==nil {_fff ._agf ,_cag =_fd .New (_fff ._afec );if _cag !=nil {return nil ,_cag ;};};if _fff ._baa ==nil {_fff ._baa =_fd .NewStats (65536,1);};_fff .Bitmap =_df .New (int (_fff .RegionSegment .BitmapWidth ),int (_fff .RegionSegment .BitmapHeight ));_fdc :=int (uint32 (_fff .Bitmap .Width +7)&(^uint32 (7)));for _fdcd :=0;_fdcd < _fff .Bitmap .Height ;_fdcd ++{if _fff .IsTPGDon {var _dfdd int ;_dfdd ,_cag =_fff .decodeSLTP ();if _cag !=nil {return nil ,_cag ;};_ebd ^=_dfdd ;};if _ebd ==1{if _fdcd > 0{if _cag =_fff .copyLineAbove (_fdcd );_cag !=nil {return nil ,_cag ;};};}else {if _cag =_fff .decodeLine (_fdcd ,_fff .Bitmap .Width ,_fdc );_cag !=nil {return nil ,_cag ;};};};return _fff .Bitmap ,nil ;};func (_cffg *TextRegion )parseHeader ()error {var _ebcea error ;_gd .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _ebcea !=nil {_gd .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_ebcea );}else {_gd .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _ebcea =_cffg .RegionInfo .parseHeader ();_ebcea !=nil {return _ebcea ;};if _ebcea =_cffg .readRegionFlags ();_ebcea !=nil {return _ebcea ;};if _cffg .IsHuffmanEncoded {if _ebcea =_cffg .readHuffmanFlags ();_ebcea !=nil {return _ebcea ;};};if _ebcea =_cffg .readUseRefinement ();_ebcea !=nil {return _ebcea ;};if _ebcea =_cffg .readAmountOfSymbolInstances ();_ebcea !=nil {return _ebcea ;};if _ebcea =_cffg .getSymbols ();_ebcea !=nil {return _ebcea ;};if _ebcea =_cffg .computeSymbolCodeLength ();_ebcea !=nil {return _ebcea ;};if _ebcea =_cffg .checkInput ();_ebcea !=nil {return _ebcea ;};_gd .Log .Trace ("\u0025\u0073",_cffg .String ());return nil ;};func (_dggg *HalftoneRegion )shiftAndFill (_gffc int )int {_gffc >>=8;if _gffc < 0{_cfbe :=int (_b .Log (float64 (_ggd (_gffc )))/_b .Log (2));_gcc :=31-_cfbe ;for _ebb :=1;_ebb < _gcc ;_ebb ++{_gffc |=1<<uint (31-_ebb );};};return _gffc ;};type RegionSegment struct{_bcda _ca .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _df .CombinationOperator ;};func (_ccb *GenericRefinementRegion )Init (header *Header ,r _ca .StreamReader )error {_ccb ._cgb =header ;_ccb ._ab =r ;_ccb .RegionInfo =NewRegionSegment (r );return _ccb .parseHeader ();};type template1 struct{};func (_eag *Header )CleanSegmentData (){if _eag .SegmentData !=nil {_eag .SegmentData =nil ;};};func (_ecf *PatternDictionary )readTemplate ()error {_dgfg ,_dbbf :=_ecf ._faad .ReadBits (2);if _dbbf !=nil {return _dbbf ;};_ecf .HDTemplate =byte (_dgfg );return nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_df .Bitmap ,error );};func (_ddbbf *TextRegion )decodeCurrentT ()(int64 ,error ){if _ddbbf .SbStrips !=1{if _ddbbf .IsHuffmanEncoded {_cadb ,_gdae :=_ddbbf ._gcff .ReadBits (byte (_ddbbf .LogSBStrips ));return int64 (_cadb ),_gdae ;};_gefa ,_fceg :=_ddbbf ._badc .DecodeInt (_ddbbf ._fffdf );if _fceg !=nil {return 0,_fceg ;};return int64 (_gefa ),nil ;};return 0,nil ;};func (_fbac *Header )readSegmentPageAssociation (_fbaag Documenter ,_ebde _ca .StreamReader ,_dega uint64 ,_gdd ...int )(_bbeg error ){const _aagd ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";if !_fbac .PageAssociationFieldSize {_fdfb ,_cdacg :=_ebde .ReadBits (8);if _cdacg !=nil {return _de .Wrap (_cdacg ,_aagd ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fbac .PageAssociation =int (_fdfb &0xFF);}else {_cgbc ,_fgff :=_ebde .ReadBits (32);if _fgff !=nil {return _de .Wrap (_fgff ,_aagd ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fbac .PageAssociation =int (_cgbc &_b .MaxInt32 );};if _dega ==0{return nil ;};if _fbac .PageAssociation !=0{_edbc ,_gdbf :=_fbaag .GetPage (_fbac .PageAssociation );if _gdbf !=nil {return _de .Wrap (_gdbf ,_aagd ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _aedbd int ;for _fdee :=uint64 (0);_fdee < _dega ;_fdee ++{_aedbd =_gdd [_fdee ];_fbac .RTSegments [_fdee ],_gdbf =_edbc .GetSegment (_aedbd );if _gdbf !=nil {var _beeg error ;_fbac .RTSegments [_fdee ],_beeg =_fbaag .GetGlobalSegment (_aedbd );if _beeg !=nil {return _de .Wrapf (_gdbf ,_aagd ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_fbac .PageAssociation );};};};return nil ;};for _cafc :=uint64 (0);_cafc < _dega ;_cafc ++{_fbac .RTSegments [_cafc ],_bbeg =_fbaag .GetGlobalSegment (_gdd [_cafc ]);if _bbeg !=nil {return _de .Wrapf (_bbeg ,_aagd ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_gdd [_cafc ]);};};return nil ;};func (_eed *GenericRefinementRegion )overrideAtTemplate0 (_agce ,_afgg ,_dgg ,_fg ,_cdgb int )int {if _eed ._cec [0]{_agce &=0xfff7;if _eed .GrAtY [0]==0&&int (_eed .GrAtX [0])>=-_cdgb {_agce |=(_fg >>uint (7-(_cdgb +int (_eed .GrAtX [0])))&0x1)<<3;}else {_agce |=_eed .getPixel (_eed .RegionBitmap ,_afgg +int (_eed .GrAtX [0]),_dgg +int (_eed .GrAtY [0]))<<3;};};if _eed ._cec [1]{_agce &=0xefff;if _eed .GrAtY [1]==0&&int (_eed .GrAtX [1])>=-_cdgb {_agce |=(_fg >>uint (7-(_cdgb +int (_eed .GrAtX [1])))&0x1)<<12;}else {_agce |=_eed .getPixel (_eed .ReferenceBitmap ,_afgg +int (_eed .GrAtX [1]),_dgg +int (_eed .GrAtY [1]));};};return _agce ;};func _fdfda (_agaaa _ca .StreamReader ,_efdc *Header )*TextRegion {_begf :=&TextRegion {_gcff :_agaaa ,Header :_efdc ,RegionInfo :NewRegionSegment (_agaaa )};return _begf ;};func (_dedc *GenericRegion )GetRegionInfo ()*RegionSegment {return _dedc .RegionSegment };func (_ccec *TextRegion )readRegionFlags ()error {var (_dfgd int ;_fbfc uint64 ;_dfdbg error ;);_dfgd ,_dfdbg =_ccec ._gcff .ReadBit ();if _dfdbg !=nil {return _dfdbg ;};_ccec .SbrTemplate =int8 (_dfgd );_fbfc ,_dfdbg =_ccec ._gcff .ReadBits (5);if _dfdbg !=nil {return _dfdbg ;};_ccec .SbDsOffset =int8 (_fbfc );if _ccec .SbDsOffset > 0x0f{_ccec .SbDsOffset -=0x20;};_dfgd ,_dfdbg =_ccec ._gcff .ReadBit ();if _dfdbg !=nil {return _dfdbg ;};_ccec .DefaultPixel =int8 (_dfgd );_fbfc ,_dfdbg =_ccec ._gcff .ReadBits (2);if _dfdbg !=nil {return _dfdbg ;};_ccec .CombinationOperator =_df .CombinationOperator (int (_fbfc )&0x3);_dfgd ,_dfdbg =_ccec ._gcff .ReadBit ();if _dfdbg !=nil {return _dfdbg ;};_ccec .IsTransposed =int8 (_dfgd );_fbfc ,_dfdbg =_ccec ._gcff .ReadBits (2);if _dfdbg !=nil {return _dfdbg ;};_ccec .ReferenceCorner =int16 (_fbfc )&0x3;_fbfc ,_dfdbg =_ccec ._gcff .ReadBits (2);if _dfdbg !=nil {return _dfdbg ;};_ccec .LogSBStrips =int16 (_fbfc )&0x3;_ccec .SbStrips =1<<uint (_ccec .LogSBStrips );_dfgd ,_dfdbg =_ccec ._gcff .ReadBit ();if _dfdbg !=nil {return _dfdbg ;};if _dfgd ==1{_ccec .UseRefinement =true ;};_dfgd ,_dfdbg =_ccec ._gcff .ReadBit ();if _dfdbg !=nil {return _dfdbg ;};if _dfgd ==1{_ccec .IsHuffmanEncoded =true ;};return nil ;};var _ _bf .BasicTabler =&TableSegment {};func (_deab *GenericRegion )decodeTemplate0a (_gcgf ,_bgac ,_defc int ,_caa ,_ddb int )(_fccd error ){const _adbc ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_egce ,_beb int ;_bgag ,_gfce int ;_dfddf byte ;_ccg int ;);if _gcgf >=1{_dfddf ,_fccd =_deab .Bitmap .GetByte (_ddb );if _fccd !=nil {return _de .Wrap (_fccd ,_adbc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bgag =int (_dfddf );};if _gcgf >=2{_dfddf ,_fccd =_deab .Bitmap .GetByte (_ddb -_deab .Bitmap .RowStride );if _fccd !=nil {return _de .Wrap (_fccd ,_adbc ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_gfce =int (_dfddf )<<6;};_egce =(_bgag &0xf0)|(_gfce &0x3800);for _dgbe :=0;_dgbe < _defc ;_dgbe =_ccg {var (_egf byte ;_cca int ;);_ccg =_dgbe +8;if _bfdg :=_bgac -_dgbe ;_bfdg > 8{_cca =8;}else {_cca =_bfdg ;};if _gcgf > 0{_bgag <<=8;if _ccg < _bgac {_dfddf ,_fccd =_deab .Bitmap .GetByte (_ddb +1);if _fccd !=nil {return _de .Wrap (_fccd ,_adbc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_bgag |=int (_dfddf );};};if _gcgf > 1{_bbea :=_ddb -_deab .Bitmap .RowStride +1;_gfce <<=8;if _ccg < _bgac {_dfddf ,_fccd =_deab .Bitmap .GetByte (_bbea );if _fccd !=nil {return _de .Wrap (_fccd ,_adbc ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_gfce |=int (_dfddf )<<6;}else {_gfce |=0;};};for _fgg :=0;_fgg < _cca ;_fgg ++{_afa :=uint (7-_fgg );if _deab ._gcdd {_beb =_deab .overrideAtTemplate0a (_egce ,_dgbe +_fgg ,_gcgf ,int (_egf ),_fgg ,int (_afa ));_deab ._baa .SetIndex (int32 (_beb ));}else {_deab ._baa .SetIndex (int32 (_egce ));};var _fffc int ;_fffc ,_fccd =_deab ._agf .DecodeBit (_deab ._baa );if _fccd !=nil {return _de .Wrap (_fccd ,_adbc ,"");};_egf |=byte (_fffc )<<_afa ;_egce =((_egce &0x7bf7)<<1)|_fffc |((_bgag >>_afa )&0x10)|((_gfce >>_afa )&0x800);};if _fce :=_deab .Bitmap .SetByte (_caa ,_egf );_fce !=nil {return _de .Wrap (_fce ,_adbc ,"");};_caa ++;_ddb ++;};return nil ;};func (_egadd *TextRegion )setParameters (_dcggf *_fd .Decoder ,_bada ,_fbdcd bool ,_adbe ,_gfgg uint32 ,_bcbda uint32 ,_gcbe int8 ,_fbeg uint32 ,_agbf int8 ,_gded _df .CombinationOperator ,_dbecd int8 ,_dbeg int16 ,_ebgbg ,_baec ,_cfff ,_ddea ,_bfgg ,_dafa ,_cegg ,_eecf ,_aeffg ,_egdd int8 ,_dcaac ,_ffeb []int8 ,_gaagg []*_df .Bitmap ,_aagdf int8 ){_egadd ._badc =_dcggf ;_egadd .IsHuffmanEncoded =_bada ;_egadd .UseRefinement =_fbdcd ;_egadd .RegionInfo .BitmapWidth =_adbe ;_egadd .RegionInfo .BitmapHeight =_gfgg ;_egadd .NumberOfSymbolInstances =_bcbda ;_egadd .SbStrips =_gcbe ;_egadd .NumberOfSymbols =_fbeg ;_egadd .DefaultPixel =_agbf ;_egadd .CombinationOperator =_gded ;_egadd .IsTransposed =_dbecd ;_egadd .ReferenceCorner =_dbeg ;_egadd .SbDsOffset =_ebgbg ;_egadd .SbHuffFS =_baec ;_egadd .SbHuffDS =_cfff ;_egadd .SbHuffDT =_ddea ;_egadd .SbHuffRDWidth =_bfgg ;_egadd .SbHuffRDHeight =_dafa ;_egadd .SbHuffRSize =_aeffg ;_egadd .SbHuffRDX =_cegg ;_egadd .SbHuffRDY =_eecf ;_egadd .SbrTemplate =_egdd ;_egadd .SbrATX =_dcaac ;_egadd .SbrATY =_ffeb ;_egadd .Symbols =_gaagg ;_egadd ._cbce =_aagdf ;};type Segmenter interface{Init (_egacg *Header ,_ccgb _ca .StreamReader )error ;};func (_dced *PageInformationSegment )encodeFlags (_fdbfe _ca .BinaryWriter )(_ada error ){const _ggc ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _ada =_fdbfe .SkipBits (1);_ada !=nil {return _de .Wrap (_ada ,_ggc ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _gefc int ;if _dced .CombinationOperatorOverrideAllowed (){_gefc =1;};if _ada =_fdbfe .WriteBit (_gefc );_ada !=nil {return _de .Wrap (_ada ,_ggc ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_gefc =0;if _dced ._becd {_gefc =1;};if _ada =_fdbfe .WriteBit (_gefc );_ada !=nil {return _de .Wrap (_ada ,_ggc ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _ada =_fdbfe .WriteBit ((int (_dced ._fcd )>>1)&0x01);_ada !=nil {return _de .Wrap (_ada ,_ggc ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _ada =_fdbfe .WriteBit (int (_dced ._fcd )&0x01);_ada !=nil {return _de .Wrap (_ada ,_ggc ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_gefc =int (_dced ._bdbf );if _ada =_fdbfe .WriteBit (_gefc );_ada !=nil {return _de .Wrap (_ada ,_ggc ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_gefc =0;if _dced ._ecbg {_gefc =1;};if _ada =_fdbfe .WriteBit (_gefc );_ada !=nil {return _de .Wrap (_ada ,_ggc ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_gefc =0;if _dced .IsLossless {_gefc =1;};if _ada =_fdbfe .WriteBit (_gefc );_ada !=nil {return _de .Wrap (_ada ,_ggc ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_ffda *PatternDictionary )checkInput ()error {if _ffda .HdpHeight < 1||_ffda .HdpWidth < 1{return _fe .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");};if _ffda .IsMMREncoded {if _ffda .HDTemplate !=0{_gd .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");};};return nil ;};func (_gggb *GenericRegion )decodeTemplate2 (_dace ,_bgcf ,_cffa int ,_acf ,_dcgc int )(_cbf error ){const _fgga ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_eeb ,_dfdg int ;_gcdc ,_gceg int ;_dgbd byte ;_ebca ,_ged int ;);if _dace >=1{_dgbd ,_cbf =_gggb .Bitmap .GetByte (_dcgc );if _cbf !=nil {return _de .Wrap (_cbf ,_fgga ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_gcdc =int (_dgbd );};if _dace >=2{_dgbd ,_cbf =_gggb .Bitmap .GetByte (_dcgc -_gggb .Bitmap .RowStride );if _cbf !=nil {return _de .Wrap (_cbf ,_fgga ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_gceg =int (_dgbd )<<4;};_eeb =(_gcdc >>3&0x7c)|(_gceg >>3&0x380);for _eadd :=0;_eadd < _cffa ;_eadd =_ebca {var (_afge byte ;_fcab int ;);_ebca =_eadd +8;if _faea :=_bgcf -_eadd ;_faea > 8{_fcab =8;}else {_fcab =_faea ;};if _dace > 0{_gcdc <<=8;if _ebca < _bgcf {_dgbd ,_cbf =_gggb .Bitmap .GetByte (_dcgc +1);if _cbf !=nil {return _de .Wrap (_cbf ,_fgga ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_gcdc |=int (_dgbd );};};if _dace > 1{_gceg <<=8;if _ebca < _bgcf {_dgbd ,_cbf =_gggb .Bitmap .GetByte (_dcgc -_gggb .Bitmap .RowStride +1);if _cbf !=nil {return _de .Wrap (_cbf ,_fgga ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_gceg |=int (_dgbd )<<4;};};for _bfcd :=0;_bfcd < _fcab ;_bfcd ++{_ede :=uint (10-_bfcd );if _gggb ._gcdd {_dfdg =_gggb .overrideAtTemplate2 (_eeb ,_eadd +_bfcd ,_dace ,int (_afge ),_bfcd );_gggb ._baa .SetIndex (int32 (_dfdg ));}else {_gggb ._baa .SetIndex (int32 (_eeb ));};_ged ,_cbf =_gggb ._agf .DecodeBit (_gggb ._baa );if _cbf !=nil {return _de .Wrap (_cbf ,_fgga ,"");};_afge |=byte (_ged <<uint (7-_bfcd ));_eeb =((_eeb &0x1bd)<<1)|_ged |((_gcdc >>_ede )&0x4)|((_gceg >>_ede )&0x80);};if _cfgd :=_gggb .Bitmap .SetByte (_acf ,_afge );_cfgd !=nil {return _de .Wrap (_cfgd ,_fgga ,"");};_acf ++;_dcgc ++;};return nil ;};func (_dgdc *PageInformationSegment )readResolution ()error {_cbe ,_ecgf :=_dgdc ._fga .ReadBits (32);if _ecgf !=nil {return _ecgf ;};_dgdc .ResolutionX =int (_cbe &_b .MaxInt32 );_cbe ,_ecgf =_dgdc ._fga .ReadBits (32);if _ecgf !=nil {return _ecgf ;};_dgdc .ResolutionY =int (_cbe &_b .MaxInt32 );return nil ;};func (_egad *SymbolDictionary )GetDictionary ()([]*_df .Bitmap ,error ){_gd .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){_gd .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");_gd .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_egad ._dcf ,_egad ._edfb );}();if _egad ._dcf ==nil {var _fcefb error ;if _egad .UseRefinementAggregation {_egad ._afdd =_egad .getSbSymCodeLen ();};if !_egad .IsHuffmanEncoded {if _fcefb =_egad .setCodingStatistics ();_fcefb !=nil {return nil ,_fcefb ;};};_egad ._edfb =make ([]*_df .Bitmap ,_egad .NumberOfNewSymbols );var _cdag []int ;if _egad .IsHuffmanEncoded &&!_egad .UseRefinementAggregation {_cdag =make ([]int ,_egad .NumberOfNewSymbols );};if _fcefb =_egad .setSymbolsArray ();_fcefb !=nil {return nil ,_fcefb ;};var _aecg ,_eba int64 ;_egad ._bddf =0;for _egad ._bddf < _egad .NumberOfNewSymbols {_eba ,_fcefb =_egad .decodeHeightClassDeltaHeight ();if _fcefb !=nil {return nil ,_fcefb ;};_aecg +=_eba ;var _agfdf ,_effc uint32 ;_dcfb :=int64 (_egad ._bddf );for {var _eadeg int64 ;_eadeg ,_fcefb =_egad .decodeDifferenceWidth ();if _cg .Is (_fcefb ,_fee .ErrOOB ){break ;};if _fcefb !=nil {return nil ,_fcefb ;};if _egad ._bddf >=_egad .NumberOfNewSymbols {break ;};_agfdf +=uint32 (_eadeg );_effc +=_agfdf ;if !_egad .IsHuffmanEncoded ||_egad .UseRefinementAggregation {if !_egad .UseRefinementAggregation {_fcefb =_egad .decodeDirectlyThroughGenericRegion (_agfdf ,uint32 (_aecg ));if _fcefb !=nil {return nil ,_fcefb ;};}else {_fcefb =_egad .decodeAggregate (_agfdf ,uint32 (_aecg ));if _fcefb !=nil {return nil ,_fcefb ;};};}else if _egad .IsHuffmanEncoded &&!_egad .UseRefinementAggregation {_cdag [_egad ._bddf ]=int (_agfdf );};_egad ._bddf ++;};if _egad .IsHuffmanEncoded &&!_egad .UseRefinementAggregation {var _aagc int64 ;if _egad .SdHuffBMSizeSelection ==0{var _dgff _bf .Tabler ;_dgff ,_fcefb =_bf .GetStandardTable (1);if _fcefb !=nil {return nil ,_fcefb ;};_aagc ,_fcefb =_dgff .Decode (_egad ._fddg );if _fcefb !=nil {return nil ,_fcefb ;};}else {_aagc ,_fcefb =_egad .huffDecodeBmSize ();if _fcefb !=nil {return nil ,_fcefb ;};};_egad ._fddg .Align ();var _fbgbd *_df .Bitmap ;_fbgbd ,_fcefb =_egad .decodeHeightClassCollectiveBitmap (_aagc ,uint32 (_aecg ),_effc );if _fcefb !=nil {return nil ,_fcefb ;};_fcefb =_egad .decodeHeightClassBitmap (_fbgbd ,_dcfb ,int (_aecg ),_cdag );if _fcefb !=nil {return nil ,_fcefb ;};};};_faeab ,_fcefb :=_egad .getToExportFlags ();if _fcefb !=nil {return nil ,_fcefb ;};_egad .setExportedSymbols (_faeab );};return _egad ._dcf ,nil ;};