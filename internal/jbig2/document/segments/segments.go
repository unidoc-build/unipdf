//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_fe "encoding/binary";_d "errors";_c "fmt";_bd "github.com/unidoc/unipdf/v3/common";_gc "github.com/unidoc/unipdf/v3/internal/bitwise";_cf "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_b "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_ge "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_ag "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_ga "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_cd "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";_ff "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_gd "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_dg "golang.org/x/xerrors";_fb "image";_a "io";_f "math";_e "strings";_fd "time";);func (_aeffc *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_aeed ,_bcf :=_aeffc ._eaa .ReadBit ();if _bcf !=nil {return _bcf ;};if _aeed ==1{_aeffc ._aeae =true ;};return nil ;};func (_gbed *SymbolDictionary )parseHeader ()(_ffda error ){_bd .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _ffda !=nil {_bd .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_ffda );}else {_bd .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _ffda =_gbed .readRegionFlags ();_ffda !=nil {return _ffda ;};if _ffda =_gbed .setAtPixels ();_ffda !=nil {return _ffda ;};if _ffda =_gbed .setRefinementAtPixels ();_ffda !=nil {return _ffda ;};if _ffda =_gbed .readNumberOfExportedSymbols ();_ffda !=nil {return _ffda ;};if _ffda =_gbed .readNumberOfNewSymbols ();_ffda !=nil {return _ffda ;};if _ffda =_gbed .setInSyms ();_ffda !=nil {return _ffda ;};if _gbed ._egfg {_ccac :=_gbed .Header .RTSegments ;for _aaca :=len (_ccac )-1;_aaca >=0;_aaca --{if _ccac [_aaca ].Type ==0{_gbaa ,_gaa :=_ccac [_aaca ].SegmentData .(*SymbolDictionary );if !_gaa {_ffda =_c .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_ccac [_aaca ]);return _ffda ;};if _gbaa ._egfg {_gbed .setRetainedCodingContexts (_gbaa );};break ;};};};if _ffda =_gbed .checkInput ();_ffda !=nil {return _ffda ;};return nil ;};func (_daaa *PageInformationSegment )readIsLossless ()error {_aeca ,_dabcb :=_daaa ._eaa .ReadBit ();if _dabcb !=nil {return _dabcb ;};if _aeca ==1{_daaa .IsLossless =true ;};return nil ;};func (_ace *GenericRegion )GetRegionBitmap ()(_ada *_b .Bitmap ,_ggfe error ){if _ace .Bitmap !=nil {return _ace .Bitmap ,nil ;};if _ace .IsMMREncoded {if _ace ._aea ==nil {_ace ._aea ,_ggfe =_ga .New (_ace ._afd ,int (_ace .RegionSegment .BitmapWidth ),int (_ace .RegionSegment .BitmapHeight ),_ace .DataOffset ,_ace .DataLength );if _ggfe !=nil {return nil ,_ggfe ;};};_ace .Bitmap ,_ggfe =_ace ._aea .UncompressMMR ();return _ace .Bitmap ,_ggfe ;};if _ggfe =_ace .updateOverrideFlags ();_ggfe !=nil {return nil ,_ggfe ;};var _gbga int ;if _ace ._cbbb ==nil {_ace ._cbbb ,_ggfe =_ge .New (_ace ._afd );if _ggfe !=nil {return nil ,_ggfe ;};};if _ace ._adgf ==nil {_ace ._adgf =_ge .NewStats (65536,1);};_ace .Bitmap =_b .New (int (_ace .RegionSegment .BitmapWidth ),int (_ace .RegionSegment .BitmapHeight ));_ffg :=int (uint32 (_ace .Bitmap .Width +7)&(^uint32 (7)));for _gaca :=0;_gaca < _ace .Bitmap .Height ;_gaca ++{if _ace .IsTPGDon {var _debc int ;_debc ,_ggfe =_ace .decodeSLTP ();if _ggfe !=nil {return nil ,_ggfe ;};_gbga ^=_debc ;};if _gbga ==1{if _gaca > 0{if _ggfe =_ace .copyLineAbove (_gaca );_ggfe !=nil {return nil ,_ggfe ;};};}else {if _ggfe =_ace .decodeLine (_gaca ,_ace .Bitmap .Width ,_ffg );_ggfe !=nil {return nil ,_ggfe ;};};};return _ace .Bitmap ,nil ;};func (_fdbg *TextRegion )decodeRdy ()(int64 ,error ){const _dbe ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";if _fdbg .IsHuffmanEncoded {if _fdbg .SbHuffRDY ==3{if _fdbg ._aae ==nil {var (_fcgabe int ;_ceagg error ;);if _fdbg .SbHuffFS ==3{_fcgabe ++;};if _fdbg .SbHuffDS ==3{_fcgabe ++;};if _fdbg .SbHuffDT ==3{_fcgabe ++;};if _fdbg .SbHuffRDWidth ==3{_fcgabe ++;};if _fdbg .SbHuffRDHeight ==3{_fcgabe ++;};if _fdbg .SbHuffRDX ==3{_fcgabe ++;};_fdbg ._aae ,_ceagg =_fdbg .getUserTable (_fcgabe );if _ceagg !=nil {return 0,_ff .Wrap (_ceagg ,_dbe ,"");};};return _fdbg ._aae .Decode (_fdbg ._egfgg );};_gecbd ,_dfda :=_ag .GetStandardTable (14+int (_fdbg .SbHuffRDY ));if _dfda !=nil {return 0,_dfda ;};return _gecbd .Decode (_fdbg ._egfgg );};_edcdc ,_fbdba :=_fdbg ._fefe .DecodeInt (_fdbg ._cbag );if _fbdba !=nil {return 0,_ff .Wrap (_fbdba ,_dbe ,"");};return int64 (_edcdc ),nil ;};func (_fcc *GenericRegion )Init (h *Header ,r _gc .StreamReader )error {_fcc .RegionSegment =NewRegionSegment (r );_fcc ._afd =r ;return _fcc .parseHeader ();};func (_cdcc *TextRegion )setContexts (_ebfcg *_ge .DecoderStats ,_gfdg *_ge .DecoderStats ,_gdegb *_ge .DecoderStats ,_dbfg *_ge .DecoderStats ,_cfaa *_ge .DecoderStats ,_ddef *_ge .DecoderStats ,_egeec *_ge .DecoderStats ,_ccgd *_ge .DecoderStats ,_edad *_ge .DecoderStats ,_dadc *_ge .DecoderStats ){_cdcc ._gdga =_gfdg ;_cdcc ._gabf =_gdegb ;_cdcc ._dcaf =_dbfg ;_cdcc ._dbdf =_cfaa ;_cdcc ._bgdd =_egeec ;_cdcc ._abggg =_ccgd ;_cdcc ._babb =_ddef ;_cdcc ._fbac =_edad ;_cdcc ._cbag =_dadc ;_cdcc ._fcgd =_ebfcg ;};func (_feea *HalftoneRegion )GetPatterns ()([]*_b .Bitmap ,error ){var (_cbed []*_b .Bitmap ;_edfc error ;);for _ ,_bebf :=range _feea ._ebfbg .RTSegments {var _ffca Segmenter ;_ffca ,_edfc =_bebf .GetSegmentData ();if _edfc !=nil {_bd .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_edfc );return nil ,_edfc ;};_edgg ,_gcdfe :=_ffca .(*PatternDictionary );if !_gcdfe {_edfc =_c .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_ffca );return nil ,_edfc ;};var _egc []*_b .Bitmap ;_egc ,_edfc =_edgg .GetDictionary ();if _edfc !=nil {_bd .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_edfc );return nil ,_edfc ;};_cbed =append (_cbed ,_egc ...);};return _cbed ,nil ;};func (_gffcf *GenericRegion )decodeTemplate0b (_cec ,_cfge ,_abc int ,_gbef ,_ddc int )(_cde error ){const _fcd ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_aeac ,_dfad int ;_ffc ,_efae int ;_gcdf byte ;_ebdb int ;);if _cec >=1{_gcdf ,_cde =_gffcf .Bitmap .GetByte (_ddc );if _cde !=nil {return _ff .Wrap (_cde ,_fcd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ffc =int (_gcdf );};if _cec >=2{_gcdf ,_cde =_gffcf .Bitmap .GetByte (_ddc -_gffcf .Bitmap .RowStride );if _cde !=nil {return _ff .Wrap (_cde ,_fcd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_efae =int (_gcdf )<<6;};_aeac =(_ffc &0xf0)|(_efae &0x3800);for _cbg :=0;_cbg < _abc ;_cbg =_ebdb {var (_aeab byte ;_aef int ;);_ebdb =_cbg +8;if _aac :=_cfge -_cbg ;_aac > 8{_aef =8;}else {_aef =_aac ;};if _cec > 0{_ffc <<=8;if _ebdb < _cfge {_gcdf ,_cde =_gffcf .Bitmap .GetByte (_ddc +1);if _cde !=nil {return _ff .Wrap (_cde ,_fcd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ffc |=int (_gcdf );};};if _cec > 1{_efae <<=8;if _ebdb < _cfge {_gcdf ,_cde =_gffcf .Bitmap .GetByte (_ddc -_gffcf .Bitmap .RowStride +1);if _cde !=nil {return _ff .Wrap (_cde ,_fcd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_efae |=int (_gcdf )<<6;};};for _gbf :=0;_gbf < _aef ;_gbf ++{_bcd :=uint (7-_gbf );if _gffcf ._gcga {_dfad =_gffcf .overrideAtTemplate0b (_aeac ,_cbg +_gbf ,_cec ,int (_aeab ),_gbf ,int (_bcd ));_gffcf ._adgf .SetIndex (int32 (_dfad ));}else {_gffcf ._adgf .SetIndex (int32 (_aeac ));};var _ffe int ;_ffe ,_cde =_gffcf ._cbbb .DecodeBit (_gffcf ._adgf );if _cde !=nil {return _ff .Wrap (_cde ,_fcd ,"");};_aeab |=byte (_ffe <<_bcd );_aeac =((_aeac &0x7bf7)<<1)|_ffe |((_ffc >>_bcd )&0x10)|((_efae >>_bcd )&0x800);};if _afed :=_gffcf .Bitmap .SetByte (_gbef ,_aeab );_afed !=nil {return _ff .Wrap (_afed ,_fcd ,"");};_gbef ++;_ddc ++;};return nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_fbdb *SymbolDictionary )readNumberOfNewSymbols ()error {_gdgce ,_fcbed :=_fbdb ._eggb .ReadBits (32);if _fcbed !=nil {return _fcbed ;};_fbdb .NumberOfNewSymbols =uint32 (_gdgce &_f .MaxUint32 );return nil ;};func (_fdc *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_ebf ,_fbbe ,_bgc ,_af ,_eeg ,_bbg ,_aca ,_fce ,_fdb int )error {var (_dcg ,_gcc ,_bff ,_ade ,_fda ,_efe int ;_bef byte ;_gga error ;);if _ebf > 0{_bef ,_gga =_fdc .RegionBitmap .GetByte (_aca -_bgc );if _gga !=nil {return _gga ;};_bff =int (_bef );};if _fce > 0&&_fce <=_fdc .ReferenceBitmap .Height {_bef ,_gga =_fdc .ReferenceBitmap .GetByte (_fdb -_af +_bbg );if _gga !=nil {return _gga ;};_ade =int (_bef )<<4;};if _fce >=0&&_fce < _fdc .ReferenceBitmap .Height {_bef ,_gga =_fdc .ReferenceBitmap .GetByte (_fdb +_bbg );if _gga !=nil {return _gga ;};_fda =int (_bef )<<1;};if _fce > -2&&_fce < _fdc .ReferenceBitmap .Height -1{_bef ,_gga =_fdc .ReferenceBitmap .GetByte (_fdb +_af +_bbg );if _gga !=nil {return _gga ;};_efe =int (_bef );};_dcg =((_bff >>5)&0x6)|((_efe >>2)&0x30)|(_fda &0x180)|(_ade &0xc00);var _cdc int ;for _gab :=0;_gab < _eeg ;_gab =_cdc {var _bfb int ;_cdc =_gab +8;var _abe int ;if _abe =_fbbe -_gab ;_abe > 8{_abe =8;};_bca :=_cdc < _fbbe ;_adg :=_cdc < _fdc .ReferenceBitmap .Width ;_da :=_bbg +1;if _ebf > 0{_bef =0;if _bca {_bef ,_gga =_fdc .RegionBitmap .GetByte (_aca -_bgc +1);if _gga !=nil {return _gga ;};};_bff =(_bff <<8)|int (_bef );};if _fce > 0&&_fce <=_fdc .ReferenceBitmap .Height {var _cff int ;if _adg {_bef ,_gga =_fdc .ReferenceBitmap .GetByte (_fdb -_af +_da );if _gga !=nil {return _gga ;};_cff =int (_bef )<<4;};_ade =(_ade <<8)|_cff ;};if _fce >=0&&_fce < _fdc .ReferenceBitmap .Height {var _cfe int ;if _adg {_bef ,_gga =_fdc .ReferenceBitmap .GetByte (_fdb +_da );if _gga !=nil {return _gga ;};_cfe =int (_bef )<<1;};_fda =(_fda <<8)|_cfe ;};if _fce > -2&&_fce < (_fdc .ReferenceBitmap .Height -1){_bef =0;if _adg {_bef ,_gga =_fdc .ReferenceBitmap .GetByte (_fdb +_af +_da );if _gga !=nil {return _gga ;};};_efe =(_efe <<8)|int (_bef );};for _abf :=0;_abf < _abe ;_abf ++{var _efa int ;_bfcd :=false ;_bec :=(_dcg >>4)&0x1ff;if _bec ==0x1ff{_bfcd =true ;_efa =1;}else if _bec ==0x00{_bfcd =true ;};if !_bfcd {if _fdc ._cc {_gcc =_fdc .overrideAtTemplate0 (_dcg ,_gab +_abf ,_ebf ,_bfb ,_abf );_fdc ._db .SetIndex (int32 (_gcc ));}else {_fdc ._db .SetIndex (int32 (_dcg ));};_efa ,_gga =_fdc ._eg .DecodeBit (_fdc ._db );if _gga !=nil {return _gga ;};};_gce :=uint (7-_abf );_bfb |=_efa <<_gce ;_dcg =((_dcg &0xdb6)<<1)|_efa |(_bff >>_gce +5)&0x002|((_efe >>_gce +2)&0x010)|((_fda >>_gce )&0x080)|((_ade >>_gce )&0x400);};_gga =_fdc .RegionBitmap .SetByte (_aca ,byte (_bfb ));if _gga !=nil {return _gga ;};_aca ++;_fdb ++;};return nil ;};func (_gfac *SymbolDictionary )Encode (w _gc .BinaryWriter )(_bee int ,_debe error ){const _acedb ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";if _gfac ==nil {return 0,_ff .Error (_acedb ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _bee ,_debe =_gfac .encodeFlags (w );_debe !=nil {return _bee ,_ff .Wrap (_debe ,_acedb ,"");};_dedbg ,_debe :=_gfac .encodeATFlags (w );if _debe !=nil {return _bee ,_ff .Wrap (_debe ,_acedb ,"");};_bee +=_dedbg ;if _dedbg ,_debe =_gfac .encodeRefinementATFlags (w );_debe !=nil {return _bee ,_ff .Wrap (_debe ,_acedb ,"");};_bee +=_dedbg ;if _dedbg ,_debe =_gfac .encodeNumSyms (w );_debe !=nil {return _bee ,_ff .Wrap (_debe ,_acedb ,"");};_bee +=_dedbg ;if _dedbg ,_debe =_gfac .encodeSymbols (w );_debe !=nil {return _bee ,_ff .Wrap (_debe ,_acedb ,"");};_bee +=_dedbg ;return _bee ,nil ;};func (_bcda *Header )Encode (w _gc .BinaryWriter )(_gegf int ,_fdccg error ){const _cbcg ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _gbfb _gc .BinaryWriter ;_bd .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _fdccg !=nil {_bd .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_fdccg );}else {_bd .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_bcda );_bd .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _bcda .SegmentData !=nil {_bgbc ,_aded :=_bcda .SegmentData .(SegmentEncoder );if !_aded {return 0,_ff .Errorf (_cbcg ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_bcda .SegmentData );};_gbfb =_gc .BufferedMSB ();_gegf ,_fdccg =_bgbc .Encode (_gbfb );if _fdccg !=nil {return 0,_ff .Wrap (_fdccg ,_cbcg ,"");};_bcda .SegmentDataLength =uint64 (_gegf );};if _bcda .pageSize ()==4{_bcda .PageAssociationFieldSize =true ;};var _abag int ;_abag ,_fdccg =_bcda .writeSegmentNumber (w );if _fdccg !=nil {return 0,_ff .Wrap (_fdccg ,_cbcg ,"");};_gegf +=_abag ;if _fdccg =_bcda .writeFlags (w );_fdccg !=nil {return _gegf ,_ff .Wrap (_fdccg ,_cbcg ,"");};_gegf ++;_abag ,_fdccg =_bcda .writeReferredToCount (w );if _fdccg !=nil {return 0,_ff .Wrap (_fdccg ,_cbcg ,"");};_gegf +=_abag ;_abag ,_fdccg =_bcda .writeReferredToSegments (w );if _fdccg !=nil {return 0,_ff .Wrap (_fdccg ,_cbcg ,"");};_gegf +=_abag ;_abag ,_fdccg =_bcda .writeSegmentPageAssociation (w );if _fdccg !=nil {return 0,_ff .Wrap (_fdccg ,_cbcg ,"");};_gegf +=_abag ;_abag ,_fdccg =_bcda .writeSegmentDataLength (w );if _fdccg !=nil {return 0,_ff .Wrap (_fdccg ,_cbcg ,"");};_gegf +=_abag ;_bcda .HeaderLength =int64 (_gegf )-int64 (_bcda .SegmentDataLength );if _gbfb !=nil {if _ ,_fdccg =w .Write (_gbfb .Data ());_fdccg !=nil {return _gegf ,_ff .Wrap (_fdccg ,_cbcg ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");};};return _gegf ,nil ;};func (_ggcd *PageInformationSegment )Size ()int {return 19};func (_cabd *GenericRegion )decodeTemplate2 (_adac ,_eecb ,_gcdb int ,_ccce ,_cecab int )(_ccea error ){const _ecdd ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";var (_dfge ,_ccceg int ;_cfc ,_gabg int ;_cdda byte ;_agd ,_efde int ;);if _adac >=1{_cdda ,_ccea =_cabd .Bitmap .GetByte (_cecab );if _ccea !=nil {return _ff .Wrap (_ccea ,_ecdd ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");};_cfc =int (_cdda );};if _adac >=2{_cdda ,_ccea =_cabd .Bitmap .GetByte (_cecab -_cabd .Bitmap .RowStride );if _ccea !=nil {return _ff .Wrap (_ccea ,_ecdd ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_gabg =int (_cdda )<<4;};_dfge =(_cfc >>3&0x7c)|(_gabg >>3&0x380);for _cdef :=0;_cdef < _gcdb ;_cdef =_agd {var (_bbd byte ;_ceef int ;);_agd =_cdef +8;if _fecg :=_eecb -_cdef ;_fecg > 8{_ceef =8;}else {_ceef =_fecg ;};if _adac > 0{_cfc <<=8;if _agd < _eecb {_cdda ,_ccea =_cabd .Bitmap .GetByte (_cecab +1);if _ccea !=nil {return _ff .Wrap (_ccea ,_ecdd ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_cfc |=int (_cdda );};};if _adac > 1{_gabg <<=8;if _agd < _eecb {_cdda ,_ccea =_cabd .Bitmap .GetByte (_cecab -_cabd .Bitmap .RowStride +1);if _ccea !=nil {return _ff .Wrap (_ccea ,_ecdd ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_gabg |=int (_cdda )<<4;};};for _becb :=0;_becb < _ceef ;_becb ++{_dgbg :=uint (10-_becb );if _cabd ._gcga {_ccceg =_cabd .overrideAtTemplate2 (_dfge ,_cdef +_becb ,_adac ,int (_bbd ),_becb );_cabd ._adgf .SetIndex (int32 (_ccceg ));}else {_cabd ._adgf .SetIndex (int32 (_dfge ));};_efde ,_ccea =_cabd ._cbbb .DecodeBit (_cabd ._adgf );if _ccea !=nil {return _ff .Wrap (_ccea ,_ecdd ,"");};_bbd |=byte (_efde <<uint (7-_becb ));_dfge =((_dfge &0x1bd)<<1)|_efde |((_cfc >>_dgbg )&0x4)|((_gabg >>_dgbg )&0x80);};if _aada :=_cabd .Bitmap .SetByte (_ccce ,_bbd );_aada !=nil {return _ff .Wrap (_aada ,_ecdd ,"");};_ccce ++;_cecab ++;};return nil ;};func (_dfe *GenericRefinementRegion )decodeTemplate (_ddg ,_bcb ,_efgb ,_bdg ,_cffc ,_bbf ,_ed ,_ccc ,_eegeg ,_dag int ,_gda templater )(_ca error ){var (_bgb ,_eec ,_bgbe ,_dfab ,_gac int16 ;_dfd ,_eef ,_dee ,_cfed int ;_ege byte ;);if _eegeg >=1&&(_eegeg -1)< _dfe .ReferenceBitmap .Height {_ege ,_ca =_dfe .ReferenceBitmap .GetByte (_dag -_bdg );if _ca !=nil {return ;};_dfd =int (_ege );};if _eegeg >=0&&(_eegeg )< _dfe .ReferenceBitmap .Height {_ege ,_ca =_dfe .ReferenceBitmap .GetByte (_dag );if _ca !=nil {return ;};_eef =int (_ege );};if _eegeg >=-1&&(_eegeg +1)< _dfe .ReferenceBitmap .Height {_ege ,_ca =_dfe .ReferenceBitmap .GetByte (_dag +_bdg );if _ca !=nil {return ;};_dee =int (_ege );};_dag ++;if _ddg >=1{_ege ,_ca =_dfe .RegionBitmap .GetByte (_ccc -_efgb );if _ca !=nil {return ;};_cfed =int (_ege );};_ccc ++;_gffc :=_dfe .ReferenceDX %8;_cdg :=6+_gffc ;_beb :=_dag %_bdg ;if _cdg >=0{if _cdg < 8{_bgb =int16 (_dfd >>uint (_cdg ))&0x07;};if _cdg < 8{_eec =int16 (_eef >>uint (_cdg ))&0x07;};if _cdg < 8{_bgbe =int16 (_dee >>uint (_cdg ))&0x07;};if _cdg ==6&&_beb > 1{if _eegeg >=1&&(_eegeg -1)< _dfe .ReferenceBitmap .Height {_ege ,_ca =_dfe .ReferenceBitmap .GetByte (_dag -_bdg -2);if _ca !=nil {return _ca ;};_bgb |=int16 (_ege <<2)&0x04;};if _eegeg >=0&&_eegeg < _dfe .ReferenceBitmap .Height {_ege ,_ca =_dfe .ReferenceBitmap .GetByte (_dag -2);if _ca !=nil {return _ca ;};_eec |=int16 (_ege <<2)&0x04;};if _eegeg >=-1&&_eegeg +1< _dfe .ReferenceBitmap .Height {_ege ,_ca =_dfe .ReferenceBitmap .GetByte (_dag +_bdg -2);if _ca !=nil {return _ca ;};_bgbe |=int16 (_ege <<2)&0x04;};};if _cdg ==0{_dfd =0;_eef =0;_dee =0;if _beb < _bdg -1{if _eegeg >=1&&_eegeg -1< _dfe .ReferenceBitmap .Height {_ege ,_ca =_dfe .ReferenceBitmap .GetByte (_dag -_bdg );if _ca !=nil {return _ca ;};_dfd =int (_ege );};if _eegeg >=0&&_eegeg < _dfe .ReferenceBitmap .Height {_ege ,_ca =_dfe .ReferenceBitmap .GetByte (_dag );if _ca !=nil {return _ca ;};_eef =int (_ege );};if _eegeg >=-1&&_eegeg +1< _dfe .ReferenceBitmap .Height {_ege ,_ca =_dfe .ReferenceBitmap .GetByte (_dag +_bdg );if _ca !=nil {return _ca ;};_dee =int (_ege );};};_dag ++;};}else {_bgb =int16 (_dfd <<1)&0x07;_eec =int16 (_eef <<1)&0x07;_bgbe =int16 (_dee <<1)&0x07;_dfd =0;_eef =0;_dee =0;if _beb < _bdg -1{if _eegeg >=1&&_eegeg -1< _dfe .ReferenceBitmap .Height {_ege ,_ca =_dfe .ReferenceBitmap .GetByte (_dag -_bdg );if _ca !=nil {return _ca ;};_dfd =int (_ege );};if _eegeg >=0&&_eegeg < _dfe .ReferenceBitmap .Height {_ege ,_ca =_dfe .ReferenceBitmap .GetByte (_dag );if _ca !=nil {return _ca ;};_eef =int (_ege );};if _eegeg >=-1&&_eegeg +1< _dfe .ReferenceBitmap .Height {_ege ,_ca =_dfe .ReferenceBitmap .GetByte (_dag +_bdg );if _ca !=nil {return _ca ;};_dee =int (_ege );};_dag ++;};_bgb |=int16 ((_dfd >>7)&0x07);_eec |=int16 ((_eef >>7)&0x07);_bgbe |=int16 ((_dee >>7)&0x07);};_dfab =int16 (_cfed >>6);_gac =0;_gdac :=(2-_gffc )%8;_dfd <<=uint (_gdac );_eef <<=uint (_gdac );_dee <<=uint (_gdac );_cfed <<=2;var _dgee int ;for _aagd :=0;_aagd < _bcb ;_aagd ++{_dfae :=_aagd &0x07;_ecb :=_gda .form (_bgb ,_eec ,_bgbe ,_dfab ,_gac );if _dfe ._cc {_ege ,_ca =_dfe .RegionBitmap .GetByte (_dfe .RegionBitmap .GetByteIndex (_aagd ,_ddg ));if _ca !=nil {return _ca ;};_dfe ._db .SetIndex (int32 (_dfe .overrideAtTemplate0 (int (_ecb ),_aagd ,_ddg ,int (_ege ),_dfae )));}else {_dfe ._db .SetIndex (int32 (_ecb ));};_dgee ,_ca =_dfe ._eg .DecodeBit (_dfe ._db );if _ca !=nil {return _ca ;};if _ca =_dfe .RegionBitmap .SetPixel (_aagd ,_ddg ,byte (_dgee ));_ca !=nil {return _ca ;};_bgb =((_bgb <<1)|0x01&int16 (_dfd >>7))&0x07;_eec =((_eec <<1)|0x01&int16 (_eef >>7))&0x07;_bgbe =((_bgbe <<1)|0x01&int16 (_dee >>7))&0x07;_dfab =((_dfab <<1)|0x01&int16 (_cfed >>7))&0x07;_gac =int16 (_dgee );if (_aagd -int (_dfe .ReferenceDX ))%8==5{_dfd =0;_eef =0;_dee =0;if ((_aagd -int (_dfe .ReferenceDX ))/8)+1< _dfe .ReferenceBitmap .RowStride {if _eegeg >=1&&(_eegeg -1)< _dfe .ReferenceBitmap .Height {_ege ,_ca =_dfe .ReferenceBitmap .GetByte (_dag -_bdg );if _ca !=nil {return _ca ;};_dfd =int (_ege );};if _eegeg >=0&&_eegeg < _dfe .ReferenceBitmap .Height {_ege ,_ca =_dfe .ReferenceBitmap .GetByte (_dag );if _ca !=nil {return _ca ;};_eef =int (_ege );};if _eegeg >=-1&&(_eegeg +1)< _dfe .ReferenceBitmap .Height {_ege ,_ca =_dfe .ReferenceBitmap .GetByte (_dag +_bdg );if _ca !=nil {return _ca ;};_dee =int (_ege );};};_dag ++;}else {_dfd <<=1;_eef <<=1;_dee <<=1;};if _dfae ==5&&_ddg >=1{if ((_aagd >>3)+1)>=_dfe .RegionBitmap .RowStride {_cfed =0;}else {_ege ,_ca =_dfe .RegionBitmap .GetByte (_ccc -_efgb );if _ca !=nil {return _ca ;};_cfed =int (_ege );};_ccc ++;}else {_cfed <<=1;};};return nil ;};func (_cfb *TableSegment )HtRS ()int32 {return _cfb ._cadb };func (_cffg *GenericRefinementRegion )setParameters (_fea *_ge .DecoderStats ,_deb *_ge .Decoder ,_bea int8 ,_ebd ,_fga uint32 ,_deg *_b .Bitmap ,_fee ,_eadf int32 ,_aaa bool ,_efc []int8 ,_addb []int8 ){_bd .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");if _fea !=nil {_cffg ._db =_fea ;};if _deb !=nil {_cffg ._eg =_deb ;};_cffg .TemplateID =_bea ;_cffg .RegionInfo .BitmapWidth =_ebd ;_cffg .RegionInfo .BitmapHeight =_fga ;_cffg .ReferenceBitmap =_deg ;_cffg .ReferenceDX =_fee ;_cffg .ReferenceDY =_eadf ;_cffg .IsTPGROn =_aaa ;_cffg .GrAtX =_efc ;_cffg .GrAtY =_addb ;_cffg .RegionBitmap =nil ;_bd .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_cffg );};func (_ggfac *PageInformationSegment )encodeStripingInformation (_dac _gc .BinaryWriter )(_cabba int ,_eccg error ){const _bbba ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";if !_ggfac .IsStripe {if _cabba ,_eccg =_dac .Write ([]byte {0x00,0x00});_eccg !=nil {return 0,_ff .Wrap (_eccg ,_bbba ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _cabba ,nil ;};_adacf :=make ([]byte ,2);_fe .BigEndian .PutUint16 (_adacf ,_ggfac .MaxStripeSize |1<<15);if _cabba ,_eccg =_dac .Write (_adacf );_eccg !=nil {return 0,_ff .Wrapf (_eccg ,_bbba ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_ggfac .MaxStripeSize );};return _cabba ,nil ;};func (_ceefd *HalftoneRegion )grayScaleDecoding (_fff int )([][]int ,error ){var (_aacf []int8 ;_aecb []int8 ;);if !_ceefd .IsMMREncoded {_aacf =make ([]int8 ,4);_aecb =make ([]int8 ,4);if _ceefd .HTemplate <=1{_aacf [0]=3;}else if _ceefd .HTemplate >=2{_aacf [0]=2;};_aecb [0]=-1;_aacf [1]=-3;_aecb [1]=-1;_aacf [2]=2;_aecb [2]=-2;_aacf [3]=-2;_aecb [3]=-2;};_eaf :=make ([]*_b .Bitmap ,_fff );_acc :=NewGenericRegion (_ceefd ._acbge );_acc .setParametersMMR (_ceefd .IsMMREncoded ,_ceefd .DataOffset ,_ceefd .DataLength ,_ceefd .HGridHeight ,_ceefd .HGridWidth ,_ceefd .HTemplate ,false ,_ceefd .HSkipEnabled ,_aacf ,_aecb );_ebgb :=_fff -1;var _gae error ;_eaf [_ebgb ],_gae =_acc .GetRegionBitmap ();if _gae !=nil {return nil ,_gae ;};for _ebgb > 0{_ebgb --;_acc .Bitmap =nil ;_eaf [_ebgb ],_gae =_acc .GetRegionBitmap ();if _gae !=nil {return nil ,_gae ;};if _gae =_ceefd .combineGrayscalePlanes (_eaf ,_ebgb );_gae !=nil {return nil ,_gae ;};};return _ceefd .computeGrayScalePlanes (_eaf ,_fff );};func (_fccb *HalftoneRegion )computeX (_cdcbe ,_ddaf int )int {return _fccb .shiftAndFill (int (_fccb .HGridX )+_cdcbe *int (_fccb .HRegionY )+_ddaf *int (_fccb .HRegionX ));};func (_ecbbd *PatternDictionary )readIsMMREncoded ()error {_gdgd ,_eegbe :=_ecbbd ._dbgb .ReadBit ();if _eegbe !=nil {return _eegbe ;};if _gdgd !=0{_ecbbd .IsMMREncoded =true ;};return nil ;};func (_ccfc *PatternDictionary )extractPatterns (_badg *_b .Bitmap )error {var _badf int ;_egeg :=make ([]*_b .Bitmap ,_ccfc .GrayMax +1);for _badf <=int (_ccfc .GrayMax ){_feec :=int (_ccfc .HdpWidth )*_badf ;_cegf :=_fb .Rect (_feec ,0,_feec +int (_ccfc .HdpWidth ),int (_ccfc .HdpHeight ));_ccaa ,_geaa :=_b .Extract (_cegf ,_badg );if _geaa !=nil {return _geaa ;};_egeg [_badf ]=_ccaa ;_badf ++;};_ccfc .Patterns =_egeg ;return nil ;};func (_dbdaa *GenericRegion )overrideAtTemplate1 (_ccb ,_dfdf ,_cda ,_aec ,_dceg int )int {_ccb &=0x1FF7;if _dbdaa .GBAtY [0]==0&&_dbdaa .GBAtX [0]>=-int8 (_dceg ){_ccb |=(_aec >>uint (7-(int8 (_dceg )+_dbdaa .GBAtX [0]))&0x1)<<3;}else {_ccb |=int (_dbdaa .getPixel (_dfdf +int (_dbdaa .GBAtX [0]),_cda +int (_dbdaa .GBAtY [0])))<<3;};return _ccb ;};func (_ggef *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_b .Points ,symbols *_b .Bitmaps ,classIDs *_cf .IntSlice ,boxes *_b .Boxes ,width ,height ,symBits int ){_ggef .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};_ggef ._eccfg =globalSymbolsMap ;_ggef ._gaec =localSymbolsMap ;_ggef ._egfec =comps ;_ggef ._ageg =inLL ;_ggef ._fefd =symbols ;_ggef ._gdee =classIDs ;_ggef ._ffbdg =boxes ;_ggef ._cgfg =symBits ;};func (_gdd *EndOfStripe )parseHeader (_ea *Header ,_be _gc .StreamReader )error {_bb ,_efg :=_gdd ._gg .ReadBits (32);if _efg !=nil {return _efg ;};_gdd ._fg =int (_bb &_f .MaxInt32 );return nil ;};func (_fa *GenericRegion )decodeLine (_gbc ,_fgc ,_gdb int )error {const _ecaf ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";_aeg :=_fa .Bitmap .GetByteIndex (0,_gbc );_aee :=_aeg -_fa .Bitmap .RowStride ;switch _fa .GBTemplate {case 0:if !_fa .UseExtTemplates {return _fa .decodeTemplate0a (_gbc ,_fgc ,_gdb ,_aeg ,_aee );};return _fa .decodeTemplate0b (_gbc ,_fgc ,_gdb ,_aeg ,_aee );case 1:return _fa .decodeTemplate1 (_gbc ,_fgc ,_gdb ,_aeg ,_aee );case 2:return _fa .decodeTemplate2 (_gbc ,_fgc ,_gdb ,_aeg ,_aee );case 3:return _fa .decodeTemplate3 (_gbc ,_fgc ,_gdb ,_aeg ,_aee );};return _ff .Errorf (_ecaf ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_fa .GBTemplate );};func (_df *GenericRefinementRegion )decodeTypicalPredictedLine (_ee ,_bad ,_cg ,_ffa ,_fc ,_gcg int )error {_ega :=_ee -int (_df .ReferenceDY );_fdfa :=_df .ReferenceBitmap .GetByteIndex (0,_ega );_ggf :=_df .RegionBitmap .GetByteIndex (0,_ee );var _gba error ;switch _df .TemplateID {case 0:_gba =_df .decodeTypicalPredictedLineTemplate0 (_ee ,_bad ,_cg ,_ffa ,_fc ,_gcg ,_ggf ,_ega ,_fdfa );case 1:_gba =_df .decodeTypicalPredictedLineTemplate1 (_ee ,_bad ,_cg ,_ffa ,_fc ,_gcg ,_ggf ,_ega ,_fdfa );};return _gba ;};func (_cfec *GenericRegion )setParameters (_efea bool ,_cgec ,_cgb int64 ,_dff ,_ccbg uint32 ){_cfec .IsMMREncoded =_efea ;_cfec .DataOffset =_cgec ;_cfec .DataLength =_cgb ;_cfec .RegionSegment .BitmapHeight =_dff ;_cfec .RegionSegment .BitmapWidth =_ccbg ;_cfec ._aea =nil ;_cfec .Bitmap =nil ;};func (_edbc *Header )GetSegmentData ()(Segmenter ,error ){var _gge Segmenter ;if _edbc .SegmentData !=nil {_gge =_edbc .SegmentData ;};if _gge ==nil {_gee ,_befe :=_ccee [_edbc .Type ];if !_befe {return nil ,_c .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_edbc .Type ,_edbc .Type );};_gge =_gee ();_bd .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_edbc .SegmentNumber ,_edbc .SegmentDataStartOffset );_eebbe ,_cccd :=_edbc .subInputReader ();if _cccd !=nil {return nil ,_cccd ;};if _dcfg :=_gge .Init (_edbc ,_eebbe );_dcfg !=nil {_bd .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_dcfg ,_gge );return nil ,_dcfg ;};_edbc .SegmentData =_gge ;};return _gge ,nil ;};func (_dega *PageInformationSegment )parseHeader ()(_bdgg error ){_bd .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");defer func (){var _ccae ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";if _bdgg !=nil {_ccae +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_bdgg .Error ();}else {_ccae +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_bd .Log .Trace (_ccae );}();if _bdgg =_dega .readWidthAndHeight ();_bdgg !=nil {return _bdgg ;};if _bdgg =_dega .readResolution ();_bdgg !=nil {return _bdgg ;};_ ,_bdgg =_dega ._eaa .ReadBit ();if _bdgg !=nil {return _bdgg ;};if _bdgg =_dega .readCombinationOperatorOverrideAllowed ();_bdgg !=nil {return _bdgg ;};if _bdgg =_dega .readRequiresAuxiliaryBuffer ();_bdgg !=nil {return _bdgg ;};if _bdgg =_dega .readCombinationOperator ();_bdgg !=nil {return _bdgg ;};if _bdgg =_dega .readDefaultPixelValue ();_bdgg !=nil {return _bdgg ;};if _bdgg =_dega .readContainsRefinement ();_bdgg !=nil {return _bdgg ;};if _bdgg =_dega .readIsLossless ();_bdgg !=nil {return _bdgg ;};if _bdgg =_dega .readIsStriped ();_bdgg !=nil {return _bdgg ;};if _bdgg =_dega .readMaxStripeSize ();_bdgg !=nil {return _bdgg ;};if _bdgg =_dega .checkInput ();_bdgg !=nil {return _bdgg ;};_bd .Log .Trace ("\u0025\u0073",_dega );return nil ;};func (_aabe *SymbolDictionary )encodeSymbols (_ebb _gc .BinaryWriter )(_bdef int ,_ddbb error ){const _bceb ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";_ddgf :=_cd .New ();_ddgf .Init ();_dgbf ,_ddbb :=_aabe ._eegf .SelectByIndexes (_aabe ._bagc );if _ddbb !=nil {return 0,_ff .Wrap (_ddbb ,_bceb ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_cbfa :=map[*_b .Bitmap ]int {};for _eddg ,_bbea :=range _dgbf .Values {_cbfa [_bbea ]=_eddg ;};_dgbf .SortByHeight ();var _dgd ,_fgbfe int ;_fcgf ,_ddbb :=_dgbf .GroupByHeight ();if _ddbb !=nil {return 0,_ff .Wrap (_ddbb ,_bceb ,"");};for _ ,_gcge :=range _fcgf .Values {_fdee :=_gcge .Values [0].Height ;_cdefc :=_fdee -_dgd ;if _ddbb =_ddgf .EncodeInteger (_cd .IADH ,_cdefc );_ddbb !=nil {return 0,_ff .Wrapf (_ddbb ,_bceb ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_cdefc );};_dgd =_fdee ;_ffee ,_bae :=_gcge .GroupByWidth ();if _bae !=nil {return 0,_ff .Wrapf (_bae ,_bceb ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_fdee );};var _gface int ;for _ ,_abed :=range _ffee .Values {for _ ,_adca :=range _abed .Values {_bfec :=_adca .Width ;_cbbd :=_bfec -_gface ;if _bae =_ddgf .EncodeInteger (_cd .IADW ,_cbbd );_bae !=nil {return 0,_ff .Wrapf (_bae ,_bceb ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_cbbd );};_gface +=_cbbd ;if _bae =_ddgf .EncodeBitmap (_adca ,false );_bae !=nil {return 0,_ff .Wrapf (_bae ,_bceb ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_fdee ,_bfec );};_dae :=_cbfa [_adca ];_aabe ._fcea [_dae ]=_fgbfe ;_fgbfe ++;};};if _bae =_ddgf .EncodeOOB (_cd .IADW );_bae !=nil {return 0,_ff .Wrap (_bae ,_bceb ,"\u0049\u0041\u0044\u0057");};};if _ddbb =_ddgf .EncodeInteger (_cd .IAEX ,0);_ddbb !=nil {return 0,_ff .Wrap (_ddbb ,_bceb ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};if _ddbb =_ddgf .EncodeInteger (_cd .IAEX ,len (_aabe ._bagc ));_ddbb !=nil {return 0,_ff .Wrap (_ddbb ,_bceb ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_ddgf .Final ();_dffd ,_ddbb :=_ddgf .WriteTo (_ebb );if _ddbb !=nil {return 0,_ff .Wrap (_ddbb ,_bceb ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");};return int (_dffd ),nil ;};func (_ac *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _ac .RegionInfo };func (_cea *template1 )form (_cbd ,_ae ,_egfe ,_gef ,_fcg int16 )int16 {return ((_cbd &0x02)<<8)|(_ae <<6)|((_egfe &0x03)<<4)|(_gef <<1)|_fcg ;};func (_gacg *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _gacg ._bfgg };func (_dgfb *PageInformationSegment )readIsStriped ()error {_gcdbd ,_dbaa :=_dgfb ._eaa .ReadBit ();if _dbaa !=nil {return _dbaa ;};if _gcdbd ==1{_dgfb .IsStripe =true ;};return nil ;};func (_fdab *PageInformationSegment )readContainsRefinement ()error {_efag ,_gea :=_fdab ._eaa .ReadBit ();if _gea !=nil {return _gea ;};if _efag ==1{_fdab ._gfcc =true ;};return nil ;};func (_eab *TextRegion )readHuffmanFlags ()error {var (_eaca int ;_fdbe uint64 ;_fad error ;);_ ,_fad =_eab ._egfgg .ReadBit ();if _fad !=nil {return _fad ;};_eaca ,_fad =_eab ._egfgg .ReadBit ();if _fad !=nil {return _fad ;};_eab .SbHuffRSize =int8 (_eaca );_fdbe ,_fad =_eab ._egfgg .ReadBits (2);if _fad !=nil {return _fad ;};_eab .SbHuffRDY =int8 (_fdbe )&0xf;_fdbe ,_fad =_eab ._egfgg .ReadBits (2);if _fad !=nil {return _fad ;};_eab .SbHuffRDX =int8 (_fdbe )&0xf;_fdbe ,_fad =_eab ._egfgg .ReadBits (2);if _fad !=nil {return _fad ;};_eab .SbHuffRDHeight =int8 (_fdbe )&0xf;_fdbe ,_fad =_eab ._egfgg .ReadBits (2);if _fad !=nil {return _fad ;};_eab .SbHuffRDWidth =int8 (_fdbe )&0xf;_fdbe ,_fad =_eab ._egfgg .ReadBits (2);if _fad !=nil {return _fad ;};_eab .SbHuffDT =int8 (_fdbe )&0xf;_fdbe ,_fad =_eab ._egfgg .ReadBits (2);if _fad !=nil {return _fad ;};_eab .SbHuffDS =int8 (_fdbe )&0xf;_fdbe ,_fad =_eab ._egfgg .ReadBits (2);if _fad !=nil {return _fad ;};_eab .SbHuffFS =int8 (_fdbe )&0xf;return nil ;};func (_dccc *PageInformationSegment )readWidthAndHeight ()error {_fcgcc ,_baaed :=_dccc ._eaa .ReadBits (32);if _baaed !=nil {return _baaed ;};_dccc .PageBMWidth =int (_fcgcc &_f .MaxInt32 );_fcgcc ,_baaed =_dccc ._eaa .ReadBits (32);if _baaed !=nil {return _baaed ;};_dccc .PageBMHeight =int (_fcgcc &_f .MaxInt32 );return nil ;};var _ templater =&template0 {};type PatternDictionary struct{_dbgb _gc .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_b .Bitmap ;GrayMax uint32 ;};func (_gfca *SymbolDictionary )setCodingStatistics ()error {if _gfca ._fedf ==nil {_gfca ._fedf =_ge .NewStats (512,1);};if _gfca ._dead ==nil {_gfca ._dead =_ge .NewStats (512,1);};if _gfca ._adee ==nil {_gfca ._adee =_ge .NewStats (512,1);};if _gfca ._deeb ==nil {_gfca ._deeb =_ge .NewStats (512,1);};if _gfca ._badb ==nil {_gfca ._badb =_ge .NewStats (512,1);};if _gfca .UseRefinementAggregation &&_gfca ._fdcf ==nil {_gfca ._fdcf =_ge .NewStats (1<<uint (_gfca ._ggee ),1);_gfca ._bafc =_ge .NewStats (512,1);_gfca ._eeed =_ge .NewStats (512,1);};if _gfca ._bgcee ==nil {_gfca ._bgcee =_ge .NewStats (65536,1);};if _gfca ._cceeb ==nil {var _gddf error ;_gfca ._cceeb ,_gddf =_ge .New (_gfca ._eggb );if _gddf !=nil {return _gddf ;};};return nil ;};type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_b .Bitmap ,error );};func (_ceed *HalftoneRegion )GetRegionBitmap ()(*_b .Bitmap ,error ){if _ceed .HalftoneRegionBitmap !=nil {return _ceed .HalftoneRegionBitmap ,nil ;};var _aaga error ;_ceed .HalftoneRegionBitmap =_b .New (int (_ceed .RegionSegment .BitmapWidth ),int (_ceed .RegionSegment .BitmapHeight ));if _ceed .Patterns ==nil ||len (_ceed .Patterns )==0{_ceed .Patterns ,_aaga =_ceed .GetPatterns ();if _aaga !=nil {return nil ,_aaga ;};};if _ceed .HDefaultPixel ==1{_ceed .HalftoneRegionBitmap .SetDefaultPixel ();};_aced :=_f .Ceil (_f .Log (float64 (len (_ceed .Patterns )))/_f .Log (2));_eccb :=int (_aced );var _ede [][]int ;_ede ,_aaga =_ceed .grayScaleDecoding (_eccb );if _aaga !=nil {return nil ,_aaga ;};if _aaga =_ceed .renderPattern (_ede );_aaga !=nil {return nil ,_aaga ;};return _ceed .HalftoneRegionBitmap ,nil ;};func (_ffdd *TextRegion )decodeDT ()(_dcba int64 ,_dbgg error ){if _ffdd .IsHuffmanEncoded {if _ffdd .SbHuffDT ==3{_dcba ,_dbgg =_ffdd ._edeg .Decode (_ffdd ._egfgg );if _dbgg !=nil {return 0,_dbgg ;};}else {var _dgfa _ag .Tabler ;_dgfa ,_dbgg =_ag .GetStandardTable (11+int (_ffdd .SbHuffDT ));if _dbgg !=nil {return 0,_dbgg ;};_dcba ,_dbgg =_dgfa .Decode (_ffdd ._egfgg );if _dbgg !=nil {return 0,_dbgg ;};};}else {var _dbab int32 ;_dbab ,_dbgg =_ffdd ._fefe .DecodeInt (_ffdd ._gdga );if _dbgg !=nil {return ;};_dcba =int64 (_dbab );};_dcba *=int64 (_ffdd .SbStrips );return _dcba ,nil ;};func (_edce *TableSegment )HtHigh ()int32 {return _edce ._cacc };var _ SegmentEncoder =&GenericRegion {};func (_edgf Type )String ()string {switch _edgf {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_ebg *GenericRegion )decodeTemplate0a (_ddd ,_daf ,_gccg int ,_eefd ,_degb int )(_deee error ){const _cfdg ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";var (_gcgg ,_dcgf int ;_ggb ,_edg int ;_efab byte ;_eff int ;);if _ddd >=1{_efab ,_deee =_ebg .Bitmap .GetByte (_degb );if _deee !=nil {return _ff .Wrap (_deee ,_cfdg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_ggb =int (_efab );};if _ddd >=2{_efab ,_deee =_ebg .Bitmap .GetByte (_degb -_ebg .Bitmap .RowStride );if _deee !=nil {return _ff .Wrap (_deee ,_cfdg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_edg =int (_efab )<<6;};_gcgg =(_ggb &0xf0)|(_edg &0x3800);for _aaac :=0;_aaac < _gccg ;_aaac =_eff {var (_dbb byte ;_cdge int ;);_eff =_aaac +8;if _dafc :=_daf -_aaac ;_dafc > 8{_cdge =8;}else {_cdge =_dafc ;};if _ddd > 0{_ggb <<=8;if _eff < _daf {_efab ,_deee =_ebg .Bitmap .GetByte (_degb +1);if _deee !=nil {return _ff .Wrap (_deee ,_cfdg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_ggb |=int (_efab );};};if _ddd > 1{_bce :=_degb -_ebg .Bitmap .RowStride +1;_edg <<=8;if _eff < _daf {_efab ,_deee =_ebg .Bitmap .GetByte (_bce );if _deee !=nil {return _ff .Wrap (_deee ,_cfdg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_edg |=int (_efab )<<6;}else {_edg |=0;};};for _dbca :=0;_dbca < _cdge ;_dbca ++{_eaef :=uint (7-_dbca );if _ebg ._gcga {_dcgf =_ebg .overrideAtTemplate0a (_gcgg ,_aaac +_dbca ,_ddd ,int (_dbb ),_dbca ,int (_eaef ));_ebg ._adgf .SetIndex (int32 (_dcgf ));}else {_ebg ._adgf .SetIndex (int32 (_gcgg ));};var _bfe int ;_bfe ,_deee =_ebg ._cbbb .DecodeBit (_ebg ._adgf );if _deee !=nil {return _ff .Wrap (_deee ,_cfdg ,"");};_dbb |=byte (_bfe )<<_eaef ;_gcgg =((_gcgg &0x7bf7)<<1)|_bfe |((_ggb >>_eaef )&0x10)|((_edg >>_eaef )&0x800);};if _gcb :=_ebg .Bitmap .SetByte (_eefd ,_dbb );_gcb !=nil {return _ff .Wrap (_gcb ,_cfdg ,"");};_eefd ++;_degb ++;};return nil ;};func (_ecaa *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _ecaa .SdHuffDecodeHeightSelection {case 0:_abeb ,_ccegd :=_ag .GetStandardTable (4);if _ccegd !=nil {return 0,_ccegd ;};return _abeb .Decode (_ecaa ._eggb );case 1:_dggec ,_dcccb :=_ag .GetStandardTable (5);if _dcccb !=nil {return 0,_dcccb ;};return _dggec .Decode (_ecaa ._eggb );case 3:if _ecaa ._agfb ==nil {_ccaec ,_fcbg :=_ag .GetStandardTable (0);if _fcbg !=nil {return 0,_fcbg ;};_ecaa ._agfb =_ccaec ;};return _ecaa ._agfb .Decode (_ecaa ._eggb );};return 0,nil ;};func (_bbe *template0 )form (_dgg ,_fec ,_gdc ,_cbb ,_fcb int16 )int16 {return (_dgg <<10)|(_fec <<7)|(_gdc <<4)|(_cbb <<1)|_fcb ;};func (_gcef *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _gcef ._ebcc ==nil {var (_bcfb int ;_bdge error ;);if _gcef .SdHuffDecodeHeightSelection ==3{_bcfb ++;};if _gcef .SdHuffDecodeWidthSelection ==3{_bcfb ++;};_gcef ._ebcc ,_bdge =_gcef .getUserTable (_bcfb );if _bdge !=nil {return 0,_bdge ;};};return _gcef ._ebcc .Decode (_gcef ._eggb );};func (_eebf *GenericRegion )readGBAtPixels (_fdfg int )error {const _gada ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_eebf .GBAtX =make ([]int8 ,_fdfg );_eebf .GBAtY =make ([]int8 ,_fdfg );for _fbe :=0;_fbe < _fdfg ;_fbe ++{_fcbe ,_fgf :=_eebf ._afd .ReadByte ();if _fgf !=nil {return _ff .Wrapf (_fgf ,_gada ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_fbe );};_eebf .GBAtX [_fbe ]=int8 (_fcbe );_fcbe ,_fgf =_eebf ._afd .ReadByte ();if _fgf !=nil {return _ff .Wrapf (_fgf ,_gada ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_fbe );};_eebf .GBAtY [_fbe ]=int8 (_fcbe );};return nil ;};func (_dccac *RegionSegment )Size ()int {return 17};func (_gacad *TextRegion )decodeSymbolInstances ()error {_cded ,_geaacc :=_gacad .decodeStripT ();if _geaacc !=nil {return _geaacc ;};var (_badc int64 ;_bfcg uint32 ;);for _bfcg < _gacad .NumberOfSymbolInstances {_fdbd ,_bgcf :=_gacad .decodeDT ();if _bgcf !=nil {return _bgcf ;};_cded +=_fdbd ;var _dgba int64 ;_fbba :=true ;_gacad ._dadf =0;for {if _fbba {_dgba ,_bgcf =_gacad .decodeDfs ();if _bgcf !=nil {return _bgcf ;};_badc +=_dgba ;_gacad ._dadf =_badc ;_fbba =false ;}else {_geef ,_eaga :=_gacad .decodeIds ();if _dg .Is (_eaga ,_gd .ErrOOB ){break ;};if _eaga !=nil {return _eaga ;};if _bfcg >=_gacad .NumberOfSymbolInstances {break ;};_gacad ._dadf +=_geef +int64 (_gacad .SbDsOffset );};_ebcfb ,_adggf :=_gacad .decodeCurrentT ();if _adggf !=nil {return _adggf ;};_gdgg :=_cded +_ebcfb ;_deege ,_adggf :=_gacad .decodeID ();if _adggf !=nil {return _adggf ;};_adfg ,_adggf :=_gacad .decodeRI ();if _adggf !=nil {return _adggf ;};_egaf ,_adggf :=_gacad .decodeIb (_adfg ,_deege );if _adggf !=nil {return _adggf ;};if _adggf =_gacad .blit (_egaf ,_gdgg );_adggf !=nil {return _adggf ;};_bfcg ++;};};return nil ;};type Regioner interface{GetRegionBitmap ()(*_b .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_fcbb *RegionSegment )String ()string {_ggde :=&_e .Builder {};_ggde .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");_ggde .WriteString (_c .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_fcbb .BitmapWidth ,_fcbb .BitmapHeight ));_ggde .WriteString (_c .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_fcbb .XLocation ,_fcbb .YLocation ));_ggde .WriteString (_c .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_fcbb .CombinaionOperator ));return _ggde .String ();};func (_aceag *SymbolDictionary )setAtPixels ()error {if _aceag .IsHuffmanEncoded {return nil ;};_ecdg :=1;if _aceag .SdTemplate ==0{_ecdg =4;};if _ecdc :=_aceag .readAtPixels (_ecdg );_ecdc !=nil {return _ecdc ;};return nil ;};func (_fbg *GenericRegion )setParametersWithAt (_feae bool ,_bba byte ,_fed ,_deeg bool ,_ece ,_egad []int8 ,_aeeb ,_ggbd uint32 ,_dffb *_ge .DecoderStats ,_fdcc *_ge .Decoder ){_fbg .IsMMREncoded =_feae ;_fbg .GBTemplate =_bba ;_fbg .IsTPGDon =_fed ;_fbg .GBAtX =_ece ;_fbg .GBAtY =_egad ;_fbg .RegionSegment .BitmapHeight =_ggbd ;_fbg .RegionSegment .BitmapWidth =_aeeb ;_fbg ._aea =nil ;_fbg .Bitmap =nil ;if _dffb !=nil {_fbg ._adgf =_dffb ;};if _fdcc !=nil {_fbg ._cbbb =_fdcc ;};_bd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_fbg );};func (_acd *GenericRefinementRegion )parseHeader ()(_aadc error ){_bd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");_dbf :=_fd .Now ();defer func (){if _aadc ==nil {_bd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_fd .Since (_dbf ).Nanoseconds ());}else {_bd .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_aadc );};}();if _aadc =_acd .RegionInfo .parseHeader ();_aadc !=nil {return _aadc ;};_ ,_aadc =_acd ._fbb .ReadBits (6);if _aadc !=nil {return _aadc ;};_acd .IsTPGROn ,_aadc =_acd ._fbb .ReadBool ();if _aadc !=nil {return _aadc ;};var _dba int ;_dba ,_aadc =_acd ._fbb .ReadBit ();if _aadc !=nil {return _aadc ;};_acd .TemplateID =int8 (_dba );switch _acd .TemplateID {case 0:_acd .Template =_acd ._gb ;if _aadc =_acd .readAtPixels ();_aadc !=nil {return ;};case 1:_acd .Template =_acd ._ba ;};return nil ;};func (_eadff *SymbolDictionary )decodeHeightClassCollectiveBitmap (_bdfa int64 ,_fedd ,_cgg uint32 )(*_b .Bitmap ,error ){if _bdfa ==0{_efaa :=_b .New (int (_cgg ),int (_fedd ));var (_ffeg byte ;_eafe error ;);for _dfce :=0;_dfce < len (_efaa .Data );_dfce ++{_ffeg ,_eafe =_eadff ._eggb .ReadByte ();if _eafe !=nil {return nil ,_eafe ;};if _eafe =_efaa .SetByte (_dfce ,_ffeg );_eafe !=nil {return nil ,_eafe ;};};return _efaa ,nil ;};if _eadff ._adfb ==nil {_eadff ._adfb =NewGenericRegion (_eadff ._eggb );};_eadff ._adfb .setParameters (true ,_eadff ._eggb .StreamPosition (),_bdfa ,_fedd ,_cgg );_cdcg ,_fdac :=_eadff ._adfb .GetRegionBitmap ();if _fdac !=nil {return nil ,_fdac ;};return _cdcg ,nil ;};func (_aaed *TextRegion )decodeCurrentT ()(int64 ,error ){if _aaed .SbStrips !=1{if _aaed .IsHuffmanEncoded {_ddcc ,_egdg :=_aaed ._egfgg .ReadBits (byte (_aaed .LogSBStrips ));return int64 (_ddcc ),_egdg ;};_ggbc ,_efec :=_aaed ._fefe .DecodeInt (_aaed ._dbdf );if _efec !=nil {return 0,_efec ;};return int64 (_ggbc ),nil ;};return 0,nil ;};func _begf (_gbee _gc .StreamReader ,_defaf *Header )*TextRegion {_fbfe :=&TextRegion {_egfgg :_gbee ,Header :_defaf ,RegionInfo :NewRegionSegment (_gbee )};return _fbfe ;};func (_fgde *TableSegment )StreamReader ()_gc .StreamReader {return _fgde ._gdadd };func (_dgaa *SymbolDictionary )encodeATFlags (_ffgga _gc .BinaryWriter )(_agfg int ,_aabd error ){const _dafe ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _dgaa .IsHuffmanEncoded ||_dgaa .SdTemplate !=0{return 0,nil ;};_cadc :=4;if _dgaa .SdTemplate !=0{_cadc =1;};for _ebcd :=0;_ebcd < _cadc ;_ebcd ++{if _aabd =_ffgga .WriteByte (byte (_dgaa .SdATX [_ebcd ]));_aabd !=nil {return _agfg ,_ff .Wrapf (_aabd ,_dafe ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_ebcd );};_agfg ++;if _aabd =_ffgga .WriteByte (byte (_dgaa .SdATY [_ebcd ]));_aabd !=nil {return _agfg ,_ff .Wrapf (_aabd ,_dafe ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_ebcd );};_agfg ++;};return _agfg ,nil ;};func NewHeader (d Documenter ,r _gc .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_cdeg :=&Header {Reader :r };if _adbd :=_cdeg .parse (d ,r ,offset ,organizationType );_adbd !=nil {return nil ,_ff .Wrap (_adbd ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _cdeg ,nil ;};func (_gag *Header )readSegmentPageAssociation (_ecab Documenter ,_bfga _gc .StreamReader ,_ceag uint64 ,_deae ...int )(_ccbb error ){const _gfa ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";if !_gag .PageAssociationFieldSize {_ccbga ,_cbf :=_bfga .ReadBits (8);if _cbf !=nil {return _ff .Wrap (_cbf ,_gfa ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gag .PageAssociation =int (_ccbga &0xFF);}else {_acea ,_eadc :=_bfga .ReadBits (32);if _eadc !=nil {return _ff .Wrap (_eadc ,_gfa ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_gag .PageAssociation =int (_acea &_f .MaxInt32 );};if _ceag ==0{return nil ;};if _gag .PageAssociation !=0{_cgfd ,_bbeg :=_ecab .GetPage (_gag .PageAssociation );if _bbeg !=nil {return _ff .Wrap (_bbeg ,_gfa ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _dcda int ;for _acag :=uint64 (0);_acag < _ceag ;_acag ++{_dcda =_deae [_acag ];_gag .RTSegments [_acag ],_bbeg =_cgfd .GetSegment (_dcda );if _bbeg !=nil {var _gdgc error ;_gag .RTSegments [_acag ],_gdgc =_ecab .GetGlobalSegment (_dcda );if _gdgc !=nil {return _ff .Wrapf (_bbeg ,_gfa ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_gag .PageAssociation );};};};return nil ;};for _gcba :=uint64 (0);_gcba < _ceag ;_gcba ++{_gag .RTSegments [_gcba ],_ccbb =_ecab .GetGlobalSegment (_deae [_gcba ]);if _ccbb !=nil {return _ff .Wrapf (_ccbb ,_gfa ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_deae [_gcba ]);};};return nil ;};func (_gccc *TextRegion )computeSymbolCodeLength ()error {if _gccc .IsHuffmanEncoded {return _gccc .symbolIDCodeLengths ();};_gccc ._gdbe =int8 (_f .Ceil (_f .Log (float64 (_gccc .NumberOfSymbols ))/_f .Log (2)));return nil ;};func (_bffe *SymbolDictionary )setRefinementAtPixels ()error {if !_bffe .UseRefinementAggregation ||_bffe .SdrTemplate !=0{return nil ;};if _ddaff :=_bffe .readRefinementAtPixels (2);_ddaff !=nil {return _ddaff ;};return nil ;};func (_defe *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _gacc ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";if _defe .SbHuffRSize ==0{_bgac ,_bbgc :=_ag .GetStandardTable (1);if _bbgc !=nil {return 0,_ff .Wrap (_bbgc ,_gacc ,"");};return _bgac .Decode (_defe ._egfgg );};if _defe ._edcd ==nil {var (_cbfg int ;_gegaa error ;);if _defe .SbHuffFS ==3{_cbfg ++;};if _defe .SbHuffDS ==3{_cbfg ++;};if _defe .SbHuffDT ==3{_cbfg ++;};if _defe .SbHuffRDWidth ==3{_cbfg ++;};if _defe .SbHuffRDHeight ==3{_cbfg ++;};if _defe .SbHuffRDX ==3{_cbfg ++;};if _defe .SbHuffRDY ==3{_cbfg ++;};_defe ._edcd ,_gegaa =_defe .getUserTable (_cbfg );if _gegaa !=nil {return 0,_ff .Wrap (_gegaa ,_gacc ,"");};};_ggfc ,_efba :=_defe ._edcd .Decode (_defe ._egfgg );if _efba !=nil {return 0,_ff .Wrap (_efba ,_gacc ,"");};return _ggfc ,nil ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);func (_aceb *PatternDictionary )readPatternWidthAndHeight ()error {_aabc ,_cgbg :=_aceb ._dbgb .ReadByte ();if _cgbg !=nil {return _cgbg ;};_aceb .HdpWidth =_aabc ;_aabc ,_cgbg =_aceb ._dbgb .ReadByte ();if _cgbg !=nil {return _cgbg ;};_aceb .HdpHeight =_aabc ;return nil ;};func (_gedb *TextRegion )createRegionBitmap ()error {_gedb .RegionBitmap =_b .New (int (_gedb .RegionInfo .BitmapWidth ),int (_gedb .RegionInfo .BitmapHeight ));if _gedb .DefaultPixel !=0{_gedb .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_cbce *Header )writeSegmentNumber (_egae _gc .BinaryWriter )(_bdcf int ,_bfcdf error ){_dedf :=make ([]byte ,4);_fe .BigEndian .PutUint32 (_dedf ,_cbce .SegmentNumber );if _bdcf ,_bfcdf =_egae .Write (_dedf );_bfcdf !=nil {return 0,_ff .Wrap (_bfcdf ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");};return _bdcf ,nil ;};func (_ebgc *TextRegion )GetRegionBitmap ()(*_b .Bitmap ,error ){if _ebgc .RegionBitmap !=nil {return _ebgc .RegionBitmap ,nil ;};if !_ebgc .IsHuffmanEncoded {if _bbef :=_ebgc .setCodingStatistics ();_bbef !=nil {return nil ,_bbef ;};};if _adcce :=_ebgc .createRegionBitmap ();_adcce !=nil {return nil ,_adcce ;};if _dgbdd :=_ebgc .decodeSymbolInstances ();_dgbdd !=nil {return nil ,_dgbdd ;};return _ebgc .RegionBitmap ,nil ;};func _gbgd (_acf _gc .StreamReader ,_gbgg *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_fbb :_acf ,RegionInfo :NewRegionSegment (_acf ),_bc :_gbgg ,_gb :&template0 {},_ba :&template1 {}};};func (_beac *PageInformationSegment )CombinationOperator ()_b .CombinationOperator {return _beac ._bffa };func (_dgbd *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _dgbd .IsHuffmanEncoded {return _dgbd .decodeHeightClassDeltaHeightWithHuffman ();};_cceef ,_bfd :=_dgbd ._cceeb .DecodeInt (_dgbd ._dead );if _bfd !=nil {return 0,_bfd ;};return int64 (_cceef ),nil ;};func (_cdgg *PageInformationSegment )readDefaultPixelValue ()error {_fdbb ,_ffd :=_cdgg ._eaa .ReadBit ();if _ffd !=nil {return _ffd ;};_cdgg ._aefb =uint8 (_fdbb &0xf);return nil ;};func (_efecb *TextRegion )decodeRdh ()(int64 ,error ){const _fcdg ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _efecb .IsHuffmanEncoded {if _efecb .SbHuffRDHeight ==3{if _efecb ._dbfc ==nil {var (_accc int ;_gfbd error ;);if _efecb .SbHuffFS ==3{_accc ++;};if _efecb .SbHuffDS ==3{_accc ++;};if _efecb .SbHuffDT ==3{_accc ++;};if _efecb .SbHuffRDWidth ==3{_accc ++;};_efecb ._dbfc ,_gfbd =_efecb .getUserTable (_accc );if _gfbd !=nil {return 0,_ff .Wrap (_gfbd ,_fcdg ,"");};};return _efecb ._dbfc .Decode (_efecb ._egfgg );};_ccda ,_cfbb :=_ag .GetStandardTable (14+int (_efecb .SbHuffRDHeight ));if _cfbb !=nil {return 0,_ff .Wrap (_cfbb ,_fcdg ,"");};return _ccda .Decode (_efecb ._egfgg );};_dcec ,_cefd :=_efecb ._fefe .DecodeInt (_efecb ._abggg );if _cefd !=nil {return 0,_ff .Wrap (_cefd ,_fcdg ,"");};return int64 (_dcec ),nil ;};func (_bdfc *SymbolDictionary )Init (h *Header ,r _gc .StreamReader )error {_bdfc .Header =h ;_bdfc ._eggb =r ;return _bdfc .parseHeader ();};var (_bgfc Segmenter ;_ccee =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _bgfc },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _bgfc },TProfiles :func ()Segmenter {return _bgfc },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _bgfc },TBitmap :func ()Segmenter {return _bgfc }};);func (_ebcf *SymbolDictionary )decodeNewSymbols (_egce ,_gddda uint32 ,_aeda *_b .Bitmap ,_ecfca ,_cbfe int32 )error {if _ebcf ._cbbbb ==nil {_ebcf ._cbbbb =_gbgd (_ebcf ._eggb ,nil );if _ebcf ._cceeb ==nil {var _geaad error ;_ebcf ._cceeb ,_geaad =_ge .New (_ebcf ._eggb );if _geaad !=nil {return _geaad ;};};if _ebcf ._bgcee ==nil {_ebcf ._bgcee =_ge .NewStats (65536,1);};};_ebcf ._cbbbb .setParameters (_ebcf ._bgcee ,_ebcf ._cceeb ,_ebcf .SdrTemplate ,_egce ,_gddda ,_aeda ,_ecfca ,_cbfe ,false ,_ebcf .SdrATX ,_ebcf .SdrATY );return _ebcf .addSymbol (_ebcf ._cbbbb );};func (_cgda *PatternDictionary )checkInput ()error {if _cgda .HdpHeight < 1||_cgda .HdpWidth < 1{return _d .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");};if _cgda .IsMMREncoded {if _cgda .HDTemplate !=0{_bd .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");};};return nil ;};func (_cdegf *Header )writeReferredToSegments (_aeeg _gc .BinaryWriter )(_eccf int ,_bfgb error ){const _agc ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";var (_bedg uint16 ;_cag uint32 ;);_faf :=_cdegf .referenceSize ();_bgcb :=1;_dbcc :=make ([]byte ,_faf );for _ ,_dagg :=range _cdegf .RTSNumbers {switch _faf {case 4:_cag =uint32 (_dagg );_fe .BigEndian .PutUint32 (_dbcc ,_cag );_bgcb ,_bfgb =_aeeg .Write (_dbcc );if _bfgb !=nil {return 0,_ff .Wrap (_bfgb ,_agc ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");};case 2:_bedg =uint16 (_dagg );_fe .BigEndian .PutUint16 (_dbcc ,_bedg );_bgcb ,_bfgb =_aeeg .Write (_dbcc );if _bfgb !=nil {return 0,_ff .Wrap (_bfgb ,_agc ,"\u0075\u0069\u006e\u0074\u0031\u0036");};default:if _bfgb =_aeeg .WriteByte (byte (_dagg ));_bfgb !=nil {return 0,_ff .Wrap (_bfgb ,_agc ,"\u0075\u0069\u006et\u0038");};};_eccf +=_bgcb ;};return _eccf ,nil ;};func (_ec *GenericRefinementRegion )Init (header *Header ,r _gc .StreamReader )error {_ec ._bc =header ;_ec ._fbb =r ;_ec .RegionInfo =NewRegionSegment (r );return _ec .parseHeader ();};func (_aeb *GenericRegion )getPixel (_gbag ,_abg int )int8 {if _gbag < 0||_gbag >=_aeb .Bitmap .Width {return 0;};if _abg < 0||_abg >=_aeb .Bitmap .Height {return 0;};if _aeb .Bitmap .GetPixel (_gbag ,_abg ){return 1;};return 0;};func (_baf *Header )referenceSize ()uint {switch {case _baf .SegmentNumber <=255:return 1;case _baf .SegmentNumber <=65535:return 2;default:return 4;};};func (_cgc *GenericRegion )overrideAtTemplate0b (_cfgc ,_baae ,_cef ,_fcad ,_ccg ,_aacc int )int {if _cgc .GBAtOverride [0]{_cfgc &=0xFFFD;if _cgc .GBAtY [0]==0&&_cgc .GBAtX [0]>=-int8 (_ccg ){_cfgc |=(_fcad >>uint (int8 (_aacc )-_cgc .GBAtX [0]&0x1))<<1;}else {_cfgc |=int (_cgc .getPixel (_baae +int (_cgc .GBAtX [0]),_cef +int (_cgc .GBAtY [0])))<<1;};};if _cgc .GBAtOverride [1]{_cfgc &=0xDFFF;if _cgc .GBAtY [1]==0&&_cgc .GBAtX [1]>=-int8 (_ccg ){_cfgc |=(_fcad >>uint (int8 (_aacc )-_cgc .GBAtX [1]&0x1))<<13;}else {_cfgc |=int (_cgc .getPixel (_baae +int (_cgc .GBAtX [1]),_cef +int (_cgc .GBAtY [1])))<<13;};};if _cgc .GBAtOverride [2]{_cfgc &=0xFDFF;if _cgc .GBAtY [2]==0&&_cgc .GBAtX [2]>=-int8 (_ccg ){_cfgc |=(_fcad >>uint (int8 (_aacc )-_cgc .GBAtX [2]&0x1))<<9;}else {_cfgc |=int (_cgc .getPixel (_baae +int (_cgc .GBAtX [2]),_cef +int (_cgc .GBAtY [2])))<<9;};};if _cgc .GBAtOverride [3]{_cfgc &=0xBFFF;if _cgc .GBAtY [3]==0&&_cgc .GBAtX [3]>=-int8 (_ccg ){_cfgc |=(_fcad >>uint (int8 (_aacc )-_cgc .GBAtX [3]&0x1))<<14;}else {_cfgc |=int (_cgc .getPixel (_baae +int (_cgc .GBAtX [3]),_cef +int (_cgc .GBAtY [3])))<<14;};};if _cgc .GBAtOverride [4]{_cfgc &=0xEFFF;if _cgc .GBAtY [4]==0&&_cgc .GBAtX [4]>=-int8 (_ccg ){_cfgc |=(_fcad >>uint (int8 (_aacc )-_cgc .GBAtX [4]&0x1))<<12;}else {_cfgc |=int (_cgc .getPixel (_baae +int (_cgc .GBAtX [4]),_cef +int (_cgc .GBAtY [4])))<<12;};};if _cgc .GBAtOverride [5]{_cfgc &=0xFFDF;if _cgc .GBAtY [5]==0&&_cgc .GBAtX [5]>=-int8 (_ccg ){_cfgc |=(_fcad >>uint (int8 (_aacc )-_cgc .GBAtX [5]&0x1))<<5;}else {_cfgc |=int (_cgc .getPixel (_baae +int (_cgc .GBAtX [5]),_cef +int (_cgc .GBAtY [5])))<<5;};};if _cgc .GBAtOverride [6]{_cfgc &=0xFFFB;if _cgc .GBAtY [6]==0&&_cgc .GBAtX [6]>=-int8 (_ccg ){_cfgc |=(_fcad >>uint (int8 (_aacc )-_cgc .GBAtX [6]&0x1))<<2;}else {_cfgc |=int (_cgc .getPixel (_baae +int (_cgc .GBAtX [6]),_cef +int (_cgc .GBAtY [6])))<<2;};};if _cgc .GBAtOverride [7]{_cfgc &=0xFFF7;if _cgc .GBAtY [7]==0&&_cgc .GBAtX [7]>=-int8 (_ccg ){_cfgc |=(_fcad >>uint (int8 (_aacc )-_cgc .GBAtX [7]&0x1))<<3;}else {_cfgc |=int (_cgc .getPixel (_baae +int (_cgc .GBAtX [7]),_cef +int (_cgc .GBAtY [7])))<<3;};};if _cgc .GBAtOverride [8]{_cfgc &=0xF7FF;if _cgc .GBAtY [8]==0&&_cgc .GBAtX [8]>=-int8 (_ccg ){_cfgc |=(_fcad >>uint (int8 (_aacc )-_cgc .GBAtX [8]&0x1))<<11;}else {_cfgc |=int (_cgc .getPixel (_baae +int (_cgc .GBAtX [8]),_cef +int (_cgc .GBAtY [8])))<<11;};};if _cgc .GBAtOverride [9]{_cfgc &=0xFFEF;if _cgc .GBAtY [9]==0&&_cgc .GBAtX [9]>=-int8 (_ccg ){_cfgc |=(_fcad >>uint (int8 (_aacc )-_cgc .GBAtX [9]&0x1))<<4;}else {_cfgc |=int (_cgc .getPixel (_baae +int (_cgc .GBAtX [9]),_cef +int (_cgc .GBAtY [9])))<<4;};};if _cgc .GBAtOverride [10]{_cfgc &=0x7FFF;if _cgc .GBAtY [10]==0&&_cgc .GBAtX [10]>=-int8 (_ccg ){_cfgc |=(_fcad >>uint (int8 (_aacc )-_cgc .GBAtX [10]&0x1))<<15;}else {_cfgc |=int (_cgc .getPixel (_baae +int (_cgc .GBAtX [10]),_cef +int (_cgc .GBAtY [10])))<<15;};};if _cgc .GBAtOverride [11]{_cfgc &=0xFDFF;if _cgc .GBAtY [11]==0&&_cgc .GBAtX [11]>=-int8 (_ccg ){_cfgc |=(_fcad >>uint (int8 (_aacc )-_cgc .GBAtX [11]&0x1))<<10;}else {_cfgc |=int (_cgc .getPixel (_baae +int (_cgc .GBAtX [11]),_cef +int (_cgc .GBAtY [11])))<<10;};};return _cfgc ;};func (_egfa *GenericRefinementRegion )decodeSLTP ()(int ,error ){_egfa .Template .setIndex (_egfa ._db );return _egfa ._eg .DecodeBit (_egfa ._db );};func (_bfbcb *RegionSegment )readCombinationOperator ()error {_gdbd ,_ecabg :=_bfbcb ._ecfg .ReadBits (3);if _ecabg !=nil {return _ecabg ;};_bfbcb .CombinaionOperator =_b .CombinationOperator (_gdbd &0xF);return nil ;};func (_acg *HalftoneRegion )computeGrayScalePlanes (_fba []*_b .Bitmap ,_begc int )([][]int ,error ){_dcf :=make ([][]int ,_acg .HGridHeight );for _addc :=0;_addc < len (_dcf );_addc ++{_dcf [_addc ]=make ([]int ,_acg .HGridWidth );};for _fdge :=0;_fdge < int (_acg .HGridHeight );_fdge ++{for _fccc :=0;_fccc < int (_acg .HGridWidth );_fccc +=8{var _cdcb int ;if _fefa :=int (_acg .HGridWidth )-_fccc ;_fefa > 8{_cdcb =8;}else {_cdcb =_fefa ;};_feg :=_fba [0].GetByteIndex (_fccc ,_fdge );for _gddd :=0;_gddd < _cdcb ;_gddd ++{_agf :=_gddd +_fccc ;_dcf [_fdge ][_agf ]=0;for _dggd :=0;_dggd < _begc ;_dggd ++{_adad ,_ccd :=_fba [_dggd ].GetByte (_feg );if _ccd !=nil {return nil ,_ccd ;};_gec :=_adad >>uint (7-_agf &7);_faa :=_gec &1;_gdba :=1<<uint (_dggd );_febb :=int (_faa )*_gdba ;_dcf [_fdge ][_agf ]+=_febb ;};};};};return _dcf ,nil ;};func (_egb *GenericRegion )InitEncode (bm *_b .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _geff ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";if bm ==nil {return _ff .Error (_geff ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _ff .Error (_geff ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");};_egb .Bitmap =bm ;_egb .GBTemplate =byte (template );switch _egb .GBTemplate {case 0:_egb .GBAtX =[]int8 {3,-3,2,-2};_egb .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_egb .GBAtX =[]int8 {3};_egb .GBAtY =[]int8 {-1};case 2,3:_egb .GBAtX =[]int8 {2};_egb .GBAtY =[]int8 {-1};default:return _ff .Errorf (_geff ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );};_egb .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_egb .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_bcdf *TextRegion )setParameters (_cfga *_ge .Decoder ,_bedf ,_dcgg bool ,_fgdb ,_gbdd uint32 ,_ggcdb uint32 ,_ffdg int8 ,_gfeg uint32 ,_cabea int8 ,_ffcfg _b .CombinationOperator ,_bdee int8 ,_fceae int16 ,_fgdf ,_ebee ,_ecaad ,_gafa ,_fcdc ,_eacc ,_bbbf ,_ddac ,_cfddc ,_agcde int8 ,_ddae ,_edcb []int8 ,_fdef []*_b .Bitmap ,_fbee int8 ){_bcdf ._fefe =_cfga ;_bcdf .IsHuffmanEncoded =_bedf ;_bcdf .UseRefinement =_dcgg ;_bcdf .RegionInfo .BitmapWidth =_fgdb ;_bcdf .RegionInfo .BitmapHeight =_gbdd ;_bcdf .NumberOfSymbolInstances =_ggcdb ;_bcdf .SbStrips =_ffdg ;_bcdf .NumberOfSymbols =_gfeg ;_bcdf .DefaultPixel =_cabea ;_bcdf .CombinationOperator =_ffcfg ;_bcdf .IsTransposed =_bdee ;_bcdf .ReferenceCorner =_fceae ;_bcdf .SbDsOffset =_fgdf ;_bcdf .SbHuffFS =_ebee ;_bcdf .SbHuffDS =_ecaad ;_bcdf .SbHuffDT =_gafa ;_bcdf .SbHuffRDWidth =_fcdc ;_bcdf .SbHuffRDHeight =_eacc ;_bcdf .SbHuffRSize =_cfddc ;_bcdf .SbHuffRDX =_bbbf ;_bcdf .SbHuffRDY =_ddac ;_bcdf .SbrTemplate =_agcde ;_bcdf .SbrATX =_ddae ;_bcdf .SbrATY =_edcb ;_bcdf .Symbols =_fdef ;_bcdf ._gdbe =_fbee ;};func (_ggdb *TableSegment )Init (h *Header ,r _gc .StreamReader )error {_ggdb ._gdadd =r ;return _ggdb .parseHeader ();};func (_eafb *HalftoneRegion )shiftAndFill (_fefb int )int {_fefb >>=8;if _fefb < 0{_eefe :=int (_f .Log (float64 (_dgf (_fefb )))/_f .Log (2));_ced :=31-_eefe ;for _gdec :=1;_gdec < _ced ;_gdec ++{_fefb |=1<<uint (31-_gdec );};};return _fefb ;};func (_gde *GenericRefinementRegion )decodeOptimized (_fdf ,_ead ,_eb ,_aad ,_ffb ,_bfg ,_def int )error {var (_dd error ;_fgb int ;_fef int ;);_gbg :=_fdf -int (_gde .ReferenceDY );if _ab :=int (-_gde .ReferenceDX );_ab > 0{_fgb =_ab ;};_bcc :=_gde .ReferenceBitmap .GetByteIndex (_fgb ,_gbg );if _gde .ReferenceDX > 0{_fef =int (_gde .ReferenceDX );};_ad :=_gde .RegionBitmap .GetByteIndex (_fef ,_fdf );switch _gde .TemplateID {case 0:_dd =_gde .decodeTemplate (_fdf ,_ead ,_eb ,_aad ,_ffb ,_bfg ,_def ,_ad ,_gbg ,_bcc ,_gde ._gb );case 1:_dd =_gde .decodeTemplate (_fdf ,_ead ,_eb ,_aad ,_ffb ,_bfg ,_def ,_ad ,_gbg ,_bcc ,_gde ._ba );};return _dd ;};func (_dccb *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _dccb .RegionSegment };func (_ggd *GenericRegion )computeSegmentDataStructure ()error {_ggd .DataOffset =_ggd ._afd .StreamPosition ();_ggd .DataHeaderLength =_ggd .DataOffset -_ggd .DataHeaderOffset ;_ggd .DataLength =int64 (_ggd ._afd .Length ())-_ggd .DataHeaderLength ;return nil ;};func (_aefd *HalftoneRegion )checkInput ()error {if _aefd .IsMMREncoded {if _aefd .HTemplate !=0{_bd .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_aefd .HTemplate );};if _aefd .HSkipEnabled {_bd .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_aefd .HSkipEnabled );};};return nil ;};type TableSegment struct{_gdadd _gc .StreamReader ;_dbdg int32 ;_gbec int32 ;_cadb int32 ;_bdged int32 ;_cacc int32 ;};func (_cffe *PatternDictionary )readTemplate ()error {_bebbb ,_eace :=_cffe ._dbgb .ReadBits (2);if _eace !=nil {return _eace ;};_cffe .HDTemplate =byte (_bebbb );return nil ;};func (_ggg *GenericRefinementRegion )getGrReference ()(*_b .Bitmap ,error ){segments :=_ggg ._bc .RTSegments ;if len (segments )==0{return nil ,_d .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");};_bf ,_aag :=segments [0].GetSegmentData ();if _aag !=nil {return nil ,_aag ;};_bfc ,_ded :=_bf .(Regioner );if !_ded {return nil ,_c .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_bf );};return _bfc .GetRegionBitmap ();};func (_agfe *Header )writeSegmentDataLength (_baca _gc .BinaryWriter )(_dga int ,_ccf error ){_cdcd :=make ([]byte ,4);_fe .BigEndian .PutUint32 (_cdcd ,uint32 (_agfe .SegmentDataLength ));if _dga ,_ccf =_baca .Write (_cdcd );_ccf !=nil {return 0,_ff .Wrap (_ccf ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");};return _dga ,nil ;};func (_ggefe *TextRegion )encodeFlags (_dddb _gc .BinaryWriter )(_fefce int ,_bdcac error ){const _dbac ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _bdcac =_dddb .WriteBit (int (_ggefe .SbrTemplate ));_bdcac !=nil {return _fefce ,_ff .Wrap (_bdcac ,_dbac ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};if _ ,_bdcac =_dddb .WriteBits (uint64 (_ggefe .SbDsOffset ),5);_bdcac !=nil {return _fefce ,_ff .Wrap (_bdcac ,_dbac ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _bdcac =_dddb .WriteBit (int (_ggefe .DefaultPixel ));_bdcac !=nil {return _fefce ,_ff .Wrap (_bdcac ,_dbac ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");};if _ ,_bdcac =_dddb .WriteBits (uint64 (_ggefe .CombinationOperator ),2);_bdcac !=nil {return _fefce ,_ff .Wrap (_bdcac ,_dbac ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _bdcac =_dddb .WriteBit (int (_ggefe .IsTransposed ));_bdcac !=nil {return _fefce ,_ff .Wrap (_bdcac ,_dbac ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_bdcac =_dddb .WriteBits (uint64 (_ggefe .ReferenceCorner ),2);_bdcac !=nil {return _fefce ,_ff .Wrap (_bdcac ,_dbac ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");};if _ ,_bdcac =_dddb .WriteBits (uint64 (_ggefe .LogSBStrips ),2);_bdcac !=nil {return _fefce ,_ff .Wrap (_bdcac ,_dbac ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _badd int ;if _ggefe .UseRefinement {_badd =1;};if _bdcac =_dddb .WriteBit (_badd );_bdcac !=nil {return _fefce ,_ff .Wrap (_bdcac ,_dbac ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_badd =0;if _ggefe .IsHuffmanEncoded {_badd =1;};if _bdcac =_dddb .WriteBit (_badd );_bdcac !=nil {return _fefce ,_ff .Wrap (_bdcac ,_dbac ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");};_fefce =2;return _fefce ,nil ;};func (_dfaed *GenericRegion )String ()string {_baab :=&_e .Builder {};_baab .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_baab .WriteString (_dfaed .RegionSegment .String ()+"\u000a");_baab .WriteString (_c .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_dfaed .UseExtTemplates ));_baab .WriteString (_c .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_dfaed .IsTPGDon ));_baab .WriteString (_c .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_dfaed .GBTemplate ));_baab .WriteString (_c .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_dfaed .IsMMREncoded ));_baab .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_dfaed .GBAtX ));_baab .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_dfaed .GBAtY ));_baab .WriteString (_c .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_dfaed .GBAtOverride ));return _baab .String ();};func (_abb *PageInformationSegment )encodeFlags (_edbcg _gc .BinaryWriter )(_bcdb error ){const _ggea ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _bcdb =_edbcg .SkipBits (1);_bcdb !=nil {return _ff .Wrap (_bcdb ,_ggea ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _dedc int ;if _abb .CombinationOperatorOverrideAllowed (){_dedc =1;};if _bcdb =_edbcg .WriteBit (_dedc );_bcdb !=nil {return _ff .Wrap (_bcdb ,_ggea ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_dedc =0;if _abb ._aeae {_dedc =1;};if _bcdb =_edbcg .WriteBit (_dedc );_bcdb !=nil {return _ff .Wrap (_bcdb ,_ggea ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _bcdb =_edbcg .WriteBit ((int (_abb ._bffa )>>1)&0x01);_bcdb !=nil {return _ff .Wrap (_bcdb ,_ggea ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _bcdb =_edbcg .WriteBit (int (_abb ._bffa )&0x01);_bcdb !=nil {return _ff .Wrap (_bcdb ,_ggea ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_dedc =int (_abb ._aefb );if _bcdb =_edbcg .WriteBit (_dedc );_bcdb !=nil {return _ff .Wrap (_bcdb ,_ggea ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_dedc =0;if _abb ._gfcc {_dedc =1;};if _bcdb =_edbcg .WriteBit (_dedc );_bcdb !=nil {return _ff .Wrap (_bcdb ,_ggea ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_dedc =0;if _abb .IsLossless {_dedc =1;};if _bcdb =_edbcg .WriteBit (_dedc );_bcdb !=nil {return _ff .Wrap (_bcdb ,_ggea ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_ccad *TextRegion )getSymbols ()error {if _ccad .Header .RTSegments !=nil {return _ccad .initSymbols ();};return nil ;};type GenericRefinementRegion struct{_gb templater ;_ba templater ;_fbb _gc .StreamReader ;_bc *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_b .Bitmap ;ReferenceBitmap *_b .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_eg *_ge .Decoder ;_db *_ge .DecoderStats ;_cc bool ;_bgf []bool ;};func (_aecc *HalftoneRegion )parseHeader ()error {if _dbg :=_aecc .RegionSegment .parseHeader ();_dbg !=nil {return _dbg ;};_bacc ,_cdffd :=_aecc ._acbge .ReadBit ();if _cdffd !=nil {return _cdffd ;};_aecc .HDefaultPixel =int8 (_bacc );_adf ,_cdffd :=_aecc ._acbge .ReadBits (3);if _cdffd !=nil {return _cdffd ;};_aecc .CombinationOperator =_b .CombinationOperator (_adf &0xf);_bacc ,_cdffd =_aecc ._acbge .ReadBit ();if _cdffd !=nil {return _cdffd ;};if _bacc ==1{_aecc .HSkipEnabled =true ;};_adf ,_cdffd =_aecc ._acbge .ReadBits (2);if _cdffd !=nil {return _cdffd ;};_aecc .HTemplate =byte (_adf &0xf);_bacc ,_cdffd =_aecc ._acbge .ReadBit ();if _cdffd !=nil {return _cdffd ;};if _bacc ==1{_aecc .IsMMREncoded =true ;};_adf ,_cdffd =_aecc ._acbge .ReadBits (32);if _cdffd !=nil {return _cdffd ;};_aecc .HGridWidth =uint32 (_adf &_f .MaxUint32 );_adf ,_cdffd =_aecc ._acbge .ReadBits (32);if _cdffd !=nil {return _cdffd ;};_aecc .HGridHeight =uint32 (_adf &_f .MaxUint32 );_adf ,_cdffd =_aecc ._acbge .ReadBits (32);if _cdffd !=nil {return _cdffd ;};_aecc .HGridX =int32 (_adf &_f .MaxInt32 );_adf ,_cdffd =_aecc ._acbge .ReadBits (32);if _cdffd !=nil {return _cdffd ;};_aecc .HGridY =int32 (_adf &_f .MaxInt32 );_adf ,_cdffd =_aecc ._acbge .ReadBits (16);if _cdffd !=nil {return _cdffd ;};_aecc .HRegionX =uint16 (_adf &_f .MaxUint16 );_adf ,_cdffd =_aecc ._acbge .ReadBits (16);if _cdffd !=nil {return _cdffd ;};_aecc .HRegionY =uint16 (_adf &_f .MaxUint16 );if _cdffd =_aecc .computeSegmentDataStructure ();_cdffd !=nil {return _cdffd ;};return _aecc .checkInput ();};func (_ecbf *Header )parse (_dedbc Documenter ,_feeab _gc .StreamReader ,_afcf int64 ,_acbc OrganizationType )(_ggcf error ){const _cdca ="\u0070\u0061\u0072s\u0065";_bd .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _ggcf !=nil {_bd .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_ggcf );}else {_bd .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_ggcf =_feeab .Seek (_afcf ,_a .SeekStart );if _ggcf !=nil {return _ff .Wrap (_ggcf ,_cdca ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _ggcf =_ecbf .readSegmentNumber (_feeab );_ggcf !=nil {return _ff .Wrap (_ggcf ,_cdca ,"");};if _ggcf =_ecbf .readHeaderFlags ();_ggcf !=nil {return _ff .Wrap (_ggcf ,_cdca ,"");};var _ecdf uint64 ;_ecdf ,_ggcf =_ecbf .readNumberOfReferredToSegments (_feeab );if _ggcf !=nil {return _ff .Wrap (_ggcf ,_cdca ,"");};_ecbf .RTSNumbers ,_ggcf =_ecbf .readReferredToSegmentNumbers (_feeab ,int (_ecdf ));if _ggcf !=nil {return _ff .Wrap (_ggcf ,_cdca ,"");};_ggcf =_ecbf .readSegmentPageAssociation (_dedbc ,_feeab ,_ecdf ,_ecbf .RTSNumbers ...);if _ggcf !=nil {return _ff .Wrap (_ggcf ,_cdca ,"");};if _ecbf .Type !=TEndOfFile {if _ggcf =_ecbf .readSegmentDataLength (_feeab );_ggcf !=nil {return _ff .Wrap (_ggcf ,_cdca ,"");};};_ecbf .readDataStartOffset (_feeab ,_acbc );_ecbf .readHeaderLength (_feeab ,_afcf );_bd .Log .Trace ("\u0025\u0073",_ecbf );return nil ;};func (_ebdc *GenericRegion )writeGBAtPixels (_fcecc _gc .BinaryWriter )(_bfcf int ,_bgbf error ){const _bed ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";if _ebdc .UseMMR {return 0,nil ;};_bacb :=1;if _ebdc .GBTemplate ==0{_bacb =4;}else if _ebdc .UseExtTemplates {_bacb =12;};if len (_ebdc .GBAtX )!=_bacb {return 0,_ff .Errorf (_bed ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};if len (_ebdc .GBAtY )!=_bacb {return 0,_ff .Errorf (_bed ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");};for _dca :=0;_dca < _bacb ;_dca ++{if _bgbf =_fcecc .WriteByte (byte (_ebdc .GBAtX [_dca ]));_bgbf !=nil {return _bfcf ,_ff .Wrap (_bgbf ,_bed ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_bfcf ++;if _bgbf =_fcecc .WriteByte (byte (_ebdc .GBAtY [_dca ]));_bgbf !=nil {return _bfcf ,_ff .Wrap (_bgbf ,_bed ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_bfcf ++;};return _bfcf ,nil ;};func (_bfgaf *SymbolDictionary )readRefinementAtPixels (_edeaa int )error {_bfgaf .SdrATX =make ([]int8 ,_edeaa );_bfgaf .SdrATY =make ([]int8 ,_edeaa );var (_fabc byte ;_ggeb error ;);for _adaa :=0;_adaa < _edeaa ;_adaa ++{_fabc ,_ggeb =_bfgaf ._eggb .ReadByte ();if _ggeb !=nil {return _ggeb ;};_bfgaf .SdrATX [_adaa ]=int8 (_fabc );_fabc ,_ggeb =_bfgaf ._eggb .ReadByte ();if _ggeb !=nil {return _ggeb ;};_bfgaf .SdrATY [_adaa ]=int8 (_fabc );};return nil ;};func (_ffga *GenericRegion )updateOverrideFlags ()error {const _dabc ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _ffga .GBAtX ==nil ||_ffga .GBAtY ==nil {return nil ;};if len (_ffga .GBAtX )!=len (_ffga .GBAtY ){return _ff .Errorf (_dabc ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_ffga .GBAtX ),len (_ffga .GBAtY ));};_ffga .GBAtOverride =make ([]bool ,len (_ffga .GBAtX ));switch _ffga .GBTemplate {case 0:if !_ffga .UseExtTemplates {if _ffga .GBAtX [0]!=3||_ffga .GBAtY [0]!=-1{_ffga .setOverrideFlag (0);};if _ffga .GBAtX [1]!=-3||_ffga .GBAtY [1]!=-1{_ffga .setOverrideFlag (1);};if _ffga .GBAtX [2]!=2||_ffga .GBAtY [2]!=-2{_ffga .setOverrideFlag (2);};if _ffga .GBAtX [3]!=-2||_ffga .GBAtY [3]!=-2{_ffga .setOverrideFlag (3);};}else {if _ffga .GBAtX [0]!=-2||_ffga .GBAtY [0]!=0{_ffga .setOverrideFlag (0);};if _ffga .GBAtX [1]!=0||_ffga .GBAtY [1]!=-2{_ffga .setOverrideFlag (1);};if _ffga .GBAtX [2]!=-2||_ffga .GBAtY [2]!=-1{_ffga .setOverrideFlag (2);};if _ffga .GBAtX [3]!=-1||_ffga .GBAtY [3]!=-2{_ffga .setOverrideFlag (3);};if _ffga .GBAtX [4]!=1||_ffga .GBAtY [4]!=-2{_ffga .setOverrideFlag (4);};if _ffga .GBAtX [5]!=2||_ffga .GBAtY [5]!=-1{_ffga .setOverrideFlag (5);};if _ffga .GBAtX [6]!=-3||_ffga .GBAtY [6]!=0{_ffga .setOverrideFlag (6);};if _ffga .GBAtX [7]!=-4||_ffga .GBAtY [7]!=0{_ffga .setOverrideFlag (7);};if _ffga .GBAtX [8]!=2||_ffga .GBAtY [8]!=-2{_ffga .setOverrideFlag (8);};if _ffga .GBAtX [9]!=3||_ffga .GBAtY [9]!=-1{_ffga .setOverrideFlag (9);};if _ffga .GBAtX [10]!=-2||_ffga .GBAtY [10]!=-2{_ffga .setOverrideFlag (10);};if _ffga .GBAtX [11]!=-3||_ffga .GBAtY [11]!=-1{_ffga .setOverrideFlag (11);};};case 1:if _ffga .GBAtX [0]!=3||_ffga .GBAtY [0]!=-1{_ffga .setOverrideFlag (0);};case 2:if _ffga .GBAtX [0]!=2||_ffga .GBAtY [0]!=-1{_ffga .setOverrideFlag (0);};case 3:if _ffga .GBAtX [0]!=2||_ffga .GBAtY [0]!=-1{_ffga .setOverrideFlag (0);};};return nil ;};func (_fggbd *TextRegion )readRegionFlags ()error {var (_cfebd int ;_gcaa uint64 ;_gcgd error ;);_cfebd ,_gcgd =_fggbd ._egfgg .ReadBit ();if _gcgd !=nil {return _gcgd ;};_fggbd .SbrTemplate =int8 (_cfebd );_gcaa ,_gcgd =_fggbd ._egfgg .ReadBits (5);if _gcgd !=nil {return _gcgd ;};_fggbd .SbDsOffset =int8 (_gcaa );if _fggbd .SbDsOffset > 0x0f{_fggbd .SbDsOffset -=0x20;};_cfebd ,_gcgd =_fggbd ._egfgg .ReadBit ();if _gcgd !=nil {return _gcgd ;};_fggbd .DefaultPixel =int8 (_cfebd );_gcaa ,_gcgd =_fggbd ._egfgg .ReadBits (2);if _gcgd !=nil {return _gcgd ;};_fggbd .CombinationOperator =_b .CombinationOperator (int (_gcaa )&0x3);_cfebd ,_gcgd =_fggbd ._egfgg .ReadBit ();if _gcgd !=nil {return _gcgd ;};_fggbd .IsTransposed =int8 (_cfebd );_gcaa ,_gcgd =_fggbd ._egfgg .ReadBits (2);if _gcgd !=nil {return _gcgd ;};_fggbd .ReferenceCorner =int16 (_gcaa )&0x3;_gcaa ,_gcgd =_fggbd ._egfgg .ReadBits (2);if _gcgd !=nil {return _gcgd ;};_fggbd .LogSBStrips =int16 (_gcaa )&0x3;_fggbd .SbStrips =1<<uint (_fggbd .LogSBStrips );_cfebd ,_gcgd =_fggbd ._egfgg .ReadBit ();if _gcgd !=nil {return _gcgd ;};if _cfebd ==1{_fggbd .UseRefinement =true ;};_cfebd ,_gcgd =_fggbd ._egfgg .ReadBit ();if _gcgd !=nil {return _gcgd ;};if _cfebd ==1{_fggbd .IsHuffmanEncoded =true ;};return nil ;};func (_gadb *Header )readSegmentNumber (_afee _gc .StreamReader )error {const _bfbb ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";_fcda :=make ([]byte ,4);_ ,_bded :=_afee .Read (_fcda );if _bded !=nil {return _ff .Wrap (_bded ,_bfbb ,"");};_gadb .SegmentNumber =_fe .BigEndian .Uint32 (_fcda );return nil ;};func (_dgge *GenericRegion )setOverrideFlag (_abcb int ){_dgge .GBAtOverride [_abcb ]=true ;_dgge ._gcga =true ;};func (_gcgf *PageInformationSegment )String ()string {_acbd :=&_e .Builder {};_acbd .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");_acbd .WriteString (_c .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_gcgf .PageBMHeight ));_acbd .WriteString (_c .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_gcgf .PageBMWidth ));_acbd .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_gcgf .ResolutionX ));_acbd .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_gcgf .ResolutionY ));_acbd .WriteString (_c .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_gcgf ._bffa ));_acbd .WriteString (_c .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_gcgf ._bfgg ));_acbd .WriteString (_c .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_gcgf .IsLossless ));_acbd .WriteString (_c .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_gcgf ._aeae ));_acbd .WriteString (_c .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_gcgf ._gfcc ));_acbd .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_gcgf .IsStripe ));_acbd .WriteString (_c .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_gcgf .MaxStripeSize ));return _acbd .String ();};func (_bcfg *RegionSegment )Encode (w _gc .BinaryWriter )(_efdb int ,_bbda error ){const _gbfc ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_cac :=make ([]byte ,4);_fe .BigEndian .PutUint32 (_cac ,_bcfg .BitmapWidth );_efdb ,_bbda =w .Write (_cac );if _bbda !=nil {return 0,_ff .Wrap (_bbda ,_gbfc ,"\u0057\u0069\u0064t\u0068");};_fe .BigEndian .PutUint32 (_cac ,_bcfg .BitmapHeight );var _gggd int ;_gggd ,_bbda =w .Write (_cac );if _bbda !=nil {return 0,_ff .Wrap (_bbda ,_gbfc ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_efdb +=_gggd ;_fe .BigEndian .PutUint32 (_cac ,_bcfg .XLocation );_gggd ,_bbda =w .Write (_cac );if _bbda !=nil {return 0,_ff .Wrap (_bbda ,_gbfc ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");};_efdb +=_gggd ;_fe .BigEndian .PutUint32 (_cac ,_bcfg .YLocation );_gggd ,_bbda =w .Write (_cac );if _bbda !=nil {return 0,_ff .Wrap (_bbda ,_gbfc ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_efdb +=_gggd ;if _bbda =w .WriteByte (byte (_bcfg .CombinaionOperator )&0x07);_bbda !=nil {return 0,_ff .Wrap (_bbda ,_gbfc ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_efdb ++;return _efdb ,nil ;};func (_cdfa *TextRegion )parseHeader ()error {var _ddcf error ;_bd .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");defer func (){if _ddcf !=nil {_bd .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_ddcf );}else {_bd .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _ddcf =_cdfa .RegionInfo .parseHeader ();_ddcf !=nil {return _ddcf ;};if _ddcf =_cdfa .readRegionFlags ();_ddcf !=nil {return _ddcf ;};if _cdfa .IsHuffmanEncoded {if _ddcf =_cdfa .readHuffmanFlags ();_ddcf !=nil {return _ddcf ;};};if _ddcf =_cdfa .readUseRefinement ();_ddcf !=nil {return _ddcf ;};if _ddcf =_cdfa .readAmountOfSymbolInstances ();_ddcf !=nil {return _ddcf ;};if _ddcf =_cdfa .getSymbols ();_ddcf !=nil {return _ddcf ;};if _ddcf =_cdfa .computeSymbolCodeLength ();_ddcf !=nil {return _ddcf ;};if _ddcf =_cdfa .checkInput ();_ddcf !=nil {return _ddcf ;};_bd .Log .Trace ("\u0025\u0073",_cdfa .String ());return nil ;};func (_agcf *SymbolDictionary )readRegionFlags ()error {var (_bcg uint64 ;_dgad int ;);_ ,_daeb :=_agcf ._eggb .ReadBits (3);if _daeb !=nil {return _daeb ;};_dgad ,_daeb =_agcf ._eggb .ReadBit ();if _daeb !=nil {return _daeb ;};_agcf .SdrTemplate =int8 (_dgad );_bcg ,_daeb =_agcf ._eggb .ReadBits (2);if _daeb !=nil {return _daeb ;};_agcf .SdTemplate =int8 (_bcg &0xf);_dgad ,_daeb =_agcf ._eggb .ReadBit ();if _daeb !=nil {return _daeb ;};if _dgad ==1{_agcf ._bdcd =true ;};_dgad ,_daeb =_agcf ._eggb .ReadBit ();if _daeb !=nil {return _daeb ;};if _dgad ==1{_agcf ._egfg =true ;};_dgad ,_daeb =_agcf ._eggb .ReadBit ();if _daeb !=nil {return _daeb ;};if _dgad ==1{_agcf .SdHuffAggInstanceSelection =true ;};_dgad ,_daeb =_agcf ._eggb .ReadBit ();if _daeb !=nil {return _daeb ;};_agcf .SdHuffBMSizeSelection =int8 (_dgad );_bcg ,_daeb =_agcf ._eggb .ReadBits (2);if _daeb !=nil {return _daeb ;};_agcf .SdHuffDecodeWidthSelection =int8 (_bcg &0xf);_bcg ,_daeb =_agcf ._eggb .ReadBits (2);if _daeb !=nil {return _daeb ;};_agcf .SdHuffDecodeHeightSelection =int8 (_bcg &0xf);_dgad ,_daeb =_agcf ._eggb .ReadBit ();if _daeb !=nil {return _daeb ;};if _dgad ==1{_agcf .UseRefinementAggregation =true ;};_dgad ,_daeb =_agcf ._eggb .ReadBit ();if _daeb !=nil {return _daeb ;};if _dgad ==1{_agcf .IsHuffmanEncoded =true ;};return nil ;};func (_geggd *SymbolDictionary )decodeDirectlyThroughGenericRegion (_bfeca ,_deadc uint32 )error {if _geggd ._adfb ==nil {_geggd ._adfb =NewGenericRegion (_geggd ._eggb );};_geggd ._adfb .setParametersWithAt (false ,byte (_geggd .SdTemplate ),false ,false ,_geggd .SdATX ,_geggd .SdATY ,_bfeca ,_deadc ,_geggd ._bgcee ,_geggd ._cceeb );return _geggd .addSymbol (_geggd ._adfb );};func (_age *SymbolDictionary )String ()string {_cedf :=&_e .Builder {};_cedf .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");_cedf .WriteString (_c .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_age .SdrTemplate ));_cedf .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_age .SdTemplate ));_cedf .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_age ._bdcd ));_cedf .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_age ._egfg ));_cedf .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_age .SdHuffAggInstanceSelection ));_cedf .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_age .SdHuffBMSizeSelection ));_cedf .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_age .SdHuffDecodeWidthSelection ));_cedf .WriteString (_c .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_age .SdHuffDecodeHeightSelection ));_cedf .WriteString (_c .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_age .UseRefinementAggregation ));_cedf .WriteString (_c .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_age .IsHuffmanEncoded ));_cedf .WriteString (_c .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_age .SdATX ));_cedf .WriteString (_c .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_age .SdATY ));_cedf .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_age .SdrATX ));_cedf .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_age .SdrATY ));_cedf .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_age .NumberOfExportedSymbols ));_cedf .WriteString (_c .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_age .NumberOfNewSymbols ));_cedf .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_age ._dbad ));_cedf .WriteString (_c .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_age ._beca ));return _cedf .String ();};func (_aeebc *TextRegion )encodeSymbols (_daba _gc .BinaryWriter )(_geed int ,_acac error ){const _gbba ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";_debd :=make ([]byte ,4);_fe .BigEndian .PutUint32 (_debd ,_aeebc .NumberOfSymbols );if _geed ,_acac =_daba .Write (_debd );_acac !=nil {return _geed ,_ff .Wrap (_acac ,_gbba ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");};_dedg ,_acac :=_b .NewClassedPoints (_aeebc ._ageg ,_aeebc ._egfec );if _acac !=nil {return 0,_ff .Wrap (_acac ,_gbba ,"");};var _bgbfb ,_edbca int ;_agcd :=_cd .New ();_agcd .Init ();if _acac =_agcd .EncodeInteger (_cd .IADT ,0);_acac !=nil {return _geed ,_ff .Wrap (_acac ,_gbba ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");};_aggd ,_acac :=_dedg .GroupByY ();if _acac !=nil {return 0,_ff .Wrap (_acac ,_gbba ,"");};for _ ,_cgbgc :=range _aggd {_aggf :=int (_cgbgc .YAtIndex (0));_cafg :=_aggf -_bgbfb ;if _acac =_agcd .EncodeInteger (_cd .IADT ,_cafg );_acac !=nil {return _geed ,_ff .Wrap (_acac ,_gbba ,"");};var _gdgbg int ;for _dfdd ,_eaea :=range _cgbgc .IntSlice {switch _dfdd {case 0:_gabfc :=int (_cgbgc .XAtIndex (_dfdd ))-_edbca ;if _acac =_agcd .EncodeInteger (_cd .IAFS ,_gabfc );_acac !=nil {return _geed ,_ff .Wrap (_acac ,_gbba ,"");};_edbca +=_gabfc ;_gdgbg =_edbca ;default:_gcgc :=int (_cgbgc .XAtIndex (_dfdd ))-_gdgbg ;if _acac =_agcd .EncodeInteger (_cd .IADS ,_gcgc );_acac !=nil {return _geed ,_ff .Wrap (_acac ,_gbba ,"");};_gdgbg +=_gcgc ;};_cbcf ,_abdf :=_aeebc ._gdee .Get (_eaea );if _abdf !=nil {return _geed ,_ff .Wrap (_abdf ,_gbba ,"");};_ddea ,_badga :=_aeebc ._eccfg [_cbcf ];if !_badga {_ddea ,_badga =_aeebc ._gaec [_cbcf ];if !_badga {return _geed ,_ff .Errorf (_gbba ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_cbcf );};};if _abdf =_agcd .EncodeIAID (_aeebc ._cgfg ,_ddea );_abdf !=nil {return _geed ,_ff .Wrap (_abdf ,_gbba ,"");};};if _acac =_agcd .EncodeOOB (_cd .IADS );_acac !=nil {return _geed ,_ff .Wrap (_acac ,_gbba ,"");};};_agcd .Final ();_ebac ,_acac :=_agcd .WriteTo (_daba );if _acac !=nil {return _geed ,_ff .Wrap (_acac ,_gbba ,"");};_geed +=int (_ebac );return _geed ,nil ;};func (_ebge *SymbolDictionary )getSymbol (_dgef int )(*_b .Bitmap ,error ){const _gcdg ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_cgbgf ,_feef :=_ebge ._eegf .GetBitmap (_ebge ._bagc [_dgef ]);if _feef !=nil {return nil ,_ff .Wrap (_feef ,_gcdg ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _cgbgf ,nil ;};type GenericRegion struct{_afd _gc .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_gcga bool ;Bitmap *_b .Bitmap ;_cbbb *_ge .Decoder ;_adgf *_ge .DecoderStats ;_aea *_ga .Decoder ;};func (_abad *TextRegion )blit (_cbfef *_b .Bitmap ,_ddeg int64 )error {if _abad .IsTransposed ==0&&(_abad .ReferenceCorner ==2||_abad .ReferenceCorner ==3){_abad ._dadf +=int64 (_cbfef .Width -1);}else if _abad .IsTransposed ==1&&(_abad .ReferenceCorner ==0||_abad .ReferenceCorner ==2){_abad ._dadf +=int64 (_cbfef .Height -1);};_gfe :=_abad ._dadf ;if _abad .IsTransposed ==1{_gfe ,_ddeg =_ddeg ,_gfe ;};switch _abad .ReferenceCorner {case 0:_ddeg -=int64 (_cbfef .Height -1);case 2:_ddeg -=int64 (_cbfef .Height -1);_gfe -=int64 (_cbfef .Width -1);case 3:_gfe -=int64 (_cbfef .Width -1);};_cgef :=_b .Blit (_cbfef ,_abad .RegionBitmap ,int (_gfe ),int (_ddeg ),_abad .CombinationOperator );if _cgef !=nil {return _cgef ;};if _abad .IsTransposed ==0&&(_abad .ReferenceCorner ==0||_abad .ReferenceCorner ==1){_abad ._dadf +=int64 (_cbfef .Width -1);};if _abad .IsTransposed ==1&&(_abad .ReferenceCorner ==1||_abad .ReferenceCorner ==3){_abad ._dadf +=int64 (_cbfef .Height -1);};return nil ;};func (_cfd *GenericRegion )GetRegionInfo ()*RegionSegment {return _cfd .RegionSegment };func (_beba *PageInformationSegment )readCombinationOperator ()error {_gcde ,_cfdc :=_beba ._eaa .ReadBits (2);if _cfdc !=nil {return _cfdc ;};_beba ._bffa =_b .CombinationOperator (int (_gcde ));return nil ;};func (_ecd *GenericRegion )parseHeader ()(_gfc error ){_bd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");defer func (){if _gfc !=nil {_bd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_gfc );}else {_bd .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");};}();var (_bge int ;_dfbc uint64 ;);if _gfc =_ecd .RegionSegment .parseHeader ();_gfc !=nil {return _gfc ;};if _ ,_gfc =_ecd ._afd .ReadBits (3);_gfc !=nil {return _gfc ;};_bge ,_gfc =_ecd ._afd .ReadBit ();if _gfc !=nil {return _gfc ;};if _bge ==1{_ecd .UseExtTemplates =true ;};_bge ,_gfc =_ecd ._afd .ReadBit ();if _gfc !=nil {return _gfc ;};if _bge ==1{_ecd .IsTPGDon =true ;};_dfbc ,_gfc =_ecd ._afd .ReadBits (2);if _gfc !=nil {return _gfc ;};_ecd .GBTemplate =byte (_dfbc &0xf);_bge ,_gfc =_ecd ._afd .ReadBit ();if _gfc !=nil {return _gfc ;};if _bge ==1{_ecd .IsMMREncoded =true ;};if !_ecd .IsMMREncoded {_gcd :=1;if _ecd .GBTemplate ==0{_gcd =4;if _ecd .UseExtTemplates {_gcd =12;};};if _gfc =_ecd .readGBAtPixels (_gcd );_gfc !=nil {return _gfc ;};};if _gfc =_ecd .computeSegmentDataStructure ();_gfc !=nil {return _gfc ;};_bd .Log .Trace ("\u0025\u0073",_ecd );return nil ;};func (_eggg *TextRegion )readAmountOfSymbolInstances ()error {_bebee ,_cbgd :=_eggg ._egfgg .ReadBits (32);if _cbgd !=nil {return _cbgd ;};_eggg .NumberOfSymbolInstances =uint32 (_bebee &_f .MaxUint32 );_cga :=_eggg .RegionInfo .BitmapWidth *_eggg .RegionInfo .BitmapHeight ;if _cga < _eggg .NumberOfSymbolInstances {_bd .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_cga ,_eggg .NumberOfSymbolInstances );_eggg .NumberOfSymbolInstances =_cga ;};return nil ;};func (_cafe *SymbolDictionary )getUserTable (_cdgb int )(_ag .Tabler ,error ){var _cdbg int ;for _ ,_beafe :=range _cafe .Header .RTSegments {if _beafe .Type ==53{if _cdbg ==_cdgb {_fcfd ,_ecfda :=_beafe .GetSegmentData ();if _ecfda !=nil {return nil ,_ecfda ;};_ddfa :=_fcfd .(_ag .BasicTabler );return _ag .NewEncodedTable (_ddfa );};_cdbg ++;};};return nil ,nil ;};func (_gbbd *Header )subInputReader ()(_gc .StreamReader ,error ){return _gc .NewSubstreamReader (_gbbd .Reader ,_gbbd .SegmentDataStartOffset ,_gbbd .SegmentDataLength );};func (_cebb *TextRegion )setCodingStatistics ()error {if _cebb ._gdga ==nil {_cebb ._gdga =_ge .NewStats (512,1);};if _cebb ._gabf ==nil {_cebb ._gabf =_ge .NewStats (512,1);};if _cebb ._dcaf ==nil {_cebb ._dcaf =_ge .NewStats (512,1);};if _cebb ._dbdf ==nil {_cebb ._dbdf =_ge .NewStats (512,1);};if _cebb ._eadb ==nil {_cebb ._eadb =_ge .NewStats (512,1);};if _cebb ._bgdd ==nil {_cebb ._bgdd =_ge .NewStats (512,1);};if _cebb ._abggg ==nil {_cebb ._abggg =_ge .NewStats (512,1);};if _cebb ._babb ==nil {_cebb ._babb =_ge .NewStats (1<<uint (_cebb ._gdbe ),1);};if _cebb ._fbac ==nil {_cebb ._fbac =_ge .NewStats (512,1);};if _cebb ._cbag ==nil {_cebb ._cbag =_ge .NewStats (512,1);};if _cebb ._fefe ==nil {var _fbgf error ;_cebb ._fefe ,_fbgf =_ge .New (_cebb ._egfgg );if _fbgf !=nil {return _fbgf ;};};return nil ;};func (_cgfc *TextRegion )decodeRI ()(int64 ,error ){if !_cgfc .UseRefinement {return 0,nil ;};if _cgfc .IsHuffmanEncoded {_eccd ,_egadc :=_cgfc ._egfgg .ReadBit ();return int64 (_eccd ),_egadc ;};_gcbb ,_cfdd :=_cgfc ._fefe .DecodeInt (_cgfc ._eadb );return int64 (_gcbb ),_cfdd ;};func (_fggb *TextRegion )GetRegionInfo ()*RegionSegment {return _fggb .RegionInfo };func (_ageb *TextRegion )decodeDfs ()(int64 ,error ){if _ageb .IsHuffmanEncoded {if _ageb .SbHuffFS ==3{if _ageb ._cabf ==nil {var _gcfdd error ;_ageb ._cabf ,_gcfdd =_ageb .getUserTable (0);if _gcfdd !=nil {return 0,_gcfdd ;};};return _ageb ._cabf .Decode (_ageb ._egfgg );};_ebe ,_cbge :=_ag .GetStandardTable (6+int (_ageb .SbHuffFS ));if _cbge !=nil {return 0,_cbge ;};return _ebe .Decode (_ageb ._egfgg );};_cedec ,_fbea :=_ageb ._fefe .DecodeInt (_ageb ._gabf );if _fbea !=nil {return 0,_fbea ;};return int64 (_cedec ),nil ;};func (_ggfa *GenericRefinementRegion )updateOverride ()error {if _ggfa .GrAtX ==nil ||_ggfa .GrAtY ==nil {return _d .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if len (_ggfa .GrAtX )!=len (_ggfa .GrAtY ){return _d .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_ggfa ._bgf =make ([]bool ,len (_ggfa .GrAtX ));switch _ggfa .TemplateID {case 0:if _ggfa .GrAtX [0]!=-1&&_ggfa .GrAtY [0]!=-1{_ggfa ._bgf [0]=true ;_ggfa ._cc =true ;};if _ggfa .GrAtX [1]!=-1&&_ggfa .GrAtY [1]!=-1{_ggfa ._bgf [1]=true ;_ggfa ._cc =true ;};case 1:_ggfa ._cc =false ;};return nil ;};type OrganizationType uint8 ;func (_fabb *PageInformationSegment )readMaxStripeSize ()error {_fcgab ,_cagb :=_fabb ._eaa .ReadBits (15);if _cagb !=nil {return _cagb ;};_fabb .MaxStripeSize =uint16 (_fcgab &_f .MaxUint16 );return nil ;};type templater interface{form (_acbg ,_cee ,_ecc ,_gca ,_gfg int16 )int16 ;setIndex (_efd *_ge .DecoderStats );};func (_cdb *Header )readDataStartOffset (_abec _gc .StreamReader ,_agb OrganizationType ){if _agb ==OSequential {_cdb .SegmentDataStartOffset =uint64 (_abec .StreamPosition ());};};func (_dabge *Header )String ()string {_gabd :=&_e .Builder {};_gabd .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_gabd .WriteString (_c .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_dabge .SegmentNumber ));_gabd .WriteString (_c .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_dabge .Type ));_gabd .WriteString (_c .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_dabge .RetainFlag ));_gabd .WriteString (_c .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_dabge .PageAssociation ));_gabd .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_dabge .PageAssociationFieldSize ));_gabd .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_cdce :=range _dabge .RTSNumbers {_gabd .WriteString (_c .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_cdce ));};_gabd .WriteString (_c .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_dabge .HeaderLength ));_gabd .WriteString (_c .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_dabge .SegmentDataLength ));_gabd .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_dabge .SegmentDataStartOffset ));return _gabd .String ();};type SegmentEncoder interface{Encode (_gccb _gc .BinaryWriter )(_aabb int ,_gdad error );};func (_acda *SymbolDictionary )encodeRefinementATFlags (_aefdf _gc .BinaryWriter )(_ddbe int ,_cgdf error ){const _gbgdd ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if !_acda .UseRefinementAggregation ||_acda .SdrTemplate !=0{return 0,nil ;};for _dede :=0;_dede < 2;_dede ++{if _cgdf =_aefdf .WriteByte (byte (_acda .SdrATX [_dede ]));_cgdf !=nil {return _ddbe ,_ff .Wrapf (_cgdf ,_gbgdd ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_dede );};_ddbe ++;if _cgdf =_aefdf .WriteByte (byte (_acda .SdrATY [_dede ]));_cgdf !=nil {return _ddbe ,_ff .Wrapf (_cgdf ,_gbgdd ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_dede );};_ddbe ++;};return _ddbe ,nil ;};func (_geb *Header )readNumberOfReferredToSegments (_ecga _gc .StreamReader )(uint64 ,error ){const _eac ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";_aggb ,_baba :=_ecga .ReadBits (3);if _baba !=nil {return 0,_ff .Wrap (_baba ,_eac ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_aggb &=0xf;var _caf []byte ;if _aggb <=4{_caf =make ([]byte ,5);for _gfgd :=0;_gfgd <=4;_gfgd ++{_ddf ,_gcf :=_ecga .ReadBit ();if _gcf !=nil {return 0,_ff .Wrap (_gcf ,_eac ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_caf [_gfgd ]=byte (_ddf );};}else {_aggb ,_baba =_ecga .ReadBits (29);if _baba !=nil {return 0,_baba ;};_aggb &=_f .MaxInt32 ;_fcgb :=(_aggb +8)>>3;_fcgb <<=3;_caf =make ([]byte ,_fcgb );var _ccef uint64 ;for _ccef =0;_ccef < _fcgb ;_ccef ++{_cdae ,_cgcc :=_ecga .ReadBit ();if _cgcc !=nil {return 0,_ff .Wrap (_cgcc ,_eac ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_caf [_ccef ]=byte (_cdae );};};return _aggb ,nil ;};func (_fdcg *SymbolDictionary )setSymbolsArray ()error {if _fdcg ._ecfd ==nil {if _gcgae :=_fdcg .retrieveImportSymbols ();_gcgae !=nil {return _gcgae ;};};if _fdcg ._bcfgb ==nil {_fdcg ._bcfgb =append (_fdcg ._bcfgb ,_fdcg ._ecfd ...);};return nil ;};func (_cgbb *TextRegion )readUseRefinement ()error {if !_cgbb .UseRefinement ||_cgbb .SbrTemplate !=0{return nil ;};var (_dace byte ;_aeag error ;);_cgbb .SbrATX =make ([]int8 ,2);_cgbb .SbrATY =make ([]int8 ,2);_dace ,_aeag =_cgbb ._egfgg .ReadByte ();if _aeag !=nil {return _aeag ;};_cgbb .SbrATX [0]=int8 (_dace );_dace ,_aeag =_cgbb ._egfgg .ReadByte ();if _aeag !=nil {return _aeag ;};_cgbb .SbrATY [0]=int8 (_dace );_dace ,_aeag =_cgbb ._egfgg .ReadByte ();if _aeag !=nil {return _aeag ;};_cgbb .SbrATX [1]=int8 (_dace );_dace ,_aeag =_cgbb ._egfgg .ReadByte ();if _aeag !=nil {return _aeag ;};_cgbb .SbrATY [1]=int8 (_dace );return nil ;};func (_gfcd *SymbolDictionary )checkInput ()error {if _gfcd .SdHuffDecodeHeightSelection ==2{_bd .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_gfcd .SdHuffDecodeHeightSelection );};if _gfcd .SdHuffDecodeWidthSelection ==2{_bd .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_gfcd .SdHuffDecodeWidthSelection );};if _gfcd .IsHuffmanEncoded {if _gfcd .SdTemplate !=0{_bd .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_gfcd .SdTemplate );};if !_gfcd .UseRefinementAggregation {if !_gfcd .UseRefinementAggregation {if _gfcd ._bdcd {_bd .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");_gfcd ._bdcd =false ;};if _gfcd ._egfg {_bd .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");_gfcd ._egfg =false ;};};};}else {if _gfcd .SdHuffBMSizeSelection !=0{_bd .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_gfcd .SdHuffBMSizeSelection =0;};if _gfcd .SdHuffDecodeWidthSelection !=0{_bd .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");_gfcd .SdHuffDecodeWidthSelection =0;};if _gfcd .SdHuffDecodeHeightSelection !=0{_bd .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");_gfcd .SdHuffDecodeHeightSelection =0;};};if !_gfcd .UseRefinementAggregation {if _gfcd .SdrTemplate !=0{_bd .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_gfcd .SdrTemplate );_gfcd .SdrTemplate =0;};};if !_gfcd .IsHuffmanEncoded ||!_gfcd .UseRefinementAggregation {if _gfcd .SdHuffAggInstanceSelection {_bd .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_gfcd .SdHuffAggInstanceSelection );};};return nil ;};func (_cab *GenericRefinementRegion )readAtPixels ()error {_cab .GrAtX =make ([]int8 ,2);_cab .GrAtY =make ([]int8 ,2);_cgf ,_egee :=_cab ._fbb .ReadByte ();if _egee !=nil {return _egee ;};_cab .GrAtX [0]=int8 (_cgf );_cgf ,_egee =_cab ._fbb .ReadByte ();if _egee !=nil {return _egee ;};_cab .GrAtY [0]=int8 (_cgf );_cgf ,_egee =_cab ._fbb .ReadByte ();if _egee !=nil {return _egee ;};_cab .GrAtX [1]=int8 (_cgf );_cgf ,_egee =_cab ._fbb .ReadByte ();if _egee !=nil {return _egee ;};_cab .GrAtY [1]=int8 (_cgf );return nil ;};var _ SegmentEncoder =&RegionSegment {};func (_febe *TableSegment )HtLow ()int32 {return _febe ._bdged };func (_afdf *SymbolDictionary )decodeHeightClassBitmap (_gbcb *_b .Bitmap ,_beee int64 ,_dbfa int ,_ffge []int )error {for _efb :=_beee ;_efb < int64 (_afdf ._beca );_efb ++{var _gbbe int ;for _dcdf :=_beee ;_dcdf <=_efb -1;_dcdf ++{_gbbe +=_ffge [_dcdf ];};_bged :=_fb .Rect (_gbbe ,0,_gbbe +_ffge [_efb ],_dbfa );_fafc ,_dggf :=_b .Extract (_bged ,_gbcb );if _dggf !=nil {return _dggf ;};_afdf ._ccaac [_efb ]=_fafc ;_afdf ._bcfgb =append (_afdf ._bcfgb ,_fafc );};return nil ;};func (_beaf *PatternDictionary )GetDictionary ()([]*_b .Bitmap ,error ){if _beaf .Patterns !=nil {return _beaf .Patterns ,nil ;};if !_beaf .IsMMREncoded {_beaf .setGbAtPixels ();};_abfc :=NewGenericRegion (_beaf ._dbgb );_abfc .setParametersMMR (_beaf .IsMMREncoded ,_beaf .DataOffset ,_beaf .DataLength ,uint32 (_beaf .HdpHeight ),(_beaf .GrayMax +1)*uint32 (_beaf .HdpWidth ),_beaf .HDTemplate ,false ,false ,_beaf .GBAtX ,_beaf .GBAtY );_efdd ,_feab :=_abfc .GetRegionBitmap ();if _feab !=nil {return nil ,_feab ;};if _feab =_beaf .extractPatterns (_efdd );_feab !=nil {return nil ,_feab ;};return _beaf .Patterns ,nil ;};type SymbolDictionary struct{_eggb _gc .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_bdcd bool ;_egfg bool ;SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;NumberOfNewSymbols uint32 ;Header *Header ;_dbad uint32 ;_ecfd []*_b .Bitmap ;_beca uint32 ;_ccaac []*_b .Bitmap ;_agfb _ag .Tabler ;_dcad _ag .Tabler ;_ebcc _ag .Tabler ;_gfccf _ag .Tabler ;_edea []*_b .Bitmap ;_bcfgb []*_b .Bitmap ;_cceeb *_ge .Decoder ;_dedcd *TextRegion ;_adfb *GenericRegion ;_cbbbb *GenericRefinementRegion ;_bgcee *_ge .DecoderStats ;_dead *_ge .DecoderStats ;_adee *_ge .DecoderStats ;_deeb *_ge .DecoderStats ;_badb *_ge .DecoderStats ;_bafc *_ge .DecoderStats ;_eeed *_ge .DecoderStats ;_fedf *_ge .DecoderStats ;_fdcf *_ge .DecoderStats ;_ggee int8 ;_eegf *_b .Bitmaps ;_bagc []int ;_fcea map[int ]int ;_dade bool ;};func (_fggbf *TextRegion )initSymbols ()error {const _cfdca ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_dcafe :=range _fggbf .Header .RTSegments {if _dcafe ==nil {return _ff .Error (_cfdca ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");};if _dcafe .Type ==0{_fbef ,_gafd :=_dcafe .GetSegmentData ();if _gafd !=nil {return _ff .Wrap (_gafd ,_cfdca ,"");};_egdc ,_ggface :=_fbef .(*SymbolDictionary );if !_ggface {return _ff .Error (_cfdca ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_egdc ._fdcf =_fggbf ._babb ;_cgbe ,_gafd :=_egdc .GetDictionary ();if _gafd !=nil {return _ff .Wrap (_gafd ,_cfdca ,"");};_fggbf .Symbols =append (_fggbf .Symbols ,_cgbe ...);};};_fggbf .NumberOfSymbols =uint32 (len (_fggbf .Symbols ));return nil ;};func (_gbacd *PatternDictionary )setGbAtPixels (){if _gbacd .HDTemplate ==0{_gbacd .GBAtX =make ([]int8 ,4);_gbacd .GBAtY =make ([]int8 ,4);_gbacd .GBAtX [0]=-int8 (_gbacd .HdpWidth );_gbacd .GBAtY [0]=0;_gbacd .GBAtX [1]=-3;_gbacd .GBAtY [1]=-1;_gbacd .GBAtX [2]=2;_gbacd .GBAtY [2]=-2;_gbacd .GBAtX [3]=-2;_gbacd .GBAtY [3]=-2;}else {_gbacd .GBAtX =[]int8 {-int8 (_gbacd .HdpWidth )};_gbacd .GBAtY =[]int8 {0};};};func (_ffbd *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_dcgd ,_bbb ,_cfg ,_ebc ,_agg ,_dfa ,_gff ,_dbd ,_fcec int )(_aadd error ){var (_ebfb ,_eca int ;_bab ,_baa int ;_eag ,_gaf int ;_dge byte ;);if _dcgd > 0{_dge ,_aadd =_ffbd .RegionBitmap .GetByte (_gff -_cfg );if _aadd !=nil {return ;};_bab =int (_dge );};if _dbd > 0&&_dbd <=_ffbd .ReferenceBitmap .Height {_dge ,_aadd =_ffbd .ReferenceBitmap .GetByte (_fcec -_ebc +_dfa );if _aadd !=nil {return ;};_baa =int (_dge )<<2;};if _dbd >=0&&_dbd < _ffbd .ReferenceBitmap .Height {_dge ,_aadd =_ffbd .ReferenceBitmap .GetByte (_fcec +_dfa );if _aadd !=nil {return ;};_eag =int (_dge );};if _dbd > -2&&_dbd < _ffbd .ReferenceBitmap .Height -1{_dge ,_aadd =_ffbd .ReferenceBitmap .GetByte (_fcec +_ebc +_dfa );if _aadd !=nil {return ;};_gaf =int (_dge );};_ebfb =((_bab >>5)&0x6)|((_gaf >>2)&0x30)|(_eag &0xc0)|(_baa &0x200);_eca =((_gaf >>2)&0x70)|(_eag &0xc0)|(_baa &0x700);var _cgd int ;for _fbd :=0;_fbd < _agg ;_fbd =_cgd {var (_acb int ;_beg int ;);_cgd =_fbd +8;if _acb =_bbb -_fbd ;_acb > 8{_acb =8;};_dfb :=_cgd < _bbb ;_eae :=_cgd < _ffbd .ReferenceBitmap .Width ;_adc :=_dfa +1;if _dcgd > 0{_dge =0;if _dfb {_dge ,_aadd =_ffbd .RegionBitmap .GetByte (_gff -_cfg +1);if _aadd !=nil {return ;};};_bab =(_bab <<8)|int (_dge );};if _dbd > 0&&_dbd <=_ffbd .ReferenceBitmap .Height {var _eege int ;if _eae {_dge ,_aadd =_ffbd .ReferenceBitmap .GetByte (_fcec -_ebc +_adc );if _aadd !=nil {return ;};_eege =int (_dge )<<2;};_baa =(_baa <<8)|_eege ;};if _dbd >=0&&_dbd < _ffbd .ReferenceBitmap .Height {_dge =0;if _eae {_dge ,_aadd =_ffbd .ReferenceBitmap .GetByte (_fcec +_adc );if _aadd !=nil {return ;};};_eag =(_eag <<8)|int (_dge );};if _dbd > -2&&_dbd < (_ffbd .ReferenceBitmap .Height -1){_dge =0;if _eae {_dge ,_aadd =_ffbd .ReferenceBitmap .GetByte (_fcec +_ebc +_adc );if _aadd !=nil {return ;};};_gaf =(_gaf <<8)|int (_dge );};for _cge :=0;_cge < _acb ;_cge ++{var _gggb int ;_fca :=(_eca >>4)&0x1ff;switch _fca {case 0x1ff:_gggb =1;case 0x00:_gggb =0;default:_ffbd ._db .SetIndex (int32 (_ebfb ));_gggb ,_aadd =_ffbd ._eg .DecodeBit (_ffbd ._db );if _aadd !=nil {return ;};};_fgbf :=uint (7-_cge );_beg |=_gggb <<_fgbf ;_ebfb =((_ebfb &0x0d6)<<1)|_gggb |(_bab >>_fgbf +5)&0x002|((_gaf >>_fgbf +2)&0x010)|((_eag >>_fgbf )&0x040)|((_baa >>_fgbf )&0x200);_eca =((_eca &0xdb)<<1)|((_gaf >>_fgbf +2)&0x010)|((_eag >>_fgbf )&0x080)|((_baa >>_fgbf )&0x400);};_aadd =_ffbd .RegionBitmap .SetByte (_gff ,byte (_beg ));if _aadd !=nil {return ;};_gff ++;_fcec ++;};return nil ;};func (_ebba *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _ebba .IsHuffmanEncoded {switch _ebba .SdHuffDecodeWidthSelection {case 0:_fag ,_fdcd :=_ag .GetStandardTable (2);if _fdcd !=nil {return 0,_fdcd ;};return _fag .Decode (_ebba ._eggb );case 1:_efgba ,_dedee :=_ag .GetStandardTable (3);if _dedee !=nil {return 0,_dedee ;};return _efgba .Decode (_ebba ._eggb );case 3:if _ebba ._dcad ==nil {var _afg int ;if _ebba .SdHuffDecodeHeightSelection ==3{_afg ++;};_bdbc ,_faga :=_ebba .getUserTable (_afg );if _faga !=nil {return 0,_faga ;};_ebba ._dcad =_bdbc ;};return _ebba ._dcad .Decode (_ebba ._eggb );};}else {_ebfc ,_fddb :=_ebba ._cceeb .DecodeInt (_ebba ._adee );if _fddb !=nil {return 0,_fddb ;};return int64 (_ebfc ),nil ;};return 0,nil ;};type Documenter interface{GetPage (int )(Pager ,error );GetGlobalSegment (int )(*Header ,error );};func (_deag *HalftoneRegion )renderPattern (_bdec [][]int )(_gceg error ){var _aefe ,_bbede int ;for _fgbc :=0;_fgbc < int (_deag .HGridHeight );_fgbc ++{for _ebgg :=0;_ebgg < int (_deag .HGridWidth );_ebgg ++{_aefe =_deag .computeX (_fgbc ,_ebgg );_bbede =_deag .computeY (_fgbc ,_ebgg );_aagag :=_deag .Patterns [_bdec [_fgbc ][_ebgg ]];if _gceg =_b .Blit (_aagag ,_deag .HalftoneRegionBitmap ,_aefe +int (_deag .HGridX ),_bbede +int (_deag .HGridY ),_deag .CombinationOperator );_gceg !=nil {return _gceg ;};};};return nil ;};func (_ffbdd *GenericRegion )overrideAtTemplate0a (_eda ,_eecd ,_fcdb ,_ceg ,_ecgg ,_cfedg int )int {if _ffbdd .GBAtOverride [0]{_eda &=0xFFEF;if _ffbdd .GBAtY [0]==0&&_ffbdd .GBAtX [0]>=-int8 (_ecgg ){_eda |=(_ceg >>uint (int8 (_cfedg )-_ffbdd .GBAtX [0]&0x1))<<4;}else {_eda |=int (_ffbdd .getPixel (_eecd +int (_ffbdd .GBAtX [0]),_fcdb +int (_ffbdd .GBAtY [0])))<<4;};};if _ffbdd .GBAtOverride [1]{_eda &=0xFBFF;if _ffbdd .GBAtY [1]==0&&_ffbdd .GBAtX [1]>=-int8 (_ecgg ){_eda |=(_ceg >>uint (int8 (_cfedg )-_ffbdd .GBAtX [1]&0x1))<<10;}else {_eda |=int (_ffbdd .getPixel (_eecd +int (_ffbdd .GBAtX [1]),_fcdb +int (_ffbdd .GBAtY [1])))<<10;};};if _ffbdd .GBAtOverride [2]{_eda &=0xF7FF;if _ffbdd .GBAtY [2]==0&&_ffbdd .GBAtX [2]>=-int8 (_ecgg ){_eda |=(_ceg >>uint (int8 (_cfedg )-_ffbdd .GBAtX [2]&0x1))<<11;}else {_eda |=int (_ffbdd .getPixel (_eecd +int (_ffbdd .GBAtX [2]),_fcdb +int (_ffbdd .GBAtY [2])))<<11;};};if _ffbdd .GBAtOverride [3]{_eda &=0x7FFF;if _ffbdd .GBAtY [3]==0&&_ffbdd .GBAtX [3]>=-int8 (_ecgg ){_eda |=(_ceg >>uint (int8 (_cfedg )-_ffbdd .GBAtX [3]&0x1))<<15;}else {_eda |=int (_ffbdd .getPixel (_eecd +int (_ffbdd .GBAtX [3]),_fcdb +int (_ffbdd .GBAtY [3])))<<15;};};return _eda ;};type EncodeInitializer interface{InitEncode ();};func (_cdff *GenericRegion )overrideAtTemplate3 (_fdg ,_eegb ,_cfa ,_abee ,_aaf int )int {_fdg &=0x3EF;if _cdff .GBAtY [0]==0&&_cdff .GBAtX [0]>=-int8 (_aaf ){_fdg |=(_abee >>uint (7-(int8 (_aaf )+_cdff .GBAtX [0]))&0x1)<<4;}else {_fdg |=int (_cdff .getPixel (_eegb +int (_cdff .GBAtX [0]),_cfa +int (_cdff .GBAtY [0])))<<4;};return _fdg ;};func (_gdf *PageInformationSegment )Encode (w _gc .BinaryWriter )(_ggcg int ,_bade error ){const _bbbe ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";_ddaa :=make ([]byte ,4);_fe .BigEndian .PutUint32 (_ddaa ,uint32 (_gdf .PageBMWidth ));_ggcg ,_bade =w .Write (_ddaa );if _bade !=nil {return _ggcg ,_ff .Wrap (_bade ,_bbbe ,"\u0077\u0069\u0064t\u0068");};_fe .BigEndian .PutUint32 (_ddaa ,uint32 (_gdf .PageBMHeight ));var _ecbfg int ;_ecbfg ,_bade =w .Write (_ddaa );if _bade !=nil {return _ecbfg +_ggcg ,_ff .Wrap (_bade ,_bbbe ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_ggcg +=_ecbfg ;_fe .BigEndian .PutUint32 (_ddaa ,uint32 (_gdf .ResolutionX ));_ecbfg ,_bade =w .Write (_ddaa );if _bade !=nil {return _ecbfg +_ggcg ,_ff .Wrap (_bade ,_bbbe ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_ggcg +=_ecbfg ;_fe .BigEndian .PutUint32 (_ddaa ,uint32 (_gdf .ResolutionY ));if _ecbfg ,_bade =w .Write (_ddaa );_bade !=nil {return _ecbfg +_ggcg ,_ff .Wrap (_bade ,_bbbe ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_ggcg +=_ecbfg ;if _bade =_gdf .encodeFlags (w );_bade !=nil {return _ggcg ,_ff .Wrap (_bade ,_bbbe ,"");};_ggcg ++;if _ecbfg ,_bade =_gdf .encodeStripingInformation (w );_bade !=nil {return _ggcg ,_ff .Wrap (_bade ,_bbbe ,"");};_ggcg +=_ecbfg ;return _ggcg ,nil ;};func (_dedb *HalftoneRegion )computeY (_cccc ,_gdgb int )int {return _dedb .shiftAndFill (int (_dedb .HGridY )+_cccc *int (_dedb .HRegionX )-_gdgb *int (_dedb .HRegionY ));};func (_gbe *GenericRegion )Size ()int {return _gbe .RegionSegment .Size ()+1+2*len (_gbe .GBAtX )};func (_geda *HalftoneRegion )computeSegmentDataStructure ()error {_geda .DataOffset =_geda ._acbge .StreamPosition ();_geda .DataHeaderLength =_geda .DataOffset -_geda .DataHeaderOffset ;_geda .DataLength =int64 (_geda ._acbge .Length ())-_geda .DataHeaderLength ;return nil ;};func (_dedbb *PageInformationSegment )checkInput ()error {if _dedbb .PageBMHeight ==_f .MaxInt32 {if !_dedbb .IsStripe {_bd .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");};};return nil ;};func NewGenericRegion (r _gc .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_afd :r };};func (_fbdbb *TextRegion )Encode (w _gc .BinaryWriter )(_cggg int ,_abde error ){const _geee ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _cggg ,_abde =_fbdbb .RegionInfo .Encode (w );_abde !=nil {return _cggg ,_ff .Wrap (_abde ,_geee ,"");};var _ebga int ;if _ebga ,_abde =_fbdbb .encodeFlags (w );_abde !=nil {return _cggg ,_ff .Wrap (_abde ,_geee ,"");};_cggg +=_ebga ;if _ebga ,_abde =_fbdbb .encodeSymbols (w );_abde !=nil {return _cggg ,_ff .Wrap (_abde ,_geee ,"");};_cggg +=_ebga ;return _cggg ,nil ;};func (_dabe *Header )readHeaderLength (_cecg _gc .StreamReader ,_agda int64 ){_dabe .HeaderLength =_cecg .StreamPosition ()-_agda ;};func (_fgd *SymbolDictionary )InitEncode (symbols *_b .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _acgc ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";_fgd .SdATX =[]int8 {3,-3,2,-2};_fgd .SdATY =[]int8 {-1,-1,-2,-2};_fgd ._eegf =symbols ;_fgd ._bagc =make ([]int ,len (symbolList ));copy (_fgd ._bagc ,symbolList );if len (_fgd ._bagc )!=_fgd ._eegf .Size (){return _ff .Error (_acgc ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");};_fgd .NumberOfNewSymbols =uint32 (symbols .Size ());_fgd .NumberOfExportedSymbols =uint32 (symbols .Size ());_fgd ._fcea =symbolMap ;_fgd ._dade =unborderSymbols ;return nil ;};type template1 struct{};func (_gbcf *Header )writeSegmentPageAssociation (_afca _gc .BinaryWriter )(_feage int ,_afb error ){const _gcfd ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";if _gbcf .pageSize ()!=4{if _afb =_afca .WriteByte (byte (_gbcf .PageAssociation ));_afb !=nil {return 0,_ff .Wrap (_afb ,_gcfd ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_ebae :=make ([]byte ,4);_fe .BigEndian .PutUint32 (_ebae ,uint32 (_gbcf .PageAssociation ));if _feage ,_afb =_afca .Write (_ebae );_afb !=nil {return 0,_ff .Wrap (_afb ,_gcfd ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};return _feage ,nil ;};func (_edbe *PageInformationSegment )DefaultPixelValue ()uint8 {return _edbe ._aefb };func (_bdcb *SymbolDictionary )encodeNumSyms (_gdgcc _gc .BinaryWriter )(_abgg int ,_faff error ){const _efeb ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_bgcd :=make ([]byte ,4);_fe .BigEndian .PutUint32 (_bgcd ,_bdcb .NumberOfExportedSymbols );if _abgg ,_faff =_gdgcc .Write (_bgcd );_faff !=nil {return _abgg ,_ff .Wrap (_faff ,_efeb ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_fe .BigEndian .PutUint32 (_bgcd ,_bdcb .NumberOfNewSymbols );_aafd ,_faff :=_gdgcc .Write (_bgcd );if _faff !=nil {return _abgg ,_ff .Wrap (_faff ,_efeb ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _abgg +_aafd ,nil ;};func (_dbbg *SymbolDictionary )readNumberOfExportedSymbols ()error {_gcfg ,_eea :=_dbbg ._eggb .ReadBits (32);if _eea !=nil {return _eea ;};_dbbg .NumberOfExportedSymbols =uint32 (_gcfg &_f .MaxUint32 );return nil ;};var _ templater =&template1 {};func (_aede *SymbolDictionary )getSbSymCodeLen ()int8 {_adfd :=int8 (_f .Ceil (_f .Log (float64 (_aede ._dbad +_aede .NumberOfNewSymbols ))/_f .Log (2)));if _aede .IsHuffmanEncoded &&_adfd < 1{return 1;};return _adfd ;};type EndOfStripe struct{_gg _gc .StreamReader ;_fg int ;};func (_cgbde *TextRegion )getUserTable (_aegb int )(_ag .Tabler ,error ){const _eaebc ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";var _fgaa int ;for _ ,_dcegb :=range _cgbde .Header .RTSegments {if _dcegb .Type ==53{if _fgaa ==_aegb {_bdda ,_adcf :=_dcegb .GetSegmentData ();if _adcf !=nil {return nil ,_adcf ;};_gaaf ,_geec :=_bdda .(*TableSegment );if !_geec {_bd .Log .Debug (_c .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_dcegb .SegmentNumber ));return nil ,_ff .Error (_eaebc ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};return _ag .NewEncodedTable (_gaaf );};_fgaa ++;};};return nil ,nil ;};func (_abae *TextRegion )Init (header *Header ,r _gc .StreamReader )error {_abae .Header =header ;_abae ._egfgg =r ;_abae .RegionInfo =NewRegionSegment (_abae ._egfgg );return _abae .parseHeader ();};func (_ef *EndOfStripe )LineNumber ()int {return _ef ._fg };func (_egg *GenericRegion )Encode (w _gc .BinaryWriter )(_bdb int ,_fded error ){const _fbbb ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _egg .Bitmap ==nil {return 0,_ff .Error (_fbbb ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};_dcc ,_fded :=_egg .RegionSegment .Encode (w );if _fded !=nil {return 0,_ff .Wrap (_fded ,_fbbb ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_bdb +=_dcc ;if _fded =w .SkipBits (4);_fded !=nil {return _bdb ,_ff .Wrap (_fded ,_fbbb ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");};var _cdd int ;if _egg .IsTPGDon {_cdd =1;};if _fded =w .WriteBit (_cdd );_fded !=nil {return _bdb ,_ff .Wrap (_fded ,_fbbb ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_cdd =0;if _fded =w .WriteBit (int (_egg .GBTemplate >>1)&0x01);_fded !=nil {return _bdb ,_ff .Wrap (_fded ,_fbbb ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");};if _fded =w .WriteBit (int (_egg .GBTemplate )&0x01);_fded !=nil {return _bdb ,_ff .Wrap (_fded ,_fbbb ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _egg .UseMMR {_cdd =1;};if _fded =w .WriteBit (_cdd );_fded !=nil {return _bdb ,_ff .Wrap (_fded ,_fbbb ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_bdb ++;if _dcc ,_fded =_egg .writeGBAtPixels (w );_fded !=nil {return _bdb ,_ff .Wrap (_fded ,_fbbb ,"");};_bdb +=_dcc ;_fcag :=_cd .New ();if _fded =_fcag .EncodeBitmap (_egg .Bitmap ,_egg .IsTPGDon );_fded !=nil {return _bdb ,_ff .Wrap (_fded ,_fbbb ,"");};_fcag .Final ();var _gad int64 ;if _gad ,_fded =_fcag .WriteTo (w );_fded !=nil {return _bdb ,_ff .Wrap (_fded ,_fbbb ,"");};_bdb +=int (_gad );return _bdb ,nil ;};func (_bg *EndOfStripe )Init (h *Header ,r _gc .StreamReader )error {_bg ._gg =r ;return _bg .parseHeader (h ,r );};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _gc .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_cebc *HalftoneRegion )Init (hd *Header ,r _gc .StreamReader )error {_cebc ._acbge =r ;_cebc ._ebfbg =hd ;_cebc .RegionSegment =NewRegionSegment (r );return _cebc .parseHeader ();};func (_bcecf *TextRegion )decodeID ()(int64 ,error ){if _bcecf .IsHuffmanEncoded {if _bcecf ._afgg ==nil {_caba ,_bfaf :=_bcecf ._egfgg .ReadBits (byte (_bcecf ._gdbe ));return int64 (_caba ),_bfaf ;};return _bcecf ._afgg .Decode (_bcecf ._egfgg );};return _bcecf ._fefe .DecodeIAID (uint64 (_bcecf ._gdbe ),_bcecf ._babb );};func (_adb *GenericRegion )decodeTemplate1 (_aba ,_dab ,_abd int ,_feb ,_bag int )(_bebg error ){const _ceca ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";var (_fab ,_cba int ;_aeabd ,_ddab int ;_cca byte ;_dgb ,_bgg int ;);if _aba >=1{_cca ,_bebg =_adb .Bitmap .GetByte (_bag );if _bebg !=nil {return _ff .Wrap (_bebg ,_ceca ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_aeabd =int (_cca );};if _aba >=2{_cca ,_bebg =_adb .Bitmap .GetByte (_bag -_adb .Bitmap .RowStride );if _bebg !=nil {return _ff .Wrap (_bebg ,_ceca ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_ddab =int (_cca )<<5;};_fab =((_aeabd >>1)&0x1f8)|((_ddab >>1)&0x1e00);for _dgc :=0;_dgc < _abd ;_dgc =_dgb {var (_dfaa byte ;_dfg int ;);_dgb =_dgc +8;if _dfea :=_dab -_dgc ;_dfea > 8{_dfg =8;}else {_dfg =_dfea ;};if _aba > 0{_aeabd <<=8;if _dgb < _dab {_cca ,_bebg =_adb .Bitmap .GetByte (_bag +1);if _bebg !=nil {return _ff .Wrap (_bebg ,_ceca ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_aeabd |=int (_cca );};};if _aba > 1{_ddab <<=8;if _dgb < _dab {_cca ,_bebg =_adb .Bitmap .GetByte (_bag -_adb .Bitmap .RowStride +1);if _bebg !=nil {return _ff .Wrap (_bebg ,_ceca ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_ddab |=int (_cca )<<5;};};for _eedf :=0;_eedf < _dfg ;_eedf ++{if _adb ._gcga {_cba =_adb .overrideAtTemplate1 (_fab ,_dgc +_eedf ,_aba ,int (_dfaa ),_eedf );_adb ._adgf .SetIndex (int32 (_cba ));}else {_adb ._adgf .SetIndex (int32 (_fab ));};_bgg ,_bebg =_adb ._cbbb .DecodeBit (_adb ._adgf );if _bebg !=nil {return _ff .Wrap (_bebg ,_ceca ,"");};_dfaa |=byte (_bgg )<<uint (7-_eedf );_cce :=uint (8-_eedf );_fab =((_fab &0xefb)<<1)|_bgg |((_aeabd >>_cce )&0x8)|((_ddab >>_cce )&0x200);};if _dea :=_adb .Bitmap .SetByte (_feb ,_dfaa );_dea !=nil {return _ff .Wrap (_dea ,_ceca ,"");};_feb ++;_bag ++;};return nil ;};func (_dec *Header )readHeaderFlags ()error {const _cgbd ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_adgg ,_ddb :=_dec .Reader .ReadBit ();if _ddb !=nil {return _ff .Wrap (_ddb ,_cgbd ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");};if _adgg !=0{_dec .RetainFlag =true ;};_adgg ,_ddb =_dec .Reader .ReadBit ();if _ddb !=nil {return _ff .Wrap (_ddb ,_cgbd ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _adgg !=0{_dec .PageAssociationFieldSize =true ;};_abgd ,_ddb :=_dec .Reader .ReadBits (6);if _ddb !=nil {return _ff .Wrap (_ddb ,_cgbd ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_dec .Type =Type (int (_abgd ));return nil ;};type Segmenter interface{Init (_ecbb *Header ,_fefbc _gc .StreamReader )error ;};func (_gccd *TextRegion )decodeRdx ()(int64 ,error ){const _abgga ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";if _gccd .IsHuffmanEncoded {if _gccd .SbHuffRDX ==3{if _gccd ._eaee ==nil {var (_dagea int ;_ffcd error ;);if _gccd .SbHuffFS ==3{_dagea ++;};if _gccd .SbHuffDS ==3{_dagea ++;};if _gccd .SbHuffDT ==3{_dagea ++;};if _gccd .SbHuffRDWidth ==3{_dagea ++;};if _gccd .SbHuffRDHeight ==3{_dagea ++;};_gccd ._eaee ,_ffcd =_gccd .getUserTable (_dagea );if _ffcd !=nil {return 0,_ff .Wrap (_ffcd ,_abgga ,"");};};return _gccd ._eaee .Decode (_gccd ._egfgg );};_beeb ,_eecab :=_ag .GetStandardTable (14+int (_gccd .SbHuffRDX ));if _eecab !=nil {return 0,_ff .Wrap (_eecab ,_abgga ,"");};return _beeb .Decode (_gccd ._egfgg );};_cgcg ,_aagaf :=_gccd ._fefe .DecodeInt (_gccd ._fbac );if _aagaf !=nil {return 0,_ff .Wrap (_aagaf ,_abgga ,"");};return int64 (_cgcg ),nil ;};var _ _ag .BasicTabler =&TableSegment {};func (_ebdcf *Header )readReferredToSegmentNumbers (_beae _gc .StreamReader ,_bcdc int )([]int ,error ){const _fdga ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";_ffgg :=make ([]int ,_bcdc );if _bcdc > 0{_ebdcf .RTSegments =make ([]*Header ,_bcdc );var (_aff uint64 ;_cegc error ;);for _fdd :=0;_fdd < _bcdc ;_fdd ++{_aff ,_cegc =_beae .ReadBits (byte (_ebdcf .referenceSize ())<<3);if _cegc !=nil {return nil ,_ff .Wrapf (_cegc ,_fdga ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_fdd );};_ffgg [_fdd ]=int (_aff &_f .MaxInt32 );};};return _ffgg ,nil ;};func (_eeda *SymbolDictionary )GetDictionary ()([]*_b .Bitmap ,error ){_bd .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){_bd .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");_bd .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_eeda ._edea ,_eeda ._ccaac );}();if _eeda ._edea ==nil {var _gfd error ;if _eeda .UseRefinementAggregation {_eeda ._ggee =_eeda .getSbSymCodeLen ();};if !_eeda .IsHuffmanEncoded {if _gfd =_eeda .setCodingStatistics ();_gfd !=nil {return nil ,_gfd ;};};_eeda ._ccaac =make ([]*_b .Bitmap ,_eeda .NumberOfNewSymbols );var _aabeb []int ;if _eeda .IsHuffmanEncoded &&!_eeda .UseRefinementAggregation {_aabeb =make ([]int ,_eeda .NumberOfNewSymbols );};if _gfd =_eeda .setSymbolsArray ();_gfd !=nil {return nil ,_gfd ;};var _edgb ,_eded int64 ;_eeda ._beca =0;for _eeda ._beca < _eeda .NumberOfNewSymbols {_eded ,_gfd =_eeda .decodeHeightClassDeltaHeight ();if _gfd !=nil {return nil ,_gfd ;};_edgb +=_eded ;var _dbcb ,_gdeg uint32 ;_cfeb :=int64 (_eeda ._beca );for {var _gceb int64 ;_gceb ,_gfd =_eeda .decodeDifferenceWidth ();if _dg .Is (_gfd ,_gd .ErrOOB ){break ;};if _gfd !=nil {return nil ,_gfd ;};if _eeda ._beca >=_eeda .NumberOfNewSymbols {break ;};_dbcb +=uint32 (_gceb );_gdeg +=_dbcb ;if !_eeda .IsHuffmanEncoded ||_eeda .UseRefinementAggregation {if !_eeda .UseRefinementAggregation {_gfd =_eeda .decodeDirectlyThroughGenericRegion (_dbcb ,uint32 (_edgb ));if _gfd !=nil {return nil ,_gfd ;};}else {_gfd =_eeda .decodeAggregate (_dbcb ,uint32 (_edgb ));if _gfd !=nil {return nil ,_gfd ;};};}else if _eeda .IsHuffmanEncoded &&!_eeda .UseRefinementAggregation {_aabeb [_eeda ._beca ]=int (_dbcb );};_eeda ._beca ++;};if _eeda .IsHuffmanEncoded &&!_eeda .UseRefinementAggregation {var _ceeff int64 ;if _eeda .SdHuffBMSizeSelection ==0{var _eeca _ag .Tabler ;_eeca ,_gfd =_ag .GetStandardTable (1);if _gfd !=nil {return nil ,_gfd ;};_ceeff ,_gfd =_eeca .Decode (_eeda ._eggb );if _gfd !=nil {return nil ,_gfd ;};}else {_ceeff ,_gfd =_eeda .huffDecodeBmSize ();if _gfd !=nil {return nil ,_gfd ;};};_eeda ._eggb .Align ();var _cfcg *_b .Bitmap ;_cfcg ,_gfd =_eeda .decodeHeightClassCollectiveBitmap (_ceeff ,uint32 (_edgb ),_gdeg );if _gfd !=nil {return nil ,_gfd ;};_gfd =_eeda .decodeHeightClassBitmap (_cfcg ,_cfeb ,int (_edgb ),_aabeb );if _gfd !=nil {return nil ,_gfd ;};};};_aed ,_gfd :=_eeda .getToExportFlags ();if _gfd !=nil {return nil ,_gfd ;};_eeda .setExportedSymbols (_aed );};return _eeda ._edea ,nil ;};func _dgf (_cceg int )int {if _cceg ==0{return 0;};_cceg |=_cceg >>1;_cceg |=_cceg >>2;_cceg |=_cceg >>4;_cceg |=_cceg >>8;_cceg |=_cceg >>16;return (_cceg +1)>>1;};func (_gefb *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_bccg ,_edd :=_gefb ._eaa .ReadBit ();if _edd !=nil {return _edd ;};if _bccg ==1{_gefb ._bfgg =true ;};return nil ;};func (_ggbf *SymbolDictionary )decodeAggregate (_badeg ,_ggad uint32 )error {var (_fbeb int64 ;_aaad error ;);if _ggbf .IsHuffmanEncoded {_fbeb ,_aaad =_ggbf .huffDecodeRefAggNInst ();if _aaad !=nil {return _aaad ;};}else {_dfaea ,_aedd :=_ggbf ._cceeb .DecodeInt (_ggbf ._deeb );if _aedd !=nil {return _aedd ;};_fbeb =int64 (_dfaea );};if _fbeb > 1{return _ggbf .decodeThroughTextRegion (_badeg ,_ggad ,uint32 (_fbeb ));}else if _fbeb ==1{return _ggbf .decodeRefinedSymbol (_badeg ,_ggad );};return nil ;};type Type int ;func (_egdb *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_egdb .SdHuffAggInstanceSelection {_cffcc ,_defa :=_ag .GetStandardTable (1);if _defa !=nil {return 0,_defa ;};return _cffcc .Decode (_egdb ._eggb );};if _egdb ._gfccf ==nil {var (_acbga int ;_gdecb error ;);if _egdb .SdHuffDecodeHeightSelection ==3{_acbga ++;};if _egdb .SdHuffDecodeWidthSelection ==3{_acbga ++;};if _egdb .SdHuffBMSizeSelection ==3{_acbga ++;};_egdb ._gfccf ,_gdecb =_egdb .getUserTable (_acbga );if _gdecb !=nil {return 0,_gdecb ;};};return _egdb ._gfccf .Decode (_egdb ._eggb );};func (_bdca *TableSegment )HtPS ()int32 {return _bdca ._gbec };func (_ddfg *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_gbce int ;_gdbda int32 ;_begcb error ;_gecb =int32 (_ddfg ._dbad +_ddfg .NumberOfNewSymbols );_eedg =make ([]int ,_gecb ););for _afcb :=int32 (0);_afcb < _gecb ;_afcb +=_gdbda {if _ddfg .IsHuffmanEncoded {_bgd ,_dabed :=_ag .GetStandardTable (1);if _dabed !=nil {return nil ,_dabed ;};_fedc ,_dabed :=_bgd .Decode (_ddfg ._eggb );if _dabed !=nil {return nil ,_dabed ;};_gdbda =int32 (_fedc );}else {_gdbda ,_begcb =_ddfg ._cceeb .DecodeInt (_ddfg ._badb );if _begcb !=nil {return nil ,_begcb ;};};if _gdbda !=0{for _dbfe :=_afcb ;_dbfe < _afcb +_gdbda ;_dbfe ++{_eedg [_dbfe ]=_gbce ;};};if _gbce ==0{_gbce =1;}else {_gbce =0;};};return _eedg ,nil ;};func (_bgga *TextRegion )decodeStripT ()(_bcec int64 ,_gfba error ){if _bgga .IsHuffmanEncoded {if _bgga .SbHuffDT ==3{if _bgga ._edeg ==nil {var _dagdd int ;if _bgga .SbHuffFS ==3{_dagdd ++;};if _bgga .SbHuffDS ==3{_dagdd ++;};_bgga ._edeg ,_gfba =_bgga .getUserTable (_dagdd );if _gfba !=nil {return 0,_gfba ;};};_bcec ,_gfba =_bgga ._edeg .Decode (_bgga ._egfgg );if _gfba !=nil {return 0,_gfba ;};}else {var _abbf _ag .Tabler ;_abbf ,_gfba =_ag .GetStandardTable (11+int (_bgga .SbHuffDT ));if _gfba !=nil {return 0,_gfba ;};_bcec ,_gfba =_abbf .Decode (_bgga ._egfgg );if _gfba !=nil {return 0,_gfba ;};};}else {var _cgggb int32 ;_cgggb ,_gfba =_bgga ._fefe .DecodeInt (_bgga ._gdga );if _gfba !=nil {return 0,_gfba ;};_bcec =int64 (_cgggb );};_bcec *=int64 (-_bgga .SbStrips );return _bcec ,nil ;};type template0 struct{};func (_bddg *TextRegion )symbolIDCodeLengths ()error {var (_ccded []*_ag .Code ;_ccabg uint64 ;_feeba _ag .Tabler ;_ddegd error ;);for _fbgb :=0;_fbgb < 35;_fbgb ++{_ccabg ,_ddegd =_bddg ._egfgg .ReadBits (4);if _ddegd !=nil {return _ddegd ;};_gddfa :=int (_ccabg &0xf);if _gddfa > 0{_ccded =append (_ccded ,_ag .NewCode (int32 (_gddfa ),0,int32 (_fbgb ),false ));};};_feeba ,_ddegd =_ag .NewFixedSizeTable (_ccded );if _ddegd !=nil {return _ddegd ;};var (_feebg int64 ;_adbg uint32 ;_beef []*_ag .Code ;_egcf int64 ;);for _adbg < _bddg .NumberOfSymbols {_egcf ,_ddegd =_feeba .Decode (_bddg ._egfgg );if _ddegd !=nil {return _ddegd ;};if _egcf < 32{if _egcf > 0{_beef =append (_beef ,_ag .NewCode (int32 (_egcf ),0,int32 (_adbg ),false ));};_feebg =_egcf ;_adbg ++;}else {var _gbgdg ,_babcd int64 ;switch _egcf {case 32:_ccabg ,_ddegd =_bddg ._egfgg .ReadBits (2);if _ddegd !=nil {return _ddegd ;};_gbgdg =3+int64 (_ccabg );if _adbg > 0{_babcd =_feebg ;};case 33:_ccabg ,_ddegd =_bddg ._egfgg .ReadBits (3);if _ddegd !=nil {return _ddegd ;};_gbgdg =3+int64 (_ccabg );case 34:_ccabg ,_ddegd =_bddg ._egfgg .ReadBits (7);if _ddegd !=nil {return _ddegd ;};_gbgdg =11+int64 (_ccabg );};for _daafe :=0;_daafe < int (_gbgdg );_daafe ++{if _babcd > 0{_beef =append (_beef ,_ag .NewCode (int32 (_babcd ),0,int32 (_adbg ),false ));};_adbg ++;};};};_bddg ._egfgg .Align ();_bddg ._afgg ,_ddegd =_ag .NewFixedSizeTable (_beef );return _ddegd ;};type HalftoneRegion struct{_acbge _gc .StreamReader ;_ebfbg *Header ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _b .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_b .Bitmap ;Patterns []*_b .Bitmap ;};func (_fdgf *SymbolDictionary )decodeRefinedSymbol (_gdeb ,_cebg uint32 )error {var (_bgfg int ;_ffcf ,_dagd int32 ;);if _fdgf .IsHuffmanEncoded {_bfgbe ,_eebd :=_fdgf ._eggb .ReadBits (byte (_fdgf ._ggee ));if _eebd !=nil {return _eebd ;};_bgfg =int (_bfgbe );_befg ,_eebd :=_ag .GetStandardTable (15);if _eebd !=nil {return _eebd ;};_abgf ,_eebd :=_befg .Decode (_fdgf ._eggb );if _eebd !=nil {return _eebd ;};_ffcf =int32 (_abgf );_abgf ,_eebd =_befg .Decode (_fdgf ._eggb );if _eebd !=nil {return _eebd ;};_dagd =int32 (_abgf );_befg ,_eebd =_ag .GetStandardTable (1);if _eebd !=nil {return _eebd ;};if _ ,_eebd =_befg .Decode (_fdgf ._eggb );_eebd !=nil {return _eebd ;};_fdgf ._eggb .Align ();}else {_fge ,_affg :=_fdgf ._cceeb .DecodeIAID (uint64 (_fdgf ._ggee ),_fdgf ._fdcf );if _affg !=nil {return _affg ;};_bgfg =int (_fge );_ffcf ,_affg =_fdgf ._cceeb .DecodeInt (_fdgf ._bafc );if _affg !=nil {return _affg ;};_dagd ,_affg =_fdgf ._cceeb .DecodeInt (_fdgf ._eeed );if _affg !=nil {return _affg ;};};if _fdaf :=_fdgf .setSymbolsArray ();_fdaf !=nil {return _fdaf ;};_egdd :=_fdgf ._bcfgb [_bgfg ];if _ccde :=_fdgf .decodeNewSymbols (_gdeb ,_cebg ,_egdd ,_ffcf ,_dagd );_ccde !=nil {return _ccde ;};if _fdgf .IsHuffmanEncoded {_fdgf ._eggb .Align ();};return nil ;};func (_adcg *GenericRegion )copyLineAbove (_dbc int )error {_bgeb :=_dbc *_adcg .Bitmap .RowStride ;_edb :=_bgeb -_adcg .Bitmap .RowStride ;for _fgg :=0;_fgg < _adcg .Bitmap .RowStride ;_fgg ++{_ggga ,_cad :=_adcg .Bitmap .GetByte (_edb );if _cad !=nil {return _cad ;};_edb ++;if _cad =_adcg .Bitmap .SetByte (_bgeb ,_ggga );_cad !=nil {return _cad ;};_bgeb ++;};return nil ;};func (_decd *PatternDictionary )Init (h *Header ,r _gc .StreamReader )error {_decd ._dbgb =r ;return _decd .parseHeader ();};func (_cgff *TextRegion )decodeIds ()(int64 ,error ){const _eadd ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _cgff .IsHuffmanEncoded {if _cgff .SbHuffDS ==3{if _cgff ._gdbf ==nil {_gacac :=0;if _cgff .SbHuffFS ==3{_gacac ++;};var _egea error ;_cgff ._gdbf ,_egea =_cgff .getUserTable (_gacac );if _egea !=nil {return 0,_ff .Wrap (_egea ,_eadd ,"");};};return _cgff ._gdbf .Decode (_cgff ._egfgg );};_dabcc ,_aaedb :=_ag .GetStandardTable (8+int (_cgff .SbHuffDS ));if _aaedb !=nil {return 0,_ff .Wrap (_aaedb ,_eadd ,"");};return _dabcc .Decode (_cgff ._egfgg );};_bddf ,_dbbe :=_cgff ._fefe .DecodeInt (_cgff ._dcaf );if _dbbe !=nil {return 0,_ff .Wrap (_dbbe ,_eadd ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_bddf ),nil ;};func (_cdf *template1 )setIndex (_ged *_ge .DecoderStats ){_ged .SetIndex (0x080)};const (ORandom OrganizationType =iota ;OSequential ;);func (_fbc *SymbolDictionary )readAtPixels (_bgbd int )error {_fbc .SdATX =make ([]int8 ,_bgbd );_fbc .SdATY =make ([]int8 ,_bgbd );var (_edc byte ;_cagbe error ;);for _cgdfc :=0;_cgdfc < _bgbd ;_cgdfc ++{_edc ,_cagbe =_fbc ._eggb .ReadByte ();if _cagbe !=nil {return _cagbe ;};_fbc .SdATX [_cgdfc ]=int8 (_edc );_edc ,_cagbe =_fbc ._eggb .ReadByte ();if _cagbe !=nil {return _cagbe ;};_fbc .SdATY [_cgdfc ]=int8 (_edc );};return nil ;};func (_bac *template0 )setIndex (_dcd *_ge .DecoderStats ){_dcd .SetIndex (0x100)};func (_afe *GenericRefinementRegion )getPixel (_dda *_b .Bitmap ,_gdg ,_ce int )int {if _gdg < 0||_gdg >=_dda .Width {return 0;};if _ce < 0||_ce >=_dda .Height {return 0;};if _dda .GetPixel (_gdg ,_ce ){return 1;};return 0;};func (_dbda *GenericRefinementRegion )String ()string {_edf :=&_e .Builder {};_edf .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");_edf .WriteString (_dbda .RegionInfo .String ()+"\u000a");_edf .WriteString (_c .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_dbda .IsTPGROn ));_edf .WriteString (_c .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_dbda .TemplateID ));_edf .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_dbda .GrAtX ));_edf .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_dbda .GrAtY ));_edf .WriteString (_c .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_dbda .ReferenceDX ));_edf .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_dbda .ReferenceDY ));return _edf .String ();};func (_cbda *SymbolDictionary )decodeThroughTextRegion (_feee ,_bace ,_eceg uint32 )error {if _cbda ._dedcd ==nil {_cbda ._dedcd =_begf (_cbda ._eggb ,nil );_cbda ._dedcd .setContexts (_cbda ._bgcee ,_ge .NewStats (512,1),_ge .NewStats (512,1),_ge .NewStats (512,1),_ge .NewStats (512,1),_cbda ._fdcf ,_ge .NewStats (512,1),_ge .NewStats (512,1),_ge .NewStats (512,1),_ge .NewStats (512,1));};if _edec :=_cbda .setSymbolsArray ();_edec !=nil {return _edec ;};_cbda ._dedcd .setParameters (_cbda ._cceeb ,_cbda .IsHuffmanEncoded ,true ,_feee ,_bace ,_eceg ,1,_cbda ._dbad +_cbda ._beca ,0,0,0,1,0,0,0,0,0,0,0,0,0,_cbda .SdrTemplate ,_cbda .SdrATX ,_cbda .SdrATY ,_cbda ._bcfgb ,_cbda ._ggee );return _cbda .addSymbol (_cbda ._dedcd );};func NewRegionSegment (r _gc .StreamReader )*RegionSegment {return &RegionSegment {_ecfg :r }};func (_gefd *TextRegion )checkInput ()error {const _babd ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_gefd .UseRefinement {if _gefd .SbrTemplate !=0{_bd .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_gefd .SbrTemplate =0;};};if _gefd .SbHuffFS ==2||_gefd .SbHuffRDWidth ==2||_gefd .SbHuffRDHeight ==2||_gefd .SbHuffRDX ==2||_gefd .SbHuffRDY ==2{return _ff .Error (_babd ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");};if !_gefd .UseRefinement {if _gefd .SbHuffRSize !=0{_bd .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_gefd .SbHuffRSize =0;};if _gefd .SbHuffRDY !=0{_bd .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_gefd .SbHuffRDY =0;};if _gefd .SbHuffRDX !=0{_bd .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_gefd .SbHuffRDX =0;};if _gefd .SbHuffRDWidth !=0{_bd .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");_gefd .SbHuffRDWidth =0;};if _gefd .SbHuffRDHeight !=0{_bd .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_gefd .SbHuffRDHeight =0;};};return nil ;};func (_ccfb *SymbolDictionary )setRetainedCodingContexts (_ecbba *SymbolDictionary ){_ccfb ._cceeb =_ecbba ._cceeb ;_ccfb .IsHuffmanEncoded =_ecbba .IsHuffmanEncoded ;_ccfb .UseRefinementAggregation =_ecbba .UseRefinementAggregation ;_ccfb .SdTemplate =_ecbba .SdTemplate ;_ccfb .SdrTemplate =_ecbba .SdrTemplate ;_ccfb .SdATX =_ecbba .SdATX ;_ccfb .SdATY =_ecbba .SdATY ;_ccfb .SdrATX =_ecbba .SdrATX ;_ccfb .SdrATY =_ecbba .SdrATY ;_ccfb ._bgcee =_ecbba ._bgcee ;};type PageInformationSegment struct{_eaa _gc .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_bfgg bool ;_bffa _b .CombinationOperator ;_aeae bool ;_aefb uint8 ;_gfcc bool ;IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_gbb *Header )CleanSegmentData (){if _gbb .SegmentData !=nil {_gbb .SegmentData =nil ;};};func (_gage *SymbolDictionary )addSymbol (_babc Regioner )error {_cbcb ,_fddc :=_babc .GetRegionBitmap ();if _fddc !=nil {return _fddc ;};_gage ._ccaac [_gage ._beca ]=_cbcb ;_gage ._bcfgb =append (_gage ._bcfgb ,_cbcb );_bd .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_cbcb );return nil ;};type RegionSegment struct{_ecfg _gc .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _b .CombinationOperator ;};func (_ggc *GenericRefinementRegion )GetRegionBitmap ()(*_b .Bitmap ,error ){var _de error ;_bd .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");defer func (){if _de !=nil {_bd .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_de );}else {_bd .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");};}();if _ggc .RegionBitmap !=nil {return _ggc .RegionBitmap ,nil ;};_gbd :=0;if _ggc .ReferenceBitmap ==nil {_ggc .ReferenceBitmap ,_de =_ggc .getGrReference ();if _de !=nil {return nil ,_de ;};};if _ggc ._eg ==nil {_ggc ._eg ,_de =_ge .New (_ggc ._fbb );if _de !=nil {return nil ,_de ;};};if _ggc ._db ==nil {_ggc ._db =_ge .NewStats (8192,1);};_ggc .RegionBitmap =_b .New (int (_ggc .RegionInfo .BitmapWidth ),int (_ggc .RegionInfo .BitmapHeight ));if _ggc .TemplateID ==0{if _de =_ggc .updateOverride ();_de !=nil {return nil ,_de ;};};_bdc :=(_ggc .RegionBitmap .Width +7)&-8;var _aa int ;if _ggc .IsTPGROn {_aa =int (-_ggc .ReferenceDY )*_ggc .ReferenceBitmap .RowStride ;};_egf :=_aa +1;for _gf :=0;_gf < _ggc .RegionBitmap .Height ;_gf ++{if _ggc .IsTPGROn {_dc ,_cb :=_ggc .decodeSLTP ();if _cb !=nil {return nil ,_cb ;};_gbd ^=_dc ;};if _gbd ==0{_de =_ggc .decodeOptimized (_gf ,_ggc .RegionBitmap .Width ,_ggc .RegionBitmap .RowStride ,_ggc .ReferenceBitmap .RowStride ,_bdc ,_aa ,_egf );if _de !=nil {return nil ,_de ;};}else {_de =_ggc .decodeTypicalPredictedLine (_gf ,_ggc .RegionBitmap .Width ,_ggc .RegionBitmap .RowStride ,_ggc .ReferenceBitmap .RowStride ,_bdc ,_aa );if _de !=nil {return nil ,_de ;};};};return _ggc .RegionBitmap ,nil ;};func (_bbfc *SymbolDictionary )setExportedSymbols (_bfac []int ){for _gfcaa :=uint32 (0);_gfcaa < _bbfc ._dbad +_bbfc .NumberOfNewSymbols ;_gfcaa ++{if _bfac [_gfcaa ]==1{var _ccab *_b .Bitmap ;if _gfcaa < _bbfc ._dbad {_ccab =_bbfc ._ecfd [_gfcaa ];}else {_ccab =_bbfc ._ccaac [_gfcaa -_bbfc ._dbad ];};_bd .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_ccab );_bbfc ._edea =append (_bbfc ._edea ,_ccab );};};};type TextRegion struct{_egfgg _gc .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _b .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_dadf int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_b .Bitmap ;Symbols []*_b .Bitmap ;_fefe *_ge .Decoder ;_dffe *GenericRefinementRegion ;_gdga *_ge .DecoderStats ;_gabf *_ge .DecoderStats ;_dcaf *_ge .DecoderStats ;_dbdf *_ge .DecoderStats ;_eadb *_ge .DecoderStats ;_bgdd *_ge .DecoderStats ;_abggg *_ge .DecoderStats ;_babb *_ge .DecoderStats ;_fbac *_ge .DecoderStats ;_cbag *_ge .DecoderStats ;_fcgd *_ge .DecoderStats ;_gdbe int8 ;_afgg *_ag .FixedSizeTable ;Header *Header ;_cabf _ag .Tabler ;_gdbf _ag .Tabler ;_edeg _ag .Tabler ;_effc _ag .Tabler ;_dbfc _ag .Tabler ;_eaee _ag .Tabler ;_aae _ag .Tabler ;_edcd _ag .Tabler ;_eccfg ,_gaec map[int ]int ;_egfec []int ;_ageg *_b .Points ;_fefd *_b .Bitmaps ;_gdee *_cf .IntSlice ;_bgcg ,_cgfg int ;_ffbdg *_b .Boxes ;};func (_aga *Header )writeFlags (_deff _gc .BinaryWriter )(_cabb error ){const _fdcb ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_dcb :=byte (_aga .Type );if _cabb =_deff .WriteByte (_dcb );_cabb !=nil {return _ff .Wrap (_cabb ,_fdcb ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_aga .RetainFlag &&!_aga .PageAssociationFieldSize {return nil ;};if _cabb =_deff .SkipBits (-8);_cabb !=nil {return _ff .Wrap (_cabb ,_fdcb ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _ceee int ;if _aga .RetainFlag {_ceee =1;};if _cabb =_deff .WriteBit (_ceee );_cabb !=nil {return _ff .Wrap (_cabb ,_fdcb ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_ceee =0;if _aga .PageAssociationFieldSize {_ceee =1;};if _cabb =_deff .WriteBit (_ceee );_cabb !=nil {return _ff .Wrap (_cabb ,_fdcb ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_deff .FinishByte ();return nil ;};func (_dgcd *TableSegment )parseHeader ()error {var (_dgbc int ;_efeg uint64 ;_bccd error ;);_dgbc ,_bccd =_dgcd ._gdadd .ReadBit ();if _bccd !=nil {return _bccd ;};if _dgbc ==1{return _c .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_dgbc );};if _efeg ,_bccd =_dgcd ._gdadd .ReadBits (3);_bccd !=nil {return _bccd ;};_dgcd ._cadb =(int32 (_efeg )+1)&0xf;if _efeg ,_bccd =_dgcd ._gdadd .ReadBits (3);_bccd !=nil {return _bccd ;};_dgcd ._gbec =(int32 (_efeg )+1)&0xf;if _efeg ,_bccd =_dgcd ._gdadd .ReadBits (32);_bccd !=nil {return _bccd ;};_dgcd ._bdged =int32 (_efeg &_f .MaxInt32 );if _efeg ,_bccd =_dgcd ._gdadd .ReadBits (32);_bccd !=nil {return _bccd ;};_dgcd ._cacc =int32 (_efeg &_f .MaxInt32 );return nil ;};func (_gabc *PatternDictionary )parseHeader ()error {_bd .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");defer func (){_bd .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_ ,_eaded :=_gabc ._dbgb .ReadBits (5);if _eaded !=nil {return _eaded ;};if _eaded =_gabc .readTemplate ();_eaded !=nil {return _eaded ;};if _eaded =_gabc .readIsMMREncoded ();_eaded !=nil {return _eaded ;};if _eaded =_gabc .readPatternWidthAndHeight ();_eaded !=nil {return _eaded ;};if _eaded =_gabc .readGrayMax ();_eaded !=nil {return _eaded ;};if _eaded =_gabc .computeSegmentDataStructure ();_eaded !=nil {return _eaded ;};return _gabc .checkInput ();};func (_cfgeg *PatternDictionary )computeSegmentDataStructure ()error {_cfgeg .DataOffset =_cfgeg ._dbgb .StreamPosition ();_cfgeg .DataHeaderLength =_cfgeg .DataOffset -_cfgeg .DataHeaderOffset ;_cfgeg .DataLength =int64 (_cfgeg ._dbgb .Length ())-_cfgeg .DataHeaderLength ;return nil ;};func (_ecg *GenericRefinementRegion )overrideAtTemplate0 (_add ,_fde ,_gace ,_cgeb ,_afc int )int {if _ecg ._bgf [0]{_add &=0xfff7;if _ecg .GrAtY [0]==0&&int (_ecg .GrAtX [0])>=-_afc {_add |=(_cgeb >>uint (7-(_afc +int (_ecg .GrAtX [0])))&0x1)<<3;}else {_add |=_ecg .getPixel (_ecg .RegionBitmap ,_fde +int (_ecg .GrAtX [0]),_gace +int (_ecg .GrAtY [0]))<<3;};};if _ecg ._bgf [1]{_add &=0xefff;if _ecg .GrAtY [1]==0&&int (_ecg .GrAtX [1])>=-_afc {_add |=(_cgeb >>uint (7-(_afc +int (_ecg .GrAtX [1])))&0x1)<<12;}else {_add |=_ecg .getPixel (_ecg .ReferenceBitmap ,_fde +int (_ecg .GrAtX [1]),_gace +int (_ecg .GrAtY [1]));};};return _add ;};func (_bfgf *GenericRegion )decodeTemplate3 (_geg ,_feag ,_cae int ,_bde ,_dce int )(_beab error ){const _gega ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";var (_eba ,_bbed int ;_bdgc int ;_cabe byte ;_bggg ,_ffbe int ;);if _geg >=1{_cabe ,_beab =_bfgf .Bitmap .GetByte (_dce );if _beab !=nil {return _ff .Wrap (_beab ,_gega ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_bdgc =int (_cabe );};_eba =(_bdgc >>1)&0x70;for _fcgc :=0;_fcgc < _cae ;_fcgc =_bggg {var (_fcf byte ;_egbf int ;);_bggg =_fcgc +8;if _egd :=_feag -_fcgc ;_egd > 8{_egbf =8;}else {_egbf =_egd ;};if _geg >=1{_bdgc <<=8;if _bggg < _feag {_cabe ,_beab =_bfgf .Bitmap .GetByte (_dce +1);if _beab !=nil {return _ff .Wrap (_beab ,_gega ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");};_bdgc |=int (_cabe );};};for _degbc :=0;_degbc < _egbf ;_degbc ++{if _bfgf ._gcga {_bbed =_bfgf .overrideAtTemplate3 (_eba ,_fcgc +_degbc ,_geg ,int (_fcf ),_degbc );_bfgf ._adgf .SetIndex (int32 (_bbed ));}else {_bfgf ._adgf .SetIndex (int32 (_eba ));};_ffbe ,_beab =_bfgf ._cbbb .DecodeBit (_bfgf ._adgf );if _beab !=nil {return _ff .Wrap (_beab ,_gega ,"");};_fcf |=byte (_ffbe )<<byte (7-_degbc );_eba =((_eba &0x1f7)<<1)|_ffbe |((_bdgc >>uint (8-_degbc ))&0x010);};if _cbaf :=_bfgf .Bitmap .SetByte (_bde ,_fcf );_cbaf !=nil {return _ff .Wrap (_cbaf ,_gega ,"");};_bde ++;_dce ++;};return nil ;};func (_eee *Header )readSegmentDataLength (_cfef _gc .StreamReader )(_bfa error ){_eee .SegmentDataLength ,_bfa =_cfef .ReadBits (32);if _bfa !=nil {return _bfa ;};_eee .SegmentDataLength &=_f .MaxInt32 ;return nil ;};func (_cbeda *SymbolDictionary )encodeFlags (_agff _gc .BinaryWriter )(_cabeg int ,_ggeee error ){const _cede ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _ggeee =_agff .SkipBits (3);_ggeee !=nil {return 0,_ff .Wrap (_ggeee ,_cede ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _ffcg int ;if _cbeda .SdrTemplate > 0{_ffcg =1;};if _ggeee =_agff .WriteBit (_ffcg );_ggeee !=nil {return _cabeg ,_ff .Wrap (_ggeee ,_cede ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_ffcg =0;if _cbeda .SdTemplate > 1{_ffcg =1;};if _ggeee =_agff .WriteBit (_ffcg );_ggeee !=nil {return _cabeg ,_ff .Wrap (_ggeee ,_cede ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_ffcg =0;if _cbeda .SdTemplate ==1||_cbeda .SdTemplate ==3{_ffcg =1;};if _ggeee =_agff .WriteBit (_ffcg );_ggeee !=nil {return _cabeg ,_ff .Wrap (_ggeee ,_cede ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_ffcg =0;if _cbeda ._bdcd {_ffcg =1;};if _ggeee =_agff .WriteBit (_ffcg );_ggeee !=nil {return _cabeg ,_ff .Wrap (_ggeee ,_cede ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");};_ffcg =0;if _cbeda ._egfg {_ffcg =1;};if _ggeee =_agff .WriteBit (_ffcg );_ggeee !=nil {return _cabeg ,_ff .Wrap (_ggeee ,_cede ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_ffcg =0;if _cbeda .SdHuffAggInstanceSelection {_ffcg =1;};if _ggeee =_agff .WriteBit (_ffcg );_ggeee !=nil {return _cabeg ,_ff .Wrap (_ggeee ,_cede ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_ffcg =int (_cbeda .SdHuffBMSizeSelection );if _ggeee =_agff .WriteBit (_ffcg );_ggeee !=nil {return _cabeg ,_ff .Wrap (_ggeee ,_cede ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_ffcg =0;if _cbeda .SdHuffDecodeWidthSelection > 1{_ffcg =1;};if _ggeee =_agff .WriteBit (_ffcg );_ggeee !=nil {return _cabeg ,_ff .Wrap (_ggeee ,_cede ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_ffcg =0;switch _cbeda .SdHuffDecodeWidthSelection {case 1,3:_ffcg =1;};if _ggeee =_agff .WriteBit (_ffcg );_ggeee !=nil {return _cabeg ,_ff .Wrap (_ggeee ,_cede ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_ffcg =0;if _cbeda .SdHuffDecodeHeightSelection > 1{_ffcg =1;};if _ggeee =_agff .WriteBit (_ffcg );_ggeee !=nil {return _cabeg ,_ff .Wrap (_ggeee ,_cede ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_ffcg =0;switch _cbeda .SdHuffDecodeHeightSelection {case 1,3:_ffcg =1;};if _ggeee =_agff .WriteBit (_ffcg );_ggeee !=nil {return _cabeg ,_ff .Wrap (_ggeee ,_cede ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_ffcg =0;if _cbeda .UseRefinementAggregation {_ffcg =1;};if _ggeee =_agff .WriteBit (_ffcg );_ggeee !=nil {return _cabeg ,_ff .Wrap (_ggeee ,_cede ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_ffcg =0;if _cbeda .IsHuffmanEncoded {_ffcg =1;};if _ggeee =_agff .WriteBit (_ffcg );_ggeee !=nil {return _cabeg ,_ff .Wrap (_ggeee ,_cede ,"\u0073\u0064\u0048\u0075\u0066\u0066");};return 2,nil ;};func (_aeff *Header )pageSize ()uint {if _aeff .PageAssociation <=255{return 1;};return 4;};func (_fefc *PageInformationSegment )Init (h *Header ,r _gc .StreamReader )(_bfee error ){_fefc ._eaa =r ;if _bfee =_fefc .parseHeader ();_bfee !=nil {return _ff .Wrap (_bfee ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");};return nil ;};func (_gdfd *TextRegion )String ()string {_geaac :=&_e .Builder {};_geaac .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_geaac .WriteString (_gdfd .RegionInfo .String ()+"\u000a");_geaac .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_gdfd .SbrTemplate ));_geaac .WriteString (_c .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_gdfd .SbDsOffset ));_geaac .WriteString (_c .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_gdfd .DefaultPixel ));_geaac .WriteString (_c .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_gdfd .CombinationOperator ));_geaac .WriteString (_c .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_gdfd .IsTransposed ));_geaac .WriteString (_c .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_gdfd .ReferenceCorner ));_geaac .WriteString (_c .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_gdfd .UseRefinement ));_geaac .WriteString (_c .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_gdfd .IsHuffmanEncoded ));if _gdfd .IsHuffmanEncoded {_geaac .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_gdfd .SbHuffRSize ));_geaac .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_gdfd .SbHuffRDY ));_geaac .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_gdfd .SbHuffRDX ));_geaac .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_gdfd .SbHuffRDHeight ));_geaac .WriteString (_c .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_gdfd .SbHuffRDWidth ));_geaac .WriteString (_c .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_gdfd .SbHuffDT ));_geaac .WriteString (_c .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_gdfd .SbHuffDS ));_geaac .WriteString (_c .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_gdfd .SbHuffFS ));};_geaac .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_gdfd .SbrATX ));_geaac .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_gdfd .SbrATY ));_geaac .WriteString (_c .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_gdfd .NumberOfSymbolInstances ));_geaac .WriteString (_c .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_gdfd .SbrATX ));return _geaac .String ();};func (_dcca *PatternDictionary )readGrayMax ()error {_bcfd ,_bdbga :=_dcca ._dbgb .ReadBits (32);if _bdbga !=nil {return _bdbga ;};_dcca .GrayMax =uint32 (_bcfd &_f .MaxUint32 );return nil ;};func (_dde *HalftoneRegion )combineGrayscalePlanes (_ddgg []*_b .Bitmap ,_fccf int )error {_aaddb :=0;for _bebe :=0;_bebe < _ddgg [_fccf ].Height ;_bebe ++{for _dabg :=0;_dabg < _ddgg [_fccf ].Width ;_dabg +=8{_eade ,_bga :=_ddgg [_fccf +1].GetByte (_aaddb );if _bga !=nil {return _bga ;};_ecf ,_bga :=_ddgg [_fccf ].GetByte (_aaddb );if _bga !=nil {return _bga ;};_bga =_ddgg [_fccf ].SetByte (_aaddb ,_b .CombineBytes (_ecf ,_eade ,_b .CmbOpXor ));if _bga !=nil {return _bga ;};_aaddb ++;};};return nil ;};func (_eged *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_ggbfd :=range _eged .Header .RTSegments {if _ggbfd .Type ==0{_gcbe ,_bdggd :=_ggbfd .GetSegmentData ();if _bdggd !=nil {return _bdggd ;};_fdba ,_gbbb :=_gcbe .(*SymbolDictionary );if !_gbbb {return _c .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_gcbe );};_agee ,_bdggd :=_fdba .GetDictionary ();if _bdggd !=nil {return _c .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_ggbfd .SegmentNumber ,_bdggd .Error ());};_eged ._ecfd =append (_eged ._ecfd ,_agee ...);_eged ._dbad +=_fdba .NumberOfExportedSymbols ;};};return nil ;};func (_acad *RegionSegment )parseHeader ()error {const _adbc ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_bd .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");defer func (){_bd .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_cdag ,_feca :=_acad ._ecfg .ReadBits (32);if _feca !=nil {return _ff .Wrap (_feca ,_adbc ,"\u0077\u0069\u0064t\u0068");};_acad .BitmapWidth =uint32 (_cdag &_f .MaxUint32 );_cdag ,_feca =_acad ._ecfg .ReadBits (32);if _feca !=nil {return _ff .Wrap (_feca ,_adbc ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_acad .BitmapHeight =uint32 (_cdag &_f .MaxUint32 );_cdag ,_feca =_acad ._ecfg .ReadBits (32);if _feca !=nil {return _ff .Wrap (_feca ,_adbc ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_acad .XLocation =uint32 (_cdag &_f .MaxUint32 );_cdag ,_feca =_acad ._ecfg .ReadBits (32);if _feca !=nil {return _ff .Wrap (_feca ,_adbc ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_acad .YLocation =uint32 (_cdag &_f .MaxUint32 );if _ ,_feca =_acad ._ecfg .ReadBits (5);_feca !=nil {return _ff .Wrap (_feca ,_adbc ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");};if _feca =_acad .readCombinationOperator ();_feca !=nil {return _ff .Wrap (_feca ,_adbc ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_baaf *PageInformationSegment )readResolution ()error {_afeef ,_adcgc :=_baaf ._eaa .ReadBits (32);if _adcgc !=nil {return _adcgc ;};_baaf .ResolutionX =int (_afeef &_f .MaxInt32 );_afeef ,_adcgc =_baaf ._eaa .ReadBits (32);if _adcgc !=nil {return _adcgc ;};_baaf .ResolutionY =int (_afeef &_f .MaxInt32 );return nil ;};func (_dfcd *SymbolDictionary )setInSyms ()error {if _dfcd .Header .RTSegments !=nil {return _dfcd .retrieveImportSymbols ();};_dfcd ._ecfd =make ([]*_b .Bitmap ,0);return nil ;};func (_dfc *Header )writeReferredToCount (_eaeff _gc .BinaryWriter )(_bdf int ,_edaf error ){const _fcga ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";_dfc .RTSNumbers =make ([]int ,len (_dfc .RTSegments ));for _deaa ,_baff :=range _dfc .RTSegments {_dfc .RTSNumbers [_deaa ]=int (_baff .SegmentNumber );};if len (_dfc .RTSNumbers )<=4{var _gbac byte ;if len (_dfc .RetainBits )>=1{_gbac =_dfc .RetainBits [0];};_gbac |=byte (len (_dfc .RTSNumbers ))<<5;if _edaf =_eaeff .WriteByte (_gbac );_edaf !=nil {return 0,_ff .Wrap (_edaf ,_fcga ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_bebb :=uint32 (len (_dfc .RTSNumbers ));_cddee :=make ([]byte ,4+_cf .Ceil (len (_dfc .RTSNumbers )+1,8));_bebb |=0x7<<29;_fe .BigEndian .PutUint32 (_cddee ,_bebb );copy (_cddee [1:],_dfc .RetainBits );_bdf ,_edaf =_eaeff .Write (_cddee );if _edaf !=nil {return 0,_ff .Wrap (_edaf ,_fcga ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return _bdf ,nil ;};func (_aebc *GenericRegion )overrideAtTemplate2 (_adcc ,_deec ,_dfgb ,_ceb ,_cbe int )int {_adcc &=0x3FB;if _aebc .GBAtY [0]==0&&_aebc .GBAtX [0]>=-int8 (_cbe ){_adcc |=(_ceb >>uint (7-(int8 (_cbe )+_aebc .GBAtX [0]))&0x1)<<2;}else {_adcc |=int (_aebc .getPixel (_deec +int (_aebc .GBAtX [0]),_dfgb +int (_aebc .GBAtY [0])))<<2;};return _adcc ;};func (_gedf *GenericRegion )setParametersMMR (_bdeg bool ,_cefe ,_eebb int64 ,_gggf ,_fdeb uint32 ,_aab byte ,_bdbg ,_daa bool ,_cdde ,_gcdc []int8 ){_gedf .DataOffset =_cefe ;_gedf .DataLength =_eebb ;_gedf .RegionSegment =&RegionSegment {};_gedf .RegionSegment .BitmapHeight =_gggf ;_gedf .RegionSegment .BitmapWidth =_fdeb ;_gedf .GBTemplate =_aab ;_gedf .IsMMREncoded =_bdeg ;_gedf .IsTPGDon =_bdbg ;_gedf .GBAtX =_cdde ;_gedf .GBAtY =_gcdc ;};func (_eaag *TableSegment )HtOOB ()int32 {return _eaag ._dbdg };func (_gfb *GenericRegion )decodeSLTP ()(int ,error ){switch _gfb .GBTemplate {case 0:_gfb ._adgf .SetIndex (0x9B25);case 1:_gfb ._adgf .SetIndex (0x795);case 2:_gfb ._adgf .SetIndex (0xE5);case 3:_gfb ._adgf .SetIndex (0x195);};return _gfb ._cbbb .DecodeBit (_gfb ._adgf );};func (_aadcb *TextRegion )decodeRdw ()(int64 ,error ){const _dbgc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _aadcb .IsHuffmanEncoded {if _aadcb .SbHuffRDWidth ==3{if _aadcb ._effc ==nil {var (_acdd int ;_cdad error ;);if _aadcb .SbHuffFS ==3{_acdd ++;};if _aadcb .SbHuffDS ==3{_acdd ++;};if _aadcb .SbHuffDT ==3{_acdd ++;};_aadcb ._effc ,_cdad =_aadcb .getUserTable (_acdd );if _cdad !=nil {return 0,_ff .Wrap (_cdad ,_dbgc ,"");};};return _aadcb ._effc .Decode (_aadcb ._egfgg );};_cbcgd ,_fdgaa :=_ag .GetStandardTable (14+int (_aadcb .SbHuffRDWidth ));if _fdgaa !=nil {return 0,_ff .Wrap (_fdgaa ,_dbgc ,"");};return _cbcgd .Decode (_aadcb ._egfgg );};_ecca ,_eadcd :=_aadcb ._fefe .DecodeInt (_aadcb ._bgdd );if _eadcd !=nil {return 0,_ff .Wrap (_eadcd ,_dbgc ,"");};return int64 (_ecca ),nil ;};func (_afbf *TextRegion )decodeIb (_egcc ,_fffa int64 )(*_b .Bitmap ,error ){const _cdcgd ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";var (_dfgeg error ;_dgfd *_b .Bitmap ;);if _egcc ==0{if int (_fffa )> len (_afbf .Symbols )-1{return nil ,_ff .Error (_cdcgd ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");};return _afbf .Symbols [int (_fffa )],nil ;};var _cbee ,_ebgf ,_dcbb ,_bfgfe int64 ;_cbee ,_dfgeg =_afbf .decodeRdw ();if _dfgeg !=nil {return nil ,_ff .Wrap (_dfgeg ,_cdcgd ,"");};_ebgf ,_dfgeg =_afbf .decodeRdh ();if _dfgeg !=nil {return nil ,_ff .Wrap (_dfgeg ,_cdcgd ,"");};_dcbb ,_dfgeg =_afbf .decodeRdx ();if _dfgeg !=nil {return nil ,_ff .Wrap (_dfgeg ,_cdcgd ,"");};_bfgfe ,_dfgeg =_afbf .decodeRdy ();if _dfgeg !=nil {return nil ,_ff .Wrap (_dfgeg ,_cdcgd ,"");};if _afbf .IsHuffmanEncoded {if _ ,_dfgeg =_afbf .decodeSymInRefSize ();_dfgeg !=nil {return nil ,_ff .Wrap (_dfgeg ,_cdcgd ,"");};_afbf ._egfgg .Align ();};_dfcda :=_afbf .Symbols [_fffa ];_edfg :=uint32 (_dfcda .Width );_daaf :=uint32 (_dfcda .Height );_eegd :=int32 (uint32 (_cbee )>>1)+int32 (_dcbb );_ebde :=int32 (uint32 (_ebgf )>>1)+int32 (_bfgfe );if _afbf ._dffe ==nil {_afbf ._dffe =_gbgd (_afbf ._egfgg ,nil );};_afbf ._dffe .setParameters (_afbf ._fcgd ,_afbf ._fefe ,_afbf .SbrTemplate ,_edfg +uint32 (_cbee ),_daaf +uint32 (_ebgf ),_dfcda ,_eegd ,_ebde ,false ,_afbf .SbrATX ,_afbf .SbrATY );_dgfd ,_dfgeg =_afbf ._dffe .GetRegionBitmap ();if _dfgeg !=nil {return nil ,_ff .Wrap (_dfgeg ,_cdcgd ,"\u0067\u0072\u0066");};if _afbf .IsHuffmanEncoded {_afbf ._egfgg .Align ();};return _dgfd ,nil ;};