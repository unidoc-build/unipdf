//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_a "github.com/unidoc/unipdf/v3/common";_af "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_aa "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_ae "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_e "image";_ef "math";);func (_cb *Classer )AddPage (inputPage *_aa .Bitmap ,pageNumber int ,method Method )(_f error ){const _cc ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_cb .Widths [pageNumber ]=inputPage .Width ;_cb .Heights [pageNumber ]=inputPage .Height ;if _f =_cb .verifyMethod (method );_f !=nil {return _ae .Wrap (_f ,_cc ,"");};_ce ,_db ,_f :=inputPage .GetComponents (_cb .Settings .Components ,_cb .Settings .MaxCompWidth ,_cb .Settings .MaxCompHeight );if _f !=nil {return _ae .Wrap (_f ,_cc ,"");};_a .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_ce );if _f =_cb .addPageComponents (inputPage ,_db ,_ce ,pageNumber ,method );_f !=nil {return _ae .Wrap (_f ,_cc ,"");};return nil ;};func _bg (_ff *_aa .Bitmap ,_aaf ,_eecb ,_afb ,_dcb int ,_bb *_aa .Bitmap )(_eb _e .Point ,_gadd error ){const _bgg ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";if _ff ==nil {return _eb ,_ae .Error (_bgg ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _bb ==nil {return _eb ,_ae .Error (_bgg ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");};_gg ,_gbg :=_bb .Width ,_bb .Height ;_beg ,_bf :=_aaf -_afb -JbAddedPixels ,_eecb -_dcb -JbAddedPixels ;_a .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_aaf ,_eecb ,_gg ,_gbg ,_beg ,_bf );_fa ,_gadd :=_aa .Rect (_beg ,_bf ,_gg ,_gbg );if _gadd !=nil {return _eb ,_ae .Wrap (_gadd ,_bgg ,"");};_bee ,_ ,_gadd :=_ff .ClipRectangle (_fa );if _gadd !=nil {_a .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_fa );return _eb ,_ae .Wrap (_gadd ,_bgg ,"");};_abd :=_aa .New (_bee .Width ,_bee .Height );_ffb :=_ef .MaxInt32 ;var _gadc ,_ggb ,_agg ,_daa ,_baa int ;for _gadc =-1;_gadc <=1;_gadc ++{for _ggb =-1;_ggb <=1;_ggb ++{if _ ,_gadd =_aa .Copy (_abd ,_bee );_gadd !=nil {return _eb ,_ae .Wrap (_gadd ,_bgg ,"");};if _gadd =_abd .RasterOperation (_ggb ,_gadc ,_gg ,_gbg ,_aa .PixSrcXorDst ,_bb ,0,0);_gadd !=nil {return _eb ,_ae .Wrap (_gadd ,_bgg ,"");};_agg =_abd .CountPixels ();if _agg < _ffb {_daa =_ggb ;_baa =_gadc ;_ffb =_agg ;};};};_eb .X =_daa ;_eb .Y =_baa ;return _eb ,nil ;};const (MaxDiffWidth =2;MaxDiffHeight =2;);func (_dba *Classer )ComputeLLCorners ()(_ega error ){const _fe ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _dba .PtaUL ==nil {return _ae .Error (_fe ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_ed :=len (*_dba .PtaUL );_dba .PtaLL =&_aa .Points {};var (_dg ,_ac float32 ;_cbg ,_g int ;_gb *_aa .Bitmap ;);for _ab :=0;_ab < _ed ;_ab ++{_dg ,_ac ,_ega =_dba .PtaUL .GetGeometry (_ab );if _ega !=nil {_a .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ega );return _ae .Wrap (_ega ,_fe ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_cbg ,_ega =_dba .ClassIDs .Get (_ab );if _ega !=nil {_a .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_ega );return _ae .Wrap (_ega ,_fe ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_gb ,_ega =_dba .UndilatedTemplates .GetBitmap (_cbg );if _ega !=nil {_a .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ega );return _ae .Wrap (_ega ,_fe ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_g =_gb .Height ;_dba .PtaLL .AddPoint (_dg ,_ac +float32 (_g ));};return nil ;};func (_ceeb *Classer )verifyMethod (_ad Method )error {if _ad !=RankHaus &&_ad !=Correlation {return _ae .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");};return nil ;};func Init (settings Settings )(*Classer ,error ){const _b ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_eg :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_af .IntsMap {},TemplateAreas :&_af .IntSlice {},ComponentPageNumbers :&_af .IntSlice {},ClassIDs :&_af .IntSlice {},ComponentsNumber :&_af .IntSlice {},CentroidPoints :&_aa .Points {},CentroidPointsTemplates :&_aa .Points {},UndilatedTemplates :&_aa .Bitmaps {},DilatedTemplates :&_aa .Bitmaps {},ClassInstances :&_aa .BitmapsArray {},FgTemplates :&_af .NumSlice {}};if _d :=_eg .Settings .Validate ();_d !=nil {return nil ,_ae .Wrap (_d ,_b ,"");};return _eg ,nil ;};func (_cac *Classer )classifyRankHouseOne (_dbb *_aa .Boxes ,_afaf ,_gba ,_ced *_aa .Bitmaps ,_ddb *_aa .Points ,_aed int )(_bggf error ){const _bd ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_dca ,_fab ,_gbgf ,_cag float32 ;_adga int ;_ece ,_dcc ,_dgc ,_efb ,_ebc *_aa .Bitmap ;_ebgd ,_bfd bool ;);for _edd :=0;_edd < len (_afaf .Values );_edd ++{_dcc =_gba .Values [_edd ];_dgc =_ced .Values [_edd ];_dca ,_fab ,_bggf =_ddb .GetGeometry (_edd );if _bggf !=nil {return _ae .Wrapf (_bggf ,_bd ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_dfg :=len (_cac .UndilatedTemplates .Values );_ebgd =false ;_ddf :=_gacd (_cac ,_dcc );for _adga =_ddf .Next ();_adga > -1;{_efb ,_bggf =_cac .UndilatedTemplates .GetBitmap (_adga );if _bggf !=nil {return _ae .Wrap (_bggf ,_bd ,"\u0062\u006d\u0033");};_ebc ,_bggf =_cac .DilatedTemplates .GetBitmap (_adga );if _bggf !=nil {return _ae .Wrap (_bggf ,_bd ,"\u0062\u006d\u0034");};_gbgf ,_cag ,_bggf =_cac .CentroidPointsTemplates .GetGeometry (_adga );if _bggf !=nil {return _ae .Wrap (_bggf ,_bd ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_bfd ,_bggf =_aa .HausTest (_dcc ,_dgc ,_efb ,_ebc ,_dca -_gbgf ,_fab -_cag ,MaxDiffWidth ,MaxDiffHeight );if _bggf !=nil {return _ae .Wrap (_bggf ,_bd ,"");};if _bfd {_ebgd =true ;if _bggf =_cac .ClassIDs .Add (_adga );_bggf !=nil {return _ae .Wrap (_bggf ,_bd ,"");};if _bggf =_cac .ComponentPageNumbers .Add (_aed );_bggf !=nil {return _ae .Wrap (_bggf ,_bd ,"");};if _cac .Settings .KeepClassInstances {_gac ,_ggbc :=_cac .ClassInstances .GetBitmaps (_adga );if _ggbc !=nil {return _ae .Wrap (_ggbc ,_bd ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_ece ,_ggbc =_afaf .GetBitmap (_edd );if _ggbc !=nil {return _ae .Wrap (_ggbc ,_bd ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_gac .AddBitmap (_ece );_cd ,_ggbc :=_dbb .Get (_edd );if _ggbc !=nil {return _ae .Wrap (_ggbc ,_bd ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_gac .AddBox (_cd );};break ;};};if !_ebgd {if _bggf =_cac .ClassIDs .Add (_dfg );_bggf !=nil {return _ae .Wrap (_bggf ,_bd ,"");};if _bggf =_cac .ComponentPageNumbers .Add (_aed );_bggf !=nil {return _ae .Wrap (_bggf ,_bd ,"");};_cbc :=&_aa .Bitmaps {};_ece ,_bggf =_afaf .GetBitmap (_edd );if _bggf !=nil {return _ae .Wrap (_bggf ,_bd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cbc .Values =append (_cbc .Values ,_ece );_cef ,_cbga :=_ece .Width ,_ece .Height ;_cac .TemplatesSize .Add (uint64 (_cbga )*uint64 (_cef ),_dfg );_cce ,_dfd :=_dbb .Get (_edd );if _dfd !=nil {return _ae .Wrap (_dfd ,_bd ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cbc .AddBox (_cce );_cac .ClassInstances .AddBitmaps (_cbc );_cac .CentroidPointsTemplates .AddPoint (_dca ,_fab );_cac .UndilatedTemplates .AddBitmap (_dcc );_cac .DilatedTemplates .AddBitmap (_dgc );};};return nil ;};const JbAddedPixels =6;const (RankHaus Method =iota ;Correlation ;);type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_af .IntSlice ;TemplateAreas *_af .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_aa .BitmapsArray ;UndilatedTemplates *_aa .Bitmaps ;DilatedTemplates *_aa .Bitmaps ;TemplatesSize _af .IntsMap ;FgTemplates *_af .NumSlice ;CentroidPoints *_aa .Points ;CentroidPointsTemplates *_aa .Points ;ClassIDs *_af .IntSlice ;ComponentPageNumbers *_af .IntSlice ;PtaUL *_aa .Points ;PtaLL *_aa .Points ;};func (_gbgg *Classer )classifyRankHaus (_age *_aa .Boxes ,_dcg *_aa .Bitmaps ,_eag int )error {const _ecc ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _age ==nil {return _ae .Error (_ecc ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _dcg ==nil {return _ae .Error (_ecc ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_bfe :=len (_dcg .Values );if _bfe ==0{return _ae .Error (_ecc ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_fg :=_dcg .CountPixels ();_ccf :=_gbgg .Settings .SizeHaus ;_aae :=_aa .SelCreateBrick (_ccf ,_ccf ,_ccf /2,_ccf /2,_aa .SelHit );_dbf :=&_aa .Bitmaps {Values :make ([]*_aa .Bitmap ,_bfe )};_ggba :=&_aa .Bitmaps {Values :make ([]*_aa .Bitmap ,_bfe )};var (_fbd ,_gcf ,_afab *_aa .Bitmap ;_cab error ;);for _aaef :=0;_aaef < _bfe ;_aaef ++{_fbd ,_cab =_dcg .GetBitmap (_aaef );if _cab !=nil {return _ae .Wrap (_cab ,_ecc ,"");};_gcf ,_cab =_fbd .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _cab !=nil {return _ae .Wrap (_cab ,_ecc ,"");};_afab ,_cab =_aa .Dilate (nil ,_gcf ,_aae );if _cab !=nil {return _ae .Wrap (_cab ,_ecc ,"");};_dbf .Values [_bfe ]=_gcf ;_ggba .Values [_bfe ]=_afab ;};_bce ,_cab :=_aa .Centroids (_dbf .Values );if _cab !=nil {return _ae .Wrap (_cab ,_ecc ,"");};if _cab =_bce .Add (_gbgg .CentroidPoints );_cab !=nil {_a .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _gbgg .Settings .RankHaus ==1.0{_cab =_gbgg .classifyRankHouseOne (_age ,_dcg ,_dbf ,_ggba ,_bce ,_eag );}else {_cab =_gbgg .classifyRankHouseNonOne (_age ,_dcg ,_dbf ,_ggba ,_bce ,_fg ,_eag );};if _cab !=nil {return _ae .Wrap (_cab ,_ecc ,"");};return nil ;};func (_beec *Settings )SetDefault (){if _beec .MaxCompWidth ==0{switch _beec .Components {case _aa .ComponentConn :_beec .MaxCompWidth =MaxConnCompWidth ;case _aa .ComponentCharacters :_beec .MaxCompWidth =MaxCharCompWidth ;case _aa .ComponentWords :_beec .MaxCompWidth =MaxWordCompWidth ;};};if _beec .MaxCompHeight ==0{_beec .MaxCompHeight =MaxCompHeight ;};if _beec .Thresh ==0.0{_beec .Thresh =0.9;};if _beec .WeightFactor ==0.0{_beec .WeightFactor =0.75;};if _beec .RankHaus ==0.0{_beec .RankHaus =0.97;};if _beec .SizeHaus ==0{_beec .SizeHaus =2;};};type Method int ;func _gacd (_abcg *Classer ,_fega *_aa .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_fega .Width ,Height :_fega .Height ,Classer :_abcg };};func (_ea *Classer )addPageComponents (_aba *_aa .Bitmap ,_ga *_aa .Boxes ,_cf *_aa .Bitmaps ,_fc int ,_dgb Method )error {const _de ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";if _aba ==nil {return _ae .Error (_de ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _ga ==nil ||_cf ==nil ||len (*_ga )==0{_a .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_aba );return nil ;};var _dgf error ;switch _dgb {case RankHaus :_dgf =_ea .classifyRankHaus (_ga ,_cf ,_fc );case Correlation :_dgf =_ea .classifyCorrelation (_ga ,_cf ,_fc );default:_a .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_dgb );return _ae .Error (_de ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _dgf !=nil {return _ae .Wrap (_dgf ,_de ,"");};if _dgf =_ea .getULCorners (_aba ,_ga );_dgf !=nil {return _ae .Wrap (_dgf ,_de ,"");};_afa :=len (*_ga );_ea .BaseIndex +=_afa ;if _dgf =_ea .ComponentsNumber .Add (_afa );_dgf !=nil {return _ae .Wrap (_dgf ,_de ,"");};return nil ;};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);func (_cbd Settings )Validate ()error {const _bdf ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _cbd .Thresh < 0.4||_cbd .Thresh > 0.98{return _ae .Error (_bdf ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");};if _cbd .WeightFactor < 0.0||_cbd .WeightFactor > 1.0{return _ae .Error (_bdf ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _cbd .RankHaus < 0.5||_cbd .RankHaus > 1.0{return _ae .Error (_bdf ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _cbd .SizeHaus < 1||_cbd .SizeHaus > 10{return _ae .Error (_bdf ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");};switch _cbd .Components {case _aa .ComponentConn ,_aa .ComponentCharacters ,_aa .ComponentWords :default:return _ae .Error (_bdf ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");};return nil ;};func (_ecb *similarTemplatesFinder )Next ()int {var (_bdb ,_gdab ,_aee ,_egf int ;_fga bool ;_ebcb *_aa .Bitmap ;_eef error ;);for {if _ecb .Index >=25{return -1;};_gdab =_ecb .Width +TwoByTwoWalk [2*_ecb .Index ];_bdb =_ecb .Height +TwoByTwoWalk [2*_ecb .Index +1];if _bdb < 1||_gdab < 1{_ecb .Index ++;continue ;};if len (_ecb .CurrentNumbers )==0{_ecb .CurrentNumbers ,_fga =_ecb .Classer .TemplatesSize .GetSlice (uint64 (_gdab )*uint64 (_bdb ));if !_fga {_ecb .Index ++;continue ;};_ecb .N =0;};_aee =len (_ecb .CurrentNumbers );for ;_ecb .N < _aee ;_ecb .N ++{_egf =_ecb .CurrentNumbers [_ecb .N ];_ebcb ,_eef =_ecb .Classer .DilatedTemplates .GetBitmap (_egf );if _eef !=nil {_a .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");return 0;};if _ebcb .Width -2*JbAddedPixels ==_gdab &&_ebcb .Height -2*JbAddedPixels ==_bdb {return _egf ;};};_ecb .Index ++;_ecb .CurrentNumbers =nil ;};};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};var _bc bool ;var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func (_bcfg *Classer )classifyRankHouseNonOne (_fea *_aa .Boxes ,_dabf ,_bgge ,_gdg *_aa .Bitmaps ,_cage *_aa .Points ,_ffa *_af .NumSlice ,_gef int )(_cbgg error ){const _aac ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_acg ,_cfce ,_bcef ,_bbb float32 ;_fdd ,_dagc ,_cabg int ;_gab ,_bfa ,_ecec ,_fac ,_bea *_aa .Bitmap ;_cg ,_fce bool ;);_aeg :=_aa .MakePixelSumTab8 ();for _efg :=0;_efg < len (_dabf .Values );_efg ++{if _bfa ,_cbgg =_bgge .GetBitmap (_efg );_cbgg !=nil {return _ae .Wrap (_cbgg ,_aac ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _fdd ,_cbgg =_ffa .GetInt (_efg );_cbgg !=nil {_a .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_efg ,_cbgg );};if _ecec ,_cbgg =_gdg .GetBitmap (_efg );_cbgg !=nil {return _ae .Wrap (_cbgg ,_aac ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _acg ,_cfce ,_cbgg =_cage .GetGeometry (_efg );_cbgg !=nil {return _ae .Wrapf (_cbgg ,_aac ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");};_feg :=len (_bcfg .UndilatedTemplates .Values );_cg =false ;_gdb :=_gacd (_bcfg ,_bfa );for _cabg =_gdb .Next ();_cabg > -1;{if _fac ,_cbgg =_bcfg .UndilatedTemplates .GetBitmap (_cabg );_cbgg !=nil {return _ae .Wrap (_cbgg ,_aac ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _dagc ,_cbgg =_bcfg .FgTemplates .GetInt (_cabg );_cbgg !=nil {_a .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_cabg ,_cbgg );};if _bea ,_cbgg =_bcfg .DilatedTemplates .GetBitmap (_cabg );_cbgg !=nil {return _ae .Wrap (_cbgg ,_aac ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _bcef ,_bbb ,_cbgg =_bcfg .CentroidPointsTemplates .GetGeometry (_cabg );_cbgg !=nil {return _ae .Wrap (_cbgg ,_aac ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_fce ,_cbgg =_aa .RankHausTest (_bfa ,_ecec ,_fac ,_bea ,_acg -_bcef ,_cfce -_bbb ,MaxDiffWidth ,MaxDiffHeight ,_fdd ,_dagc ,float32 (_bcfg .Settings .RankHaus ),_aeg );if _cbgg !=nil {return _ae .Wrap (_cbgg ,_aac ,"");};if _fce {_cg =true ;if _cbgg =_bcfg .ClassIDs .Add (_cabg );_cbgg !=nil {return _ae .Wrap (_cbgg ,_aac ,"");};if _cbgg =_bcfg .ComponentPageNumbers .Add (_gef );_cbgg !=nil {return _ae .Wrap (_cbgg ,_aac ,"");};if _bcfg .Settings .KeepClassInstances {_dcbf ,_cgb :=_bcfg .ClassInstances .GetBitmaps (_cabg );if _cgb !=nil {return _ae .Wrap (_cgb ,_aac ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");};if _gab ,_cgb =_dabf .GetBitmap (_efg );_cgb !=nil {return _ae .Wrap (_cgb ,_aac ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_dcbf .Values =append (_dcbf .Values ,_gab );_dga ,_cgb :=_fea .Get (_efg );if _cgb !=nil {return _ae .Wrap (_cgb ,_aac ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};_dcbf .Boxes =append (_dcbf .Boxes ,_dga );};break ;};};if !_cg {if _cbgg =_bcfg .ClassIDs .Add (_feg );_cbgg !=nil {return _ae .Wrap (_cbgg ,_aac ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _cbgg =_bcfg .ComponentPageNumbers .Add (_gef );_cbgg !=nil {return _ae .Wrap (_cbgg ,_aac ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dgfg :=&_aa .Bitmaps {};_gab =_dabf .Values [_efg ];_dgfg .AddBitmap (_gab );_cfa ,_badg :=_gab .Width ,_gab .Height ;_bcfg .TemplatesSize .Add (uint64 (_cfa )*uint64 (_badg ),_feg );_dcaa ,_adf :=_fea .Get (_efg );if _adf !=nil {return _ae .Wrap (_adf ,_aac ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dgfg .AddBox (_dcaa );_bcfg .ClassInstances .AddBitmaps (_dgfg );_bcfg .CentroidPointsTemplates .AddPoint (_acg ,_cfce );_bcfg .UndilatedTemplates .AddBitmap (_bfa );_bcfg .DilatedTemplates .AddBitmap (_ecec );_bcfg .FgTemplates .AddInt (_fdd );};};_bcfg .NumberOfClasses =len (_bcfg .UndilatedTemplates .Values );return nil ;};func (_aga *Classer )classifyCorrelation (_ccd *_aa .Boxes ,_df *_aa .Bitmaps ,_dea int )error {const _ca ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";if _ccd ==nil {return _ae .Error (_ca ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");};if _df ==nil {return _ae .Error (_ca ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_beeb :=len (_df .Values );if _beeb ==0{_a .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");return nil ;};var (_cbe ,_bad *_aa .Bitmap ;_gga error ;);_eed :=&_aa .Bitmaps {Values :make ([]*_aa .Bitmap ,_beeb )};for _bed ,_bbc :=range _df .Values {_bad ,_gga =_bbc .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _gga !=nil {return _ae .Wrap (_gga ,_ca ,"");};_eed .Values [_bed ]=_bad ;};_dab :=_aga .FgTemplates ;_bcf :=_aa .MakePixelSumTab8 ();_cea :=_aa .MakePixelCentroidTab8 ();_egc :=make ([]int ,_beeb );_abae :=make ([][]int ,_beeb );_gfd :=_aa .Points (make ([]_aa .Point ,_beeb ));_ceef :=&_gfd ;var (_cbgc ,_dcd int ;_ffg ,_fd ,_fb int ;_abc ,_afg int ;_ecab byte ;);for _dabe ,_fcbd :=range _eed .Values {_abae [_dabe ]=make ([]int ,_fcbd .Height );_cbgc =0;_dcd =0;_fd =(_fcbd .Height -1)*_fcbd .RowStride ;_ffg =0;for _afg =_fcbd .Height -1;_afg >=0;_afg ,_fd =_afg -1,_fd -_fcbd .RowStride {_abae [_dabe ][_afg ]=_ffg ;_fb =0;for _abc =0;_abc < _fcbd .RowStride ;_abc ++{_ecab =_fcbd .Data [_fd +_abc ];_fb +=_bcf [_ecab ];_cbgc +=_cea [_ecab ]+_abc *8*_bcf [_ecab ];};_ffg +=_fb ;_dcd +=_fb *_afg ;};_egc [_dabe ]=_ffg ;if _ffg > 0{(*_ceef )[_dabe ]=_aa .Point {X :float32 (_cbgc )/float32 (_ffg ),Y :float32 (_dcd )/float32 (_ffg )};}else {(*_ceef )[_dabe ]=_aa .Point {X :float32 (_fcbd .Width )/float32 (2),Y :float32 (_fcbd .Height )/float32 (2)};};};if _gga =_aga .CentroidPoints .Add (_ceef );_gga !=nil {return _ae .Wrap (_gga ,_ca ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_efe ,_dag ,_fbc int ;_agf float64 ;_ffe ,_bff ,_acf ,_daae float32 ;_fbf ,_agge _aa .Point ;_bade bool ;_gag *similarTemplatesFinder ;_dbe int ;_fbcf *_aa .Bitmap ;_fee *_e .Rectangle ;_def *_aa .Bitmaps ;);for _dbe ,_bad =range _eed .Values {_dag =_egc [_dbe ];if _ffe ,_bff ,_gga =_ceef .GetGeometry (_dbe );_gga !=nil {return _ae .Wrap (_gga ,_ca ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_bade =false ;_beb :=len (_aga .UndilatedTemplates .Values );_gag =_gacd (_aga ,_bad );for _ceb :=_gag .Next ();_ceb > -1;{if _fbcf ,_gga =_aga .UndilatedTemplates .GetBitmap (_ceb );_gga !=nil {return _ae .Wrap (_gga ,_ca ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _fbc ,_gga =_dab .GetInt (_ceb );_gga !=nil {_a .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_gga );};if _acf ,_daae ,_gga =_aga .CentroidPointsTemplates .GetGeometry (_ceb );_gga !=nil {return _ae .Wrap (_gga ,_ca ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");};if _aga .Settings .WeightFactor > 0.0{if _efe ,_gga =_aga .TemplateAreas .Get (_ceb );_gga !=nil {_a .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_gga );};_agf =_aga .Settings .Thresh +(1.0-_aga .Settings .Thresh )*_aga .Settings .WeightFactor *float64 (_fbc )/float64 (_efe );}else {_agf =_aga .Settings .Thresh ;};_gcc ,_fag :=_aa .CorrelationScoreThresholded (_bad ,_fbcf ,_dag ,_fbc ,_fbf .X -_agge .X ,_fbf .Y -_agge .Y ,MaxDiffWidth ,MaxDiffHeight ,_bcf ,_abae [_dbe ],float32 (_agf ));if _fag !=nil {return _ae .Wrap (_fag ,_ca ,"");};if _bc {var (_gda ,_adg float64 ;_caf ,_dcf int ;);_gda ,_fag =_aa .CorrelationScore (_bad ,_fbcf ,_dag ,_fbc ,_ffe -_acf ,_bff -_daae ,MaxDiffWidth ,MaxDiffHeight ,_bcf );if _fag !=nil {return _ae .Wrap (_fag ,_ca ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_adg ,_fag =_aa .CorrelationScoreSimple (_bad ,_fbcf ,_dag ,_fbc ,_ffe -_acf ,_bff -_daae ,MaxDiffWidth ,MaxDiffHeight ,_bcf );if _fag !=nil {return _ae .Wrap (_fag ,_ca ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_caf =int (_ef .Sqrt (_gda *float64 (_dag )*float64 (_fbc )));_dcf =int (_ef .Sqrt (_adg *float64 (_dag )*float64 (_fbc )));if (_gda >=_agf )!=(_adg >=_agf ){return _ae .Errorf (_ca ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_caf ,_gda ,_gda >=_agf ,_dcf ,_adg ,_adg >=_agf ,_gda -_adg );};if _gda >=_agf !=_gcc {return _ae .Errorf (_ca ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_gda ,_gda *float64 (_dag )*float64 (_fbc ),_caf ,_agf ,float32 (_agf )*float32 (_dag )*float32 (_fbc ),_gcc );};};if _gcc {_bade =true ;if _fag =_aga .ClassIDs .Add (_ceb );_fag !=nil {return _ae .Wrap (_fag ,_ca ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _fag =_aga .ComponentPageNumbers .Add (_dea );_fag !=nil {return _ae .Wrap (_fag ,_ca ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _aga .Settings .KeepClassInstances {if _cbe ,_fag =_df .GetBitmap (_dbe );_fag !=nil {return _ae .Wrap (_fag ,_ca ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _def ,_fag =_aga .ClassInstances .GetBitmaps (_ceb );_fag !=nil {return _ae .Wrap (_fag ,_ca ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_def .AddBitmap (_cbe );if _fee ,_fag =_ccd .Get (_dbe );_fag !=nil {return _ae .Wrap (_fag ,_ca ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");};_def .AddBox (_fee );};break ;};};if !_bade {if _gga =_aga .ClassIDs .Add (_beb );_gga !=nil {return _ae .Wrap (_gga ,_ca ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _gga =_aga .ComponentPageNumbers .Add (_dea );_gga !=nil {return _ae .Wrap (_gga ,_ca ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_def =&_aa .Bitmaps {};if _cbe ,_gga =_df .GetBitmap (_dbe );_gga !=nil {return _ae .Wrap (_gga ,_ca ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_def .AddBitmap (_cbe );_ffc ,_gfdc :=_cbe .Width ,_cbe .Height ;_dcbg :=uint64 (_gfdc )*uint64 (_ffc );_aga .TemplatesSize .Add (_dcbg ,_beb );if _fee ,_gga =_ccd .Get (_dbe );_gga !=nil {return _ae .Wrap (_gga ,_ca ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_def .AddBox (_fee );_aga .ClassInstances .AddBitmaps (_def );_aga .CentroidPointsTemplates .AddPoint (_ffe ,_bff );_aga .FgTemplates .AddInt (_dag );_aga .UndilatedTemplates .AddBitmap (_cbe );_efe =(_bad .Width -2*JbAddedPixels )*(_bad .Height -2*JbAddedPixels );if _gga =_aga .TemplateAreas .Add (_efe );_gga !=nil {return _ae .Wrap (_gga ,_ca ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_aga .NumberOfClasses =len (_aga .UndilatedTemplates .Values );return nil ;};func DefaultSettings ()Settings {_gaf :=&Settings {};_gaf .SetDefault ();return *_gaf };type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _aa .Component ;Method Method ;};func (_ba *Classer )getULCorners (_ee *_aa .Bitmap ,_ec *_aa .Boxes )error {const _dc ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _ee ==nil {return _ae .Error (_dc ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _ec ==nil {return _ae .Error (_dc ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _ba .PtaUL ==nil {_ba .PtaUL =&_aa .Points {};};_eec :=len (*_ec );var (_cee ,_da ,_gf ,_ag int ;_ge ,_gad ,_bac ,_dbae float32 ;_gd error ;_dd *_e .Rectangle ;_cfc *_aa .Bitmap ;_be _e .Point ;);for _egb :=0;_egb < _eec ;_egb ++{_cee =_ba .BaseIndex +_egb ;if _ge ,_gad ,_gd =_ba .CentroidPoints .GetGeometry (_cee );_gd !=nil {return _ae .Wrap (_gd ,_dc ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _da ,_gd =_ba .ClassIDs .Get (_cee );_gd !=nil {return _ae .Wrap (_gd ,_dc ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _bac ,_dbae ,_gd =_ba .CentroidPointsTemplates .GetGeometry (_da );_gd !=nil {return _ae .Wrap (_gd ,_dc ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_eca :=_bac -_ge ;_fcb :=_dbae -_gad ;if _eca >=0{_gf =int (_eca +0.5);}else {_gf =int (_eca -0.5);};if _fcb >=0{_ag =int (_fcb +0.5);}else {_ag =int (_fcb -0.5);};if _dd ,_gd =_ec .Get (_egb );_gd !=nil {return _ae .Wrap (_gd ,_dc ,"");};_gc ,_edc :=_dd .Min .X ,_dd .Min .Y ;_cfc ,_gd =_ba .UndilatedTemplates .GetBitmap (_da );if _gd !=nil {return _ae .Wrap (_gd ,_dc ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");};_be ,_gd =_bg (_ee ,_gc ,_edc ,_gf ,_ag ,_cfc );if _gd !=nil {return _ae .Wrap (_gd ,_dc ,"");};_ba .PtaUL .AddPoint (float32 (_gc -_gf +_be .X ),float32 (_edc -_ag +_be .Y ));};return nil ;};