//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_gf "github.com/unidoc/unipdf/v3/common";_b "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_d "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_bb "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_g "image";_gc "math";
);var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func (_bfd *Classer )classifyRankHaus (_edgb *_d .Boxes ,_agd *_d .Bitmaps ,_gbea int )error {const _cfgg ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";
if _edgb ==nil {return _bb .Error (_cfgg ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _agd ==nil {return _bb .Error (_cfgg ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};_fcc :=len (_agd .Values );if _fcc ==0{return _bb .Error (_cfgg ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_fdg :=_agd .CountPixels ();_bgc :=_bfd .Settings .SizeHaus ;_ddf :=_d .SelCreateBrick (_bgc ,_bgc ,_bgc /2,_bgc /2,_d .SelHit );
_dfb :=&_d .Bitmaps {Values :make ([]*_d .Bitmap ,_fcc )};_ffa :=&_d .Bitmaps {Values :make ([]*_d .Bitmap ,_fcc )};var (_ecdb ,_aef ,_cgd *_d .Bitmap ;_baf error ;);for _aff :=0;_aff < _fcc ;_aff ++{_ecdb ,_baf =_agd .GetBitmap (_aff );if _baf !=nil {return _bb .Wrap (_baf ,_cfgg ,"");
};_aef ,_baf =_ecdb .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _baf !=nil {return _bb .Wrap (_baf ,_cfgg ,"");};_cgd ,_baf =_d .Dilate (nil ,_aef ,_ddf );if _baf !=nil {return _bb .Wrap (_baf ,_cfgg ,"");};_dfb .Values [_fcc ]=_aef ;
_ffa .Values [_fcc ]=_cgd ;};_gab ,_baf :=_d .Centroids (_dfb .Values );if _baf !=nil {return _bb .Wrap (_baf ,_cfgg ,"");};if _baf =_gab .Add (_bfd .CentroidPoints );_baf !=nil {_gf .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");
};if _bfd .Settings .RankHaus ==1.0{_baf =_bfd .classifyRankHouseOne (_edgb ,_agd ,_dfb ,_ffa ,_gab ,_gbea );}else {_baf =_bfd .classifyRankHouseNonOne (_edgb ,_agd ,_dfb ,_ffa ,_gab ,_fdg ,_gbea );};if _baf !=nil {return _bb .Wrap (_baf ,_cfgg ,"");};
return nil ;};func _fgb (_gfb *Classer ,_ffaa *_d .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_ffaa .Width ,Height :_ffaa .Height ,Classer :_gfb };};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;
MaxCompHeight =120;);const (RankHaus Method =iota ;Correlation ;);type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_b .IntSlice ;TemplateAreas *_b .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_d .BitmapsArray ;
UndilatedTemplates *_d .Bitmaps ;DilatedTemplates *_d .Bitmaps ;TemplatesSize _b .IntsMap ;FgTemplates *_b .NumSlice ;CentroidPoints *_d .Points ;CentroidPointsTemplates *_d .Points ;ClassIDs *_b .IntSlice ;ComponentPageNumbers *_b .IntSlice ;PtaUL *_d .Points ;
PtaLL *_d .Points ;};func (_gaeb *similarTemplatesFinder )Next ()int {var (_fda ,_febf ,_cdf ,_dggc int ;_gdc bool ;_fcdb *_d .Bitmap ;_eaad error ;);for {if _gaeb .Index >=25{return -1;};_febf =_gaeb .Width +TwoByTwoWalk [2*_gaeb .Index ];_fda =_gaeb .Height +TwoByTwoWalk [2*_gaeb .Index +1];
if _fda < 1||_febf < 1{_gaeb .Index ++;continue ;};if len (_gaeb .CurrentNumbers )==0{_gaeb .CurrentNumbers ,_gdc =_gaeb .Classer .TemplatesSize .GetSlice (uint64 (_febf )*uint64 (_fda ));if !_gdc {_gaeb .Index ++;continue ;};_gaeb .N =0;};_cdf =len (_gaeb .CurrentNumbers );
for ;_gaeb .N < _cdf ;_gaeb .N ++{_dggc =_gaeb .CurrentNumbers [_gaeb .N ];_fcdb ,_eaad =_gaeb .Classer .DilatedTemplates .GetBitmap (_dggc );if _eaad !=nil {_gf .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _fcdb .Width -2*JbAddedPixels ==_febf &&_fcdb .Height -2*JbAddedPixels ==_fda {return _dggc ;};};_gaeb .Index ++;_gaeb .CurrentNumbers =nil ;};};func (_gcg *Settings )SetDefault (){if _gcg .MaxCompWidth ==0{switch _gcg .Components {case _d .ComponentConn :_gcg .MaxCompWidth =MaxConnCompWidth ;
case _d .ComponentCharacters :_gcg .MaxCompWidth =MaxCharCompWidth ;case _d .ComponentWords :_gcg .MaxCompWidth =MaxWordCompWidth ;};};if _gcg .MaxCompHeight ==0{_gcg .MaxCompHeight =MaxCompHeight ;};if _gcg .Thresh ==0.0{_gcg .Thresh =0.9;};if _gcg .WeightFactor ==0.0{_gcg .WeightFactor =0.75;
};if _gcg .RankHaus ==0.0{_gcg .RankHaus =0.97;};if _gcg .SizeHaus ==0{_gcg .SizeHaus =2;};};func (_cg *Classer )getULCorners (_agg *_d .Bitmap ,_dd *_d .Boxes )error {const _eeb ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _agg ==nil {return _bb .Error (_eeb ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};if _dd ==nil {return _bb .Error (_eeb ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _cg .PtaUL ==nil {_cg .PtaUL =&_d .Points {};};_dc :=len (*_dd );var (_gbc ,_ecd ,_cf ,_da int ;_cfg ,_bbg ,_ggc ,_eg float32 ;_ba error ;_db *_g .Rectangle ;
_afg *_d .Bitmap ;_dbg _g .Point ;);for _bae :=0;_bae < _dc ;_bae ++{_gbc =_cg .BaseIndex +_bae ;if _cfg ,_bbg ,_ba =_cg .CentroidPoints .GetGeometry (_gbc );_ba !=nil {return _bb .Wrap (_ba ,_eeb ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");
};if _ecd ,_ba =_cg .ClassIDs .Get (_gbc );_ba !=nil {return _bb .Wrap (_ba ,_eeb ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _ggc ,_eg ,_ba =_cg .CentroidPointsTemplates .GetGeometry (_ecd );_ba !=nil {return _bb .Wrap (_ba ,_eeb ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");
};_ggb :=_ggc -_cfg ;_bd :=_eg -_bbg ;if _ggb >=0{_cf =int (_ggb +0.5);}else {_cf =int (_ggb -0.5);};if _bd >=0{_da =int (_bd +0.5);}else {_da =int (_bd -0.5);};if _db ,_ba =_dd .Get (_bae );_ba !=nil {return _bb .Wrap (_ba ,_eeb ,"");};_ef ,_ff :=_db .Min .X ,_db .Min .Y ;
_afg ,_ba =_cg .UndilatedTemplates .GetBitmap (_ecd );if _ba !=nil {return _bb .Wrap (_ba ,_eeb ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_dbg ,_ba =_eb (_agg ,_ef ,_ff ,_cf ,_da ,_afg );if _ba !=nil {return _bb .Wrap (_ba ,_eeb ,"");};_cg .PtaUL .AddPoint (float32 (_ef -_cf +_dbg .X ),float32 (_ff -_da +_dbg .Y ));};return nil ;};type Method int ;func (_dde *Classer )verifyMethod (_afb Method )error {if _afb !=RankHaus &&_afb !=Correlation {return _bb .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};func (_gef *Classer )classifyRankHouseNonOne (_eaa *_d .Boxes ,_adg ,_ggg ,_ace *_d .Bitmaps ,_cgc *_d .Points ,_gag *_b .NumSlice ,_gcag int )(_fcb error ){const _gfcf ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_cbb ,_fb ,_gdag ,_aac float32 ;_def ,_acea ,_eac int ;_cdg ,_fcd ,_cgg ,_bcd ,_cgf *_d .Bitmap ;_fcg ,_ffg bool ;);_efb :=_d .MakePixelSumTab8 ();for _fbc :=0;_fbc < len (_adg .Values );_fbc ++{if _fcd ,_fcb =_ggg .GetBitmap (_fbc );_fcb !=nil {return _bb .Wrap (_fcb ,_gfcf ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _def ,_fcb =_gag .GetInt (_fbc );_fcb !=nil {_gf .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_fbc ,_fcb );
};if _cgg ,_fcb =_ace .GetBitmap (_fbc );_fcb !=nil {return _bb .Wrap (_fcb ,_gfcf ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _cbb ,_fb ,_fcb =_cgc .GetGeometry (_fbc );_fcb !=nil {return _bb .Wrapf (_fcb ,_gfcf ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_aggb :=len (_gef .UndilatedTemplates .Values );_fcg =false ;_ggd :=_fgb (_gef ,_fcd );for _eac =_ggd .Next ();_eac > -1;{if _bcd ,_fcb =_gef .UndilatedTemplates .GetBitmap (_eac );_fcb !=nil {return _bb .Wrap (_fcb ,_gfcf ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _acea ,_fcb =_gef .FgTemplates .GetInt (_eac );_fcb !=nil {_gf .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_eac ,_fcb );
};if _cgf ,_fcb =_gef .DilatedTemplates .GetBitmap (_eac );_fcb !=nil {return _bb .Wrap (_fcb ,_gfcf ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _gdag ,_aac ,_fcb =_gef .CentroidPointsTemplates .GetGeometry (_eac );
_fcb !=nil {return _bb .Wrap (_fcb ,_gfcf ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_ffg ,_fcb =_d .RankHausTest (_fcd ,_cgg ,_bcd ,_cgf ,_cbb -_gdag ,_fb -_aac ,MaxDiffWidth ,MaxDiffHeight ,_def ,_acea ,float32 (_gef .Settings .RankHaus ),_efb );
if _fcb !=nil {return _bb .Wrap (_fcb ,_gfcf ,"");};if _ffg {_fcg =true ;if _fcb =_gef .ClassIDs .Add (_eac );_fcb !=nil {return _bb .Wrap (_fcb ,_gfcf ,"");};if _fcb =_gef .ComponentPageNumbers .Add (_gcag );_fcb !=nil {return _bb .Wrap (_fcb ,_gfcf ,"");
};if _gef .Settings .KeepClassInstances {_ebd ,_cfe :=_gef .ClassInstances .GetBitmaps (_eac );if _cfe !=nil {return _bb .Wrap (_cfe ,_gfcf ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _cdg ,_cfe =_adg .GetBitmap (_fbc );_cfe !=nil {return _bb .Wrap (_cfe ,_gfcf ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_ebd .Values =append (_ebd .Values ,_cdg );_fec ,_cfe :=_eaa .Get (_fbc );if _cfe !=nil {return _bb .Wrap (_cfe ,_gfcf ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_ebd .Boxes =append (_ebd .Boxes ,_fec );};break ;};};if !_fcg {if _fcb =_gef .ClassIDs .Add (_aggb );_fcb !=nil {return _bb .Wrap (_fcb ,_gfcf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _fcb =_gef .ComponentPageNumbers .Add (_gcag );_fcb !=nil {return _bb .Wrap (_fcb ,_gfcf ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_dcd :=&_d .Bitmaps {};_cdg =_adg .Values [_fbc ];_dcd .AddBitmap (_cdg );_abc ,_afbe :=_cdg .Width ,_cdg .Height ;_gef .TemplatesSize .Add (uint64 (_abc )*uint64 (_afbe ),_aggb );_bfce ,_facb :=_eaa .Get (_fbc );if _facb !=nil {return _bb .Wrap (_facb ,_gfcf ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_dcd .AddBox (_bfce );_gef .ClassInstances .AddBitmaps (_dcd );_gef .CentroidPointsTemplates .AddPoint (_cbb ,_fb );_gef .UndilatedTemplates .AddBitmap (_fcd );_gef .DilatedTemplates .AddBitmap (_cgg );_gef .FgTemplates .AddInt (_def );};};_gef .NumberOfClasses =len (_gef .UndilatedTemplates .Values );
return nil ;};func (_fdb Settings )Validate ()error {const _aag ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _fdb .Thresh < 0.4||_fdb .Thresh > 0.98{return _bb .Error (_aag ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _fdb .WeightFactor < 0.0||_fdb .WeightFactor > 1.0{return _bb .Error (_aag ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _fdb .RankHaus < 0.5||_fdb .RankHaus > 1.0{return _bb .Error (_aag ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _fdb .SizeHaus < 1||_fdb .SizeHaus > 10{return _bb .Error (_aag ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _fdb .Components {case _d .ComponentConn ,_d .ComponentCharacters ,_d .ComponentWords :default:return _bb .Error (_aag ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};func (_bbf *Classer )AddPage (inputPage *_d .Bitmap ,pageNumber int ,method Method )(_gb error ){const _e ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_bbf .Widths [pageNumber ]=inputPage .Width ;_bbf .Heights [pageNumber ]=inputPage .Height ;
if _gb =_bbf .verifyMethod (method );_gb !=nil {return _bb .Wrap (_gb ,_e ,"");};_c ,_dg ,_gb :=inputPage .GetComponents (_bbf .Settings .Components ,_bbf .Settings .MaxCompWidth ,_bbf .Settings .MaxCompHeight );if _gb !=nil {return _bb .Wrap (_gb ,_e ,"");
};_gf .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_c );if _gb =_bbf .addPageComponents (inputPage ,_dg ,_c ,pageNumber ,method );_gb !=nil {return _bb .Wrap (_gb ,_e ,"");};return nil ;};func _eb (_cd *_d .Bitmap ,_bcb ,_be ,_bdd ,_cga int ,_ge *_d .Bitmap )(_daf _g .Point ,_ce error ){const _ced ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _cd ==nil {return _daf ,_bb .Error (_ced ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _ge ==nil {return _daf ,_bb .Error (_ced ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_gd ,_ebb :=_ge .Width ,_ge .Height ;_dcg ,_dag :=_bcb -_bdd -JbAddedPixels ,_be -_cga -JbAddedPixels ;_gf .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_bcb ,_be ,_gd ,_ebb ,_dcg ,_dag );
_ddc ,_ce :=_d .Rect (_dcg ,_dag ,_gd ,_ebb );if _ce !=nil {return _daf ,_bb .Wrap (_ce ,_ced ,"");};_gca ,_ ,_ce :=_cd .ClipRectangle (_ddc );if _ce !=nil {_gf .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_ddc );
return _daf ,_bb .Wrap (_ce ,_ced ,"");};_dee :=_d .New (_gca .Width ,_gca .Height );_bfe :=_gc .MaxInt32 ;var _efe ,_cgb ,_cdb ,_ab ,_egg int ;for _efe =-1;_efe <=1;_efe ++{for _cgb =-1;_cgb <=1;_cgb ++{if _ ,_ce =_d .Copy (_dee ,_gca );_ce !=nil {return _daf ,_bb .Wrap (_ce ,_ced ,"");
};if _ce =_dee .RasterOperation (_cgb ,_efe ,_gd ,_ebb ,_d .PixSrcXorDst ,_ge ,0,0);_ce !=nil {return _daf ,_bb .Wrap (_ce ,_ced ,"");};_cdb =_dee .CountPixels ();if _cdb < _bfe {_ab =_cgb ;_egg =_efe ;_bfe =_cdb ;};};};_daf .X =_ab ;_daf .Y =_egg ;return _daf ,nil ;
};func (_bc *Classer )ComputeLLCorners ()(_ee error ){const _cb ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _bc .PtaUL ==nil {return _bb .Error (_cb ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");
};_ag :=len (*_bc .PtaUL );_bc .PtaLL =&_d .Points {};var (_ae ,_gbe float32 ;_ad ,_gfc int ;_bg *_d .Bitmap ;);for _cbf :=0;_cbf < _ag ;_cbf ++{_ae ,_gbe ,_ee =_bc .PtaUL .GetGeometry (_cbf );if _ee !=nil {_gf .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ee );
return _bb .Wrap (_ee ,_cb ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_ad ,_ee =_bc .ClassIDs .Get (_cbf );if _ee !=nil {_gf .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_ee );
return _bb .Wrap (_ee ,_cb ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_bg ,_ee =_bc .UndilatedTemplates .GetBitmap (_ad );if _ee !=nil {_gf .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ee );
return _bb .Wrap (_ee ,_cb ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_gfc =_bg .Height ;_bc .PtaLL .AddPoint (_ae ,_gbe +float32 (_gfc ));};return nil ;};type Settings struct{MaxCompWidth int ;
MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _d .Component ;Method Method ;};func Init (settings Settings )(*Classer ,error ){const _a ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";
_gce :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_b .IntsMap {},TemplateAreas :&_b .IntSlice {},ComponentPageNumbers :&_b .IntSlice {},ClassIDs :&_b .IntSlice {},ComponentsNumber :&_b .IntSlice {},CentroidPoints :&_d .Points {},CentroidPointsTemplates :&_d .Points {},UndilatedTemplates :&_d .Bitmaps {},DilatedTemplates :&_d .Bitmaps {},ClassInstances :&_d .BitmapsArray {},FgTemplates :&_b .NumSlice {}};
if _fa :=_gce .Settings .Validate ();_fa !=nil {return nil ,_bb .Wrap (_fa ,_a ,"");};return _gce ,nil ;};const JbAddedPixels =6;const (MaxDiffWidth =2;MaxDiffHeight =2;);func (_eed *Classer )classifyCorrelation (_gbb *_d .Boxes ,_cbc *_d .Bitmaps ,_cge int )error {const _eee ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";
if _gbb ==nil {return _bb .Error (_eee ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _cbc ==nil {return _bb .Error (_eee ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_cef :=len (_cbc .Values );if _cef ==0{_gf .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_ea ,_baa *_d .Bitmap ;_fd error ;);_dcb :=&_d .Bitmaps {Values :make ([]*_d .Bitmap ,_cef )};for _gdg ,_feb :=range _cbc .Values {_baa ,_fd =_feb .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _fd !=nil {return _bb .Wrap (_fd ,_eee ,"");
};_dcb .Values [_gdg ]=_baa ;};_fc :=_eed .FgTemplates ;_fdd :=_d .MakePixelSumTab8 ();_cfb :=_d .MakePixelCentroidTab8 ();_ed :=make ([]int ,_cef );_fg :=make ([][]int ,_cef );_aeeg :=_d .Points (make ([]_d .Point ,_cef ));_ac :=&_aeeg ;var (_aa ,_eeef int ;
_gga ,_efg ,_gda int ;_gbd ,_dbgf int ;_acg byte ;);for _ga ,_bfc :=range _dcb .Values {_fg [_ga ]=make ([]int ,_bfc .Height );_aa =0;_eeef =0;_efg =(_bfc .Height -1)*_bfc .RowStride ;_gga =0;for _dbgf =_bfc .Height -1;_dbgf >=0;_dbgf ,_efg =_dbgf -1,_efg -_bfc .RowStride {_fg [_ga ][_dbgf ]=_gga ;
_gda =0;for _gbd =0;_gbd < _bfc .RowStride ;_gbd ++{_acg =_bfc .Data [_efg +_gbd ];_gda +=_fdd [_acg ];_aa +=_cfb [_acg ]+_gbd *8*_fdd [_acg ];};_gga +=_gda ;_eeef +=_gda *_dbgf ;};_ed [_ga ]=_gga ;if _gga > 0{(*_ac )[_ga ]=_d .Point {X :float32 (_aa )/float32 (_gga ),Y :float32 (_eeef )/float32 (_gga )};
}else {(*_ac )[_ga ]=_d .Point {X :float32 (_bfc .Width )/float32 (2),Y :float32 (_bfc .Height )/float32 (2)};};};if _fd =_eed .CentroidPoints .Add (_ac );_fd !=nil {return _bb .Wrap (_fd ,_eee ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");
};var (_cfc ,_bcg ,_daa int ;_edc float64 ;_df ,_deee ,_dff ,_fab float32 ;_ca ,_gad _d .Point ;_bddg bool ;_ead *similarTemplatesFinder ;_cbe int ;_dcf *_d .Bitmap ;_eedc *_g .Rectangle ;_eba *_d .Bitmaps ;);for _cbe ,_baa =range _dcb .Values {_bcg =_ed [_cbe ];
if _df ,_deee ,_fd =_ac .GetGeometry (_cbe );_fd !=nil {return _bb .Wrap (_fd ,_eee ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_bddg =false ;_bfeg :=len (_eed .UndilatedTemplates .Values );_ead =_fgb (_eed ,_baa );for _baab :=_ead .Next ();_baab > -1;
{if _dcf ,_fd =_eed .UndilatedTemplates .GetBitmap (_baab );_fd !=nil {return _bb .Wrap (_fd ,_eee ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _daa ,_fd =_fc .GetInt (_baab );
_fd !=nil {_gf .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fd );};if _dff ,_fab ,_fd =_eed .CentroidPointsTemplates .GetGeometry (_baab );
_fd !=nil {return _bb .Wrap (_fd ,_eee ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _eed .Settings .WeightFactor > 0.0{if _cfc ,_fd =_eed .TemplateAreas .Get (_baab );_fd !=nil {_gf .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_fd );
};_edc =_eed .Settings .Thresh +(1.0-_eed .Settings .Thresh )*_eed .Settings .WeightFactor *float64 (_daa )/float64 (_cfc );}else {_edc =_eed .Settings .Thresh ;};_dcc ,_abf :=_d .CorrelationScoreThresholded (_baa ,_dcf ,_bcg ,_daa ,_ca .X -_gad .X ,_ca .Y -_gad .Y ,MaxDiffWidth ,MaxDiffHeight ,_fdd ,_fg [_cbe ],float32 (_edc ));
if _abf !=nil {return _bb .Wrap (_abf ,_eee ,"");};if _ecg {var (_edg ,_dba float64 ;_gcc ,_gac int ;);_edg ,_abf =_d .CorrelationScore (_baa ,_dcf ,_bcg ,_daa ,_df -_dff ,_deee -_fab ,MaxDiffWidth ,MaxDiffHeight ,_fdd );if _abf !=nil {return _bb .Wrap (_abf ,_eee ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_dba ,_abf =_d .CorrelationScoreSimple (_baa ,_dcf ,_bcg ,_daa ,_df -_dff ,_deee -_fab ,MaxDiffWidth ,MaxDiffHeight ,_fdd );if _abf !=nil {return _bb .Wrap (_abf ,_eee ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_gcc =int (_gc .Sqrt (_edg *float64 (_bcg )*float64 (_daa )));_gac =int (_gc .Sqrt (_dba *float64 (_bcg )*float64 (_daa )));if (_edg >=_edc )!=(_dba >=_edc ){return _bb .Errorf (_eee ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_gcc ,_edg ,_edg >=_edc ,_gac ,_dba ,_dba >=_edc ,_edg -_dba );
};if _edg >=_edc !=_dcc {return _bb .Errorf (_eee ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_edg ,_edg *float64 (_bcg )*float64 (_daa ),_gcc ,_edc ,float32 (_edc )*float32 (_bcg )*float32 (_daa ),_dcc );
};};if _dcc {_bddg =true ;if _abf =_eed .ClassIDs .Add (_baab );_abf !=nil {return _bb .Wrap (_abf ,_eee ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _abf =_eed .ComponentPageNumbers .Add (_cge );_abf !=nil {return _bb .Wrap (_abf ,_eee ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _eed .Settings .KeepClassInstances {if _ea ,_abf =_cbc .GetBitmap (_cbe );_abf !=nil {return _bb .Wrap (_abf ,_eee ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _eba ,_abf =_eed .ClassInstances .GetBitmaps (_baab );
_abf !=nil {return _bb .Wrap (_abf ,_eee ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_eba .AddBitmap (_ea );if _eedc ,_abf =_gbb .Get (_cbe );_abf !=nil {return _bb .Wrap (_abf ,_eee ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_eba .AddBox (_eedc );};break ;};};if !_bddg {if _fd =_eed .ClassIDs .Add (_bfeg );_fd !=nil {return _bb .Wrap (_fd ,_eee ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _fd =_eed .ComponentPageNumbers .Add (_cge );_fd !=nil {return _bb .Wrap (_fd ,_eee ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_eba =&_d .Bitmaps {};if _ea ,_fd =_cbc .GetBitmap (_cbe );_fd !=nil {return _bb .Wrap (_fd ,_eee ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_eba .AddBitmap (_ea );_dea ,_afd :=_ea .Width ,_ea .Height ;_fgc :=uint64 (_afd )*uint64 (_dea );_eed .TemplatesSize .Add (_fgc ,_bfeg );
if _eedc ,_fd =_gbb .Get (_cbe );_fd !=nil {return _bb .Wrap (_fd ,_eee ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_eba .AddBox (_eedc );_eed .ClassInstances .AddBitmaps (_eba );_eed .CentroidPointsTemplates .AddPoint (_df ,_deee );_eed .FgTemplates .AddInt (_bcg );
_eed .UndilatedTemplates .AddBitmap (_ea );_cfc =(_baa .Width -2*JbAddedPixels )*(_baa .Height -2*JbAddedPixels );if _fd =_eed .TemplateAreas .Add (_cfc );_fd !=nil {return _bb .Wrap (_fd ,_eee ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_eed .NumberOfClasses =len (_eed .UndilatedTemplates .Values );
return nil ;};func (_cgdg *Classer )classifyRankHouseOne (_dfc *_d .Boxes ,_bee ,_cc ,_dbd *_d .Bitmaps ,_gae *_d .Points ,_edb int )(_dgg error ){const _ceg ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_dccd ,_ege ,_fac ,_bgcb float32 ;_bad int ;_beb ,_acgb ,_bddc ,_feg ,_cde *_d .Bitmap ;_abb ,_gaca bool ;);for _aae :=0;_aae < len (_bee .Values );_aae ++{_acgb =_cc .Values [_aae ];_bddc =_dbd .Values [_aae ];_dccd ,_ege ,_dgg =_gae .GetGeometry (_aae );
if _dgg !=nil {return _bb .Wrapf (_dgg ,_ceg ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_cgbf :=len (_cgdg .UndilatedTemplates .Values );_abb =false ;_age :=_fgb (_cgdg ,_acgb );for _bad =_age .Next ();_bad > -1;
{_feg ,_dgg =_cgdg .UndilatedTemplates .GetBitmap (_bad );if _dgg !=nil {return _bb .Wrap (_dgg ,_ceg ,"\u0062\u006d\u0033");};_cde ,_dgg =_cgdg .DilatedTemplates .GetBitmap (_bad );if _dgg !=nil {return _bb .Wrap (_dgg ,_ceg ,"\u0062\u006d\u0034");};_fac ,_bgcb ,_dgg =_cgdg .CentroidPointsTemplates .GetGeometry (_bad );
if _dgg !=nil {return _bb .Wrap (_dgg ,_ceg ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_gaca ,_dgg =_d .HausTest (_acgb ,_bddc ,_feg ,_cde ,_dccd -_fac ,_ege -_bgcb ,MaxDiffWidth ,MaxDiffHeight );
if _dgg !=nil {return _bb .Wrap (_dgg ,_ceg ,"");};if _gaca {_abb =true ;if _dgg =_cgdg .ClassIDs .Add (_bad );_dgg !=nil {return _bb .Wrap (_dgg ,_ceg ,"");};if _dgg =_cgdg .ComponentPageNumbers .Add (_edb );_dgg !=nil {return _bb .Wrap (_dgg ,_ceg ,"");
};if _cgdg .Settings .KeepClassInstances {_edgf ,_faf :=_cgdg .ClassInstances .GetBitmaps (_bad );if _faf !=nil {return _bb .Wrap (_faf ,_ceg ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_beb ,_faf =_bee .GetBitmap (_aae );if _faf !=nil {return _bb .Wrap (_faf ,_ceg ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_edgf .AddBitmap (_beb );_gcf ,_faf :=_dfc .Get (_aae );if _faf !=nil {return _bb .Wrap (_faf ,_ceg ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_edgf .AddBox (_gcf );};break ;};};if !_abb {if _dgg =_cgdg .ClassIDs .Add (_cgbf );_dgg !=nil {return _bb .Wrap (_dgg ,_ceg ,"");
};if _dgg =_cgdg .ComponentPageNumbers .Add (_edb );_dgg !=nil {return _bb .Wrap (_dgg ,_ceg ,"");};_dfe :=&_d .Bitmaps {};_beb ,_dgg =_bee .GetBitmap (_aae );if _dgg !=nil {return _bb .Wrap (_dgg ,_ceg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dfe .Values =append (_dfe .Values ,_beb );
_egb ,_ebf :=_beb .Width ,_beb .Height ;_cgdg .TemplatesSize .Add (uint64 (_ebf )*uint64 (_egb ),_cgbf );_gabf ,_agc :=_dfc .Get (_aae );if _agc !=nil {return _bb .Wrap (_agc ,_ceg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dfe .AddBox (_gabf );_cgdg .ClassInstances .AddBitmaps (_dfe );
_cgdg .CentroidPointsTemplates .AddPoint (_dccd ,_ege );_cgdg .UndilatedTemplates .AddBitmap (_acgb );_cgdg .DilatedTemplates .AddBitmap (_bddc );};};return nil ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;
N int ;};var _ecg bool ;func (_cba *Classer )addPageComponents (_gg *_d .Bitmap ,_dgd *_d .Boxes ,_af *_d .Bitmaps ,_bca int ,_de Method )error {const _ec ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _gg ==nil {return _bb .Error (_ec ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _dgd ==nil ||_af ==nil ||len (*_dgd )==0{_gf .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_gg );
return nil ;};var _fe error ;switch _de {case RankHaus :_fe =_cba .classifyRankHaus (_dgd ,_af ,_bca );case Correlation :_fe =_cba .classifyCorrelation (_dgd ,_af ,_bca );default:_gf .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_de );
return _bb .Error (_ec ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _fe !=nil {return _bb .Wrap (_fe ,_ec ,"");};if _fe =_cba .getULCorners (_gg ,_dgd );_fe !=nil {return _bb .Wrap (_fe ,_ec ,"");
};_gbg :=len (*_dgd );_cba .BaseIndex +=_gbg ;if _fe =_cba .ComponentsNumber .Add (_gbg );_fe !=nil {return _bb .Wrap (_fe ,_ec ,"");};return nil ;};func DefaultSettings ()Settings {_bbff :=&Settings {};_bbff .SetDefault ();return *_bbff };