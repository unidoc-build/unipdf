//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_g "github.com/unidoc/unipdf/v3/common";_d "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_cb "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_ag "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_c "image";_a "math";
);func (_ba *Classer )verifyMethod (_fcd Method )error {if _fcd !=RankHaus &&_fcd !=Correlation {return _ag .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};type Method int ;func (_dc *Classer )AddPage (inputPage *_cb .Bitmap ,pageNumber int ,method Method )(_b error ){const _fc ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_dc .Widths [pageNumber ]=inputPage .Width ;
_dc .Heights [pageNumber ]=inputPage .Height ;if _b =_dc .verifyMethod (method );_b !=nil {return _ag .Wrap (_b ,_fc ,"");};_dcg ,_eg ,_b :=inputPage .GetComponents (_dc .Settings .Components ,_dc .Settings .MaxCompWidth ,_dc .Settings .MaxCompHeight );
if _b !=nil {return _ag .Wrap (_b ,_fc ,"");};_g .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_dcg );if _b =_dc .addPageComponents (inputPage ,_eg ,_dcg ,pageNumber ,method );_b !=nil {return _ag .Wrap (_b ,_fc ,"");
};return nil ;};func (_cg *Classer )addPageComponents (_dcb *_cb .Bitmap ,_dag *_cb .Boxes ,_ec *_cb .Bitmaps ,_ga int ,_bb Method )error {const _ggc ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _dcb ==nil {return _ag .Error (_ggc ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _dag ==nil ||_ec ==nil ||len (*_dag )==0{_g .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_dcb );
return nil ;};var _ff error ;switch _bb {case RankHaus :_ff =_cg .classifyRankHaus (_dag ,_ec ,_ga );case Correlation :_ff =_cg .classifyCorrelation (_dag ,_ec ,_ga );default:_g .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_bb );
return _ag .Error (_ggc ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _ff !=nil {return _ag .Wrap (_ff ,_ggc ,"");};if _ff =_cg .getULCorners (_dcb ,_dag );_ff !=nil {return _ag .Wrap (_ff ,_ggc ,"");
};_ge :=len (*_dag );_cg .BaseIndex +=_ge ;if _ff =_cg .ComponentsNumber .Add (_ge );_ff !=nil {return _ag .Wrap (_ff ,_ggc ,"");};return nil ;};func _dg (_ffd *_cb .Bitmap ,_ed ,_fbf ,_egb ,_ab int ,_cbc *_cb .Bitmap )(_deg _c .Point ,_gga error ){const _cd ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _ffd ==nil {return _deg ,_ag .Error (_cd ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _cbc ==nil {return _deg ,_ag .Error (_cd ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_eff ,_aaf :=_cbc .Width ,_cbc .Height ;_cge ,_dfb :=_ed -_egb -JbAddedPixels ,_fbf -_ab -JbAddedPixels ;_g .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_ed ,_fbf ,_eff ,_aaf ,_cge ,_dfb );
_dfd ,_gga :=_cb .Rect (_cge ,_dfb ,_eff ,_aaf );if _gga !=nil {return _deg ,_ag .Wrap (_gga ,_cd ,"");};_ecd ,_ ,_gga :=_ffd .ClipRectangle (_dfd );if _gga !=nil {_g .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_dfd );
return _deg ,_ag .Wrap (_gga ,_cd ,"");};_dba :=_cb .New (_ecd .Width ,_ecd .Height );_ffe :=_a .MaxInt32 ;var _ac ,_cbg ,_bfc ,_bd ,_baa int ;for _ac =-1;_ac <=1;_ac ++{for _cbg =-1;_cbg <=1;_cbg ++{if _ ,_gga =_cb .Copy (_dba ,_ecd );_gga !=nil {return _deg ,_ag .Wrap (_gga ,_cd ,"");
};if _gga =_dba .RasterOperation (_cbg ,_ac ,_eff ,_aaf ,_cb .PixSrcXorDst ,_cbc ,0,0);_gga !=nil {return _deg ,_ag .Wrap (_gga ,_cd ,"");};_bfc =_dba .CountPixels ();if _bfc < _ffe {_bd =_cbg ;_baa =_ac ;_ffe =_bfc ;};};};_deg .X =_bd ;_deg .Y =_baa ;
return _deg ,nil ;};var _dd bool ;type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_d .IntSlice ;TemplateAreas *_d .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_cb .BitmapsArray ;UndilatedTemplates *_cb .Bitmaps ;
DilatedTemplates *_cb .Bitmaps ;TemplatesSize _d .IntsMap ;FgTemplates *_d .NumSlice ;CentroidPoints *_cb .Points ;CentroidPointsTemplates *_cb .Points ;ClassIDs *_d .IntSlice ;ComponentPageNumbers *_d .IntSlice ;PtaUL *_cb .Points ;PtaLL *_cb .Points ;
};func DefaultSettings ()Settings {_fcbb :=&Settings {};_fcbb .SetDefault ();return *_fcbb };func _gbg (_ecdf *Classer ,_degg *_cb .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_degg .Width ,Height :_degg .Height ,Classer :_ecdf };
};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func (_gbb Settings )Validate ()error {const _cae ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";
if _gbb .Thresh < 0.4||_gbb .Thresh > 0.98{return _ag .Error (_cae ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _gbb .WeightFactor < 0.0||_gbb .WeightFactor > 1.0{return _ag .Error (_cae ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _gbb .RankHaus < 0.5||_gbb .RankHaus > 1.0{return _ag .Error (_cae ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _gbb .SizeHaus < 1||_gbb .SizeHaus > 10{return _ag .Error (_cae ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _gbb .Components {case _cb .ComponentConn ,_cb .ComponentCharacters ,_cb .ComponentWords :default:return _ag .Error (_cae ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};func Init (settings Settings )(*Classer ,error ){const _fg ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_ae :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_d .IntsMap {},TemplateAreas :&_d .IntSlice {},ComponentPageNumbers :&_d .IntSlice {},ClassIDs :&_d .IntSlice {},ComponentsNumber :&_d .IntSlice {},CentroidPoints :&_cb .Points {},CentroidPointsTemplates :&_cb .Points {},UndilatedTemplates :&_cb .Bitmaps {},DilatedTemplates :&_cb .Bitmaps {},ClassInstances :&_cb .BitmapsArray {},FgTemplates :&_d .NumSlice {}};
if _e :=_ae .Settings .Validate ();_e !=nil {return nil ,_ag .Wrap (_e ,_fg ,"");};return _ae ,nil ;};func (_daba *Classer )classifyRankHaus (_aeg *_cb .Boxes ,_def *_cb .Bitmaps ,_caf int )error {const _acb ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";
if _aeg ==nil {return _ag .Error (_acb ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _def ==nil {return _ag .Error (_acb ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};_dec :=len (_def .Values );if _dec ==0{return _ag .Error (_acb ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_bee :=_def .CountPixels ();_cca :=_daba .Settings .SizeHaus ;_bgb :=_cb .SelCreateBrick (_cca ,_cca ,_cca /2,_cca /2,_cb .SelHit );
_dbc :=&_cb .Bitmaps {Values :make ([]*_cb .Bitmap ,_dec )};_gb :=&_cb .Bitmaps {Values :make ([]*_cb .Bitmap ,_dec )};var (_bdae ,_fabd ,_dad *_cb .Bitmap ;_agb error ;);for _cgd :=0;_cgd < _dec ;_cgd ++{_bdae ,_agb =_def .GetBitmap (_cgd );if _agb !=nil {return _ag .Wrap (_agb ,_acb ,"");
};_fabd ,_agb =_bdae .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _agb !=nil {return _ag .Wrap (_agb ,_acb ,"");};_dad ,_agb =_cb .Dilate (nil ,_fabd ,_bgb );if _agb !=nil {return _ag .Wrap (_agb ,_acb ,"");};_dbc .Values [_dec ]=_fabd ;
_gb .Values [_dec ]=_dad ;};_eaa ,_agb :=_cb .Centroids (_dbc .Values );if _agb !=nil {return _ag .Wrap (_agb ,_acb ,"");};if _agb =_eaa .Add (_daba .CentroidPoints );_agb !=nil {_g .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");
};if _daba .Settings .RankHaus ==1.0{_agb =_daba .classifyRankHouseOne (_aeg ,_def ,_dbc ,_gb ,_eaa ,_caf );}else {_agb =_daba .classifyRankHouseNonOne (_aeg ,_def ,_dbc ,_gb ,_eaa ,_bee ,_caf );};if _agb !=nil {return _ag .Wrap (_agb ,_acb ,"");};return nil ;
};func (_egc *Classer )getULCorners (_age *_cb .Bitmap ,_ef *_cb .Boxes )error {const _efb ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _age ==nil {return _ag .Error (_efb ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};if _ef ==nil {return _ag .Error (_efb ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _egc .PtaUL ==nil {_egc .PtaUL =&_cb .Points {};};_dab :=len (*_ef );var (_aa ,_ce ,_cab ,_af int ;_daf ,_gea ,_be ,_ceg float32 ;_fa error ;_gd *_c .Rectangle ;
_de *_cb .Bitmap ;_daa _c .Point ;);for _fgc :=0;_fgc < _dab ;_fgc ++{_aa =_egc .BaseIndex +_fgc ;if _daf ,_gea ,_fa =_egc .CentroidPoints .GetGeometry (_aa );_fa !=nil {return _ag .Wrap (_fa ,_efb ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");
};if _ce ,_fa =_egc .ClassIDs .Get (_aa );_fa !=nil {return _ag .Wrap (_fa ,_efb ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _be ,_ceg ,_fa =_egc .CentroidPointsTemplates .GetGeometry (_ce );_fa !=nil {return _ag .Wrap (_fa ,_efb ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");
};_fb :=_be -_daf ;_ebb :=_ceg -_gea ;if _fb >=0{_cab =int (_fb +0.5);}else {_cab =int (_fb -0.5);};if _ebb >=0{_af =int (_ebb +0.5);}else {_af =int (_ebb -0.5);};if _gd ,_fa =_ef .Get (_fgc );_fa !=nil {return _ag .Wrap (_fa ,_efb ,"");};_ad ,_ece :=_gd .Min .X ,_gd .Min .Y ;
_de ,_fa =_egc .UndilatedTemplates .GetBitmap (_ce );if _fa !=nil {return _ag .Wrap (_fa ,_efb ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_daa ,_fa =_dg (_age ,_ad ,_ece ,_cab ,_af ,_de );if _fa !=nil {return _ag .Wrap (_fa ,_efb ,"");};_egc .PtaUL .AddPoint (float32 (_ad -_cab +_daa .X ),float32 (_ece -_af +_daa .Y ));};return nil ;};type similarTemplatesFinder struct{Classer *Classer ;
Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func (_cgdf *similarTemplatesFinder )Next ()int {var (_cee ,_gf ,_fffa ,_abeb int ;_cdfe bool ;_acg *_cb .Bitmap ;_ggb error ;);for {if _cgdf .Index >=25{return -1;};_gf =_cgdf .Width +TwoByTwoWalk [2*_cgdf .Index ];
_cee =_cgdf .Height +TwoByTwoWalk [2*_cgdf .Index +1];if _cee < 1||_gf < 1{_cgdf .Index ++;continue ;};if len (_cgdf .CurrentNumbers )==0{_cgdf .CurrentNumbers ,_cdfe =_cgdf .Classer .TemplatesSize .GetSlice (uint64 (_gf )*uint64 (_cee ));if !_cdfe {_cgdf .Index ++;
continue ;};_cgdf .N =0;};_fffa =len (_cgdf .CurrentNumbers );for ;_cgdf .N < _fffa ;_cgdf .N ++{_abeb =_cgdf .CurrentNumbers [_cgdf .N ];_acg ,_ggb =_cgdf .Classer .DilatedTemplates .GetBitmap (_abeb );if _ggb !=nil {_g .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _acg .Width -2*JbAddedPixels ==_gf &&_acg .Height -2*JbAddedPixels ==_cee {return _abeb ;};};_cgdf .Index ++;_cgdf .CurrentNumbers =nil ;};};const (MaxDiffWidth =2;MaxDiffHeight =2;);func (_gagd *Classer )classifyRankHouseNonOne (_bdaf *_cb .Boxes ,_facb ,_abe ,_efe *_cb .Bitmaps ,_eca *_cb .Points ,_dbdcd *_d .NumSlice ,_cabe int )(_bbfg error ){const _fgae ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_ceb ,_dgf ,_gedd ,_bc float32 ;_fdg ,_dafe ,_gccc int ;_bba ,_dce ,_cbgg ,_aec ,_acc *_cb .Bitmap ;_abf ,_eed bool ;);_cgdc :=_cb .MakePixelSumTab8 ();for _gge :=0;_gge < len (_facb .Values );_gge ++{if _dce ,_bbfg =_abe .GetBitmap (_gge );_bbfg !=nil {return _ag .Wrap (_bbfg ,_fgae ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _fdg ,_bbfg =_dbdcd .GetInt (_gge );_bbfg !=nil {_g .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_gge ,_bbfg );
};if _cbgg ,_bbfg =_efe .GetBitmap (_gge );_bbfg !=nil {return _ag .Wrap (_bbfg ,_fgae ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _ceb ,_dgf ,_bbfg =_eca .GetGeometry (_gge );_bbfg !=nil {return _ag .Wrapf (_bbfg ,_fgae ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_dfa :=len (_gagd .UndilatedTemplates .Values );_abf =false ;_dafa :=_gbg (_gagd ,_dce );for _gccc =_dafa .Next ();_gccc > -1;{if _aec ,_bbfg =_gagd .UndilatedTemplates .GetBitmap (_gccc );_bbfg !=nil {return _ag .Wrap (_bbfg ,_fgae ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _dafe ,_bbfg =_gagd .FgTemplates .GetInt (_gccc );_bbfg !=nil {_g .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_gccc ,_bbfg );
};if _acc ,_bbfg =_gagd .DilatedTemplates .GetBitmap (_gccc );_bbfg !=nil {return _ag .Wrap (_bbfg ,_fgae ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _gedd ,_bc ,_bbfg =_gagd .CentroidPointsTemplates .GetGeometry (_gccc );
_bbfg !=nil {return _ag .Wrap (_bbfg ,_fgae ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_eed ,_bbfg =_cb .RankHausTest (_dce ,_cbgg ,_aec ,_acc ,_ceb -_gedd ,_dgf -_bc ,MaxDiffWidth ,MaxDiffHeight ,_fdg ,_dafe ,float32 (_gagd .Settings .RankHaus ),_cgdc );
if _bbfg !=nil {return _ag .Wrap (_bbfg ,_fgae ,"");};if _eed {_abf =true ;if _bbfg =_gagd .ClassIDs .Add (_gccc );_bbfg !=nil {return _ag .Wrap (_bbfg ,_fgae ,"");};if _bbfg =_gagd .ComponentPageNumbers .Add (_cabe );_bbfg !=nil {return _ag .Wrap (_bbfg ,_fgae ,"");
};if _gagd .Settings .KeepClassInstances {_ebbc ,_gbe :=_gagd .ClassInstances .GetBitmaps (_gccc );if _gbe !=nil {return _ag .Wrap (_gbe ,_fgae ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _bba ,_gbe =_facb .GetBitmap (_gge );_gbe !=nil {return _ag .Wrap (_gbe ,_fgae ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_ebbc .Values =append (_ebbc .Values ,_bba );_cfb ,_gbe :=_bdaf .Get (_gge );if _gbe !=nil {return _ag .Wrap (_gbe ,_fgae ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_ebbc .Boxes =append (_ebbc .Boxes ,_cfb );};break ;};};if !_abf {if _bbfg =_gagd .ClassIDs .Add (_dfa );_bbfg !=nil {return _ag .Wrap (_bbfg ,_fgae ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _bbfg =_gagd .ComponentPageNumbers .Add (_cabe );_bbfg !=nil {return _ag .Wrap (_bbfg ,_fgae ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_cabef :=&_cb .Bitmaps {};_bba =_facb .Values [_gge ];_cabef .AddBitmap (_bba );_bgc ,_bbfd :=_bba .Width ,_bba .Height ;_gagd .TemplatesSize .Add (uint64 (_bgc )*uint64 (_bbfd ),_dfa );_fcg ,_cdf :=_bdaf .Get (_gge );if _cdf !=nil {return _ag .Wrap (_cdf ,_fgae ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_cabef .AddBox (_fcg );_gagd .ClassInstances .AddBitmaps (_cabef );_gagd .CentroidPointsTemplates .AddPoint (_ceb ,_dgf );_gagd .UndilatedTemplates .AddBitmap (_dce );_gagd .DilatedTemplates .AddBitmap (_cbgg );_gagd .FgTemplates .AddInt (_fdg );};};
_gagd .NumberOfClasses =len (_gagd .UndilatedTemplates .Values );return nil ;};func (_gbc *Classer )classifyRankHouseOne (_bbc *_cb .Boxes ,_cac ,_gef ,_dcgb *_cb .Bitmaps ,_aae *_cb .Points ,_aegd int )(_gbf error ){const _bdc ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_gba ,_bgff ,_fdb ,_bae float32 ;_ecb int ;_cfd ,_dda ,_abg ,_dcf ,_dac *_cb .Bitmap ;_ffa ,_fca bool ;);for _fbe :=0;_fbe < len (_cac .Values );_fbe ++{_dda =_gef .Values [_fbe ];_abg =_dcgb .Values [_fbe ];_gba ,_bgff ,_gbf =_aae .GetGeometry (_fbe );
if _gbf !=nil {return _ag .Wrapf (_gbf ,_bdc ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_eba :=len (_gbc .UndilatedTemplates .Values );_ffa =false ;_fgf :=_gbg (_gbc ,_dda );for _ecb =_fgf .Next ();_ecb > -1;{_dcf ,_gbf =_gbc .UndilatedTemplates .GetBitmap (_ecb );
if _gbf !=nil {return _ag .Wrap (_gbf ,_bdc ,"\u0062\u006d\u0033");};_dac ,_gbf =_gbc .DilatedTemplates .GetBitmap (_ecb );if _gbf !=nil {return _ag .Wrap (_gbf ,_bdc ,"\u0062\u006d\u0034");};_fdb ,_bae ,_gbf =_gbc .CentroidPointsTemplates .GetGeometry (_ecb );
if _gbf !=nil {return _ag .Wrap (_gbf ,_bdc ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_fca ,_gbf =_cb .HausTest (_dda ,_abg ,_dcf ,_dac ,_gba -_fdb ,_bgff -_bae ,MaxDiffWidth ,MaxDiffHeight );
if _gbf !=nil {return _ag .Wrap (_gbf ,_bdc ,"");};if _fca {_ffa =true ;if _gbf =_gbc .ClassIDs .Add (_ecb );_gbf !=nil {return _ag .Wrap (_gbf ,_bdc ,"");};if _gbf =_gbc .ComponentPageNumbers .Add (_aegd );_gbf !=nil {return _ag .Wrap (_gbf ,_bdc ,"");
};if _gbc .Settings .KeepClassInstances {_dbad ,_fcb :=_gbc .ClassInstances .GetBitmaps (_ecb );if _fcb !=nil {return _ag .Wrap (_fcb ,_bdc ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_cfd ,_fcb =_cac .GetBitmap (_fbe );if _fcb !=nil {return _ag .Wrap (_fcb ,_bdc ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_dbad .AddBitmap (_cfd );_bff ,_fcb :=_bbc .Get (_fbe );if _fcb !=nil {return _ag .Wrap (_fcb ,_bdc ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_dbad .AddBox (_bff );};break ;};};if !_ffa {if _gbf =_gbc .ClassIDs .Add (_eba );_gbf !=nil {return _ag .Wrap (_gbf ,_bdc ,"");
};if _gbf =_gbc .ComponentPageNumbers .Add (_aegd );_gbf !=nil {return _ag .Wrap (_gbf ,_bdc ,"");};_cgc :=&_cb .Bitmaps {};_cfd ,_gbf =_cac .GetBitmap (_fbe );if _gbf !=nil {return _ag .Wrap (_gbf ,_bdc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cgc .Values =append (_cgc .Values ,_cfd );
_dae ,_fgg :=_cfd .Width ,_cfd .Height ;_gbc .TemplatesSize .Add (uint64 (_fgg )*uint64 (_dae ),_eba );_ccgc ,_ceac :=_bbc .Get (_fbe );if _ceac !=nil {return _ag .Wrap (_ceac ,_bdc ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cgc .AddBox (_ccgc );_gbc .ClassInstances .AddBitmaps (_cgc );
_gbc .CentroidPointsTemplates .AddPoint (_gba ,_bgff );_gbc .UndilatedTemplates .AddBitmap (_dda );_gbc .DilatedTemplates .AddBitmap (_abg );};};return nil ;};func (_eb *Classer )ComputeLLCorners ()(_fga error ){const _db ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _eb .PtaUL ==nil {return _ag .Error (_db ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_ca :=len (*_eb .PtaUL );_eb .PtaLL =&_cb .Points {};var (_bf ,_cc float32 ;_gg ,_da int ;
_bfa *_cb .Bitmap ;);for _df :=0;_df < _ca ;_df ++{_bf ,_cc ,_fga =_eb .PtaUL .GetGeometry (_df );if _fga !=nil {_g .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fga );
return _ag .Wrap (_fga ,_db ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_gg ,_fga =_eb .ClassIDs .Get (_df );if _fga !=nil {_g .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_fga );
return _ag .Wrap (_fga ,_db ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_bfa ,_fga =_eb .UndilatedTemplates .GetBitmap (_gg );if _fga !=nil {_g .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_fga );
return _ag .Wrap (_fga ,_db ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_da =_bfa .Height ;_eb .PtaLL .AddPoint (_bf ,_cc +float32 (_da ));};return nil ;};type Settings struct{MaxCompWidth int ;
MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _cb .Component ;Method Method ;};const JbAddedPixels =6;func (_bbcf *Settings )SetDefault (){if _bbcf .MaxCompWidth ==0{switch _bbcf .Components {case _cb .ComponentConn :_bbcf .MaxCompWidth =MaxConnCompWidth ;
case _cb .ComponentCharacters :_bbcf .MaxCompWidth =MaxCharCompWidth ;case _cb .ComponentWords :_bbcf .MaxCompWidth =MaxWordCompWidth ;};};if _bbcf .MaxCompHeight ==0{_bbcf .MaxCompHeight =MaxCompHeight ;};if _bbcf .Thresh ==0.0{_bbcf .Thresh =0.9;};if _bbcf .WeightFactor ==0.0{_bbcf .WeightFactor =0.75;
};if _bbcf .RankHaus ==0.0{_bbcf .RankHaus =0.97;};if _bbcf .SizeHaus ==0{_bbcf .SizeHaus =2;};};func (_dagf *Classer )classifyCorrelation (_deb *_cb .Boxes ,_fe *_cb .Bitmaps ,_dbd int )error {const _ee ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";
if _deb ==nil {return _ag .Error (_ee ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _fe ==nil {return _ag .Error (_ee ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_gc :=len (_fe .Values );if _gc ==0{_g .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_aad ,_dgd *_cb .Bitmap ;_fd error ;);_bdd :=&_cb .Bitmaps {Values :make ([]*_cb .Bitmap ,_gc )};for _aadb ,_fcf :=range _fe .Values {_dgd ,_fd =_fcf .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _fd !=nil {return _ag .Wrap (_fd ,_ee ,"");
};_bdd .Values [_aadb ]=_dgd ;};_fba :=_dagf .FgTemplates ;_fad :=_cb .MakePixelSumTab8 ();_cbd :=_cb .MakePixelCentroidTab8 ();_bda :=make ([]int ,_gc );_aea :=make ([][]int ,_gc );_gag :=_cb .Points (make ([]_cb .Point ,_gc ));_gcg :=&_gag ;var (_ddb ,_faa int ;
_ged ,_bgg ,_gcb int ;_bbf ,_bdda int ;_ccc byte ;);for _ffde ,_bdab :=range _bdd .Values {_aea [_ffde ]=make ([]int ,_bdab .Height );_ddb =0;_faa =0;_bgg =(_bdab .Height -1)*_bdab .RowStride ;_ged =0;for _bdda =_bdab .Height -1;_bdda >=0;_bdda ,_bgg =_bdda -1,_bgg -_bdab .RowStride {_aea [_ffde ][_bdda ]=_ged ;
_gcb =0;for _bbf =0;_bbf < _bdab .RowStride ;_bbf ++{_ccc =_bdab .Data [_bgg +_bbf ];_gcb +=_fad [_ccc ];_ddb +=_cbd [_ccc ]+_bbf *8*_fad [_ccc ];};_ged +=_gcb ;_faa +=_gcb *_bdda ;};_bda [_ffde ]=_ged ;if _ged > 0{(*_gcg )[_ffde ]=_cb .Point {X :float32 (_ddb )/float32 (_ged ),Y :float32 (_faa )/float32 (_ged )};
}else {(*_gcg )[_ffde ]=_cb .Point {X :float32 (_bdab .Width )/float32 (2),Y :float32 (_bdab .Height )/float32 (2)};};};if _fd =_dagf .CentroidPoints .Add (_gcg );_fd !=nil {return _ag .Wrap (_fd ,_ee ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");
};var (_aadg ,_eeg ,_fbg int ;_gcc float64 ;_bfb ,_ccg ,_gaf ,_cgeb float32 ;_fac ,_bbg _cb .Point ;_dfc bool ;_geg *similarTemplatesFinder ;_gda int ;_ea *_cb .Bitmap ;_dbdc *_c .Rectangle ;_cf *_cb .Bitmaps ;);for _gda ,_dgd =range _bdd .Values {_eeg =_bda [_gda ];
if _bfb ,_ccg ,_fd =_gcg .GetGeometry (_gda );_fd !=nil {return _ag .Wrap (_fd ,_ee ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_dfc =false ;_cec :=len (_dagf .UndilatedTemplates .Values );_geg =_gbg (_dagf ,_dgd );for _cea :=_geg .Next ();_cea > -1;{if _ea ,_fd =_dagf .UndilatedTemplates .GetBitmap (_cea );
_fd !=nil {return _ag .Wrap (_fd ,_ee ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _fbg ,_fd =_fba .GetInt (_cea );_fd !=nil {_g .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fd );
};if _gaf ,_cgeb ,_fd =_dagf .CentroidPointsTemplates .GetGeometry (_cea );_fd !=nil {return _ag .Wrap (_fd ,_ee ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _dagf .Settings .WeightFactor > 0.0{if _aadg ,_fd =_dagf .TemplateAreas .Get (_cea );_fd !=nil {_g .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_fd );
};_gcc =_dagf .Settings .Thresh +(1.0-_dagf .Settings .Thresh )*_dagf .Settings .WeightFactor *float64 (_fbg )/float64 (_aadg );}else {_gcc =_dagf .Settings .Thresh ;};_fff ,_bgf :=_cb .CorrelationScoreThresholded (_dgd ,_ea ,_eeg ,_fbg ,_fac .X -_bbg .X ,_fac .Y -_bbg .Y ,MaxDiffWidth ,MaxDiffHeight ,_fad ,_aea [_gda ],float32 (_gcc ));
if _bgf !=nil {return _ag .Wrap (_bgf ,_ee ,"");};if _dd {var (_eege ,_fab float64 ;_dcgd ,_dge int ;);_eege ,_bgf =_cb .CorrelationScore (_dgd ,_ea ,_eeg ,_fbg ,_bfb -_gaf ,_ccg -_cgeb ,MaxDiffWidth ,MaxDiffHeight ,_fad );if _bgf !=nil {return _ag .Wrap (_bgf ,_ee ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_fab ,_bgf =_cb .CorrelationScoreSimple (_dgd ,_ea ,_eeg ,_fbg ,_bfb -_gaf ,_ccg -_cgeb ,MaxDiffWidth ,MaxDiffHeight ,_fad );if _bgf !=nil {return _ag .Wrap (_bgf ,_ee ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_dcgd =int (_a .Sqrt (_eege *float64 (_eeg )*float64 (_fbg )));_dge =int (_a .Sqrt (_fab *float64 (_eeg )*float64 (_fbg )));if (_eege >=_gcc )!=(_fab >=_gcc ){return _ag .Errorf (_ee ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_dcgd ,_eege ,_eege >=_gcc ,_dge ,_fab ,_fab >=_gcc ,_eege -_fab );
};if _eege >=_gcc !=_fff {return _ag .Errorf (_ee ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_eege ,_eege *float64 (_eeg )*float64 (_fbg ),_dcgd ,_gcc ,float32 (_gcc )*float32 (_eeg )*float32 (_fbg ),_fff );
};};if _fff {_dfc =true ;if _bgf =_dagf .ClassIDs .Add (_cea );_bgf !=nil {return _ag .Wrap (_bgf ,_ee ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _bgf =_dagf .ComponentPageNumbers .Add (_dbd );_bgf !=nil {return _ag .Wrap (_bgf ,_ee ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _dagf .Settings .KeepClassInstances {if _aad ,_bgf =_fe .GetBitmap (_gda );_bgf !=nil {return _ag .Wrap (_bgf ,_ee ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _cf ,_bgf =_dagf .ClassInstances .GetBitmaps (_cea );
_bgf !=nil {return _ag .Wrap (_bgf ,_ee ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_cf .AddBitmap (_aad );if _dbdc ,_bgf =_deb .Get (_gda );_bgf !=nil {return _ag .Wrap (_bgf ,_ee ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_cf .AddBox (_dbdc );};break ;};};if !_dfc {if _fd =_dagf .ClassIDs .Add (_cec );_fd !=nil {return _ag .Wrap (_fd ,_ee ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _fd =_dagf .ComponentPageNumbers .Add (_dbd );_fd !=nil {return _ag .Wrap (_fd ,_ee ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_cf =&_cb .Bitmaps {};if _aad ,_fd =_fe .GetBitmap (_gda );_fd !=nil {return _ag .Wrap (_fd ,_ee ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cf .AddBitmap (_aad );_dcbd ,_bfd :=_aad .Width ,_aad .Height ;_fbd :=uint64 (_bfd )*uint64 (_dcbd );_dagf .TemplatesSize .Add (_fbd ,_cec );
if _dbdc ,_fd =_deb .Get (_gda );_fd !=nil {return _ag .Wrap (_fd ,_ee ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cf .AddBox (_dbdc );_dagf .ClassInstances .AddBitmaps (_cf );_dagf .CentroidPointsTemplates .AddPoint (_bfb ,_ccg );_dagf .FgTemplates .AddInt (_eeg );
_dagf .UndilatedTemplates .AddBitmap (_aad );_aadg =(_dgd .Width -2*JbAddedPixels )*(_dgd .Height -2*JbAddedPixels );if _fd =_dagf .TemplateAreas .Add (_aadg );_fd !=nil {return _ag .Wrap (_fd ,_ee ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_dagf .NumberOfClasses =len (_dagf .UndilatedTemplates .Values );
return nil ;};const (RankHaus Method =iota ;Correlation ;);const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);