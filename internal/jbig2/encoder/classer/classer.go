//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_c "github.com/unidoc/unipdf/v3/common";_g "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_e "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_fg "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_f "image";_ff "math";);const (MaxDiffWidth =2;MaxDiffHeight =2;);func _bag (_ebab *Classer ,_dgd *_e .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_dgd .Width ,Height :_dgd .Height ,Classer :_ebab };};func (_dbd *Classer )getULCorners (_cf *_e .Bitmap ,_da *_e .Boxes )error {const _gcc ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _cf ==nil {return _fg .Error (_gcc ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _da ==nil {return _fg .Error (_gcc ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _dbd .PtaUL ==nil {_dbd .PtaUL =&_e .Points {};};_dc :=len (*_da );var (_cb ,_bg ,_bcd ,_ad int ;_eec ,_df ,_af ,_dfe float32 ;_dbc error ;_gf *_f .Rectangle ;_cbb *_e .Bitmap ;_cbd _f .Point ;);for _fe :=0;_fe < _dc ;_fe ++{_cb =_dbd .BaseIndex +_fe ;if _eec ,_df ,_dbc =_dbd .CentroidPoints .GetGeometry (_cb );_dbc !=nil {return _fg .Wrap (_dbc ,_gcc ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _bg ,_dbc =_dbd .ClassIDs .Get (_cb );_dbc !=nil {return _fg .Wrap (_dbc ,_gcc ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _af ,_dfe ,_dbc =_dbd .CentroidPointsTemplates .GetGeometry (_bg );_dbc !=nil {return _fg .Wrap (_dbc ,_gcc ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_ed :=_af -_eec ;_ffa :=_dfe -_df ;if _ed >=0{_bcd =int (_ed +0.5);}else {_bcd =int (_ed -0.5);};if _ffa >=0{_ad =int (_ffa +0.5);}else {_ad =int (_ffa -0.5);};if _gf ,_dbc =_da .Get (_fe );_dbc !=nil {return _fg .Wrap (_dbc ,_gcc ,"");};_aa ,_ece :=_gf .Min .X ,_gf .Min .Y ;_cbb ,_dbc =_dbd .UndilatedTemplates .GetBitmap (_bg );if _dbc !=nil {return _fg .Wrap (_dbc ,_gcc ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");};_cbd ,_dbc =_eb (_cf ,_aa ,_ece ,_bcd ,_ad ,_cbb );if _dbc !=nil {return _fg .Wrap (_dbc ,_gcc ,"");};_dbd .PtaUL .AddPoint (float32 (_aa -_bcd +_cbd .X ),float32 (_ece -_ad +_cbd .Y ));};return nil ;};func (_aefe Settings )Validate ()error {const _aca ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _aefe .Thresh < 0.4||_aefe .Thresh > 0.98{return _fg .Error (_aca ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");};if _aefe .WeightFactor < 0.0||_aefe .WeightFactor > 1.0{return _fg .Error (_aca ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _aefe .RankHaus < 0.5||_aefe .RankHaus > 1.0{return _fg .Error (_aca ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _aefe .SizeHaus < 1||_aefe .SizeHaus > 10{return _fg .Error (_aca ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");};switch _aefe .Components {case _e .ComponentConn ,_e .ComponentCharacters ,_e .ComponentWords :default:return _fg .Error (_aca ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");};return nil ;};type Method int ;func (_cefg *Settings )SetDefault (){if _cefg .MaxCompWidth ==0{switch _cefg .Components {case _e .ComponentConn :_cefg .MaxCompWidth =MaxConnCompWidth ;case _e .ComponentCharacters :_cefg .MaxCompWidth =MaxCharCompWidth ;case _e .ComponentWords :_cefg .MaxCompWidth =MaxWordCompWidth ;};};if _cefg .MaxCompHeight ==0{_cefg .MaxCompHeight =MaxCompHeight ;};if _cefg .Thresh ==0.0{_cefg .Thresh =0.9;};if _cefg .WeightFactor ==0.0{_cefg .WeightFactor =0.75;};if _cefg .RankHaus ==0.0{_cefg .RankHaus =0.97;};if _cefg .SizeHaus ==0{_cefg .SizeHaus =2;};};func DefaultSettings ()Settings {_eab :=&Settings {};_eab .SetDefault ();return *_eab };func (_ba *Classer )ComputeLLCorners ()(_ffb error ){const _cd ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _ba .PtaUL ==nil {return _fg .Error (_cd ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_ac :=len (*_ba .PtaUL );_ba .PtaLL =&_e .Points {};var (_fdf ,_bc float32 ;_fb ,_bb int ;_ae *_e .Bitmap ;);for _cdb :=0;_cdb < _ac ;_cdb ++{_fdf ,_bc ,_ffb =_ba .PtaUL .GetGeometry (_cdb );if _ffb !=nil {_c .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ffb );return _fg .Wrap (_ffb ,_cd ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_fb ,_ffb =_ba .ClassIDs .Get (_cdb );if _ffb !=nil {_c .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_ffb );return _fg .Wrap (_ffb ,_cd ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_ae ,_ffb =_ba .UndilatedTemplates .GetBitmap (_fb );if _ffb !=nil {_c .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ffb );return _fg .Wrap (_ffb ,_cd ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_bb =_ae .Height ;_ba .PtaLL .AddPoint (_fdf ,_bc +float32 (_bb ));};return nil ;};func (_ce *Classer )AddPage (inputPage *_e .Bitmap ,pageNumber int ,method Method )(_ee error ){const _a ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_ce .Widths [pageNumber ]=inputPage .Width ;_ce .Heights [pageNumber ]=inputPage .Height ;if _ee =_ce .verifyMethod (method );_ee !=nil {return _fg .Wrap (_ee ,_a ,"");};_de ,_fd ,_ee :=inputPage .GetComponents (_ce .Settings .Components ,_ce .Settings .MaxCompWidth ,_ce .Settings .MaxCompHeight );if _ee !=nil {return _fg .Wrap (_ee ,_a ,"");};_c .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_de );if _ee =_ce .addPageComponents (inputPage ,_fd ,_de ,pageNumber ,method );_ee !=nil {return _fg .Wrap (_ee ,_a ,"");};return nil ;};func (_ef *Classer )classifyRankHouseOne (_adb *_e .Boxes ,_bcf ,_fba ,_bbb *_e .Bitmaps ,_ecd *_e .Points ,_bdfg int )(_ggf error ){const _cda ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_fcff ,_fea ,_ffcc ,_ebe float32 ;_aeg int ;_eee ,_bca ,_gece ,_edc ,_ecec *_e .Bitmap ;_add ,_ege bool ;);for _eff :=0;_eff < len (_bcf .Values );_eff ++{_bca =_fba .Values [_eff ];_gece =_bbb .Values [_eff ];_fcff ,_fea ,_ggf =_ecd .GetGeometry (_eff );if _ggf !=nil {return _fg .Wrapf (_ggf ,_cda ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_bcfc :=len (_ef .UndilatedTemplates .Values );_add =false ;_gac :=_bag (_ef ,_bca );for _aeg =_gac .Next ();_aeg > -1;{_edc ,_ggf =_ef .UndilatedTemplates .GetBitmap (_aeg );if _ggf !=nil {return _fg .Wrap (_ggf ,_cda ,"\u0062\u006d\u0033");};_ecec ,_ggf =_ef .DilatedTemplates .GetBitmap (_aeg );if _ggf !=nil {return _fg .Wrap (_ggf ,_cda ,"\u0062\u006d\u0034");};_ffcc ,_ebe ,_ggf =_ef .CentroidPointsTemplates .GetGeometry (_aeg );if _ggf !=nil {return _fg .Wrap (_ggf ,_cda ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_ege ,_ggf =_e .HausTest (_bca ,_gece ,_edc ,_ecec ,_fcff -_ffcc ,_fea -_ebe ,MaxDiffWidth ,MaxDiffHeight );if _ggf !=nil {return _fg .Wrap (_ggf ,_cda ,"");};if _ege {_add =true ;if _ggf =_ef .ClassIDs .Add (_aeg );_ggf !=nil {return _fg .Wrap (_ggf ,_cda ,"");};if _ggf =_ef .ComponentPageNumbers .Add (_bdfg );_ggf !=nil {return _fg .Wrap (_ggf ,_cda ,"");};if _ef .Settings .KeepClassInstances {_fbc ,_fff :=_ef .ClassInstances .GetBitmaps (_aeg );if _fff !=nil {return _fg .Wrap (_fff ,_cda ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_eee ,_fff =_bcf .GetBitmap (_eff );if _fff !=nil {return _fg .Wrap (_fff ,_cda ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_fbc .AddBitmap (_eee );_gcb ,_fff :=_adb .Get (_eff );if _fff !=nil {return _fg .Wrap (_fff ,_cda ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_fbc .AddBox (_gcb );};break ;};};if !_add {if _ggf =_ef .ClassIDs .Add (_bcfc );_ggf !=nil {return _fg .Wrap (_ggf ,_cda ,"");};if _ggf =_ef .ComponentPageNumbers .Add (_bdfg );_ggf !=nil {return _fg .Wrap (_ggf ,_cda ,"");};_cad :=&_e .Bitmaps {};_eee ,_ggf =_bcf .GetBitmap (_eff );if _ggf !=nil {return _fg .Wrap (_ggf ,_cda ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cad .Values =append (_cad .Values ,_eee );_dede ,_cdc :=_eee .Width ,_eee .Height ;_ef .TemplatesSize .Add (uint64 (_cdc )*uint64 (_dede ),_bcfc );_fef ,_gbc :=_adb .Get (_eff );if _gbc !=nil {return _fg .Wrap (_gbc ,_cda ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cad .AddBox (_fef );_ef .ClassInstances .AddBitmaps (_cad );_ef .CentroidPointsTemplates .AddPoint (_fcff ,_fea );_ef .UndilatedTemplates .AddBitmap (_bca );_ef .DilatedTemplates .AddBitmap (_gece );};};return nil ;};const JbAddedPixels =6;func (_eecg *Classer )verifyMethod (_bgf Method )error {if _bgf !=RankHaus &&_bgf !=Correlation {return _fg .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");};return nil ;};var _fcdc bool ;var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func (_bf *Classer )classifyCorrelation (_bee *_e .Boxes ,_ca *_e .Bitmaps ,_aec int )error {const _ceg ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";if _bee ==nil {return _fg .Error (_ceg ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");};if _ca ==nil {return _fg .Error (_ceg ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_dad :=len (_ca .Values );if _dad ==0{_c .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");return nil ;};var (_eba ,_dg *_e .Bitmap ;_fbe error ;);_eda :=&_e .Bitmaps {Values :make ([]*_e .Bitmap ,_dad )};for _dce ,_edd :=range _ca .Values {_dg ,_fbe =_edd .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _fbe !=nil {return _fg .Wrap (_fbe ,_ceg ,"");};_eda .Values [_dce ]=_dg ;};_gec :=_bf .FgTemplates ;_ecc :=_e .MakePixelSumTab8 ();_bgbf :=_e .MakePixelCentroidTab8 ();_fcf :=make ([]int ,_dad );_dcd :=make ([][]int ,_dad );_fed :=_e .Points (make ([]_e .Point ,_dad ));_bbg :=&_fed ;var (_bfd ,_dfa int ;_edb ,_ebfe ,_fcc int ;_aeb ,_edg int ;_ffaa byte ;);for _gd ,_aef :=range _eda .Values {_dcd [_gd ]=make ([]int ,_aef .Height );_bfd =0;_dfa =0;_ebfe =(_aef .Height -1)*_aef .RowStride ;_edb =0;for _edg =_aef .Height -1;_edg >=0;_edg ,_ebfe =_edg -1,_ebfe -_aef .RowStride {_dcd [_gd ][_edg ]=_edb ;_fcc =0;for _aeb =0;_aeb < _aef .RowStride ;_aeb ++{_ffaa =_aef .Data [_ebfe +_aeb ];_fcc +=_ecc [_ffaa ];_bfd +=_bgbf [_ffaa ]+_aeb *8*_ecc [_ffaa ];};_edb +=_fcc ;_dfa +=_fcc *_edg ;};_fcf [_gd ]=_edb ;if _edb > 0{(*_bbg )[_gd ]=_e .Point {X :float32 (_bfd )/float32 (_edb ),Y :float32 (_dfa )/float32 (_edb )};}else {(*_bbg )[_gd ]=_e .Point {X :float32 (_aef .Width )/float32 (2),Y :float32 (_aef .Height )/float32 (2)};};};if _fbe =_bf .CentroidPoints .Add (_bbg );_fbe !=nil {return _fg .Wrap (_fbe ,_ceg ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_aba ,_dd ,_bge int ;_bef float64 ;_dfg ,_cg ,_eef ,_gff float32 ;_fdd ,_dfab _e .Point ;_ecg bool ;_dbdf *similarTemplatesFinder ;_acc int ;_edga *_e .Bitmap ;_daa *_f .Rectangle ;_acd *_e .Bitmaps ;);for _acc ,_dg =range _eda .Values {_dd =_fcf [_acc ];if _dfg ,_cg ,_fbe =_bbg .GetGeometry (_acc );_fbe !=nil {return _fg .Wrap (_fbe ,_ceg ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_ecg =false ;_gdd :=len (_bf .UndilatedTemplates .Values );_dbdf =_bag (_bf ,_dg );for _bafc :=_dbdf .Next ();_bafc > -1;{if _edga ,_fbe =_bf .UndilatedTemplates .GetBitmap (_bafc );_fbe !=nil {return _fg .Wrap (_fbe ,_ceg ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _bge ,_fbe =_gec .GetInt (_bafc );_fbe !=nil {_c .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fbe );};if _eef ,_gff ,_fbe =_bf .CentroidPointsTemplates .GetGeometry (_bafc );_fbe !=nil {return _fg .Wrap (_fbe ,_ceg ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");};if _bf .Settings .WeightFactor > 0.0{if _aba ,_fbe =_bf .TemplateAreas .Get (_bafc );_fbe !=nil {_c .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_fbe );};_bef =_bf .Settings .Thresh +(1.0-_bf .Settings .Thresh )*_bf .Settings .WeightFactor *float64 (_bge )/float64 (_aba );}else {_bef =_bf .Settings .Thresh ;};_bfc ,_cfg :=_e .CorrelationScoreThresholded (_dg ,_edga ,_dd ,_bge ,_fdd .X -_dfab .X ,_fdd .Y -_dfab .Y ,MaxDiffWidth ,MaxDiffHeight ,_ecc ,_dcd [_acc ],float32 (_bef ));if _cfg !=nil {return _fg .Wrap (_cfg ,_ceg ,"");};if _fcdc {var (_dgf ,_fcdcg float64 ;_cfc ,_ecgf int ;);_dgf ,_cfg =_e .CorrelationScore (_dg ,_edga ,_dd ,_bge ,_dfg -_eef ,_cg -_gff ,MaxDiffWidth ,MaxDiffHeight ,_ecc );if _cfg !=nil {return _fg .Wrap (_cfg ,_ceg ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_fcdcg ,_cfg =_e .CorrelationScoreSimple (_dg ,_edga ,_dd ,_bge ,_dfg -_eef ,_cg -_gff ,MaxDiffWidth ,MaxDiffHeight ,_ecc );if _cfg !=nil {return _fg .Wrap (_cfg ,_ceg ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_cfc =int (_ff .Sqrt (_dgf *float64 (_dd )*float64 (_bge )));_ecgf =int (_ff .Sqrt (_fcdcg *float64 (_dd )*float64 (_bge )));if (_dgf >=_bef )!=(_fcdcg >=_bef ){return _fg .Errorf (_ceg ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_cfc ,_dgf ,_dgf >=_bef ,_ecgf ,_fcdcg ,_fcdcg >=_bef ,_dgf -_fcdcg );};if _dgf >=_bef !=_bfc {return _fg .Errorf (_ceg ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_dgf ,_dgf *float64 (_dd )*float64 (_bge ),_cfc ,_bef ,float32 (_bef )*float32 (_dd )*float32 (_bge ),_bfc );};};if _bfc {_ecg =true ;if _cfg =_bf .ClassIDs .Add (_bafc );_cfg !=nil {return _fg .Wrap (_cfg ,_ceg ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _cfg =_bf .ComponentPageNumbers .Add (_aec );_cfg !=nil {return _fg .Wrap (_cfg ,_ceg ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _bf .Settings .KeepClassInstances {if _eba ,_cfg =_ca .GetBitmap (_acc );_cfg !=nil {return _fg .Wrap (_cfg ,_ceg ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _acd ,_cfg =_bf .ClassInstances .GetBitmaps (_bafc );_cfg !=nil {return _fg .Wrap (_cfg ,_ceg ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_acd .AddBitmap (_eba );if _daa ,_cfg =_bee .Get (_acc );_cfg !=nil {return _fg .Wrap (_cfg ,_ceg ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");};_acd .AddBox (_daa );};break ;};};if !_ecg {if _fbe =_bf .ClassIDs .Add (_gdd );_fbe !=nil {return _fg .Wrap (_fbe ,_ceg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _fbe =_bf .ComponentPageNumbers .Add (_aec );_fbe !=nil {return _fg .Wrap (_fbe ,_ceg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_acd =&_e .Bitmaps {};if _eba ,_fbe =_ca .GetBitmap (_acc );_fbe !=nil {return _fg .Wrap (_fbe ,_ceg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_acd .AddBitmap (_eba );_gb ,_cde :=_eba .Width ,_eba .Height ;_bbe :=uint64 (_cde )*uint64 (_gb );_bf .TemplatesSize .Add (_bbe ,_gdd );if _daa ,_fbe =_bee .Get (_acc );_fbe !=nil {return _fg .Wrap (_fbe ,_ceg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_acd .AddBox (_daa );_bf .ClassInstances .AddBitmaps (_acd );_bf .CentroidPointsTemplates .AddPoint (_dfg ,_cg );_bf .FgTemplates .AddInt (_dd );_bf .UndilatedTemplates .AddBitmap (_eba );_aba =(_dg .Width -2*JbAddedPixels )*(_dg .Height -2*JbAddedPixels );if _fbe =_bf .TemplateAreas .Add (_aba );_fbe !=nil {return _fg .Wrap (_fbe ,_ceg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_bf .NumberOfClasses =len (_bf .UndilatedTemplates .Values );return nil ;};func (_dge *Classer )classifyRankHaus (_fca *_e .Boxes ,_fcaa *_e .Bitmaps ,_cff int )error {const _bcc ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _fca ==nil {return _fg .Error (_bcc ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _fcaa ==nil {return _fg .Error (_bcc ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_gab :=len (_fcaa .Values );if _gab ==0{return _fg .Error (_bcc ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_eeca :=_fcaa .CountPixels ();_ecfa :=_dge .Settings .SizeHaus ;_fga :=_e .SelCreateBrick (_ecfa ,_ecfa ,_ecfa /2,_ecfa /2,_e .SelHit );_cdf :=&_e .Bitmaps {Values :make ([]*_e .Bitmap ,_gab )};_ag :=&_e .Bitmaps {Values :make ([]*_e .Bitmap ,_gab )};var (_bbd ,_ded ,_bdf *_e .Bitmap ;_baa error ;);for _dba :=0;_dba < _gab ;_dba ++{_bbd ,_baa =_fcaa .GetBitmap (_dba );if _baa !=nil {return _fg .Wrap (_baa ,_bcc ,"");};_ded ,_baa =_bbd .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _baa !=nil {return _fg .Wrap (_baa ,_bcc ,"");};_bdf ,_baa =_e .Dilate (nil ,_ded ,_fga );if _baa !=nil {return _fg .Wrap (_baa ,_bcc ,"");};_cdf .Values [_gab ]=_ded ;_ag .Values [_gab ]=_bdf ;};_bfb ,_baa :=_e .Centroids (_cdf .Values );if _baa !=nil {return _fg .Wrap (_baa ,_bcc ,"");};if _baa =_bfb .Add (_dge .CentroidPoints );_baa !=nil {_c .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _dge .Settings .RankHaus ==1.0{_baa =_dge .classifyRankHouseOne (_fca ,_fcaa ,_cdf ,_ag ,_bfb ,_cff );}else {_baa =_dge .classifyRankHouseNonOne (_fca ,_fcaa ,_cdf ,_ag ,_bfb ,_eeca ,_cff );};if _baa !=nil {return _fg .Wrap (_baa ,_bcc ,"");};return nil ;};func (_fdfb *Classer )classifyRankHouseNonOne (_ggd *_e .Boxes ,_cffd ,_ccc ,_bba *_e .Bitmaps ,_bad *_e .Points ,_dfb *_g .NumSlice ,_bdg int )(_fec error ){const _edeg ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_ddd ,_ega ,_fa ,_adf float32 ;_gbcb ,_fdg ,_fedc int ;_bafe ,_bdfgf ,_gfa ,_ffccc ,_gca *_e .Bitmap ;_cba ,_bed bool ;);_bda :=_e .MakePixelSumTab8 ();for _efe :=0;_efe < len (_cffd .Values );_efe ++{if _bdfgf ,_fec =_ccc .GetBitmap (_efe );_fec !=nil {return _fg .Wrap (_fec ,_edeg ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _gbcb ,_fec =_dfb .GetInt (_efe );_fec !=nil {_c .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_efe ,_fec );};if _gfa ,_fec =_bba .GetBitmap (_efe );_fec !=nil {return _fg .Wrap (_fec ,_edeg ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _ddd ,_ega ,_fec =_bad .GetGeometry (_efe );_fec !=nil {return _fg .Wrapf (_fec ,_edeg ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");};_egc :=len (_fdfb .UndilatedTemplates .Values );_cba =false ;_dcc :=_bag (_fdfb ,_bdfgf );for _fedc =_dcc .Next ();_fedc > -1;{if _ffccc ,_fec =_fdfb .UndilatedTemplates .GetBitmap (_fedc );_fec !=nil {return _fg .Wrap (_fec ,_edeg ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _fdg ,_fec =_fdfb .FgTemplates .GetInt (_fedc );_fec !=nil {_c .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_fedc ,_fec );};if _gca ,_fec =_fdfb .DilatedTemplates .GetBitmap (_fedc );_fec !=nil {return _fg .Wrap (_fec ,_edeg ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _fa ,_adf ,_fec =_fdfb .CentroidPointsTemplates .GetGeometry (_fedc );_fec !=nil {return _fg .Wrap (_fec ,_edeg ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_bed ,_fec =_e .RankHausTest (_bdfgf ,_gfa ,_ffccc ,_gca ,_ddd -_fa ,_ega -_adf ,MaxDiffWidth ,MaxDiffHeight ,_gbcb ,_fdg ,float32 (_fdfb .Settings .RankHaus ),_bda );if _fec !=nil {return _fg .Wrap (_fec ,_edeg ,"");};if _bed {_cba =true ;if _fec =_fdfb .ClassIDs .Add (_fedc );_fec !=nil {return _fg .Wrap (_fec ,_edeg ,"");};if _fec =_fdfb .ComponentPageNumbers .Add (_bdg );_fec !=nil {return _fg .Wrap (_fec ,_edeg ,"");};if _fdfb .Settings .KeepClassInstances {_acb ,_bdff :=_fdfb .ClassInstances .GetBitmaps (_fedc );if _bdff !=nil {return _fg .Wrap (_bdff ,_edeg ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");};if _bafe ,_bdff =_cffd .GetBitmap (_efe );_bdff !=nil {return _fg .Wrap (_bdff ,_edeg ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_acb .Values =append (_acb .Values ,_bafe );_gfb ,_bdff :=_ggd .Get (_efe );if _bdff !=nil {return _fg .Wrap (_bdff ,_edeg ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};_acb .Boxes =append (_acb .Boxes ,_gfb );};break ;};};if !_cba {if _fec =_fdfb .ClassIDs .Add (_egc );_fec !=nil {return _fg .Wrap (_fec ,_edeg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _fec =_fdfb .ComponentPageNumbers .Add (_bdg );_fec !=nil {return _fg .Wrap (_fec ,_edeg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cdaa :=&_e .Bitmaps {};_bafe =_cffd .Values [_efe ];_cdaa .AddBitmap (_bafe );_egg ,_ecfe :=_bafe .Width ,_bafe .Height ;_fdfb .TemplatesSize .Add (uint64 (_egg )*uint64 (_ecfe ),_egc );_cccc ,_daf :=_ggd .Get (_efe );if _daf !=nil {return _fg .Wrap (_daf ,_edeg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cdaa .AddBox (_cccc );_fdfb .ClassInstances .AddBitmaps (_cdaa );_fdfb .CentroidPointsTemplates .AddPoint (_ddd ,_ega );_fdfb .UndilatedTemplates .AddBitmap (_bdfgf );_fdfb .DilatedTemplates .AddBitmap (_gfa );_fdfb .FgTemplates .AddInt (_gbcb );};};_fdfb .NumberOfClasses =len (_fdfb .UndilatedTemplates .Values );return nil ;};func (_cae *similarTemplatesFinder )Next ()int {var (_eeb ,_gdc ,_gee ,_ggb int ;_dgg bool ;_abe *_e .Bitmap ;_cbe error ;);for {if _cae .Index >=25{return -1;};_gdc =_cae .Width +TwoByTwoWalk [2*_cae .Index ];_eeb =_cae .Height +TwoByTwoWalk [2*_cae .Index +1];if _eeb < 1||_gdc < 1{_cae .Index ++;continue ;};if len (_cae .CurrentNumbers )==0{_cae .CurrentNumbers ,_dgg =_cae .Classer .TemplatesSize .GetSlice (uint64 (_gdc )*uint64 (_eeb ));if !_dgg {_cae .Index ++;continue ;};_cae .N =0;};_gee =len (_cae .CurrentNumbers );for ;_cae .N < _gee ;_cae .N ++{_ggb =_cae .CurrentNumbers [_cae .N ];_abe ,_cbe =_cae .Classer .DilatedTemplates .GetBitmap (_ggb );if _cbe !=nil {_c .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");return 0;};if _abe .Width -2*JbAddedPixels ==_gdc &&_abe .Height -2*JbAddedPixels ==_eeb {return _ggb ;};};_cae .Index ++;_cae .CurrentNumbers =nil ;};};func (_ab *Classer )addPageComponents (_ffc *_e .Bitmap ,_fgc *_e .Boxes ,_bdb *_e .Bitmaps ,_db int ,_ga Method )error {const _ec ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";if _ffc ==nil {return _fg .Error (_ec ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _fgc ==nil ||_bdb ==nil ||len (*_fgc )==0{_c .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_ffc );return nil ;};var _cc error ;switch _ga {case RankHaus :_cc =_ab .classifyRankHaus (_fgc ,_bdb ,_db );case Correlation :_cc =_ab .classifyCorrelation (_fgc ,_bdb ,_db );default:_c .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_ga );return _fg .Error (_ec ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _cc !=nil {return _fg .Wrap (_cc ,_ec ,"");};if _cc =_ab .getULCorners (_ffc ,_fgc );_cc !=nil {return _fg .Wrap (_cc ,_ec ,"");};_fc :=len (*_fgc );_ab .BaseIndex +=_fc ;if _cc =_ab .ComponentsNumber .Add (_fc );_cc !=nil {return _fg .Wrap (_cc ,_ec ,"");};return nil ;};func _eb (_cef *_e .Bitmap ,_fce ,_baf ,_ccb ,_ffe int ,_ea *_e .Bitmap )(_be _f .Point ,_beg error ){const _ecf ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";if _cef ==nil {return _be ,_fg .Error (_ecf ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _ea ==nil {return _be ,_fg .Error (_ecf ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");};_ge ,_dfc :=_ea .Width ,_ea .Height ;_bgb ,_ede :=_fce -_ccb -JbAddedPixels ,_baf -_ffe -JbAddedPixels ;_c .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_fce ,_baf ,_ge ,_dfc ,_bgb ,_ede );_aag ,_beg :=_e .Rect (_bgb ,_ede ,_ge ,_dfc );if _beg !=nil {return _be ,_fg .Wrap (_beg ,_ecf ,"");};_dee ,_ ,_beg :=_cef .ClipRectangle (_aag );if _beg !=nil {_c .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_aag );return _be ,_fg .Wrap (_beg ,_ecf ,"");};_ebf :=_e .New (_dee .Width ,_dee .Height );_eg :=_ff .MaxInt32 ;var _fcd ,_abg ,_dbb ,_gg ,_cee int ;for _fcd =-1;_fcd <=1;_fcd ++{for _abg =-1;_abg <=1;_abg ++{if _ ,_beg =_e .Copy (_ebf ,_dee );_beg !=nil {return _be ,_fg .Wrap (_beg ,_ecf ,"");};if _beg =_ebf .RasterOperation (_abg ,_fcd ,_ge ,_dfc ,_e .PixSrcXorDst ,_ea ,0,0);_beg !=nil {return _be ,_fg .Wrap (_beg ,_ecf ,"");};_dbb =_ebf .CountPixels ();if _dbb < _eg {_gg =_abg ;_cee =_fcd ;_eg =_dbb ;};};};_be .X =_gg ;_be .Y =_cee ;return _be ,nil ;};const (RankHaus Method =iota ;Correlation ;);type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _e .Component ;Method Method ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_g .IntSlice ;TemplateAreas *_g .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_e .BitmapsArray ;UndilatedTemplates *_e .Bitmaps ;DilatedTemplates *_e .Bitmaps ;TemplatesSize _g .IntsMap ;FgTemplates *_g .NumSlice ;CentroidPoints *_e .Points ;CentroidPointsTemplates *_e .Points ;ClassIDs *_g .IntSlice ;ComponentPageNumbers *_g .IntSlice ;PtaUL *_e .Points ;PtaLL *_e .Points ;};func Init (settings Settings )(*Classer ,error ){const _b ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_gc :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_g .IntsMap {},TemplateAreas :&_g .IntSlice {},ComponentPageNumbers :&_g .IntSlice {},ClassIDs :&_g .IntSlice {},ComponentsNumber :&_g .IntSlice {},CentroidPoints :&_e .Points {},CentroidPointsTemplates :&_e .Points {},UndilatedTemplates :&_e .Bitmaps {},DilatedTemplates :&_e .Bitmaps {},ClassInstances :&_e .BitmapsArray {},FgTemplates :&_g .NumSlice {}};if _bd :=_gc .Settings .Validate ();_bd !=nil {return nil ,_fg .Wrap (_bd ,_b ,"");};return _gc ,nil ;};