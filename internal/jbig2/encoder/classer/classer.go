//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_d "github.com/unidoc/unipdf/v3/common";_bc "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ec "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_eb "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_e "image";_b "math";);type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_bc .IntSlice ;TemplateAreas *_bc .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_ec .BitmapsArray ;UndilatedTemplates *_ec .Bitmaps ;DilatedTemplates *_ec .Bitmaps ;TemplatesSize _bc .IntsMap ;FgTemplates *_bc .NumSlice ;CentroidPoints *_ec .Points ;CentroidPointsTemplates *_ec .Points ;ClassIDs *_bc .IntSlice ;ComponentPageNumbers *_bc .IntSlice ;PtaUL *_ec .Points ;PtaLL *_ec .Points ;};const JbAddedPixels =6;func (_cag *Classer )verifyMethod (_eec Method )error {if _eec !=RankHaus &&_eec !=Correlation {return _eb .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");};return nil ;};func (_beg *Classer )classifyRankHaus (_egg *_ec .Boxes ,_ecc *_ec .Bitmaps ,_caa int )error {const _adg ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _egg ==nil {return _eb .Error (_adg ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _ecc ==nil {return _eb .Error (_adg ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_gac :=len (_ecc .Values );if _gac ==0{return _eb .Error (_adg ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_dcdb :=_ecc .CountPixels ();_ebb :=_beg .Settings .SizeHaus ;_dg :=_ec .SelCreateBrick (_ebb ,_ebb ,_ebb /2,_ebb /2,_ec .SelHit );_bceb :=&_ec .Bitmaps {Values :make ([]*_ec .Bitmap ,_gac )};_dec :=&_ec .Bitmaps {Values :make ([]*_ec .Bitmap ,_gac )};var (_cfda ,_dge ,_gdc *_ec .Bitmap ;_gdb error ;);for _affg :=0;_affg < _gac ;_affg ++{_cfda ,_gdb =_ecc .GetBitmap (_affg );if _gdb !=nil {return _eb .Wrap (_gdb ,_adg ,"");};_dge ,_gdb =_cfda .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _gdb !=nil {return _eb .Wrap (_gdb ,_adg ,"");};_gdc ,_gdb =_ec .Dilate (nil ,_dge ,_dg );if _gdb !=nil {return _eb .Wrap (_gdb ,_adg ,"");};_bceb .Values [_gac ]=_dge ;_dec .Values [_gac ]=_gdc ;};_fbcd ,_gdb :=_ec .Centroids (_bceb .Values );if _gdb !=nil {return _eb .Wrap (_gdb ,_adg ,"");};if _gdb =_fbcd .Add (_beg .CentroidPoints );_gdb !=nil {_d .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _beg .Settings .RankHaus ==1.0{_gdb =_beg .classifyRankHouseOne (_egg ,_ecc ,_bceb ,_dec ,_fbcd ,_caa );}else {_gdb =_beg .classifyRankHouseNonOne (_egg ,_ecc ,_bceb ,_dec ,_fbcd ,_dcdb ,_caa );};if _gdb !=nil {return _eb .Wrap (_gdb ,_adg ,"");};return nil ;};func _bdf (_abd *_ec .Bitmap ,_dccd ,_ce ,_aff ,_ffa int ,_gg *_ec .Bitmap )(_ceb _e .Point ,_abf error ){const _gb ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";if _abd ==nil {return _ceb ,_eb .Error (_gb ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _gg ==nil {return _ceb ,_eb .Error (_gb ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");};_gcc ,_fcg :=_gg .Width ,_gg .Height ;_ggf ,_cebb :=_dccd -_aff -JbAddedPixels ,_ce -_ffa -JbAddedPixels ;_d .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_dccd ,_ce ,_gcc ,_fcg ,_ggf ,_cebb );_defd ,_abf :=_ec .Rect (_ggf ,_cebb ,_gcc ,_fcg );if _abf !=nil {return _ceb ,_eb .Wrap (_abf ,_gb ,"");};_bef ,_ ,_abf :=_abd .ClipRectangle (_defd );if _abf !=nil {_d .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_defd );return _ceb ,_eb .Wrap (_abf ,_gb ,"");};_fbf :=_ec .New (_bef .Width ,_bef .Height );_ceg :=_b .MaxInt32 ;var _dde ,_fd ,_eg ,_cac ,_dbd int ;for _dde =-1;_dde <=1;_dde ++{for _fd =-1;_fd <=1;_fd ++{if _ ,_abf =_ec .Copy (_fbf ,_bef );_abf !=nil {return _ceb ,_eb .Wrap (_abf ,_gb ,"");};if _abf =_fbf .RasterOperation (_fd ,_dde ,_gcc ,_fcg ,_ec .PixSrcXorDst ,_gg ,0,0);_abf !=nil {return _ceb ,_eb .Wrap (_abf ,_gb ,"");};_eg =_fbf .CountPixels ();if _eg < _ceg {_cac =_fd ;_dbd =_dde ;_ceg =_eg ;};};};_ceb .X =_cac ;_ceb .Y =_dbd ;return _ceb ,nil ;};const (RankHaus Method =iota ;Correlation ;);func (_gfg Settings )Validate ()error {const _cba ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";if _gfg .Thresh < 0.4||_gfg .Thresh > 0.98{return _eb .Error (_cba ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");};if _gfg .WeightFactor < 0.0||_gfg .WeightFactor > 1.0{return _eb .Error (_cba ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _gfg .RankHaus < 0.5||_gfg .RankHaus > 1.0{return _eb .Error (_cba ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");};if _gfg .SizeHaus < 1||_gfg .SizeHaus > 10{return _eb .Error (_cba ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");};switch _gfg .Components {case _ec .ComponentConn ,_ec .ComponentCharacters ,_ec .ComponentWords :default:return _eb .Error (_cba ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");};return nil ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func (_fga *Classer )classifyCorrelation (_cgf *_ec .Boxes ,_ffb *_ec .Bitmaps ,_bbbc int )error {const _baf ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";if _cgf ==nil {return _eb .Error (_baf ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");};if _ffb ==nil {return _eb .Error (_baf ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_fgc :=len (_ffb .Values );if _fgc ==0{_d .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");return nil ;};var (_bce ,_bec *_ec .Bitmap ;_ega error ;);_dbc :=&_ec .Bitmaps {Values :make ([]*_ec .Bitmap ,_fgc )};for _gd ,_cce :=range _ffb .Values {_bec ,_ega =_cce .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _ega !=nil {return _eb .Wrap (_ega ,_baf ,"");};_dbc .Values [_gd ]=_bec ;};_bbde :=_fga .FgTemplates ;_afg :=_ec .MakePixelSumTab8 ();_ggb :=_ec .MakePixelCentroidTab8 ();_eee :=make ([]int ,_fgc );_ccb :=make ([][]int ,_fgc );_eca :=_ec .Points (make ([]_ec .Point ,_fgc ));_egc :=&_eca ;var (_cf ,_gca int ;_fdf ,_bed ,_fbc int ;_ccf ,_ag int ;_cega byte ;);for _bba ,_afcf :=range _dbc .Values {_ccb [_bba ]=make ([]int ,_afcf .Height );_cf =0;_gca =0;_bed =(_afcf .Height -1)*_afcf .RowStride ;_fdf =0;for _ag =_afcf .Height -1;_ag >=0;_ag ,_bed =_ag -1,_bed -_afcf .RowStride {_ccb [_bba ][_ag ]=_fdf ;_fbc =0;for _ccf =0;_ccf < _afcf .RowStride ;_ccf ++{_cega =_afcf .Data [_bed +_ccf ];_fbc +=_afg [_cega ];_cf +=_ggb [_cega ]+_ccf *8*_afg [_cega ];};_fdf +=_fbc ;_gca +=_fbc *_ag ;};_eee [_bba ]=_fdf ;if _fdf > 0{(*_egc )[_bba ]=_ec .Point {X :float32 (_cf )/float32 (_fdf ),Y :float32 (_gca )/float32 (_fdf )};}else {(*_egc )[_bba ]=_ec .Point {X :float32 (_afcf .Width )/float32 (2),Y :float32 (_afcf .Height )/float32 (2)};};};if _ega =_fga .CentroidPoints .Add (_egc );_ega !=nil {return _eb .Wrap (_ega ,_baf ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_becf ,_bg ,_baa int ;_cfd float64 ;_gdg ,_gbd ,_dbdf ,_fca float32 ;_bdd ,_fec _ec .Point ;_bbag bool ;_cee *similarTemplatesFinder ;_dcd int ;_egae *_ec .Bitmap ;_bbagb *_e .Rectangle ;_agd *_ec .Bitmaps ;);for _dcd ,_bec =range _dbc .Values {_bg =_eee [_dcd ];if _gdg ,_gbd ,_ega =_egc .GetGeometry (_dcd );_ega !=nil {return _eb .Wrap (_ega ,_baf ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_bbag =false ;_acf :=len (_fga .UndilatedTemplates .Values );_cee =_eead (_fga ,_bec );for _gcb :=_cee .Next ();_gcb > -1;{if _egae ,_ega =_fga .UndilatedTemplates .GetBitmap (_gcb );_ega !=nil {return _eb .Wrap (_ega ,_baf ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");};if _baa ,_ega =_bbde .GetInt (_gcb );_ega !=nil {_d .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ega );};if _dbdf ,_fca ,_ega =_fga .CentroidPointsTemplates .GetGeometry (_gcb );_ega !=nil {return _eb .Wrap (_ega ,_baf ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");};if _fga .Settings .WeightFactor > 0.0{if _becf ,_ega =_fga .TemplateAreas .Get (_gcb );_ega !=nil {_d .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_ega );};_cfd =_fga .Settings .Thresh +(1.0-_fga .Settings .Thresh )*_fga .Settings .WeightFactor *float64 (_baa )/float64 (_becf );}else {_cfd =_fga .Settings .Thresh ;};_agg ,_aa :=_ec .CorrelationScoreThresholded (_bec ,_egae ,_bg ,_baa ,_bdd .X -_fec .X ,_bdd .Y -_fec .Y ,MaxDiffWidth ,MaxDiffHeight ,_afg ,_ccb [_dcd ],float32 (_cfd ));if _aa !=nil {return _eb .Wrap (_aa ,_baf ,"");};if _fab {var (_ccfe ,_fbe float64 ;_fdc ,_gcca int ;);_ccfe ,_aa =_ec .CorrelationScore (_bec ,_egae ,_bg ,_baa ,_gdg -_dbdf ,_gbd -_fca ,MaxDiffWidth ,MaxDiffHeight ,_afg );if _aa !=nil {return _eb .Wrap (_aa ,_baf ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_fbe ,_aa =_ec .CorrelationScoreSimple (_bec ,_egae ,_bg ,_baa ,_gdg -_dbdf ,_gbd -_fca ,MaxDiffWidth ,MaxDiffHeight ,_afg );if _aa !=nil {return _eb .Wrap (_aa ,_baf ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");};_fdc =int (_b .Sqrt (_ccfe *float64 (_bg )*float64 (_baa )));_gcca =int (_b .Sqrt (_fbe *float64 (_bg )*float64 (_baa )));if (_ccfe >=_cfd )!=(_fbe >=_cfd ){return _eb .Errorf (_baf ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_fdc ,_ccfe ,_ccfe >=_cfd ,_gcca ,_fbe ,_fbe >=_cfd ,_ccfe -_fbe );};if _ccfe >=_cfd !=_agg {return _eb .Errorf (_baf ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_ccfe ,_ccfe *float64 (_bg )*float64 (_baa ),_fdc ,_cfd ,float32 (_cfd )*float32 (_bg )*float32 (_baa ),_agg );};};if _agg {_bbag =true ;if _aa =_fga .ClassIDs .Add (_gcb );_aa !=nil {return _eb .Wrap (_aa ,_baf ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _aa =_fga .ComponentPageNumbers .Add (_bbbc );_aa !=nil {return _eb .Wrap (_aa ,_baf ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _fga .Settings .KeepClassInstances {if _bce ,_aa =_ffb .GetBitmap (_dcd );_aa !=nil {return _eb .Wrap (_aa ,_baf ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _agd ,_aa =_fga .ClassInstances .GetBitmaps (_gcb );_aa !=nil {return _eb .Wrap (_aa ,_baf ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_agd .AddBitmap (_bce );if _bbagb ,_aa =_cgf .Get (_dcd );_aa !=nil {return _eb .Wrap (_aa ,_baf ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");};_agd .AddBox (_bbagb );};break ;};};if !_bbag {if _ega =_fga .ClassIDs .Add (_acf );_ega !=nil {return _eb .Wrap (_ega ,_baf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _ega =_fga .ComponentPageNumbers .Add (_bbbc );_ega !=nil {return _eb .Wrap (_ega ,_baf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_agd =&_ec .Bitmaps {};if _bce ,_ega =_ffb .GetBitmap (_dcd );_ega !=nil {return _eb .Wrap (_ega ,_baf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_agd .AddBitmap (_bce );_ffaf ,_bbg :=_bce .Width ,_bce .Height ;_cgc :=uint64 (_bbg )*uint64 (_ffaf );_fga .TemplatesSize .Add (_cgc ,_acf );if _bbagb ,_ega =_cgf .Get (_dcd );_ega !=nil {return _eb .Wrap (_ega ,_baf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_agd .AddBox (_bbagb );_fga .ClassInstances .AddBitmaps (_agd );_fga .CentroidPointsTemplates .AddPoint (_gdg ,_gbd );_fga .FgTemplates .AddInt (_bg );_fga .UndilatedTemplates .AddBitmap (_bce );_becf =(_bec .Width -2*JbAddedPixels )*(_bec .Height -2*JbAddedPixels );if _ega =_fga .TemplateAreas .Add (_becf );_ega !=nil {return _eb .Wrap (_ega ,_baf ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_fga .NumberOfClasses =len (_fga .UndilatedTemplates .Values );return nil ;};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);func DefaultSettings ()Settings {_abb :=&Settings {};_abb .SetDefault ();return *_abb };func (_efb *Classer )classifyRankHouseOne (_aag *_ec .Boxes ,_afae ,_agb ,_fcd *_ec .Bitmaps ,_cde *_ec .Points ,_cgb int )(_bgd error ){const _caeg ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_fda ,_bdb ,_dccb ,_eea float32 ;_fgf int ;_gdga ,_cdc ,_ege ,_caeb ,_ffd *_ec .Bitmap ;_eeb ,_fff bool ;);for _cff :=0;_cff < len (_afae .Values );_cff ++{_cdc =_agb .Values [_cff ];_ege =_fcd .Values [_cff ];_fda ,_bdb ,_bgd =_cde .GetGeometry (_cff );if _bgd !=nil {return _eb .Wrapf (_bgd ,_caeg ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_bcg :=len (_efb .UndilatedTemplates .Values );_eeb =false ;_eaf :=_eead (_efb ,_cdc );for _fgf =_eaf .Next ();_fgf > -1;{_caeb ,_bgd =_efb .UndilatedTemplates .GetBitmap (_fgf );if _bgd !=nil {return _eb .Wrap (_bgd ,_caeg ,"\u0062\u006d\u0033");};_ffd ,_bgd =_efb .DilatedTemplates .GetBitmap (_fgf );if _bgd !=nil {return _eb .Wrap (_bgd ,_caeg ,"\u0062\u006d\u0034");};_dccb ,_eea ,_bgd =_efb .CentroidPointsTemplates .GetGeometry (_fgf );if _bgd !=nil {return _eb .Wrap (_bgd ,_caeg ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_fff ,_bgd =_ec .HausTest (_cdc ,_ege ,_caeb ,_ffd ,_fda -_dccb ,_bdb -_eea ,MaxDiffWidth ,MaxDiffHeight );if _bgd !=nil {return _eb .Wrap (_bgd ,_caeg ,"");};if _fff {_eeb =true ;if _bgd =_efb .ClassIDs .Add (_fgf );_bgd !=nil {return _eb .Wrap (_bgd ,_caeg ,"");};if _bgd =_efb .ComponentPageNumbers .Add (_cgb );_bgd !=nil {return _eb .Wrap (_bgd ,_caeg ,"");};if _efb .Settings .KeepClassInstances {_ae ,_bgb :=_efb .ClassInstances .GetBitmaps (_fgf );if _bgb !=nil {return _eb .Wrap (_bgb ,_caeg ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_gdga ,_bgb =_afae .GetBitmap (_cff );if _bgb !=nil {return _eb .Wrap (_bgb ,_caeg ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_ae .AddBitmap (_gdga );_eac ,_bgb :=_aag .Get (_cff );if _bgb !=nil {return _eb .Wrap (_bgb ,_caeg ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_ae .AddBox (_eac );};break ;};};if !_eeb {if _bgd =_efb .ClassIDs .Add (_bcg );_bgd !=nil {return _eb .Wrap (_bgd ,_caeg ,"");};if _bgd =_efb .ComponentPageNumbers .Add (_cgb );_bgd !=nil {return _eb .Wrap (_bgd ,_caeg ,"");};_cdb :=&_ec .Bitmaps {};_gdga ,_bgd =_afae .GetBitmap (_cff );if _bgd !=nil {return _eb .Wrap (_bgd ,_caeg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cdb .Values =append (_cdb .Values ,_gdga );_caca ,_bcaa :=_gdga .Width ,_gdga .Height ;_efb .TemplatesSize .Add (uint64 (_bcaa )*uint64 (_caca ),_bcg );_eab ,_fdd :=_aag .Get (_cff );if _fdd !=nil {return _eb .Wrap (_fdd ,_caeg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_cdb .AddBox (_eab );_efb .ClassInstances .AddBitmaps (_cdb );_efb .CentroidPointsTemplates .AddPoint (_fda ,_bdb );_efb .UndilatedTemplates .AddBitmap (_cdc );_efb .DilatedTemplates .AddBitmap (_ege );};};return nil ;};var _fab bool ;func (_ef *Classer )ComputeLLCorners ()(_de error ){const _df ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _ef .PtaUL ==nil {return _eb .Error (_df ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");};_fb :=len (*_ef .PtaUL );_ef .PtaLL =&_ec .Points {};var (_bcc ,_af float32 ;_ca ,_cb int ;_dfb *_ec .Bitmap ;);for _cc :=0;_cc < _fb ;_cc ++{_bcc ,_af ,_de =_ef .PtaUL .GetGeometry (_cc );if _de !=nil {_d .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_de );return _eb .Wrap (_de ,_df ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_ca ,_de =_ef .ClassIDs .Get (_cc );if _de !=nil {_d .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_de );return _eb .Wrap (_de ,_df ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_dfb ,_de =_ef .UndilatedTemplates .GetBitmap (_ca );if _de !=nil {_d .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_de );return _eb .Wrap (_de ,_df ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_cb =_dfb .Height ;_ef .PtaLL .AddPoint (_bcc ,_af +float32 (_cb ));};return nil ;};func (_dc *Classer )AddPage (inputPage *_ec .Bitmap ,pageNumber int ,method Method )(_ga error ){const _be ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_dc .Widths [pageNumber ]=inputPage .Width ;_dc .Heights [pageNumber ]=inputPage .Height ;if _ga =_dc .verifyMethod (method );_ga !=nil {return _eb .Wrap (_ga ,_be ,"");};_c ,_cd ,_ga :=inputPage .GetComponents (_dc .Settings .Components ,_dc .Settings .MaxCompWidth ,_dc .Settings .MaxCompHeight );if _ga !=nil {return _eb .Wrap (_ga ,_be ,"");};_d .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_c );if _ga =_dc .addPageComponents (inputPage ,_cd ,_c ,pageNumber ,method );_ga !=nil {return _eb .Wrap (_ga ,_be ,"");};return nil ;};func (_ab *Classer )addPageComponents (_fe *_ec .Bitmap ,_fee *_ec .Boxes ,_bee *_ec .Bitmaps ,_bb int ,_ea Method )error {const _fg ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";if _fe ==nil {return _eb .Error (_fg ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _fee ==nil ||_bee ==nil ||len (*_fee )==0{_d .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_fe );return nil ;};var _ac error ;switch _ea {case RankHaus :_ac =_ab .classifyRankHaus (_fee ,_bee ,_bb );case Correlation :_ac =_ab .classifyCorrelation (_fee ,_bee ,_bb );default:_d .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_ea );return _eb .Error (_fg ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _ac !=nil {return _eb .Wrap (_ac ,_fg ,"");};if _ac =_ab .getULCorners (_fe ,_fee );_ac !=nil {return _eb .Wrap (_ac ,_fg ,"");};_ed :=len (*_fee );_ab .BaseIndex +=_ed ;if _ac =_ab .ComponentsNumber .Add (_ed );_ac !=nil {return _eb .Wrap (_ac ,_fg ,"");};return nil ;};func Init (settings Settings )(*Classer ,error ){const _g ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_f :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_bc .IntsMap {},TemplateAreas :&_bc .IntSlice {},ComponentPageNumbers :&_bc .IntSlice {},ClassIDs :&_bc .IntSlice {},ComponentsNumber :&_bc .IntSlice {},CentroidPoints :&_ec .Points {},CentroidPointsTemplates :&_ec .Points {},UndilatedTemplates :&_ec .Bitmaps {},DilatedTemplates :&_ec .Bitmaps {},ClassInstances :&_ec .BitmapsArray {},FgTemplates :&_bc .NumSlice {}};if _bcb :=_f .Settings .Validate ();_bcb !=nil {return nil ,_eb .Wrap (_bcb ,_g ,"");};return _f ,nil ;};func (_ade *similarTemplatesFinder )Next ()int {var (_fbff ,_ecca ,_cab ,_deg int ;_cec bool ;_abfa *_ec .Bitmap ;_ffafc error ;);for {if _ade .Index >=25{return -1;};_ecca =_ade .Width +TwoByTwoWalk [2*_ade .Index ];_fbff =_ade .Height +TwoByTwoWalk [2*_ade .Index +1];if _fbff < 1||_ecca < 1{_ade .Index ++;continue ;};if len (_ade .CurrentNumbers )==0{_ade .CurrentNumbers ,_cec =_ade .Classer .TemplatesSize .GetSlice (uint64 (_ecca )*uint64 (_fbff ));if !_cec {_ade .Index ++;continue ;};_ade .N =0;};_cab =len (_ade .CurrentNumbers );for ;_ade .N < _cab ;_ade .N ++{_deg =_ade .CurrentNumbers [_ade .N ];_abfa ,_ffafc =_ade .Classer .DilatedTemplates .GetBitmap (_deg );if _ffafc !=nil {_d .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");return 0;};if _abfa .Width -2*JbAddedPixels ==_ecca &&_abfa .Height -2*JbAddedPixels ==_fbff {return _deg ;};};_ade .Index ++;_ade .CurrentNumbers =nil ;};};func (_efe *Classer )classifyRankHouseNonOne (_dgec *_ec .Boxes ,_bafe ,_fcda ,_bgf *_ec .Bitmaps ,_ccg *_ec .Points ,_dgf *_bc .NumSlice ,_bcd int )(_bf error ){const _eed ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";var (_cbg ,_fce ,_gcba ,_gge float32 ;_adgg ,_afad ,_ddc int ;_aef ,_edf ,_eabe ,_gf ,_fgcf *_ec .Bitmap ;_adc ,_bgdg bool ;);_dga :=_ec .MakePixelSumTab8 ();for _ggbc :=0;_ggbc < len (_bafe .Values );_ggbc ++{if _edf ,_bf =_fcda .GetBitmap (_ggbc );_bf !=nil {return _eb .Wrap (_bf ,_eed ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _adgg ,_bf =_dgf .GetInt (_ggbc );_bf !=nil {_d .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ggbc ,_bf );};if _eabe ,_bf =_bgf .GetBitmap (_ggbc );_bf !=nil {return _eb .Wrap (_bf ,_eed ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _cbg ,_fce ,_bf =_ccg .GetGeometry (_ggbc );_bf !=nil {return _eb .Wrapf (_bf ,_eed ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");};_cbf :=len (_efe .UndilatedTemplates .Values );_adc =false ;_agf :=_eead (_efe ,_edf );for _ddc =_agf .Next ();_ddc > -1;{if _gf ,_bf =_efe .UndilatedTemplates .GetBitmap (_ddc );_bf !=nil {return _eb .Wrap (_bf ,_eed ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _afad ,_bf =_efe .FgTemplates .GetInt (_ddc );_bf !=nil {_d .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ddc ,_bf );};if _fgcf ,_bf =_efe .DilatedTemplates .GetBitmap (_ddc );_bf !=nil {return _eb .Wrap (_bf ,_eed ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _gcba ,_gge ,_bf =_efe .CentroidPointsTemplates .GetGeometry (_ddc );_bf !=nil {return _eb .Wrap (_bf ,_eed ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_bgdg ,_bf =_ec .RankHausTest (_edf ,_eabe ,_gf ,_fgcf ,_cbg -_gcba ,_fce -_gge ,MaxDiffWidth ,MaxDiffHeight ,_adgg ,_afad ,float32 (_efe .Settings .RankHaus ),_dga );if _bf !=nil {return _eb .Wrap (_bf ,_eed ,"");};if _bgdg {_adc =true ;if _bf =_efe .ClassIDs .Add (_ddc );_bf !=nil {return _eb .Wrap (_bf ,_eed ,"");};if _bf =_efe .ComponentPageNumbers .Add (_bcd );_bf !=nil {return _eb .Wrap (_bf ,_eed ,"");};if _efe .Settings .KeepClassInstances {_cfg ,_bcdg :=_efe .ClassInstances .GetBitmaps (_ddc );if _bcdg !=nil {return _eb .Wrap (_bcdg ,_eed ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");};if _aef ,_bcdg =_bafe .GetBitmap (_ggbc );_bcdg !=nil {return _eb .Wrap (_bcdg ,_eed ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_cfg .Values =append (_cfg .Values ,_aef );_gbf ,_bcdg :=_dgec .Get (_ggbc );if _bcdg !=nil {return _eb .Wrap (_bcdg ,_eed ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};_cfg .Boxes =append (_cfg .Boxes ,_gbf );};break ;};};if !_adc {if _bf =_efe .ClassIDs .Add (_cbf );_bf !=nil {return _eb .Wrap (_bf ,_eed ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _bf =_efe .ComponentPageNumbers .Add (_bcd );_bf !=nil {return _eb .Wrap (_bf ,_eed ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_gcd :=&_ec .Bitmaps {};_aef =_bafe .Values [_ggbc ];_gcd .AddBitmap (_aef );_adb ,_cfb :=_aef .Width ,_aef .Height ;_efe .TemplatesSize .Add (uint64 (_adb )*uint64 (_cfb ),_cbf );_ccbb ,_ecd :=_dgec .Get (_ggbc );if _ecd !=nil {return _eb .Wrap (_ecd ,_eed ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_gcd .AddBox (_ccbb );_efe .ClassInstances .AddBitmaps (_gcd );_efe .CentroidPointsTemplates .AddPoint (_cbg ,_fce );_efe .UndilatedTemplates .AddBitmap (_edf );_efe .DilatedTemplates .AddBitmap (_eabe );_efe .FgTemplates .AddInt (_adgg );};};_efe .NumberOfClasses =len (_efe .UndilatedTemplates .Values );return nil ;};func (_bbb *Classer )getULCorners (_cg *_ec .Bitmap ,_bd *_ec .Boxes )error {const _ecb ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _cg ==nil {return _eb .Error (_ecb ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _bd ==nil {return _eb .Error (_ecb ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _bbb .PtaUL ==nil {_bbb .PtaUL =&_ec .Points {};};_da :=len (*_bd );var (_bbd ,_db ,_dd ,_ba int ;_fa ,_ff ,_gc ,_gcg float32 ;_cae error ;_fc *_e .Rectangle ;_ee *_ec .Bitmap ;_afc _e .Point ;);for _bca :=0;_bca < _da ;_bca ++{_bbd =_bbb .BaseIndex +_bca ;if _fa ,_ff ,_cae =_bbb .CentroidPoints .GetGeometry (_bbd );_cae !=nil {return _eb .Wrap (_cae ,_ecb ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _db ,_cae =_bbb .ClassIDs .Get (_bbd );_cae !=nil {return _eb .Wrap (_cae ,_ecb ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _gc ,_gcg ,_cae =_bbb .CentroidPointsTemplates .GetGeometry (_db );_cae !=nil {return _eb .Wrap (_cae ,_ecb ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_ad :=_gc -_fa ;_def :=_gcg -_ff ;if _ad >=0{_dd =int (_ad +0.5);}else {_dd =int (_ad -0.5);};if _def >=0{_ba =int (_def +0.5);}else {_ba =int (_def -0.5);};if _fc ,_cae =_bd .Get (_bca );_cae !=nil {return _eb .Wrap (_cae ,_ecb ,"");};_afa ,_dcc :=_fc .Min .X ,_fc .Min .Y ;_ee ,_cae =_bbb .UndilatedTemplates .GetBitmap (_db );if _cae !=nil {return _eb .Wrap (_cae ,_ecb ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");};_afc ,_cae =_bdf (_cg ,_afa ,_dcc ,_dd ,_ba ,_ee );if _cae !=nil {return _eb .Wrap (_cae ,_ecb ,"");};_bbb .PtaUL .AddPoint (float32 (_afa -_dd +_afc .X ),float32 (_dcc -_ba +_afc .Y ));};return nil ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func _eead (_gaa *Classer ,_eacd *_ec .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_eacd .Width ,Height :_eacd .Height ,Classer :_gaa };};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _ec .Component ;Method Method ;};type Method int ;func (_cbgd *Settings )SetDefault (){if _cbgd .MaxCompWidth ==0{switch _cbgd .Components {case _ec .ComponentConn :_cbgd .MaxCompWidth =MaxConnCompWidth ;case _ec .ComponentCharacters :_cbgd .MaxCompWidth =MaxCharCompWidth ;case _ec .ComponentWords :_cbgd .MaxCompWidth =MaxWordCompWidth ;};};if _cbgd .MaxCompHeight ==0{_cbgd .MaxCompHeight =MaxCompHeight ;};if _cbgd .Thresh ==0.0{_cbgd .Thresh =0.9;};if _cbgd .WeightFactor ==0.0{_cbgd .WeightFactor =0.75;};if _cbgd .RankHaus ==0.0{_cbgd .RankHaus =0.97;};if _cbgd .SizeHaus ==0{_cbgd .SizeHaus =2;};};const (MaxDiffWidth =2;MaxDiffHeight =2;);