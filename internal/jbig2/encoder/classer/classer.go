//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_c "github.com/unidoc/unipdf/v3/common";_g "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_ef "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_d "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_a "image";_e "math";);
func (_cgd *Classer )classifyRankHouseOne (_ccd *_ef .Boxes ,_efd ,_beg ,_geb *_ef .Bitmaps ,_dfe *_ef .Points ,_gfe int )(_ec error ){const _adg ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_ebe ,_fgd ,_gffb ,_edce float32 ;_dga int ;_ebd ,_dgd ,_afd ,_ggd ,_abd *_ef .Bitmap ;_fde ,_bfb bool ;);for _ggdf :=0;_ggdf < len (_efd .Values );_ggdf ++{_dgd =_beg .Values [_ggdf ];_afd =_geb .Values [_ggdf ];_ebe ,_fgd ,_ec =_dfe .GetGeometry (_ggdf );
if _ec !=nil {return _d .Wrapf (_ec ,_adg ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_ceg :=len (_cgd .UndilatedTemplates .Values );_fde =false ;_gfg :=_abe (_cgd ,_dgd );for _dga =_gfg .Next ();_dga > -1;{_ggd ,_ec =_cgd .UndilatedTemplates .GetBitmap (_dga );
if _ec !=nil {return _d .Wrap (_ec ,_adg ,"\u0062\u006d\u0033");};_abd ,_ec =_cgd .DilatedTemplates .GetBitmap (_dga );if _ec !=nil {return _d .Wrap (_ec ,_adg ,"\u0062\u006d\u0034");};_gffb ,_edce ,_ec =_cgd .CentroidPointsTemplates .GetGeometry (_dga );
if _ec !=nil {return _d .Wrap (_ec ,_adg ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_bfb ,_ec =_ef .HausTest (_dgd ,_afd ,_ggd ,_abd ,_ebe -_gffb ,_fgd -_edce ,MaxDiffWidth ,MaxDiffHeight );if _ec !=nil {return _d .Wrap (_ec ,_adg ,"");
};if _bfb {_fde =true ;if _ec =_cgd .ClassIDs .Add (_dga );_ec !=nil {return _d .Wrap (_ec ,_adg ,"");};if _ec =_cgd .ComponentPageNumbers .Add (_gfe );_ec !=nil {return _d .Wrap (_ec ,_adg ,"");};if _cgd .Settings .KeepClassInstances {_ccg ,_dfd :=_cgd .ClassInstances .GetBitmaps (_dga );
if _dfd !=nil {return _d .Wrap (_dfd ,_adg ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_ebd ,_dfd =_efd .GetBitmap (_ggdf );if _dfd !=nil {return _d .Wrap (_dfd ,_adg ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_ccg .AddBitmap (_ebd );_aad ,_dfd :=_ccd .Get (_ggdf );
if _dfd !=nil {return _d .Wrap (_dfd ,_adg ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_ccg .AddBox (_aad );};break ;};};if !_fde {if _ec =_cgd .ClassIDs .Add (_ceg );_ec !=nil {return _d .Wrap (_ec ,_adg ,"");};if _ec =_cgd .ComponentPageNumbers .Add (_gfe );
_ec !=nil {return _d .Wrap (_ec ,_adg ,"");};_ca :=&_ef .Bitmaps {};_ebd ,_ec =_efd .GetBitmap (_ggdf );if _ec !=nil {return _d .Wrap (_ec ,_adg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ca .Values =append (_ca .Values ,_ebd );_deff ,_eeac :=_ebd .Width ,_ebd .Height ;
_cgd .TemplatesSize .Add (uint64 (_eeac )*uint64 (_deff ),_ceg );_ddee ,_gbg :=_ccd .Get (_ggdf );if _gbg !=nil {return _d .Wrap (_gbg ,_adg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ca .AddBox (_ddee );_cgd .ClassInstances .AddBitmaps (_ca );_cgd .CentroidPointsTemplates .AddPoint (_ebe ,_fgd );
_cgd .UndilatedTemplates .AddBitmap (_dgd );_cgd .DilatedTemplates .AddBitmap (_afd );};};return nil ;};func _abe (_dda *Classer ,_gag *_ef .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_gag .Width ,Height :_gag .Height ,Classer :_dda };
};func (_de *Classer )ComputeLLCorners ()(_be error ){const _ae ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _de .PtaUL ==nil {return _d .Error (_ae ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");
};_dd :=len (*_de .PtaUL );_de .PtaLL =&_ef .Points {};var (_ab ,_af float32 ;_ed ,_bf int ;_efb *_ef .Bitmap ;);for _ddb :=0;_ddb < _dd ;_ddb ++{_ab ,_af ,_be =_de .PtaUL .GetGeometry (_ddb );if _be !=nil {_c .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_be );
return _d .Wrap (_be ,_ae ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_ed ,_be =_de .ClassIDs .Get (_ddb );if _be !=nil {_c .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_be );
return _d .Wrap (_be ,_ae ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_efb ,_be =_de .UndilatedTemplates .GetBitmap (_ed );if _be !=nil {_c .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_be );
return _d .Wrap (_be ,_ae ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_bf =_efb .Height ;_de .PtaLL .AddPoint (_ab ,_af +float32 (_bf ));};return nil ;};func (_gebc *Classer )classifyRankHouseNonOne (_gfdc *_ef .Boxes ,_egb ,_eeeg ,_gce *_ef .Bitmaps ,_gba *_ef .Points ,_cfe *_g .NumSlice ,_bea int )(_bac error ){const _dfg ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_gfc ,_cfb ,_fgdb ,_ace float32 ;_dfge ,_begg ,_faga int ;_edf ,_ddcd ,_gcb ,_cgg ,_bfag *_ef .Bitmap ;_dab ,_bba bool ;);_dba :=_ef .MakePixelSumTab8 ();for _abdb :=0;_abdb < len (_egb .Values );_abdb ++{if _ddcd ,_bac =_eeeg .GetBitmap (_abdb );
_bac !=nil {return _d .Wrap (_bac ,_dfg ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _dfge ,_bac =_cfe .GetInt (_abdb );_bac !=nil {_c .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_abdb ,_bac );
};if _gcb ,_bac =_gce .GetBitmap (_abdb );_bac !=nil {return _d .Wrap (_bac ,_dfg ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _gfc ,_cfb ,_bac =_gba .GetGeometry (_abdb );_bac !=nil {return _d .Wrapf (_bac ,_dfg ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_dace :=len (_gebc .UndilatedTemplates .Values );_dab =false ;_gfdg :=_abe (_gebc ,_ddcd );for _faga =_gfdg .Next ();_faga > -1;{if _cgg ,_bac =_gebc .UndilatedTemplates .GetBitmap (_faga );_bac !=nil {return _d .Wrap (_bac ,_dfg ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _begg ,_bac =_gebc .FgTemplates .GetInt (_faga );_bac !=nil {_c .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_faga ,_bac );
};if _bfag ,_bac =_gebc .DilatedTemplates .GetBitmap (_faga );_bac !=nil {return _d .Wrap (_bac ,_dfg ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _fgdb ,_ace ,_bac =_gebc .CentroidPointsTemplates .GetGeometry (_faga );
_bac !=nil {return _d .Wrap (_bac ,_dfg ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_bba ,_bac =_ef .RankHausTest (_ddcd ,_gcb ,_cgg ,_bfag ,_gfc -_fgdb ,_cfb -_ace ,MaxDiffWidth ,MaxDiffHeight ,_dfge ,_begg ,float32 (_gebc .Settings .RankHaus ),_dba );
if _bac !=nil {return _d .Wrap (_bac ,_dfg ,"");};if _bba {_dab =true ;if _bac =_gebc .ClassIDs .Add (_faga );_bac !=nil {return _d .Wrap (_bac ,_dfg ,"");};if _bac =_gebc .ComponentPageNumbers .Add (_bea );_bac !=nil {return _d .Wrap (_bac ,_dfg ,"");
};if _gebc .Settings .KeepClassInstances {_ebg ,_efcb :=_gebc .ClassInstances .GetBitmaps (_faga );if _efcb !=nil {return _d .Wrap (_efcb ,_dfg ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _edf ,_efcb =_egb .GetBitmap (_abdb );_efcb !=nil {return _d .Wrap (_efcb ,_dfg ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_ebg .Values =append (_ebg .Values ,_edf );_fbc ,_efcb :=_gfdc .Get (_abdb );if _efcb !=nil {return _d .Wrap (_efcb ,_dfg ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_ebg .Boxes =append (_ebg .Boxes ,_fbc );};break ;};};if !_dab {if _bac =_gebc .ClassIDs .Add (_dace );_bac !=nil {return _d .Wrap (_bac ,_dfg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _bac =_gebc .ComponentPageNumbers .Add (_bea );_bac !=nil {return _d .Wrap (_bac ,_dfg ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_agdd :=&_ef .Bitmaps {};_edf =_egb .Values [_abdb ];_agdd .AddBitmap (_edf );_aadc ,_bec :=_edf .Width ,_edf .Height ;_gebc .TemplatesSize .Add (uint64 (_aadc )*uint64 (_bec ),_dace );_eeg ,_ddcde :=_gfdc .Get (_abdb );if _ddcde !=nil {return _d .Wrap (_ddcde ,_dfg ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_agdd .AddBox (_eeg );_gebc .ClassInstances .AddBitmaps (_agdd );_gebc .CentroidPointsTemplates .AddPoint (_gfc ,_cfb );_gebc .UndilatedTemplates .AddBitmap (_ddcd );_gebc .DilatedTemplates .AddBitmap (_gcb );_gebc .FgTemplates .AddInt (_dfge );};};_gebc .NumberOfClasses =len (_gebc .UndilatedTemplates .Values );
return nil ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func _fag (_ad *_ef .Bitmap ,_fab ,_afb ,_aee ,_dgf int ,_cga *_ef .Bitmap )(_dag _a .Point ,_gd error ){const _gff ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _ad ==nil {return _dag ,_d .Error (_gff ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _cga ==nil {return _dag ,_d .Error (_gff ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_dc ,_bag :=_cga .Width ,_cga .Height ;_fd ,_edc :=_fab -_aee -JbAddedPixels ,_afb -_dgf -JbAddedPixels ;_c .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_fab ,_afb ,_dc ,_bag ,_fd ,_edc );
_fb ,_gd :=_ef .Rect (_fd ,_edc ,_dc ,_bag );if _gd !=nil {return _dag ,_d .Wrap (_gd ,_gff ,"");};_ge ,_ ,_gd :=_ad .ClipRectangle (_fb );if _gd !=nil {_c .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_fb );
return _dag ,_d .Wrap (_gd ,_gff ,"");};_fac :=_ef .New (_ge .Width ,_ge .Height );_gcf :=_e .MaxInt32 ;var _gg ,_efc ,_df ,_cge ,_fgf int ;for _gg =-1;_gg <=1;_gg ++{for _efc =-1;_efc <=1;_efc ++{if _ ,_gd =_ef .Copy (_fac ,_ge );_gd !=nil {return _dag ,_d .Wrap (_gd ,_gff ,"");
};if _gd =_fac .RasterOperation (_efc ,_gg ,_dc ,_bag ,_ef .PixSrcXorDst ,_cga ,0,0);_gd !=nil {return _dag ,_d .Wrap (_gd ,_gff ,"");};_df =_fac .CountPixels ();if _df < _gcf {_cge =_efc ;_fgf =_gg ;_gcf =_df ;};};};_dag .X =_cge ;_dag .Y =_fgf ;return _dag ,nil ;
};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func (_geg *Classer )classifyRankHaus (_cda *_ef .Boxes ,_dfb *_ef .Bitmaps ,_fbg int )error {const _bbg ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";
if _cda ==nil {return _d .Error (_bbg ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _dfb ==nil {return _d .Error (_bbg ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};_gdg :=len (_dfb .Values );if _gdg ==0{return _d .Error (_bbg ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_bgfe :=_dfb .CountPixels ();_ddbcc :=_geg .Settings .SizeHaus ;_effc :=_ef .SelCreateBrick (_ddbcc ,_ddbcc ,_ddbcc /2,_ddbcc /2,_ef .SelHit );
_dcd :=&_ef .Bitmaps {Values :make ([]*_ef .Bitmap ,_gdg )};_ccf :=&_ef .Bitmaps {Values :make ([]*_ef .Bitmap ,_gdg )};var (_bbge ,_gfd ,_gffe *_ef .Bitmap ;_adbd error ;);for _dggf :=0;_dggf < _gdg ;_dggf ++{_bbge ,_adbd =_dfb .GetBitmap (_dggf );if _adbd !=nil {return _d .Wrap (_adbd ,_bbg ,"");
};_gfd ,_adbd =_bbge .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _adbd !=nil {return _d .Wrap (_adbd ,_bbg ,"");};_gffe ,_adbd =_ef .Dilate (nil ,_gfd ,_effc );if _adbd !=nil {return _d .Wrap (_adbd ,_bbg ,"");};
_dcd .Values [_gdg ]=_gfd ;_ccf .Values [_gdg ]=_gffe ;};_eb ,_adbd :=_ef .Centroids (_dcd .Values );if _adbd !=nil {return _d .Wrap (_adbd ,_bbg ,"");};if _adbd =_eb .Add (_geg .CentroidPoints );_adbd !=nil {_c .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");
};if _geg .Settings .RankHaus ==1.0{_adbd =_geg .classifyRankHouseOne (_cda ,_dfb ,_dcd ,_ccf ,_eb ,_fbg );}else {_adbd =_geg .classifyRankHouseNonOne (_cda ,_dfb ,_dcd ,_ccf ,_eb ,_bgfe ,_fbg );};if _adbd !=nil {return _d .Wrap (_adbd ,_bbg ,"");};return nil ;
};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);func (_dde *Classer )classifyCorrelation (_bgaa *_ef .Boxes ,_cgf *_ef .Bitmaps ,_gbd int )error {const _eeb ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";
if _bgaa ==nil {return _d .Error (_eeb ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _cgf ==nil {return _d .Error (_eeb ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_ac :=len (_cgf .Values );if _ac ==0{_c .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_ff ,_ce *_ef .Bitmap ;_edbc error ;);_ceb :=&_ef .Bitmaps {Values :make ([]*_ef .Bitmap ,_ac )};for _dgc ,_eff :=range _cgf .Values {_ce ,_edbc =_eff .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _edbc !=nil {return _d .Wrap (_edbc ,_eeb ,"");};_ceb .Values [_dgc ]=_ce ;};_cbd :=_dde .FgTemplates ;_eded :=_ef .MakePixelSumTab8 ();_cbb :=_ef .MakePixelCentroidTab8 ();_bgd :=make ([]int ,_ac );_egd :=make ([][]int ,_ac );_ffc :=_ef .Points (make ([]_ef .Point ,_ac ));
_agd :=&_ffc ;var (_baf ,_ga int ;_cdg ,_bca ,_eaea int ;_aa ,_daeb int ;_gab byte ;);for _fgb ,_dacd :=range _ceb .Values {_egd [_fgb ]=make ([]int ,_dacd .Height );_baf =0;_ga =0;_bca =(_dacd .Height -1)*_dacd .RowStride ;_cdg =0;for _daeb =_dacd .Height -1;
_daeb >=0;_daeb ,_bca =_daeb -1,_bca -_dacd .RowStride {_egd [_fgb ][_daeb ]=_cdg ;_eaea =0;for _aa =0;_aa < _dacd .RowStride ;_aa ++{_gab =_dacd .Data [_bca +_aa ];_eaea +=_eded [_gab ];_baf +=_cbb [_gab ]+_aa *8*_eded [_gab ];};_cdg +=_eaea ;_ga +=_eaea *_daeb ;
};_bgd [_fgb ]=_cdg ;if _cdg > 0{(*_agd )[_fgb ]=_ef .Point {X :float32 (_baf )/float32 (_cdg ),Y :float32 (_ga )/float32 (_cdg )};}else {(*_agd )[_fgb ]=_ef .Point {X :float32 (_dacd .Width )/float32 (2),Y :float32 (_dacd .Height )/float32 (2)};};};if _edbc =_dde .CentroidPoints .Add (_agd );
_edbc !=nil {return _d .Wrap (_edbc ,_eeb ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_ddg ,_dcf ,_edbf int ;_ddf float64 ;_cba ,_baa ,_cbc ,_bcg float32 ;_gcg ,_faa _ef .Point ;_gdd bool ;_dbb *similarTemplatesFinder ;
_cdc int ;_fae *_ef .Bitmap ;_adb *_a .Rectangle ;_edbd *_ef .Bitmaps ;);for _cdc ,_ce =range _ceb .Values {_dcf =_bgd [_cdc ];if _cba ,_baa ,_edbc =_agd .GetGeometry (_cdc );_edbc !=nil {return _d .Wrap (_edbc ,_eeb ,"\u0070t\u0061\u0020\u002d\u0020\u0069");
};_gdd =false ;_eab :=len (_dde .UndilatedTemplates .Values );_dbb =_abe (_dde ,_ce );for _eee :=_dbb .Next ();_eee > -1;{if _fae ,_edbc =_dde .UndilatedTemplates .GetBitmap (_eee );_edbc !=nil {return _d .Wrap (_edbc ,_eeb ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");
};if _edbf ,_edbc =_cbd .GetInt (_eee );_edbc !=nil {_c .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_edbc );};
if _cbc ,_bcg ,_edbc =_dde .CentroidPointsTemplates .GetGeometry (_eee );_edbc !=nil {return _d .Wrap (_edbc ,_eeb ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _dde .Settings .WeightFactor > 0.0{if _ddg ,_edbc =_dde .TemplateAreas .Get (_eee );_edbc !=nil {_c .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_edbc );
};_ddf =_dde .Settings .Thresh +(1.0-_dde .Settings .Thresh )*_dde .Settings .WeightFactor *float64 (_edbf )/float64 (_ddg );}else {_ddf =_dde .Settings .Thresh ;};_fe ,_cc :=_ef .CorrelationScoreThresholded (_ce ,_fae ,_dcf ,_edbf ,_gcg .X -_faa .X ,_gcg .Y -_faa .Y ,MaxDiffWidth ,MaxDiffHeight ,_eded ,_egd [_cdc ],float32 (_ddf ));
if _cc !=nil {return _d .Wrap (_cc ,_eeb ,"");};if _agc {var (_gabc ,_bfa float64 ;_eea ,_aba int ;);_gabc ,_cc =_ef .CorrelationScore (_ce ,_fae ,_dcf ,_edbf ,_cba -_cbc ,_baa -_bcg ,MaxDiffWidth ,MaxDiffHeight ,_eded );if _cc !=nil {return _d .Wrap (_cc ,_eeb ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_bfa ,_cc =_ef .CorrelationScoreSimple (_ce ,_fae ,_dcf ,_edbf ,_cba -_cbc ,_baa -_bcg ,MaxDiffWidth ,MaxDiffHeight ,_eded );if _cc !=nil {return _d .Wrap (_cc ,_eeb ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_eea =int (_e .Sqrt (_gabc *float64 (_dcf )*float64 (_edbf )));_aba =int (_e .Sqrt (_bfa *float64 (_dcf )*float64 (_edbf )));if (_gabc >=_ddf )!=(_bfa >=_ddf ){return _d .Errorf (_eeb ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_eea ,_gabc ,_gabc >=_ddf ,_aba ,_bfa ,_bfa >=_ddf ,_gabc -_bfa );
};if _gabc >=_ddf !=_fe {return _d .Errorf (_eeb ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_gabc ,_gabc *float64 (_dcf )*float64 (_edbf ),_eea ,_ddf ,float32 (_ddf )*float32 (_dcf )*float32 (_edbf ),_fe );
};};if _fe {_gdd =true ;if _cc =_dde .ClassIDs .Add (_eee );_cc !=nil {return _d .Wrap (_cc ,_eeb ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _cc =_dde .ComponentPageNumbers .Add (_gbd );_cc !=nil {return _d .Wrap (_cc ,_eeb ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _dde .Settings .KeepClassInstances {if _ff ,_cc =_cgf .GetBitmap (_cdc );_cc !=nil {return _d .Wrap (_cc ,_eeb ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _edbd ,_cc =_dde .ClassInstances .GetBitmaps (_eee );
_cc !=nil {return _d .Wrap (_cc ,_eeb ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_edbd .AddBitmap (_ff );if _adb ,_cc =_bgaa .Get (_cdc );_cc !=nil {return _d .Wrap (_cc ,_eeb ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_edbd .AddBox (_adb );};break ;};};if !_gdd {if _edbc =_dde .ClassIDs .Add (_eab );_edbc !=nil {return _d .Wrap (_edbc ,_eeb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _edbc =_dde .ComponentPageNumbers .Add (_gbd );_edbc !=nil {return _d .Wrap (_edbc ,_eeb ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_edbd =&_ef .Bitmaps {};if _ff ,_edbc =_cgf .GetBitmap (_cdc );_edbc !=nil {return _d .Wrap (_edbc ,_eeb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_edbd .AddBitmap (_ff );_ffd ,_eac :=_ff .Width ,_ff .Height ;_bfg :=uint64 (_eac )*uint64 (_ffd );_dde .TemplatesSize .Add (_bfg ,_eab );
if _adb ,_edbc =_bgaa .Get (_cdc );_edbc !=nil {return _d .Wrap (_edbc ,_eeb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_edbd .AddBox (_adb );_dde .ClassInstances .AddBitmaps (_edbd );_dde .CentroidPointsTemplates .AddPoint (_cba ,_baa );_dde .FgTemplates .AddInt (_dcf );
_dde .UndilatedTemplates .AddBitmap (_ff );_ddg =(_ce .Width -2*JbAddedPixels )*(_ce .Height -2*JbAddedPixels );if _edbc =_dde .TemplateAreas .Add (_ddg );_edbc !=nil {return _d .Wrap (_edbc ,_eeb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_dde .NumberOfClasses =len (_dde .UndilatedTemplates .Values );
return nil ;};const (MaxDiffWidth =2;MaxDiffHeight =2;);func (_f *Classer )addPageComponents (_dae *_ef .Bitmap ,_dac *_ef .Boxes ,_deg *_ef .Bitmaps ,_bfe int ,_fa Method )error {const _ddbc ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _dae ==nil {return _d .Error (_ddbc ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _dac ==nil ||_deg ==nil ||len (*_dac )==0{_c .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_dae );
return nil ;};var _ag error ;switch _fa {case RankHaus :_ag =_f .classifyRankHaus (_dac ,_deg ,_bfe );case Correlation :_ag =_f .classifyCorrelation (_dac ,_deg ,_bfe );default:_c .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_fa );
return _d .Error (_ddbc ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _ag !=nil {return _d .Wrap (_ag ,_ddbc ,"");};if _ag =_f .getULCorners (_dae ,_dac );_ag !=nil {return _d .Wrap (_ag ,_ddbc ,"");
};_daa :=len (*_dac );_f .BaseIndex +=_daa ;if _ag =_f .ComponentsNumber .Add (_daa );_ag !=nil {return _d .Wrap (_ag ,_ddbc ,"");};return nil ;};func (_eabc *Settings )SetDefault (){if _eabc .MaxCompWidth ==0{switch _eabc .Components {case _ef .ComponentConn :_eabc .MaxCompWidth =MaxConnCompWidth ;
case _ef .ComponentCharacters :_eabc .MaxCompWidth =MaxCharCompWidth ;case _ef .ComponentWords :_eabc .MaxCompWidth =MaxWordCompWidth ;};};if _eabc .MaxCompHeight ==0{_eabc .MaxCompHeight =MaxCompHeight ;};if _eabc .Thresh ==0.0{_eabc .Thresh =0.9;};if _eabc .WeightFactor ==0.0{_eabc .WeightFactor =0.75;
};if _eabc .RankHaus ==0.0{_eabc .RankHaus =0.97;};if _eabc .SizeHaus ==0{_eabc .SizeHaus =2;};};func (_cf *Classer )verifyMethod (_ddc Method )error {if _ddc !=RankHaus &&_ddc !=Correlation {return _d .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};func (_dg *Classer )AddPage (inputPage *_ef .Bitmap ,pageNumber int ,method Method )(_dgg error ){const _ee ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_dg .Widths [pageNumber ]=inputPage .Width ;
_dg .Heights [pageNumber ]=inputPage .Height ;if _dgg =_dg .verifyMethod (method );_dgg !=nil {return _d .Wrap (_dgg ,_ee ,"");};_db ,_cd ,_dgg :=inputPage .GetComponents (_dg .Settings .Components ,_dg .Settings .MaxCompWidth ,_dg .Settings .MaxCompHeight );
if _dgg !=nil {return _d .Wrap (_dgg ,_ee ,"");};_c .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_db );if _dgg =_dg .addPageComponents (inputPage ,_cd ,_db ,pageNumber ,method );_dgg !=nil {return _d .Wrap (_dgg ,_ee ,"");
};return nil ;};func DefaultSettings ()Settings {_fdc :=&Settings {};_fdc .SetDefault ();return *_fdc };const JbAddedPixels =6;func (_gad Settings )Validate ()error {const _ecg ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";
if _gad .Thresh < 0.4||_gad .Thresh > 0.98{return _d .Error (_ecg ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _gad .WeightFactor < 0.0||_gad .WeightFactor > 1.0{return _d .Error (_ecg ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _gad .RankHaus < 0.5||_gad .RankHaus > 1.0{return _d .Error (_ecg ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _gad .SizeHaus < 1||_gad .SizeHaus > 10{return _d .Error (_ecg ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _gad .Components {case _ef .ComponentConn ,_ef .ComponentCharacters ,_ef .ComponentWords :default:return _d .Error (_ecg ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};var _agc bool ;type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _ef .Component ;Method Method ;};const (RankHaus Method =iota ;
Correlation ;);func (_aae *similarTemplatesFinder )Next ()int {var (_fbd ,_aab ,_bfbd ,_fgbf int ;_ggdc bool ;_gbe *_ef .Bitmap ;_eag error ;);for {if _aae .Index >=25{return -1;};_aab =_aae .Width +TwoByTwoWalk [2*_aae .Index ];_fbd =_aae .Height +TwoByTwoWalk [2*_aae .Index +1];
if _fbd < 1||_aab < 1{_aae .Index ++;continue ;};if len (_aae .CurrentNumbers )==0{_aae .CurrentNumbers ,_ggdc =_aae .Classer .TemplatesSize .GetSlice (uint64 (_aab )*uint64 (_fbd ));if !_ggdc {_aae .Index ++;continue ;};_aae .N =0;};_bfbd =len (_aae .CurrentNumbers );
for ;_aae .N < _bfbd ;_aae .N ++{_fgbf =_aae .CurrentNumbers [_aae .N ];_gbe ,_eag =_aae .Classer .DilatedTemplates .GetBitmap (_fgbf );if _eag !=nil {_c .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _gbe .Width -2*JbAddedPixels ==_aab &&_gbe .Height -2*JbAddedPixels ==_fbd {return _fgbf ;};};_aae .Index ++;_aae .CurrentNumbers =nil ;};};type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_g .IntSlice ;TemplateAreas *_g .IntSlice ;
Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_ef .BitmapsArray ;UndilatedTemplates *_ef .Bitmaps ;DilatedTemplates *_ef .Bitmaps ;TemplatesSize _g .IntsMap ;FgTemplates *_g .NumSlice ;CentroidPoints *_ef .Points ;CentroidPointsTemplates *_ef .Points ;
ClassIDs *_g .IntSlice ;ComponentPageNumbers *_g .IntSlice ;PtaUL *_ef .Points ;PtaLL *_ef .Points ;};func (_eae *Classer )getULCorners (_ede *_ef .Bitmap ,_daad *_ef .Boxes )error {const _bg ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _ede ==nil {return _d .Error (_bg ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _daad ==nil {return _d .Error (_bg ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _eae .PtaUL ==nil {_eae .PtaUL =&_ef .Points {};
};_fg :=len (*_daad );var (_bc ,_def ,_gc ,_gb int ;_dbg ,_bga ,_ba ,_cg float32 ;_efbg error ;_aef *_a .Rectangle ;_gf *_ef .Bitmap ;_bd _a .Point ;);for _bgf :=0;_bgf < _fg ;_bgf ++{_bc =_eae .BaseIndex +_bgf ;if _dbg ,_bga ,_efbg =_eae .CentroidPoints .GetGeometry (_bc );
_efbg !=nil {return _d .Wrap (_efbg ,_bg ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _def ,_efbg =_eae .ClassIDs .Get (_bc );_efbg !=nil {return _d .Wrap (_efbg ,_bg ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");
};if _ba ,_cg ,_efbg =_eae .CentroidPointsTemplates .GetGeometry (_def );_efbg !=nil {return _d .Wrap (_efbg ,_bg ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_aea :=_ba -_dbg ;
_faf :=_cg -_bga ;if _aea >=0{_gc =int (_aea +0.5);}else {_gc =int (_aea -0.5);};if _faf >=0{_gb =int (_faf +0.5);}else {_gb =int (_faf -0.5);};if _aef ,_efbg =_daad .Get (_bgf );_efbg !=nil {return _d .Wrap (_efbg ,_bg ,"");};_bb ,_eg :=_aef .Min .X ,_aef .Min .Y ;
_gf ,_efbg =_eae .UndilatedTemplates .GetBitmap (_def );if _efbg !=nil {return _d .Wrap (_efbg ,_bg ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_bd ,_efbg =_fag (_ede ,_bb ,_eg ,_gc ,_gb ,_gf );if _efbg !=nil {return _d .Wrap (_efbg ,_bg ,"");};_eae .PtaUL .AddPoint (float32 (_bb -_gc +_bd .X ),float32 (_eg -_gb +_bd .Y ));};return nil ;};type Method int ;func Init (settings Settings )(*Classer ,error ){const _ea ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";
_cb :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_g .IntsMap {},TemplateAreas :&_g .IntSlice {},ComponentPageNumbers :&_g .IntSlice {},ClassIDs :&_g .IntSlice {},ComponentsNumber :&_g .IntSlice {},CentroidPoints :&_ef .Points {},CentroidPointsTemplates :&_ef .Points {},UndilatedTemplates :&_ef .Bitmaps {},DilatedTemplates :&_ef .Bitmaps {},ClassInstances :&_ef .BitmapsArray {},FgTemplates :&_g .NumSlice {}};
if _da :=_cb .Settings .Validate ();_da !=nil {return nil ,_d .Wrap (_da ,_ea ,"");};return _cb ,nil ;};