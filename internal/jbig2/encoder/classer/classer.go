//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_fd "github.com/unidoc/unipdf/v3/common";_ad "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_aa "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_fdd "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_ae "image";_f "math";
);func _bed (_ce *_aa .Bitmap ,_cd ,_dge ,_fc ,_feb int ,_de *_aa .Bitmap )(_cdb _ae .Point ,_bdb error ){const _dggc ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";if _ce ==nil {return _cdb ,_fdd .Error (_dggc ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");
};if _de ==nil {return _cdb ,_fdd .Error (_dggc ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");};_ed ,_bcd :=_de .Width ,_de .Height ;_aeg ,_gc :=_cd -_fc -JbAddedPixels ,_dge -_feb -JbAddedPixels ;
_fd .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_cd ,_dge ,_ed ,_bcd ,_aeg ,_gc );
_gg ,_bdb :=_aa .Rect (_aeg ,_gc ,_ed ,_bcd );if _bdb !=nil {return _cdb ,_fdd .Wrap (_bdb ,_dggc ,"");};_gb ,_ ,_bdb :=_ce .ClipRectangle (_gg );if _bdb !=nil {_fd .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_gg );
return _cdb ,_fdd .Wrap (_bdb ,_dggc ,"");};_dgd :=_aa .New (_gb .Width ,_gb .Height );_geb :=_f .MaxInt32 ;var _agf ,_bdd ,_dcb ,_bad ,_db int ;for _agf =-1;_agf <=1;_agf ++{for _bdd =-1;_bdd <=1;_bdd ++{if _ ,_bdb =_aa .Copy (_dgd ,_gb );_bdb !=nil {return _cdb ,_fdd .Wrap (_bdb ,_dggc ,"");
};if _bdb =_dgd .RasterOperation (_bdd ,_agf ,_ed ,_bcd ,_aa .PixSrcXorDst ,_de ,0,0);_bdb !=nil {return _cdb ,_fdd .Wrap (_bdb ,_dggc ,"");};_dcb =_dgd .CountPixels ();if _dcb < _geb {_bad =_bdd ;_db =_agf ;_geb =_dcb ;};};};_cdb .X =_bad ;_cdb .Y =_db ;
return _cdb ,nil ;};func (_c *Classer )ComputeLLCorners ()(_ffc error ){const _cc ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _c .PtaUL ==nil {return _fdd .Error (_cc ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");
};_g :=len (*_c .PtaUL );_c .PtaLL =&_aa .Points {};var (_df ,_bd float32 ;_bc ,_fgf int ;_fb *_aa .Bitmap ;);for _bb :=0;_bb < _g ;_bb ++{_df ,_bd ,_ffc =_c .PtaUL .GetGeometry (_bb );if _ffc !=nil {_fd .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_ffc );
return _fdd .Wrap (_ffc ,_cc ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_bc ,_ffc =_c .ClassIDs .Get (_bb );if _ffc !=nil {_fd .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_ffc );
return _fdd .Wrap (_ffc ,_cc ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_fb ,_ffc =_c .UndilatedTemplates .GetBitmap (_bc );if _ffc !=nil {_fd .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ffc );
return _fdd .Wrap (_ffc ,_cc ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_fgf =_fb .Height ;_c .PtaLL .AddPoint (_df ,_bd +float32 (_fgf ));};return nil ;};const (MaxConnCompWidth =350;
MaxCharCompWidth =350;MaxWordCompWidth =1000;MaxCompHeight =120;);var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};func (_bgb Settings )Validate ()error {const _deb ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";
if _bgb .Thresh < 0.4||_bgb .Thresh > 0.98{return _fdd .Error (_deb ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _bgb .WeightFactor < 0.0||_bgb .WeightFactor > 1.0{return _fdd .Error (_deb ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _bgb .RankHaus < 0.5||_bgb .RankHaus > 1.0{return _fdd .Error (_deb ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _bgb .SizeHaus < 1||_bgb .SizeHaus > 10{return _fdd .Error (_deb ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _bgb .Components {case _aa .ComponentConn ,_aa .ComponentCharacters ,_aa .ComponentWords :default:return _fdd .Error (_deb ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};func (_gd *Classer )classifyCorrelation (_badc *_aa .Boxes ,_ffd *_aa .Bitmaps ,_gcg int )error {const _gba ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";if _badc ==nil {return _fdd .Error (_gba ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _ffd ==nil {return _fdd .Error (_gba ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_fee :=len (_ffd .Values );if _fee ==0{_fd .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_fbb ,_bbb *_aa .Bitmap ;_bf error ;);_bdag :=&_aa .Bitmaps {Values :make ([]*_aa .Bitmap ,_fee )};for _aef ,_bca :=range _ffd .Values {_bbb ,_bf =_bca .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _bf !=nil {return _fdd .Wrap (_bf ,_gba ,"");};_bdag .Values [_aef ]=_bbb ;};_gca :=_gd .FgTemplates ;_cg :=_aa .MakePixelSumTab8 ();_dfc :=_aa .MakePixelCentroidTab8 ();_dgc :=make ([]int ,_fee );_gbf :=make ([][]int ,_fee );_dgb :=_aa .Points (make ([]_aa .Point ,_fee ));
_gad :=&_dgb ;var (_bceg ,_cac int ;_gbag ,_gbc ,_cge int ;_gea ,_fbc int ;_gbac byte ;);for _eg ,_ccg :=range _bdag .Values {_gbf [_eg ]=make ([]int ,_ccg .Height );_bceg =0;_cac =0;_gbc =(_ccg .Height -1)*_ccg .RowStride ;_gbag =0;for _fbc =_ccg .Height -1;
_fbc >=0;_fbc ,_gbc =_fbc -1,_gbc -_ccg .RowStride {_gbf [_eg ][_fbc ]=_gbag ;_cge =0;for _gea =0;_gea < _ccg .RowStride ;_gea ++{_gbac =_ccg .Data [_gbc +_gea ];_cge +=_cg [_gbac ];_bceg +=_dfc [_gbac ]+_gea *8*_cg [_gbac ];};_gbag +=_cge ;_cac +=_cge *_fbc ;
};_dgc [_eg ]=_gbag ;if _gbag > 0{(*_gad )[_eg ]=_aa .Point {X :float32 (_bceg )/float32 (_gbag ),Y :float32 (_cac )/float32 (_gbag )};}else {(*_gad )[_eg ]=_aa .Point {X :float32 (_ccg .Width )/float32 (2),Y :float32 (_ccg .Height )/float32 (2)};};};if _bf =_gd .CentroidPoints .Add (_gad );
_bf !=nil {return _fdd .Wrap (_bf ,_gba ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_fbbe ,_gbg ,_bfc int ;_aea float64 ;_bbd ,_ddg ,_bfb ,_fa float32 ;_cca ,_cea _aa .Point ;_gdb bool ;_dfb *similarTemplatesFinder ;_cce int ;
_dba *_aa .Bitmap ;_bcdg *_ae .Rectangle ;_ggd *_aa .Bitmaps ;);for _cce ,_bbb =range _bdag .Values {_gbg =_dgc [_cce ];if _bbd ,_ddg ,_bf =_gad .GetGeometry (_cce );_bf !=nil {return _fdd .Wrap (_bf ,_gba ,"\u0070t\u0061\u0020\u002d\u0020\u0069");};_gdb =false ;
_aac :=len (_gd .UndilatedTemplates .Values );_dfb =_ee (_gd ,_bbb );for _afa :=_dfb .Next ();_afa > -1;{if _dba ,_bf =_gd .UndilatedTemplates .GetBitmap (_afa );_bf !=nil {return _fdd .Wrap (_bf ,_gba ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");
};if _bfc ,_bf =_gca .GetInt (_afa );_bf !=nil {_fd .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bf );};if _bfb ,_fa ,_bf =_gd .CentroidPointsTemplates .GetGeometry (_afa );
_bf !=nil {return _fdd .Wrap (_bf ,_gba ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _gd .Settings .WeightFactor > 0.0{if _fbbe ,_bf =_gd .TemplateAreas .Get (_afa );_bf !=nil {_fd .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_bf );
};_aea =_gd .Settings .Thresh +(1.0-_gd .Settings .Thresh )*_gd .Settings .WeightFactor *float64 (_bfc )/float64 (_fbbe );}else {_aea =_gd .Settings .Thresh ;};_edf ,_abg :=_aa .CorrelationScoreThresholded (_bbb ,_dba ,_gbg ,_bfc ,_cca .X -_cea .X ,_cca .Y -_cea .Y ,MaxDiffWidth ,MaxDiffHeight ,_cg ,_gbf [_cce ],float32 (_aea ));
if _abg !=nil {return _fdd .Wrap (_abg ,_gba ,"");};if _ddb {var (_age ,_bbg float64 ;_ecf ,_def int ;);_age ,_abg =_aa .CorrelationScore (_bbb ,_dba ,_gbg ,_bfc ,_bbd -_bfb ,_ddg -_fa ,MaxDiffWidth ,MaxDiffHeight ,_cg );if _abg !=nil {return _fdd .Wrap (_abg ,_gba ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_bbg ,_abg =_aa .CorrelationScoreSimple (_bbb ,_dba ,_gbg ,_bfc ,_bbd -_bfb ,_ddg -_fa ,MaxDiffWidth ,MaxDiffHeight ,_cg );if _abg !=nil {return _fdd .Wrap (_abg ,_gba ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_ecf =int (_f .Sqrt (_age *float64 (_gbg )*float64 (_bfc )));_def =int (_f .Sqrt (_bbg *float64 (_gbg )*float64 (_bfc )));if (_age >=_aea )!=(_bbg >=_aea ){return _fdd .Errorf (_gba ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_ecf ,_age ,_age >=_aea ,_def ,_bbg ,_bbg >=_aea ,_age -_bbg );
};if _age >=_aea !=_edf {return _fdd .Errorf (_gba ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_age ,_age *float64 (_gbg )*float64 (_bfc ),_ecf ,_aea ,float32 (_aea )*float32 (_gbg )*float32 (_bfc ),_edf );
};};if _edf {_gdb =true ;if _abg =_gd .ClassIDs .Add (_afa );_abg !=nil {return _fdd .Wrap (_abg ,_gba ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _abg =_gd .ComponentPageNumbers .Add (_gcg );_abg !=nil {return _fdd .Wrap (_abg ,_gba ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _gd .Settings .KeepClassInstances {if _fbb ,_abg =_ffd .GetBitmap (_cce );_abg !=nil {return _fdd .Wrap (_abg ,_gba ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _ggd ,_abg =_gd .ClassInstances .GetBitmaps (_afa );
_abg !=nil {return _fdd .Wrap (_abg ,_gba ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_ggd .AddBitmap (_fbb );if _bcdg ,_abg =_badc .Get (_cce );_abg !=nil {return _fdd .Wrap (_abg ,_gba ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_ggd .AddBox (_bcdg );};break ;};};if !_gdb {if _bf =_gd .ClassIDs .Add (_aac );_bf !=nil {return _fdd .Wrap (_bf ,_gba ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _bf =_gd .ComponentPageNumbers .Add (_gcg );_bf !=nil {return _fdd .Wrap (_bf ,_gba ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_ggd =&_aa .Bitmaps {};if _fbb ,_bf =_ffd .GetBitmap (_cce );_bf !=nil {return _fdd .Wrap (_bf ,_gba ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ggd .AddBitmap (_fbb );_gda ,_abd :=_fbb .Width ,_fbb .Height ;_dee :=uint64 (_abd )*uint64 (_gda );_gd .TemplatesSize .Add (_dee ,_aac );
if _bcdg ,_bf =_badc .Get (_cce );_bf !=nil {return _fdd .Wrap (_bf ,_gba ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_ggd .AddBox (_bcdg );_gd .ClassInstances .AddBitmaps (_ggd );_gd .CentroidPointsTemplates .AddPoint (_bbd ,_ddg );_gd .FgTemplates .AddInt (_gbg );
_gd .UndilatedTemplates .AddBitmap (_fbb );_fbbe =(_bbb .Width -2*JbAddedPixels )*(_bbb .Height -2*JbAddedPixels );if _bf =_gd .TemplateAreas .Add (_fbbe );_bf !=nil {return _fdd .Wrap (_bf ,_gba ,"\u0021\u0066\u006f\u0075\u006e\u0064");};};};_gd .NumberOfClasses =len (_gd .UndilatedTemplates .Values );
return nil ;};const JbAddedPixels =6;type Method int ;func Init (settings Settings )(*Classer ,error ){const _ff ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_aae :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_ad .IntsMap {},TemplateAreas :&_ad .IntSlice {},ComponentPageNumbers :&_ad .IntSlice {},ClassIDs :&_ad .IntSlice {},ComponentsNumber :&_ad .IntSlice {},CentroidPoints :&_aa .Points {},CentroidPointsTemplates :&_aa .Points {},UndilatedTemplates :&_aa .Bitmaps {},DilatedTemplates :&_aa .Bitmaps {},ClassInstances :&_aa .BitmapsArray {},FgTemplates :&_ad .NumSlice {}};
if _e :=_aae .Settings .Validate ();_e !=nil {return nil ,_fdd .Wrap (_e ,_ff ,"");};return _aae ,nil ;};func (_cbgdg *similarTemplatesFinder )Next ()int {var (_bdbc ,_deab ,_gdaff ,_cdd int ;_bfd bool ;_bec *_aa .Bitmap ;_acdb error ;);for {if _cbgdg .Index >=25{return -1;
};_deab =_cbgdg .Width +TwoByTwoWalk [2*_cbgdg .Index ];_bdbc =_cbgdg .Height +TwoByTwoWalk [2*_cbgdg .Index +1];if _bdbc < 1||_deab < 1{_cbgdg .Index ++;continue ;};if len (_cbgdg .CurrentNumbers )==0{_cbgdg .CurrentNumbers ,_bfd =_cbgdg .Classer .TemplatesSize .GetSlice (uint64 (_deab )*uint64 (_bdbc ));
if !_bfd {_cbgdg .Index ++;continue ;};_cbgdg .N =0;};_gdaff =len (_cbgdg .CurrentNumbers );for ;_cbgdg .N < _gdaff ;_cbgdg .N ++{_cdd =_cbgdg .CurrentNumbers [_cbgdg .N ];_bec ,_acdb =_cbgdg .Classer .DilatedTemplates .GetBitmap (_cdd );if _acdb !=nil {_fd .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _bec .Width -2*JbAddedPixels ==_deab &&_bec .Height -2*JbAddedPixels ==_bdbc {return _cdd ;};};_cbgdg .Index ++;_cbgdg .CurrentNumbers =nil ;};};func (_be *Classer )addPageComponents (_ga *_aa .Bitmap ,_dc *_aa .Boxes ,_bda *_aa .Bitmaps ,_afb int ,_afbd Method )error {const _ba ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _ga ==nil {return _fdd .Error (_ba ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _dc ==nil ||_bda ==nil ||len (*_dc )==0{_fd .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_ga );
return nil ;};var _ca error ;switch _afbd {case RankHaus :_ca =_be .classifyRankHaus (_dc ,_bda ,_afb );case Correlation :_ca =_be .classifyCorrelation (_dc ,_bda ,_afb );default:_fd .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_afbd );
return _fdd .Error (_ba ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _ca !=nil {return _fdd .Wrap (_ca ,_ba ,"");};if _ca =_be .getULCorners (_ga ,_dc );_ca !=nil {return _fdd .Wrap (_ca ,_ba ,"");
};_aed :=len (*_dc );_be .BaseIndex +=_aed ;if _ca =_be .ComponentsNumber .Add (_aed );_ca !=nil {return _fdd .Wrap (_ca ,_ba ,"");};return nil ;};const (MaxDiffWidth =2;MaxDiffHeight =2;);func (_ddf *Classer )classifyRankHouseOne (_ceg *_aa .Boxes ,_fbd ,_cbgg ,_ggdb *_aa .Bitmaps ,_fbf *_aa .Points ,_ecd int )(_baa error ){const _befa ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_aca ,_gbad ,_baec ,_cdf float32 ;_ea int ;_ffg ,_aegb ,_fge ,_ccc ,_eff *_aa .Bitmap ;_gdaf ,_cab bool ;);for _gbaf :=0;_gbaf < len (_fbd .Values );_gbaf ++{_aegb =_cbgg .Values [_gbaf ];_fge =_ggdb .Values [_gbaf ];_aca ,_gbad ,_baa =_fbf .GetGeometry (_gbaf );
if _baa !=nil {return _fdd .Wrapf (_baa ,_befa ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_fca :=len (_ddf .UndilatedTemplates .Values );_gdaf =false ;_cbgd :=_ee (_ddf ,_aegb );for _ea =_cbgd .Next ();_ea > -1;
{_ccc ,_baa =_ddf .UndilatedTemplates .GetBitmap (_ea );if _baa !=nil {return _fdd .Wrap (_baa ,_befa ,"\u0062\u006d\u0033");};_eff ,_baa =_ddf .DilatedTemplates .GetBitmap (_ea );if _baa !=nil {return _fdd .Wrap (_baa ,_befa ,"\u0062\u006d\u0034");};_baec ,_cdf ,_baa =_ddf .CentroidPointsTemplates .GetGeometry (_ea );
if _baa !=nil {return _fdd .Wrap (_baa ,_befa ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_cab ,_baa =_aa .HausTest (_aegb ,_fge ,_ccc ,_eff ,_aca -_baec ,_gbad -_cdf ,MaxDiffWidth ,MaxDiffHeight );
if _baa !=nil {return _fdd .Wrap (_baa ,_befa ,"");};if _cab {_gdaf =true ;if _baa =_ddf .ClassIDs .Add (_ea );_baa !=nil {return _fdd .Wrap (_baa ,_befa ,"");};if _baa =_ddf .ComponentPageNumbers .Add (_ecd );_baa !=nil {return _fdd .Wrap (_baa ,_befa ,"");
};if _ddf .Settings .KeepClassInstances {_febc ,_abgd :=_ddf .ClassInstances .GetBitmaps (_ea );if _abgd !=nil {return _fdd .Wrap (_abgd ,_befa ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_ffg ,_abgd =_fbd .GetBitmap (_gbaf );if _abgd !=nil {return _fdd .Wrap (_abgd ,_befa ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_febc .AddBitmap (_ffg );_aeb ,_abgd :=_ceg .Get (_gbaf );if _abgd !=nil {return _fdd .Wrap (_abgd ,_befa ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_febc .AddBox (_aeb );};break ;};};if !_gdaf {if _baa =_ddf .ClassIDs .Add (_fca );_baa !=nil {return _fdd .Wrap (_baa ,_befa ,"");
};if _baa =_ddf .ComponentPageNumbers .Add (_ecd );_baa !=nil {return _fdd .Wrap (_baa ,_befa ,"");};_fga :=&_aa .Bitmaps {};_ffg ,_baa =_fbd .GetBitmap (_gbaf );if _baa !=nil {return _fdd .Wrap (_baa ,_befa ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fga .Values =append (_fga .Values ,_ffg );
_aebf ,_gcc :=_ffg .Width ,_ffg .Height ;_ddf .TemplatesSize .Add (uint64 (_gcc )*uint64 (_aebf ),_fca );_cbfa ,_badd :=_ceg .Get (_gbaf );if _badd !=nil {return _fdd .Wrap (_badd ,_befa ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_fga .AddBox (_cbfa );
_ddf .ClassInstances .AddBitmaps (_fga );_ddf .CentroidPointsTemplates .AddPoint (_aca ,_gbad );_ddf .UndilatedTemplates .AddBitmap (_aegb );_ddf .DilatedTemplates .AddBitmap (_fge );};};return nil ;};func (_beb *Classer )verifyMethod (_bae Method )error {if _bae !=RankHaus &&_bae !=Correlation {return _fdd .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};var _ddb bool ;func (_ef *Classer )AddPage (inputPage *_aa .Bitmap ,pageNumber int ,method Method )(_af error ){const _fg ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_ef .Widths [pageNumber ]=inputPage .Width ;
_ef .Heights [pageNumber ]=inputPage .Height ;if _af =_ef .verifyMethod (method );_af !=nil {return _fdd .Wrap (_af ,_fg ,"");};_b ,_d ,_af :=inputPage .GetComponents (_ef .Settings .Components ,_ef .Settings .MaxCompWidth ,_ef .Settings .MaxCompHeight );
if _af !=nil {return _fdd .Wrap (_af ,_fg ,"");};_fd .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_b );if _af =_ef .addPageComponents (inputPage ,_d ,_b ,pageNumber ,method );_af !=nil {return _fdd .Wrap (_af ,_fg ,"");
};return nil ;};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func _ee (_fec *Classer ,_fddc *_aa .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_fddc .Width ,Height :_fddc .Height ,Classer :_fec };
};type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _aa .Component ;Method Method ;};func (_gac *Classer )classifyRankHouseNonOne (_ecb *_aa .Boxes ,_ddd ,_abgde ,_ddda *_aa .Bitmaps ,_fce *_aa .Points ,_bge *_ad .NumSlice ,_dca int )(_acd error ){const _edff ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_caad ,_ede ,_ecee ,_bgf float32 ;_abdf ,_adfd ,_eb int ;_fcd ,_agd ,_acc ,_fgb ,_fcg *_aa .Bitmap ;_bfbd ,_bea bool ;);_gdbd :=_aa .MakePixelSumTab8 ();for _cbb :=0;_cbb < len (_ddd .Values );_cbb ++{if _agd ,_acd =_abgde .GetBitmap (_cbb );_acd !=nil {return _fdd .Wrap (_acd ,_edff ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _abdf ,_acd =_bge .GetInt (_cbb );_acd !=nil {_fd .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_cbb ,_acd );
};if _acc ,_acd =_ddda .GetBitmap (_cbb );_acd !=nil {return _fdd .Wrap (_acd ,_edff ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _caad ,_ede ,_acd =_fce .GetGeometry (_cbb );_acd !=nil {return _fdd .Wrapf (_acd ,_edff ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_dbe :=len (_gac .UndilatedTemplates .Values );_bfbd =false ;_fcb :=_ee (_gac ,_agd );for _eb =_fcb .Next ();_eb > -1;{if _fgb ,_acd =_gac .UndilatedTemplates .GetBitmap (_eb );_acd !=nil {return _fdd .Wrap (_acd ,_edff ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _adfd ,_acd =_gac .FgTemplates .GetInt (_eb );_acd !=nil {_fd .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_eb ,_acd );
};if _fcg ,_acd =_gac .DilatedTemplates .GetBitmap (_eb );_acd !=nil {return _fdd .Wrap (_acd ,_edff ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _ecee ,_bgf ,_acd =_gac .CentroidPointsTemplates .GetGeometry (_eb );
_acd !=nil {return _fdd .Wrap (_acd ,_edff ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_bea ,_acd =_aa .RankHausTest (_agd ,_acc ,_fgb ,_fcg ,_caad -_ecee ,_ede -_bgf ,MaxDiffWidth ,MaxDiffHeight ,_abdf ,_adfd ,float32 (_gac .Settings .RankHaus ),_gdbd );
if _acd !=nil {return _fdd .Wrap (_acd ,_edff ,"");};if _bea {_bfbd =true ;if _acd =_gac .ClassIDs .Add (_eb );_acd !=nil {return _fdd .Wrap (_acd ,_edff ,"");};if _acd =_gac .ComponentPageNumbers .Add (_dca );_acd !=nil {return _fdd .Wrap (_acd ,_edff ,"");
};if _gac .Settings .KeepClassInstances {_gaf ,_bgee :=_gac .ClassInstances .GetBitmaps (_eb );if _bgee !=nil {return _fdd .Wrap (_bgee ,_edff ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _fcd ,_bgee =_ddd .GetBitmap (_cbb );_bgee !=nil {return _fdd .Wrap (_bgee ,_edff ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_gaf .Values =append (_gaf .Values ,_fcd );_fef ,_bgee :=_ecb .Get (_cbb );if _bgee !=nil {return _fdd .Wrap (_bgee ,_edff ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_gaf .Boxes =append (_gaf .Boxes ,_fef );};break ;};};if !_bfbd {if _acd =_gac .ClassIDs .Add (_dbe );_acd !=nil {return _fdd .Wrap (_acd ,_edff ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _acd =_gac .ComponentPageNumbers .Add (_dca );_acd !=nil {return _fdd .Wrap (_acd ,_edff ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_gcca :=&_aa .Bitmaps {};_fcd =_ddd .Values [_cbb ];_gcca .AddBitmap (_fcd );_eae ,_fdf :=_fcd .Width ,_fcd .Height ;_gac .TemplatesSize .Add (uint64 (_eae )*uint64 (_fdf ),_dbe );_adc ,_dbg :=_ecb .Get (_cbb );if _dbg !=nil {return _fdd .Wrap (_dbg ,_edff ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_gcca .AddBox (_adc );_gac .ClassInstances .AddBitmaps (_gcca );_gac .CentroidPointsTemplates .AddPoint (_caad ,_ede );_gac .UndilatedTemplates .AddBitmap (_agd );_gac .DilatedTemplates .AddBitmap (_acc );_gac .FgTemplates .AddInt (_abdf );};};_gac .NumberOfClasses =len (_gac .UndilatedTemplates .Values );
return nil ;};type Classer struct{BaseIndex int ;Settings Settings ;ComponentsNumber *_ad .IntSlice ;TemplateAreas *_ad .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_aa .BitmapsArray ;UndilatedTemplates *_aa .Bitmaps ;
DilatedTemplates *_aa .Bitmaps ;TemplatesSize _ad .IntsMap ;FgTemplates *_ad .NumSlice ;CentroidPoints *_aa .Points ;CentroidPointsTemplates *_aa .Points ;ClassIDs *_ad .IntSlice ;ComponentPageNumbers *_ad .IntSlice ;PtaUL *_aa .Points ;PtaLL *_aa .Points ;
};func (_ge *Classer )getULCorners (_dcd *_aa .Bitmap ,_ab *_aa .Boxes )error {const _dg ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _dcd ==nil {return _fdd .Error (_dg ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};if _ab ==nil {return _fdd .Error (_dg ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _ge .PtaUL ==nil {_ge .PtaUL =&_aa .Points {};};_dd :=len (*_ab );var (_ec ,_gf ,_fe ,_ag int ;_bce ,_ccb ,_adf ,_cag float32 ;_ac error ;_gfa *_ae .Rectangle ;
_cb *_aa .Bitmap ;_bdg _ae .Point ;);for _cbf :=0;_cbf < _dd ;_cbf ++{_ec =_ge .BaseIndex +_cbf ;if _bce ,_ccb ,_ac =_ge .CentroidPoints .GetGeometry (_ec );_ac !=nil {return _fdd .Wrap (_ac ,_dg ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");
};if _gf ,_ac =_ge .ClassIDs .Get (_ec );_ac !=nil {return _fdd .Wrap (_ac ,_dg ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");};if _adf ,_cag ,_ac =_ge .CentroidPointsTemplates .GetGeometry (_gf );_ac !=nil {return _fdd .Wrap (_ac ,_dg ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");
};_dgg :=_adf -_bce ;_feg :=_cag -_ccb ;if _dgg >=0{_fe =int (_dgg +0.5);}else {_fe =int (_dgg -0.5);};if _feg >=0{_ag =int (_feg +0.5);}else {_ag =int (_feg -0.5);};if _gfa ,_ac =_ab .Get (_cbf );_ac !=nil {return _fdd .Wrap (_ac ,_dg ,"");};_acg ,_geg :=_gfa .Min .X ,_gfa .Min .Y ;
_cb ,_ac =_ge .UndilatedTemplates .GetBitmap (_gf );if _ac !=nil {return _fdd .Wrap (_ac ,_dg ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_bdg ,_ac =_bed (_dcd ,_acg ,_geg ,_fe ,_ag ,_cb );if _ac !=nil {return _fdd .Wrap (_ac ,_dg ,"");};_ge .PtaUL .AddPoint (float32 (_acg -_fe +_bdg .X ),float32 (_geg -_ag +_bdg .Y ));};return nil ;};func (_cbgb *Settings )SetDefault (){if _cbgb .MaxCompWidth ==0{switch _cbgb .Components {case _aa .ComponentConn :_cbgb .MaxCompWidth =MaxConnCompWidth ;
case _aa .ComponentCharacters :_cbgb .MaxCompWidth =MaxCharCompWidth ;case _aa .ComponentWords :_cbgb .MaxCompWidth =MaxWordCompWidth ;};};if _cbgb .MaxCompHeight ==0{_cbgb .MaxCompHeight =MaxCompHeight ;};if _cbgb .Thresh ==0.0{_cbgb .Thresh =0.9;};if _cbgb .WeightFactor ==0.0{_cbgb .WeightFactor =0.75;
};if _cbgb .RankHaus ==0.0{_cbgb .RankHaus =0.97;};if _cbgb .SizeHaus ==0{_cbgb .SizeHaus =2;};};func DefaultSettings ()Settings {_bcad :=&Settings {};_bcad .SetDefault ();return *_bcad };func (_ced *Classer )classifyRankHaus (_dea *_aa .Boxes ,_gga *_aa .Bitmaps ,_beg int )error {const _bef ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";
if _dea ==nil {return _fdd .Error (_bef ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};if _gga ==nil {return _fdd .Error (_bef ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};_bg :=len (_gga .Values );if _bg ==0{return _fdd .Error (_bef ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");};_gdf :=_gga .CountPixels ();_caa :=_ced .Settings .SizeHaus ;_dde :=_aa .SelCreateBrick (_caa ,_caa ,_caa /2,_caa /2,_aa .SelHit );
_bddd :=&_aa .Bitmaps {Values :make ([]*_aa .Bitmap ,_bg )};_ggb :=&_aa .Bitmaps {Values :make ([]*_aa .Bitmap ,_bg )};var (_cbg ,_afaa ,_ece *_aa .Bitmap ;_ded error ;);for _cga :=0;_cga < _bg ;_cga ++{_cbg ,_ded =_gga .GetBitmap (_cga );if _ded !=nil {return _fdd .Wrap (_ded ,_bef ,"");
};_afaa ,_ded =_cbg .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);if _ded !=nil {return _fdd .Wrap (_ded ,_bef ,"");};_ece ,_ded =_aa .Dilate (nil ,_afaa ,_dde );if _ded !=nil {return _fdd .Wrap (_ded ,_bef ,"");};_bddd .Values [_bg ]=_afaa ;
_ggb .Values [_bg ]=_ece ;};_deeb ,_ded :=_aa .Centroids (_bddd .Values );if _ded !=nil {return _fdd .Wrap (_ded ,_bef ,"");};if _ded =_deeb .Add (_ced .CentroidPoints );_ded !=nil {_fd .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");
};if _ced .Settings .RankHaus ==1.0{_ded =_ced .classifyRankHouseOne (_dea ,_gga ,_bddd ,_ggb ,_deeb ,_beg );}else {_ded =_ced .classifyRankHouseNonOne (_dea ,_gga ,_bddd ,_ggb ,_deeb ,_gdf ,_beg );};if _ded !=nil {return _fdd .Wrap (_ded ,_bef ,"");};
return nil ;};const (RankHaus Method =iota ;Correlation ;);