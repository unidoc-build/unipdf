//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_ga "bytes";_a "compress/gzip";_d "crypto";_bc "crypto/aes";_dc "crypto/cipher";_eac "crypto/rand";_fe "crypto/rsa";_aaa "crypto/sha512";_bb "crypto/x509";_de "encoding/base64";_ea "encoding/hex";_fc "encoding/json";_be "encoding/pem";
_cf "errors";_gc "fmt";_fa "github.com/unidoc/unipdf/v3/common";_f "io";_e "io/ioutil";_cb "net";_c "net/http";_af "os";_aa "path/filepath";_db "sort";_b "strings";_gg "sync";_cfe "time";);type meteredClient struct{_ad string ;_acc string ;_df *_c .Client ;
};func SetLicenseKey (content string ,customerName string )error {_cce ,_ddg :=_cfb (content );if _ddg !=nil {_fa .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_ddg );
return _ddg ;};if !_b .EqualFold (_cce .CustomerName ,customerName ){_fa .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",customerName ,_cce .CustomerName );
return _gc .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",customerName ,_cce .CustomerName );
};_ddg =_cce .Validate ();if _ddg !=nil {_fa .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_ddg );return _ddg ;
};_bbbg =&_cce ;return nil ;};func _gcc (_dbc *_c .Response )([]byte ,error ){var _fcea []byte ;_efgb ,_gad :=_fbb (_dbc );if _gad !=nil {return _fcea ,_gad ;};return _e .ReadAll (_efgb );};func (_fd *LicenseKey )isExpired ()bool {return _fd .getExpiryDateToCompare ().After (*_fd .ExpiresAt )};
func _efc (_fde ,_ggbf []byte )([]byte ,error ){_dfb ,_eecf :=_bc .NewCipher (_fde );if _eecf !=nil {return nil ,_eecf ;};_fdef :=make ([]byte ,_bc .BlockSize +len (_ggbf ));_gda :=_fdef [:_bc .BlockSize ];if _ ,_bdcd :=_f .ReadFull (_eac .Reader ,_gda );
_bdcd !=nil {return nil ,_bdcd ;};_bdcg :=_dc .NewCFBEncrypter (_dfb ,_gda );_bdcg .XORKeyStream (_fdef [_bc .BlockSize :],_ggbf );_dad :=make ([]byte ,_de .URLEncoding .EncodedLen (len (_fdef )));_de .URLEncoding .Encode (_dad ,_fdef );return _dad ,nil ;
};type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};type defaultStateHolder struct{};func _feee (_bebd ,_dbda []byte )([]byte ,error ){_bga :=make ([]byte ,_de .URLEncoding .DecodedLen (len (_dbda )));_dee ,_geda :=_de .URLEncoding .Decode (_bga ,_dbda );
if _geda !=nil {return nil ,_geda ;};_bga =_bga [:_dee ];_fgbd ,_geda :=_bc .NewCipher (_bebd );if _geda !=nil {return nil ,_geda ;};if len (_bga )< _bc .BlockSize {return nil ,_cf .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");
};_aaf :=_bga [:_bc .BlockSize ];_bga =_bga [_bc .BlockSize :];_efcc :=_dc .NewCFBDecrypter (_fgbd ,_aaf );_efcc .XORKeyStream (_bga ,_bga );return _bga ,nil ;};func (_eef defaultStateHolder )updateState (_dde ,_cac ,_agbg string ,_daa int ,_gf bool ,_aeg int ,_fcaf int ,_fgg _cfe .Time ,_ddf map[string ]int )error {_ceba :=_ccdf ();
if len (_ceba )==0{return _cf .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_ddff :=_aa .Join (_ceba ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_ebed :=_af .MkdirAll (_ddff ,0777);if _ebed !=nil {return _ebed ;
};if len (_dde )< 20{return _cf .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_edd :=[]byte (_dde );_ege :=_aaa .Sum512_256 (_edd [:20]);_fga :=_ea .EncodeToString (_ege [:]);_aca :=_aa .Join (_ddff ,_fga );var _gfe reportState ;
_gfe .Docs =int64 (_daa );_gfe .NumErrors =int64 (_fcaf );_gfe .LimitDocs =_gf ;_gfe .RemainingDocs =int64 (_aeg );_gfe .LastWritten =_cfe .Now ().UTC ();_gfe .LastReported =_fgg ;_gfe .Instance =_cac ;_gfe .Next =_agbg ;_gfe .Usage =_ddf ;_cbc ,_ebed :=_fc .Marshal (_gfe );
if _ebed !=nil {return _ebed ;};const _efe ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_cbc ,_ebed =_efc ([]byte (_efe ),_cbc );if _ebed !=nil {return _ebed ;};_ebed =_e .WriteFile (_aca ,_cbc ,0600);if _ebed !=nil {return _ebed ;
};return nil ;};const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;
LastReported _cfe .Time `json:"lr"`;LastWritten _cfe .Time `json:"lw"`;Usage map[string ]int `json:"u"`;};func _gbdf ()(_cb .IP ,error ){_dbd ,_fb :=_cb .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");if _fb !=nil {return nil ,_fb ;
};defer _dbd .Close ();_dcb :=_dbd .LocalAddr ().(*_cb .UDPAddr );return _dcb .IP ,nil ;};func GetLicenseKey ()*LicenseKey {if _bbbg ==nil {return nil ;};_fae :=*_bbbg ;return &_fae ;};func _cdg (_ce string ,_eb string )([]byte ,error ){var (_afg int ;
_ed string ;);for _ ,_ed =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _afg =_b .Index (_eb ,_ed );_afg !=-1{break ;};};if _afg ==-1{return nil ,_gc .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");
};_bed :=_eb [:_afg ];_eeg :=_afg +len (_ed );_bf :=_eb [_eeg :];if _bed ==""||_bf ==""{return nil ,_gc .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_gec ,_dbg :=_de .StdEncoding .DecodeString (_bed );if _dbg !=nil {return nil ,_gc .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_ef ,_dbg :=_de .StdEncoding .DecodeString (_bf );
if _dbg !=nil {return nil ,_gc .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_ba ,_ :=_be .Decode ([]byte (_ce ));if _ba ==nil {return nil ,_gc .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_cfa ,_dbg :=_bb .ParsePKIXPublicKey (_ba .Bytes );if _dbg !=nil {return nil ,_dbg ;};_ec :=_cfa .(*_fe .PublicKey );if _ec ==nil {return nil ,_gc .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_agb :=_aaa .New ();_agb .Write (_gec );_dbga :=_agb .Sum (nil );_dbg =_fe .VerifyPKCS1v15 (_ec ,_d .SHA512 ,_dbga ,_ef );if _dbg !=nil {return nil ,_dbg ;};return _gec ,nil ;};func _cfb (_ac string )(LicenseKey ,error ){var _ff LicenseKey ;_eed ,_ggcb :=_gab (_ggc ,_ee ,_ac );
if _ggcb !=nil {return _ff ,_ggcb ;};_cc ,_ggcb :=_cdg (_gacf ,_eed );if _ggcb !=nil {return _ff ,_ggcb ;};_ggcb =_fc .Unmarshal (_cc ,&_ff );if _ggcb !=nil {return _ff ,_ggcb ;};_ff .CreatedAt =_cfe .Unix (_ff .CreatedAtInt ,0);if _ff .ExpiresAtInt > 0{_bdc :=_cfe .Unix (_ff .ExpiresAtInt ,0);
_ff .ExpiresAt =&_bdc ;};return _ff ,nil ;};var _aeb stateLoader =defaultStateHolder {};var _ece =_cfe .Date (2010,1,1,0,0,0,0,_cfe .UTC );func _fbb (_eacf *_c .Response )(_f .ReadCloser ,error ){var _bffe error ;var _bcd _f .ReadCloser ;switch _b .ToLower (_eacf .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_bcd ,_bffe =_a .NewReader (_eacf .Body );
if _bffe !=nil {return _bcd ,_bffe ;};defer _bcd .Close ();default:_bcd =_eacf .Body ;};return _bcd ,nil ;};func _cag ()([]string ,[]string ,error ){_edea ,_cab :=_cb .Interfaces ();if _cab !=nil {return nil ,nil ,_cab ;};var _afcg []string ;var _fcb []string ;
for _ ,_ddfc :=range _edea {if _ddfc .Flags &_cb .FlagUp ==0||_ga .Equal (_ddfc .HardwareAddr ,nil ){continue ;};_caga ,_dcf :=_ddfc .Addrs ();if _dcf !=nil {return nil ,nil ,_dcf ;};_cbb :=0;for _ ,_cgc :=range _caga {var _edg _cb .IP ;switch _agf :=_cgc .(type ){case *_cb .IPNet :_edg =_agf .IP ;
case *_cb .IPAddr :_edg =_agf .IP ;};if _edg .IsLoopback (){continue ;};if _edg .To4 ()==nil {continue ;};_fcb =append (_fcb ,_edg .String ());_cbb ++;};_gfd :=_ddfc .HardwareAddr .String ();if _gfd !=""&&_cbb > 0{_afcg =append (_afcg ,_gfd );};};return _afcg ,_fcb ,nil ;
};const _gacf ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
var _bbbg =MakeUnlicensedKey ();const _dfd ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_fa .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_fa .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _gc .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _bbbg !=nil &&(_bbbg ._eca ||_bbbg .Tier !=LicenseTierUnlicensed ){_fa .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _cf .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_bca :=_age ();_bca ._acc =apiKey ;_afd ,_cde :=_bca .getStatus ();if _cde !=nil {return _cde ;};if !_afd .Valid {return _cf .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_gecc :=&LicenseKey {_eca :true ,_aae :apiKey };_bbbg =_gecc ;return nil ;};type meteredUsageCheckinForm struct{Instance string `json:"inst"`;Next string `json:"next"`;UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;
LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;Package string `json:"package"`;PackageVersion string `json:"package_version"`;Usage map[string ]int `json:"u"`;};type LicenseKey struct{LicenseId string `json:"license_id"`;CustomerId string `json:"customer_id"`;
CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _cfe .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;ExpiresAt *_cfe .Time `json:"-"`;ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;CreatorName string `json:"creator_name"`;
CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;UniHTML bool `json:"unihtml"`;Trial bool `json:"trial"`;_eca bool ;_aae string ;};func (_eede *LicenseKey )getExpiryDateToCompare ()_cfe .Time {if _eede .Trial {return _cfe .Now ().UTC ();
};return _fa .ReleasedAt ;};type meteredStatusForm struct{};func MakeUnlicensedKey ()*LicenseKey {_da :=LicenseKey {};_da .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";_da .Tier =LicenseTierUnlicensed ;_da .CreatedAt =_cfe .Now ().UTC ();
_da .CreatedAtInt =_da .CreatedAt .Unix ();return &_da ;};func (_gbd *meteredClient )getStatus ()(meteredStatusResp ,error ){var _afa meteredStatusResp ;_ab :=_gbd ._ad +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";
var _gac meteredStatusForm ;_ae ,_cfbc :=_fc .Marshal (_gac );if _cfbc !=nil {return _afa ,_cfbc ;};_ccd ,_cfbc :=_gdcb (_ae );if _cfbc !=nil {return _afa ,_cfbc ;};_ffe ,_cfbc :=_c .NewRequest ("\u0050\u004f\u0053\u0054",_ab ,_ccd );if _cfbc !=nil {return _afa ,_cfbc ;
};_ffe .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");_ffe .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_ffe .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_ffe .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_gbd ._acc );_aaee ,_cfbc :=_gbd ._df .Do (_ffe );if _cfbc !=nil {return _afa ,_cfbc ;
};defer _aaee .Body .Close ();if _aaee .StatusCode !=200{return _afa ,_gc .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_aaee .StatusCode );
};_gef ,_cfbc :=_gcc (_aaee );if _cfbc !=nil {return _afa ,_cfbc ;};_cfbc =_fc .Unmarshal (_gef ,&_afa );if _cfbc !=nil {return _afa ,_cfbc ;};return _afa ,nil ;};var _efg =&_gg .Mutex {};func TrackUse (useKey string ){if _bbbg ==nil {return ;};if !_bbbg ._eca ||len (_bbbg ._aae )==0{return ;
};if len (useKey )==0{return ;};_efg .Lock ();defer _efg .Unlock ();if _fdb ==nil {_fdb =map[string ]int {};};_fdb [useKey ]++;};var _fgf =_cfe .Date (2020,1,1,0,0,0,0,_cfe .UTC );type meteredUsageCheckinResp struct{Instance string `json:"inst"`;Next string `json:"next"`;
Success bool `json:"success"`;Message string `json:"message"`;RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;};func (_bea *LicenseKey )ToString ()string {if _bea ._eca {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};_ecd :=_gc .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_bea .LicenseId );_ecd +=_gc .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_bea .CustomerId );
_ecd +=_gc .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_bea .CustomerName );_ecd +=_gc .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_bea .Tier );_ecd +=_gc .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_fa .UtcTimeFormat (_bea .CreatedAt ));
if _bea .ExpiresAt ==nil {_ecd +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";}else {_ecd +=_gc .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_fa .UtcTimeFormat (*_bea .ExpiresAt ));
};_ecd +=_gc .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_bea .CreatorName ,_bea .CreatorEmail );return _ecd ;};type meteredStatusResp struct{Valid bool `json:"valid"`;OrgCredits int64 `json:"org_credits"`;
OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;};func _eg (_cd string ,_fg []byte )(string ,error ){_cbf ,_ :=_be .Decode ([]byte (_cd ));if _cbf ==nil {return "",_gc .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");
};_ge ,_dd :=_bb .ParsePKCS1PrivateKey (_cbf .Bytes );if _dd !=nil {return "",_dd ;};_fca :=_aaa .New ();_fca .Write (_fg );_cbe :=_fca .Sum (nil );_bbf ,_dd :=_fe .SignPKCS1v15 (_eac .Reader ,_ge ,_d .SHA512 ,_cbe );if _dd !=nil {return "",_dd ;};_ggb :=_de .StdEncoding .EncodeToString (_fg );
_ggb +="\u000a\u002b\u000a";_ggb +=_de .StdEncoding .EncodeToString (_bbf );return _ggb ,nil ;};func _age ()*meteredClient {_dce :=meteredClient {_ad :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_df :&_c .Client {Timeout :30*_cfe .Second }};
if _eea :=_af .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");_b .HasPrefix (_eea ,"\u0068\u0074\u0074\u0070"){_dce ._ad =_eea ;};return &_dce ;};const (_ggc ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
_ee ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";);func _dfc (_cdd string ,_egc string ,_gff bool )error {if _bbbg ==nil {return _cf .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");
};if !_bbbg ._eca ||len (_bbbg ._aae )==0{return nil ;};if len (_cdd )==0&&!_gff {return _cf .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_efg .Lock ();defer _efg .Unlock ();if _gcb ==nil {_gcb =map[string ]struct{}{};
};if _fdb ==nil {_fdb =map[string ]int {};};_bfa :=0;if !_gff {_ ,_cgb :=_gcb [_cdd ];if !_cgb {_gcb [_cdd ]=struct{}{};_bfa ++;};if _bfa ==0{return nil ;};_fdb [_egc ]++;};_ega :=_cfe .Now ();_fcae ,_fgb :=_aeb .loadState (_bbbg ._aae );if _fgb !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fgb );
return _fgb ;};if _fcae .Usage ==nil {_fcae .Usage =map[string ]int {};};for _adbc ,_cba :=range _fdb {_fcae .Usage [_adbc ]+=_cba ;};_fdb =nil ;const _adc =24*_cfe .Hour ;const _aad =3*24*_cfe .Hour ;if len (_fcae .Instance )==0||_ega .Sub (_fcae .LastReported )> _adc ||(_fcae .LimitDocs &&_fcae .RemainingDocs <=_fcae .Docs +int64 (_bfa ))||_gff {_gcbd ,_gecf :=_af .Hostname ();
if _gecf !=nil {return _gecf ;};_gdc :=_fcae .Docs ;_dged ,_fab ,_gecf :=_cag ();if _gecf !=nil {return _gecf ;};_db .Strings (_fab );_db .Strings (_dged );_bg ,_gecf :=_gbdf ();if _gecf !=nil {return _gecf ;};_faf :=false ;for _ ,_dca :=range _fab {if _dca ==_bg .String (){_faf =true ;
};};if !_faf {_fab =append (_fab ,_bg .String ());};_egd :=_age ();_egd ._acc =_bbbg ._aae ;_gdc +=int64 (_bfa );_gfc :=meteredUsageCheckinForm {Instance :_fcae .Instance ,Next :_fcae .Next ,UsageNumber :int (_gdc ),NumFailed :_fcae .NumErrors ,Hostname :_gcbd ,LocalIP :_b .Join (_fab ,"\u002c\u0020"),MacAddress :_b .Join (_dged ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_fa .Version ,Usage :_fcae .Usage };
if len (_dged )==0{_gfc .MacAddress ="\u006e\u006f\u006e\u0065";};_feed :=int64 (0);_acb :=_fcae .NumErrors ;_dgd :=_ega ;_bba :=0;_eeb :=_fcae .LimitDocs ;_afc ,_gecf :=_egd .checkinUsage (_gfc );if _gecf !=nil {if _ega .Sub (_fcae .LastReported )> _aad {return _cf .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");
};_feed =_gdc ;_acb ++;_dgd =_fcae .LastReported ;}else {_eeb =_afc .LimitDocs ;_bba =_afc .RemainingDocs ;_acb =0;};if len (_afc .Instance )==0{_afc .Instance =_gfc .Instance ;};if len (_afc .Next )==0{_afc .Next =_gfc .Next ;};_gecf =_aeb .updateState (_egd ._acc ,_afc .Instance ,_afc .Next ,int (_feed ),_eeb ,_bba ,int (_acb ),_dgd ,nil );
if _gecf !=nil {return _gecf ;};if !_afc .Success {return _gc .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_afc .Message );};}else {_fgb =_aeb .updateState (_bbbg ._aae ,_fcae .Instance ,_fcae .Next ,int (_fcae .Docs )+_bfa ,_fcae .LimitDocs ,int (_fcae .RemainingDocs ),int (_fcae .NumErrors ),_fcae .LastReported ,_fcae .Usage );
if _fgb !=nil {return _fgb ;};};return nil ;};func _gab (_bbc string ,_bbe string ,_ebg string )(string ,error ){_bd :=_b .Index (_ebg ,_bbc );if _bd ==-1{return "",_gc .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_cg :=_b .Index (_ebg ,_bbe );if _cg ==-1{return "",_gc .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_bdd :=_bd +len (_bbc )+1;return _ebg [_bdd :_cg -1],nil ;};var _ca =_cfe .Date (2019,6,6,0,0,0,0,_cfe .UTC );
func (_bff *LicenseKey )Validate ()error {if _bff ._eca {return nil ;};if len (_bff .LicenseId )< 10{return _gc .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");
};if len (_bff .CustomerId )< 10{return _gc .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");};if len (_bff .CustomerName )< 1{return _gc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");
};if _ece .After (_bff .CreatedAt ){return _gc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _bff .ExpiresAt ==nil {_bcc :=_bff .CreatedAt .AddDate (1,0,0);if _fgf .After (_bcc ){_bcc =_fgf ;};_bff .ExpiresAt =&_bcc ;};if _bff .CreatedAt .After (*_bff .ExpiresAt ){return _gc .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _bff .isExpired (){return _gc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020l\u0069\u0063\u0065ns\u0065\u003a\u0020\u0054\u0068\u0065 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072e\u0061\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064");
};if len (_bff .CreatorName )< 1{return _gc .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");};if len (_bff .CreatorEmail )< 1{return _gc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");
};if _bff .CreatedAt .After (_ca ){if !_bff .UniPDF {return _gc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");
};};return nil ;};type stateLoader interface{loadState (_dae string )(reportState ,error );updateState (_acg ,_aaea ,_baf string ,_adb int ,_dec bool ,_afdf int ,_agee int ,_fgd _cfe .Time ,_cgg map[string ]int )error ;};const _bfec ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";
func GetMeteredState ()(MeteredStatus ,error ){if _bbbg ==nil {return MeteredStatus {},_cf .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};if !_bbbg ._eca ||len (_bbbg ._aae )==0{return MeteredStatus {},_cf .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};_gbb ,_fee :=_aeb .loadState (_bbbg ._aae );if _fee !=nil {_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fee );return MeteredStatus {},_fee ;};if _gbb .Docs > 0{_ebe :=_dfc ("","",true );if _ebe !=nil {return MeteredStatus {},_ebe ;
};};_efg .Lock ();defer _efg .Unlock ();_aee :=_age ();_aee ._acc =_bbbg ._aae ;_gbf ,_fee :=_aee .getStatus ();if _fee !=nil {return MeteredStatus {},_fee ;};if !_gbf .Valid {return MeteredStatus {},_cf .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_gd :=MeteredStatus {OK :true ,Credits :_gbf .OrgCredits ,Used :_gbf .OrgUsed };return _gd ,nil ;};func _gdcb (_fcg []byte )(_f .Reader ,error ){_cgcb :=new (_ga .Buffer );_bdg :=_a .NewWriter (_cgcb );_bdg .Write (_fcg );_cbbe :=_bdg .Close ();if _cbbe !=nil {return nil ,_cbbe ;
};return _cgcb ,nil ;};func Track (docKey string ,useKey string )error {return _dfc (docKey ,useKey ,false )};func init (){_fgad :=_af .Getenv (_bfec );_ffa :=_af .Getenv (_dfd );if len (_fgad )==0||len (_ffa )==0{return ;};_bbcc ,_bcg :=_e .ReadFile (_fgad );
if _bcg !=nil {_fa .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_bcg );return ;};_bcg =SetLicenseKey (string (_bbcc ),_ffa );
if _bcg !=nil {_fa .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_bcg );return ;};};func (_cffe *meteredClient )checkinUsage (_fag meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_fag .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";
_fag .PackageVersion =_fa .Version ;var _ffea meteredUsageCheckinResp ;_bbce :=_cffe ._ad +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_ffd ,_ada :=_fc .Marshal (_fag );if _ada !=nil {return _ffea ,_ada ;
};_fef ,_ada :=_gdcb (_ffd );if _ada !=nil {return _ffea ,_ada ;};_fce ,_ada :=_c .NewRequest ("\u0050\u004f\u0053\u0054",_bbce ,_fef );if _ada !=nil {return _ffea ,_ada ;};_fce .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_fce .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_fce .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_fce .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_cffe ._acc );_ceb ,_ada :=_cffe ._df .Do (_fce );if _ada !=nil {return _ffea ,_ada ;};defer _ceb .Body .Close ();if _ceb .StatusCode !=200{return _ffea ,_gc .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_ceb .StatusCode );
};_ged ,_ada :=_gcc (_ceb );if _ada !=nil {return _ffea ,_ada ;};_ada =_fc .Unmarshal (_ged ,&_ffea );if _ada !=nil {return _ffea ,_ada ;};return _ffea ,nil ;};func (_dg defaultStateHolder )loadState (_dge string )(reportState ,error ){_bbb :=_ccdf ();
if len (_bbb )==0{return reportState {},_cf .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_abe :=_aa .Join (_bbb ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_bbeb :=_af .MkdirAll (_abe ,0777);if _bbeb !=nil {return reportState {},_bbeb ;
};if len (_dge )< 20{return reportState {},_cf .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_bdde :=[]byte (_dge );_gfa :=_aaa .Sum512_256 (_bdde [:20]);_gdg :=_ea .EncodeToString (_gfa [:]);_cacd :=_aa .Join (_abe ,_gdg );_def ,_bbeb :=_e .ReadFile (_cacd );
if _bbeb !=nil {if _af .IsNotExist (_bbeb ){return reportState {},nil ;};_fa .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bbeb );return reportState {},_cf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};const _cffc ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";
_def ,_bbeb =_feee ([]byte (_cffc ),_def );if _bbeb !=nil {return reportState {},_bbeb ;};var _bfe reportState ;_bbeb =_fc .Unmarshal (_def ,&_bfe );if _bbeb !=nil {_fa .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_bbeb );
return reportState {},_cf .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};return _bfe ,nil ;};var _gcb map[string ]struct{};func _ccdf ()string {_dcef :=_af .Getenv ("\u0048\u004f\u004d\u0045");if len (_dcef )==0{_dcef ,_ =_af .UserHomeDir ();
};return _dcef ;};var _fdb map[string ]int ;func (_cff *LicenseKey )IsLicensed ()bool {return _cff .Tier !=LicenseTierUnlicensed ||_cff ._eca };func (_beb *LicenseKey )TypeToString ()string {if _beb ._eca {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};if _beb .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";};if _beb .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";
};if _beb .Tier ==LicenseTierIndividual ||_beb .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};