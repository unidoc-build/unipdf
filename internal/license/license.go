//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_fa "bytes";_ac "compress/gzip";_d "crypto";_fe "crypto/aes";_ca "crypto/cipher";_dda "crypto/rand";_fda "crypto/rsa";_cd "crypto/sha512";_eag "crypto/x509";_gf "encoding/base64";_ea "encoding/hex";_db "encoding/json";_bd "encoding/pem";
_dd "errors";_dc "fmt";_bdc "github.com/unidoc/unipdf/v3/common";_f "io";_fd "io/ioutil";_ff "net";_ee "net/http";_g "os";_dg "path/filepath";_b "sort";_ec "strings";_e "sync";_c "time";);func (_eef *meteredClient )checkinUsage (_fbb meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_fbb .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";
_fbb .PackageVersion =_bdc .Version ;var _dce meteredUsageCheckinResp ;_adc :=_eef ._fb +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_fbca ,_eaa :=_db .Marshal (_fbb );if _eaa !=nil {return _dce ,_eaa ;
};_fbf ,_eaa :=_cef (_fbca );if _eaa !=nil {return _dce ,_eaa ;};_gaa ,_eaa :=_ee .NewRequest ("\u0050\u004f\u0053\u0054",_adc ,_fbf );if _eaa !=nil {return _dce ,_eaa ;};_gaa .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_gaa .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_gaa .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_gaa .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_eef ._bg );_ega ,_eaa :=_eef ._ebf .Do (_gaa );if _eaa !=nil {return _dce ,_eaa ;};defer _ega .Body .Close ();if _ega .StatusCode !=200{return _dce ,_dc .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_ega .StatusCode );
};_fde ,_eaa :=_bgg (_ega );if _eaa !=nil {return _dce ,_eaa ;};_eaa =_db .Unmarshal (_fde ,&_dce );if _eaa !=nil {return _dce ,_eaa ;};return _dce ,nil ;};func _ga (_bc string ,_ge []byte )(string ,error ){_bcb ,_ :=_bd .Decode ([]byte (_bc ));if _bcb ==nil {return "",_dc .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");
};_gec ,_gc :=_eag .ParsePKCS1PrivateKey (_bcb .Bytes );if _gc !=nil {return "",_gc ;};_df :=_cd .New ();_df .Write (_ge );_bcd :=_df .Sum (nil );_bf ,_gc :=_fda .SignPKCS1v15 (_dda .Reader ,_gec ,_d .SHA512 ,_bcd );if _gc !=nil {return "",_gc ;};_af :=_gf .StdEncoding .EncodeToString (_ge );
_af +="\u000a\u002b\u000a";_af +=_gf .StdEncoding .EncodeToString (_bf );return _af ,nil ;};func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_bdc .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_bdc .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _dc .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _abg !=nil &&(_abg ._ecb ||_abg .Tier !=LicenseTierUnlicensed ){_bdc .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _dd .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_agc :=_cab ();_agc ._bg =apiKey ;_afg ,_ab :=_agc .getStatus ();if _ab !=nil {return _ab ;};if !_afg .Valid {return _dd .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_eagg :=&LicenseKey {_ecb :true ,_eg :apiKey };_abg =_eagg ;return nil ;};func _bgc (_dbf string ,_eefe string ,_cgc bool )error {if _abg ==nil {return _dd .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");};if !_abg ._ecb ||len (_abg ._eg )==0{return nil ;
};if len (_dbf )==0&&!_cgc {return _dd .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_egc .Lock ();defer _egc .Unlock ();if _aad ==nil {_aad =map[string ]struct{}{};};if _fgf ==nil {_fgf =map[string ]int {};
};_eac :=0;if !_cgc {_ ,_ddc :=_aad [_dbf ];if !_ddc {_aad [_dbf ]=struct{}{};_eac ++;};if _eac ==0{return nil ;};_fgf [_eefe ]++;};_cgga :=_c .Now ();_daeb ,_daef :=_cfg .loadState (_abg ._eg );if _daef !=nil {_bdc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_daef );
return _daef ;};if _daeb .Usage ==nil {_daeb .Usage =map[string ]int {};};for _afe ,_fge :=range _fgf {_daeb .Usage [_afe ]+=_fge ;};_fgf =nil ;const _dee =24*_c .Hour ;const _dcg =3*24*_c .Hour ;if len (_daeb .Instance )==0||_cgga .Sub (_daeb .LastReported )> _dee ||(_daeb .LimitDocs &&_daeb .RemainingDocs <=_daeb .Docs +int64 (_eac ))||_cgc {_cba ,_dded :=_g .Hostname ();
if _dded !=nil {return _dded ;};_abe :=_daeb .Docs ;_dadb ,_bga ,_dded :=_acg ();if _dded !=nil {_bdc .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u006c\u006fc\u0061\u006c\u0020\u0061\u0064\u0064\u0072\u0065\u0073\u0073\u003a\u0020\u0025\u0073",_dded .Error ());
_dadb =append (_dadb ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");_bga =append (_bga ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");
}else {_b .Strings (_bga );_b .Strings (_dadb );_fbfe ,_fgc :=_gda ();if _fgc !=nil {return _fgc ;};_daa :=false ;for _ ,_gac :=range _bga {if _gac ==_fbfe .String (){_daa =true ;};};if !_daa {_bga =append (_bga ,_fbfe .String ());};};_gdg :=_cab ();_gdg ._bg =_abg ._eg ;
_abe +=int64 (_eac );_bcbb :=meteredUsageCheckinForm {Instance :_daeb .Instance ,Next :_daeb .Next ,UsageNumber :int (_abe ),NumFailed :_daeb .NumErrors ,Hostname :_cba ,LocalIP :_ec .Join (_bga ,"\u002c\u0020"),MacAddress :_ec .Join (_dadb ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_bdc .Version ,Usage :_daeb .Usage };
if len (_dadb )==0{_bcbb .MacAddress ="\u006e\u006f\u006e\u0065";};_dege :=int64 (0);_fbbc :=_daeb .NumErrors ;_dfg :=_cgga ;_aed :=0;_dcge :=_daeb .LimitDocs ;_afcc ,_dded :=_gdg .checkinUsage (_bcbb );if _dded !=nil {if _cgga .Sub (_daeb .LastReported )> _dcg {return _dd .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");
};_dege =_abe ;_fbbc ++;_dfg =_daeb .LastReported ;}else {_dcge =_afcc .LimitDocs ;_aed =_afcc .RemainingDocs ;_fbbc =0;};if len (_afcc .Instance )==0{_afcc .Instance =_bcbb .Instance ;};if len (_afcc .Next )==0{_afcc .Next =_bcbb .Next ;};_dded =_cfg .updateState (_gdg ._bg ,_afcc .Instance ,_afcc .Next ,int (_dege ),_dcge ,_aed ,int (_fbbc ),_dfg ,nil );
if _dded !=nil {return _dded ;};if !_afcc .Success {return _dc .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_afcc .Message );};}else {_daef =_cfg .updateState (_abg ._eg ,_daeb .Instance ,_daeb .Next ,int (_daeb .Docs )+_eac ,_daeb .LimitDocs ,int (_daeb .RemainingDocs ),int (_daeb .NumErrors ),_daeb .LastReported ,_daeb .Usage );
if _daef !=nil {return _daef ;};};return nil ;};var _cc =_c .Date (2020,1,1,0,0,0,0,_c .UTC );func (_ccg *LicenseKey )TypeToString ()string {if _ccg ._ecb {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};if _ccg .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";};if _ccg .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";
};if _ccg .Tier ==LicenseTierIndividual ||_ccg .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};func _ffc (_afb string ,_bfa string ,_aa string )(string ,error ){_gcbb :=_ec .Index (_aa ,_afb );
if _gcbb ==-1{return "",_dc .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_fg :=_ec .Index (_aa ,_bfa );if _fg ==-1{return "",_dc .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_gfc :=_gcbb +len (_afb )+1;return _aa [_gfc :_fg -1],nil ;};type meteredUsageCheckinForm struct{Instance string `json:"inst"`;Next string `json:"next"`;UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;
LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;Package string `json:"package"`;PackageVersion string `json:"package_version"`;Usage map[string ]int `json:"u"`;};func _daab (_gbee ,_bgd []byte )([]byte ,error ){_egac ,_caed :=_fe .NewCipher (_gbee );
if _caed !=nil {return nil ,_caed ;};_cgb :=make ([]byte ,_fe .BlockSize +len (_bgd ));_edc :=_cgb [:_fe .BlockSize ];if _ ,_faee :=_f .ReadFull (_dda .Reader ,_edc );_faee !=nil {return nil ,_faee ;};_aef :=_ca .NewCFBEncrypter (_egac ,_edc );_aef .XORKeyStream (_cgb [_fe .BlockSize :],_bgd );
_bea :=make ([]byte ,_gf .URLEncoding .EncodedLen (len (_cgb )));_gf .URLEncoding .Encode (_bea ,_cgb );return _bea ,nil ;};func (_ad *LicenseKey )isExpired ()bool {return _ad .getExpiryDateToCompare ().After (*_ad .ExpiresAt )};type LicenseKey struct{LicenseId string `json:"license_id"`;
CustomerId string `json:"customer_id"`;CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _c .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;ExpiresAt *_c .Time `json:"-"`;ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;
CreatorName string `json:"creator_name"`;CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;UniHTML bool `json:"unihtml"`;Trial bool `json:"trial"`;_ecb bool ;_eg string ;};func (_gfca *LicenseKey )ToString ()string {if _gfca ._ecb {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};_gbe :=_dc .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_gfca .LicenseId );_gbe +=_dc .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_gfca .CustomerId );
_gbe +=_dc .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_gfca .CustomerName );_gbe +=_dc .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_gfca .Tier );_gbe +=_dc .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_bdc .UtcTimeFormat (_gfca .CreatedAt ));
if _gfca .ExpiresAt ==nil {_gbe +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";}else {_gbe +=_dc .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_bdc .UtcTimeFormat (*_gfca .ExpiresAt ));
};_gbe +=_dc .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_gfca .CreatorName ,_gfca .CreatorEmail );return _gbe ;};type meteredStatusForm struct{};var _abg =MakeUnlicensedKey ();func _cef (_bgf []byte )(_f .Reader ,error ){_cdec :=new (_fa .Buffer );
_edf :=_ac .NewWriter (_cdec );_edf .Write (_bgf );_efd :=_edf .Close ();if _efd !=nil {return nil ,_efd ;};return _cdec ,nil ;};type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;
LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;LastReported _c .Time `json:"lr"`;LastWritten _c .Time `json:"lw"`;Usage map[string ]int `json:"u"`;};type meteredStatusResp struct{Valid bool `json:"valid"`;OrgCredits int64 `json:"org_credits"`;
OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;};func _fca (_ffbf *_ee .Response )(_f .ReadCloser ,error ){var _bab error ;var _ebe _f .ReadCloser ;switch _ec .ToLower (_ffbf .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_ebe ,_bab =_ac .NewReader (_ffbf .Body );
if _bab !=nil {return _ebe ,_bab ;};defer _ebe .Close ();default:_ebe =_ffbf .Body ;};return _ebe ,nil ;};const _dbd ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
func _acg ()([]string ,[]string ,error ){_geg ,_ddgb :=_ff .Interfaces ();if _ddgb !=nil {return nil ,nil ,_ddgb ;};var _dff []string ;var _gcg []string ;for _ ,_gba :=range _geg {if _gba .Flags &_ff .FlagUp ==0||_fa .Equal (_gba .HardwareAddr ,nil ){continue ;
};_bba ,_cfb :=_gba .Addrs ();if _cfb !=nil {return nil ,nil ,_cfb ;};_geb :=0;for _ ,_gdf :=range _bba {var _baf _ff .IP ;switch _gdc :=_gdf .(type ){case *_ff .IPNet :_baf =_gdc .IP ;case *_ff .IPAddr :_baf =_gdc .IP ;};if _baf .IsLoopback (){continue ;
};if _baf .To4 ()==nil {continue ;};_gcg =append (_gcg ,_baf .String ());_geb ++;};_deff :=_gba .HardwareAddr .String ();if _deff !=""&&_geb > 0{_dff =append (_dff ,_deff );};};return _dff ,_gcg ,nil ;};func (_fag *LicenseKey )IsLicensed ()bool {return _fag .Tier !=LicenseTierUnlicensed ||_fag ._ecb };
func _fbd ()string {_afd :=_g .Getenv ("\u0048\u004f\u004d\u0045");if len (_afd )==0{_afd ,_ =_g .UserHomeDir ();};return _afd ;};type meteredClient struct{_fb string ;_bg string ;_ebf *_ee .Client ;};func _cab ()*meteredClient {_dgb :=meteredClient {_fb :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_ebf :&_ee .Client {Timeout :30*_c .Second }};
if _fbc :=_g .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");_ec .HasPrefix (_fbc ,"\u0068\u0074\u0074\u0070"){_dgb ._fb =_fbc ;};return &_dgb ;};var _fgf map[string ]int ;
func GetMeteredState ()(MeteredStatus ,error ){if _abg ==nil {return MeteredStatus {},_dd .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};if !_abg ._ecb ||len (_abg ._eg )==0{return MeteredStatus {},_dd .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};_fdd ,_egd :=_cfg .loadState (_abg ._eg );if _egd !=nil {_bdc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_egd );return MeteredStatus {},_egd ;};if _fdd .Docs > 0{_eed :=_bgc ("","",true );if _eed !=nil {return MeteredStatus {},_eed ;
};};_egc .Lock ();defer _egc .Unlock ();_dbc :=_cab ();_dbc ._bg =_abg ._eg ;_cg ,_egd :=_dbc .getStatus ();if _egd !=nil {return MeteredStatus {},_egd ;};if !_cg .Valid {return MeteredStatus {},_dd .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_bda :=MeteredStatus {OK :true ,Credits :_cg .OrgCredits ,Used :_cg .OrgUsed };return _bda ,nil ;};const (_bb ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
_cde ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";);func GetLicenseKey ()*LicenseKey {if _abg ==nil {return nil ;
};_eaaa :=*_abg ;return &_eaaa ;};func SetLicenseKey (content string ,customerName string )error {_aae ,_gfe :=_dbe (content );if _gfe !=nil {_bdc .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_gfe );
return _gfe ;};if !_ec .EqualFold (_aae .CustomerName ,customerName ){_bdc .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",customerName ,_aae .CustomerName );
return _dc .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",customerName ,_aae .CustomerName );
};_gfe =_aae .Validate ();if _gfe !=nil {_bdc .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_gfe );
return _gfe ;};_abg =&_aae ;return nil ;};const _fdf ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";func _da (_afc string ,_dae string )([]byte ,error ){var (_dfe int ;_ce string ;);for _ ,_ce =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _dfe =_ec .Index (_dae ,_ce );
_dfe !=-1{break ;};};if _dfe ==-1{return nil ,_dc .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");};_de :=_dae [:_dfe ];
_cee :=_dfe +len (_ce );_ag :=_dae [_cee :];if _de ==""||_ag ==""{return nil ,_dc .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_bdcb ,_cb :=_gf .StdEncoding .DecodeString (_de );if _cb !=nil {return nil ,_dc .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_gcb ,_cb :=_gf .StdEncoding .DecodeString (_ag );
if _cb !=nil {return nil ,_dc .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_ed ,_ :=_bd .Decode ([]byte (_afc ));if _ed ==nil {return nil ,_dc .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_cac ,_cb :=_eag .ParsePKIXPublicKey (_ed .Bytes );if _cb !=nil {return nil ,_cb ;};_be :=_cac .(*_fda .PublicKey );if _be ==nil {return nil ,_dc .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_bcbg :=_cd .New ();_bcbg .Write (_bdcb );_bed :=_bcbg .Sum (nil );_cb =_fda .VerifyPKCS1v15 (_be ,_d .SHA512 ,_bed ,_gcb );if _cb !=nil {return nil ,_cb ;};return _bdcb ,nil ;};func Track (docKey string ,useKey string )error {return _bgc (docKey ,useKey ,false )};
func _bgg (_gca *_ee .Response )([]byte ,error ){var _cfa []byte ;_aee ,_ege :=_fca (_gca );if _ege !=nil {return _cfa ,_ege ;};return _fd .ReadAll (_aee );};func TrackUse (useKey string ){if _abg ==nil {return ;};if !_abg ._ecb ||len (_abg ._eg )==0{return ;
};if len (useKey )==0{return ;};_egc .Lock ();defer _egc .Unlock ();if _fgf ==nil {_fgf =map[string ]int {};};_fgf [useKey ]++;};var _cfg stateLoader =defaultStateHolder {};func (_efg *LicenseKey )getExpiryDateToCompare ()_c .Time {if _efg .Trial {return _c .Now ().UTC ();
};return _bdc .ReleasedAt ;};func MakeUnlicensedKey ()*LicenseKey {_ffb :=LicenseKey {};_ffb .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";_ffb .Tier =LicenseTierUnlicensed ;_ffb .CreatedAt =_c .Now ().UTC ();_ffb .CreatedAtInt =_ffb .CreatedAt .Unix ();
return &_ffb ;};func _ebea (_cge ,_cfad []byte )([]byte ,error ){_dgbd :=make ([]byte ,_gf .URLEncoding .DecodedLen (len (_cfad )));_dgbde ,_dbdg :=_gf .URLEncoding .Decode (_dgbd ,_cfad );if _dbdg !=nil {return nil ,_dbdg ;};_dgbd =_dgbd [:_dgbde ];_gebd ,_dbdg :=_fe .NewCipher (_cge );
if _dbdg !=nil {return nil ,_dbdg ;};if len (_dgbd )< _fe .BlockSize {return nil ,_dd .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");};_dfc :=_dgbd [:_fe .BlockSize ];_dgbd =_dgbd [_fe .BlockSize :];
_ffafd :=_ca .NewCFBDecrypter (_gebd ,_dfc );_ffafd .XORKeyStream (_dgbd ,_dgbd );return _dgbd ,nil ;};func (_fac defaultStateHolder )updateState (_aag ,_bcbf ,_caa string ,_ffa int ,_aff bool ,_gbdc int ,_fab int ,_bdg _c .Time ,_gfcae map[string ]int )error {_aac :=_fbd ();
if len (_aac )==0{return _dd .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_fae :=_dg .Join (_aac ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_ae :=_g .MkdirAll (_fae ,0777);if _ae !=nil {return _ae ;};
if len (_aag )< 20{return _dd .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_adf :=[]byte (_aag );_dde :=_cd .Sum512_256 (_adf [:20]);_ggc :=_ea .EncodeToString (_dde [:]);_cae :=_dg .Join (_fae ,_ggc );var _ecd reportState ;
_ecd .Docs =int64 (_ffa );_ecd .NumErrors =int64 (_fab );_ecd .LimitDocs =_aff ;_ecd .RemainingDocs =int64 (_gbdc );_ecd .LastWritten =_c .Now ().UTC ();_ecd .LastReported =_bdg ;_ecd .Instance =_bcbf ;_ecd .Next =_caa ;_ecd .Usage =_gfcae ;_aacg ,_ae :=_db .Marshal (_ecd );
if _ae !=nil {return _ae ;};const _cgg ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_aacg ,_ae =_daab ([]byte (_cgg ),_aacg );if _ae !=nil {return _ae ;};_ae =_fd .WriteFile (_cae ,_aacg ,0600);if _ae !=nil {return _ae ;
};return nil ;};var _agf =_c .Date (2010,1,1,0,0,0,0,_c .UTC );type meteredUsageCheckinResp struct{Instance string `json:"inst"`;Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;
};type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};func _dbe (_bbg string )(LicenseKey ,error ){var _ef LicenseKey ;_gb ,_agg :=_ffc (_bb ,_cde ,_bbg );if _agg !=nil {return _ef ,_agg ;};_eb ,_agg :=_da (_dbd ,_gb );if _agg !=nil {return _ef ,_agg ;
};_agg =_db .Unmarshal (_eb ,&_ef );if _agg !=nil {return _ef ,_agg ;};_ef .CreatedAt =_c .Unix (_ef .CreatedAtInt ,0);if _ef .ExpiresAtInt > 0{_eec :=_c .Unix (_ef .ExpiresAtInt ,0);_ef .ExpiresAt =&_eec ;};return _ef ,nil ;};const _affd ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";
func (_fea defaultStateHolder )loadState (_bff string )(reportState ,error ){_aab :=_fbd ();if len (_aab )==0{return reportState {},_dd .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_ba :=_dg .Join (_aab ,"\u002eu\u006e\u0069\u0064\u006f\u0063");
_agd :=_g .MkdirAll (_ba ,0777);if _agd !=nil {return reportState {},_agd ;};if len (_bff )< 20{return reportState {},_dd .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_bfdb :=[]byte (_bff );_caf :=_cd .Sum512_256 (_bfdb [:20]);
_ffaf :=_ea .EncodeToString (_caf [:]);_dad :=_dg .Join (_ba ,_ffaf );_gbb ,_agd :=_fd .ReadFile (_dad );if _agd !=nil {if _g .IsNotExist (_agd ){return reportState {},nil ;};_bdc .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_agd );return reportState {},_dd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};const _aca ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_gbb ,_agd =_ebea ([]byte (_aca ),_gbb );if _agd !=nil {return reportState {},_agd ;};var _ded reportState ;_agd =_db .Unmarshal (_gbb ,&_ded );if _agd !=nil {_bdc .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_agd );
return reportState {},_dd .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};return _ded ,nil ;};var _bbf =_c .Date (2019,6,6,0,0,0,0,_c .UTC );var _aad map[string ]struct{};func init (){_aade :=_g .Getenv (_fdf );_eabg :=_g .Getenv (_affd );
if len (_aade )==0||len (_eabg )==0{return ;};_eea ,_abec :=_fd .ReadFile (_aade );if _abec !=nil {_bdc .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_abec );
return ;};_abec =SetLicenseKey (string (_eea ),_eabg );if _abec !=nil {_bdc .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_abec );
return ;};};type stateLoader interface{loadState (_deg string )(reportState ,error );updateState (_fdb ,_cfd ,_eab string ,_dab int ,_ede bool ,_cgf int ,_deb int ,_gbd _c .Time ,_degd map[string ]int )error ;};func (_ade *LicenseKey )Validate ()error {if _ade ._ecb {return nil ;
};if len (_ade .LicenseId )< 10{return _dc .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");};if len (_ade .CustomerId )< 10{return _dc .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");
};if len (_ade .CustomerName )< 1{return _dc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");};if _agf .After (_ade .CreatedAt ){return _dc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _ade .ExpiresAt ==nil {_bfd :=_ade .CreatedAt .AddDate (1,0,0);if _cc .After (_bfd ){_bfd =_cc ;};_ade .ExpiresAt =&_bfd ;};if _ade .CreatedAt .After (*_ade .ExpiresAt ){return _dc .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _ade .isExpired (){return _dc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020l\u0069\u0063\u0065ns\u0065\u003a\u0020\u0054\u0068\u0065 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072e\u0061\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064");
};if len (_ade .CreatorName )< 1{return _dc .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");};if len (_ade .CreatorEmail )< 1{return _dc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");
};if _ade .CreatedAt .After (_bbf ){if !_ade .UniPDF {return _dc .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");
};};return nil ;};type defaultStateHolder struct{};var _egc =&_e .Mutex {};func _gda ()(_ff .IP ,error ){_cgd ,_ddg :=_ff .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");if _ddg !=nil {return nil ,_ddg ;};defer _cgd .Close ();
_abd :=_cgd .LocalAddr ().(*_ff .UDPAddr );return _abd .IP ,nil ;};func (_gce *meteredClient )getStatus ()(meteredStatusResp ,error ){var _gd meteredStatusResp ;_def :=_gce ._fb +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";
var _fc meteredStatusForm ;_edd ,_cf :=_db .Marshal (_fc );if _cf !=nil {return _gd ,_cf ;};_edb ,_cf :=_cef (_edd );if _cf !=nil {return _gd ,_cf ;};_gab ,_cf :=_ee .NewRequest ("\u0050\u004f\u0053\u0054",_def ,_edb );if _cf !=nil {return _gd ,_cf ;};
_gab .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");_gab .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_gab .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_gab .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_gce ._bg );_gg ,_cf :=_gce ._ebf .Do (_gab );if _cf !=nil {return _gd ,_cf ;
};defer _gg .Body .Close ();if _gg .StatusCode !=200{return _gd ,_dc .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_gg .StatusCode );
};_fee ,_cf :=_bgg (_gg );if _cf !=nil {return _gd ,_cf ;};_cf =_db .Unmarshal (_fee ,&_gd );if _cf !=nil {return _gd ,_cf ;};return _gd ,nil ;};const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";
LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);