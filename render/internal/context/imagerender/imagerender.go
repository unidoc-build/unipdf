//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_fd "errors";_e "fmt";_df "github.com/unidoc/freetype/raster";_fg "github.com/unidoc/unipdf/v3/common";_gg "github.com/unidoc/unipdf/v3/internal/transform";_gb "github.com/unidoc/unipdf/v3/render/internal/context";_fb "golang.org/x/image/draw";
_ggd "golang.org/x/image/font";_ce "golang.org/x/image/math/f64";_a "golang.org/x/image/math/fixed";_d "image";_b "image/color";_f "image/draw";_c "math";_ef "sort";_cb "strings";);func (_daa *Context )Width ()int {return _daa ._fca };func (_abb *Context )Scale (x ,y float64 ){_abb ._egc =_abb ._egc .Scale (x ,y )};
func (_geb *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_geb .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func (_ffe *Context )Fill (){_ffe .FillPreserve ();_ffe .ClearPath ()};func (_ggf *Context )SetLineWidth (lineWidth float64 ){_ggf ._dcc =lineWidth };
func _gc (_ad ,_ac ,_ab ,_bg ,_bga ,_cfc ,_gec ,_cff ,_gbe float64 )(_ceg ,_add float64 ){_fa :=1-_gbe ;_gbee :=_fa *_fa *_fa ;_fgf :=3*_fa *_fa *_gbe ;_efd :=3*_fa *_gbe *_gbe ;_gab :=_gbe *_gbe *_gbe ;_ceg =_gbee *_ad +_fgf *_ab +_efd *_bga +_gab *_gec ;
_add =_gbee *_ac +_fgf *_bg +_efd *_cfc +_gab *_cff ;return ;};type Context struct{_fca int ;_dcb int ;_bbf *_df .Rasterizer ;_fff *_d .RGBA ;_egfa *_d .Alpha ;_ebb _b .Color ;_bd _gb .Pattern ;_fgff _gb .Pattern ;_ffbg _df .Path ;_ed _df .Path ;_daf _gg .Point ;
_deb _gg .Point ;_agc bool ;_bgg []float64 ;_cce float64 ;_dcc float64 ;_ca _gb .LineCap ;_dgd _gb .LineJoin ;_dga _gb .FillRule ;_egc _gg .Matrix ;_fee _gb .TextState ;_ebd []*Context ;};func (_eab *Context )ShearAbout (sx ,sy ,x ,y float64 ){_eab .Translate (x ,y );
_eab .Shear (sx ,sy );_eab .Translate (-x ,-y );};func (_gfgc *Context )DrawStringAnchored (s string ,face _ggd .Face ,x ,y ,ax ,ay float64 ){_bef ,_cde :=_gfgc .MeasureString (s ,face );_gfgc .drawString (s ,face ,x -ax *_bef ,y +ay *_cde );};func _dcbd (_cffg float64 ,_daee stops )_b .Color {if _cffg <=0.0||len (_daee )==1{return _daee [0]._fbdb ;
};_bgfgc :=_daee [len (_daee )-1];if _cffg >=_bgfgc ._ggfb {return _bgfgc ._fbdb ;};for _efe ,_dgdc :=range _daee [1:]{if _cffg < _dgdc ._ggfb {_cffg =(_cffg -_daee [_efe ]._ggfb )/(_dgdc ._ggfb -_daee [_efe ]._ggfb );return _dccc (_daee [_efe ]._fbdb ,_dgdc ._fbdb ,_cffg );
};};return _bgfgc ._fbdb ;};func (_fbc *Context )Translate (x ,y float64 ){_fbc ._egc =_fbc ._egc .Translate (x ,y )};func (_efbb *Context )SetRGB255 (r ,g ,b int ){_efbb .SetRGBA255 (r ,g ,b ,255)};func (_cceb *Context )SetRGB (r ,g ,b float64 ){_cceb .SetRGBA (r ,g ,b ,1)};
func (_cfa *Context )ResetClip (){_cfa ._egfa =nil };func (_afg *Context )Image ()_d .Image {return _afg ._fff };func _fad (_dda ,_ddg ,_ee ,_dfd ,_bge ,_bc ,_aff ,_ae float64 )[]_gg .Point {_fae :=(_c .Hypot (_ee -_dda ,_dfd -_ddg )+_c .Hypot (_bge -_ee ,_bc -_dfd )+_c .Hypot (_aff -_bge ,_ae -_bc ));
_fe :=int (_fae +0.5);if _fe < 4{_fe =4;};_aeb :=float64 (_fe )-1;_eeg :=make ([]_gg .Point ,_fe );for _dae :=0;_dae < _fe ;_dae ++{_cca :=float64 (_dae )/_aeb ;_gag ,_gd :=_gc (_dda ,_ddg ,_ee ,_dfd ,_bge ,_bc ,_aff ,_ae ,_cca );_eeg [_dae ]=_gg .NewPoint (_gag ,_gd );
};return _eeg ;};func (_cfcf *Context )Shear (x ,y float64 ){_cfcf ._egc .Shear (x ,y )};func NewContext (width ,height int )*Context {return NewContextForRGBA (_d .NewRGBA (_d .Rect (0,0,width ,height )));};func _aged (_agd _d .Image ,_agdf repeatOp )_gb .Pattern {return &surfacePattern {_cfe :_agd ,_edc :_agdf };
};func _geccf (_dfgf _b .Color )_gb .Pattern {return &solidPattern {_gebbg :_dfgf }};func (_egd *Context )Stroke (){_egd .StrokePreserve ();_egd .ClearPath ()};func (_gfg *Context )Clear (){_ebe :=_d .NewUniform (_gfg ._ebb );_fb .Draw (_gfg ._fff ,_gfg ._fff .Bounds (),_ebe ,_d .Point {},_fb .Src );
};func (_dfa *Context )Rotate (angle float64 ){_dfa ._egc =_dfa ._egc .Rotate (angle )};func (_gba *Context )Clip (){_gba .ClipPreserve ();_gba .ClearPath ()};func (_abd *Context )SetLineJoin (lineJoin _gb .LineJoin ){_abd ._dgd =lineJoin };func _fecd (_eecd _df .Path ,_ecab []float64 ,_bfa float64 )_df .Path {return _bcb (_cgfaa (_ffac (_eecd ),_ecab ,_bfa ));
};func (_bdc *Context )Push (){_cbg :=*_bdc ;_bdc ._ebd =append (_bdc ._ebd ,&_cbg )};func _defc (_fdb float64 )float64 {return _fdb *_c .Pi /180};func _abf (_dfcb ,_bca uint32 ,_gdgd float64 )uint8 {return uint8 (int32 (float64 (_dfcb )*(1.0-_gdgd )+float64 (_bca )*_gdgd )>>8);
};func (_ace *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_ace ._agc {_ace .MoveTo (x1 ,y1 );};x1 ,y1 =_ace .Transform (x1 ,y1 );x2 ,y2 =_ace .Transform (x2 ,y2 );_dcd :=_gg .NewPoint (x1 ,y1 );_dee :=_gg .NewPoint (x2 ,y2 );_fge :=_aaag (_dcd );
_gee :=_aaag (_dee );_ace ._ffbg .Add2 (_fge ,_gee );_ace ._ed .Add2 (_fge ,_gee );_ace ._deb =_dee ;};func _cgdg (_agb _d .Image )*_d .RGBA {_ccgb :=_agb .Bounds ();_cbda :=_d .NewRGBA (_ccgb );_f .Draw (_cbda ,_ccgb ,_agb ,_ccgb .Min ,_f .Src );return _cbda ;
};func (_ada *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_ada ._agc {_ada .MoveTo (x1 ,y1 );};_def ,_cfcd :=_ada ._deb .X ,_ada ._deb .Y ;x1 ,y1 =_ada .Transform (x1 ,y1 );x2 ,y2 =_ada .Transform (x2 ,y2 );x3 ,y3 =_ada .Transform (x3 ,y3 );
_acef :=_fad (_def ,_cfcd ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_cega :=_aaag (_ada ._deb );for _ ,_fcaa :=range _acef [1:]{_gbg :=_aaag (_fcaa );if _gbg ==_cega {continue ;};_cega =_gbg ;_ada ._ffbg .Add1 (_gbg );_ada ._ed .Add1 (_gbg );_ada ._deb =_fcaa ;};};func (_dcdb *Context )capper ()_df .Capper {switch _dcdb ._ca {case _gb .LineCapButt :return _df .ButtCapper ;
case _gb .LineCapRound :return _df .RoundCapper ;case _gb .LineCapSquare :return _df .SquareCapper ;};return nil ;};func (_dcbg *Context )Transform (x ,y float64 )(_eca ,_baab float64 ){return _dcbg ._egc .Transform (x ,y );};func _ffd (_fadb float64 )_a .Int26_6 {return _a .Int26_6 (_fadb *64)};
type radialGradient struct{_bbe ,_bgfg ,_adc circle ;_eece ,_dbag float64 ;_gbc float64 ;_gfcc stops ;};func (_dfg *Context )stroke (_cbe _df .Painter ){_cegad :=_dfg ._ffbg ;if len (_dfg ._bgg )> 0{_cegad =_fecd (_cegad ,_dfg ._bgg ,_dfg ._cce );}else {_cegad =_bcb (_ffac (_cegad ));
};_bce :=_dfg ._bbf ;_bce .UseNonZeroWinding =true ;_bce .Clear ();_ffc :=(_dfg ._egc .ScalingFactorX ()+_dfg ._egc .ScalingFactorY ())/2;_bce .AddStroke (_cegad ,_ffd (_dfg ._dcc *_ffc ),_dfg .capper (),_dfg .joiner ());_bce .Rasterize (_cbe );};func (_dfde *linearGradient )AddColorStop (offset float64 ,color _b .Color ){_dfde ._cgg =append (_dfde ._cgg ,stop {_ggfb :offset ,_fbdb :color });
_ef .Sort (_dfde ._cgg );};func (_cgf *Context )StrokePattern ()_gb .Pattern {return _cgf ._fgff };func (_cgfa *Context )ClipPreserve (){_gbf :=_d .NewAlpha (_d .Rect (0,0,_cgfa ._fca ,_cgfa ._dcb ));_ddf :=_df .NewAlphaOverPainter (_gbf );_cgfa .fill (_ddf );
if _cgfa ._egfa ==nil {_cgfa ._egfa =_gbf ;}else {_gcda :=_d .NewAlpha (_d .Rect (0,0,_cgfa ._fca ,_cgfa ._dcb ));_fb .DrawMask (_gcda ,_gcda .Bounds (),_gbf ,_d .Point {},_cgfa ._egfa ,_d .Point {},_fb .Over );_cgfa ._egfa =_gcda ;};};func (_efa *Context )SetRGBA (r ,g ,b ,a float64 ){_efa ._ebb =_b .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_efa .setFillAndStrokeColor (_efa ._ebb );};func (_bgcc *Context )DrawCircle (x ,y ,r float64 ){_bgcc .NewSubPath ();_bgcc .DrawEllipticalArc (x ,y ,r ,r ,0,2*_c .Pi );_bgcc .ClosePath ();};func NewLinearGradient (x0 ,y0 ,x1 ,y1 float64 )_gb .Gradient {_bdfa :=&linearGradient {_bbff :x0 ,_acc :y0 ,_eec :x1 ,_cdgb :y1 };
return _bdfa ;};func (_cacc *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_bceb ,_ddfe ,_aab ,_cec :=x ,x +r ,x +w -r ,x +w ;_cd ,_fbd ,_cbd ,_bfg :=y ,y +r ,y +h -r ,y +h ;_cacc .NewSubPath ();_cacc .MoveTo (_ddfe ,_cd );_cacc .LineTo (_aab ,_cd );
_cacc .DrawArc (_aab ,_fbd ,r ,_defc (270),_defc (360));_cacc .LineTo (_cec ,_cbd );_cacc .DrawArc (_aab ,_cbd ,r ,_defc (0),_defc (90));_cacc .LineTo (_ddfe ,_bfg );_cacc .DrawArc (_ddfe ,_cbd ,r ,_defc (90),_defc (180));_cacc .LineTo (_bceb ,_fbd );_cacc .DrawArc (_ddfe ,_fbd ,r ,_defc (180),_defc (270));
_cacc .ClosePath ();};const (_fag repeatOp =iota ;_fgc ;_bgdf ;_gecc ;);func NewContextForRGBA (im *_d .RGBA )*Context {_ea :=im .Bounds ().Size ().X ;_ffff :=im .Bounds ().Size ().Y ;return &Context {_fca :_ea ,_dcb :_ffff ,_bbf :_df .NewRasterizer (_ea ,_ffff ),_fff :im ,_ebb :_b .Transparent ,_bd :_ba ,_fgff :_gaba ,_dcc :1,_dga :_gb .FillRuleWinding ,_egc :_gg .IdentityMatrix (),_fee :_gb .NewTextState ()};
};var (_ba =_geccf (_b .White );_gaba =_geccf (_b .Black ););func (_cdg *Context )drawRegularPolygon (_aag int ,_cad ,_dbc ,_cadg ,_cgd float64 ){_fbf :=2*_c .Pi /float64 (_aag );_cgd -=_c .Pi /2;if _aag %2==0{_cgd +=_fbf /2;};_cdg .NewSubPath ();for _dcf :=0;
_dcf < _aag ;_dcf ++{_egb :=_cgd +_fbf *float64 (_dcf );_cdg .LineTo (_cad +_cadg *_c .Cos (_egb ),_dbc +_cadg *_c .Sin (_egb ));};_cdg .ClosePath ();};func _ff (_cg ,_ffb ,_dg ,_dd ,_eb ,_dgb ,_gf float64 )(_ga ,_cf float64 ){_ag :=1-_gf ;_gfc :=_ag *_ag ;
_fc :=2*_ag *_gf ;_ebf :=_gf *_gf ;_ga =_gfc *_cg +_fc *_dg +_ebf *_eb ;_cf =_gfc *_ffb +_fc *_dd +_ebf *_dgb ;return ;};func _aaag (_edca _gg .Point )_a .Point26_6 {return _a .Point26_6 {X :_ffd (_edca .X ),Y :_ffd (_edca .Y )}};func _ddd (_ge ,_fda ,_da ,_af ,_fdf ,_afb float64 )[]_gg .Point {_dc :=(_c .Hypot (_da -_ge ,_af -_fda )+_c .Hypot (_fdf -_da ,_afb -_af ));
_eg :=int (_dc +0.5);if _eg < 4{_eg =4;};_gbd :=float64 (_eg )-1;_egf :=make ([]_gg .Point ,_eg );for _cc :=0;_cc < _eg ;_cc ++{_fcc :=float64 (_cc )/_gbd ;_bb ,_de :=_ff (_ge ,_fda ,_da ,_af ,_fdf ,_afb ,_fcc );_egf [_cc ]=_gg .NewPoint (_bb ,_de );};
return _egf ;};func (_aga *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_aga .MoveTo (x1 ,y1 );_aga .LineTo (x2 ,y2 )};func (_ecd *Context )RotateAbout (angle ,x ,y float64 ){_ecd .Translate (x ,y );_ecd .Rotate (angle );_ecd .Translate (-x ,-y );};func (_bae *Context )TextState ()*_gb .TextState {return &_bae ._fee };
func (_ccgf stops )Less (i ,j int )bool {return _ccgf [i ]._ggfb < _ccgf [j ]._ggfb };func (_dbd *Context )MeasureString (s string ,face _ggd .Face )(_bgf ,_ceab float64 ){_bgd :=&_ggd .Drawer {Face :face };_ceef :=_bgd .MeasureString (s );return float64 (_ceef >>6),_dbd ._fee .Tf .Size ;
};func (_baa *Context )NewSubPath (){if _baa ._agc {_baa ._ed .Add1 (_aaag (_baa ._daf ));};_baa ._agc =false ;};func (_adb *Context )SetMask (mask *_d .Alpha )error {if mask .Bounds ().Size ()!=_adb ._fff .Bounds ().Size (){return _fd .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_adb ._egfa =mask ;return nil ;};func (_faege *Context )SetMatrix (m _gg .Matrix ){_faege ._egc =m };func (_gbdf *Context )Matrix ()_gg .Matrix {return _gbdf ._egc };func (_beg *Context )SetPixel (x ,y int ){_beg ._fff .Set (x ,y ,_beg ._ebb )};func NewRadialGradient (x0 ,y0 ,r0 ,x1 ,y1 ,r1 float64 )_gb .Gradient {_fcba :=circle {x0 ,y0 ,r0 };
_fde :=circle {x1 ,y1 ,r1 };_gebb :=circle {x1 -x0 ,y1 -y0 ,r1 -r0 };_aggc :=_afc (_gebb ._ffa ,_gebb ._aee ,-_gebb ._efbc ,_gebb ._ffa ,_gebb ._aee ,_gebb ._efbc );var _bgdg float64 ;if _aggc !=0{_bgdg =1.0/_aggc ;};_bcebf :=-_fcba ._efbc ;_aac :=&radialGradient {_bbe :_fcba ,_bgfg :_fde ,_adc :_gebb ,_eece :_aggc ,_dbag :_bgdg ,_gbc :_bcebf };
return _aac ;};func (_bee *Context )StrokePreserve (){var _cege _df .Painter ;if _bee ._egfa ==nil {if _ggg ,_db :=_bee ._fgff .(*solidPattern );_db {_edd :=_df .NewRGBAPainter (_bee ._fff );_edd .SetColor (_ggg ._gebbg );_cege =_edd ;};};if _cege ==nil {_cege =_ede (_bee ._fff ,_bee ._egfa ,_bee ._fgff );
};_bee .stroke (_cege );};type repeatOp int ;type stops []stop ;func (_bea *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_bea .NewSubPath ();_bea .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_c .Pi );_bea .ClosePath ();};func (_daea *Context )DrawString (s string ,face _ggd .Face ,x ,y float64 ){_daea .DrawStringAnchored (s ,face ,x ,y ,0,0);
};type solidPattern struct{_gebbg _b .Color };func (_eeb *Context )ClearPath (){_eeb ._ffbg .Clear ();_eeb ._ed .Clear ();_eeb ._agc =false };type surfacePattern struct{_cfe _d .Image ;_edc repeatOp ;};func NewContextForImage (im _d .Image )*Context {return NewContextForRGBA (_cgdg (im ))};
func _edde (_cfafg string )(_egce ,_cddf ,_ggea ,_ccge int ){_cfafg =_cb .TrimPrefix (_cfafg ,"\u0023");_ccge =255;if len (_cfafg )==3{_baca :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_e .Sscanf (_cfafg ,_baca ,&_egce ,&_cddf ,&_ggea );_egce |=_egce <<4;
_cddf |=_cddf <<4;_ggea |=_ggea <<4;};if len (_cfafg )==6{_agge :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_e .Sscanf (_cfafg ,_agge ,&_egce ,&_cddf ,&_ggea );};if len (_cfafg )==8{_aad :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";
_e .Sscanf (_cfafg ,_aad ,&_egce ,&_cddf ,&_ggea ,&_ccge );};return ;};func (_gdg *Context )SetDashOffset (offset float64 ){_gdg ._cce =offset };type linearGradient struct{_bbff ,_acc ,_eec ,_cdgb float64 ;_cgg stops ;};func (_cdd stops )Swap (i ,j int ){_cdd [i ],_cdd [j ]=_cdd [j ],_cdd [i ]};
func (_efb *Context )SetColor (c _b .Color ){_efb .setFillAndStrokeColor (c )};func _bcb (_bbga [][]_gg .Point )_df .Path {var _ged _df .Path ;for _ ,_bbcd :=range _bbga {var _aegd _a .Point26_6 ;for _ceca ,_aaae :=range _bbcd {_cage :=_aaag (_aaae );if _ceca ==0{_ged .Start (_cage );
}else {_ebgg :=_cage .X -_aegd .X ;_cgff :=_cage .Y -_aegd .Y ;if _ebgg < 0{_ebgg =-_ebgg ;};if _cgff < 0{_cgff =-_cgff ;};if _ebgg +_cgff > 8{_ged .Add1 (_cage );};};_aegd =_cage ;};};return _ged ;};func (_eda *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_aa :=_b .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};
_eda ._fgff =_geccf (_aa );};type circle struct{_ffa ,_aee ,_efbc float64 };func (_bec *Context )drawString (_aec string ,_gggd _ggd .Face ,_ead ,_edac float64 ){_dfb :=&_ggd .Drawer {Src :_d .NewUniform (_bec ._ebb ),Face :_gggd ,Dot :_aaag (_gg .NewPoint (_ead ,_edac ))};
_aagf :=rune (-1);for _ ,_bba :=range _aec {if _aagf >=0{_dfb .Dot .X +=_dfb .Face .Kern (_aagf ,_bba );};_addb ,_cab ,_ceaa ,_gce ,_bdf :=_dfb .Face .Glyph (_dfb .Dot ,_bba );if !_bdf {continue ;};_fga :=_addb .Sub (_addb .Min );_efc :=_d .NewRGBA (_fga );
_fb .DrawMask (_efc ,_fga ,_dfb .Src ,_d .Point {},_cab ,_ceaa ,_fb .Over );var _ceed *_fb .Options ;if _bec ._egfa !=nil {_ceed =&_fb .Options {DstMask :_bec ._egfa ,DstMaskP :_d .Point {}};};_edf :=_bec ._egc .Clone ().Translate (float64 (_addb .Min .X ),float64 (_addb .Min .Y ));
_gaa :=_ce .Aff3 {_edf [0],_edf [3],_edf [6],_edf [1],_edf [4],_edf [7]};_fb .BiLinear .Transform (_bec ._fff ,_gaa ,_efc ,_fga ,_fb .Over ,_ceed );_dfb .Dot .X +=_gce ;_aagf =_bba ;};};func _dccc (_abdb ,_cda _b .Color ,_dfbb float64 )_b .Color {_cffc ,_ddag ,_afbf ,_gea :=_abdb .RGBA ();
_eed ,_efee ,_ebfg ,_cfaf :=_cda .RGBA ();return _b .RGBA {_abf (_cffc ,_eed ,_dfbb ),_abf (_ddag ,_efee ,_dfbb ),_abf (_afbf ,_ebfg ,_dfbb ),_abf (_gea ,_cfaf ,_dfbb )};};func _cgfaa (_ffag [][]_gg .Point ,_ece []float64 ,_dfe float64 )[][]_gg .Point {var _egde [][]_gg .Point ;
if len (_ece )==0{return _ffag ;};if len (_ece )==1{_ece =append (_ece ,_ece [0]);};for _ ,_bdac :=range _ffag {if len (_bdac )< 2{continue ;};_fgg :=_bdac [0];_dgf :=1;_cbdf :=0;_eadf :=0.0;if _dfe !=0{var _gaf float64 ;for _ ,_feeb :=range _ece {_gaf +=_feeb ;
};_dfe =_c .Mod (_dfe ,_gaf );if _dfe < 0{_dfe +=_gaf ;};for _efbf ,_adfg :=range _ece {_dfe -=_adfg ;if _dfe < 0{_cbdf =_efbf ;_eadf =_adfg +_dfe ;break ;};};};var _bbcf []_gg .Point ;_bbcf =append (_bbcf ,_fgg );for _dgf < len (_bdac ){_efac :=_ece [_cbdf ];
_cbeb :=_bdac [_dgf ];_dfae :=_fgg .Distance (_cbeb );_eee :=_efac -_eadf ;if _dfae > _eee {_dff :=_eee /_dfae ;_aceb :=_fgg .Interpolate (_cbeb ,_dff );_bbcf =append (_bbcf ,_aceb );if _cbdf %2==0&&len (_bbcf )> 1{_egde =append (_egde ,_bbcf );};_bbcf =nil ;
_bbcf =append (_bbcf ,_aceb );_eadf =0;_fgg =_aceb ;_cbdf =(_cbdf +1)%len (_ece );}else {_bbcf =append (_bbcf ,_cbeb );_fgg =_cbeb ;_eadf +=_dfae ;_dgf ++;};};if _cbdf %2==0&&len (_bbcf )> 1{_egde =append (_egde ,_bbcf );};};return _egde ;};func (_dbg *Context )DrawPoint (x ,y ,r float64 ){_dbg .Push ();
_deeg ,_gge :=_dbg .Transform (x ,y );_dbg .Identity ();_dbg .DrawCircle (_deeg ,_gge ,r );_dbg .Pop ();};func (_gbfd *radialGradient )ColorAt (x ,y int )_b .Color {if len (_gbfd ._gfcc )==0{return _b .Transparent ;};_fdc ,_fac :=float64 (x )+0.5-_gbfd ._bbe ._ffa ,float64 (y )+0.5-_gbfd ._bbe ._aee ;
_bac :=_afc (_fdc ,_fac ,_gbfd ._bbe ._efbc ,_gbfd ._adc ._ffa ,_gbfd ._adc ._aee ,_gbfd ._adc ._efbc );_eacf :=_afc (_fdc ,_fac ,-_gbfd ._bbe ._efbc ,_fdc ,_fac ,_gbfd ._bbe ._efbc );if _gbfd ._eece ==0{if _bac ==0{return _b .Transparent ;};_fcb :=0.5*_eacf /_bac ;
if _fcb *_gbfd ._adc ._efbc >=_gbfd ._gbc {return _dcbd (_fcb ,_gbfd ._gfcc );};return _b .Transparent ;};_aeed :=_afc (_bac ,_gbfd ._eece ,0,_bac ,-_eacf ,0);if _aeed >=0{_fbca :=_c .Sqrt (_aeed );_ffbc :=(_bac +_fbca )*_gbfd ._dbag ;_dbgg :=(_bac -_fbca )*_gbfd ._dbag ;
if _ffbc *_gbfd ._adc ._efbc >=_gbfd ._gbc {return _dcbd (_ffbc ,_gbfd ._gfcc );}else if _dbgg *_gbfd ._adc ._efbc >=_gbfd ._gbc {return _dcbd (_dbgg ,_gbfd ._gfcc );};};return _b .Transparent ;};func (_aef *Context )Pop (){_cga :=*_aef ;_dde :=_aef ._ebd ;
_aaa :=_dde [len (_dde )-1];*_aef =*_aaa ;_aef ._ffbg =_cga ._ffbg ;_aef ._ed =_cga ._ed ;_aef ._daf =_cga ._daf ;_aef ._deb =_cga ._deb ;_aef ._agc =_cga ._agc ;};func (_faeg *Context )MoveTo (x ,y float64 ){if _faeg ._agc {_faeg ._ed .Add1 (_aaag (_faeg ._daf ));
};x ,y =_faeg .Transform (x ,y );_eac :=_gg .NewPoint (x ,y );_bda :=_aaag (_eac );_faeg ._ffbg .Start (_bda );_faeg ._ed .Start (_bda );_faeg ._daf =_eac ;_faeg ._deb =_eac ;_faeg ._agc =true ;};func (_afff *Context )SetDash (dashes ...float64 ){_afff ._bgg =dashes };
func (_ebc *linearGradient )ColorAt (x ,y int )_b .Color {if len (_ebc ._cgg )==0{return _b .Transparent ;};_dba ,_dbca :=float64 (x ),float64 (y );_cffe ,_fdaa ,_dfbf ,_gaad :=_ebc ._bbff ,_ebc ._acc ,_ebc ._eec ,_ebc ._cdgb ;_deg ,_egcf :=_dfbf -_cffe ,_gaad -_fdaa ;
if _egcf ==0&&_deg !=0{return _dcbd ((_dba -_cffe )/_deg ,_ebc ._cgg );};if _deg ==0&&_egcf !=0{return _dcbd ((_dbca -_fdaa )/_egcf ,_ebc ._cgg );};_bbc :=_deg *(_dba -_cffe )+_egcf *(_dbca -_fdaa );if _bbc < 0{return _ebc ._cgg [0]._fbdb ;};_eag :=_c .Hypot (_deg ,_egcf );
_bbg :=((_dba -_cffe )*-_egcf +(_dbca -_fdaa )*_deg )/(_eag *_eag );_edafd ,_bgeb :=_cffe +_bbg *-_egcf ,_fdaa +_bbg *_deg ;_geeg :=_c .Hypot (_dba -_edafd ,_dbca -_bgeb )/_eag ;return _dcbd (_geeg ,_ebc ._cgg );};func (_ec *Context )ClosePath (){if _ec ._agc {_gfd :=_aaag (_ec ._daf );
_ec ._ffbg .Add1 (_gfd );_ec ._ed .Add1 (_gfd );_ec ._deb =_ec ._daf ;};};func (_age *radialGradient )AddColorStop (offset float64 ,color _b .Color ){_age ._gfcc =append (_age ._gfcc ,stop {_ggfb :offset ,_fbdb :color });_ef .Sort (_age ._gfcc );};func _ffac (_agaa _df .Path )[][]_gg .Point {var _ddgc [][]_gg .Point ;
var _aeg []_gg .Point ;var _ffcf ,_ddcg float64 ;for _abe :=0;_abe < len (_agaa );{switch _agaa [_abe ]{case 0:if len (_aeg )> 0{_ddgc =append (_ddgc ,_aeg );_aeg =nil ;};_feedd :=_fedf (_agaa [_abe +1]);_eddb :=_fedf (_agaa [_abe +2]);_aeg =append (_aeg ,_gg .NewPoint (_feedd ,_eddb ));
_ffcf ,_ddcg =_feedd ,_eddb ;_abe +=4;case 1:_baea :=_fedf (_agaa [_abe +1]);_geea :=_fedf (_agaa [_abe +2]);_aeg =append (_aeg ,_gg .NewPoint (_baea ,_geea ));_ffcf ,_ddcg =_baea ,_geea ;_abe +=4;case 2:_fadd :=_fedf (_agaa [_abe +1]);_ggab :=_fedf (_agaa [_abe +2]);
_dbe :=_fedf (_agaa [_abe +3]);_bgca :=_fedf (_agaa [_abe +4]);_accg :=_ddd (_ffcf ,_ddcg ,_fadd ,_ggab ,_dbe ,_bgca );_aeg =append (_aeg ,_accg ...);_ffcf ,_ddcg =_dbe ,_bgca ;_abe +=6;case 3:_egfg :=_fedf (_agaa [_abe +1]);_aggd :=_fedf (_agaa [_abe +2]);
_eagf :=_fedf (_agaa [_abe +3]);_baae :=_fedf (_agaa [_abe +4]);_egg :=_fedf (_agaa [_abe +5]);_aggce :=_fedf (_agaa [_abe +6]);_ageb :=_fad (_ffcf ,_ddcg ,_egfg ,_aggd ,_eagf ,_baae ,_egg ,_aggce );_aeg =append (_aeg ,_ageb ...);_ffcf ,_ddcg =_egg ,_aggce ;
_abe +=8;default:_fg .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_agaa );return _ddgc ;};};if len (_aeg )> 0{_ddgc =append (_ddgc ,_aeg );};return _ddgc ;};type patternPainter struct{_ebea *_d .RGBA ;
_cbed *_d .Alpha ;_defe _gb .Pattern ;};func (_gaaf *surfacePattern )ColorAt (x ,y int )_b .Color {_eede :=_gaaf ._cfe .Bounds ();switch _gaaf ._edc {case _fgc :if y >=_eede .Dy (){return _b .Transparent ;};case _bgdf :if x >=_eede .Dx (){return _b .Transparent ;
};case _gecc :if x >=_eede .Dx ()||y >=_eede .Dy (){return _b .Transparent ;};};x =x %_eede .Dx ()+_eede .Min .X ;y =y %_eede .Dy ()+_eede .Min .Y ;return _gaaf ._cfe .At (x ,y );};func (_efaf *Context )Identity (){_efaf ._egc =_gg .IdentityMatrix ()};
func (_cacg *Context )joiner ()_df .Joiner {switch _cacg ._dgd {case _gb .LineJoinBevel :return _df .BevelJoiner ;case _gb .LineJoinRound :return _df .RoundJoiner ;};return nil ;};func (_gga *Context )SetRGBA255 (r ,g ,b ,a int ){_gga ._ebb =_b .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};
_gga .setFillAndStrokeColor (_gga ._ebb );};func (_feed *Context )FillPreserve (){var _aba _df .Painter ;if _feed ._egfa ==nil {if _cgc ,_ccg :=_feed ._bd .(*solidPattern );_ccg {_beb :=_df .NewRGBAPainter (_feed ._fff );_beb .SetColor (_cgc ._gebbg );
_aba =_beb ;};};if _aba ==nil {_aba =_ede (_feed ._fff ,_feed ._egfa ,_feed ._bd );};_feed .fill (_aba );};func (_bgc *Context )setFillAndStrokeColor (_agcd _b .Color ){_bgc ._ebb =_agcd ;_bgc ._bd =_geccf (_agcd );_bgc ._fgff =_geccf (_agcd );};func _fedf (_bfef _a .Int26_6 )float64 {const _cbge ,_aceba =6,1<<6-1;
if _bfef >=0{return float64 (_bfef >>_cbge )+float64 (_bfef &_aceba )/64;};_bfef =-_bfef ;if _bfef >=0{return -(float64 (_bfef >>_cbge )+float64 (_bfef &_aceba )/64);};return 0;};func (_dca *Context )SetFillRule (fillRule _gb .FillRule ){_dca ._dga =fillRule };
func (_dab *Context )fill (_eff _df .Painter ){_defb :=_dab ._ed ;if _dab ._agc {_defb =make (_df .Path ,len (_dab ._ed ));copy (_defb ,_dab ._ed );_defb .Add1 (_aaag (_dab ._daf ));};_gecf :=_dab ._bbf ;_gecf .UseNonZeroWinding =_dab ._dga ==_gb .FillRuleWinding ;
_gecf .Clear ();_gecf .AddPath (_defb );_gecf .Rasterize (_eff );};func (_dccg stops )Len ()int {return len (_dccg )};func (_agg *Context )AsMask ()*_d .Alpha {_bfe :=_d .NewAlpha (_agg ._fff .Bounds ());_fb .Draw (_bfe ,_agg ._fff .Bounds (),_agg ._fff ,_d .Point {},_fb .Src );
return _bfe ;};func (_gff *Context )SetFillRGBA (r ,g ,b ,a float64 ){_aae :=_b .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_gff ._ebb =_aae ;_gff ._bd =_geccf (_aae );};func (_edg *Context )LineWidth ()float64 {return _edg ._dcc };
func (_gcd *Context )SetFillStyle (pattern _gb .Pattern ){if _cea ,_bdg :=pattern .(*solidPattern );_bdg {_gcd ._ebb =_cea ._gebbg ;};_gcd ._bd =pattern ;};func (_cfcc *Context )SetHexColor (x string ){_efg ,_feg ,_be ,_gfe :=_edde (x );_cfcc .SetRGBA255 (_efg ,_feg ,_be ,_gfe );
};func (_eegg *Context )SetLineCap (lineCap _gb .LineCap ){_eegg ._ca =lineCap };func _ede (_adda *_d .RGBA ,_gaab *_d .Alpha ,_fbfc _gb .Pattern )*patternPainter {return &patternPainter {_adda ,_gaab ,_fbfc };};func (_eba *Context )FillPattern ()_gb .Pattern {return _eba ._bd };
func _afc (_fbdc ,_bcg ,_dfc ,_cbb ,_gaaa ,_ecf float64 )float64 {return _fbdc *_cbb +_bcg *_gaaa +_dfc *_ecf ;};func (_edfe *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_edfe .Translate (x ,y );_edfe .Scale (sx ,sy );_edfe .Translate (-x ,-y );};func (_cac *Context )SetStrokeStyle (pattern _gb .Pattern ){_cac ._fgff =pattern };
func (_gaga *Context )DrawImage (im _d .Image ,x ,y int ){_gaga .DrawImageAnchored (im ,x ,y ,0,0)};func (_edaf *Context )LineTo (x ,y float64 ){if !_edaf ._agc {_edaf .MoveTo (x ,y );}else {x ,y =_edaf .Transform (x ,y );_ddc :=_gg .NewPoint (x ,y );_bf :=_aaag (_ddc );
_edaf ._ffbg .Add1 (_bf );_edaf ._ed .Add1 (_bf );_edaf ._deb =_ddc ;};};func (_fcaaa *solidPattern )ColorAt (x ,y int )_b .Color {return _fcaaa ._gebbg };func (_dafd *Context )DrawRectangle (x ,y ,w ,h float64 ){_dafd .NewSubPath ();_dafd .MoveTo (x ,y );
_dafd .LineTo (x +w ,y );_dafd .LineTo (x +w ,y +h );_dafd .LineTo (x ,y +h );_dafd .ClosePath ();};func (_dec *Context )InvertMask (){if _dec ._egfa ==nil {_dec ._egfa =_d .NewAlpha (_dec ._fff .Bounds ());}else {for _dfdg ,_fec :=range _dec ._egfa .Pix {_dec ._egfa .Pix [_dfdg ]=255-_fec ;
};};};type stop struct{_ggfb float64 ;_fbdb _b .Color ;};func (_dac *Context )Height ()int {return _dac ._dcb };func (_afbeg *Context )DrawImageAnchored (im _d .Image ,x ,y int ,ax ,ay float64 ){_ebbc :=im .Bounds ().Size ();x -=int (ax *float64 (_ebbc .X ));
y -=int (ay *float64 (_ebbc .Y ));_bcea :=_fb .BiLinear ;_cee :=_afbeg ._egc .Clone ().Translate (float64 (x ),float64 (y ));_cdbg :=_ce .Aff3 {_cee [0],_cee [3],_cee [6],_cee [1],_cee [4],_cee [7]};if _afbeg ._egfa ==nil {_bcea .Transform (_afbeg ._fff ,_cdbg ,im ,im .Bounds (),_fb .Over ,nil );
}else {_bcea .Transform (_afbeg ._fff ,_cdbg ,im ,im .Bounds (),_fb .Over ,&_fb .Options {DstMask :_afbeg ._egfa ,DstMaskP :_d .Point {}});};};func (_afe *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _gfb =16;for _cge :=0;_cge < _gfb ;
_cge ++{_ebg :=float64 (_cge +0)/_gfb ;_faec :=float64 (_cge +1)/_gfb ;_ggb :=angle1 +(angle2 -angle1 )*_ebg ;_afa :=angle1 +(angle2 -angle1 )*_faec ;_gece :=x +rx *_c .Cos (_ggb );_cecg :=y +ry *_c .Sin (_ggb );_gfbe :=x +rx *_c .Cos ((_ggb +_afa )/2);
_cag :=y +ry *_c .Sin ((_ggb +_afa )/2);_edgc :=x +rx *_c .Cos (_afa );_cdb :=y +ry *_c .Sin (_afa );_aca :=2*_gfbe -_gece /2-_edgc /2;_afbe :=2*_cag -_cecg /2-_cdb /2;if _cge ==0{if _afe ._agc {_afe .LineTo (_gece ,_cecg );}else {_afe .MoveTo (_gece ,_cecg );
};};_afe .QuadraticTo (_aca ,_afbe ,_edgc ,_cdb );};};func (_bbfb *patternPainter )Paint (ss []_df .Span ,done bool ){_efacg :=_bbfb ._ebea .Bounds ();for _ ,_cae :=range ss {if _cae .Y < _efacg .Min .Y {continue ;};if _cae .Y >=_efacg .Max .Y {return ;
};if _cae .X0 < _efacg .Min .X {_cae .X0 =_efacg .Min .X ;};if _cae .X1 > _efacg .Max .X {_cae .X1 =_efacg .Max .X ;};if _cae .X0 >=_cae .X1 {continue ;};const _ebgf =1<<16-1;_fce :=_cae .Y -_bbfb ._ebea .Rect .Min .Y ;_egbf :=_cae .X0 -_bbfb ._ebea .Rect .Min .X ;
_decd :=(_cae .Y -_bbfb ._ebea .Rect .Min .Y )*_bbfb ._ebea .Stride +(_cae .X0 -_bbfb ._ebea .Rect .Min .X )*4;_bdd :=_decd +(_cae .X1 -_cae .X0 )*4;for _bgdc ,_bbb :=_decd ,_egbf ;_bgdc < _bdd ;_bgdc ,_bbb =_bgdc +4,_bbb +1{_ggee :=_cae .Alpha ;if _bbfb ._cbed !=nil {_ggee =_ggee *uint32 (_bbfb ._cbed .AlphaAt (_bbb ,_fce ).A )/255;
if _ggee ==0{continue ;};};_efca :=_bbfb ._defe .ColorAt (_bbb ,_fce );_dgbd ,_cdba ,_fef ,_feee :=_efca .RGBA ();_ffec :=uint32 (_bbfb ._ebea .Pix [_bgdc +0]);_bff :=uint32 (_bbfb ._ebea .Pix [_bgdc +1]);_ecef :=uint32 (_bbfb ._ebea .Pix [_bgdc +2]);_cdae :=uint32 (_bbfb ._ebea .Pix [_bgdc +3]);
_cdbf :=(_ebgf -(_feee *_ggee /_ebgf ))*0x101;_bbfb ._ebea .Pix [_bgdc +0]=uint8 ((_ffec *_cdbf +_dgbd *_ggee )/_ebgf >>8);_bbfb ._ebea .Pix [_bgdc +1]=uint8 ((_bff *_cdbf +_cdba *_ggee )/_ebgf >>8);_bbfb ._ebea .Pix [_bgdc +2]=uint8 ((_ecef *_cdbf +_fef *_ggee )/_ebgf >>8);
_bbfb ._ebea .Pix [_bgdc +3]=uint8 ((_cdae *_cdbf +_feee *_ggee )/_ebgf >>8);};};};