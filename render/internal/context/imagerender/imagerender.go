//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_cg "errors";_be "fmt";_ed "github.com/golang/freetype/raster";_f "github.com/unidoc/unipdf/v3/common";_cf "github.com/unidoc/unipdf/v3/internal/transform";_d "github.com/unidoc/unipdf/v3/render/internal/context";_ee "golang.org/x/image/draw";_df "golang.org/x/image/font";_dg "golang.org/x/image/math/f64";_gb "golang.org/x/image/math/fixed";_bb "image";_e "image/color";_g "image/draw";_b "math";_ca "sort";_a "strings";);func (_bfcg *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _bgbbc =16;for _dff :=0;_dff < _bgbbc ;_dff ++{_feb :=float64 (_dff +0)/_bgbbc ;_ebf :=float64 (_dff +1)/_bgbbc ;_fge :=angle1 +(angle2 -angle1 )*_feb ;_eag :=angle1 +(angle2 -angle1 )*_ebf ;_gcbb :=x +rx *_b .Cos (_fge );_gba :=y +ry *_b .Sin (_fge );_fadg :=x +rx *_b .Cos ((_fge +_eag )/2);_dae :=y +ry *_b .Sin ((_fge +_eag )/2);_dag :=x +rx *_b .Cos (_eag );_bgeb :=y +ry *_b .Sin (_eag );_aebd :=2*_fadg -_gcbb /2-_dag /2;_fga :=2*_dae -_gba /2-_bgeb /2;if _dff ==0{if _bfcg ._dgda {_bfcg .LineTo (_gcbb ,_gba );}else {_bfcg .MoveTo (_gcbb ,_gba );};};_bfcg .QuadraticTo (_aebd ,_fga ,_dag ,_bgeb );};};func (_dac *Context )DrawImageAnchored (im _bb .Image ,x ,y int ,ax ,ay float64 ){_afd :=im .Bounds ().Size ();x -=int (ax *float64 (_afd .X ));y -=int (ay *float64 (_afd .Y ));_aff :=_ee .BiLinear ;_cgee :=_dac ._bade .Clone ();_cgee .Translate (float64 (x ),float64 (y ));_cgeeg :=_dg .Aff3 {_cgee [0],_cgee [3],_cgee [6],_cgee [1],_cgee [4],_cgee [7]};if _dac ._aeef ==nil {_aff .Transform (_dac ._af ,_cgeeg ,im ,im .Bounds (),_ee .Over ,nil );}else {_aff .Transform (_dac ._af ,_cgeeg ,im ,im .Bounds (),_ee .Over ,&_ee .Options {DstMask :_dac ._aeef ,DstMaskP :_bb .Point {}});};};func (_aca stops )Less (i ,j int )bool {return _aca [i ]._fgga < _aca [j ]._fgga };func (_ff *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_ff .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func _ddd (_cded _e .Color )_d .Pattern {return &solidPattern {_gaa :_cded }};func (_cdfd *Context )RotateAbout (angle ,x ,y float64 ){_cdfd .Translate (x ,y );_cdfd .Rotate (angle );_cdfd .Translate (-x ,-y );};func (_cge *Context )Clear (){_cdaf :=_bb .NewUniform (_cge ._ce );_ee .Draw (_cge ._af ,_cge ._af .Bounds (),_cdaf ,_bb .Point {},_ee .Src );};func (_ceg *Context )SetFillRule (fillRule _d .FillRule ){_ceg ._bad =fillRule };func NewContext (width ,height int )*Context {return NewContextForRGBA (_bb .NewRGBA (_bb .Rect (0,0,width ,height )));};func (_ega *linearGradient )ColorAt (x ,y int )_e .Color {if len (_ega ._bfcf )==0{return _e .Transparent ;};_bbd ,_cgcc :=float64 (x ),float64 (y );_dgdf ,_cdab ,_ggb ,_caa :=_ega ._ggcg ,_ega ._gfba ,_ega ._fcb ,_ega ._faee ;_eedf ,_gcf :=_ggb -_dgdf ,_caa -_cdab ;if _gcf ==0&&_eedf !=0{return _afccd ((_bbd -_dgdf )/_eedf ,_ega ._bfcf );};if _eedf ==0&&_gcf !=0{return _afccd ((_cgcc -_cdab )/_gcf ,_ega ._bfcf );};_gece :=_eedf *(_bbd -_dgdf )+_gcf *(_cgcc -_cdab );if _gece < 0{return _ega ._bfcf [0]._debe ;};_afcc :=_b .Hypot (_eedf ,_gcf );_gacd :=((_bbd -_dgdf )*-_gcf +(_cgcc -_cdab )*_eedf )/(_afcc *_afcc );_dfc ,_dca :=_dgdf +_gacd *-_gcf ,_cdab +_gacd *_eedf ;_cffa :=_b .Hypot (_bbd -_dfc ,_cgcc -_dca )/_afcc ;return _afccd (_cffa ,_ega ._bfcf );};func (_abe *Context )Fill (){_abe .FillPreserve ();_abe .ClearPath ()};func (_eaf *Context )Height ()int {return _eaf ._daa };func _fdeg (_beff [][]_cf .Point ,_fgda []float64 ,_aaae float64 )[][]_cf .Point {var _edfg [][]_cf .Point ;if len (_fgda )==0{return _beff ;};if len (_fgda )==1{_fgda =append (_fgda ,_fgda [0]);};for _ ,_edad :=range _beff {if len (_edad )< 2{continue ;};_bcfc :=_edad [0];_gacg :=1;_ggcgd :=0;_aeee :=0.0;if _aaae !=0{var _eceg float64 ;for _ ,_agdd :=range _fgda {_eceg +=_agdd ;};_aaae =_b .Mod (_aaae ,_eceg );if _aaae < 0{_aaae +=_eceg ;};for _dfaa ,_ddb :=range _fgda {_aaae -=_ddb ;if _aaae < 0{_ggcgd =_dfaa ;_aeee =_ddb +_aaae ;break ;};};};var _acga []_cf .Point ;_acga =append (_acga ,_bcfc );for _gacg < len (_edad ){_gcdd :=_fgda [_ggcgd ];_adde :=_edad [_gacg ];_cadcgc :=_bcfc .Distance (_adde );_cdc :=_gcdd -_aeee ;if _cadcgc > _cdc {_ddba :=_cdc /_cadcgc ;_ceb :=_bcfc .Interpolate (_adde ,_ddba );_acga =append (_acga ,_ceb );if _ggcgd %2==0&&len (_acga )> 1{_edfg =append (_edfg ,_acga );};_acga =nil ;_acga =append (_acga ,_ceb );_aeee =0;_bcfc =_ceb ;_ggcgd =(_ggcgd +1)%len (_fgda );}else {_acga =append (_acga ,_adde );_bcfc =_adde ;_aeee +=_cadcgc ;_gacg ++;};};if _ggcgd %2==0&&len (_acga )> 1{_edfg =append (_edfg ,_acga );};};return _edfg ;};func (_cadc *Context )SetRGB255 (r ,g ,b int ){_cadc .SetRGBA255 (r ,g ,b ,255)};func (_bbad *Context )StrokePreserve (){var _gbgd _ed .Painter ;if _bbad ._aeef ==nil {if _cbd ,_gac :=_bbad ._gg .(*solidPattern );_gac {_dfbd :=_ed .NewRGBAPainter (_bbad ._af );_dfbd .SetColor (_cbd ._gaa );_gbgd =_dfbd ;};};if _gbgd ==nil {_gbgd =_cfff (_bbad ._af ,_bbad ._aeef ,_bbad ._gg );};_bbad .stroke (_gbgd );};func (_ggd *Context )DrawStringAnchored (s string ,x ,y ,ax ,ay float64 ){_bbe ,_gbeec :=_ggd .MeasureString (s );x -=ax *_bbe ;y +=ay *_gbeec ;if _ggd ._aeef ==nil {_ggd .drawString (_ggd ._af ,s ,x ,y );}else {_aaa :=_bb .NewRGBA (_bb .Rect (0,0,_ggd ._cd ,_ggd ._daa ));_ggd .drawString (_aaa ,s ,x ,y );_ee .DrawMask (_ggd ._af ,_ggd ._af .Bounds (),_aaa ,_bb .Point {},_ggd ._aeef ,_bb .Point {},_ee .Over );};};func _afccd (_bec float64 ,_dfg stops )_e .Color {if _bec <=0.0||len (_dfg )==1{return _dfg [0]._debe ;};_aeeg :=_dfg [len (_dfg )-1];if _bec >=_aeeg ._fgga {return _aeeg ._debe ;};for _fgcb ,_dcgb :=range _dfg [1:]{if _bec < _dcgb ._fgga {_bec =(_bec -_dfg [_fgcb ]._fgga )/(_dcgb ._fgga -_dfg [_fgcb ]._fgga );return _adac (_dfg [_fgcb ]._debe ,_dcgb ._debe ,_bec );};};return _aeeg ._debe ;};func (_dbb *Context )SetColor (c _e .Color ){_dbb .setFillAndStrokeColor (c )};func (_aec *Context )NewSubPath (){if _aec ._dgda {_aec ._aeb .Add1 (_ffc (_aec ._bbab ));};_aec ._dgda =false ;};func (_baf *linearGradient )AddColorStop (offset float64 ,color _e .Color ){_baf ._bfcf =append (_baf ._bfcf ,stop {_fgga :offset ,_debe :color });_ca .Sort (_baf ._bfcf );};func (_edg *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_edg .NewSubPath ();_edg .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_b .Pi );_edg .ClosePath ();};func (_ded *Context )TextState ()*_d .TextState {return _ded ._agg };func (_bdfc *Context )DrawPoint (x ,y ,r float64 ){_bdfc .Push ();_cfe ,_ede :=_bdfc .Transform (x ,y );_bdfc .Identity ();_bdfc .DrawCircle (_cfe ,_ede ,r );_bdfc .Pop ();};var (_efd =_ddd (_e .White );_aee =_ddd (_e .Black ););func (_gec *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_gec ._dgda {_gec .MoveTo (x1 ,y1 );};x1 ,y1 =_gec .Transform (x1 ,y1 );x2 ,y2 =_gec .Transform (x2 ,y2 );_cac :=_cf .NewPoint (x1 ,y1 );_adg :=_cf .NewPoint (x2 ,y2 );_ccg :=_ffc (_cac );_ade :=_ffc (_adg );_gec ._gga .Add2 (_ccg ,_ade );_gec ._aeb .Add2 (_ccg ,_ade );_gec ._gef =_adg ;};type surfacePattern struct{_afb _bb .Image ;_gdeg repeatOp ;};func (_ace *Context )ClearPath (){_ace ._gga .Clear ();_ace ._aeb .Clear ();_ace ._dgda =false };func (_baa *Context )Translate (x ,y float64 ){_baa ._bade .Translate (x ,y )};func (_bae *Context )ClipPreserve (){_gcb :=_bb .NewAlpha (_bb .Rect (0,0,_bae ._cd ,_bae ._daa ));_abb :=_ed .NewAlphaOverPainter (_gcb );_bae .fill (_abb );if _bae ._aeef ==nil {_bae ._aeef =_gcb ;}else {_geb :=_bb .NewAlpha (_bb .Rect (0,0,_bae ._cd ,_bae ._daa ));_ee .DrawMask (_geb ,_geb .Bounds (),_gcb ,_bb .Point {},_bae ._aeef ,_bb .Point {},_ee .Over );_bae ._aeef =_geb ;};};func (_bfa *Context )DrawImage (im _bb .Image ,x ,y int ){_bfa .DrawImageAnchored (im ,x ,y ,0,0)};func (_cffg *Context )ClosePath (){if _cffg ._dgda {_bfc :=_ffc (_cffg ._bbab );_cffg ._gga .Add1 (_bfc );_cffg ._aeb .Add1 (_bfc );_cffg ._gef =_cffg ._bbab ;};};func (_cde *Context )FillPreserve (){var _cec _ed .Painter ;if _cde ._aeef ==nil {if _dbc ,_eee :=_cde ._gbfe .(*solidPattern );_eee {_gacc :=_ed .NewRGBAPainter (_cde ._af );_gacc .SetColor (_dbc ._gaa );_cec =_gacc ;};};if _cec ==nil {_cec =_cfff (_cde ._af ,_cde ._aeef ,_cde ._gbfe );};_cde .fill (_cec );};func _ab (_fa ,_dc ,_dde ,_ba ,_dfd ,_ac ,_cb ,_gbb ,_ga float64 )(_eb ,_abg float64 ){_dfb :=1-_ga ;_ef :=_dfb *_dfb *_dfb ;_fbf :=3*_dfb *_dfb *_ga ;_fe :=3*_dfb *_ga *_ga ;_fc :=_ga *_ga *_ga ;_eb =_ef *_fa +_fbf *_dde +_fe *_dfd +_fc *_cb ;_abg =_ef *_dc +_fbf *_ba +_fe *_ac +_fc *_gbb ;return ;};func (_abgd *Context )Clip (){_abgd .ClipPreserve ();_abgd .ClearPath ()};type solidPattern struct{_gaa _e .Color };func NewContextForImage (im _bb .Image )*Context {return NewContextForRGBA (_abdb (im ))};func (_bcf *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_bcf .MoveTo (x1 ,y1 );_bcf .LineTo (x2 ,y2 )};func (_bfd *Context )fill (_ged _ed .Painter ){_fgg :=_bfd ._aeb ;if _bfd ._dgda {_fgg =make (_ed .Path ,len (_bfd ._aeb ));copy (_fgg ,_bfd ._aeb );_fgg .Add1 (_ffc (_bfd ._bbab ));};_efg :=_bfd ._gbf ;_efg .UseNonZeroWinding =_bfd ._bad ==_d .FillRuleWinding ;_efg .Clear ();_efg .AddPath (_fgg );_efg .Rasterize (_ged );};func (_gbeed *Context )LineTo (x ,y float64 ){if !_gbeed ._dgda {_gbeed .MoveTo (x ,y );}else {x ,y =_gbeed .Transform (x ,y );_agd :=_cf .NewPoint (x ,y );_fef :=_ffc (_agd );_gbeed ._gga .Add1 (_fef );_gbeed ._aeb .Add1 (_fef );_gbeed ._gef =_agd ;};};func _gfg (_ffbf ,_fff ,_bfea ,_ada ,_bgbd ,_eec float64 )float64 {return _ffbf *_ada +_fff *_bgbd +_bfea *_eec ;};func (_cab *radialGradient )AddColorStop (offset float64 ,color _e .Color ){_cab ._bef =append (_cab ._bef ,stop {_fgga :offset ,_debe :color });_ca .Sort (_cab ._bef );};const (_aad repeatOp =iota ;_efeg ;_badd ;_ecegd ;);func (_afc *Context )DrawString (s string ,x ,y float64 ){_afc .DrawStringAnchored (s ,x ,y ,0,0)};func (_ecb *Context )stroke (_agge _ed .Painter ){_efcd :=_ecb ._gga ;if len (_ecb ._gbgb )> 0{_efcd =_acc (_efcd ,_ecb ._gbgb ,_ecb ._bga );}else {_efcd =_gfc (_bgdg (_efcd ));};_gae :=_ecb ._gbf ;_gae .UseNonZeroWinding =true ;_gae .Clear ();_gae .AddStroke (_efcd ,_daec (_ecb ._gea ),_ecb .capper (),_ecb .joiner ());_gae .Rasterize (_agge );};func _adc (_ddga string )(_edgg ,_geda ,_gce ,_abba int ){_ddga =_a .TrimPrefix (_ddga ,"\u0023");_abba =255;if len (_ddga )==3{_gffe :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_be .Sscanf (_ddga ,_gffe ,&_edgg ,&_geda ,&_gce );_edgg |=_edgg <<4;_geda |=_geda <<4;_gce |=_gce <<4;};if len (_ddga )==6{_gaf :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_be .Sscanf (_ddga ,_gaf ,&_edgg ,&_geda ,&_gce );};if len (_ddga )==8{_bbf :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_be .Sscanf (_ddga ,_bbf ,&_edgg ,&_geda ,&_gce ,&_abba );};return ;};func (_fad *Context )SetStrokeStyle (pattern _d .Pattern ){_fad ._gg =pattern };func _daec (_bfdc float64 )_gb .Int26_6 {return _gb .Int26_6 (_bfdc *64)};func (_bf *Context )SetLineCap (lineCap _d .LineCap ){_bf ._dfde =lineCap };func (_eeaf *Context )drawRegularPolygon (_fae int ,_ggae ,_efdb ,_ccf ,_feba float64 ){_cegg :=2*_b .Pi /float64 (_fae );_feba -=_b .Pi /2;if _fae %2==0{_feba +=_cegg /2;};_eeaf .NewSubPath ();for _cfcg :=0;_cfcg < _fae ;_cfcg ++{_gff :=_feba +_cegg *float64 (_cfcg );_eeaf .LineTo (_ggae +_ccf *_b .Cos (_gff ),_efdb +_ccf *_b .Sin (_gff ));};_eeaf .ClosePath ();};func (_acgc *Context )Identity (){_acgc ._bade =_cf .IdentityMatrix ()};func (_adb *Context )SetDash (dashes ...float64 ){_adb ._gbgb =dashes };func (_gdfa stops )Swap (i ,j int ){_gdfa [i ],_gdfa [j ]=_gdfa [j ],_gdfa [i ]};func (_cgcb *Context )SetRGBA255 (r ,g ,b ,a int ){_cgcb ._ce =_e .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_cgcb .setFillAndStrokeColor (_cgcb ._ce );};func _ffc (_febb _cf .Point )_gb .Point26_6 {return _gb .Point26_6 {X :_daec (_febb .X ),Y :_daec (_febb .Y )}};func (_eeb *Context )Stroke (){_eeb .StrokePreserve ();_eeb .ClearPath ()};func _bg (_fb ,_gf ,_ae ,_eg ,_de ,_db ,_cgc float64 )(_dd ,_edd float64 ){_cff :=1-_cgc ;_cc :=_cff *_cff ;_ag :=2*_cff *_cgc ;_deg :=_cgc *_cgc ;_dd =_cc *_fb +_ag *_ae +_deg *_de ;_edd =_cc *_gf +_ag *_eg +_deg *_db ;return ;};func _egbf (_dga _bb .Image ,_bgcf repeatOp )_d .Pattern {return &surfacePattern {_afb :_dga ,_gdeg :_bgcf };};func _acc (_gfff _ed .Path ,_afdb []float64 ,_bgca float64 )_ed .Path {return _gfc (_fdeg (_bgdg (_gfff ),_afdb ,_bgca ));};func _aeg (_fg ,_eea ,_ea ,_eac ,_aef ,_gbg float64 )[]_cf .Point {_gd :=(_b .Hypot (_ea -_fg ,_eac -_eea )+_b .Hypot (_aef -_ea ,_gbg -_eac ));_agc :=int (_gd +0.5);if _agc < 4{_agc =4;};_dgd :=float64 (_agc )-1;_fd :=make ([]_cf .Point ,_agc );for _bc :=0;_bc < _agc ;_bc ++{_ge :=float64 (_bc )/_dgd ;_gbe ,_gc :=_bg (_fg ,_eea ,_ea ,_eac ,_aef ,_gbg ,_ge );_fd [_bc ]=_cf .NewPoint (_gbe ,_gc );};return _fd ;};func (_cgef *Context )Transform (x ,y float64 )(_ebb ,_adeg float64 ){return _cgef ._bade .Transform (x ,y );};type Context struct{_cd int ;_daa int ;_gbf *_ed .Rasterizer ;_af *_bb .RGBA ;_aeef *_bb .Alpha ;_ce _e .Color ;_gbfe _d .Pattern ;_gg _d .Pattern ;_gga _ed .Path ;_aeb _ed .Path ;_bbab _cf .Point ;_gef _cf .Point ;_dgda bool ;_gbgb []float64 ;_bga float64 ;_gea float64 ;_dfde _d .LineCap ;_bcb _d .LineJoin ;_bad _d .FillRule ;_bade _cf .Matrix ;_agg *_d .TextState ;_ddf []*Context ;};func (_eae *Context )ShearAbout (sx ,sy ,x ,y float64 ){_eae .Translate (x ,y );_eae .Shear (sx ,sy );_eae .Translate (-x ,-y );};func (_dfba *Context )AsMask ()*_bb .Alpha {_dcd :=_bb .NewAlpha (_dfba ._af .Bounds ());_ee .Draw (_dcd ,_dfba ._af .Bounds (),_dfba ._af ,_bb .Point {},_ee .Src );return _dcd ;};func (_ffg *Context )MeasureString (s string )(_fdd ,_bcc float64 ){_dad :=&_df .Drawer {Face :_ffg ._agg .Tf .Face };_aggc :=_dad .MeasureString (s );return float64 (_aggc >>6),_ffg ._agg .Tf .Size ;};func (_efc *Context )SetRGBA (r ,g ,b ,a float64 ){_efc ._ce =_e .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_efc .setFillAndStrokeColor (_efc ._ce );};func (_ddeb *Context )Push (){_daed :=*_ddeb ;_ddeb ._ddf =append (_ddeb ._ddf ,&_daed )};func _degb (_abef float64 )float64 {return _abef *_b .Pi /180};func (_gdb *Context )SetRGB (r ,g ,b float64 ){_gdb .SetRGBA (r ,g ,b ,1)};func _beef (_acgb _gb .Int26_6 )float64 {const _babg ,_ebfd =6,1<<6-1;if _acgb >=0{return float64 (_acgb >>_babg )+float64 (_acgb &_ebfd )/64;};_acgb =-_acgb ;if _acgb >=0{return -(float64 (_acgb >>_babg )+float64 (_acgb &_ebfd )/64);};return 0;};func (_gaad *solidPattern )ColorAt (x ,y int )_e .Color {return _gaad ._gaa };type linearGradient struct{_ggcg ,_gfba ,_fcb ,_faee float64 ;_bfcf stops ;};func (_acf *Context )Image ()_bb .Image {return _acf ._af };func _adac (_aecd ,_egc _e .Color ,_bgdc float64 )_e .Color {_bdfb ,_acd ,_efgc ,_cabc :=_aecd .RGBA ();_afa ,_fefg ,_eegf ,_gfeg :=_egc .RGBA ();return _e .RGBA {_gdg (_bdfb ,_afa ,_bgdc ),_gdg (_acd ,_fefg ,_bgdc ),_gdg (_efgc ,_eegf ,_bgdc ),_gdg (_cabc ,_gfeg ,_bgdc )};};func (_bdbb *Context )Matrix ()_cf .Matrix {return _bdbb ._bade };func (_efge stops )Len ()int {return len (_efge )};func (_fag *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_fag ._dgda {_fag .MoveTo (x1 ,y1 );};_fca ,_cda :=_fag ._gef .X ,_fag ._gef .Y ;x1 ,y1 =_fag .Transform (x1 ,y1 );x2 ,y2 =_fag .Transform (x2 ,y2 );x3 ,y3 =_fag .Transform (x3 ,y3 );_fgd :=_gfd (_fca ,_cda ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_edf :=_ffc (_fag ._gef );for _ ,_fdc :=range _fgd [1:]{_gab :=_ffc (_fdc );if _gab ==_edf {continue ;};_edf =_gab ;_fag ._gga .Add1 (_gab );_fag ._aeb .Add1 (_gab );_fag ._gef =_fdc ;};};func _abdb (_gbba _bb .Image )*_bb .RGBA {_adbc :=_gbba .Bounds ();_ced :=_bb .NewRGBA (_adbc );_g .Draw (_ced ,_adbc ,_gbba ,_adbc .Min ,_g .Src );return _ced ;};func (_deb *Context )ResetClip (){_deb ._aeef =nil };func (_fbe *Context )DrawCircle (x ,y ,r float64 ){_fbe .NewSubPath ();_fbe .DrawEllipticalArc (x ,y ,r ,r ,0,2*_b .Pi );_fbe .ClosePath ();};type patternPainter struct{_abgg *_bb .RGBA ;_ffdb *_bb .Alpha ;_bfad _d .Pattern ;};func (_bfe *Context )SetMatrix (m _cf .Matrix ){_bfe ._bade =m };func (_egfe *Context )Scale (x ,y float64 ){_egfe ._bade .Scale (x ,y )};func (_cdf *Context )SetFillRGBA (r ,g ,b ,a float64 ){_egf :=_e .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_cdf ._ce =_egf ;_cdf ._gbfe =_ddd (_egf );};func (_cbf *Context )SetDashOffset (offset float64 ){_cbf ._bga =offset };type stops []stop ;func (_dgf *Context )Width ()int {return _dgf ._cd };func (_fgc *Context )Rotate (angle float64 ){_fgc ._bade .Rotate (angle )};func (_age *Context )capper ()_ed .Capper {switch _age ._dfde {case _d .LineCapButt :return _ed .ButtCapper ;case _d .LineCapRound :return _ed .RoundCapper ;case _d .LineCapSquare :return _ed .SquareCapper ;};return nil ;};func _fba (_cadcg ,_baba ,_ecd ,_gcd ,_fdce ,_gfe float64 )_d .Gradient {_cbdf :=circle {_cadcg ,_baba ,_ecd };_efe :=circle {_gcd ,_fdce ,_gfe };_agb :=circle {_gcd -_cadcg ,_fdce -_baba ,_gfe -_ecd };_acae :=_gfg (_agb ._afe ,_agb ._afga ,-_agb ._gcg ,_agb ._afe ,_agb ._afga ,_agb ._gcg );var _aga float64 ;if _acae !=0{_aga =1.0/_acae ;};_gdae :=-_cbdf ._gcg ;_aeaf :=&radialGradient {_gacb :_cbdf ,_fadf :_efe ,_dcaa :_agb ,_aegb :_acae ,_gda :_aga ,_gge :_gdae };return _aeaf ;};func _bce (_dda ,_fac ,_ffda ,_cbb float64 )_d .Gradient {_abdg :=&linearGradient {_ggcg :_dda ,_gfba :_fac ,_fcb :_ffda ,_faee :_cbb };return _abdg ;};func (_bab *Context )setFillAndStrokeColor (_aeff _e .Color ){_bab ._ce =_aeff ;_bab ._gbfe =_ddd (_aeff );_bab ._gg =_ddd (_aeff );};func (_ggc *Context )SetPixel (x ,y int ){_ggc ._af .Set (x ,y ,_ggc ._ce )};func (_agbd *surfacePattern )ColorAt (x ,y int )_e .Color {_agag :=_agbd ._afb .Bounds ();switch _agbd ._gdeg {case _efeg :if y >=_agag .Dy (){return _e .Transparent ;};case _badd :if x >=_agag .Dx (){return _e .Transparent ;};case _ecegd :if x >=_agag .Dx ()||y >=_agag .Dy (){return _e .Transparent ;};};x =x %_agag .Dx ()+_agag .Min .X ;y =y %_agag .Dy ()+_agag .Min .Y ;return _agbd ._afb .At (x ,y );};type circle struct{_afe ,_afga ,_gcg float64 };func _gfc (_gdec [][]_cf .Point )_ed .Path {var _cbcb _ed .Path ;for _ ,_ddec :=range _gdec {var _cegc _gb .Point26_6 ;for _dbbb ,_ead :=range _ddec {_aggg :=_ffc (_ead );if _dbbb ==0{_cbcb .Start (_aggg );}else {_faag :=_aggg .X -_cegc .X ;_faca :=_aggg .Y -_cegc .Y ;if _faag < 0{_faag =-_faag ;};if _faca < 0{_faca =-_faca ;};if _faag +_faca > 8{_cbcb .Add1 (_aggg );};};_cegc =_aggg ;};};return _cbcb ;};func (_cegf *Context )Pop (){_fde :=*_cegf ;_deae :=_cegf ._ddf ;_gcc :=_deae [len (_deae )-1];*_cegf =*_gcc ;_cegf ._gga =_fde ._gga ;_cegf ._aeb =_fde ._aeb ;_cegf ._bbab =_fde ._bbab ;_cegf ._gef =_fde ._gef ;_cegf ._dgda =_fde ._dgda ;_cegf ._agg =_fde ._agg ;};func (_bcfcb *patternPainter )Paint (ss []_ed .Span ,done bool ){_cba :=_bcfcb ._abgg .Bounds ();for _ ,_caf :=range ss {if _caf .Y < _cba .Min .Y {continue ;};if _caf .Y >=_cba .Max .Y {return ;};if _caf .X0 < _cba .Min .X {_caf .X0 =_cba .Min .X ;};if _caf .X1 > _cba .Max .X {_caf .X1 =_cba .Max .X ;};if _caf .X0 >=_caf .X1 {continue ;};const _bbdg =1<<16-1;_fbebc :=_caf .Y -_bcfcb ._abgg .Rect .Min .Y ;_fbeg :=_caf .X0 -_bcfcb ._abgg .Rect .Min .X ;_fee :=(_caf .Y -_bcfcb ._abgg .Rect .Min .Y )*_bcfcb ._abgg .Stride +(_caf .X0 -_bcfcb ._abgg .Rect .Min .X )*4;_fdb :=_fee +(_caf .X1 -_caf .X0 )*4;for _acbf ,_bccg :=_fee ,_fbeg ;_acbf < _fdb ;_acbf ,_bccg =_acbf +4,_bccg +1{_gaaf :=_caf .Alpha ;if _bcfcb ._ffdb !=nil {_gaaf =_gaaf *uint32 (_bcfcb ._ffdb .AlphaAt (_bccg ,_fbebc ).A )/255;if _gaaf ==0{continue ;};};_efdbc :=_bcfcb ._bfad .ColorAt (_bccg ,_fbebc );_cadf ,_afda ,_aegg ,_fffe :=_efdbc .RGBA ();_bcbb :=uint32 (_bcfcb ._abgg .Pix [_acbf +0]);_gbbe :=uint32 (_bcfcb ._abgg .Pix [_acbf +1]);_adge :=uint32 (_bcfcb ._abgg .Pix [_acbf +2]);_gabb :=uint32 (_bcfcb ._abgg .Pix [_acbf +3]);_efgg :=(_bbdg -(_fffe *_gaaf /_bbdg ))*0x101;_bcfcb ._abgg .Pix [_acbf +0]=uint8 ((_bcbb *_efgg +_cadf *_gaaf )/_bbdg >>8);_bcfcb ._abgg .Pix [_acbf +1]=uint8 ((_gbbe *_efgg +_afda *_gaaf )/_bbdg >>8);_bcfcb ._abgg .Pix [_acbf +2]=uint8 ((_adge *_efgg +_aegg *_gaaf )/_bbdg >>8);_bcfcb ._abgg .Pix [_acbf +3]=uint8 ((_gabb *_efgg +_fffe *_gaaf )/_bbdg >>8);};};};func (_aea *Context )InvertMask (){if _aea ._aeef ==nil {_aea ._aeef =_bb .NewAlpha (_aea ._af .Bounds ());}else {for _aa ,_cbfb :=range _aea ._aeef .Pix {_aea ._aeef .Pix [_aa ]=255-_cbfb ;};};};func _bgdg (_gecd _ed .Path )[][]_cf .Point {var _aaac [][]_cf .Point ;var _fcg []_cf .Point ;var _bbed ,_bced float64 ;for _fcae :=0;_fcae < len (_gecd );{switch _gecd [_fcae ]{case 0:if len (_fcg )> 0{_aaac =append (_aaac ,_fcg );_fcg =nil ;};_gaccd :=_beef (_gecd [_fcae +1]);_fed :=_beef (_gecd [_fcae +2]);_fcg =append (_fcg ,_cf .NewPoint (_gaccd ,_fed ));_bbed ,_bced =_gaccd ,_fed ;_fcae +=4;case 1:_ccfe :=_beef (_gecd [_fcae +1]);_gbff :=_beef (_gecd [_fcae +2]);_fcg =append (_fcg ,_cf .NewPoint (_ccfe ,_gbff ));_bbed ,_bced =_ccfe ,_gbff ;_fcae +=4;case 2:_dgb :=_beef (_gecd [_fcae +1]);_cca :=_beef (_gecd [_fcae +2]);_cgeg :=_beef (_gecd [_fcae +3]);_faeb :=_beef (_gecd [_fcae +4]);_geg :=_aeg (_bbed ,_bced ,_dgb ,_cca ,_cgeg ,_faeb );_fcg =append (_fcg ,_geg ...);_bbed ,_bced =_cgeg ,_faeb ;_fcae +=6;case 3:_afca :=_beef (_gecd [_fcae +1]);_baeg :=_beef (_gecd [_fcae +2]);_ddeg :=_beef (_gecd [_fcae +3]);_eda :=_beef (_gecd [_fcae +4]);_dgfd :=_beef (_gecd [_fcae +5]);_cdb :=_beef (_gecd [_fcae +6]);_cea :=_gfd (_bbed ,_bced ,_afca ,_baeg ,_ddeg ,_eda ,_dgfd ,_cdb );_fcg =append (_fcg ,_cea ...);_bbed ,_bced =_dgfd ,_cdb ;_fcae +=8;default:_f .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_gecd );return _aaac ;};};if len (_fcg )> 0{_aaac =append (_aaac ,_fcg );};return _aaac ;};func (_bac *Context )LineWidth ()float64 {return _bac ._gea };func (_faaa *Context )joiner ()_ed .Joiner {switch _faaa ._bcb {case _d .LineJoinBevel :return _ed .BevelJoiner ;case _d .LineJoinRound :return _ed .RoundJoiner ;};return nil ;};func (_faf *radialGradient )ColorAt (x ,y int )_e .Color {if len (_faf ._bef )==0{return _e .Transparent ;};_eafc ,_bda :=float64 (x )+0.5-_faf ._gacb ._afe ,float64 (y )+0.5-_faf ._gacb ._afga ;_bfab :=_gfg (_eafc ,_bda ,_faf ._gacb ._gcg ,_faf ._dcaa ._afe ,_faf ._dcaa ._afga ,_faf ._dcaa ._gcg );_aeae :=_gfg (_eafc ,_bda ,-_faf ._gacb ._gcg ,_eafc ,_bda ,_faf ._gacb ._gcg );if _faf ._aegb ==0{if _bfab ==0{return _e .Transparent ;};_dcgc :=0.5*_aeae /_bfab ;if _dcgc *_faf ._dcaa ._gcg >=_faf ._gge {return _afccd (_dcgc ,_faf ._bef );};return _e .Transparent ;};_febc :=_gfg (_bfab ,_faf ._aegb ,0,_bfab ,-_aeae ,0);if _febc >=0{_bdg :=_b .Sqrt (_febc );_fbeb :=(_bfab +_bdg )*_faf ._gda ;_eacc :=(_bfab -_bdg )*_faf ._gda ;if _fbeb *_faf ._dcaa ._gcg >=_faf ._gge {return _afccd (_fbeb ,_faf ._bef );}else if _eacc *_faf ._dcaa ._gcg >=_faf ._gge {return _afccd (_eacc ,_faf ._bef );};};return _e .Transparent ;};type repeatOp int ;func _gdg (_bdgd ,_adbd uint32 ,_egb float64 )uint8 {return uint8 (int32 (float64 (_bdgd )*(1.0-_egb )+float64 (_adbd )*_egb )>>8);};func (_dec *Context )SetHexColor (x string ){_ecg ,_eacb ,_bgd ,_bdb :=_adc (x );_dec .SetRGBA255 (_ecg ,_eacb ,_bgd ,_bdb );};func (_ffd *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_ffd .Translate (x ,y );_ffd .Scale (sx ,sy );_ffd .Translate (-x ,-y );};func (_bgbb *Context )SetLineJoin (lineJoin _d .LineJoin ){_bgbb ._bcb =lineJoin };func (_fab *Context )SetMask (mask *_bb .Alpha )error {if mask .Bounds ().Size ()!=_fab ._af .Bounds ().Size (){return _cg .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");};_fab ._aeef =mask ;return nil ;};func _cfff (_fabc *_bb .RGBA ,_befe *_bb .Alpha ,_gcddc _d .Pattern )*patternPainter {return &patternPainter {_fabc ,_befe ,_gcddc };};func NewContextForRGBA (im *_bb .RGBA )*Context {_cad :=im .Bounds ().Size ().X ;_gbee :=im .Bounds ().Size ().Y ;return &Context {_cd :_cad ,_daa :_gbee ,_gbf :_ed .NewRasterizer (_cad ,_gbee ),_af :im ,_ce :_e .Transparent ,_gbfe :_efd ,_gg :_aee ,_gea :1,_bad :_d .FillRuleWinding ,_bade :_cf .IdentityMatrix (),_agg :_d .NewTextState ()};};type stop struct{_fgga float64 ;_debe _e .Color ;};func _gfd (_dcf ,_gde ,_bgb ,_gdd ,_gbc ,_bba ,_ad ,_gbcg float64 )[]_cf .Point {_da :=(_b .Hypot (_bgb -_dcf ,_gdd -_gde )+_b .Hypot (_gbc -_bgb ,_bba -_gdd )+_b .Hypot (_ad -_gbc ,_gbcg -_bba ));_faa :=int (_da +0.5);if _faa < 4{_faa =4;};_bbc :=float64 (_faa )-1;_gbcf :=make ([]_cf .Point ,_faa );for _eeg :=0;_eeg < _faa ;_eeg ++{_bd :=float64 (_eeg )/_bbc ;_bdf ,_bee :=_ab (_dcf ,_gde ,_bgb ,_gdd ,_gbc ,_bba ,_ad ,_gbcg ,_bd );_gbcf [_eeg ]=_cf .NewPoint (_bdf ,_bee );};return _gbcf ;};func (_cfc *Context )DrawRectangle (x ,y ,w ,h float64 ){_cfc .NewSubPath ();_cfc .MoveTo (x ,y );_cfc .LineTo (x +w ,y );_cfc .LineTo (x +w ,y +h );_cfc .LineTo (x ,y +h );_cfc .ClosePath ();};type radialGradient struct{_gacb ,_fadf ,_dcaa circle ;_aegb ,_gda float64 ;_gge float64 ;_bef stops ;};func (_bgag *Context )MoveTo (x ,y float64 ){if _bgag ._dgda {_bgag ._aeb .Add1 (_ffc (_bgag ._bbab ));};x ,y =_bgag .Transform (x ,y );_dfec :=_cf .NewPoint (x ,y );_gdea :=_ffc (_dfec );_bgag ._gga .Start (_gdea );_bgag ._aeb .Start (_gdea );_bgag ._bbab =_dfec ;_bgag ._gef =_dfec ;_bgag ._dgda =true ;};func (_dcdd *Context )Shear (x ,y float64 ){_dcdd ._bade .Shear (x ,y )};func (_bge *Context )SetLineWidth (lineWidth float64 ){_bge ._gea =lineWidth };func (_gfb *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_abd ,_acg ,_ddg ,_cbc :=x ,x +r ,x +w -r ,x +w ;_bed ,_aceb ,_gdf ,_dcg :=y ,y +r ,y +h -r ,y +h ;_gfb .NewSubPath ();_gfb .MoveTo (_acg ,_bed );_gfb .LineTo (_ddg ,_bed );_gfb .DrawArc (_ddg ,_aceb ,r ,_degb (270),_degb (360));_gfb .LineTo (_cbc ,_gdf );_gfb .DrawArc (_ddg ,_gdf ,r ,_degb (0),_degb (90));_gfb .LineTo (_acg ,_dcg );_gfb .DrawArc (_acg ,_gdf ,r ,_degb (90),_degb (180));_gfb .LineTo (_abd ,_aceb );_gfb .DrawArc (_acg ,_aceb ,r ,_degb (180),_degb (270));_gfb .ClosePath ();};func (_ec *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_bff :=_e .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_ec ._gg =_ddd (_bff );};func (_eafb *Context )drawString (_eed *_bb .RGBA ,_afg string ,_aeed ,_deda float64 ){_add :=&_df .Drawer {Dst :_eed ,Src :_bb .NewUniform (_eafb ._ce ),Face :_eafb ._agg .Tf .Face ,Dot :_ffc (_cf .NewPoint (_aeed ,_deda ))};_acb :=rune (-1);for _ ,_ece :=range _afg {if _acb >=0{_add .Dot .X +=_add .Face .Kern (_acb ,_ece );};_ffe ,_bag ,_aeac ,_dgfg ,_cdae :=_add .Face .Glyph (_add .Dot ,_ece );if !_cdae {continue ;};_dea :=_ffe .Sub (_ffe .Min );_ecgc :=_ee .BiLinear ;_ffb :=_eafb ._bade .Clone ();_ffb .Translate (float64 (_ffe .Min .X ),float64 (_ffe .Min .Y ));_cgd :=_dg .Aff3 {_ffb [0],_ffb [3],_ffb [6],_ffb [1],_ffb [4],_ffb [7]};_ecgc .Transform (_add .Dst ,_cgd ,_add .Src ,_dea ,_ee .Over ,&_ee .Options {SrcMask :_bag ,SrcMaskP :_aeac });_add .Dot .X +=_dgfg ;_acb =_ece ;};};func (_fdg *Context )SetFillStyle (pattern _d .Pattern ){if _ege ,_dfe :=pattern .(*solidPattern );_dfe {_fdg ._ce =_ege ._gaa ;};_fdg ._gbfe =pattern ;};