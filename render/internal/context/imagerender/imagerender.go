//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_eg "errors";_d "fmt";_af "github.com/unidoc/freetype/raster";_gb "github.com/unidoc/unipdf/v3/common";_ac "github.com/unidoc/unipdf/v3/internal/transform";_ee "github.com/unidoc/unipdf/v3/render/internal/context";_cd "golang.org/x/image/draw";
_gbe "golang.org/x/image/font";_ca "golang.org/x/image/math/f64";_f "golang.org/x/image/math/fixed";_aa "image";_g "image/color";_eb "image/draw";_a "math";_ed "sort";_c "strings";);func (_bab *Context )DrawStringAnchored (s string ,face _gbe .Face ,x ,y ,ax ,ay float64 ){_aaca ,_ege :=_bab .MeasureString (s ,face );
_bab .drawString (s ,face ,x -ax *_aaca ,y +ay *_ege );};func (_ecg *Context )LineTo (x ,y float64 ){if !_ecg ._acf {_ecg .MoveTo (x ,y );}else {x ,y =_ecg .Transform (x ,y );_df :=_ac .NewPoint (x ,y );_dgd :=_bea (_df );_ecg ._cae .Add1 (_dgd );_ecg ._eab .Add1 (_dgd );
_ecg ._cfg =_df ;};};func (_dcga *Context )joiner ()_af .Joiner {switch _dcga ._egc {case _ee .LineJoinBevel :return _af .BevelJoiner ;case _ee .LineJoinRound :return _af .RoundJoiner ;};return nil ;};func (_gdf *Context )SetLineJoin (lineJoin _ee .LineJoin ){_gdf ._egc =lineJoin };
func (_gbeg *Context )ShearAbout (sx ,sy ,x ,y float64 ){_gbeg .Translate (x ,y );_gbeg .Shear (sx ,sy );_gbeg .Translate (-x ,-y );};func (_feb *Context )SetLineCap (lineCap _ee .LineCap ){_feb ._ff =lineCap };func (_ddf *Context )SetRGBA255 (r ,g ,b ,a int ){_ddf ._gab =_g .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};
_ddf .setFillAndStrokeColor (_ddf ._gab );};func (_gce *Context )ClearPath (){_gce ._cae .Clear ();_gce ._eab .Clear ();_gce ._acf =false };func (_egd *Context )Scale (x ,y float64 ){_egd ._acg =_egd ._acg .Scale (x ,y )};func (_gaa *Context )SetDashOffset (offset float64 ){_gaa ._fgc =offset };
type linearGradient struct{_ggb ,_aaba ,_cea ,_fad float64 ;_gdba stops ;};func (_baf *Context )NewSubPath (){if _baf ._acf {_baf ._eab .Add1 (_bea (_baf ._gbb ));};_baf ._acf =false ;};var (_cag =_bfaa (_g .White );_fce =_bfaa (_g .Black ););func _aaec (_dcee ,_dfgf ,_cce ,_gfg ,_gddg ,_fafb float64 )_ee .Gradient {_daab :=circle {_dcee ,_dfgf ,_cce };
_fbfd :=circle {_gfg ,_gddg ,_fafb };_cfb :=circle {_gfg -_dcee ,_gddg -_dfgf ,_fafb -_cce };_fda :=_gcb (_cfb ._fbcf ,_cfb ._ggc ,-_cfb ._daa ,_cfb ._fbcf ,_cfb ._ggc ,_cfb ._daa );var _faaf float64 ;if _fda !=0{_faaf =1.0/_fda ;};_ega :=-_daab ._daa ;
_cbbb :=&radialGradient {_aca :_daab ,_fdbf :_fbfd ,_afga :_cfb ,_dae :_fda ,_adbf :_faaf ,_dddcf :_ega };return _cbbb ;};func (_cbd *Context )ClipPreserve (){_fcaa :=_aa .NewAlpha (_aa .Rect (0,0,_cbd ._fbd ,_cbd ._cge ));_bfa :=_af .NewAlphaOverPainter (_fcaa );
_cbd .fill (_bfa );if _cbd ._aab ==nil {_cbd ._aab =_fcaa ;}else {_bbg :=_aa .NewAlpha (_aa .Rect (0,0,_cbd ._fbd ,_cbd ._cge ));_cd .DrawMask (_bbg ,_bbg .Bounds (),_fcaa ,_aa .Point {},_cbd ._aab ,_aa .Point {},_cd .Over );_cbd ._aab =_bbg ;};};func (_gac *Context )SetRGB255 (r ,g ,b int ){_gac .SetRGBA255 (r ,g ,b ,255)};
func (_dga *Context )Clip (){_dga .ClipPreserve ();_dga .ClearPath ()};func _cfaad (_dbc _aa .Image )*_aa .RGBA {_ecad :=_dbc .Bounds ();_daeb :=_aa .NewRGBA (_ecad );_eb .Draw (_daeb ,_ecad ,_dbc ,_ecad .Min ,_eb .Src );return _daeb ;};func (_gcdd *solidPattern )ColorAt (x ,y int )_g .Color {return _gcdd ._eef };
func (_gaea *Context )stroke (_ede _af .Painter ){_fed :=_gaea ._cae ;if len (_gaea ._cbb )> 0{_fed =_fcde (_fed ,_gaea ._cbb ,_gaea ._fgc );}else {_fed =_dag (_dec (_fed ));};_ccdc :=_gaea ._cgg ;_ccdc .UseNonZeroWinding =true ;_ccdc .Clear ();_gdbc :=(_gaea ._acg .ScalingFactorX ()+_gaea ._acg .ScalingFactorY ())/2;
_ccdc .AddStroke (_fed ,_agc (_gaea ._adc *_gdbc ),_gaea .capper (),_gaea .joiner ());_ccdc .Rasterize (_ede );};type stops []stop ;func (_bda *Context )DrawPoint (x ,y ,r float64 ){_bda .Push ();_adb ,_dbee :=_bda .Transform (x ,y );_bda .Identity ();
_bda .DrawCircle (_adb ,_dbee ,r );_bda .Pop ();};type radialGradient struct{_aca ,_fdbf ,_afga circle ;_dae ,_adbf float64 ;_dddcf float64 ;_ffa stops ;};func (_bae *Context )DrawImageAnchored (im _aa .Image ,x ,y int ,ax ,ay float64 ){_ffdf :=im .Bounds ().Size ();
x -=int (ax *float64 (_ffdf .X ));y -=int (ay *float64 (_ffdf .Y ));_edb :=_cd .BiLinear ;_cbc :=_bae ._acg .Clone ().Translate (float64 (x ),float64 (y ));_cfea :=_ca .Aff3 {_cbc [0],_cbc [3],_cbc [6],_cbc [1],_cbc [4],_cbc [7]};if _bae ._aab ==nil {_edb .Transform (_bae ._fceb ,_cfea ,im ,im .Bounds (),_cd .Over ,nil );
}else {_edb .Transform (_bae ._fceb ,_cfea ,im ,im .Bounds (),_cd .Over ,&_cd .Options {DstMask :_bae ._aab ,DstMaskP :_aa .Point {}});};};func (_bgb *Context )Image ()_aa .Image {return _bgb ._fceb };func (_bgca *Context )SetHexColor (x string ){_fd ,_dab ,_fbb ,_feg :=_bgdg (x );
_bgca .SetRGBA255 (_fd ,_dab ,_fbb ,_feg );};func (_agba *Context )RotateAbout (angle ,x ,y float64 ){_agba .Translate (x ,y );_agba .Rotate (angle );_agba .Translate (-x ,-y );};func _fbe (_gbae float64 ,_bagb stops )_g .Color {if _gbae <=0.0||len (_bagb )==1{return _bagb [0]._abb ;
};_fffd :=_bagb [len (_bagb )-1];if _gbae >=_fffd ._afag {return _fffd ._abb ;};for _edec ,_gdfg :=range _bagb [1:]{if _gbae < _gdfg ._afag {_gbae =(_gbae -_bagb [_edec ]._afag )/(_gdfg ._afag -_bagb [_edec ]._afag );return _gdfa (_bagb [_edec ]._abb ,_gdfg ._abb ,_gbae );
};};return _fffd ._abb ;};func _fcde (_gfeg _af .Path ,_bfbf []float64 ,_faeab float64 )_af .Path {return _dag (_gdcb (_dec (_gfeg ),_bfbf ,_faeab ));};type surfacePattern struct{_aegc _aa .Image ;_cga repeatOp ;};func (_ddfa *Context )fill (_gg _af .Painter ){_fca :=_ddfa ._eab ;
if _ddfa ._acf {_fca =make (_af .Path ,len (_ddfa ._eab ));copy (_fca ,_ddfa ._eab );_fca .Add1 (_bea (_ddfa ._gbb ));};_gacd :=_ddfa ._cgg ;_gacd .UseNonZeroWinding =_ddfa ._acfa ==_ee .FillRuleWinding ;_gacd .Clear ();_gacd .AddPath (_fca );_gacd .Rasterize (_gg );
};func (_fafa *Context )Translate (x ,y float64 ){_fafa ._acg =_fafa ._acg .Translate (x ,y )};func (_cfde *surfacePattern )ColorAt (x ,y int )_g .Color {_bcd :=_cfde ._aegc .Bounds ();switch _cfde ._cga {case _ecd :if y >=_bcd .Dy (){return _g .Transparent ;
};case _gdag :if x >=_bcd .Dx (){return _g .Transparent ;};case _daaa :if x >=_bcd .Dx ()||y >=_bcd .Dy (){return _g .Transparent ;};};x =x %_bcd .Dx ()+_bcd .Min .X ;y =y %_bcd .Dy ()+_bcd .Min .Y ;return _cfde ._aegc .At (x ,y );};func _ada (_ffaa ,_adaa uint32 ,_cgd float64 )uint8 {return uint8 (int32 (float64 (_ffaa )*(1.0-_cgd )+float64 (_adaa )*_cgd )>>8);
};func (_eec *Context )AsMask ()*_aa .Alpha {_dbe :=_aa .NewAlpha (_eec ._fceb .Bounds ());_cd .Draw (_dbe ,_eec ._fceb .Bounds (),_eec ._fceb ,_aa .Point {},_cd .Src );return _dbe ;};func (_afb *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_afb ._acf {_afb .MoveTo (x1 ,y1 );
};x1 ,y1 =_afb .Transform (x1 ,y1 );x2 ,y2 =_afb .Transform (x2 ,y2 );_fae :=_ac .NewPoint (x1 ,y1 );_bfb :=_ac .NewPoint (x2 ,y2 );_fced :=_bea (_fae );_fag :=_bea (_bfb );_afb ._cae .Add2 (_fced ,_fag );_afb ._eab .Add2 (_fced ,_fag );_afb ._cfg =_bfb ;
};func (_ccgd *Context )SetLineWidth (lineWidth float64 ){_ccgd ._adc =lineWidth };func (_dea *Context )SetRGBA (r ,g ,b ,a float64 ){_dea ._gab =_g .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_dea .setFillAndStrokeColor (_dea ._gab );
};func (_ec *Context )Height ()int {return _ec ._cge };func (_fbg *Context )drawString (_bad string ,_agb _gbe .Face ,_gaf ,_edbb float64 ){_baga :=&_gbe .Drawer {Src :_aa .NewUniform (_fbg ._gab ),Face :_agb ,Dot :_bea (_ac .NewPoint (_gaf ,_edbb ))};
_gfcb :=rune (-1);for _ ,_cdbd :=range _bad {if _gfcb >=0{_baga .Dot .X +=_baga .Face .Kern (_gfcb ,_cdbd );};_dced ,_fbgd ,_efc ,_dgg ,_bbe :=_baga .Face .Glyph (_baga .Dot ,_cdbd );if !_bbe {continue ;};_fdg :=_dced .Sub (_dced .Min );_fbc :=_aa .NewRGBA (_fdg );
_cd .DrawMask (_fbc ,_fdg ,_baga .Src ,_aa .Point {},_fbgd ,_efc ,_cd .Over );var _ceb *_cd .Options ;if _fbg ._aab !=nil {_ceb =&_cd .Options {DstMask :_fbg ._aab ,DstMaskP :_aa .Point {}};};_ddg :=_fbg ._acg .Clone ().Translate (float64 (_dced .Min .X ),float64 (_dced .Min .Y ));
_bff :=_ca .Aff3 {_ddg [0],_ddg [3],_ddg [6],_ddg [1],_ddg [4],_ddg [7]};_cd .BiLinear .Transform (_fbg ._fceb ,_bff ,_fbc ,_fdg ,_cd .Over ,_ceb );_baga .Dot .X +=_dgg ;_gfcb =_cdbd ;};};func (_cgfc *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_cgfc .Translate (x ,y );
_cgfc .Scale (sx ,sy );_cgfc .Translate (-x ,-y );};type stop struct{_afag float64 ;_abb _g .Color ;};func _cgce (_gaec float64 )float64 {return _gaec *_a .Pi /180};func (_dafe *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_dafe .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );
};type patternPainter struct{_cee *_aa .RGBA ;_cbdb *_aa .Alpha ;_decc _ee .Pattern ;};type solidPattern struct{_eef _g .Color };func (_dfe *Context )Rotate (angle float64 ){_dfe ._acg =_dfe ._acg .Rotate (angle )};func (_ecf *Context )MoveTo (x ,y float64 ){if _ecf ._acf {_ecf ._eab .Add1 (_bea (_ecf ._gbb ));
};x ,y =_ecf .Transform (x ,y );_gdga :=_ac .NewPoint (x ,y );_gda :=_bea (_gdga );_ecf ._cae .Start (_gda );_ecf ._eab .Start (_gda );_ecf ._gbb =_gdga ;_ecf ._cfg =_gdga ;_ecf ._acf =true ;};func (_ccb *linearGradient )AddColorStop (offset float64 ,color _g .Color ){_ccb ._gdba =append (_ccb ._gdba ,stop {_afag :offset ,_abb :color });
_ed .Sort (_ccb ._gdba );};func (_ffde *Context )InvertMask (){if _ffde ._aab ==nil {_ffde ._aab =_aa .NewAlpha (_ffde ._fceb .Bounds ());}else {for _cfd ,_fcf :=range _ffde ._aab .Pix {_ffde ._aab .Pix [_cfd ]=255-_fcf ;};};};func (_cdc *Context )DrawImage (im _aa .Image ,x ,y int ){_cdc .DrawImageAnchored (im ,x ,y ,0,0)};
func (_fea *Context )SetColor (c _g .Color ){_fea .setFillAndStrokeColor (c )};func _gcb (_bcf ,_cfaa ,_gdge ,_dcfb ,_gcf ,_fgab float64 )float64 {return _bcf *_dcfb +_cfaa *_gcf +_gdge *_fgab ;};func _gca (_gbegf _aa .Image ,_aad repeatOp )_ee .Pattern {return &surfacePattern {_aegc :_gbegf ,_cga :_aad };
};func (_bbc stops )Swap (i ,j int ){_bbc [i ],_bbc [j ]=_bbc [j ],_bbc [i ]};func _agc (_abbe float64 )_f .Int26_6 {return _f .Int26_6 (_abbe *64)};func (_aae *Context )Matrix ()_ac .Matrix {return _aae ._acg };func _cg (_dc ,_cc ,_dd ,_ea ,_ag ,_dg ,_ccg float64 )(_ae ,_de float64 ){_dee :=1-_ccg ;
_ga :=_dee *_dee ;_gf :=2*_dee *_ccg ;_b :=_ccg *_ccg ;_ae =_ga *_dc +_gf *_dd +_b *_ag ;_de =_ga *_cc +_gf *_ea +_b *_dg ;return ;};func (_dbg *Context )Push (){_acef :=*_dbg ;_dbg ._fgd =append (_dbg ._fgd ,&_acef )};func (_fcag *Context )Fill (){_fcag .FillPreserve ();
_fcag .ClearPath ()};func _dag (_ecfg [][]_ac .Point )_af .Path {var _bgab _af .Path ;for _ ,_gbbb :=range _ecfg {var _gaag _f .Point26_6 ;for _fcff ,_cca :=range _gbbb {_gdgd :=_bea (_cca );if _fcff ==0{_bgab .Start (_gdgd );}else {_eag :=_gdgd .X -_gaag .X ;
_ddgb :=_gdgd .Y -_gaag .Y ;if _eag < 0{_eag =-_eag ;};if _ddgb < 0{_ddgb =-_ddgb ;};if _eag +_ddgb > 8{_bgab .Add1 (_gdgd );};};_gaag =_gdgd ;};};return _bgab ;};func _gdfa (_acda ,_bagbf _g .Color ,_dad float64 )_g .Color {_bdbb ,_edc ,_dbb ,_cagc :=_acda .RGBA ();
_cebb ,_gdc ,_feag ,_edba :=_bagbf .RGBA ();return _g .RGBA {_ada (_bdbb ,_cebb ,_dad ),_ada (_edc ,_gdc ,_dad ),_ada (_dbb ,_feag ,_dad ),_ada (_cagc ,_edba ,_dad )};};func (_cgf *Context )SetDash (dashes ...float64 ){_cgf ._cbb =dashes };func NewContext (width ,height int )*Context {return NewContextForRGBA (_aa .NewRGBA (_aa .Rect (0,0,width ,height )));
};func _dec (_eegf _af .Path )[][]_ac .Point {var _cdfg [][]_ac .Point ;var _bded []_ac .Point ;var _aaa ,_afe float64 ;for _ccec :=0;_ccec < len (_eegf );{switch _eegf [_ccec ]{case 0:if len (_bded )> 0{_cdfg =append (_cdfg ,_bded );_bded =nil ;};_fgg :=_dbd (_eegf [_ccec +1]);
_fede :=_dbd (_eegf [_ccec +2]);_bded =append (_bded ,_ac .NewPoint (_fgg ,_fede ));_aaa ,_afe =_fgg ,_fede ;_ccec +=4;case 1:_acgf :=_dbd (_eegf [_ccec +1]);_dgf :=_dbd (_eegf [_ccec +2]);_bded =append (_bded ,_ac .NewPoint (_acgf ,_dgf ));_aaa ,_afe =_acgf ,_dgf ;
_ccec +=4;case 2:_gad :=_dbd (_eegf [_ccec +1]);_fdgc :=_dbd (_eegf [_ccec +2]);_ggf :=_dbd (_eegf [_ccec +3]);_eff :=_dbd (_eegf [_ccec +4]);_fcdd :=_dcc (_aaa ,_afe ,_gad ,_fdgc ,_ggf ,_eff );_bded =append (_bded ,_fcdd ...);_aaa ,_afe =_ggf ,_eff ;_ccec +=6;
case 3:_fedc :=_dbd (_eegf [_ccec +1]);_febc :=_dbd (_eegf [_ccec +2]);_babd :=_dbd (_eegf [_ccec +3]);_aag :=_dbd (_eegf [_ccec +4]);_geeg :=_dbd (_eegf [_ccec +5]);_afea :=_dbd (_eegf [_ccec +6]);_aga :=_cfa (_aaa ,_afe ,_fedc ,_febc ,_babd ,_aag ,_geeg ,_afea );
_bded =append (_bded ,_aga ...);_aaa ,_afe =_geeg ,_afea ;_ccec +=8;default:_gb .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_eegf );return _cdfg ;};};if len (_bded )> 0{_cdfg =append (_cdfg ,_bded );
};return _cdfg ;};func (_ace *Context )FillPattern ()_ee .Pattern {return _ace ._fcg };const (_acefe repeatOp =iota ;_ecd ;_gdag ;_daaa ;);func (_fdb *Context )Identity (){_fdb ._acg =_ac .IdentityMatrix ()};func (_ged *Context )setFillAndStrokeColor (_ebf _g .Color ){_ged ._gab =_ebf ;
_ged ._fcg =_bfaa (_ebf );_ged ._ade =_bfaa (_ebf );};func (_gfc *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_gfc .NewSubPath ();_gfc .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_a .Pi );_gfc .ClosePath ();};func _cfa (_fee ,_ded ,_cad ,_da ,_cb ,_gcd ,_deba ,_fb float64 )[]_ac .Point {_ddb :=(_a .Hypot (_cad -_fee ,_da -_ded )+_a .Hypot (_cb -_cad ,_gcd -_da )+_a .Hypot (_deba -_cb ,_fb -_gcd ));
_gdg :=int (_ddb +0.5);if _gdg < 4{_gdg =4;};_gdb :=float64 (_gdg )-1;_bb :=make ([]_ac .Point ,_gdg );for _be :=0;_be < _gdg ;_be ++{_edg :=float64 (_be )/_gdb ;_bgc ,_geb :=_aea (_fee ,_ded ,_cad ,_da ,_cb ,_gcd ,_deba ,_fb ,_edg );_bb [_be ]=_ac .NewPoint (_bgc ,_geb );
};return _bb ;};func (_acd *Context )Clear (){_bdca :=_aa .NewUniform (_acd ._gab );_cd .Draw (_acd ._fceb ,_acd ._fceb .Bounds (),_bdca ,_aa .Point {},_cd .Src );};func _ced (_aegb ,_eae ,_faa ,_febge float64 )_ee .Gradient {_cgff :=&linearGradient {_ggb :_aegb ,_aaba :_eae ,_cea :_faa ,_fad :_febge };
return _cgff ;};func (_fbf *Context )SetFillStyle (pattern _ee .Pattern ){if _afg ,_bgd :=pattern .(*solidPattern );_bgd {_fbf ._gab =_afg ._eef ;};_fbf ._fcg =pattern ;};func (_addd *Context )SetMask (mask *_aa .Alpha )error {if mask .Bounds ().Size ()!=_addd ._fceb .Bounds ().Size (){return _eg .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");
};_addd ._aab =mask ;return nil ;};func (_faea *Context )DrawString (s string ,face _gbe .Face ,x ,y float64 ){_faea .DrawStringAnchored (s ,face ,x ,y ,0,0);};func (_eeeb *Context )capper ()_af .Capper {switch _eeeb ._ff {case _ee .LineCapButt :return _af .ButtCapper ;
case _ee .LineCapRound :return _af .RoundCapper ;case _ee .LineCapSquare :return _af .SquareCapper ;};return nil ;};func (_cdbf stops )Len ()int {return len (_cdbf )};type circle struct{_fbcf ,_ggc ,_daa float64 };func (_eac *Context )drawRegularPolygon (_gdaab int ,_gde ,_aed ,_ccf ,_ef float64 ){_bdee :=2*_a .Pi /float64 (_gdaab );
_ef -=_a .Pi /2;if _gdaab %2==0{_ef +=_bdee /2;};_eac .NewSubPath ();for _abg :=0;_abg < _gdaab ;_abg ++{_gfad :=_ef +_bdee *float64 (_abg );_eac .LineTo (_gde +_ccf *_a .Cos (_gfad ),_aed +_ccf *_a .Sin (_gfad ));};_eac .ClosePath ();};func _aea (_dge ,_ad ,_abe ,_cfe ,_ccd ,_ddd ,_fg ,_aac ,_bg float64 )(_fe ,_ge float64 ){_gaed :=1-_bg ;
_bde :=_gaed *_gaed *_gaed ;_bdb :=3*_gaed *_gaed *_bg ;_gc :=3*_gaed *_bg *_bg ;_gd :=_bg *_bg *_bg ;_fe =_bde *_dge +_bdb *_abe +_gc *_ccd +_gd *_fg ;_ge =_bde *_ad +_bdb *_cfe +_gc *_ddd +_gd *_aac ;return ;};func (_eabd *Context )Transform (x ,y float64 )(_bed ,_fba float64 ){return _eabd ._acg .Transform (x ,y )};
func (_dccf *Context )Shear (x ,y float64 ){_dccf ._acg .Shear (x ,y )};func _gdcb (_fade [][]_ac .Point ,_dfcg []float64 ,_gbg float64 )[][]_ac .Point {var _fdac [][]_ac .Point ;if len (_dfcg )==0{return _fade ;};if len (_dfcg )==1{_dfcg =append (_dfcg ,_dfcg [0]);
};for _ ,_gbd :=range _fade {if len (_gbd )< 2{continue ;};_cgcc :=_gbd [0];_fbee :=1;_dca :=0;_bfbc :=0.0;if _gbg !=0{var _cbe float64 ;for _ ,_feeg :=range _dfcg {_cbe +=_feeg ;};_gbg =_a .Mod (_gbg ,_cbe );if _gbg < 0{_gbg +=_cbe ;};for _dabd ,_faad :=range _dfcg {_gbg -=_faad ;
if _gbg < 0{_dca =_dabd ;_bfbc =_faad +_gbg ;break ;};};};var _ffba []_ac .Point ;_ffba =append (_ffba ,_cgcc );for _fbee < len (_gbd ){_bfe :=_dfcg [_dca ];_fadg :=_gbd [_fbee ];_gcbf :=_cgcc .Distance (_fadg );_cebe :=_bfe -_bfbc ;if _gcbf > _cebe {_daaf :=_cebe /_gcbf ;
_fedca :=_cgcc .Interpolate (_fadg ,_daaf );_ffba =append (_ffba ,_fedca );if _dca %2==0&&len (_ffba )> 1{_fdac =append (_fdac ,_ffba );};_ffba =nil ;_ffba =append (_ffba ,_fedca );_bfbc =0;_cgcc =_fedca ;_dca =(_dca +1)%len (_dfcg );}else {_ffba =append (_ffba ,_fadg );
_cgcc =_fadg ;_bfbc +=_gcbf ;_fbee ++;};};if _dca %2==0&&len (_ffba )> 1{_fdac =append (_fdac ,_ffba );};};return _fdac ;};func (_dfc *linearGradient )ColorAt (x ,y int )_g .Color {if len (_dfc ._gdba )==0{return _g .Transparent ;};_gbbf ,_gabc :=float64 (x ),float64 (y );
_dcf ,_gafc ,_ead ,_ddcg :=_dfc ._ggb ,_dfc ._aaba ,_dfc ._cea ,_dfc ._fad ;_cdd ,_bffc :=_ead -_dcf ,_ddcg -_gafc ;if _bffc ==0&&_cdd !=0{return _fbe ((_gbbf -_dcf )/_cdd ,_dfc ._gdba );};if _cdd ==0&&_bffc !=0{return _fbe ((_gabc -_gafc )/_bffc ,_dfc ._gdba );
};_acge :=_cdd *(_gbbf -_dcf )+_bffc *(_gabc -_gafc );if _acge < 0{return _dfc ._gdba [0]._abb ;};_egde :=_a .Hypot (_cdd ,_bffc );_adcd :=((_gbbf -_dcf )*-_bffc +(_gabc -_gafc )*_cdd )/(_egde *_egde );_cfec ,_ecgb :=_dcf +_adcd *-_bffc ,_gafc +_adcd *_cdd ;
_aead :=_a .Hypot (_gbbf -_cfec ,_gabc -_ecgb )/_egde ;return _fbe (_aead ,_dfc ._gdba );};func (_eeg *Context )DrawRectangle (x ,y ,w ,h float64 ){_eeg .NewSubPath ();_eeg .MoveTo (x ,y );_eeg .LineTo (x +w ,y );_eeg .LineTo (x +w ,y +h );_eeg .LineTo (x ,y +h );
_eeg .ClosePath ();};func _bfaa (_gbdc _g .Color )_ee .Pattern {return &solidPattern {_eef :_gbdc }};func (_dcg *Context )SetFillRGBA (r ,g ,b ,a float64 ){_dddc :=_g .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_dcg ._gab =_dddc ;
_dcg ._fcg =_bfaa (_dddc );};func (_gedd *Context )TextState ()*_ee .TextState {return &_gedd ._fa };func (_agd *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_dafc ,_fec ,_gff ,_gbcg :=x ,x +r ,x +w -r ,x +w ;_fcd ,_fga ,_ecc ,_deed :=y ,y +r ,y +h -r ,y +h ;
_agd .NewSubPath ();_agd .MoveTo (_fec ,_fcd );_agd .LineTo (_gff ,_fcd );_agd .DrawArc (_gff ,_fga ,r ,_cgce (270),_cgce (360));_agd .LineTo (_gbcg ,_ecc );_agd .DrawArc (_gff ,_ecc ,r ,_cgce (0),_cgce (90));_agd .LineTo (_fec ,_deed );_agd .DrawArc (_fec ,_ecc ,r ,_cgce (90),_cgce (180));
_agd .LineTo (_dafc ,_fga );_agd .DrawArc (_fec ,_fga ,r ,_cgce (180),_cgce (270));_agd .ClosePath ();};func (_ce *Context )Width ()int {return _ce ._fbd };func _dcc (_ab ,_ddc ,_gae ,_cac ,_bc ,_ba float64 )[]_ac .Point {_cdb :=(_a .Hypot (_gae -_ab ,_cac -_ddc )+_a .Hypot (_bc -_gae ,_ba -_cac ));
_bd :=int (_cdb +0.5);if _bd < 4{_bd =4;};_deb :=float64 (_bd )-1;_afa :=make ([]_ac .Point ,_bd );for _fc :=0;_fc < _bd ;_fc ++{_afd :=float64 (_fc )/_deb ;_cf ,_bag :=_cg (_ab ,_ddc ,_gae ,_cac ,_bc ,_ba ,_afd );_afa [_fc ]=_ac .NewPoint (_cf ,_bag );
};return _afa ;};func NewContextForRGBA (im *_aa .RGBA )*Context {_gbc :=im .Bounds ().Size ().X ;_bf :=im .Bounds ().Size ().Y ;return &Context {_fbd :_gbc ,_cge :_bf ,_cgg :_af .NewRasterizer (_gbc ,_bf ),_fceb :im ,_gab :_g .Transparent ,_fcg :_cag ,_ade :_fce ,_adc :1,_acfa :_ee .FillRuleWinding ,_acg :_ac .IdentityMatrix (),_fa :_ee .NewTextState ()};
};func (_cfaf *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_gee :=_g .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_cfaf ._ade =_bfaa (_gee );};func (_aeg *Context )DrawCircle (x ,y ,r float64 ){_aeg .NewSubPath ();_aeg .DrawEllipticalArc (x ,y ,r ,r ,0,2*_a .Pi );
_aeg .ClosePath ();};func _fcee (_dcedg *_aa .RGBA ,_dgb *_aa .Alpha ,_cafb _ee .Pattern )*patternPainter {return &patternPainter {_dcedg ,_dgb ,_cafb };};func (_dfg *Context )MeasureString (s string ,face _gbe .Face )(_aedb ,_bdae float64 ){_cfc :=&_gbe .Drawer {Face :face };
_ecae :=_cfc .MeasureString (s );return float64 (_ecae >>6),_dfg ._fa .Tf .Size ;};type Context struct{_fbd int ;_cge int ;_cgg *_af .Rasterizer ;_fceb *_aa .RGBA ;_aab *_aa .Alpha ;_gab _g .Color ;_fcg _ee .Pattern ;_ade _ee .Pattern ;_cae _af .Path ;
_eab _af .Path ;_gbb _ac .Point ;_cfg _ac .Point ;_acf bool ;_cbb []float64 ;_fgc float64 ;_adc float64 ;_ff _ee .LineCap ;_egc _ee .LineJoin ;_acfa _ee .FillRule ;_acg _ac .Matrix ;_fa _ee .TextState ;_fgd []*Context ;};func _bgdg (_ebd string )(_fbdd ,_gbbg ,_ecfd ,_geg int ){_ebd =_c .TrimPrefix (_ebd ,"\u0023");
_geg =255;if len (_ebd )==3{_daaab :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_d .Sscanf (_ebd ,_daaab ,&_fbdd ,&_gbbg ,&_ecfd );_fbdd |=_fbdd <<4;_gbbg |=_gbbg <<4;_ecfd |=_ecfd <<4;};if len (_ebd )==6{_edbf :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";
_d .Sscanf (_ebd ,_edbf ,&_fbdd ,&_gbbg ,&_ecfd );};if len (_ebd )==8{_bede :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_d .Sscanf (_ebd ,_bede ,&_fbdd ,&_gbbg ,&_ecfd ,&_geg );};return ;};func _dbd (_fdaa _f .Int26_6 )float64 {const _gacde ,_cebf =6,1<<6-1;
if _fdaa >=0{return float64 (_fdaa >>_gacde )+float64 (_fdaa &_cebf )/64;};_fdaa =-_fdaa ;if _fdaa >=0{return -(float64 (_fdaa >>_gacde )+float64 (_fdaa &_cebf )/64);};return 0;};type repeatOp int ;func (_fff *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_fff .MoveTo (x1 ,y1 );
_fff .LineTo (x2 ,y2 )};func (_gdd *Context )StrokePreserve (){var _daf _af .Painter ;if _gdd ._aab ==nil {if _eca ,_cba :=_gdd ._ade .(*solidPattern );_cba {_faf :=_af .NewRGBAPainter (_gdd ._fceb );_faf .SetColor (_eca ._eef );_daf =_faf ;};};if _daf ==nil {_daf =_fcee (_gdd ._fceb ,_gdd ._aab ,_gdd ._ade );
};_gdd .stroke (_daf );};func (_bgf *Context )SetRGB (r ,g ,b float64 ){_bgf .SetRGBA (r ,g ,b ,1)};func NewContextForImage (im _aa .Image )*Context {return NewContextForRGBA (_cfaad (im ))};func (_gfe *Context )StrokePattern ()_ee .Pattern {return _gfe ._ade };
func (_ffd *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_ffd ._acf {_ffd .MoveTo (x1 ,y1 );};_cdf ,_afda :=_ffd ._cfg .X ,_ffd ._cfg .Y ;x1 ,y1 =_ffd .Transform (x1 ,y1 );x2 ,y2 =_ffd .Transform (x2 ,y2 );x3 ,y3 =_ffd .Transform (x3 ,y3 );_gba :=_cfa (_cdf ,_afda ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );
_acgc :=_bea (_ffd ._cfg );for _ ,_gbba :=range _gba [1:]{_eee :=_bea (_gbba );if _eee ==_acgc {continue ;};_acgc =_eee ;_ffd ._cae .Add1 (_eee );_ffd ._eab .Add1 (_eee );_ffd ._cfg =_gbba ;};};func (_bebb *radialGradient )ColorAt (x ,y int )_g .Color {if len (_bebb ._ffa )==0{return _g .Transparent ;
};_fbdc ,_gdde :=float64 (x )+0.5-_bebb ._aca ._fbcf ,float64 (y )+0.5-_bebb ._aca ._ggc ;_eegd :=_gcb (_fbdc ,_gdde ,_bebb ._aca ._daa ,_bebb ._afga ._fbcf ,_bebb ._afga ._ggc ,_bebb ._afga ._daa );_fbdca :=_gcb (_fbdc ,_gdde ,-_bebb ._aca ._daa ,_fbdc ,_gdde ,_bebb ._aca ._daa );
if _bebb ._dae ==0{if _eegd ==0{return _g .Transparent ;};_fdgg :=0.5*_fbdca /_eegd ;if _fdgg *_bebb ._afga ._daa >=_bebb ._dddcf {return _fbe (_fdgg ,_bebb ._ffa );};return _g .Transparent ;};_bgdb :=_gcb (_eegd ,_bebb ._dae ,0,_eegd ,-_fbdca ,0);if _bgdb >=0{_dbeg :=_a .Sqrt (_bgdb );
_ebc :=(_eegd +_dbeg )*_bebb ._adbf ;_aee :=(_eegd -_dbeg )*_bebb ._adbf ;if _ebc *_bebb ._afga ._daa >=_bebb ._dddcf {return _fbe (_ebc ,_bebb ._ffa );}else if _aee *_bebb ._afga ._daa >=_bebb ._dddcf {return _fbe (_aee ,_bebb ._ffa );};};return _g .Transparent ;
};func (_bdc *Context )ResetClip (){_bdc ._aab =nil };func (_febg *Context )ClosePath (){if _febg ._acf {_add :=_bea (_febg ._gbb );_febg ._cae .Add1 (_add );_febg ._eab .Add1 (_add );_febg ._cfg =_febg ._gbb ;};};func (_caf *Context )SetStrokeStyle (pattern _ee .Pattern ){_caf ._ade =pattern };
func (_age *Context )Pop (){_ddbc :=*_age ;_bdaeb :=_age ._fgd ;_fab :=_bdaeb [len (_bdaeb )-1];*_age =*_fab ;_age ._cae =_ddbc ._cae ;_age ._eab =_ddbc ._eab ;_age ._gbb =_ddbc ._gbb ;_age ._cfg =_ddbc ._cfg ;_age ._acf =_ddbc ._acf ;};func (_fdd stops )Less (i ,j int )bool {return _fdd [i ]._afag < _fdd [j ]._afag };
func (_afgf *Context )SetPixel (x ,y int ){_afgf ._fceb .Set (x ,y ,_afgf ._gab )};func (_fffb *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _bdbf =16;for _cfgb :=0;_cfgb < _bdbf ;_cfgb ++{_faff :=float64 (_cfgb +0)/_bdbf ;_beb :=float64 (_cfgb +1)/_bdbf ;
_dce :=angle1 +(angle2 -angle1 )*_faff ;_cgb :=angle1 +(angle2 -angle1 )*_beb ;_ebe :=x +rx *_a .Cos (_dce );_bafc :=y +ry *_a .Sin (_dce );_gbcb :=x +rx *_a .Cos ((_dce +_cgb )/2);_debf :=y +ry *_a .Sin ((_dce +_cgb )/2);_beg :=x +rx *_a .Cos (_cgb );
_cagf :=y +ry *_a .Sin (_cgb );_bbd :=2*_gbcb -_ebe /2-_beg /2;_ffb :=2*_debf -_bafc /2-_cagf /2;if _cfgb ==0{if _fffb ._acf {_fffb .LineTo (_ebe ,_bafc );}else {_fffb .MoveTo (_ebe ,_bafc );};};_fffb .QuadraticTo (_bbd ,_ffb ,_beg ,_cagf );};};func (_gfa *Context )LineWidth ()float64 {return _gfa ._adc };
func (_edgc *patternPainter )Paint (ss []_af .Span ,done bool ){_caca :=_edgc ._cee .Bounds ();for _ ,_gfd :=range ss {if _gfd .Y < _caca .Min .Y {continue ;};if _gfd .Y >=_caca .Max .Y {return ;};if _gfd .X0 < _caca .Min .X {_gfd .X0 =_caca .Min .X ;};
if _gfd .X1 > _caca .Max .X {_gfd .X1 =_caca .Max .X ;};if _gfd .X0 >=_gfd .X1 {continue ;};const _egac =1<<16-1;_aaf :=_gfd .Y -_edgc ._cee .Rect .Min .Y ;_caaa :=_gfd .X0 -_edgc ._cee .Rect .Min .X ;_dgda :=(_gfd .Y -_edgc ._cee .Rect .Min .Y )*_edgc ._cee .Stride +(_gfd .X0 -_edgc ._cee .Rect .Min .X )*4;
_cbac :=_dgda +(_gfd .X1 -_gfd .X0 )*4;for _ffe ,_ggd :=_dgda ,_caaa ;_ffe < _cbac ;_ffe ,_ggd =_ffe +4,_ggd +1{_fddf :=_gfd .Alpha ;if _edgc ._cbdb !=nil {_fddf =_fddf *uint32 (_edgc ._cbdb .AlphaAt (_ggd ,_aaf ).A )/255;if _fddf ==0{continue ;};};_ecgf :=_edgc ._decc .ColorAt (_ggd ,_aaf );
_bdad ,_agbc ,_cff ,_eea :=_ecgf .RGBA ();_dceg :=uint32 (_edgc ._cee .Pix [_ffe +0]);_efb :=uint32 (_edgc ._cee .Pix [_ffe +1]);_gcde :=uint32 (_edgc ._cee .Pix [_ffe +2]);_adad :=uint32 (_edgc ._cee .Pix [_ffe +3]);_dcb :=(_egac -(_eea *_fddf /_egac ))*0x101;
_edgc ._cee .Pix [_ffe +0]=uint8 ((_dceg *_dcb +_bdad *_fddf )/_egac >>8);_edgc ._cee .Pix [_ffe +1]=uint8 ((_efb *_dcb +_agbc *_fddf )/_egac >>8);_edgc ._cee .Pix [_ffe +2]=uint8 ((_gcde *_dcb +_cff *_fddf )/_egac >>8);_edgc ._cee .Pix [_ffe +3]=uint8 ((_adad *_dcb +_eea *_fddf )/_egac >>8);
};};};func (_caa *Context )SetMatrix (m _ac .Matrix ){_caa ._acg =m };func (_gafg *radialGradient )AddColorStop (offset float64 ,color _g .Color ){_gafg ._ffa =append (_gafg ._ffa ,stop {_afag :offset ,_abb :color });_ed .Sort (_gafg ._ffa );};func (_cda *Context )SetFillRule (fillRule _ee .FillRule ){_cda ._acfa =fillRule };
func (_bec *Context )Stroke (){_bec .StrokePreserve ();_bec .ClearPath ()};func _bea (_faeac _ac .Point )_f .Point26_6 {return _f .Point26_6 {X :_agc (_faeac .X ),Y :_agc (_faeac .Y )}};func (_dddf *Context )FillPreserve (){var _bga _af .Painter ;if _dddf ._aab ==nil {if _gdaa ,_bge :=_dddf ._fcg .(*solidPattern );
_bge {_db :=_af .NewRGBAPainter (_dddf ._fceb );_db .SetColor (_gdaa ._eef );_bga =_db ;};};if _bga ==nil {_bga =_fcee (_dddf ._fceb ,_dddf ._aab ,_dddf ._fcg );};_dddf .fill (_bga );};