//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_d "errors";_cc "fmt";_ef "github.com/golang/freetype/raster";_cf "github.com/unidoc/unipdf/v3/common";_dc "github.com/unidoc/unipdf/v3/internal/transform";_db "github.com/unidoc/unipdf/v3/render/internal/context";_ee "golang.org/x/image/draw";_df "golang.org/x/image/font";_f "golang.org/x/image/math/f64";_bg "golang.org/x/image/math/fixed";_bbe "image";_bb "image/color";_cdb "image/draw";_c "math";_b "sort";_cd "strings";);func _ff (_be ,_gac ,_da ,_afd ,_dgf ,_eeb ,_aab ,_bed ,_bd float64 )(_ca ,_fd float64 ){_cb :=1-_bd ;_bfa :=_cb *_cb *_cb ;_eb :=3*_cb *_cb *_bd ;_dcg :=3*_cb *_bd *_bd ;_aabc :=_bd *_bd *_bd ;_ca =_bfa *_be +_eb *_da +_dcg *_dgf +_aabc *_aab ;_fd =_bfa *_gac +_eb *_afd +_dcg *_eeb +_aabc *_bed ;return ;};func (_adf *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_adf ._ceb {_adf .MoveTo (x1 ,y1 );};_fed ,_gabg :=_adf ._ebg .X ,_adf ._ebg .Y ;x1 ,y1 =_adf .Transform (x1 ,y1 );x2 ,y2 =_adf .Transform (x2 ,y2 );x3 ,y3 =_adf .Transform (x3 ,y3 );_dga :=_cac (_fed ,_gabg ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_gaf :=_bfed (_adf ._ebg );for _ ,_deda :=range _dga [1:]{_gced :=_bfed (_deda );if _gced ==_gaf {continue ;};_gaf =_gced ;_adf ._egd .Add1 (_gced );_adf ._cfa .Add1 (_gced );_adf ._ebg =_deda ;};};type circle struct{_bce ,_babe ,_adab float64 };func _aaa (_bga ,_dbag ,_efdd ,_agcf ,_gbd ,_deec float64 )float64 {return _bga *_agcf +_dbag *_gbd +_efdd *_deec ;};func (_bdd *solidPattern )ColorAt (x ,y int )_bb .Color {return _bdd ._adag };func (_ccd *Context )LineTo (x ,y float64 ){if !_ccd ._ceb {_ccd .MoveTo (x ,y );}else {x ,y =_ccd .Transform (x ,y );_ced :=_dc .NewPoint (x ,y );_dea :=_bfed (_ced );_ccd ._egd .Add1 (_dea );_ccd ._cfa .Add1 (_dea );_ccd ._ebg =_ced ;};};func (_cdbb *Context )DrawRectangle (x ,y ,w ,h float64 ){_cdbb .NewSubPath ();_cdbb .MoveTo (x ,y );_cdbb .LineTo (x +w ,y );_cdbb .LineTo (x +w ,y +h );_cdbb .LineTo (x ,y +h );_cdbb .ClosePath ();};func (_dda *Context )DrawStringAnchored (s string ,x ,y ,ax ,ay float64 ){_dfc ,_gbcc :=_dda .MeasureString (s );x -=ax *_dfc ;y +=ay *_gbcc ;if _dda ._dac ==nil {_dda .drawString (_dda ._fdg ,s ,x ,y );}else {_fee :=_bbe .NewRGBA (_bbe .Rect (0,0,_dda ._aed ,_dda ._dae ));_dda .drawString (_fee ,s ,x ,y );_ee .DrawMask (_dda ._fdg ,_dda ._fdg .Bounds (),_fee ,_bbe .Point {},_dda ._dac ,_bbe .Point {},_ee .Over );};};type solidPattern struct{_adag _bb .Color };func (_gadf *Context )Push (){_eaae :=*_gadf ;_gadf ._deb =append (_gadf ._deb ,&_eaae )};func (_fca *Context )Stroke (){_fca .StrokePreserve ();_fca .ClearPath ()};func (_gcd *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_caf :=_bb .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_gcd ._cbg =_dde (_caf );};func _eac (_cefag _ef .Path ,_fedc []float64 ,_cadfd float64 )_ef .Path {return _acbd (_eaaf (_cbag (_cefag ),_fedc ,_cadfd ));};func NewContextForRGBA (im *_bbe .RGBA )*Context {_aca :=im .Bounds ().Size ().X ;_bcc :=im .Bounds ().Size ().Y ;return &Context {_aed :_aca ,_dae :_bcc ,_aec :_ef .NewRasterizer (_aca ,_bcc ),_fdg :im ,_bbg :_bb .Transparent ,_edf :_gec ,_cbg :_fdb ,_edd :1,_aaf :_db .FillRuleWinding ,_cef :_dc .IdentityMatrix (),_dcd :_db .NewTextState ()};};func (_aebc *Context )NewSubPath (){if _aebc ._ceb {_aebc ._cfa .Add1 (_bfed (_aebc ._cbb ));};_aebc ._ceb =false ;};func (_eag *Context )SetMask (mask *_bbe .Alpha )error {if mask .Bounds ().Size ()!=_eag ._fdg .Bounds ().Size (){return _d .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");};_eag ._dac =mask ;return nil ;};func (_ceac *Context )joiner ()_ef .Joiner {switch _ceac ._fc {case _db .LineJoinBevel :return _ef .BevelJoiner ;case _db .LineJoinRound :return _ef .RoundJoiner ;};return nil ;};func (_cdd *Context )SetColor (c _bb .Color ){_cdd .setFillAndStrokeColor (c )};func (_dbe *Context )Scale (x ,y float64 ){_dbe ._cef .Scale (x ,y )};func (_dad *Context )SetFillStyle (pattern _db .Pattern ){if _ddg ,_egdf :=pattern .(*solidPattern );_egdf {_dad ._bbg =_ddg ._adag ;};_dad ._edf =pattern ;};func _acbd (_ade [][]_dc .Point )_ef .Path {var _egca _ef .Path ;for _ ,_edb :=range _ade {var _ggdb _bg .Point26_6 ;for _fba ,_fbgf :=range _edb {_gbdd :=_bfed (_fbgf );if _fba ==0{_egca .Start (_gbdd );}else {_ecgf :=_gbdd .X -_ggdb .X ;_dec :=_gbdd .Y -_ggdb .Y ;if _ecgf < 0{_ecgf =-_ecgf ;};if _dec < 0{_dec =-_dec ;};if _ecgf +_dec > 8{_egca .Add1 (_gbdd );};};_ggdb =_gbdd ;};};return _egca ;};func (_cdae *Context )FillPreserve (){var _cag _ef .Painter ;if _cdae ._dac ==nil {if _feda ,_cbf :=_cdae ._edf .(*solidPattern );_cbf {_bfg :=_ef .NewRGBAPainter (_cdae ._fdg );_bfg .SetColor (_feda ._adag );_cag =_bfg ;};};if _cag ==nil {_cag =_gcga (_cdae ._fdg ,_cdae ._dac ,_cdae ._edf );};_cdae .fill (_cag );};type Context struct{_aed int ;_dae int ;_aec *_ef .Rasterizer ;_fdg *_bbe .RGBA ;_dac *_bbe .Alpha ;_bbg _bb .Color ;_edf _db .Pattern ;_cbg _db .Pattern ;_egd _ef .Path ;_cfa _ef .Path ;_cbb _dc .Point ;_ebg _dc .Point ;_ceb bool ;_ffb []float64 ;_cg float64 ;_edd float64 ;_aeg _db .LineCap ;_fc _db .LineJoin ;_aaf _db .FillRule ;_cef _dc .Matrix ;_dcd *_db .TextState ;_deb []*Context ;};func (_bca *radialGradient )AddColorStop (offset float64 ,color _bb .Color ){_bca ._bdf =append (_bca ._bdf ,stop {_dfbe :offset ,_daga :color });_b .Sort (_bca ._bdf );};func (_gd *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_gd ._ceb {_gd .MoveTo (x1 ,y1 );};x1 ,y1 =_gd .Transform (x1 ,y1 );x2 ,y2 =_gd .Transform (x2 ,y2 );_fag :=_dc .NewPoint (x1 ,y1 );_gde :=_dc .NewPoint (x2 ,y2 );_deag :=_bfed (_fag );_bfe :=_bfed (_gde );_gd ._egd .Add2 (_deag ,_bfe );_gd ._cfa .Add2 (_deag ,_bfe );_gd ._ebg =_gde ;};func (_bff *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_bff .NewSubPath ();_bff .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_c .Pi );_bff .ClosePath ();};func (_eab stops )Swap (i ,j int ){_eab [i ],_eab [j ]=_eab [j ],_eab [i ]};func (_dcc *Context )SetDashOffset (offset float64 ){_dcc ._cg =offset };func (_dbd *Context )LineWidth ()float64 {return _dbd ._edd };func (_ddf *Context )AsMask ()*_bbe .Alpha {_cfb :=_bbe .NewAlpha (_ddf ._fdg .Bounds ());_ee .Draw (_cfb ,_ddf ._fdg .Bounds (),_ddf ._fdg ,_bbe .Point {},_ee .Src );return _cfb ;};func (_ebe *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_gge ,_acc ,_ba ,_fced :=x ,x +r ,x +w -r ,x +w ;_eagb ,_aebb ,_deab ,_gdd :=y ,y +r ,y +h -r ,y +h ;_ebe .NewSubPath ();_ebe .MoveTo (_acc ,_eagb );_ebe .LineTo (_ba ,_eagb );_ebe .DrawArc (_ba ,_aebb ,r ,_eee (270),_eee (360));_ebe .LineTo (_fced ,_deab );_ebe .DrawArc (_ba ,_deab ,r ,_eee (0),_eee (90));_ebe .LineTo (_acc ,_gdd );_ebe .DrawArc (_acc ,_deab ,r ,_eee (90),_eee (180));_ebe .LineTo (_gge ,_aebb );_ebe .DrawArc (_acc ,_aebb ,r ,_eee (180),_eee (270));_ebe .ClosePath ();};func (_agc *Context )Identity (){_agc ._cef =_dc .IdentityMatrix ()};func _fbg (_aaga float64 ,_cge stops )_bb .Color {if _aaga <=0.0||len (_cge )==1{return _cge [0]._daga ;};_bfgc :=_cge [len (_cge )-1];if _aaga >=_bfgc ._dfbe {return _bfgc ._daga ;};for _debb ,_cbbc :=range _cge [1:]{if _aaga < _cbbc ._dfbe {_aaga =(_aaga -_cge [_debb ]._dfbe )/(_cbbc ._dfbe -_cge [_debb ]._dfbe );return _egc (_cge [_debb ]._daga ,_cbbc ._daga ,_aaga );};};return _bfgc ._daga ;};func (_aac *Context )Shear (x ,y float64 ){_aac ._cef .Shear (x ,y )};func (_eae *Context )TextState ()*_db .TextState {return _eae ._dcd };func (_ec *Context )SetDash (dashes ...float64 ){_ec ._ffb =dashes };func (_adfc *Context )ShearAbout (sx ,sy ,x ,y float64 ){_adfc .Translate (x ,y );_adfc .Shear (sx ,sy );_adfc .Translate (-x ,-y );};func (_bee *Context )SetRGB (r ,g ,b float64 ){_bee .SetRGBA (r ,g ,b ,1)};type linearGradient struct{_fdaa ,_dfg ,_ddc ,_dee float64 ;_aefg stops ;};func _egc (_acb ,_cbd _bb .Color ,_dgag float64 )_bb .Color {_bfdf ,_fdga ,_agcg ,_aga :=_acb .RGBA ();_fdfc ,_aage ,_ccf ,_gcc :=_cbd .RGBA ();return _bb .RGBA {_acbc (_bfdf ,_fdfc ,_dgag ),_acbc (_fdga ,_aage ,_dgag ),_acbc (_agcg ,_ccf ,_dgag ),_acbc (_aga ,_gcc ,_dgag )};};func (_ebec *Context )MeasureString (s string )(_deaa ,_cbac float64 ){_caa :=&_df .Drawer {Face :_ebec ._dcd .Tf .Face };_fbf :=_caa .MeasureString (s );return float64 (_fbf >>6),_ebec ._dcd .Tf .Size ;};type stop struct{_dfbe float64 ;_daga _bb .Color ;};func (_bffa *Context )Translate (x ,y float64 ){_bffa ._cef .Translate (x ,y )};func _gga (_gbg ,_ggdc ,_cbaa ,_baaf float64 )_db .Gradient {_bab :=&linearGradient {_fdaa :_gbg ,_dfg :_ggdc ,_ddc :_cbaa ,_dee :_baaf };return _bab ;};func (_aafb *Context )SetHexColor (x string ){_bgg ,_deg ,_gfdb ,_eed :=_cae (x );_aafb .SetRGBA255 (_bgg ,_deg ,_gfdb ,_eed );};func _dd (_a ,_bc ,_ea ,_cda ,_g ,_af ,_ga float64 )(_gc ,_gb float64 ){_cfg :=1-_ga ;_dfb :=_cfg *_cfg ;_gf :=2*_cfg *_ga ;_ae :=_ga *_ga ;_gc =_dfb *_a +_gf *_ea +_ae *_g ;_gb =_dfb *_bc +_gf *_cda +_ae *_af ;return ;};type radialGradient struct{_bdba ,_cfcf ,_gca circle ;_cbbe ,_fbc float64 ;_ecd float64 ;_bdf stops ;};func (_dege *Context )capper ()_ef .Capper {switch _dege ._aeg {case _db .LineCapButt :return _ef .ButtCapper ;case _db .LineCapRound :return _ef .RoundCapper ;case _db .LineCapSquare :return _ef .SquareCapper ;};return nil ;};func (_gce *Context )Height ()int {return _gce ._dae };func (_cebf *Context )SetMatrix (m _dc .Matrix ){_cebf ._cef =m };func (_cgag *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_cgag .Translate (x ,y );_cgag .Scale (sx ,sy );_cgag .Translate (-x ,-y );};func (_bae *Context )drawString (_ada *_bbe .RGBA ,_afg string ,_gadb ,_eddd float64 ){_bgfg :=&_df .Drawer {Dst :_ada ,Src :_bbe .NewUniform (_bae ._bbg ),Face :_bae ._dcd .Tf .Face ,Dot :_bfed (_dc .NewPoint (_gadb ,_eddd ))};_dab :=rune (-1);for _ ,_ddfd :=range _afg {if _dab >=0{_bgfg .Dot .X +=_bgfg .Face .Kern (_dab ,_ddfd );};_ggb ,_dbab ,_egdd ,_agfb ,_fda :=_bgfg .Face .Glyph (_bgfg .Dot ,_ddfd );if !_fda {continue ;};_bfc :=_ggb .Sub (_ggb .Min );_ffgf :=_ee .BiLinear ;_fb :=_bae ._cef .Clone ();_fb .Translate (float64 (_ggb .Min .X ),float64 (_ggb .Min .Y ));_cga :=_f .Aff3 {_fb [0],_fb [3],_fb [6],_fb [1],_fb [4],_fb [7]};_ffgf .Transform (_bgfg .Dst ,_cga ,_bgfg .Src ,_bfc ,_ee .Over ,&_ee .Options {SrcMask :_dbab ,SrcMaskP :_egdd });_bgfg .Dot .X +=_agfb ;_dab =_ddfd ;};};func _de (_ag ,_bf ,_fa ,_agf ,_dg ,_gcg float64 )[]_dc .Point {_aa :=(_c .Hypot (_fa -_ag ,_agf -_bf )+_c .Hypot (_dg -_fa ,_gcg -_agf ));_gfd :=int (_aa +0.5);if _gfd < 4{_gfd =4;};_gfa :=float64 (_gfd )-1;_gcf :=make ([]_dc .Point ,_gfd );for _fe :=0;_fe < _gfd ;_fe ++{_ce :=float64 (_fe )/_gfa ;_aeb ,_eaf :=_dd (_ag ,_bf ,_fa ,_agf ,_dg ,_gcg ,_ce );_gcf [_fe ]=_dc .NewPoint (_aeb ,_eaf );};return _gcf ;};func (_ffe stops )Less (i ,j int )bool {return _ffe [i ]._dfbe < _ffe [j ]._dfbe };func (_fgbc *linearGradient )AddColorStop (offset float64 ,color _bb .Color ){_fgbc ._aefg =append (_fgbc ._aefg ,stop {_dfbe :offset ,_daga :color });_b .Sort (_fgbc ._aefg );};func (_dcf *Context )drawRegularPolygon (_bdc int ,_cgc ,_ega ,_ffg ,_acae float64 ){_baa :=2*_c .Pi /float64 (_bdc );_acae -=_c .Pi /2;if _bdc %2==0{_acae +=_baa /2;};_dcf .NewSubPath ();for _cce :=0;_cce < _bdc ;_cce ++{_gff :=_acae +_baa *float64 (_cce );_dcf .LineTo (_cgc +_ffg *_c .Cos (_gff ),_ega +_ffg *_c .Sin (_gff ));};_dcf .ClosePath ();};var (_gec =_dde (_bb .White );_fdb =_dde (_bb .Black ););func (_dcb *Context )SetRGBA (r ,g ,b ,a float64 ){_dcb ._bbg =_bb .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_dcb .setFillAndStrokeColor (_dcb ._bbg );};func (_dca *Context )DrawImageAnchored (im _bbe .Image ,x ,y int ,ax ,ay float64 ){_cdg :=im .Bounds ().Size ();x -=int (ax *float64 (_cdg .X ));y -=int (ay *float64 (_cdg .Y ));_cbc :=_ee .BiLinear ;_cdad :=_dca ._cef .Clone ();_cdad .Translate (float64 (x ),float64 (y ));_egec :=_f .Aff3 {_cdad [0],_cdad [3],_cdad [6],_cdad [1],_cdad [4],_cdad [7]};if _dca ._dac ==nil {_cbc .Transform (_dca ._fdg ,_egec ,im ,im .Bounds (),_ee .Over ,nil );}else {_cbc .Transform (_dca ._fdg ,_egec ,im ,im .Bounds (),_ee .Over ,&_ee .Options {DstMask :_dca ._dac ,DstMaskP :_bbe .Point {}});};};func (_ceg *Context )DrawPoint (x ,y ,r float64 ){_ceg .Push ();_bcf ,_gag :=_ceg .Transform (x ,y );_ceg .Identity ();_ceg .DrawCircle (_bcf ,_gag ,r );_ceg .Pop ();};func (_ege *Context )ResetClip (){_ege ._dac =nil };func (_cad *Context )SetRGB255 (r ,g ,b int ){_cad .SetRGBA255 (r ,g ,b ,255)};func NewContext (width ,height int )*Context {return NewContextForRGBA (_bbe .NewRGBA (_bbe .Rect (0,0,width ,height )));};func (_cbgb stops )Len ()int {return len (_cbgb )};const (_baf repeatOp =iota ;_adeb ;_dgcd ;_ead ;);func (_dba *Context )StrokePreserve (){var _gad _ef .Painter ;if _dba ._dac ==nil {if _eef ,_aef :=_dba ._cbg .(*solidPattern );_aef {_eaa :=_ef .NewRGBAPainter (_dba ._fdg );_eaa .SetColor (_eef ._adag );_gad =_eaa ;};};if _gad ==nil {_gad =_gcga (_dba ._fdg ,_dba ._dac ,_dba ._cbg );};_dba .stroke (_gad );};type surfacePattern struct{_gebc _bbe .Image ;_acd repeatOp ;};func _cbag (_egb _ef .Path )[][]_dc .Point {var _eea [][]_dc .Point ;var _dfga []_dc .Point ;var _ceacd ,_fdfd float64 ;for _gcdg :=0;_gcdg < len (_egb );{switch _egb [_gcdg ]{case 0:if len (_dfga )> 0{_eea =append (_eea ,_dfga );_dfga =nil ;};_dbee :=_dcfd (_egb [_gcdg +1]);_cfgb :=_dcfd (_egb [_gcdg +2]);_dfga =append (_dfga ,_dc .NewPoint (_dbee ,_cfgb ));_ceacd ,_fdfd =_dbee ,_cfgb ;_gcdg +=4;case 1:_dbeeg :=_dcfd (_egb [_gcdg +1]);_efc :=_dcfd (_egb [_gcdg +2]);_dfga =append (_dfga ,_dc .NewPoint (_dbeeg ,_efc ));_ceacd ,_fdfd =_dbeeg ,_efc ;_gcdg +=4;case 2:_aacd :=_dcfd (_egb [_gcdg +1]);_dgaa :=_dcfd (_egb [_gcdg +2]);_ecbd :=_dcfd (_egb [_gcdg +3]);_bgc :=_dcfd (_egb [_gcdg +4]);_eegd :=_de (_ceacd ,_fdfd ,_aacd ,_dgaa ,_ecbd ,_bgc );_dfga =append (_dfga ,_eegd ...);_ceacd ,_fdfd =_ecbd ,_bgc ;_gcdg +=6;case 3:_geb :=_dcfd (_egb [_gcdg +1]);_ddaf :=_dcfd (_egb [_gcdg +2]);_ccg :=_dcfd (_egb [_gcdg +3]);_fea :=_dcfd (_egb [_gcdg +4]);_cfgc :=_dcfd (_egb [_gcdg +5]);_egbg :=_dcfd (_egb [_gcdg +6]);_bbc :=_cac (_ceacd ,_fdfd ,_geb ,_ddaf ,_ccg ,_fea ,_cfgc ,_egbg );_dfga =append (_dfga ,_bbc ...);_ceacd ,_fdfd =_cfgc ,_egbg ;_gcdg +=8;default:_cf .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_egb );return _eea ;};};if len (_dfga )> 0{_eea =append (_eea ,_dfga );};return _eea ;};func (_dag *Context )Pop (){_cccb :=*_dag ;_fac :=_dag ._deb ;_adc :=_fac [len (_fac )-1];*_dag =*_adc ;_dag ._egd =_cccb ._egd ;_dag ._cfa =_cccb ._cfa ;_dag ._cbb =_cccb ._cbb ;_dag ._ebg =_cccb ._ebg ;_dag ._ceb =_cccb ._ceb ;_dag ._dcd =_cccb ._dcd ;};func (_cdaa *Context )DrawString (s string ,x ,y float64 ){_cdaa .DrawStringAnchored (s ,x ,y ,0,0)};func (_fdgc *Context )Clip (){_fdgc .ClipPreserve ();_fdgc .ClearPath ()};func (_ebd *Context )SetStrokeStyle (pattern _db .Pattern ){_ebd ._cbg =pattern };type stops []stop ;func (_bcg *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _fdf =16;for _fef :=0;_fef < _fdf ;_fef ++{_cefe :=float64 (_fef +0)/_fdf ;_gae :=float64 (_fef +1)/_fdf ;_gbe :=angle1 +(angle2 -angle1 )*_cefe ;_cadg :=angle1 +(angle2 -angle1 )*_gae ;_cba :=x +rx *_c .Cos (_gbe );_bba :=y +ry *_c .Sin (_gbe );_gfda :=x +rx *_c .Cos ((_gbe +_cadg )/2);_cff :=y +ry *_c .Sin ((_gbe +_cadg )/2);_beb :=x +rx *_c .Cos (_cadg );_aedg :=y +ry *_c .Sin (_cadg );_fgd :=2*_gfda -_cba /2-_beb /2;_dfbc :=2*_cff -_bba /2-_aedg /2;if _fef ==0{if _bcg ._ceb {_bcg .LineTo (_cba ,_bba );}else {_bcg .MoveTo (_cba ,_bba );};};_bcg .QuadraticTo (_fgd ,_dfbc ,_beb ,_aedg );};};func (_dce *Context )MoveTo (x ,y float64 ){if _dce ._ceb {_dce ._cfa .Add1 (_bfed (_dce ._cbb ));};x ,y =_dce .Transform (x ,y );_efd :=_dc .NewPoint (x ,y );_ace :=_bfed (_efd );_dce ._egd .Start (_ace );_dce ._cfa .Start (_ace );_dce ._cbb =_efd ;_dce ._ebg =_efd ;_dce ._ceb =true ;};func (_cca *Context )SetLineCap (lineCap _db .LineCap ){_cca ._aeg =lineCap };func (_ebga *Context )RotateAbout (angle ,x ,y float64 ){_ebga .Translate (x ,y );_ebga .Rotate (angle );_ebga .Translate (-x ,-y );};func (_aba *Context )SetLineJoin (lineJoin _db .LineJoin ){_aba ._fc =lineJoin };func (_eeg *Context )ClearPath (){_eeg ._egd .Clear ();_eeg ._cfa .Clear ();_eeg ._ceb =false };func _dedb (_dgc ,_bcb ,_ddb ,_agd ,_deee ,_dgd float64 )_db .Gradient {_abf :=circle {_dgc ,_bcb ,_ddb };_eged :=circle {_agd ,_deee ,_dgd };_gfb :=circle {_agd -_dgc ,_deee -_bcb ,_dgd -_ddb };_aag :=_aaa (_gfb ._bce ,_gfb ._babe ,-_gfb ._adab ,_gfb ._bce ,_gfb ._babe ,_gfb ._adab );var _gcdb float64 ;if _aag !=0{_gcdb =1.0/_aag ;};_ffdd :=-_abf ._adab ;_dfcb :=&radialGradient {_bdba :_abf ,_cfcf :_eged ,_gca :_gfb ,_cbbe :_aag ,_fbc :_gcdb ,_ecd :_ffdd };return _dfcb ;};func (_eebf *Context )SetLineWidth (lineWidth float64 ){_eebf ._edd =lineWidth };func (_dacb *Context )ClipPreserve (){_adfd :=_bbe .NewAlpha (_bbe .Rect (0,0,_dacb ._aed ,_dacb ._dae ));_gbcg :=_ef .NewAlphaOverPainter (_adfd );_dacb .fill (_gbcg );if _dacb ._dac ==nil {_dacb ._dac =_adfd ;}else {_afe :=_bbe .NewAlpha (_bbe .Rect (0,0,_dacb ._aed ,_dacb ._dae ));_ee .DrawMask (_afe ,_afe .Bounds (),_adfd ,_bbe .Point {},_dacb ._dac ,_bbe .Point {},_ee .Over );_dacb ._dac =_afe ;};};func (_feg *Context )Image ()_bbe .Image {return _feg ._fdg };func _eaaf (_dge [][]_dc .Point ,_bec []float64 ,_dbaa float64 )[][]_dc .Point {var _gdea [][]_dc .Point ;if len (_bec )==0{return _dge ;};if len (_bec )==1{_bec =append (_bec ,_bec [0]);};for _ ,_gbaf :=range _dge {if len (_gbaf )< 2{continue ;};_gaba :=_gbaf [0];_ddad :=1;_cbae :=0;_faa :=0.0;if _dbaa !=0{var _agfbd float64 ;for _ ,_afa :=range _bec {_agfbd +=_afa ;};_dbaa =_c .Mod (_dbaa ,_agfbd );if _dbaa < 0{_dbaa +=_agfbd ;};for _bgad ,_bdg :=range _bec {_dbaa -=_bdg ;if _dbaa < 0{_cbae =_bgad ;_faa =_bdg +_dbaa ;break ;};};};var _bgec []_dc .Point ;_bgec =append (_bgec ,_gaba );for _ddad < len (_gbaf ){_aee :=_bec [_cbae ];_fbb :=_gbaf [_ddad ];_eeag :=_gaba .Distance (_fbb );_afc :=_aee -_faa ;if _eeag > _afc {_cadf :=_afc /_eeag ;_dbb :=_gaba .Interpolate (_fbb ,_cadf );_bgec =append (_bgec ,_dbb );if _cbae %2==0&&len (_bgec )> 1{_gdea =append (_gdea ,_bgec );};_bgec =nil ;_bgec =append (_bgec ,_dbb );_faa =0;_gaba =_dbb ;_cbae =(_cbae +1)%len (_bec );}else {_bgec =append (_bgec ,_fbb );_gaba =_fbb ;_faa +=_eeag ;_ddad ++;};};if _cbae %2==0&&len (_bgec )> 1{_gdea =append (_gdea ,_bgec );};};return _gdea ;};func _dcfd (_cdgb _bg .Int26_6 )float64 {const _cab ,_aafe =6,1<<6-1;if _cdgb >=0{return float64 (_cdgb >>_cab )+float64 (_cdgb &_aafe )/64;};_cdgb =-_cdgb ;if _cdgb >=0{return -(float64 (_cdgb >>_cab )+float64 (_cdgb &_aafe )/64);};return 0;};func _cae (_gdgg string )(_fbbc ,_dfd ,_eagbb ,_dcbg int ){_gdgg =_cd .TrimPrefix (_gdgg ,"\u0023");_dcbg =255;if len (_gdgg )==3{_ebab :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_cc .Sscanf (_gdgg ,_ebab ,&_fbbc ,&_dfd ,&_eagbb );_fbbc |=_fbbc <<4;_dfd |=_dfd <<4;_eagbb |=_eagbb <<4;};if len (_gdgg )==6{_adaf :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_cc .Sscanf (_gdgg ,_adaf ,&_fbbc ,&_dfd ,&_eagbb );};if len (_gdgg )==8{_cgg :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_cc .Sscanf (_gdgg ,_cgg ,&_fbbc ,&_dfd ,&_eagbb ,&_dcbg );};return ;};func _bfed (_cfad _dc .Point )_bg .Point26_6 {return _bg .Point26_6 {X :_bbca (_cfad .X ),Y :_bbca (_cfad .Y )}};func _acbc (_fbgg ,_aagd uint32 ,_eda float64 )uint8 {return uint8 (int32 (float64 (_fbgg )*(1.0-_eda )+float64 (_aagd )*_eda )>>8);};func (_ebde *Context )SetRGBA255 (r ,g ,b ,a int ){_ebde ._bbg =_bb .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_ebde .setFillAndStrokeColor (_ebde ._bbg );};func (_dagaf *patternPainter )Paint (ss []_ef .Span ,done bool ){_eabb :=_dagaf ._acbcd .Bounds ();for _ ,_abg :=range ss {if _abg .Y < _eabb .Min .Y {continue ;};if _abg .Y >=_eabb .Max .Y {return ;};if _abg .X0 < _eabb .Min .X {_abg .X0 =_eabb .Min .X ;};if _abg .X1 > _eabb .Max .X {_abg .X1 =_eabb .Max .X ;};if _abg .X0 >=_abg .X1 {continue ;};const _gagd =1<<16-1;_cbbd :=_abg .Y -_dagaf ._acbcd .Rect .Min .Y ;_ggec :=_abg .X0 -_dagaf ._acbcd .Rect .Min .X ;_acee :=(_abg .Y -_dagaf ._acbcd .Rect .Min .Y )*_dagaf ._acbcd .Stride +(_abg .X0 -_dagaf ._acbcd .Rect .Min .X )*4;_agae :=_acee +(_abg .X1 -_abg .X0 )*4;for _dcbb ,_fgc :=_acee ,_ggec ;_dcbb < _agae ;_dcbb ,_fgc =_dcbb +4,_fgc +1{_adec :=_abg .Alpha ;if _dagaf ._ece !=nil {_adec =_adec *uint32 (_dagaf ._ece .AlphaAt (_fgc ,_cbbd ).A )/255;if _adec ==0{continue ;};};_degf :=_dagaf ._bfeg .ColorAt (_fgc ,_cbbd );_adcd ,_dbc ,_agee ,_fcdf :=_degf .RGBA ();_gbf :=uint32 (_dagaf ._acbcd .Pix [_dcbb +0]);_aeda :=uint32 (_dagaf ._acbcd .Pix [_dcbb +1]);_bdbb :=uint32 (_dagaf ._acbcd .Pix [_dcbb +2]);_gfcc :=uint32 (_dagaf ._acbcd .Pix [_dcbb +3]);_bafd :=(_gagd -(_fcdf *_adec /_gagd ))*0x101;_dagaf ._acbcd .Pix [_dcbb +0]=uint8 ((_gbf *_bafd +_adcd *_adec )/_gagd >>8);_dagaf ._acbcd .Pix [_dcbb +1]=uint8 ((_aeda *_bafd +_dbc *_adec )/_gagd >>8);_dagaf ._acbcd .Pix [_dcbb +2]=uint8 ((_bdbb *_bafd +_agee *_adec )/_gagd >>8);_dagaf ._acbcd .Pix [_dcbb +3]=uint8 ((_gfcc *_bafd +_fcdf *_adec )/_gagd >>8);};};};func (_ad *Context )Width ()int {return _ad ._aed };type patternPainter struct{_acbcd *_bbe .RGBA ;_ece *_bbe .Alpha ;_bfeg _db .Pattern ;};func (_bfd *Context )Clear (){_ecf :=_bbe .NewUniform (_bfd ._bbg );_ee .Draw (_bfd ._fdg ,_bfd ._fdg .Bounds (),_ecf ,_bbe .Point {},_ee .Src );};func (_ageg *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_ageg .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func (_agg *radialGradient )ColorAt (x ,y int )_bb .Color {if len (_agg ._bdf )==0{return _bb .Transparent ;};_gcae ,_gbed :=float64 (x )+0.5-_agg ._bdba ._bce ,float64 (y )+0.5-_agg ._bdba ._babe ;_cgaf :=_aaa (_gcae ,_gbed ,_agg ._bdba ._adab ,_agg ._gca ._bce ,_agg ._gca ._babe ,_agg ._gca ._adab );_ecb :=_aaa (_gcae ,_gbed ,-_agg ._bdba ._adab ,_gcae ,_gbed ,_agg ._bdba ._adab );if _agg ._cbbe ==0{if _cgaf ==0{return _bb .Transparent ;};_gcab :=0.5*_ecb /_cgaf ;if _gcab *_agg ._gca ._adab >=_agg ._ecd {return _fbg (_gcab ,_agg ._bdf );};return _bb .Transparent ;};_agb :=_aaa (_cgaf ,_agg ._cbbe ,0,_cgaf ,-_ecb ,0);if _agb >=0{_bgee :=_c .Sqrt (_agb );_fdgd :=(_cgaf +_bgee )*_agg ._fbc ;_gdc :=(_cgaf -_bgee )*_agg ._fbc ;if _fdgd *_agg ._gca ._adab >=_agg ._ecd {return _fbg (_fdgd ,_agg ._bdf );}else if _gdc *_agg ._gca ._adab >=_agg ._ecd {return _fbg (_gdc ,_agg ._bdf );};};return _bb .Transparent ;};func (_daed *Context )SetPixel (x ,y int ){_daed ._fdg .Set (x ,y ,_daed ._bbg )};func (_cefa *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_cefa .MoveTo (x1 ,y1 );_cefa .LineTo (x2 ,y2 )};func _eee (_aea float64 )float64 {return _aea *_c .Pi /180};func (_gba *Context )stroke (_age _ef .Painter ){_eba :=_gba ._egd ;if len (_gba ._ffb )> 0{_eba =_eac (_eba ,_gba ._ffb ,_gba ._cg );}else {_eba =_acbd (_cbag (_eba ));};_ffd :=_gba ._aec ;_ffd .UseNonZeroWinding =true ;_ffd .Clear ();_ffd .AddStroke (_eba ,_bbca (_gba ._edd ),_gba .capper (),_gba .joiner ());_ffd .Rasterize (_age );};func _cac (_bcd ,_gab ,_bef ,_ab ,_ge ,_eg ,_afb ,_ac float64 )[]_dc .Point {_gbc :=(_c .Hypot (_bef -_bcd ,_ab -_gab )+_c .Hypot (_ge -_bef ,_eg -_ab )+_c .Hypot (_afb -_ge ,_ac -_eg ));_bgf :=int (_gbc +0.5);if _bgf < 4{_bgf =4;};_def :=float64 (_bgf )-1;_ccc :=make ([]_dc .Point ,_bgf );for _gg :=0;_gg < _bgf ;_gg ++{_bfb :=float64 (_gg )/_def ;_ed ,_bbf :=_ff (_bcd ,_gab ,_bef ,_ab ,_ge ,_eg ,_afb ,_ac ,_bfb );_ccc [_gg ]=_dc .NewPoint (_ed ,_bbf );};return _ccc ;};func (_bge *Context )ClosePath (){if _bge ._ceb {_gfc :=_bfed (_bge ._cbb );_bge ._egd .Add1 (_gfc );_bge ._cfa .Add1 (_gfc );_bge ._ebg =_bge ._cbb ;};};func (_cea *Context )SetFillRGBA (r ,g ,b ,a float64 ){_afba :=_bb .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_cea ._bbg =_afba ;_cea ._edf =_dde (_afba );};func (_gcec *Context )Fill (){_gcec .FillPreserve ();_gcec .ClearPath ()};func _cdeg (_gbag _bbe .Image ,_dbda repeatOp )_db .Pattern {return &surfacePattern {_gebc :_gbag ,_acd :_dbda };};func (_ffec *linearGradient )ColorAt (x ,y int )_bb .Color {if len (_ffec ._aefg )==0{return _bb .Transparent ;};_cgfg ,_ffbd :=float64 (x ),float64 (y );_fdae ,_cfbg ,_egef ,_fcc :=_ffec ._fdaa ,_ffec ._dfg ,_ffec ._ddc ,_ffec ._dee ;_cfc ,_cde :=_egef -_fdae ,_fcc -_cfbg ;if _cde ==0&&_cfc !=0{return _fbg ((_cgfg -_fdae )/_cfc ,_ffec ._aefg );};if _cfc ==0&&_cde !=0{return _fbg ((_ffbd -_cfbg )/_cde ,_ffec ._aefg );};_fcd :=_cfc *(_cgfg -_fdae )+_cde *(_ffbd -_cfbg );if _fcd < 0{return _ffec ._aefg [0]._daga ;};_bcgc :=_c .Hypot (_cfc ,_cde );_fdfe :=((_cgfg -_fdae )*-_cde +(_ffbd -_cfbg )*_cfc )/(_bcgc *_bcgc );_bdb ,_cgb :=_fdae +_fdfe *-_cde ,_cfbg +_fdfe *_cfc ;_afbd :=_c .Hypot (_cgfg -_bdb ,_ffbd -_cgb )/_bcgc ;return _fbg (_afbd ,_ffec ._aefg );};func (_fce *Context )setFillAndStrokeColor (_fg _bb .Color ){_fce ._bbg =_fg ;_fce ._edf =_dde (_fg );_fce ._cbg =_dde (_fg );};func (_ecg *Context )Rotate (angle float64 ){_ecg ._cef .Rotate (angle )};type repeatOp int ;func (_eaaa *Context )InvertMask (){if _eaaa ._dac ==nil {_eaaa ._dac =_bbe .NewAlpha (_eaaa ._fdg .Bounds ());}else {for _gcfa ,_aabe :=range _eaaa ._dac .Pix {_eaaa ._dac .Pix [_gcfa ]=255-_aabe ;};};};func (_aega *Context )Matrix ()_dc .Matrix {return _aega ._cef };func NewContextForImage (im _bbe .Image )*Context {return NewContextForRGBA (_fbfg (im ))};func (_bgb *surfacePattern )ColorAt (x ,y int )_bb .Color {_add :=_bgb ._gebc .Bounds ();switch _bgb ._acd {case _adeb :if y >=_add .Dy (){return _bb .Transparent ;};case _dgcd :if x >=_add .Dx (){return _bb .Transparent ;};case _ead :if x >=_add .Dx ()||y >=_add .Dy (){return _bb .Transparent ;};};x =x %_add .Dx ()+_add .Min .X ;y =y %_add .Dy ()+_add .Min .Y ;return _bgb ._gebc .At (x ,y );};func (_dgfg *Context )fill (_bfac _ef .Painter ){_cdbc :=_dgfg ._cfa ;if _dgfg ._ceb {_cdbc =make (_ef .Path ,len (_dgfg ._cfa ));copy (_cdbc ,_dgfg ._cfa );_cdbc .Add1 (_bfed (_dgfg ._cbb ));};_bgef :=_dgfg ._aec ;_bgef .UseNonZeroWinding =_dgfg ._aaf ==_db .FillRuleWinding ;_bgef .Clear ();_bgef .AddPath (_cdbc );_bgef .Rasterize (_bfac );};func _fbfg (_gbff _bbe .Image )*_bbe .RGBA {_gda :=_gbff .Bounds ();_agfd :=_bbe .NewRGBA (_gda );_cdb .Draw (_agfd ,_gda ,_gbff ,_gda .Min ,_cdb .Src );return _agfd ;};func _gcga (_acbcb *_bbe .RGBA ,_fad *_bbe .Alpha ,_daf _db .Pattern )*patternPainter {return &patternPainter {_acbcb ,_fad ,_daf };};func _bbca (_efcg float64 )_bg .Int26_6 {return _bg .Int26_6 (_efcg *64)};func (_ebc *Context )Transform (x ,y float64 )(_ccb ,_gdg float64 ){return _ebc ._cef .Transform (x ,y )};func (_fgb *Context )DrawImage (im _bbe .Image ,x ,y int ){_fgb .DrawImageAnchored (im ,x ,y ,0,0)};func (_ggd *Context )DrawCircle (x ,y ,r float64 ){_ggd .NewSubPath ();_ggd .DrawEllipticalArc (x ,y ,r ,r ,0,2*_c .Pi );_ggd .ClosePath ();};func (_cgf *Context )SetFillRule (fillRule _db .FillRule ){_cgf ._aaf =fillRule };func _dde (_dece _bb .Color )_db .Pattern {return &solidPattern {_adag :_dece }};