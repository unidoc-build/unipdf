//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package imagerender ;import (_g "errors";_d "fmt";_df "github.com/golang/freetype/raster";_b "github.com/unidoc/unipdf/v3/common";_gb "github.com/unidoc/unipdf/v3/internal/transform";_dcc "github.com/unidoc/unipdf/v3/render/internal/context";_f "golang.org/x/image/draw";_bd "golang.org/x/image/font";_de "golang.org/x/image/math/f64";_bf "golang.org/x/image/math/fixed";_ebf "image";_a "image/color";_af "image/draw";_e "math";_dc "sort";_eb "strings";);func (_cf *Context )LineTo (x ,y float64 ){if !_cf ._dbag {_cf .MoveTo (x ,y );}else {x ,y =_cf .Transform (x ,y );_dda :=_gb .NewPoint (x ,y );_bea :=_aabc (_dda );_cf ._ddc .Add1 (_bea );_cf ._ge .Add1 (_bea );_cf ._daa =_dda ;};};func (_edeg *Context )CubicTo (x1 ,y1 ,x2 ,y2 ,x3 ,y3 float64 ){if !_edeg ._dbag {_edeg .MoveTo (x1 ,y1 );};_dede ,_dgcg :=_edeg ._daa .X ,_edeg ._daa .Y ;x1 ,y1 =_edeg .Transform (x1 ,y1 );x2 ,y2 =_edeg .Transform (x2 ,y2 );x3 ,y3 =_edeg .Transform (x3 ,y3 );_cda :=_afd (_dede ,_dgcg ,x1 ,y1 ,x2 ,y2 ,x3 ,y3 );_dbg :=_aabc (_edeg ._daa );for _ ,_bcf :=range _cda [1:]{_begb :=_aabc (_bcf );if _begb ==_dbg {continue ;};_dbg =_begb ;_edeg ._ddc .Add1 (_begb );_edeg ._ge .Add1 (_begb );_edeg ._daa =_bcf ;};};func (_eec *Context )SetRGB (r ,g ,b float64 ){_eec .SetRGBA (r ,g ,b ,1)};func (_fcf *Context )LineWidth ()float64 {return _fcf ._eef };func (_bdc *Context )DrawPoint (x ,y ,r float64 ){_bdc .Push ();_cfa ,_edg :=_bdc .Transform (x ,y );_bdc .Identity ();_bdc .DrawCircle (_cfa ,_edg ,r );_bdc .Pop ();};func (_fbd *Context )SetHexColor (x string ){_cdfg ,_cdc ,_ccc ,_dcg :=_dega (x );_fbd .SetRGBA255 (_cdfg ,_cdc ,_ccc ,_dcg );};func (_ddb *Context )FillPreserve (){var _cfb _df .Painter ;if _ddb ._gge ==nil {if _cdbc ,_gab :=_ddb ._cdf .(*solidPattern );_gab {_eag :=_df .NewRGBAPainter (_ddb ._aac );_eag .SetColor (_cdbc ._dcff );_cfb =_eag ;};};if _cfb ==nil {_cfb =_faga (_ddb ._aac ,_ddb ._gge ,_ddb ._cdf );};_ddb .fill (_cfb );};func (_baf *Context )Transform (x ,y float64 )(_ebdb ,_cgb float64 ){return _baf ._afb .Transform (x ,y )};func (_ffb *Context )DrawCircle (x ,y ,r float64 ){_ffb .NewSubPath ();_ffb .DrawEllipticalArc (x ,y ,r ,r ,0,2*_e .Pi );_ffb .ClosePath ();};func (_cce *linearGradient )ColorAt (x ,y int )_a .Color {if len (_cce ._cca )==0{return _a .Transparent ;};_dcf ,_gcc :=float64 (x ),float64 (y );_fbad ,_ccee ,_abg ,_eff :=_cce ._dccg ,_cce ._ggg ,_cce ._fdfc ,_cce ._ecab ;_debg ,_gfb :=_abg -_fbad ,_eff -_ccee ;if _gfb ==0&&_debg !=0{return _gbfg ((_dcf -_fbad )/_debg ,_cce ._cca );};if _debg ==0&&_gfb !=0{return _gbfg ((_gcc -_ccee )/_gfb ,_cce ._cca );};_adb :=_debg *(_dcf -_fbad )+_gfb *(_gcc -_ccee );if _adb < 0{return _cce ._cca [0]._ffbd ;};_egd :=_e .Hypot (_debg ,_gfb );_ebba :=((_dcf -_fbad )*-_gfb +(_gcc -_ccee )*_debg )/(_egd *_egd );_fag ,_dagd :=_fbad +_ebba *-_gfb ,_ccee +_ebba *_debg ;_ebdf :=_e .Hypot (_dcf -_fag ,_gcc -_dagd )/_egd ;return _gbfg (_ebdf ,_cce ._cca );};func (_ggb *Context )DrawEllipticalArc (x ,y ,rx ,ry ,angle1 ,angle2 float64 ){const _gdb =16;for _bae :=0;_bae < _gdb ;_bae ++{_bcd :=float64 (_bae +0)/_gdb ;_cdaf :=float64 (_bae +1)/_gdb ;_eac :=angle1 +(angle2 -angle1 )*_bcd ;_gfdf :=angle1 +(angle2 -angle1 )*_cdaf ;_afef :=x +rx *_e .Cos (_eac );_ebb :=y +ry *_e .Sin (_eac );_dfe :=x +rx *_e .Cos ((_eac +_gfdf )/2);_gaa :=y +ry *_e .Sin ((_eac +_gfdf )/2);_adfe :=x +rx *_e .Cos (_gfdf );_beefg :=y +ry *_e .Sin (_gfdf );_dff :=2*_dfe -_afef /2-_adfe /2;_bge :=2*_gaa -_ebb /2-_beefg /2;if _bae ==0{if _ggb ._dbag {_ggb .LineTo (_afef ,_ebb );}else {_ggb .MoveTo (_afef ,_ebb );};};_ggb .QuadraticTo (_dff ,_bge ,_adfe ,_beefg );};};func _afd (_fba ,_cg ,_acb ,_fca ,_cc ,_gg ,_dgc ,_cb float64 )[]_gb .Point {_da :=(_e .Hypot (_acb -_fba ,_fca -_cg )+_e .Hypot (_cc -_acb ,_gg -_fca )+_e .Hypot (_dgc -_cc ,_cb -_gg ));_bg :=int (_da +0.5);if _bg < 4{_bg =4;};_afe :=float64 (_bg )-1;_egf :=make ([]_gb .Point ,_bg );for _efe :=0;_efe < _bg ;_efe ++{_cac :=float64 (_efe )/_afe ;_gc ,_ga :=_fd (_fba ,_cg ,_acb ,_fca ,_cc ,_gg ,_dgc ,_cb ,_cac );_egf [_efe ]=_gb .NewPoint (_gc ,_ga );};return _egf ;};func (_acd *Context )Width ()int {return _acd ._gd };func (_gdaa stops )Len ()int {return len (_gdaa )};func (_fbda *Context )SetRGBA255 (r ,g ,b ,a int ){_fbda ._fda =_a .NRGBA {uint8 (r ),uint8 (g ),uint8 (b ),uint8 (a )};_fbda .setFillAndStrokeColor (_fbda ._fda );};func (_fdbe *Context )StrokePreserve (){var _efa _df .Painter ;if _fdbe ._gge ==nil {if _cbc ,_gcf :=_fdbe ._gdf .(*solidPattern );_gcf {_eda :=_df .NewRGBAPainter (_fdbe ._aac );_eda .SetColor (_cbc ._dcff );_efa =_eda ;};};if _efa ==nil {_efa =_faga (_fdbe ._aac ,_fdbe ._gge ,_fdbe ._gdf );};_fdbe .stroke (_efa );};func _aedb (_dadg ,_cae uint32 ,_add float64 )uint8 {return uint8 (int32 (float64 (_dadg )*(1.0-_add )+float64 (_cae )*_add )>>8);};func (_cga *Context )InvertMask (){if _cga ._gge ==nil {_cga ._gge =_ebf .NewAlpha (_cga ._aac .Bounds ());}else {for _fdf ,_cge :=range _cga ._gge .Pix {_cga ._gge .Pix [_fdf ]=255-_cge ;};};};func (_gfd *Context )SetDashOffset (offset float64 ){_gfd ._fdb =offset };func _fd (_dba ,_aa ,_ef ,_agb ,_fa ,_dfg ,_abca ,_accb ,_fe float64 )(_be ,_efc float64 ){_fb :=1-_fe ;_abb :=_fb *_fb *_fb ;_dbc :=3*_fb *_fb *_fe ;_bfe :=3*_fb *_fe *_fe ;_aae :=_fe *_fe *_fe ;_be =_abb *_dba +_dbc *_ef +_bfe *_fa +_aae *_abca ;_efc =_abb *_aa +_dbc *_agb +_bfe *_dfg +_aae *_accb ;return ;};func (_aea *Context )SetFillRGBA (r ,g ,b ,a float64 ){_bef :=_a .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_aea ._fda =_bef ;_aea ._cdf =_abcb (_bef );};func _daea (_efg ,_ebde ,_adbe ,_bdde ,_dgec ,_fef float64 )float64 {return _efg *_bdde +_ebde *_dgec +_adbe *_fef ;};func (_bdd *Context )Matrix ()_gb .Matrix {return _bdd ._afb };func (_gfa *Context )ResetClip (){_gfa ._gge =nil };func _acde (_ggd _ebf .Image ,_afeg repeatOp )_dcc .Pattern {return &surfacePattern {_gfab :_ggd ,_gaf :_afeg };};func _abcb (_dfb _a .Color )_dcc .Pattern {return &solidPattern {_dcff :_dfb }};func (_cdd *Context )ShearAbout (sx ,sy ,x ,y float64 ){_cdd .Translate (x ,y );_cdd .Shear (sx ,sy );_cdd .Translate (-x ,-y );};func NewContextForRGBA (im *_ebf .RGBA )*Context {_bcca :=im .Bounds ().Size ().X ;_deg :=im .Bounds ().Size ().Y ;return &Context {_gd :_bcca ,_afg :_deg ,_eca :_df .NewRasterizer (_bcca ,_deg ),_aac :im ,_fda :_a .Transparent ,_cdf :_edd ,_gdf :_gce ,_eef :1,_bba :_dcc .FillRuleWinding ,_afb :_gb .IdentityMatrix (),_bee :_dcc .NewTextState ()};};func (_efeb *Context )stroke (_fg _df .Painter ){_bbc :=_efeb ._ddc ;if len (_efeb ._bcc )> 0{_bbc =_ageb (_bbc ,_efeb ._bcc ,_efeb ._fdb );}else {_bbc =_dgcaa (_baba (_bbc ));};_bca :=_efeb ._eca ;_bca .UseNonZeroWinding =true ;_bca .Clear ();_bca .AddStroke (_bbc ,_acaf (_efeb ._eef ),_efeb .capper (),_efeb .joiner ());_bca .Rasterize (_fg );};func (_cdbg *Context )SetStrokeRGBA (r ,g ,b ,a float64 ){_agbb :=_a .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_cdbg ._gdf =_abcb (_agbb );};func (_dae *linearGradient )AddColorStop (offset float64 ,color _a .Color ){_dae ._cca =append (_dae ._cca ,stop {_bdcaa :offset ,_ffbd :color });_dc .Sort (_dae ._cca );};func (_bdbb *Context )Identity (){_bdbb ._afb =_gb .IdentityMatrix ()};func (_cacb *Context )Pop (){_dffc :=*_cacb ;_cdge :=_cacb ._bed ;_fed :=_cdge [len (_cdge )-1];*_cacb =*_fed ;_cacb ._ddc =_dffc ._ddc ;_cacb ._ge =_dffc ._ge ;_cacb ._cbf =_dffc ._cbf ;_cacb ._daa =_dffc ._daa ;_cacb ._dbag =_dffc ._dbag ;_cacb ._bee =_dffc ._bee ;};func NewContext (width ,height int )*Context {return NewContextForRGBA (_ebf .NewRGBA (_ebf .Rect (0,0,width ,height )));};func _aabc (_ecb _gb .Point )_bf .Point26_6 {return _bf .Point26_6 {X :_acaf (_ecb .X ),Y :_acaf (_ecb .Y )}};func _cag (_ffec ,_fbc ,_dgdf ,_gca ,_fced ,_adbf float64 )_dcc .Gradient {_eed :=circle {_ffec ,_fbc ,_dgdf };_bag :=circle {_gca ,_fced ,_adbf };_dcb :=circle {_gca -_ffec ,_fced -_fbc ,_adbf -_dgdf };_edbf :=_daea (_dcb ._bab ,_dcb ._cfag ,-_dcb ._cef ,_dcb ._bab ,_dcb ._cfag ,_dcb ._cef );var _aggd float64 ;if _edbf !=0{_aggd =1.0/_edbf ;};_fece :=-_eed ._cef ;_gba :=&radialGradient {_fdfg :_eed ,_dge :_bag ,_cbe :_dcb ,_bde :_edbf ,_cgaf :_aggd ,_eecg :_fece };return _gba ;};type stop struct{_bdcaa float64 ;_ffbd _a .Color ;};func NewContextForImage (im _ebf .Image )*Context {return NewContextForRGBA (_ffgg (im ))};func (_gcb *Context )Clip (){_gcb .ClipPreserve ();_gcb .ClearPath ()};var (_edd =_abcb (_a .White );_gce =_abcb (_a .Black ););type radialGradient struct{_fdfg ,_dge ,_cbe circle ;_bde ,_cgaf float64 ;_eecg float64 ;_adg stops ;};func (_ba *Context )AsMask ()*_ebf .Alpha {_bec :=_ebf .NewAlpha (_ba ._aac .Bounds ());_f .Draw (_bec ,_ba ._aac .Bounds (),_ba ._aac ,_ebf .Point {},_f .Src );return _bec ;};func (_geg *Context )drawRegularPolygon (_cfc int ,_bdca ,_cfe ,_gcdc ,_cbbb float64 ){_fcac :=2*_e .Pi /float64 (_cfc );_cbbb -=_e .Pi /2;if _cfc %2==0{_cbbb +=_fcac /2;};_geg .NewSubPath ();for _bgf :=0;_bgf < _cfc ;_bgf ++{_afgc :=_cbbb +_fcac *float64 (_bgf );_geg .LineTo (_bdca +_gcdc *_e .Cos (_afgc ),_cfe +_gcdc *_e .Sin (_afgc ));};_geg .ClosePath ();};func (_cadg stops )Swap (i ,j int ){_cadg [i ],_cadg [j ]=_cadg [j ],_cadg [i ]};func (_fbg *Context )ScaleAbout (sx ,sy ,x ,y float64 ){_fbg .Translate (x ,y );_fbg .Scale (sx ,sy );_fbg .Translate (-x ,-y );};func (_ced *Context )Height ()int {return _ced ._afg };type circle struct{_bab ,_cfag ,_cef float64 };func (_cgea *surfacePattern )ColorAt (x ,y int )_a .Color {_aagd :=_cgea ._gfab .Bounds ();switch _cgea ._gaf {case _eabg :if y >=_aagd .Dy (){return _a .Transparent ;};case _aeab :if x >=_aagd .Dx (){return _a .Transparent ;};case _bbd :if x >=_aagd .Dx ()||y >=_aagd .Dy (){return _a .Transparent ;};};x =x %_aagd .Dx ()+_aagd .Min .X ;y =y %_aagd .Dy ()+_aagd .Min .Y ;return _cgea ._gfab .At (x ,y );};func (_bfee *Context )setFillAndStrokeColor (_dccc _a .Color ){_bfee ._fda =_dccc ;_bfee ._cdf =_abcb (_dccc );_bfee ._gdf =_abcb (_dccc );};func (_aab *Context )NewSubPath (){if _aab ._dbag {_aab ._ge .Add1 (_aabc (_aab ._cbf ));};_aab ._dbag =false ;};func (_fea *Context )joiner ()_df .Joiner {switch _fea ._agg {case _dcc .LineJoinBevel :return _df .BevelJoiner ;case _dcc .LineJoinRound :return _df .RoundJoiner ;};return nil ;};func (_dbcc *Context )SetFillRule (fillRule _dcc .FillRule ){_dbcc ._bba =fillRule };func (_bbf *Context )Translate (x ,y float64 ){_bbf ._afb .Translate (x ,y )};func (_beef *Context )MoveTo (x ,y float64 ){if _beef ._dbag {_beef ._ge .Add1 (_aabc (_beef ._cbf ));};x ,y =_beef .Transform (x ,y );_gee :=_gb .NewPoint (x ,y );_fbab :=_aabc (_gee );_beef ._ddc .Start (_fbab );_beef ._ge .Start (_fbab );_beef ._cbf =_gee ;_beef ._daa =_gee ;_beef ._dbag =true ;};func (_eab *Context )DrawRoundedRectangle (x ,y ,w ,h ,r float64 ){_gdfe ,_fbf ,_bcfc ,_efed :=x ,x +r ,x +w -r ,x +w ;_dgf ,_gda ,_bgb ,_fce :=y ,y +r ,y +h -r ,y +h ;_eab .NewSubPath ();_eab .MoveTo (_fbf ,_dgf );_eab .LineTo (_bcfc ,_dgf );_eab .DrawArc (_bcfc ,_gda ,r ,_dbaa (270),_dbaa (360));_eab .LineTo (_efed ,_bgb );_eab .DrawArc (_bcfc ,_bgb ,r ,_dbaa (0),_dbaa (90));_eab .LineTo (_fbf ,_fce );_eab .DrawArc (_fbf ,_bgb ,r ,_dbaa (90),_dbaa (180));_eab .LineTo (_gdfe ,_gda );_eab .DrawArc (_fbf ,_gda ,r ,_dbaa (180),_dbaa (270));_eab .ClosePath ();};func (_bdb *Context )MeasureString (s string )(_cec ,_gdff float64 ){_deda :=&_bd .Drawer {Face :_bdb ._bee .Tf .Face };_gef :=_deda .MeasureString (s );return float64 (_gef >>6),_bdb ._bee .Tf .Size ;};func (_gagd *Context )DrawArc (x ,y ,r ,angle1 ,angle2 float64 ){_gagd .DrawEllipticalArc (x ,y ,r ,r ,angle1 ,angle2 );};func (_cbb *Context )DrawEllipse (x ,y ,rx ,ry float64 ){_cbb .NewSubPath ();_cbb .DrawEllipticalArc (x ,y ,rx ,ry ,0,2*_e .Pi );_cbb .ClosePath ();};func (_ccb *Context )SetPixel (x ,y int ){_ccb ._aac .Set (x ,y ,_ccb ._fda )};type repeatOp int ;func (_bga *Context )fill (_ecd _df .Painter ){_dde :=_bga ._ge ;if _bga ._dbag {_dde =make (_df .Path ,len (_bga ._ge ));copy (_dde ,_bga ._ge );_dde .Add1 (_aabc (_bga ._cbf ));};_bfc :=_bga ._eca ;_bfc .UseNonZeroWinding =_bga ._bba ==_dcc .FillRuleWinding ;_bfc .Clear ();_bfc .AddPath (_dde );_bfc .Rasterize (_ecd );};func (_egda *radialGradient )AddColorStop (offset float64 ,color _a .Color ){_egda ._adg =append (_egda ._adg ,stop {_bdcaa :offset ,_ffbd :color });_dc .Sort (_egda ._adg );};func (_ffa *solidPattern )ColorAt (x ,y int )_a .Color {return _ffa ._dcff };func (_bff *Context )DrawRectangle (x ,y ,w ,h float64 ){_bff .NewSubPath ();_bff .MoveTo (x ,y );_bff .LineTo (x +w ,y );_bff .LineTo (x +w ,y +h );_bff .LineTo (x ,y +h );_bff .ClosePath ();};func (_edb *Context )drawString (_dad *_ebf .RGBA ,_gbc string ,_dbe ,_afbc float64 ){_bfg :=&_bd .Drawer {Dst :_dad ,Src :_ebf .NewUniform (_edb ._fda ),Face :_edb ._bee .Tf .Face ,Dot :_aabc (_gb .NewPoint (_dbe ,_afbc ))};_faeb :=rune (-1);for _ ,_bda :=range _gbc {if _faeb >=0{_bfg .Dot .X +=_bfg .Face .Kern (_faeb ,_bda );};_abcg ,_ccg ,_cdcc ,_ccgf ,_agc :=_bfg .Face .Glyph (_bfg .Dot ,_bda );if !_agc {continue ;};_dag :=_abcg .Sub (_abcg .Min );_agge :=_f .BiLinear ;_gbf :=_edb ._afb .Clone ();_gbf .Translate (float64 (_abcg .Min .X ),float64 (_abcg .Min .Y ));_ebd :=_de .Aff3 {_gbf [0],_gbf [3],_gbf [6],_gbf [1],_gbf [4],_gbf [7]};_agge .Transform (_bfg .Dst ,_ebd ,_bfg .Src ,_dag ,_f .Over ,&_f .Options {SrcMask :_ccg ,SrcMaskP :_cdcc });_bfg .Dot .X +=_ccgf ;_faeb =_bda ;};};func _dega (_egfaa string )(_ceec ,_cgag ,_fdbb ,_bdaf int ){_egfaa =_eb .TrimPrefix (_egfaa ,"\u0023");_bdaf =255;if len (_egfaa )==3{_fadb :="\u00251\u0078\u0025\u0031\u0078\u0025\u0031x";_d .Sscanf (_egfaa ,_fadb ,&_ceec ,&_cgag ,&_fdbb );_ceec |=_ceec <<4;_cgag |=_cgag <<4;_fdbb |=_fdbb <<4;};if len (_egfaa )==6{_gfe :="\u0025\u0030\u0032x\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_d .Sscanf (_egfaa ,_gfe ,&_ceec ,&_cgag ,&_fdbb );};if len (_egfaa )==8{_fbce :="\u0025\u00302\u0078\u0025\u00302\u0078\u0025\u0030\u0032\u0078\u0025\u0030\u0032\u0078";_d .Sscanf (_egfaa ,_fbce ,&_ceec ,&_cgag ,&_fdbb ,&_bdaf );};return ;};func _dbaa (_eagf float64 )float64 {return _eagf *_e .Pi /180};func (_bbg stops )Less (i ,j int )bool {return _bbg [i ]._bdcaa < _bbg [j ]._bdcaa };func (_caf *Context )SetMatrix (m _gb .Matrix ){_caf ._afb =m };func (_dfgd *Context )Rotate (angle float64 ){_dfgd ._afb .Rotate (angle )};func (_gcfa *Context )DrawImage (im _ebf .Image ,x ,y int ){_gcfa .DrawImageAnchored (im ,x ,y ,0,0)};func (_ffe *Context )DrawLine (x1 ,y1 ,x2 ,y2 float64 ){_ffe .MoveTo (x1 ,y1 );_ffe .LineTo (x2 ,y2 )};const (_fbe repeatOp =iota ;_eabg ;_aeab ;_bbd ;);type surfacePattern struct{_gfab _ebf .Image ;_gaf repeatOp ;};func (_cee *Context )ClosePath (){if _cee ._dbag {_adf :=_aabc (_cee ._cbf );_cee ._ddc .Add1 (_adf );_cee ._ge .Add1 (_adf );_cee ._daa =_cee ._cbf ;};};func _gbfg (_edgg float64 ,_cbce stops )_a .Color {if _edgg <=0.0||len (_cbce )==1{return _cbce [0]._ffbd ;};_bac :=_cbce [len (_cbce )-1];if _edgg >=_bac ._bdcaa {return _bac ._ffbd ;};for _fbcd ,_dgfa :=range _cbce [1:]{if _edgg < _dgfa ._bdcaa {_edgg =(_edgg -_cbce [_fbcd ]._bdcaa )/(_dgfa ._bdcaa -_cbce [_fbcd ]._bdcaa );return _ecdd (_cbce [_fbcd ]._ffbd ,_dgfa ._ffbd ,_edgg );};};return _bac ._ffbd ;};func (_efebg *Context )Clear (){_deb :=_ebf .NewUniform (_efebg ._fda );_f .Draw (_efebg ._aac ,_efebg ._aac .Bounds (),_deb ,_ebf .Point {},_f .Src );};type solidPattern struct{_dcff _a .Color };func (_gcef *Context )ClearPath (){_gcef ._ddc .Clear ();_gcef ._ge .Clear ();_gcef ._dbag =false };func (_fdae *Context )DrawStringAnchored (s string ,x ,y ,ax ,ay float64 ){_dbb ,_aag :=_fdae .MeasureString (s );x -=ax *_dbb ;y +=ay *_aag ;if _fdae ._gge ==nil {_fdae .drawString (_fdae ._aac ,s ,x ,y );}else {_dgge :=_ebf .NewRGBA (_ebf .Rect (0,0,_fdae ._gd ,_fdae ._afg ));_fdae .drawString (_dgge ,s ,x ,y );_f .DrawMask (_fdae ._aac ,_fdae ._aac .Bounds (),_dgge ,_ebf .Point {},_fdae ._gge ,_ebf .Point {},_f .Over );};};func _baba (_dfdg _df .Path )[][]_gb .Point {var _fge [][]_gb .Point ;var _afec []_gb .Point ;var _bfaa ,_ebbc float64 ;for _bfec :=0;_bfec < len (_dfdg );{switch _dfdg [_bfec ]{case 0:if len (_afec )> 0{_fge =append (_fge ,_afec );_afec =nil ;};_ceda :=_edefe (_dfdg [_bfec +1]);_dbef :=_edefe (_dfdg [_bfec +2]);_afec =append (_afec ,_gb .NewPoint (_ceda ,_dbef ));_bfaa ,_ebbc =_ceda ,_dbef ;_bfec +=4;case 1:_gbga :=_edefe (_dfdg [_bfec +1]);_gefb :=_edefe (_dfdg [_bfec +2]);_afec =append (_afec ,_gb .NewPoint (_gbga ,_gefb ));_bfaa ,_ebbc =_gbga ,_gefb ;_bfec +=4;case 2:_bfac :=_edefe (_dfdg [_bfec +1]);_ffee :=_edefe (_dfdg [_bfec +2]);_cafg :=_edefe (_dfdg [_bfec +3]);_gefd :=_edefe (_dfdg [_bfec +4]);_cab :=_ce (_bfaa ,_ebbc ,_bfac ,_ffee ,_cafg ,_gefd );_afec =append (_afec ,_cab ...);_bfaa ,_ebbc =_cafg ,_gefd ;_bfec +=6;case 3:_fedf :=_edefe (_dfdg [_bfec +1]);_efd :=_edefe (_dfdg [_bfec +2]);_fcg :=_edefe (_dfdg [_bfec +3]);_ddfc :=_edefe (_dfdg [_bfec +4]);_dca :=_edefe (_dfdg [_bfec +5]);_eba :=_edefe (_dfdg [_bfec +6]);_edgb :=_afd (_bfaa ,_ebbc ,_fedf ,_efd ,_fcg ,_ddfc ,_dca ,_eba );_afec =append (_afec ,_edgb ...);_bfaa ,_ebbc =_dca ,_eba ;_bfec +=8;default:_b .Log .Debug ("\u0057\u0041\u0052\u004e: \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0070\u0061\u0074\u0068\u003a\u0020%\u0076",_dfdg );return _fge ;};};if len (_afec )> 0{_fge =append (_fge ,_afec );};return _fge ;};func _acaf (_acf float64 )_bf .Int26_6 {return _bf .Int26_6 (_acf *64)};func (_agd *Context )Push (){_fgg :=*_agd ;_agd ._bed =append (_agd ._bed ,&_fgg )};func _ffgg (_cage _ebf .Image )*_ebf .RGBA {_befg :=_cage .Bounds ();_dfbf :=_ebf .NewRGBA (_befg );_af .Draw (_dfbf ,_befg ,_cage ,_befg .Min ,_af .Src );return _dfbf ;};func (_fae *Context )SetRGB255 (r ,g ,b int ){_fae .SetRGBA255 (r ,g ,b ,255)};func (_edef *Context )SetLineCap (lineCap _dcc .LineCap ){_edef ._gbb =lineCap };func _ecdd (_aca ,_gbfa _a .Color ,_gde float64 )_a .Color {_cfcf ,_dcfe ,_baca ,_bfa :=_aca .RGBA ();_aec ,_bcac ,_egfa ,_cagd :=_gbfa .RGBA ();return _a .RGBA {_aedb (_cfcf ,_aec ,_gde ),_aedb (_dcfe ,_bcac ,_gde ),_aedb (_baca ,_egfa ,_gde ),_aedb (_bfa ,_cagd ,_gde )};};func (_dgg *Context )SetStrokeStyle (pattern _dcc .Pattern ){_dgg ._gdf =pattern };func (_defg *Context )Stroke (){_defg .StrokePreserve ();_defg .ClearPath ()};func _ec (_cd ,_ca ,_def ,_ee ,_ac ,_db ,_acc float64 )(_cdb ,_ae float64 ){_fc :=1-_acc ;_bc :=_fc *_fc ;_ea :=2*_fc *_acc ;_ag :=_acc *_acc ;_cdb =_bc *_cd +_ea *_def +_ag *_ac ;_ae =_bc *_ca +_ea *_ee +_ag *_db ;return ;};type Context struct{_gd int ;_afg int ;_eca *_df .Rasterizer ;_aac *_ebf .RGBA ;_gge *_ebf .Alpha ;_fda _a .Color ;_cdf _dcc .Pattern ;_gdf _dcc .Pattern ;_ddc _df .Path ;_ge _df .Path ;_cbf _gb .Point ;_daa _gb .Point ;_dbag bool ;_bcc []float64 ;_fdb float64 ;_eef float64 ;_gbb _dcc .LineCap ;_agg _dcc .LineJoin ;_bba _dcc .FillRule ;_afb _gb .Matrix ;_bee *_dcc .TextState ;_bed []*Context ;};func (_ffg *patternPainter )Paint (ss []_df .Span ,done bool ){_abae :=_ffg ._dbec .Bounds ();for _ ,_cddg :=range ss {if _cddg .Y < _abae .Min .Y {continue ;};if _cddg .Y >=_abae .Max .Y {return ;};if _cddg .X0 < _abae .Min .X {_cddg .X0 =_abae .Min .X ;};if _cddg .X1 > _abae .Max .X {_cddg .X1 =_abae .Max .X ;};if _cddg .X0 >=_cddg .X1 {continue ;};const _dee =1<<16-1;_fcgg :=_cddg .Y -_ffg ._dbec .Rect .Min .Y ;_bdce :=_cddg .X0 -_ffg ._dbec .Rect .Min .X ;_cbeb :=(_cddg .Y -_ffg ._dbec .Rect .Min .Y )*_ffg ._dbec .Stride +(_cddg .X0 -_ffg ._dbec .Rect .Min .X )*4;_eecc :=_cbeb +(_cddg .X1 -_cddg .X0 )*4;for _gbcg ,_fdc :=_cbeb ,_bdce ;_gbcg < _eecc ;_gbcg ,_fdc =_gbcg +4,_fdc +1{_dab :=_cddg .Alpha ;if _ffg ._ebg !=nil {_dab =_dab *uint32 (_ffg ._ebg .AlphaAt (_fdc ,_fcgg ).A )/255;if _dab ==0{continue ;};};_adba :=_ffg ._acge .ColorAt (_fdc ,_fcgg );_aeed ,_dceae ,_cfbd ,_edefg :=_adba .RGBA ();_bdg :=uint32 (_ffg ._dbec .Pix [_gbcg +0]);_gbcgb :=uint32 (_ffg ._dbec .Pix [_gbcg +1]);_fbga :=uint32 (_ffg ._dbec .Pix [_gbcg +2]);_efb :=uint32 (_ffg ._dbec .Pix [_gbcg +3]);_ebe :=(_dee -(_edefg *_dab /_dee ))*0x101;_ffg ._dbec .Pix [_gbcg +0]=uint8 ((_bdg *_ebe +_aeed *_dab )/_dee >>8);_ffg ._dbec .Pix [_gbcg +1]=uint8 ((_gbcgb *_ebe +_dceae *_dab )/_dee >>8);_ffg ._dbec .Pix [_gbcg +2]=uint8 ((_fbga *_ebe +_cfbd *_dab )/_dee >>8);_ffg ._dbec .Pix [_gbcg +3]=uint8 ((_efb *_ebe +_edefg *_dab )/_dee >>8);};};};func (_cbbe *Context )Shear (x ,y float64 ){_cbbe ._afb .Shear (x ,y )};func _cea (_acg [][]_gb .Point ,_dbd []float64 ,_dce float64 )[][]_gb .Point {var _dcea [][]_gb .Point ;if len (_dbd )==0{return _acg ;};if len (_dbd )==1{_dbd =append (_dbd ,_dbd [0]);};for _ ,_eea :=range _acg {if len (_eea )< 2{continue ;};_bfea :=_eea [0];_bgfc :=1;_fadc :=0;_dged :=0.0;if _dce !=0{var _cddb float64 ;for _ ,_ggae :=range _dbd {_cddb +=_ggae ;};_dce =_e .Mod (_dce ,_cddb );if _dce < 0{_dce +=_cddb ;};for _fcd ,_cfcd :=range _dbd {_dce -=_cfcd ;if _dce < 0{_fadc =_fcd ;_dged =_cfcd +_dce ;break ;};};};var _agf []_gb .Point ;_agf =append (_agf ,_bfea );for _bgfc < len (_eea ){_ecg :=_dbd [_fadc ];_fecc :=_eea [_bgfc ];_gced :=_bfea .Distance (_fecc );_abbf :=_ecg -_dged ;if _gced > _abbf {_fgb :=_abbf /_gced ;_cdda :=_bfea .Interpolate (_fecc ,_fgb );_agf =append (_agf ,_cdda );if _fadc %2==0&&len (_agf )> 1{_dcea =append (_dcea ,_agf );};_agf =nil ;_agf =append (_agf ,_cdda );_dged =0;_bfea =_cdda ;_fadc =(_fadc +1)%len (_dbd );}else {_agf =append (_agf ,_fecc );_bfea =_fecc ;_dged +=_gced ;_bgfc ++;};};if _fadc %2==0&&len (_agf )> 1{_dcea =append (_dcea ,_agf );};};return _dcea ;};func (_dgca *Context )ClipPreserve (){_egb :=_ebf .NewAlpha (_ebf .Rect (0,0,_dgca ._gd ,_dgca ._afg ));_geb :=_df .NewAlphaOverPainter (_egb );_dgca .fill (_geb );if _dgca ._gge ==nil {_dgca ._gge =_egb ;}else {_bbb :=_ebf .NewAlpha (_ebf .Rect (0,0,_dgca ._gd ,_dgca ._afg ));_f .DrawMask (_bbb ,_bbb .Bounds (),_egb ,_ebf .Point {},_dgca ._gge ,_ebf .Point {},_f .Over );_dgca ._gge =_bbb ;};};func (_ggf *Context )SetDash (dashes ...float64 ){_ggf ._bcc =dashes };func _ageb (_beb _df .Path ,_aecb []float64 ,_eae float64 )_df .Path {return _dgcaa (_cea (_baba (_beb ),_aecb ,_eae ));};func (_gag *Context )Image ()_ebf .Image {return _gag ._aac };func (_gfg *Context )SetMask (mask *_ebf .Alpha )error {if mask .Bounds ().Size ()!=_gfg ._aac .Bounds ().Size (){return _g .New ("\u006d\u0061\u0073\u006b\u0020\u0073i\u007a\u0065\u0020\u006d\u0075\u0073\u0074\u0020\u006d\u0061\u0074\u0063\u0068 \u0063\u006f\u006e\u0074\u0065\u0078\u0074 \u0073\u0069\u007a\u0065");};_gfg ._gge =mask ;return nil ;};func (_ff *Context )QuadraticTo (x1 ,y1 ,x2 ,y2 float64 ){if !_ff ._dbag {_ff .MoveTo (x1 ,y1 );};x1 ,y1 =_ff .Transform (x1 ,y1 );x2 ,y2 =_ff .Transform (x2 ,y2 );_fad :=_gb .NewPoint (x1 ,y1 );_ddf :=_gb .NewPoint (x2 ,y2 );_cad :=_aabc (_fad );_afa :=_aabc (_ddf );_ff ._ddc .Add2 (_cad ,_afa );_ff ._ge .Add2 (_cad ,_afa );_ff ._daa =_ddf ;};func (_aee *Context )TextState ()*_dcc .TextState {return _aee ._bee };func (_gcd *Context )SetLineWidth (lineWidth float64 ){_gcd ._eef =lineWidth };func (_fbfb *Context )Scale (x ,y float64 ){_fbfb ._afb .Scale (x ,y )};func _faga (_cgef *_ebf .RGBA ,_cdgd *_ebf .Alpha ,_edcg _dcc .Pattern )*patternPainter {return &patternPainter {_cgef ,_cdgd ,_edcg };};func _fde (_gebf ,_faf ,_gga ,_edbb float64 )_dcc .Gradient {_baec :=&linearGradient {_dccg :_gebf ,_ggg :_faf ,_fdfc :_gga ,_ecab :_edbb };return _baec ;};func (_bbe *Context )SetLineJoin (lineJoin _dcc .LineJoin ){_bbe ._agg =lineJoin };func (_gec *radialGradient )ColorAt (x ,y int )_a .Color {if len (_gec ._adg )==0{return _a .Transparent ;};_dfec ,_fdeg :=float64 (x )+0.5-_gec ._fdfg ._bab ,float64 (y )+0.5-_gec ._fdfg ._cfag ;_bfd :=_daea (_dfec ,_fdeg ,_gec ._fdfg ._cef ,_gec ._cbe ._bab ,_gec ._cbe ._cfag ,_gec ._cbe ._cef );_eabe :=_daea (_dfec ,_fdeg ,-_gec ._fdfg ._cef ,_dfec ,_fdeg ,_gec ._fdfg ._cef );if _gec ._bde ==0{if _bfd ==0{return _a .Transparent ;};_ecdg :=0.5*_eabe /_bfd ;if _ecdg *_gec ._cbe ._cef >=_gec ._eecg {return _gbfg (_ecdg ,_gec ._adg );};return _a .Transparent ;};_dfd :=_daea (_bfd ,_gec ._bde ,0,_bfd ,-_eabe ,0);if _dfd >=0{_bbfb :=_e .Sqrt (_dfd );_bgag :=(_bfd +_bbfb )*_gec ._cgaf ;_feb :=(_bfd -_bbfb )*_gec ._cgaf ;if _bgag *_gec ._cbe ._cef >=_gec ._eecg {return _gbfg (_bgag ,_gec ._adg );}else if _feb *_gec ._cbe ._cef >=_gec ._eecg {return _gbfg (_feb ,_gec ._adg );};};return _a .Transparent ;};func (_edc *Context )capper ()_df .Capper {switch _edc ._gbb {case _dcc .LineCapButt :return _df .ButtCapper ;case _dcc .LineCapRound :return _df .RoundCapper ;case _dcc .LineCapSquare :return _df .SquareCapper ;};return nil ;};func _edefe (_efcc _bf .Int26_6 )float64 {const _bbca ,_cgbe =6,1<<6-1;if _efcc >=0{return float64 (_efcc >>_bbca )+float64 (_efcc &_cgbe )/64;};_efcc =-_efcc ;if _efcc >=0{return -(float64 (_efcc >>_bbca )+float64 (_efcc &_cgbe )/64);};return 0;};func (_beg *Context )SetFillStyle (pattern _dcc .Pattern ){if _ded ,_ggfb :=pattern .(*solidPattern );_ggfb {_beg ._fda =_ded ._dcff ;};_beg ._cdf =pattern ;};func (_gfgf *Context )RotateAbout (angle ,x ,y float64 ){_gfgf .Translate (x ,y );_gfgf .Rotate (angle );_gfgf .Translate (-x ,-y );};func (_cgc *Context )SetRGBA (r ,g ,b ,a float64 ){_cgc ._fda =_a .NRGBA {uint8 (r *255),uint8 (g *255),uint8 (b *255),uint8 (a *255)};_cgc .setFillAndStrokeColor (_cgc ._fda );};type stops []stop ;type patternPainter struct{_dbec *_ebf .RGBA ;_ebg *_ebf .Alpha ;_acge _dcc .Pattern ;};func _dgcaa (_dagf [][]_gb .Point )_df .Path {var _dac _df .Path ;for _ ,_cgcf :=range _dagf {var _ceb _bf .Point26_6 ;for _dfgg ,_ggga :=range _cgcf {_edaa :=_aabc (_ggga );if _dfgg ==0{_dac .Start (_edaa );}else {_bbef :=_edaa .X -_ceb .X ;_aba :=_edaa .Y -_ceb .Y ;if _bbef < 0{_bbef =-_bbef ;};if _aba < 0{_aba =-_aba ;};if _bbef +_aba > 8{_dac .Add1 (_edaa );};};_ceb =_edaa ;};};return _dac ;};func (_cdg *Context )Fill (){_cdg .FillPreserve ();_cdg .ClearPath ()};func (_fec *Context )DrawImageAnchored (im _ebf .Image ,x ,y int ,ax ,ay float64 ){_bbcd :=im .Bounds ().Size ();x -=int (ax *float64 (_bbcd .X ));y -=int (ay *float64 (_bbcd .Y ));_aed :=_f .BiLinear ;_faa :=_fec ._afb .Clone ();_faa .Translate (float64 (x ),float64 (y ));_gaga :=_de .Aff3 {_faa [0],_faa [3],_faa [6],_faa [1],_faa [4],_faa [7]};if _fec ._gge ==nil {_aed .Transform (_fec ._aac ,_gaga ,im ,im .Bounds (),_f .Over ,nil );}else {_aed .Transform (_fec ._aac ,_gaga ,im ,im .Bounds (),_f .Over ,&_f .Options {DstMask :_fec ._gge ,DstMaskP :_ebf .Point {}});};};type linearGradient struct{_dccg ,_ggg ,_fdfc ,_ecab float64 ;_cca stops ;};func (_fdd *Context )SetColor (c _a .Color ){_fdd .setFillAndStrokeColor (c )};func _ce (_ab ,_ed ,_eg ,_abc ,_fcc ,_bb float64 )[]_gb .Point {_gbg :=(_e .Hypot (_eg -_ab ,_abc -_ed )+_e .Hypot (_fcc -_eg ,_bb -_abc ));_ad :=int (_gbg +0.5);if _ad < 4{_ad =4;};_gf :=float64 (_ad )-1;_dg :=make ([]_gb .Point ,_ad );for _ede :=0;_ede < _ad ;_ede ++{_bcg :=float64 (_ede )/_gf ;_dd ,_dgd :=_ec (_ab ,_ed ,_eg ,_abc ,_fcc ,_bb ,_bcg );_dg [_ede ]=_gb .NewPoint (_dd ,_dgd );};return _dg ;};func (_age *Context )DrawString (s string ,x ,y float64 ){_age .DrawStringAnchored (s ,x ,y ,0,0)};