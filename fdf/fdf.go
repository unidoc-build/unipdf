//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package fdf provides support for loading form field data from Form Field Data (FDF) files.
package fdf ;import (_fa "bufio";_f "bytes";_g "encoding/hex";_cc "errors";_ce "fmt";_bd "github.com/unidoc/unipdf/v3/common";_bb "github.com/unidoc/unipdf/v3/core";_b "io";_cbf "os";_e "regexp";_aa "sort";_a "strconv";_cb "strings";);

// LoadFromPath loads FDF form data from file path `fdfPath`.
func LoadFromPath (fdfPath string )(*Data ,error ){_ae ,_fb :=_cbf .Open (fdfPath );if _fb !=nil {return nil ,_fb ;};defer _ae .Close ();return Load (_ae );};func (_cfa *fdfParser )readAtLeast (_dg []byte ,_gdg int )(int ,error ){_bde :=_gdg ;_bg :=0;_aag :=0;
for _bde > 0{_age ,_dd :=_cfa ._ge .Read (_dg [_bg :]);if _dd !=nil {_bd .Log .Debug ("\u0045\u0052\u0052O\u0052\u0020\u0046\u0061i\u006c\u0065\u0064\u0020\u0072\u0065\u0061d\u0069\u006e\u0067\u0020\u0028\u0025\u0064\u003b\u0025\u0064\u0029\u0020\u0025\u0073",_age ,_aag ,_dd .Error ());
return _bg ,_cc .New ("\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0072\u0065a\u0064\u0069\u006e\u0067");};_aag ++;_bg +=_age ;_bde -=_age ;};return _bg ,nil ;};func (_dab *fdfParser )parse ()error {_dab ._bbg .Seek (0,_b .SeekStart );_dab ._ge =_fa .NewReader (_dab ._bbg );
for {_dab .skipComments ();_aeg ,_dag :=_dab ._ge .Peek (20);if _dag !=nil {_bd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f\u0020r\u0065a\u0064\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a");
return _dag ;};if _cb .HasPrefix (string (_aeg ),"\u0074r\u0061\u0069\u006c\u0065\u0072"){_dab ._ge .Discard (7);_dab .skipSpaces ();_dab .skipComments ();_cba ,_ :=_dab .parseDict ();_dab ._gb =_cba ;break ;};_adde :=_bdef .FindStringSubmatchIndex (string (_aeg ));
if len (_adde )< 6{_bd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0061\u0062l\u0065\u0020\u0074\u006f \u0066\u0069\u006e\u0064\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",string (_aeg ));
return _cc .New ("\u0075\u006e\u0061b\u006c\u0065\u0020\u0074\u006f\u0020\u0064\u0065\u0074\u0065\u0063\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");
};_decb ,_dag :=_dab .parseIndirectObject ();if _dag !=nil {return _dag ;};switch _dgcb :=_decb .(type ){case *_bb .PdfIndirectObject :_dab ._fde [_dgcb .ObjectNumber ]=_dgcb ;case *_bb .PdfObjectStream :_dab ._fde [_dgcb .ObjectNumber ]=_dgcb ;default:return _cc .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};};return nil ;};

// FieldDictionaries returns a map of field names to field dictionaries.
func (fdf *Data )FieldDictionaries ()(map[string ]*_bb .PdfObjectDictionary ,error ){_ca :=map[string ]*_bb .PdfObjectDictionary {};for _bdc :=0;_bdc < fdf ._ab .Len ();_bdc ++{_ba ,_eb :=_bb .GetDict (fdf ._ab .Get (_bdc ));if _eb {_da ,_ :=_bb .GetString (_ba .Get ("\u0054"));
if _da !=nil {_ca [_da .Str ()]=_ba ;};};};return _ca ,nil ;};

// Data represents forms data format (FDF) file data.
type Data struct{_ga *_bb .PdfObjectDictionary ;_ab *_bb .PdfObjectArray ;};func (_eca *fdfParser )parseBool ()(_bb .PdfObjectBool ,error ){_cg ,_cfe :=_eca ._ge .Peek (4);if _cfe !=nil {return _bb .PdfObjectBool (false ),_cfe ;};if (len (_cg )>=4)&&(string (_cg [:4])=="\u0074\u0072\u0075\u0065"){_eca ._ge .Discard (4);
return _bb .PdfObjectBool (true ),nil ;};_cg ,_cfe =_eca ._ge .Peek (5);if _cfe !=nil {return _bb .PdfObjectBool (false ),_cfe ;};if (len (_cg )>=5)&&(string (_cg [:5])=="\u0066\u0061\u006cs\u0065"){_eca ._ge .Discard (5);return _bb .PdfObjectBool (false ),nil ;
};return _bb .PdfObjectBool (false ),_cc .New ("\u0075n\u0065\u0078\u0070\u0065c\u0074\u0065\u0064\u0020\u0062o\u006fl\u0065a\u006e\u0020\u0073\u0074\u0072\u0069\u006eg");};func (_ccf *fdfParser )skipSpaces ()(int ,error ){_fda :=0;for {_fg ,_fe :=_ccf ._ge .ReadByte ();
if _fe !=nil {return 0,_fe ;};if _bb .IsWhiteSpace (_fg ){_fda ++;}else {_ccf ._ge .UnreadByte ();break ;};};return _fda ,nil ;};var _ebg =_e .MustCompile ("\u005e\u005b\u005c+-\u002e\u005d\u002a\u0028\u005b\u0030\u002d\u0039\u002e]\u002b)\u0065[\u005c+\u002d\u002e\u005d\u002a\u0028\u005b\u0030\u002d\u0039\u002e\u005d\u002b\u0029");
func _adg (_bc string )(_bb .PdfObjectReference ,error ){_dbfd :=_bb .PdfObjectReference {};_bded :=_ea .FindStringSubmatch (_bc );if len (_bded )< 3{_bd .Log .Debug ("\u0045\u0072\u0072or\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065");
return _dbfd ,_cc .New ("\u0075n\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0070\u0061r\u0073e\u0020r\u0065\u0066\u0065\u0072\u0065\u006e\u0063e");};_cd ,_efg :=_a .Atoi (_bded [1]);if _efg !=nil {_bd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070a\u0072\u0073\u0069n\u0067\u0020\u006fb\u006a\u0065c\u0074\u0020\u006e\u0075\u006d\u0062e\u0072 '\u0025\u0073\u0027\u0020\u002d\u0020\u0055\u0073\u0069\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u0075\u006d\u0020\u003d\u0020\u0030",_bded [1]);
return _dbfd ,nil ;};_dbfd .ObjectNumber =int64 (_cd );_gagd ,_efg :=_a .Atoi (_bded [2]);if _efg !=nil {_bd .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u0070\u0061r\u0073\u0069\u006e\u0067\u0020g\u0065\u006e\u0065\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0027\u0025\u0073\u0027\u0020\u002d\u0020\u0055\u0073\u0069\u006e\u0067\u0020\u0067\u0065\u006e\u0020\u003d\u0020\u0030",_bded [2]);
return _dbfd ,nil ;};_dbfd .GenerationNumber =int64 (_gagd );return _dbfd ,nil ;};func (_cbde *fdfParser )parseArray ()(*_bb .PdfObjectArray ,error ){_bfb :=_bb .MakeArray ();_cbde ._ge .ReadByte ();for {_cbde .skipSpaces ();_ee ,_add :=_cbde ._ge .Peek (1);
if _add !=nil {return _bfb ,_add ;};if _ee [0]==']'{_cbde ._ge .ReadByte ();break ;};_bdfg ,_add :=_cbde .parseObject ();if _add !=nil {return _bfb ,_add ;};_bfb .Append (_bdfg );};return _bfb ,nil ;};var _gag =_e .MustCompile ("\u0025\u0025\u0045O\u0046");


// Load loads FDF form data from `r`.
func Load (r _b .ReadSeeker )(*Data ,error ){_gd ,_d :=_gad (r );if _d !=nil {return nil ,_d ;};_cf ,_d :=_gd .Root ();if _d !=nil {return nil ,_d ;};_ceg ,_ag :=_bb .GetArray (_cf .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"));if !_ag {return nil ,_cc .New ("\u0066\u0069\u0065\u006c\u0064\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
};return &Data {_ab :_ceg ,_ga :_cf },nil ;};func _gce (_bega string )(*fdfParser ,error ){_dcg :=fdfParser {};_eeg :=[]byte (_bega );_aebc :=_f .NewReader (_eeg );_dcg ._bbg =_aebc ;_dcg ._fde =map[int64 ]_bb .PdfObject {};_gedc :=_fa .NewReader (_aebc );
_dcg ._ge =_gedc ;_dcg ._dcf =int64 (len (_bega ));return &_dcg ,_dcg .parse ();};func (_gf *fdfParser )readComment ()(string ,error ){var _dec _f .Buffer ;_ ,_ddb :=_gf .skipSpaces ();if _ddb !=nil {return _dec .String (),_ddb ;};_cff :=true ;for {_defb ,_caa :=_gf ._ge .Peek (1);
if _caa !=nil {_bd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0025\u0073",_caa .Error ());return _dec .String (),_caa ;};if _cff &&_defb [0]!='%'{return _dec .String (),_cc .New ("c\u006f\u006d\u006d\u0065\u006e\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0073\u0074a\u0072\u0074\u0020w\u0069t\u0068\u0020\u0025");
};_cff =false ;if (_defb [0]!='\r')&&(_defb [0]!='\n'){_eae ,_ :=_gf ._ge .ReadByte ();_dec .WriteByte (_eae );}else {break ;};};return _dec .String (),nil ;};

// Root returns the Root of the FDF document.
func (_ffb *fdfParser )Root ()(*_bb .PdfObjectDictionary ,error ){if _ffb ._gb !=nil {if _ceb ,_bbd :=_ffb .trace (_ffb ._gb .Get ("\u0052\u006f\u006f\u0074")).(*_bb .PdfObjectDictionary );_bbd {if _gdc ,_eba :=_ffb .trace (_ceb .Get ("\u0046\u0044\u0046")).(*_bb .PdfObjectDictionary );
_eba {return _gdc ,nil ;};};};var _cbded []int64 ;for _dggb :=range _ffb ._fde {_cbded =append (_cbded ,_dggb );};_aa .Slice (_cbded ,func (_ega ,_geb int )bool {return _cbded [_ega ]< _cbded [_geb ]});for _ ,_abb :=range _cbded {_afb :=_ffb ._fde [_abb ];
if _cgg ,_bdd :=_ffb .trace (_afb ).(*_bb .PdfObjectDictionary );_bdd {if _degd ,_cfff :=_ffb .trace (_cgg .Get ("\u0046\u0044\u0046")).(*_bb .PdfObjectDictionary );_cfff {return _degd ,nil ;};};};return nil ,_cc .New ("\u0046\u0044\u0046\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};func (_afc *fdfParser )parseNull ()(_bb .PdfObjectNull ,error ){_ ,_bacg :=_afc ._ge .Discard (4);return _bb .PdfObjectNull {},_bacg ;};func (_beg *fdfParser )parseObject ()(_bb .PdfObject ,error ){_bd .Log .Trace ("\u0052e\u0061d\u0020\u0064\u0069\u0072\u0065c\u0074\u0020o\u0062\u006a\u0065\u0063\u0074");
_beg .skipSpaces ();for {_aee ,_ebd :=_beg ._ge .Peek (2);if _ebd !=nil {return nil ,_ebd ;};_bd .Log .Trace ("\u0050e\u0065k\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u003a\u0020\u0025\u0073",string (_aee ));if _aee [0]=='/'{_eg ,_dgg :=_beg .parseName ();
_bd .Log .Trace ("\u002d\u003e\u004ea\u006d\u0065\u003a\u0020\u0027\u0025\u0073\u0027",_eg );return &_eg ,_dgg ;}else if _aee [0]=='('{_bd .Log .Trace ("\u002d>\u0053\u0074\u0072\u0069\u006e\u0067!");return _beg .parseString ();}else if _aee [0]=='['{_bd .Log .Trace ("\u002d\u003e\u0041\u0072\u0072\u0061\u0079\u0021");
return _beg .parseArray ();}else if (_aee [0]=='<')&&(_aee [1]=='<'){_bd .Log .Trace ("\u002d>\u0044\u0069\u0063\u0074\u0021");return _beg .parseDict ();}else if _aee [0]=='<'{_bd .Log .Trace ("\u002d\u003e\u0048\u0065\u0078\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0021");
return _beg .parseHexString ();}else if _aee [0]=='%'{_beg .readComment ();_beg .skipSpaces ();}else {_bd .Log .Trace ("\u002d\u003eN\u0075\u006d\u0062e\u0072\u0020\u006f\u0072\u0020\u0072\u0065\u0066\u003f");_aee ,_ =_beg ._ge .Peek (15);_ecaa :=string (_aee );
_bd .Log .Trace ("\u0050\u0065\u0065k\u0020\u0073\u0074\u0072\u003a\u0020\u0025\u0073",_ecaa );if (len (_ecaa )> 3)&&(_ecaa [:4]=="\u006e\u0075\u006c\u006c"){_abf ,_bbbc :=_beg .parseNull ();return &_abf ,_bbbc ;}else if (len (_ecaa )> 4)&&(_ecaa [:5]=="\u0066\u0061\u006cs\u0065"){_dea ,_ebf :=_beg .parseBool ();
return &_dea ,_ebf ;}else if (len (_ecaa )> 3)&&(_ecaa [:4]=="\u0074\u0072\u0075\u0065"){_ecf ,_dge :=_beg .parseBool ();return &_ecf ,_dge ;};_fcf :=_ea .FindStringSubmatch (_ecaa );if len (_fcf )> 1{_aee ,_ =_beg ._ge .ReadBytes ('R');_bd .Log .Trace ("\u002d\u003e\u0020\u0021\u0052\u0065\u0066\u003a\u0020\u0027\u0025\u0073\u0027",string (_aee [:]));
_bbaa ,_egf :=_adg (string (_aee ));return &_bbaa ,_egf ;};_bff :=_aeb .FindStringSubmatch (_ecaa );if len (_bff )> 1{_bd .Log .Trace ("\u002d\u003e\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u0021");return _beg .parseNumber ();};_bff =_ebg .FindStringSubmatch (_ecaa );
if len (_bff )> 1{_bd .Log .Trace ("\u002d\u003e\u0020\u0045xp\u006f\u006e\u0065\u006e\u0074\u0069\u0061\u006c\u0020\u004e\u0075\u006d\u0062\u0065r\u0021");_bd .Log .Trace ("\u0025\u0020\u0073",_bff );return _beg .parseNumber ();};_bd .Log .Debug ("\u0045R\u0052\u004f\u0052\u0020U\u006e\u006b\u006e\u006f\u0077n\u0020(\u0070e\u0065\u006b\u0020\u0022\u0025\u0073\u0022)",_ecaa );
return nil ,_cc .New ("\u006f\u0062\u006a\u0065\u0063t\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0065\u0072\u0072\u006fr\u0020\u002d\u0020\u0075\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");
};};};var _bdef =_e .MustCompile ("\u0028\u005c\u0064\u002b)\\\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002b\u006f\u0062\u006a");func (_eab *fdfParser )parseString ()(*_bb .PdfObjectString ,error ){_eab ._ge .ReadByte ();var _gea _f .Buffer ;
_bbb :=1;for {_gee ,_gcc :=_eab ._ge .Peek (1);if _gcc !=nil {return _bb .MakeString (_gea .String ()),_gcc ;};if _gee [0]=='\\'{_eab ._ge .ReadByte ();_fec ,_acd :=_eab ._ge .ReadByte ();if _acd !=nil {return _bb .MakeString (_gea .String ()),_acd ;};
if _bb .IsOctalDigit (_fec ){_df ,_gbg :=_eab ._ge .Peek (2);if _gbg !=nil {return _bb .MakeString (_gea .String ()),_gbg ;};var _bdcf []byte ;_bdcf =append (_bdcf ,_fec );for _ ,_fcg :=range _df {if _bb .IsOctalDigit (_fcg ){_bdcf =append (_bdcf ,_fcg );
}else {break ;};};_eab ._ge .Discard (len (_bdcf )-1);_bd .Log .Trace ("\u004e\u0075\u006d\u0065ri\u0063\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0022\u0025\u0073\u0022",_bdcf );_cega ,_gbg :=_a .ParseUint (string (_bdcf ),8,32);if _gbg !=nil {return _bb .MakeString (_gea .String ()),_gbg ;
};_gea .WriteByte (byte (_cega ));continue ;};switch _fec {case 'n':_gea .WriteRune ('\n');case 'r':_gea .WriteRune ('\r');case 't':_gea .WriteRune ('\t');case 'b':_gea .WriteRune ('\b');case 'f':_gea .WriteRune ('\f');case '(':_gea .WriteRune ('(');case ')':_gea .WriteRune (')');
case '\\':_gea .WriteRune ('\\');};continue ;}else if _gee [0]=='('{_bbb ++;}else if _gee [0]==')'{_bbb --;if _bbb ==0{_eab ._ge .ReadByte ();break ;};};_daa ,_ :=_eab ._ge .ReadByte ();_gea .WriteByte (_daa );};return _bb .MakeString (_gea .String ()),nil ;
};func (_gdge *fdfParser )seekFdfVersionTopDown ()(int ,int ,error ){_gdge ._bbg .Seek (0,_b .SeekStart );_gdge ._ge =_fa .NewReader (_gdge ._bbg );_eacc :=20;_fge :=make ([]byte ,_eacc );for {_ecfa ,_baf :=_gdge ._ge .ReadByte ();if _baf !=nil {if _baf ==_b .EOF {break ;
}else {return 0,0,_baf ;};};if _bb .IsDecimalDigit (_ecfa )&&_fge [_eacc -1]=='.'&&_bb .IsDecimalDigit (_fge [_eacc -2])&&_fge [_eacc -3]=='-'&&_fge [_eacc -4]=='F'&&_fge [_eacc -5]=='D'&&_fge [_eacc -6]=='P'{_dff :=int (_fge [_eacc -2]-'0');_afe :=int (_ecfa -'0');
return _dff ,_afe ,nil ;};_fge =append (_fge [1:_eacc ],_ecfa );};return 0,0,_cc .New ("\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};func (_dga *fdfParser )parseFdfVersion ()(int ,int ,error ){_dga ._bbg .Seek (0,_b .SeekStart );
_aec :=20;_aef :=make ([]byte ,_aec );_dga ._bbg .Read (_aef );_fff :=_aea .FindStringSubmatch (string (_aef ));if len (_fff )< 3{_aage ,_dgc ,_dfe :=_dga .seekFdfVersionTopDown ();if _dfe !=nil {_bd .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020\u0072\u0065\u0063\u006f\u0076\u0065\u0072\u0079\u0020\u002d\u0020\u0075n\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0066\u0069nd\u0020\u0076\u0065r\u0073i\u006f\u006e");
return 0,0,_dfe ;};return _aage ,_dgc ,nil ;};_fdc ,_fbb :=_a .Atoi (_fff [1]);if _fbb !=nil {return 0,0,_fbb ;};_eec ,_fbb :=_a .Atoi (_fff [2]);if _fbb !=nil {return 0,0,_fbb ;};_bd .Log .Debug ("\u0046\u0064\u0066\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020%\u0064\u002e\u0025\u0064",_fdc ,_eec );
return _fdc ,_eec ,nil ;};var _aeb =_e .MustCompile ("\u005e\u005b\u005c\u002b\u002d\u002e\u005d\u002a\u0028\u005b\u0030\u002d9\u002e\u005d\u002b\u0029");func (_bba *fdfParser )getFileOffset ()int64 {_abc ,_ :=_bba ._bbg .Seek (0,_b .SeekCurrent );_abc -=int64 (_bba ._ge .Buffered ());
return _abc ;};func (_ged *fdfParser )parseHexString ()(*_bb .PdfObjectString ,error ){_ged ._ge .ReadByte ();var _ada _f .Buffer ;for {_aged ,_acee :=_ged ._ge .Peek (1);if _acee !=nil {return _bb .MakeHexString (""),_acee ;};if _aged [0]=='>'{_ged ._ge .ReadByte ();
break ;};_ecgd ,_ :=_ged ._ge .ReadByte ();if !_bb .IsWhiteSpace (_ecgd ){_ada .WriteByte (_ecgd );};};if _ada .Len ()%2==1{_ada .WriteRune ('0');};_eabc ,_cfb :=_g .DecodeString (_ada .String ());if _cfb !=nil {_bd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0078\u0020\u0073\u0074r\u0069\u006e\u0067\u003a\u0020\u0027\u0025\u0073\u0027 \u002d\u0020\u0072\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0061n\u0020\u0065\u006d\u0070\u0074\u0079 \u0073\u0074\u0072i\u006e\u0067",_ada .String ());
return _bb .MakeHexString (""),nil ;};return _bb .MakeHexString (string (_eabc )),nil ;};func (_gba *fdfParser )readTextLine ()(string ,error ){var _ecg _f .Buffer ;for {_be ,_fee :=_gba ._ge .Peek (1);if _fee !=nil {_bd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0025\u0073",_fee .Error ());
return _ecg .String (),_fee ;};if (_be [0]!='\r')&&(_be [0]!='\n'){_fc ,_ :=_gba ._ge .ReadByte ();_ecg .WriteByte (_fc );}else {break ;};};return _ecg .String (),nil ;};func (_abaf *fdfParser )trace (_abcf _bb .PdfObject )_bb .PdfObject {switch _fcgb :=_abcf .(type ){case *_bb .PdfObjectReference :_eaeb ,_bgf :=_abaf ._fde [_fcgb .ObjectNumber ].(*_bb .PdfIndirectObject );
if _bgf {return _eaeb .PdfObject ;};_bd .Log .Debug ("\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ;case *_bb .PdfIndirectObject :return _fcgb .PdfObject ;};return _abcf ;};func (_gde *fdfParser )parseName ()(_bb .PdfObjectName ,error ){var _db _f .Buffer ;
_ebgb :=false ;for {_bed ,_cbg :=_gde ._ge .Peek (1);if _cbg ==_b .EOF {break ;};if _cbg !=nil {return _bb .PdfObjectName (_db .String ()),_cbg ;};if !_ebgb {if _bed [0]=='/'{_ebgb =true ;_gde ._ge .ReadByte ();}else if _bed [0]=='%'{_gde .readComment ();
_gde .skipSpaces ();}else {_bd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020N\u0061\u006d\u0065\u0020\u0073\u0074\u0061\u0072\u0074\u0069\u006e\u0067\u0020w\u0069\u0074\u0068\u0020\u0025\u0073\u0020(\u0025\u0020\u0078\u0029",_bed ,_bed );return _bb .PdfObjectName (_db .String ()),_ce .Errorf ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u006ea\u006d\u0065:\u0020\u0028\u0025\u0063\u0029",_bed [0]);
};}else {if _bb .IsWhiteSpace (_bed [0]){break ;}else if (_bed [0]=='/')||(_bed [0]=='[')||(_bed [0]=='(')||(_bed [0]==']')||(_bed [0]=='<')||(_bed [0]=='>'){break ;}else if _bed [0]=='#'{_gece ,_aba :=_gde ._ge .Peek (3);if _aba !=nil {return _bb .PdfObjectName (_db .String ()),_aba ;
};_gde ._ge .Discard (3);_agfa ,_aba :=_g .DecodeString (string (_gece [1:3]));if _aba !=nil {return _bb .PdfObjectName (_db .String ()),_aba ;};_db .Write (_agfa );}else {_feef ,_ :=_gde ._ge .ReadByte ();_db .WriteByte (_feef );};};};return _bb .PdfObjectName (_db .String ()),nil ;
};var _ea =_e .MustCompile ("^\u005c\u0073\u002a\u0028\\d\u002b)\u005c\u0073\u002b\u0028\u005cd\u002b\u0029\u005c\u0073\u002b\u0052");func (_abg *fdfParser )parseDict ()(*_bb .PdfObjectDictionary ,error ){_bd .Log .Trace ("\u0052\u0065\u0061\u0064\u0069\u006e\u0067\u0020\u0046\u0044\u0046\u0020D\u0069\u0063\u0074\u0021");
_fbd :=_bb .MakeDict ();_bffd ,_ :=_abg ._ge .ReadByte ();if _bffd !='<'{return nil ,_cc .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0069\u0063\u0074");};_bffd ,_ =_abg ._ge .ReadByte ();if _bffd !='<'{return nil ,_cc .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0069\u0063\u0074");
};for {_abg .skipSpaces ();_abg .skipComments ();_fcfd ,_feb :=_abg ._ge .Peek (2);if _feb !=nil {return nil ,_feb ;};_bd .Log .Trace ("D\u0069c\u0074\u0020\u0070\u0065\u0065\u006b\u003a\u0020%\u0073\u0020\u0028\u0025 x\u0029\u0021",string (_fcfd ),string (_fcfd ));
if (_fcfd [0]=='>')&&(_fcfd [1]=='>'){_bd .Log .Trace ("\u0045\u004f\u0046\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");_abg ._ge .ReadByte ();_abg ._ge .ReadByte ();break ;};_bd .Log .Trace ("\u0050a\u0072s\u0065\u0020\u0074\u0068\u0065\u0020\u006e\u0061\u006d\u0065\u0021");
_dca ,_feb :=_abg .parseName ();_bd .Log .Trace ("\u004be\u0079\u003a\u0020\u0025\u0073",_dca );if _feb !=nil {_bd .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0052e\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u006ea\u006d\u0065\u0020e\u0072r\u0020\u0025\u0073",_feb );
return nil ,_feb ;};if len (_dca )> 4&&_dca [len (_dca )-4:]=="\u006e\u0075\u006c\u006c"{_eag :=_dca [0:len (_dca )-4];_bd .Log .Debug ("\u0054\u0061\u006b\u0069n\u0067\u0020\u0063\u0061\u0072\u0065\u0020\u006f\u0066\u0020n\u0075l\u006c\u0020\u0062\u0075\u0067\u0020\u0028%\u0073\u0029",_dca );
_bd .Log .Debug ("\u004e\u0065\u0077\u0020ke\u0079\u0020\u0022\u0025\u0073\u0022\u0020\u003d\u0020\u006e\u0075\u006c\u006c",_eag );_abg .skipSpaces ();_cdc ,_ :=_abg ._ge .Peek (1);if _cdc [0]=='/'{_fbd .Set (_eag ,_bb .MakeNull ());continue ;};};_abg .skipSpaces ();
_edf ,_feb :=_abg .parseObject ();if _feb !=nil {return nil ,_feb ;};_fbd .Set (_dca ,_edf );_bd .Log .Trace ("\u0064\u0069\u0063\u0074\u005b\u0025\u0073\u005d\u0020\u003d\u0020\u0025\u0073",_dca ,_edf .String ());};_bd .Log .Trace ("\u0072\u0065\u0074\u0075rn\u0069\u006e\u0067\u0020\u0046\u0044\u0046\u0020\u0044\u0069\u0063\u0074\u0021");
return _fbd ,nil ;};func (_bfg *fdfParser )parseIndirectObject ()(_bb .PdfObject ,error ){_dac :=_bb .PdfIndirectObject {};_bd .Log .Trace ("\u002dR\u0065a\u0064\u0020\u0069\u006e\u0064i\u0072\u0065c\u0074\u0020\u006f\u0062\u006a");_ccgf ,_faa :=_bfg ._ge .Peek (20);
if _faa !=nil {_bd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f\u0020r\u0065a\u0064\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a");return &_dac ,_faa ;};_bd .Log .Trace ("\u0028\u0069\u006edi\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0020\u0070\u0065\u0065\u006b\u0020\u0022\u0025\u0073\u0022",string (_ccgf ));
_bbbe :=_bdef .FindStringSubmatchIndex (string (_ccgf ));if len (_bbbe )< 6{_bd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0061\u0062l\u0065\u0020\u0074\u006f \u0066\u0069\u006e\u0064\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",string (_ccgf ));
return &_dac ,_cc .New ("\u0075\u006e\u0061b\u006c\u0065\u0020\u0074\u006f\u0020\u0064\u0065\u0074\u0065\u0063\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");
};_bfg ._ge .Discard (_bbbe [0]);_bd .Log .Trace ("O\u0066\u0066\u0073\u0065\u0074\u0073\u0020\u0025\u0020\u0064",_bbbe );_gfc :=_bbbe [1]-_bbbe [0];_aceg :=make ([]byte ,_gfc );_ ,_faa =_bfg .readAtLeast (_aceg ,_gfc );if _faa !=nil {_bd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0061\u0062l\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020-\u0020\u0025\u0073",_faa );
return nil ,_faa ;};_bd .Log .Trace ("\u0074\u0065\u0078t\u006c\u0069\u006e\u0065\u003a\u0020\u0025\u0073",_aceg );_cbc :=_bdef .FindStringSubmatch (string (_aceg ));if len (_cbc )< 3{_bd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020U\u006e\u0061\u0062l\u0065\u0020\u0074\u006f \u0066\u0069\u006e\u0064\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",string (_aceg ));
return &_dac ,_cc .New ("\u0075\u006e\u0061b\u006c\u0065\u0020\u0074\u006f\u0020\u0064\u0065\u0074\u0065\u0063\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");
};_fbbc ,_ :=_a .Atoi (_cbc [1]);_abab ,_ :=_a .Atoi (_cbc [2]);_dac .ObjectNumber =int64 (_fbbc );_dac .GenerationNumber =int64 (_abab );for {_aaf ,_gca :=_bfg ._ge .Peek (2);if _gca !=nil {return &_dac ,_gca ;};_bd .Log .Trace ("I\u006ed\u002e\u0020\u0070\u0065\u0065\u006b\u003a\u0020%\u0073\u0020\u0028\u0025 x\u0029\u0021",string (_aaf ),string (_aaf ));
if _bb .IsWhiteSpace (_aaf [0]){_bfg .skipSpaces ();}else if _aaf [0]=='%'{_bfg .skipComments ();}else if (_aaf [0]=='<')&&(_aaf [1]=='<'){_bd .Log .Trace ("\u0043\u0061\u006c\u006c\u0020\u0050\u0061\u0072\u0073e\u0044\u0069\u0063\u0074");_dac .PdfObject ,_gca =_bfg .parseDict ();
_bd .Log .Trace ("\u0045\u004f\u0046\u0020Ca\u006c\u006c\u0020\u0050\u0061\u0072\u0073\u0065\u0044\u0069\u0063\u0074\u003a\u0020%\u0076",_gca );if _gca !=nil {return &_dac ,_gca ;};_bd .Log .Trace ("\u0050\u0061\u0072\u0073\u0065\u0064\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u002e.\u002e\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
}else if (_aaf [0]=='/')||(_aaf [0]=='(')||(_aaf [0]=='[')||(_aaf [0]=='<'){_dac .PdfObject ,_gca =_bfg .parseObject ();if _gca !=nil {return &_dac ,_gca ;};_bd .Log .Trace ("P\u0061\u0072\u0073\u0065\u0064\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u002e\u002e\u002e \u0066\u0069\u006ei\u0073h\u0065\u0064\u002e");
}else {if _aaf [0]=='e'{_caac ,_bgc :=_bfg .readTextLine ();if _bgc !=nil {return nil ,_bgc ;};if len (_caac )>=6&&_caac [0:6]=="\u0065\u006e\u0064\u006f\u0062\u006a"{break ;};}else if _aaf [0]=='s'{_aaf ,_ =_bfg ._ge .Peek (10);if string (_aaf [:6])=="\u0073\u0074\u0072\u0065\u0061\u006d"{_bdb :=6;
if len (_aaf )> 6{if _bb .IsWhiteSpace (_aaf [_bdb ])&&_aaf [_bdb ]!='\r'&&_aaf [_bdb ]!='\n'{_bd .Log .Debug ("\u004e\u006fn\u002d\u0063\u006f\u006e\u0066\u006f\u0072\u006d\u0061\u006e\u0074\u0020\u0046\u0044\u0046\u0020\u006e\u006f\u0074 \u0065\u006e\u0064\u0069\u006e\u0067 \u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006c\u0069\u006e\u0065\u0020\u0070\u0072o\u0070\u0065r\u006c\u0079\u0020\u0077i\u0074\u0068\u0020\u0045\u004fL\u0020\u006d\u0061\u0072\u006b\u0065\u0072");
_bdb ++;};if _aaf [_bdb ]=='\r'{_bdb ++;if _aaf [_bdb ]=='\n'{_bdb ++;};}else if _aaf [_bdb ]=='\n'{_bdb ++;};};_bfg ._ge .Discard (_bdb );_dee ,_bad :=_dac .PdfObject .(*_bb .PdfObjectDictionary );if !_bad {return nil ,_cc .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006di\u0073s\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_bd .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074\u0020\u0025\u0073",_dee );_fdb ,_febg :=_dee .Get ("\u004c\u0065\u006e\u0067\u0074\u0068").(*_bb .PdfObjectInteger );if !_febg {return nil ,_cc .New ("\u0073\u0074re\u0061\u006d\u0020l\u0065\u006e\u0067\u0074h n\u0065ed\u0073\u0020\u0074\u006f\u0020\u0062\u0065 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067e\u0072");
};_fbg :=*_fdb ;if _fbg < 0{return nil ,_cc .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f \u0062e\u0020\u006c\u006f\u006e\u0067\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0030");};if int64 (_fbg )> _bfg ._dcf {_bd .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053t\u0072\u0065\u0061\u006d\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006c\u0061\u0072\u0067\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0066\u0069\u006c\u0065\u0020\u0073\u0069\u007a\u0065");
return nil ,_cc .New ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0073t\u0072\u0065\u0061m\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u002c\u0020la\u0072\u0067\u0065r\u0020\u0074h\u0061\u006e\u0020\u0066\u0069\u006ce\u0020\u0073i\u007a\u0065");};_fdad :=make ([]byte ,_fbg );
_ ,_gca =_bfg .readAtLeast (_fdad ,int (_fbg ));if _gca !=nil {_bd .Log .Debug ("E\u0052\u0052\u004f\u0052 s\u0074r\u0065\u0061\u006d\u0020\u0028%\u0064\u0029\u003a\u0020\u0025\u0058",len (_fdad ),_fdad );_bd .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gca );
return nil ,_gca ;};_dae :=_bb .PdfObjectStream {};_dae .Stream =_fdad ;_dae .PdfObjectDictionary =_dac .PdfObject .(*_bb .PdfObjectDictionary );_dae .ObjectNumber =_dac .ObjectNumber ;_dae .GenerationNumber =_dac .GenerationNumber ;_bfg .skipSpaces ();
_bfg ._ge .Discard (9);_bfg .skipSpaces ();return &_dae ,nil ;};};_dac .PdfObject ,_gca =_bfg .parseObject ();return &_dac ,_gca ;};};_bd .Log .Trace ("\u0052\u0065\u0074\u0075rn\u0069\u006e\u0067\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0021");
return &_dac ,nil ;};func (_fdf *fdfParser )parseNumber ()(_bb .PdfObject ,error ){return _bb .ParseNumber (_fdf ._ge )};func _gad (_aae _b .ReadSeeker )(*fdfParser ,error ){_efc :=&fdfParser {};_efc ._bbg =_aae ;_efc ._fde =map[int64 ]_bb .PdfObject {};
_cad ,_abbd ,_dba :=_efc .parseFdfVersion ();if _dba !=nil {_bd .Log .Error ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0070\u0061\u0072\u0073\u0065\u0020\u0076e\u0072\u0073\u0069o\u006e:\u0020\u0025\u0076",_dba );return nil ,_dba ;};_efc ._de =_cad ;
_efc ._def =_abbd ;_dba =_efc .parse ();return _efc ,_dba ;};func (_ad *fdfParser )skipComments ()error {if _ ,_bdf :=_ad .skipSpaces ();_bdf !=nil {return _bdf ;};_gc :=true ;for {_dgb ,_cae :=_ad ._ge .Peek (1);if _cae !=nil {_bd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0025\u0073",_cae .Error ());
return _cae ;};if _gc &&_dgb [0]!='%'{return nil ;};_gc =false ;if (_dgb [0]!='\r')&&(_dgb [0]!='\n'){_ad ._ge .ReadByte ();}else {break ;};};return _ad .skipComments ();};var _aea =_e .MustCompile ("\u0025F\u0044F\u002d\u0028\u005c\u0064\u0029\u005c\u002e\u0028\u005c\u0064\u0029");
func (_dgf *fdfParser )seekToEOFMarker (_faf int64 )error {_dgfc :=int64 (0);_gfg :=int64 (1000);for _dgfc < _faf {if _faf <=(_gfg +_dgfc ){_gfg =_faf -_dgfc ;};_ ,_dddb :=_dgf ._bbg .Seek (-_dgfc -_gfg ,_b .SeekEnd );if _dddb !=nil {return _dddb ;};_bfd :=make ([]byte ,_gfg );
_dgf ._bbg .Read (_bfd );_bd .Log .Trace ("\u004c\u006f\u006f\u006bi\u006e\u0067\u0020\u0066\u006f\u0072\u0020\u0045\u004f\u0046 \u006da\u0072\u006b\u0065\u0072\u003a\u0020\u0022%\u0073\u0022",string (_bfd ));_ccg :=_gag .FindAllStringIndex (string (_bfd ),-1);
if _ccg !=nil {_gef :=_ccg [len (_ccg )-1];_bd .Log .Trace ("\u0049\u006e\u0064\u003a\u0020\u0025\u0020\u0064",_ccg );_dgf ._bbg .Seek (-_dgfc -_gfg +int64 (_gef [0]),_b .SeekEnd );return nil ;};_bd .Log .Debug ("\u0057\u0061\u0072\u006e\u0069\u006eg\u003a\u0020\u0045\u004f\u0046\u0020\u006d\u0061\u0072\u006b\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0021\u0020\u002d\u0020\u0063\u006f\u006e\u0074\u0069\u006e\u0075\u0065\u0020s\u0065e\u006b\u0069\u006e\u0067");
_dgfc +=_gfg ;};_bd .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0045\u004f\u0046\u0020\u006d\u0061\u0072\u006be\u0072 \u0077\u0061\u0073\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");return _cc .New ("\u0045\u004f\u0046\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};

// FieldValues implements interface model.FieldValueProvider.
// Returns a map of field names to values (PdfObjects).
func (fdf *Data )FieldValues ()(map[string ]_bb .PdfObject ,error ){_ef ,_abd :=fdf .FieldDictionaries ();if _abd !=nil {return nil ,_abd ;};var _ec []string ;for _cbd :=range _ef {_ec =append (_ec ,_cbd );};_aa .Strings (_ec );_ac :=map[string ]_bb .PdfObject {};
for _ ,_gaa :=range _ec {_bf :=_ef [_gaa ];_ced :=_bb .TraceToDirectObject (_bf .Get ("\u0056"));_ac [_gaa ]=_ced ;};return _ac ,nil ;};func (_bdg *fdfParser )setFileOffset (_af int64 ){_bdg ._bbg .Seek (_af ,_b .SeekStart );_bdg ._ge =_fa .NewReader (_bdg ._bbg );
};type fdfParser struct{_de int ;_def int ;_fde map[int64 ]_bb .PdfObject ;_bbg _b .ReadSeeker ;_ge *_fa .Reader ;_dcf int64 ;_gb *_bb .PdfObjectDictionary ;};