//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package pdfutil ;import (_c "github.com/unidoc/unipdf/v3/common";_ef "github.com/unidoc/unipdf/v3/contentstream";_a "github.com/unidoc/unipdf/v3/contentstream/draw";_b "github.com/unidoc/unipdf/v3/core";_ca "github.com/unidoc/unipdf/v3/model";);

// NormalizePage performs the following operations on the passed in page:
// - Normalize the page rotation.
//   Rotates the contents of the page according to the Rotate entry, thus
//   flattening the rotation. The Rotate entry of the page is set to nil.
// - Normalize the media box.
//   If the media box of the page is offsetted (Llx != 0 or Lly != 0),
//   the contents of the page are translated to (-Llx, -Lly). After
//   normalization, the media box is updated (Llx and Lly are set to 0 and
//   Urx and Ury are updated accordingly).
// - Normalize the crop box.
//   The crop box of the page is updated based on the previous operations.
// After normalization, the page should look the same if openend using a
// PDF viewer.
// NOTE: This function does not normalize annotations, outlines other parts
// that are not part of the basic geometry and page content streams.
func NormalizePage (page *_ca .PdfPage )error {_cc ,_f :=page .GetMediaBox ();if _f !=nil {return _f ;};_d :=page .Rotate ;_ec :=_d !=nil &&*_d %360!=0&&*_d %90==0;_cc .Normalize ();_bd ,_bg ,_bc ,_dg :=_cc .Llx ,_cc .Lly ,_cc .Width (),_cc .Height ();_fb :=_bd !=0||_bg !=0;if !_ec &&!_fb {return nil ;};_ce :=func (_bb ,_g ,_ced float64 )_a .BoundingBox {return _a .Path {Points :[]_a .Point {_a .NewPoint (0,0).Rotate (_ced ),_a .NewPoint (_bb ,0).Rotate (_ced ),_a .NewPoint (0,_g ).Rotate (_ced ),_a .NewPoint (_bb ,_g ).Rotate (_ced )}}.GetBoundingBox ();};_gf :=_ef .NewContentCreator ();var _ge float64 ;if _ec {_ge =-float64 (*page .Rotate );_fg :=_ce (_bc ,_dg ,_ge );_gf .Translate ((_fg .Width -_bc )/2+_bc /2,(_fg .Height -_dg )/2+_dg /2);_gf .RotateDeg (_ge );_gf .Translate (-_bc /2,-_dg /2);_bc ,_dg =_fg .Width ,_fg .Height ;};if _fb {_gf .Translate (-_bd ,-_bg );};_db :=_gf .Operations ();_ed ,_f :=_b .MakeStream (_db .Bytes (),_b .NewFlateEncoder ());if _f !=nil {return _f ;};_cb :=_b .MakeArray (_ed );_cb .Append (page .GetContentStreamObjs ()...);*_cc =_ca .PdfRectangle {Urx :_bc ,Ury :_dg };if _fc :=page .CropBox ;_fc !=nil {_fc .Normalize ();_fa ,_ff ,_ag ,_edd :=_fc .Llx -_bd ,_fc .Lly -_bg ,_fc .Width (),_fc .Height ();if _ec {_fgf :=_ce (_ag ,_edd ,_ge );_ag ,_edd =_fgf .Width ,_fgf .Height ;};*_fc =_ca .PdfRectangle {Llx :_fa ,Lly :_ff ,Urx :_fa +_ag ,Ury :_ff +_edd };};_c .Log .Debug ("\u0052\u006f\u0074\u0061\u0074\u0065\u003d\u0025\u0066\u00b0\u0020\u004f\u0070\u0073\u003d%\u0071 \u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078\u003d\u0025\u002e\u0032\u0066",_ge ,_db ,_cc );page .Contents =_cb ;page .Rotate =nil ;return nil ;};