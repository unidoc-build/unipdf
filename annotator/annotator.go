//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package annotator provides an interface for creating annotations with appearance
// streams.  It goes beyond the models package which includes definitions of basic annotation models, in that it
// can create the appearance streams which specify the exact appearance as needed by many pdf viewers for consistent
// appearance of the annotations.
// It also contains methods for generating appearance streams for fields via widget annotations.
package annotator ;import (_ca "bytes";_ag "errors";_c "github.com/unidoc/unipdf/v3/common";_g "github.com/unidoc/unipdf/v3/contentstream";_dd "github.com/unidoc/unipdf/v3/contentstream/draw";_f "github.com/unidoc/unipdf/v3/core";_a "github.com/unidoc/unipdf/v3/internal/textencoding";
_d "github.com/unidoc/unipdf/v3/model";_ce "image";_cad "math";_ee "strings";_af "unicode";);func _dfgd (_eafc *_g .ContentCreator ,_edd AppearanceStyle ,_cbe ,_ffea float64 ){_eafc .Add_q ().Add_re (0,0,_cbe ,_ffea ).Add_w (_edd .BorderSize ).SetStrokingColor (_edd .BorderColor ).SetNonStrokingColor (_edd .FillColor ).Add_B ().Add_Q ();
};func _ebaea (_fec *_d .PdfAcroForm ,_gdfa *_d .PdfAnnotationWidget ,_eca *_d .PdfFieldChoice ,_edae AppearanceStyle )(*_f .PdfObjectDictionary ,error ){_ebd ,_cabb :=_f .GetArray (_gdfa .Rect );if !_cabb {return nil ,_ag .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");
};_bacc ,_efaaa :=_d .NewPdfRectangle (*_ebd );if _efaaa !=nil {return nil ,_efaaa ;};_ggg ,_egag :=_bacc .Width (),_bacc .Height ();_c .Log .Debug ("\u0043\u0068\u006f\u0069\u0063\u0065\u002c\u0020\u0077\u0061\u0020\u0042S\u003a\u0020\u0025\u0076",_gdfa .BS );
_agada ,_efaaa :=_g .NewContentStreamParser (_fbf (_eca .PdfField )).Parse ();if _efaaa !=nil {return nil ,_efaaa ;};_fdg ,_aag :=_f .GetDict (_gdfa .MK );if _aag {_fab ,_ :=_f .GetDict (_gdfa .BS );_ffe :=_edae .applyAppearanceCharacteristics (_fdg ,_fab ,nil );
if _ffe !=nil {return nil ,_ffe ;};};_gce :=_f .MakeDict ();for _ ,_fgg :=range _eca .Opt .Elements (){if _gdea ,_dfc :=_f .GetArray (_fgg );_dfc &&_gdea .Len ()==2{_fgg =_gdea .Get (1);};var _aabg string ;if _gbcc ,_edgc :=_f .GetString (_fgg );_edgc {_aabg =_gbcc .Decoded ();
}else if _ddf ,_bdgf :=_f .GetName (_fgg );_bdgf {_aabg =_ddf .String ();}else {_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u004f\u0070\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u002f\u0073\u0074\u0072\u0069\u006e\u0067 \u002d\u0020\u0025\u0054",_fgg );
return nil ,_ag .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u002f\u0073t\u0072\u0069\u006e\u0067");};if len (_aabg )> 0{_bab ,_aggb :=_bbea (_eca .PdfField ,_ggg ,_egag ,_aabg ,_edae ,_agada ,_fec .DR ,_fdg );if _aggb !=nil {return nil ,_aggb ;
};_gce .Set (*_f .MakeName (_aabg ),_bab .ToPdfObject ());};};_gdc :=_f .MakeDict ();_gdc .Set ("\u004e",_gce );return _gdc ,nil ;};

// CheckboxFieldOptions defines optional parameters for a checkbox field a form.
type CheckboxFieldOptions struct{Checked bool ;};func _dfgg (_cfcc LineAnnotationDef ,_fbfc string )([]byte ,*_d .PdfRectangle ,*_d .PdfRectangle ,error ){_fgff :=_dd .Line {X1 :0,Y1 :0,X2 :_cfcc .X2 -_cfcc .X1 ,Y2 :_cfcc .Y2 -_cfcc .Y1 ,LineColor :_cfcc .LineColor ,Opacity :_cfcc .Opacity ,LineWidth :_cfcc .LineWidth ,LineEndingStyle1 :_cfcc .LineEndingStyle1 ,LineEndingStyle2 :_cfcc .LineEndingStyle2 };
_gfc ,_dcca ,_gbbd :=_fgff .Draw (_fbfc );if _gbbd !=nil {return nil ,nil ,nil ,_gbbd ;};_geaa :=&_d .PdfRectangle {};_geaa .Llx =_cfcc .X1 +_dcca .Llx ;_geaa .Lly =_cfcc .Y1 +_dcca .Lly ;_geaa .Urx =_cfcc .X1 +_dcca .Urx ;_geaa .Ury =_cfcc .Y1 +_dcca .Ury ;
return _gfc ,_dcca ,_geaa ,nil ;};

// SetStyle applies appearance `style` to `fa`.
func (_bdd *FieldAppearance )SetStyle (style AppearanceStyle ){_bdd ._ea =&style };

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_bdee FieldAppearance )GenerateAppearanceDict (form *_d .PdfAcroForm ,field *_d .PdfField ,wa *_d .PdfAnnotationWidget )(*_f .PdfObjectDictionary ,error ){_c .Log .Trace ("\u0047\u0065n\u0065\u0072\u0061\u0074e\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0044i\u0063\u0074\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u0020\u0056:\u0020\u0025\u002b\u0076",field .PartialName (),field .V );
_ ,_cb :=field .GetContext ().(*_d .PdfFieldText );_ceba ,_fg :=_f .GetDict (wa .AP );if _fg &&_bdee .OnlyIfMissing &&(!_cb ||!_bdee .RegenerateTextFields ){_c .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");
return _ceba ,nil ;};if form .DR ==nil {form .DR =_d .NewPdfPageResources ();};switch _ad :=field .GetContext ().(type ){case *_d .PdfFieldText :_bc :=_ad ;switch {case _bc .Flags ().Has (_d .FieldFlagPassword ):return nil ,nil ;case _bc .Flags ().Has (_d .FieldFlagFileSelect ):return nil ,nil ;
case _bc .Flags ().Has (_d .FieldFlagComb ):if _bc .MaxLen !=nil {_ed ,_eg :=_cab (wa ,_bc ,form .DR ,_bdee .Style ());if _eg !=nil {return nil ,_eg ;};return _ed ,nil ;};};_gdf ,_bdeb :=_efg (wa ,_bc ,form .DR ,_bdee .Style ());if _bdeb !=nil {return nil ,_bdeb ;
};return _gdf ,nil ;case *_d .PdfFieldButton :_ebg :=_ad ;if _ebg .IsCheckbox (){_fbd ,_df :=_aed (wa ,_ebg ,form .DR ,_bdee .Style ());if _df !=nil {return nil ,_df ;};return _fbd ,nil ;};_c .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041\u004e\u0044\u004c\u0045\u0044 \u0062u\u0074\u0074\u006f\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u002b\u0076",_ebg .GetType ());
case *_d .PdfFieldChoice :_ebe :=_ad ;switch {case _ebe .Flags ().Has (_d .FieldFlagCombo ):_bdf ,_cada :=_ebaea (form ,wa ,_ebe ,_bdee .Style ());if _cada !=nil {return nil ,_cada ;};return _bdf ,nil ;default:_c .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055N\u0048\u0041\u004eD\u004c\u0045\u0044\u0020c\u0068\u006f\u0069\u0063\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074\u0068\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0025\u0073",_ebe .Flags ().String ());
};default:_c .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041N\u0044\u004c\u0045\u0044\u0020\u0066\u0069e\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_ad );};return nil ,nil ;};func _ebdc (_egd _ce .Image ,_cgg string ,_faeb *SignatureFieldOpts ,_fac []float64 ,_deca *_g .ContentCreator )(*_f .PdfObjectName ,*_d .XObjectImage ,error ){_cda ,_agd :=_d .DefaultImageHandler {}.NewImageFromGoImage (_egd );
if _agd !=nil {return nil ,nil ,_agd ;};_daa ,_agd :=_d .NewXObjectImageFromImage (_cda ,nil ,_faeb .Encoder );if _agd !=nil {return nil ,nil ,_agd ;};_dfcb ,_aagg :=float64 (*_daa .Width ),float64 (*_daa .Height );_fffc :=_fac [2]-_fac [0];_bfag :=_fac [3]-_fac [1];
if _faeb .AutoSize {_bbd :=_cad .Min (_fffc /_dfcb ,_bfag /_aagg );_dfcb *=_bbd ;_aagg *=_bbd ;_fac [0]=_fac [0]+(_fffc /2)-(_dfcb /2);_fac [1]=_fac [1]+(_bfag /2)-(_aagg /2);};var _cdaf *_f .PdfObjectName ;if _bceb ,_adfe :=_f .GetName (_daa .Name );_adfe {_cdaf =_bceb ;
}else {_cdaf =_f .MakeName (_cgg );};if _deca !=nil {_deca .Add_q ().Translate (_fac [0],_fac [1]).Scale (_dfcb ,_aagg ).Add_Do (*_cdaf ).Add_Q ();}else {return nil ,nil ,_ag .New ("\u0043\u006f\u006e\u0074en\u0074\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020\u0069\u0073\u0020\u006e\u0075l\u006c");
};return _cdaf ,_daa ,nil ;};const (_cfa quadding =0;_bde quadding =1;_agb quadding =2;);

// CircleAnnotationDef defines a circle annotation or ellipse at position (X, Y) and Width and Height.
// The annotation has various style parameters including Fill and Border options and Opacity.
type CircleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_d .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_d .PdfColorDeviceRGB ;Opacity float64 ;};

// AppearanceFont represents a font used for generating the appearance of a
// field in the filling/flattening process.
type AppearanceFont struct{

// Name represents the name of the font which will be added to the
// AcroForm resources (DR).
Name string ;

// Font represents the actual font used for the field appearance.
Font *_d .PdfFont ;

// Size represents the size of the font used for the field appearance.
// If size is 0, a default font size will be used.
// The default font size is calculated using the available annotation
// height and the AutoFontSizeFraction of the AppearanceStyle.
Size float64 ;};func _ebbc (_ggca []*SignatureLine ,_baea *SignatureFieldOpts )(*_f .PdfObjectDictionary ,error ){if _baea ==nil {_baea =NewSignatureFieldOpts ();};var _fffb error ;var _dga *_f .PdfObjectName ;_aaa :=_baea .Font ;if _aaa !=nil {_abbb ,_ :=_aaa .GetFontDescriptor ();
if _abbb !=nil {if _aac ,_bfde :=_abbb .FontName .(*_f .PdfObjectName );_bfde {_dga =_aac ;};};if _dga ==nil {_dga =_f .MakeName ("\u0046\u006f\u006et\u0031");};}else {if _aaa ,_fffb =_d .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");
_fffb !=nil {return nil ,_fffb ;};_dga =_f .MakeName ("\u0048\u0065\u006c\u0076");};_gdb :=_baea .FontSize ;if _gdb <=0{_gdb =10;};if _baea .LineHeight <=0{_baea .LineHeight =1;};_cfc :=_baea .LineHeight *_gdb ;_cea ,_fga :=_aaa .GetRuneMetrics (' ');if !_fga {return nil ,_ag .New ("\u0074\u0068e \u0066\u006f\u006et\u0020\u0064\u006f\u0065s n\u006ft \u0068\u0061\u0076\u0065\u0020\u0061\u0020sp\u0061\u0063\u0065\u0020\u0067\u006c\u0079p\u0068");
};_acd :=_cea .Wx ;var _cbaf float64 ;var _bbg []string ;for _ ,_egf :=range _ggca {if _egf .Text ==""{continue ;};_bcd :=_egf .Text ;if _egf .Desc !=""{_bcd =_egf .Desc +"\u003a\u0020"+_bcd ;};_bbg =append (_bbg ,_bcd );var _cadg float64 ;for _ ,_cdb :=range _bcd {_eefgd ,_fabf :=_aaa .GetRuneMetrics (_cdb );
if !_fabf {continue ;};_cadg +=_eefgd .Wx ;};if _cadg > _cbaf {_cbaf =_cadg ;};};_cbaf =_cbaf *_gdb /1000.0;_eee :=float64 (len (_bbg ))*_cfc ;_gdda :=_baea .Image !=nil ;_baef :=_baea .Rect ;if _baef ==nil {_baef =[]float64 {0,0,_cbaf ,_eee };if _gdda {_baef [2]=_cbaf *2;
_baef [3]=_eee *2;};_baea .Rect =_baef ;};_cge :=_baef [2]-_baef [0];_cebd :=_baef [3]-_baef [1];_dgbc ,_ecad :=_baef ,_baef ;var _bfa ,_fba float64 ;if _gdda &&len (_bbg )> 0{if _baea .ImagePosition <=SignatureImageRight {_bbge :=[]float64 {_baef [0],_baef [1],_baef [0]+(_cge /2),_baef [3]};
_fada :=[]float64 {_baef [0]+(_cge /2),_baef [1],_baef [2],_baef [3]};if _baea .ImagePosition ==SignatureImageLeft {_dgbc ,_ecad =_bbge ,_fada ;}else {_dgbc ,_ecad =_fada ,_bbge ;};}else {_fae :=[]float64 {_baef [0],_baef [1],_baef [2],_baef [1]+(_cebd /2)};
_fde :=[]float64 {_baef [0],_baef [1]+(_cebd /2),_baef [2],_baef [3]};if _baea .ImagePosition ==SignatureImageTop {_dgbc ,_ecad =_fde ,_fae ;}else {_dgbc ,_ecad =_fae ,_fde ;};};};_bfa =_ecad [2]-_ecad [0];_fba =_ecad [3]-_ecad [1];var _bfg float64 ;if _baea .AutoSize {if _cbaf > _bfa ||_eee > _fba {_affa :=_cad .Min (_bfa /_cbaf ,_fba /_eee );
_gdb *=_affa ;};_cfc =_baea .LineHeight *_gdb ;_bfg +=(_fba -float64 (len (_bbg ))*_cfc )/2;};_ecadf :=_g .NewContentCreator ();_dcc :=_d .NewPdfPageResources ();_dcc .SetFontByName (*_dga ,_aaa .ToPdfObject ());if _baea .BorderSize <=0{_baea .BorderSize =0;
_baea .BorderColor =_d .NewPdfColorDeviceGray (1);};if _baea .BorderColor ==nil {_baea .BorderColor =_d .NewPdfColorDeviceGray (1);};if _baea .FillColor ==nil {_baea .FillColor =_d .NewPdfColorDeviceGray (1);};_ecadf .Add_q ().SetNonStrokingColor (_baea .FillColor ).SetStrokingColor (_baea .BorderColor ).Add_w (_baea .BorderSize ).Add_re (_baef [0],_baef [1],_cge ,_cebd ).Add_B ().Add_Q ();
if _baea .WatermarkImage !=nil {_eaade :=[]float64 {_baef [0],_baef [1],_baef [2],_baef [3]};_ecfg ,_febeb ,_ddde :=_ebdc (_baea .WatermarkImage ,"\u0049\u006d\u0061\u0067\u0065\u0057\u0061\u0074\u0065r\u006d\u0061\u0072\u006b",_baea ,_eaade ,_ecadf );
if _ddde !=nil {return nil ,_ddde ;};_dcc .SetXObjectImageByName (*_ecfg ,_febeb );};_ecadf .Add_q ();_ecadf .Translate (_ecad [0],_ecad [3]-_cfc -_bfg );_ecadf .Add_BT ();_gaag :=_aaa .Encoder ();for _ ,_agbb :=range _bbg {var _gef []byte ;for _ ,_bga :=range _agbb {if _af .IsSpace (_bga ){if len (_gef )> 0{_ecadf .SetNonStrokingColor (_baea .TextColor ).Add_Tf (*_dga ,_gdb ).Add_TL (_cfc ).Add_TJ ([]_f .PdfObject {_f .MakeStringFromBytes (_gef )}...);
_gef =nil ;};_ecadf .Add_Tf (*_dga ,_gdb ).Add_TL (_cfc ).Add_TJ ([]_f .PdfObject {_f .MakeFloat (-_acd )}...);}else {_gef =append (_gef ,_gaag .Encode (string (_bga ))...);};};if len (_gef )> 0{_ecadf .SetNonStrokingColor (_baea .TextColor ).Add_Tf (*_dga ,_gdb ).Add_TL (_cfc ).Add_TJ ([]_f .PdfObject {_f .MakeStringFromBytes (_gef )}...);
};_ecadf .Add_Td (0,-_cfc );};_ecadf .Add_ET ();_ecadf .Add_Q ();if _gdda {_fagd ,_fcaa ,_gbgc :=_ebdc (_baea .Image ,"\u0049\u006d\u0061\u0067\u0065\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065",_baea ,_dgbc ,_ecadf );if _gbgc !=nil {return nil ,_gbgc ;
};_dcc .SetXObjectImageByName (*_fagd ,_fcaa );};_cecf :=_d .NewXObjectForm ();_cecf .Resources =_dcc ;_cecf .BBox =_f .MakeArrayFromFloats (_baef );_cecf .SetContentStream (_ecadf .Bytes (),_bee ());_gac :=_f .MakeDict ();_gac .Set ("\u004e",_cecf .ToPdfObject ());
return _gac ,nil ;};

// NewSignatureField returns a new signature field with a visible appearance
// containing the specified signature lines and styled according to the
// specified options.
func NewSignatureField (signature *_d .PdfSignature ,lines []*SignatureLine ,opts *SignatureFieldOpts )(*_d .PdfFieldSignature ,error ){if signature ==nil {return nil ,_ag .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};_ffca ,_bad :=_ebbc (lines ,opts );if _bad !=nil {return nil ,_bad ;};_cgce :=_d .NewPdfFieldSignature (signature );_cgce .Rect =_f .MakeArrayFromFloats (opts .Rect );_cgce .AP =_ffca ;return _cgce ,nil ;};

// CreateCircleAnnotation creates a circle/ellipse annotation object with appearance stream that can be added to
// page PDF annotations.
func CreateCircleAnnotation (circDef CircleAnnotationDef )(*_d .PdfAnnotation ,error ){_ae :=_d .NewPdfAnnotationCircle ();if circDef .BorderEnabled {_ff ,_cf ,_eea :=circDef .BorderColor .R (),circDef .BorderColor .G (),circDef .BorderColor .B ();_ae .C =_f .MakeArrayFromFloats ([]float64 {_ff ,_cf ,_eea });
_b :=_d .NewBorderStyle ();_b .SetBorderWidth (circDef .BorderWidth );_ae .BS =_b .ToPdfObject ();};if circDef .FillEnabled {_afb ,_gf ,_aeg :=circDef .FillColor .R (),circDef .FillColor .G (),circDef .FillColor .B ();_ae .IC =_f .MakeArrayFromFloats ([]float64 {_afb ,_gf ,_aeg });
}else {_ae .IC =_f .MakeArrayFromIntegers ([]int {});};if circDef .Opacity < 1.0{_ae .CA =_f .MakeFloat (circDef .Opacity );};_cc ,_eb ,_ebb :=_bb (circDef );if _ebb !=nil {return nil ,_ebb ;};_ae .AP =_cc ;_ae .Rect =_f .MakeArrayFromFloats ([]float64 {_eb .Llx ,_eb .Lly ,_eb .Urx ,_eb .Ury });
return _ae .PdfAnnotation ,nil ;};func _cab (_dbcd *_d .PdfAnnotationWidget ,_ffb *_d .PdfFieldText ,_dda *_d .PdfPageResources ,_adf AppearanceStyle )(*_f .PdfObjectDictionary ,error ){_dfb :=_d .NewPdfPageResources ();_dbcf ,_age :=_f .GetArray (_dbcd .Rect );
if !_age {return nil ,_ag .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_efac ,_aea :=_d .NewPdfRectangle (*_dbcf );if _aea !=nil {return nil ,_aea ;};_gc ,_cadc :=_efac .Width (),_efac .Height ();_cca ,_febe :=_gc ,_cadc ;
_fcb ,_dadd :=_f .GetDict (_dbcd .MK );if _dadd {_cbb ,_ :=_f .GetDict (_dbcd .BS );_eac :=_adf .applyAppearanceCharacteristics (_fcb ,_cbb ,nil );if _eac !=nil {return nil ,_eac ;};};_cfef ,_dadd :=_f .GetIntVal (_ffb .MaxLen );if !_dadd {return nil ,_ag .New ("\u006d\u0061\u0078\u006c\u0065\u006e\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if _cfef <=0{return nil ,_ag .New ("\u006d\u0061\u0078\u004c\u0065\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_gca :=_gc /float64 (_cfef );_eafd ,_aea :=_g .NewContentStreamParser (_fbf (_ffb .PdfField )).Parse ();if _aea !=nil {return nil ,_aea ;
};_bbc :=_g .NewContentCreator ();if _adf .BorderSize > 0{_dfgd (_bbc ,_adf ,_gc ,_cadc );};if _adf .DrawAlignmentReticle {_agad :=_adf ;_agad .BorderSize =0.2;_dabd (_bbc ,_agad ,_gc ,_cadc );};_bbc .Add_BMC ("\u0054\u0078");_bbc .Add_q ();_ ,_cadc =_adf .applyRotation (_fcb ,_gc ,_cadc ,_bbc );
_bbc .Add_BT ();_ab ,_ecg ,_aea :=_adf .processDA (_ffb .PdfField ,_eafd ,_dda ,_dfb ,_bbc );if _aea !=nil {return nil ,_aea ;};_abd :=_ab .Font ;_fcc :=_f .MakeName (_ab .Name );_dgb :=_ab .Size ;_bcb :=_dgb ==0;if _bcb &&_ecg {_dgb =_cadc *_adf .AutoFontSizeFraction ;
};_fgd :=_abd .Encoder ();if _fgd ==nil {_c .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_fgd =_a .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};var _eaa string ;if _gfb ,_bac :=_f .GetString (_ffb .V );_bac {_eaa =_gfb .Decoded ();};_bbc .Add_Tf (*_fcc ,_dgb );var _bgf float64 ;for _ ,_efd :=range _eaa {_gdd ,_cbfe :=_abd .GetRuneMetrics (_efd );
if !_cbfe {_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_efd );
continue ;};_fgdd :=_gdd .Wy ;if int (_fgdd )<=0{_fgdd =_gdd .Wx ;};if _fgdd > _bgf {_bgf =_fgdd ;};};if int (_bgf )==0{_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0064\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006d\u0061x\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0073\u0069\u007a\u0065\u0020- \u0075\u0073\u0069\u006e\u0067\u0020\u0031\u0030\u0030\u0030");
_bgf =1000;};_ceg ,_aea :=_abd .GetFontDescriptor ();if _aea !=nil {_c .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};var _afd float64 ;
if _ceg !=nil {_afd ,_aea =_ceg .GetCapHeight ();if _aea !=nil {_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_aea );
};};if int (_afd )<=0{_c .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_afd =1000.0;};_ebae :=_afd /1000.0*_dgb ;_bag :=0.0;_bca :=1.0*_dgb *(_bgf /1000.0);{_cag :=_bca ;if _bcb &&_bag +_cag > _cadc {_dgb =0.95*(_cadc -_bag );_ebae =_afd /1000.0*_dgb ;};if _cadc > _ebae {_bag =(_cadc -_ebae )/2.0;};};_bbc .Add_Td (0,_bag );
if _cbc ,_cce :=_f .GetIntVal (_ffb .Q );_cce {switch _cbc {case 2:if len (_eaa )< _cfef {_dee :=float64 (_cfef -len (_eaa ))*_gca ;_bbc .Add_Td (_dee ,0);};};};for _dcb ,_bed :=range _eaa {_fbdc :=2.0;_aeca :=string (_bed );if _fgd !=nil {_egg ,_edgf :=_abd .GetRuneMetrics (_bed );
if !_edgf {_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_bed );
continue ;};_aeca =string (_fgd .Encode (_aeca ));_bdfa :=_dgb *_egg .Wx /1000.0;_debg :=(_gca -_bdfa )/2;_fbdc =_debg ;};_bbc .Add_Td (_fbdc ,0);_bbc .Add_Tj (*_f .MakeString (_aeca ));if _dcb !=len (_eaa )-1{_bbc .Add_Td (_gca -_fbdc ,0);};};_bbc .Add_ET ();
_bbc .Add_Q ();_bbc .Add_EMC ();_agbc :=_d .NewXObjectForm ();_agbc .Resources =_dfb ;_agbc .BBox =_f .MakeArrayFromFloats ([]float64 {0,0,_cca ,_febe });_agbc .SetContentStream (_bbc .Bytes (),_bee ());_beg :=_f .MakeDict ();_beg .Set ("\u004e",_agbc .ToPdfObject ());
return _beg ,nil ;};func _efg (_gge *_d .PdfAnnotationWidget ,_agg *_d .PdfFieldText ,_dac *_d .PdfPageResources ,_dgg AppearanceStyle )(*_f .PdfObjectDictionary ,error ){_eaf :=_d .NewPdfPageResources ();_ggeg ,_fd :=_f .GetArray (_gge .Rect );if !_fd {return nil ,_ag .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");
};_dfg ,_dde :=_d .NewPdfRectangle (*_ggeg );if _dde !=nil {return nil ,_dde ;};_fa ,_cef :=_dfg .Width (),_dfg .Height ();_fef ,_aa :=_fa ,_cef ;_afbc ,_ddg :=_f .GetDict (_gge .MK );if _ddg {_adb ,_ :=_f .GetDict (_gge .BS );_cbf :=_dgg .applyAppearanceCharacteristics (_afbc ,_adb ,nil );
if _cbf !=nil {return nil ,_cbf ;};};_bda ,_dde :=_g .NewContentStreamParser (_fbf (_agg .PdfField )).Parse ();if _dde !=nil {return nil ,_dde ;};_faf :=_g .NewContentCreator ();if _dgg .BorderSize > 0{_dfgd (_faf ,_dgg ,_fa ,_cef );};if _dgg .DrawAlignmentReticle {_efa :=_dgg ;
_efa .BorderSize =0.2;_dabd (_faf ,_efa ,_fa ,_cef );};_faf .Add_BMC ("\u0054\u0078");_faf .Add_q ();_fa ,_cef =_dgg .applyRotation (_afbc ,_fa ,_cef ,_faf );_faf .Add_BT ();_bbe ,_fea ,_dde :=_dgg .processDA (_agg .PdfField ,_bda ,_dac ,_eaf ,_faf );if _dde !=nil {return nil ,_dde ;
};_bba :=_bbe .Font ;_ec :=_bbe .Size ;_cfg :=_f .MakeName (_bbe .Name );_dba :=_ec ==0;if _dba &&_fea {_ec =_cef *_dgg .AutoFontSizeFraction ;};_cfe :=_bba .Encoder ();if _cfe ==nil {_c .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_cfe =_a .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};_daf ,_dde :=_bba .GetFontDescriptor ();if _dde !=nil {_c .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
};var _dbc string ;if _aad ,_cbd :=_f .GetString (_agg .V );_cbd {_dbc =_aad .Decoded ();};if len (_dbc )==0{return nil ,nil ;};_ade :=[]string {_dbc };_feb :=false ;if _agg .Flags ().Has (_d .FieldFlagMultiline ){_feb =true ;_dbc =_ee .Replace (_dbc ,"\u000d\u000a","\u000a",-1);
_dbc =_ee .Replace (_dbc ,"\u000d","\u000a",-1);_ade =_ee .Split (_dbc ,"\u000a");};_fff :=0.0;_fgc :=0;if _cfe !=nil {_gad :=len (_ade );_ac :=0;for _ac < _gad {var _bbf float64 ;_fcff :=-1;_edg :=0.0;for _dbca ,_gb :=range _ade [_ac ]{if _gb ==' '{_fcff =_dbca ;
_bbf =_edg ;};_dgf ,_ecc :=_bba .GetRuneMetrics (_gb );if !_ecc {_c .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_gb );
continue ;};_edg +=_dgf .Wx ;if _feb &&!_dba &&_ec *_edg /1000.0> _fa &&_fcff > 0{_aga :=_ade [_ac ][_fcff +1:];if _ac < len (_ade )-1{_ade =append (_ade [:_ac +1],_ade [_ac :]...);_ade [_ac +1]=_aga ;}else {_ade =append (_ade ,_aga );};_gad ++;_ade [_ac ]=_ade [_ac ][0:_fcff ];
_edg =_bbf ;break ;};};if _edg > _fff {_fff =_edg ;};_ade [_ac ]=string (_cfe .Encode (_ade [_ac ]));if len (_ade [_ac ])> 0{_fgc ++;};_ac ++;};};_aab :=2.0;if _ec ==0||_dba &&_fff > 0&&_aab +_fff *_ec /1000.0> _fa {_ec =0.95*1000.0*(_fa -_aab )/_fff ;
};_ega :=_cfa ;{if _gbg ,_ebf :=_f .GetIntVal (_agg .Q );_ebf {switch _gbg {case 0:_ega =_cfa ;case 1:_ega =_bde ;case 2:_ega =_agb ;default:_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0071\u0075\u0061\u0064\u0064\u0069\u006e\u0067\u003a\u0020%\u0064\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u006c\u0065ft\u0020\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074",_gbg );
};};};_efaa :=_dgg .MultilineLineHeight ;_dc :=_ec ;if _feb &&_fgc > 1{_dc =_efaa *_ec ;};var _bbec float64 ;if _daf !=nil {_bbec ,_dde =_daf .GetCapHeight ();if _dde !=nil {_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_dde );
};};if int (_bbec )<=0{_c .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_bbec =1000;};_dbf :=_bbec /1000.0*_ec ;_aecf :=0.0;{_ccd :=float64 (_fgc )*_dc ;if _dba &&_aecf +_ccd > _cef {_ec =0.95*(_cef -_aecf )/float64 (_fgc );_dc =_ec ;if _feb &&_fgc > 1{_dc =_efaa *_ec ;};_dbf =_bbec /1000.0*_ec ;_ccd =float64 (_fgc )*_dc ;
};if _cef > _ccd {if _feb {if _dgg .MultilineVAlignMiddle {_ba :=(_cef -_ccd )/2.0;_add :=_ba +_ccd -_dc ;_aecf =_add ;}else {_aecf =_cef -_dc ;_aecf -=_ec *0.5;};}else {_aecf =(_cef -_dbf )/2.0;};};};_faf .Add_Tf (*_cfg ,_ec );_faf .Add_Td (_aab ,_aecf );
_fbb :=_aab ;_ege :=_aab ;for _egb ,_bg :=range _ade {_de :=0.0;for _ ,_gee :=range _bg {_ddd ,_ecb :=_bba .GetRuneMetrics (_gee );if !_ecb {continue ;};_de +=_ddd .Wx ;};_bf :=_de /1000.0*_ec ;_deb :=_fa -_bf ;var _be float64 ;switch _ega {case _cfa :_be =_fbb ;
case _bde :_be =_deb /2;case _agb :_be =_deb ;};_aab =_be -_ege ;if _aab > 0.0{_faf .Add_Td (_aab ,0);};_ege =_be ;_faf .Add_Tj (*_f .MakeString (_bg ));if _egb < len (_ade )-1{_faf .Add_Td (0,-_dc *_efaa );};};_faf .Add_ET ();_faf .Add_Q ();_faf .Add_EMC ();
_aef :=_d .NewXObjectForm ();_aef .Resources =_eaf ;_aef .BBox =_f .MakeArrayFromFloats ([]float64 {0,0,_fef ,_aa });_aef .SetContentStream (_faf .Bytes (),_bee ());_bgc :=_f .MakeDict ();_bgc .Set ("\u004e",_aef .ToPdfObject ());return _bgc ,nil ;};

// NewComboboxField generates a new combobox form field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewComboboxField (page *_d .PdfPage ,name string ,rect []float64 ,opt ComboboxFieldOptions )(*_d .PdfFieldChoice ,error ){if page ==nil {return nil ,_ag .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_ag .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_cdd :=_d .NewPdfField ();_ccga :=&_d .PdfFieldChoice {};_cdd .SetContext (_ccga );_ccga .PdfField =_cdd ;_ccga .T =_f .MakeString (name );_ccga .Opt =_f .MakeArray ();for _ ,_egbe :=range opt .Choices {_ccga .Opt .Append (_f .MakeString (_egbe ));};
_ccga .SetFlag (_d .FieldFlagCombo );_ecd :=_d .NewPdfAnnotationWidget ();_ecd .Rect =_f .MakeArrayFromFloats (rect );_ecd .P =page .ToPdfObject ();_ecd .F =_f .MakeInteger (4);_ecd .Parent =_ccga .ToPdfObject ();_ccga .Annotations =append (_ccga .Annotations ,_ecd );
return _ccga ,nil ;};

// NewTextField generates a new text field with partial name `name` at location
// specified by `rect` on given `page` and with field specific options `opt`.
func NewTextField (page *_d .PdfPage ,name string ,rect []float64 ,opt TextFieldOptions )(*_d .PdfFieldText ,error ){if page ==nil {return nil ,_ag .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_ag .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
};if len (rect )!=4{return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_acf :=_d .NewPdfField ();_dfcf :=&_d .PdfFieldText {};_acf .SetContext (_dfcf );_dfcf .PdfField =_acf ;_dfcf .T =_f .MakeString (name );
if opt .MaxLen > 0{_dfcf .MaxLen =_f .MakeInteger (int64 (opt .MaxLen ));};if len (opt .Value )> 0{_dfcf .V =_f .MakeString (opt .Value );};_bcf :=_d .NewPdfAnnotationWidget ();_bcf .Rect =_f .MakeArrayFromFloats (rect );_bcf .P =page .ToPdfObject ();_bcf .F =_f .MakeInteger (4);
_bcf .Parent =_dfcf .ToPdfObject ();_dfcf .Annotations =append (_dfcf .Annotations ,_bcf );return _dfcf ,nil ;};func _ccgd (_dbbc RectangleAnnotationDef )(*_f .PdfObjectDictionary ,*_d .PdfRectangle ,error ){_ggda :=_d .NewXObjectForm ();_ggda .Resources =_d .NewPdfPageResources ();
_abfb :="";if _dbbc .Opacity < 1.0{_efb :=_f .MakeDict ();_efb .Set ("\u0063\u0061",_f .MakeFloat (_dbbc .Opacity ));_efb .Set ("\u0043\u0041",_f .MakeFloat (_dbbc .Opacity ));_aadb :=_ggda .Resources .AddExtGState ("\u0067\u0073\u0031",_efb );if _aadb !=nil {_c .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_aadb ;};_abfb ="\u0067\u0073\u0031";};_fbfb ,_fgaf ,_fade ,_fffa :=_ddff (_dbbc ,_abfb );if _fffa !=nil {return nil ,nil ,_fffa ;};_fffa =_ggda .SetContentStream (_fbfb ,nil );if _fffa !=nil {return nil ,nil ,_fffa ;};_ggda .BBox =_fgaf .ToPdfObject ();
_dgc :=_f .MakeDict ();_dgc .Set ("\u004e",_ggda .ToPdfObject ());return _dgc ,_fade ,nil ;};func _cd (_ga CircleAnnotationDef ,_eba string )([]byte ,*_d .PdfRectangle ,*_d .PdfRectangle ,error ){_ceb :=_dd .Circle {X :_ga .X ,Y :_ga .Y ,Width :_ga .Width ,Height :_ga .Height ,FillEnabled :_ga .FillEnabled ,FillColor :_ga .FillColor ,BorderEnabled :_ga .BorderEnabled ,BorderWidth :_ga .BorderWidth ,BorderColor :_ga .BorderColor ,Opacity :_ga .Opacity };
_ef ,_db ,_da :=_ceb .Draw (_eba );if _da !=nil {return nil ,nil ,nil ,_da ;};_dad :=&_d .PdfRectangle {};_dad .Llx =_ga .X +_db .Llx ;_dad .Lly =_ga .Y +_db .Lly ;_dad .Urx =_ga .X +_db .Urx ;_dad .Ury =_ga .Y +_db .Ury ;return _ef ,_db ,_dad ,nil ;};
func _dabd (_ccb *_g .ContentCreator ,_bfd AppearanceStyle ,_dbg ,_begg float64 ){_ccb .Add_q ().Add_re (0,0,_dbg ,_begg ).Add_re (0,_begg /2,_dbg ,_begg /2).Add_re (0,0,_dbg ,_begg ).Add_re (_dbg /2,0,_dbg /2,_begg ).Add_w (_bfd .BorderSize ).SetStrokingColor (_bfd .BorderColor ).SetNonStrokingColor (_bfd .FillColor ).Add_B ().Add_Q ();
};

// ComboboxFieldOptions defines optional parameters for a combobox form field.
type ComboboxFieldOptions struct{

// Choices is the list of string values that can be selected.
Choices []string ;};

// TextFieldOptions defines optional parameter for a text field in a form.
type TextFieldOptions struct{MaxLen int ;Value string ;};

// NewSignatureLine returns a new signature line displayed as a part of the
// signature field appearance.
func NewSignatureLine (desc ,text string )*SignatureLine {return &SignatureLine {Desc :desc ,Text :text };};func _bee ()_f .StreamEncoder {return _f .NewFlateEncoder ()};

// SignatureLine represents a line of information in the signature field appearance.
type SignatureLine struct{Desc string ;Text string ;};

// NewCheckboxField generates a new checkbox field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewCheckboxField (page *_d .PdfPage ,name string ,rect []float64 ,opt CheckboxFieldOptions )(*_d .PdfFieldButton ,error ){if page ==nil {return nil ,_ag .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_ag .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_gafg ,_cabc :=_d .NewStandard14Font (_d .ZapfDingbatsName );if _cabc !=nil {return nil ,_cabc ;};_ggd :=_d .NewPdfField ();_dfba :=&_d .PdfFieldButton {};_ggd .SetContext (_dfba );_dfba .PdfField =_ggd ;_dfba .T =_f .MakeString (name );_dfba .SetType (_d .ButtonTypeCheckbox );
_gcb :="\u004f\u0066\u0066";if opt .Checked {_gcb ="\u0059\u0065\u0073";};_dfba .V =_f .MakeName (_gcb );_aega :=_d .NewPdfAnnotationWidget ();_aega .Rect =_f .MakeArrayFromFloats (rect );_aega .P =page .ToPdfObject ();_aega .F =_f .MakeInteger (4);_aega .Parent =_dfba .ToPdfObject ();
_bec :=rect [2]-rect [0];_gda :=rect [3]-rect [1];var _aggg _ca .Buffer ;_aggg .WriteString ("\u0071\u000a");_aggg .WriteString ("\u0030 \u0030\u0020\u0031\u0020\u0072\u0067\n");_aggg .WriteString ("\u0042\u0054\u000a");_aggg .WriteString ("\u002f\u005a\u0061D\u0062\u0020\u0031\u0032\u0020\u0054\u0066\u000a");
_aggg .WriteString ("\u0045\u0054\u000a");_aggg .WriteString ("\u0051\u000a");_aeb :=_g .NewContentCreator ();_aeb .Add_q ();_aeb .Add_rg (0,0,1);_aeb .Add_BT ();_aeb .Add_Tf (*_f .MakeName ("\u005a\u0061\u0044\u0062"),12);_aeb .Add_Td (0,0);_aeb .Add_ET ();
_aeb .Add_Q ();_beef :=_d .NewXObjectForm ();_beef .SetContentStream (_aeb .Bytes (),_f .NewRawEncoder ());_beef .BBox =_f .MakeArrayFromFloats ([]float64 {0,0,_bec ,_gda });_beef .Resources =_d .NewPdfPageResources ();_beef .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_gafg .ToPdfObject ());
_aeb =_g .NewContentCreator ();_aeb .Add_q ();_aeb .Add_re (0,0,_bec ,_gda );_aeb .Add_W ().Add_n ();_aeb .Add_rg (0,0,1);_aeb .Translate (0,3.0);_aeb .Add_BT ();_aeb .Add_Tf (*_f .MakeName ("\u005a\u0061\u0044\u0062"),12);_aeb .Add_Td (0,0);_aeb .Add_Tj (*_f .MakeString ("\u0034"));
_aeb .Add_ET ();_aeb .Add_Q ();_edc :=_d .NewXObjectForm ();_edc .SetContentStream (_aeb .Bytes (),_f .NewRawEncoder ());_edc .BBox =_f .MakeArrayFromFloats ([]float64 {0,0,_bec ,_gda });_edc .Resources =_d .NewPdfPageResources ();_edc .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_gafg .ToPdfObject ());
_bcc :=_f .MakeDict ();_bcc .Set ("\u004f\u0066\u0066",_beef .ToPdfObject ());_bcc .Set ("\u0059\u0065\u0073",_edc .ToPdfObject ());_dced :=_f .MakeDict ();_dced .Set ("\u004e",_bcc );_aega .AP =_dced ;_aega .AS =_f .MakeName (_gcb );_dfba .Annotations =append (_dfba .Annotations ,_aega );
return _dfba ,nil ;};type quadding int ;

// SignatureImagePosition specifies the image signature location relative to the text signature.
// If text signature is not defined, this position will be ignored.
type SignatureImagePosition int ;

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_ge FieldAppearance )Style ()AppearanceStyle {if _ge ._ea !=nil {return *_ge ._ea ;};return AppearanceStyle {AutoFontSizeFraction :0.65,CheckmarkRune :'✔',BorderSize :0.0,BorderColor :_d .NewPdfColorDeviceGray (0),FillColor :_d .NewPdfColorDeviceGray (1),MultilineLineHeight :1.2,MultilineVAlignMiddle :false ,DrawAlignmentReticle :false ,AllowMK :true };
};func (_dfa *AppearanceStyle )processDA (_dddb *_d .PdfField ,_fccb *_g .ContentStreamOperations ,_fbbe ,_ede *_d .PdfPageResources ,_efc *_g .ContentCreator )(*AppearanceFont ,bool ,error ){var _bea *AppearanceFont ;var _gaf bool ;if _dfa .Fonts !=nil {if _dfa .Fonts .Fallback !=nil {_bea =_dfa .Fonts .Fallback ;
};if _bge :=_dfa .Fonts .FieldFallbacks ;_bge !=nil {if _ddee ,_egab :=_bge [_dddb .PartialName ()];_egab {_bea =_ddee ;}else if _abb ,_ffcf :=_dddb .FullName ();_ffcf ==nil {if _bfed ,_bged :=_bge [_abb ];_bged {_bea =_bfed ;};};};_gaf =_dfa .Fonts .ForceReplace ;
};var _dce string ;var _cdgc float64 ;var _cba bool ;if _fccb !=nil {for _ ,_fcg :=range *_fccb {if _fcg .Operand =="\u0054\u0066"&&len (_fcg .Params )==2{if _fecg ,_ecef :=_f .GetNameVal (_fcg .Params [0]);_ecef {_dce =_fecg ;};if _eeb ,_eefg :=_f .GetNumberAsFloat (_fcg .Params [1]);
_eefg ==nil {_cdgc =_eeb ;};_cba =true ;continue ;};_efc .AddOperand (*_fcg );};};var _ffbd *AppearanceFont ;var _ggb _f .PdfObject ;if _gaf &&_bea !=nil {_ffbd =_bea ;}else {if _fbbe !=nil &&_dce !=""{if _fdfb ,_dace :=_fbbe .GetFontByName (*_f .MakeName (_dce ));
_dace {if _gfd ,_dfdb :=_d .NewPdfFontFromPdfObject (_fdfb );_dfdb ==nil {_ggb =_fdfb ;_ffbd =&AppearanceFont {Name :_dce ,Font :_gfd ,Size :_cdgc };}else {_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u006c\u006fa\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0025\u0076",_dfdb );
};};};if _ffbd ==nil &&_bea !=nil {_ffbd =_bea ;};if _ffbd ==nil {_ebfe ,_aae :=_d .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");if _aae !=nil {return nil ,false ,_aae ;};_ffbd =&AppearanceFont {Name :"\u0048\u0065\u006c\u0076",Font :_ebfe ,Size :_cdgc };
};};_ffda :=*_f .MakeName (_ffbd .Name );if _ggb ==nil {_ggb =_ffbd .Font .ToPdfObject ();};if _fbbe !=nil &&!_fbbe .HasFontByName (_ffda ){_fbbe .SetFontByName (_ffda ,_ggb );};if _ede !=nil &&!_ede .HasFontByName (_ffda ){_ede .SetFontByName (_ffda ,_ggb );
};return _ffbd ,_cba ,nil ;};

// AppearanceStyle defines style parameters for appearance stream generation.
type AppearanceStyle struct{

// How much of Rect height to fill when autosizing text.
AutoFontSizeFraction float64 ;

// CheckmarkRune is a rune used for check mark in checkboxes (for ZapfDingbats font).
CheckmarkRune rune ;BorderSize float64 ;BorderColor _d .PdfColor ;FillColor _d .PdfColor ;

// Multiplier for lineheight for multi line text.
MultilineLineHeight float64 ;MultilineVAlignMiddle bool ;

// Visual guide checking alignment of field contents (debugging).
DrawAlignmentReticle bool ;

// Allow field MK appearance characteristics to override style settings.
AllowMK bool ;

// Fonts holds appearance styles for fonts.
Fonts *AppearanceFontStyle ;};func (_afg *AppearanceStyle )applyAppearanceCharacteristics (_dcg *_f .PdfObjectDictionary ,_ffc *_f .PdfObjectDictionary ,_ace *_d .PdfFont )error {if !_afg .AllowMK {return nil ;};if CA ,_bfc :=_f .GetString (_dcg .Get ("\u0043\u0041"));
_bfc &&_ace !=nil {_dadf :=CA .Bytes ();if len (_dadf )!=0{_fgf :=[]rune (_ace .Encoder ().Decode (_dadf ));if len (_fgf )==1{_afg .CheckmarkRune =_fgf [0];};};};if BC ,_dae :=_f .GetArray (_dcg .Get ("\u0042\u0043"));_dae {_fca ,_ebff :=BC .ToFloat64Array ();
if _ebff !=nil {return _ebff ;};switch len (_fca ){case 1:_afg .BorderColor =_d .NewPdfColorDeviceGray (_fca [0]);case 3:_afg .BorderColor =_d .NewPdfColorDeviceRGB (_fca [0],_fca [1],_fca [2]);case 4:_afg .BorderColor =_d .NewPdfColorDeviceCMYK (_fca [0],_fca [1],_fca [2],_fca [3]);
default:_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0043\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_fca ));
};if _ffc !=nil {if _acg ,_ecf :=_f .GetNumberAsFloat (_ffc .Get ("\u0057"));_ecf ==nil {_afg .BorderSize =_acg ;};};};if BG ,_bdde :=_f .GetArray (_dcg .Get ("\u0042\u0047"));_bdde {_bddc ,_fag :=BG .ToFloat64Array ();if _fag !=nil {return _fag ;};switch len (_bddc ){case 1:_afg .FillColor =_d .NewPdfColorDeviceGray (_bddc [0]);
case 3:_afg .FillColor =_d .NewPdfColorDeviceRGB (_bddc [0],_bddc [1],_bddc [2]);case 4:_afg .FillColor =_d .NewPdfColorDeviceCMYK (_bddc [0],_bddc [1],_bddc [2],_bddc [3]);default:_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0047\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_bddc ));
};};return nil ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_eeag FieldAppearance )WrapContentStream (page *_d .PdfPage )error {_gcca ,_edb :=page .GetAllContentStreams ();if _edb !=nil {return _edb ;};_gbe :=_g .NewContentStreamParser (_gcca );_dbab ,_edb :=_gbe .Parse ();if _edb !=nil {return _edb ;};_dbab .WrapIfNeeded ();
_decg :=[]string {_dbab .String ()};return page .SetContentStreams (_decg ,_bee ());};const (SignatureImageLeft SignatureImagePosition =iota ;SignatureImageRight ;SignatureImageTop ;SignatureImageBottom ;);

// FieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for fields taking into account what value is in the field. A common use case is for generating the
// appearance stream prior to flattening fields.
//
// If `OnlyIfMissing` is true, the field appearance is generated only for fields that do not have an
// appearance stream specified.
// If `RegenerateTextFields` is true, all text fields are regenerated (even if OnlyIfMissing is true).
type FieldAppearance struct{OnlyIfMissing bool ;RegenerateTextFields bool ;_ea *AppearanceStyle ;};

// NewSignatureFieldOpts returns a new initialized instance of options
// used to generate a signature appearance.
func NewSignatureFieldOpts ()*SignatureFieldOpts {return &SignatureFieldOpts {Font :_d .DefaultFont (),FontSize :10,LineHeight :1,AutoSize :true ,TextColor :_d .NewPdfColorDeviceGray (0),BorderColor :_d .NewPdfColorDeviceGray (0),FillColor :_d .NewPdfColorDeviceGray (1),Encoder :_f .NewFlateEncoder (),ImagePosition :SignatureImageLeft };
};

// SignatureFieldOpts represents a set of options used to configure
// an appearance widget dictionary.
type SignatureFieldOpts struct{

// Rect represents the area the signature annotation is displayed on.
Rect []float64 ;

// AutoSize specifies if the content of the appearance should be
// scaled to fit in the annotation rectangle.
AutoSize bool ;

// Font specifies the font of the text content.
Font *_d .PdfFont ;

// FontSize specifies the size of the text content.
FontSize float64 ;

// LineHeight specifies the height of a line of text in the appearance annotation.
LineHeight float64 ;

// TextColor represents the color of the text content displayed.
TextColor _d .PdfColor ;

// FillColor represents the background color of the appearance annotation area.
FillColor _d .PdfColor ;

// BorderSize represents border size of the appearance annotation area.
BorderSize float64 ;

// BorderColor represents the border color of the appearance annotation area.
BorderColor _d .PdfColor ;

// WatermarkImage specifies the image used as a watermark that will be rendered
// behind the signature.
WatermarkImage _ce .Image ;

// Image represents the image used for the signature appearance.
Image _ce .Image ;

// Encoder specifies the image encoder used for image signature. Defaults to flate encoder.
Encoder _f .StreamEncoder ;

// ImagePosition specifies the image location relative to the text signature.
ImagePosition SignatureImagePosition ;};func _bb (_gg CircleAnnotationDef )(*_f .PdfObjectDictionary ,*_d .PdfRectangle ,error ){_fc :=_d .NewXObjectForm ();_fc .Resources =_d .NewPdfPageResources ();_fb :="";if _gg .Opacity < 1.0{_dg :=_f .MakeDict ();
_dg .Set ("\u0063\u0061",_f .MakeFloat (_gg .Opacity ));_dg .Set ("\u0043\u0041",_f .MakeFloat (_gg .Opacity ));_gd :=_fc .Resources .AddExtGState ("\u0067\u0073\u0031",_dg );if _gd !=nil {_c .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_gd ;};_fb ="\u0067\u0073\u0031";};_fcf ,_cg ,_fe ,_aec :=_cd (_gg ,_fb );if _aec !=nil {return nil ,nil ,_aec ;};_aec =_fc .SetContentStream (_fcf ,nil );if _aec !=nil {return nil ,nil ,_aec ;};_fc .BBox =_cg .ToPdfObject ();_bd :=_f .MakeDict ();
_bd .Set ("\u004e",_fc .ToPdfObject ());return _bd ,_fe ,nil ;};func _ddff (_adfd RectangleAnnotationDef ,_fffd string )([]byte ,*_d .PdfRectangle ,*_d .PdfRectangle ,error ){_adbfe :=_dd .Rectangle {X :0,Y :0,Width :_adfd .Width ,Height :_adfd .Height ,FillEnabled :_adfd .FillEnabled ,FillColor :_adfd .FillColor ,BorderEnabled :_adfd .BorderEnabled ,BorderWidth :2*_adfd .BorderWidth ,BorderColor :_adfd .BorderColor ,Opacity :_adfd .Opacity };
_fdca ,_dfda ,_baa :=_adbfe .Draw (_fffd );if _baa !=nil {return nil ,nil ,nil ,_baa ;};_egaf :=&_d .PdfRectangle {};_egaf .Llx =_adfd .X +_dfda .Llx ;_egaf .Lly =_adfd .Y +_dfda .Lly ;_egaf .Urx =_adfd .X +_dfda .Urx ;_egaf .Ury =_adfd .Y +_dfda .Ury ;
return _fdca ,_dfda ,_egaf ,nil ;};func _aed (_gcg *_d .PdfAnnotationWidget ,_aadf *_d .PdfFieldButton ,_fcd *_d .PdfPageResources ,_bedb AppearanceStyle )(*_f .PdfObjectDictionary ,error ){_cgc ,_dfd :=_f .GetArray (_gcg .Rect );if !_dfd {return nil ,_ag .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");
};_ccg ,_deef :=_d .NewPdfRectangle (*_cgc );if _deef !=nil {return nil ,_deef ;};_gff ,_cebaa :=_ccg .Width (),_ccg .Height ();_ecgd ,_gbb :=_gff ,_cebaa ;_c .Log .Debug ("\u0043\u0068\u0065\u0063kb\u006f\u0078\u002c\u0020\u0077\u0061\u0020\u0042\u0053\u003a\u0020\u0025\u0076",_gcg .BS );
_agc ,_deef :=_d .NewStandard14Font ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");if _deef !=nil {return nil ,_deef ;};_beb ,_dbb :=_f .GetDict (_gcg .MK );if _dbb {_eef ,_ :=_f .GetDict (_gcg .BS );_cfb :=_bedb .applyAppearanceCharacteristics (_beb ,_eef ,_agc );
if _cfb !=nil {return nil ,_cfb ;};};_fcda :=_d .NewXObjectForm ();{_dab :=_g .NewContentCreator ();if _bedb .BorderSize > 0{_dfgd (_dab ,_bedb ,_gff ,_cebaa );};if _bedb .DrawAlignmentReticle {_afbf :=_bedb ;_afbf .BorderSize =0.2;_dabd (_dab ,_afbf ,_gff ,_cebaa );
};_gff ,_cebaa =_bedb .applyRotation (_beb ,_gff ,_cebaa ,_dab );_caf :=_bedb .AutoFontSizeFraction *_cebaa ;_dag ,_cgcg :=_agc .GetRuneMetrics (_bedb .CheckmarkRune );if !_cgcg {return nil ,_ag .New ("\u0067l\u0079p\u0068\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_gbc :=_agc .Encoder ();_bdg :=_gbc .Encode (string (_bedb .CheckmarkRune ));_cec :=_dag .Wx *_caf /1000.0;_cee :=705.0;_cdg :=_cee /1000.0*_caf ;_egaa :=2.0;_fed :=1.0;if _cec < _gff {_egaa =(_gff -_cec )/2.0;};if _cdg < _cebaa {_fed =(_cebaa -_cdg )/2.0;
};_dab .Add_q ().Add_g (0).Add_BT ().Add_Tf ("\u005a\u0061\u0044\u0062",_caf ).Add_Td (_egaa ,_fed ).Add_Tj (*_f .MakeStringFromBytes (_bdg )).Add_ET ().Add_Q ();_fcda .Resources =_d .NewPdfPageResources ();_fcda .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_agc .ToPdfObject ());
_fcda .BBox =_f .MakeArrayFromFloats ([]float64 {0,0,_ecgd ,_gbb });_fcda .SetContentStream (_dab .Bytes (),_bee ());};_gfbg :=_d .NewXObjectForm ();{_ddeb :=_g .NewContentCreator ();if _bedb .BorderSize > 0{_dfgd (_ddeb ,_bedb ,_gff ,_cebaa );};_gfbg .BBox =_f .MakeArrayFromFloats ([]float64 {0,0,_ecgd ,_gbb });
_gfbg .SetContentStream (_ddeb .Bytes (),_bee ());};_eda :=_f .MakeDict ();_eda .Set ("\u004f\u0066\u0066",_gfbg .ToPdfObject ());_eda .Set ("\u0059\u0065\u0073",_fcda .ToPdfObject ());_bff :=_f .MakeDict ();_bff .Set ("\u004e",_eda );return _bff ,nil ;
};func _dbgb (_cgf LineAnnotationDef )(*_f .PdfObjectDictionary ,*_d .PdfRectangle ,error ){_egdb :=_d .NewXObjectForm ();_egdb .Resources =_d .NewPdfPageResources ();_bddd :="";if _cgf .Opacity < 1.0{_cegb :=_f .MakeDict ();_cegb .Set ("\u0063\u0061",_f .MakeFloat (_cgf .Opacity ));
_gccc :=_egdb .Resources .AddExtGState ("\u0067\u0073\u0031",_cegb );if _gccc !=nil {_c .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_gccc ;
};_bddd ="\u0067\u0073\u0031";};_gcdd ,_beca ,_dbfd ,_cadgg :=_dfgg (_cgf ,_bddd );if _cadgg !=nil {return nil ,nil ,_cadgg ;};_cadgg =_egdb .SetContentStream (_gcdd ,nil );if _cadgg !=nil {return nil ,nil ,_cadgg ;};_egdb .BBox =_beca .ToPdfObject ();
_bcg :=_f .MakeDict ();_bcg .Set ("\u004e",_egdb .ToPdfObject ());return _bcg ,_dbfd ,nil ;};

// LineAnnotationDef defines a line between point 1 (X1,Y1) and point 2 (X2,Y2).  The line ending styles can be none
// (regular line), or arrows at either end.  The line also has a specified width, color and opacity.
type LineAnnotationDef struct{X1 float64 ;Y1 float64 ;X2 float64 ;Y2 float64 ;LineColor *_d .PdfColorDeviceRGB ;Opacity float64 ;LineWidth float64 ;LineEndingStyle1 _dd .LineEndingStyle ;LineEndingStyle2 _dd .LineEndingStyle ;};

// CreateRectangleAnnotation creates a rectangle annotation object that can be added to page PDF annotations.
func CreateRectangleAnnotation (rectDef RectangleAnnotationDef )(*_d .PdfAnnotation ,error ){_feg :=_d .NewPdfAnnotationSquare ();if rectDef .BorderEnabled {_aagc ,_eebb ,_cadf :=rectDef .BorderColor .R (),rectDef .BorderColor .G (),rectDef .BorderColor .B ();
_feg .C =_f .MakeArrayFromFloats ([]float64 {_aagc ,_eebb ,_cadf });_fee :=_d .NewBorderStyle ();_fee .SetBorderWidth (rectDef .BorderWidth );_feg .BS =_fee .ToPdfObject ();};if rectDef .FillEnabled {_fafd ,_aggag ,_ggbc :=rectDef .FillColor .R (),rectDef .FillColor .G (),rectDef .FillColor .B ();
_feg .IC =_f .MakeArrayFromFloats ([]float64 {_fafd ,_aggag ,_ggbc });}else {_feg .IC =_f .MakeArrayFromIntegers ([]int {});};if rectDef .Opacity < 1.0{_feg .CA =_f .MakeFloat (rectDef .Opacity );};_eec ,_abf ,_beeb :=_ccgd (rectDef );if _beeb !=nil {return nil ,_beeb ;
};_feg .AP =_eec ;_feg .Rect =_f .MakeArrayFromFloats ([]float64 {_abf .Llx ,_abf .Lly ,_abf .Urx ,_abf .Ury });return _feg .PdfAnnotation ,nil ;};func (_bdc *AppearanceStyle )applyRotation (_bfe *_f .PdfObjectDictionary ,_dgea ,_aff float64 ,_ddab *_g .ContentCreator )(float64 ,float64 ){if !_bdc .AllowMK {return _dgea ,_aff ;
};if _bfe ==nil {return _dgea ,_aff ;};_ccgc ,_ :=_f .GetNumberAsFloat (_bfe .Get ("\u0052"));if _ccgc ==0{return _dgea ,_aff ;};_gea :=-_ccgc ;_ccge :=_dd .Path {Points :[]_dd .Point {_dd .NewPoint (0,0).Rotate (_gea ),_dd .NewPoint (_dgea ,0).Rotate (_gea ),_dd .NewPoint (0,_aff ).Rotate (_gea ),_dd .NewPoint (_dgea ,_aff ).Rotate (_gea )}}.GetBoundingBox ();
_ddab .RotateDeg (_ccgc );_ddab .Translate (_ccge .X ,_ccge .Y );return _ccge .Width ,_ccge .Height ;};

// CreateLineAnnotation creates a line annotation object that can be added to page PDF annotations.
func CreateLineAnnotation (lineDef LineAnnotationDef )(*_d .PdfAnnotation ,error ){_edbg :=_d .NewPdfAnnotationLine ();_edbg .L =_f .MakeArrayFromFloats ([]float64 {lineDef .X1 ,lineDef .Y1 ,lineDef .X2 ,lineDef .Y2 });_agga :=_f .MakeName ("\u004e\u006f\u006e\u0065");
if lineDef .LineEndingStyle1 ==_dd .LineEndingStyleArrow {_agga =_f .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_fbdf :=_f .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle2 ==_dd .LineEndingStyleArrow {_fbdf =_f .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");
};_edbg .LE =_f .MakeArray (_agga ,_fbdf );if lineDef .Opacity < 1.0{_edbg .CA =_f .MakeFloat (lineDef .Opacity );};_fdc ,_dafa ,_cfbe :=lineDef .LineColor .R (),lineDef .LineColor .G (),lineDef .LineColor .B ();_edbg .IC =_f .MakeArrayFromFloats ([]float64 {_fdc ,_dafa ,_cfbe });
_edbg .C =_f .MakeArrayFromFloats ([]float64 {_fdc ,_dafa ,_cfbe });_dagb :=_d .NewBorderStyle ();_dagb .SetBorderWidth (lineDef .LineWidth );_edbg .BS =_dagb .ToPdfObject ();_fcbg ,_bgee ,_caga :=_dbgb (lineDef );if _caga !=nil {return nil ,_caga ;};_edbg .AP =_fcbg ;
_edbg .Rect =_f .MakeArrayFromFloats ([]float64 {_bgee .Llx ,_bgee .Lly ,_bgee .Urx ,_bgee .Ury });return _edbg .PdfAnnotation ,nil ;};func _bbea (_fbg *_d .PdfField ,_dec ,_gcc float64 ,_aecg string ,_fcdb AppearanceStyle ,_eced *_g .ContentStreamOperations ,_fad *_d .PdfPageResources ,_fda *_f .PdfObjectDictionary )(*_d .XObjectForm ,error ){_acb :=_d .NewPdfPageResources ();
_deg ,_fdf :=_dec ,_gcc ;_acc :=_g .NewContentCreator ();if _fcdb .BorderSize > 0{_dfgd (_acc ,_fcdb ,_dec ,_gcc );};if _fcdb .DrawAlignmentReticle {_aabb :=_fcdb ;_aabb .BorderSize =0.2;_dabd (_acc ,_aabb ,_dec ,_gcc );};_acc .Add_BMC ("\u0054\u0078");
_acc .Add_q ();_acc .Add_BT ();_dec ,_gcc =_fcdb .applyRotation (_fda ,_dec ,_gcc ,_acc );_bae ,_fdgf ,_cfbg :=_fcdb .processDA (_fbg ,_eced ,_fad ,_acb ,_acc );if _cfbg !=nil {return nil ,_cfbg ;};_ced :=_bae .Font ;_cgb :=_bae .Size ;_eed :=_f .MakeName (_bae .Name );
_gfbb :=_cgb ==0;if _gfbb &&_fdgf {_cgb =_gcc *_fcdb .AutoFontSizeFraction ;};_fdb :=_ced .Encoder ();if _fdb ==nil {_c .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_fdb =_a .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};if len (_aecg )==0{return nil ,nil ;};_bce :=2.0;_aadfg :=0.0;if _fdb !=nil {for _ ,_ccgf :=range _aecg {_ecac ,_geb :=_ced .GetRuneMetrics (_ccgf );if !_geb {_c .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_ccgf );
continue ;};_aadfg +=_ecac .Wx ;};_aecg =string (_fdb .Encode (_aecg ));};if _cgb ==0||_gfbb &&_aadfg > 0&&_bce +_aadfg *_cgb /1000.0> _dec {_cgb =0.95*1000.0*(_dec -_bce )/_aadfg ;};_bdb :=1.0*_cgb ;_ddea :=2.0;{_edf :=_bdb ;if _gfbb &&_ddea +_edf > _gcc {_cgb =0.95*(_gcc -_ddea );
_bdb =1.0*_cgb ;_edf =_bdb ;};if _gcc > _edf {_ddea =(_gcc -_edf )/2.0;_ddea +=1.50;};};_acc .Add_Tf (*_eed ,_cgb );_acc .Add_Td (_bce ,_ddea );_acc .Add_Tj (*_f .MakeString (_aecg ));_acc .Add_ET ();_acc .Add_Q ();_acc .Add_EMC ();_adbf :=_d .NewXObjectForm ();
_adbf .Resources =_acb ;_adbf .BBox =_f .MakeArrayFromFloats ([]float64 {0,0,_deg ,_fdf });_adbf .SetContentStream (_acc .Bytes (),_bee ());return _adbf ,nil ;};func _fbf (_gcd *_d .PdfField )string {if _gcd ==nil {return "";};_eaad ,_bef :=_gcd .GetContext ().(*_d .PdfFieldText );
if !_bef {return _fbf (_gcd .Parent );};if _eaad .DA !=nil {return _eaad .DA .Str ();};return _fbf (_eaad .Parent );};

// AppearanceFontStyle defines font style characteristics for form fields,
// used in the filling/flattening process.
type AppearanceFontStyle struct{

// Fallback represents a global font fallback, used for fields which do
// not specify a font in their default appearance (DA). The fallback is
// also used if there is a font specified in the DA, but it is not
// found in the AcroForm resources (DR).
Fallback *AppearanceFont ;

// FieldFallbacks defines font fallbacks for specific fields. The map keys
// represent the names of the fields (which can be specified by their
// partial or full names). Specific field fallback fonts take precedence
// over the global font fallback.
FieldFallbacks map[string ]*AppearanceFont ;

// ForceReplace forces the replacement of fonts in the filling/flattening
// process, even if the default appearance (DA) specify a valid font.
// If no fallback font is provided, setting this field has no effect.
ForceReplace bool ;};

// RectangleAnnotationDef is a rectangle defined with a specified Width and Height and a lower left corner at (X,Y).
// The rectangle can optionally have a border and a filling color.
// The Width/Height includes the border (if any specified).
type RectangleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_d .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_d .PdfColorDeviceRGB ;Opacity float64 ;};