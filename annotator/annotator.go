//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package annotator provides an interface for creating annotations with appearance
// streams.  It goes beyond the models package which includes definitions of basic annotation models, in that it
// can create the appearance streams which specify the exact appearance as needed by many pdf viewers for consistent
// appearance of the annotations.
// It also contains methods for generating appearance streams for fields via widget annotations.
package annotator ;import (_a "bytes";_ea "errors";_c "github.com/unidoc/unipdf/v3/common";_fe "github.com/unidoc/unipdf/v3/contentstream";_ebc "github.com/unidoc/unipdf/v3/contentstream/draw";_eb "github.com/unidoc/unipdf/v3/core";_f "github.com/unidoc/unipdf/v3/internal/textencoding";_eg "github.com/unidoc/unipdf/v3/model";_fb "image";_g "math";_b "strings";_cf "unicode";);

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_bdc FieldAppearance )GenerateAppearanceDict (form *_eg .PdfAcroForm ,field *_eg .PdfField ,wa *_eg .PdfAnnotationWidget )(*_eb .PdfObjectDictionary ,error ){_c .Log .Trace ("\u0047\u0065n\u0065\u0072\u0061\u0074e\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0044i\u0063\u0074\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u0020\u0056:\u0020\u0025\u002b\u0076",field .PartialName (),field .V );_ ,_cg :=field .GetContext ().(*_eg .PdfFieldText );_dg ,_cef :=_eb .GetDict (wa .AP );if _cef &&_bdc .OnlyIfMissing &&(!_cg ||!_bdc .RegenerateTextFields ){_c .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");return _dg ,nil ;};if form .DR ==nil {form .DR =_eg .NewPdfPageResources ();};switch _bb :=field .GetContext ().(type ){case *_eg .PdfFieldText :_dd :=_bb ;switch {case _dd .Flags ().Has (_eg .FieldFlagPassword ):return nil ,nil ;case _dd .Flags ().Has (_eg .FieldFlagFileSelect ):return nil ,nil ;case _dd .Flags ().Has (_eg .FieldFlagComb ):if _dd .MaxLen !=nil {_dge ,_bdb :=_cca (wa ,_dd ,form .DR ,_bdc .Style ());if _bdb !=nil {return nil ,_bdb ;};return _dge ,nil ;};};_dae ,_ada :=_fbec (wa ,_dd ,form .DR ,_bdc .Style ());if _ada !=nil {return nil ,_ada ;};return _dae ,nil ;case *_eg .PdfFieldButton :_ba :=_bb ;if _ba .IsCheckbox (){_cd ,_cfff :=_fcea (wa ,_ba ,form .DR ,_bdc .Style ());if _cfff !=nil {return nil ,_cfff ;};return _cd ,nil ;};_c .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041\u004e\u0044\u004c\u0045\u0044 \u0062u\u0074\u0074\u006f\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u002b\u0076",_ba .GetType ());case *_eg .PdfFieldChoice :_bg :=_bb ;switch {case _bg .Flags ().Has (_eg .FieldFlagCombo ):_fcde ,_afb :=_gaaf (form ,wa ,_bg ,_bdc .Style ());if _afb !=nil {return nil ,_afb ;};return _fcde ,nil ;default:_c .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055N\u0048\u0041\u004eD\u004c\u0045\u0044\u0020c\u0068\u006f\u0069\u0063\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074\u0068\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0025\u0073",_bg .Flags ().String ());};default:_c .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041N\u0044\u004c\u0045\u0044\u0020\u0066\u0069e\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_bb );};return nil ,nil ;};func _da (_cba CircleAnnotationDef ,_gd string )([]byte ,*_eg .PdfRectangle ,*_eg .PdfRectangle ,error ){_edd :=_ebc .Circle {X :_cba .X ,Y :_cba .Y ,Width :_cba .Width ,Height :_cba .Height ,FillEnabled :_cba .FillEnabled ,FillColor :_cba .FillColor ,BorderEnabled :_cba .BorderEnabled ,BorderWidth :_cba .BorderWidth ,BorderColor :_cba .BorderColor ,Opacity :_cba .Opacity };_edf ,_gg ,_efe :=_edd .Draw (_gd );if _efe !=nil {return nil ,nil ,nil ,_efe ;};_cea :=&_eg .PdfRectangle {};_cea .Llx =_cba .X +_gg .Llx ;_cea .Lly =_cba .Y +_gg .Lly ;_cea .Urx =_cba .X +_gg .Urx ;_cea .Ury =_cba .Y +_gg .Ury ;return _edf ,_gg ,_cea ,nil ;};

// AppearanceFontStyle defines font style characteristics for form fields,
// used in the filling/flattening process.
type AppearanceFontStyle struct{

// Fallback represents a global font fallback, used for fields which do
// not specify a font in their default appearance (DA). The fallback is
// also used if there is a font specified in the DA, but it is not
// found in the AcroForm resources (DR).
Fallback *AppearanceFont ;

// FieldFallbacks defines font fallbacks for specific fields. The map keys
// represent the names of the fields (which can be specified by their
// partial or full names). Specific field fallback fonts take precedence
// over the global font fallback.
FieldFallbacks map[string ]*AppearanceFont ;

// ForceReplace forces the replacement of fonts in the filling/flattening
// process, even if the default appearance (DA) specify a valid font.
// If no fallback font is provided, setting this field has no effect.
ForceReplace bool ;};

// CreateCircleAnnotation creates a circle/ellipse annotation object with appearance stream that can be added to
// page PDF annotations.
func CreateCircleAnnotation (circDef CircleAnnotationDef )(*_eg .PdfAnnotation ,error ){_ce :=_eg .NewPdfAnnotationCircle ();if circDef .BorderEnabled {_ge ,_fbe ,_aa :=circDef .BorderColor .R (),circDef .BorderColor .G (),circDef .BorderColor .B ();_ce .C =_eb .MakeArrayFromFloats ([]float64 {_ge ,_fbe ,_aa });_egb :=_eg .NewBorderStyle ();_egb .SetBorderWidth (circDef .BorderWidth );_ce .BS =_egb .ToPdfObject ();};if circDef .FillEnabled {_eac ,_ef ,_ac :=circDef .FillColor .R (),circDef .FillColor .G (),circDef .FillColor .B ();_ce .IC =_eb .MakeArrayFromFloats ([]float64 {_eac ,_ef ,_ac });}else {_ce .IC =_eb .MakeArrayFromIntegers ([]int {});};if circDef .Opacity < 1.0{_ce .CA =_eb .MakeFloat (circDef .Opacity );};_ed ,_ab ,_gee :=_bd (circDef );if _gee !=nil {return nil ,_gee ;};_ce .AP =_ed ;_ce .Rect =_eb .MakeArrayFromFloats ([]float64 {_ab .Llx ,_ab .Lly ,_ab .Urx ,_ab .Ury });return _ce .PdfAnnotation ,nil ;};

// SetStyle applies appearance `style` to `fa`.
func (_feab *FieldAppearance )SetStyle (style AppearanceStyle ){_feab ._aea =&style };const (SignatureImageLeft SignatureImagePosition =iota ;SignatureImageRight ;SignatureImageTop ;SignatureImageBottom ;);

// SignatureImagePosition specifies the image signature location relative to the text signature.
// If text signature is not defined, this position will be ignored.
type SignatureImagePosition int ;

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_fcd FieldAppearance )Style ()AppearanceStyle {if _fcd ._aea !=nil {return *_fcd ._aea ;};return AppearanceStyle {AutoFontSizeFraction :0.65,CheckmarkRune :'âœ”',BorderSize :0.0,BorderColor :_eg .NewPdfColorDeviceGray (0),FillColor :_eg .NewPdfColorDeviceGray (1),MultilineLineHeight :1.2,MultilineVAlignMiddle :false ,DrawAlignmentReticle :false ,AllowMK :true };};func _fcea (_aca *_eg .PdfAnnotationWidget ,_beg *_eg .PdfFieldButton ,_ccc *_eg .PdfPageResources ,_fdfg AppearanceStyle )(*_eb .PdfObjectDictionary ,error ){_ead ,_eff :=_eb .GetArray (_aca .Rect );if !_eff {return nil ,_ea .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_dbf ,_cda :=_eg .NewPdfRectangle (*_ead );if _cda !=nil {return nil ,_cda ;};_afd ,_bceg :=_dbf .Width (),_dbf .Height ();_cccd ,_eebf :=_afd ,_bceg ;_c .Log .Debug ("\u0043\u0068\u0065\u0063kb\u006f\u0078\u002c\u0020\u0077\u0061\u0020\u0042\u0053\u003a\u0020\u0025\u0076",_aca .BS );_cad ,_cda :=_eg .NewStandard14Font ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");if _cda !=nil {return nil ,_cda ;};_agb ,_fedb :=_eb .GetDict (_aca .MK );if _fedb {_gaa ,_ :=_eb .GetDict (_aca .BS );_bbg :=_fdfg .applyAppearanceCharacteristics (_agb ,_gaa ,_cad );if _bbg !=nil {return nil ,_bbg ;};};_fda :=_eg .NewXObjectForm ();{_bab :=_fe .NewContentCreator ();if _fdfg .BorderSize > 0{_edg (_bab ,_fdfg ,_afd ,_bceg );};if _fdfg .DrawAlignmentReticle {_bad :=_fdfg ;_bad .BorderSize =0.2;_cce (_bab ,_bad ,_afd ,_bceg );};_afd ,_bceg =_fdfg .applyRotation (_agb ,_afd ,_bceg ,_bab );_gafb :=_fdfg .AutoFontSizeFraction *_bceg ;_dcg ,_dce :=_cad .GetRuneMetrics (_fdfg .CheckmarkRune );if !_dce {return nil ,_ea .New ("\u0067l\u0079p\u0068\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_gfd :=_cad .Encoder ();_fgc :=_gfd .Encode (string (_fdfg .CheckmarkRune ));_bea :=_dcg .Wx *_gafb /1000.0;_gaad :=705.0;_bfc :=_gaad /1000.0*_gafb ;_ffb :=2.0;_adaf :=1.0;if _bea < _afd {_ffb =(_afd -_bea )/2.0;};if _bfc < _bceg {_adaf =(_bceg -_bfc )/2.0;};_bab .Add_q ().Add_g (0).Add_BT ().Add_Tf ("\u005a\u0061\u0044\u0062",_gafb ).Add_Td (_ffb ,_adaf ).Add_Tj (*_eb .MakeStringFromBytes (_fgc )).Add_ET ().Add_Q ();_fda .Resources =_eg .NewPdfPageResources ();_fda .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_cad .ToPdfObject ());_fda .BBox =_eb .MakeArrayFromFloats ([]float64 {0,0,_cccd ,_eebf });_fda .SetContentStream (_bab .Bytes (),_gdcc ());};_eefg :=_eg .NewXObjectForm ();{_cbea :=_fe .NewContentCreator ();if _fdfg .BorderSize > 0{_edg (_cbea ,_fdfg ,_afd ,_bceg );};_eefg .BBox =_eb .MakeArrayFromFloats ([]float64 {0,0,_cccd ,_eebf });_eefg .SetContentStream (_cbea .Bytes (),_gdcc ());};_fddg :=_eb .MakeDict ();_fddg .Set ("\u004f\u0066\u0066",_eefg .ToPdfObject ());_fddg .Set ("\u0059\u0065\u0073",_fda .ToPdfObject ());_bed :=_eb .MakeDict ();_bed .Set ("\u004e",_fddg );return _bed ,nil ;};

// AppearanceStyle defines style parameters for appearance stream generation.
type AppearanceStyle struct{

// How much of Rect height to fill when autosizing text.
AutoFontSizeFraction float64 ;

// CheckmarkRune is a rune used for check mark in checkboxes (for ZapfDingbats font).
CheckmarkRune rune ;BorderSize float64 ;BorderColor _eg .PdfColor ;FillColor _eg .PdfColor ;

// Multiplier for lineheight for multi line text.
MultilineLineHeight float64 ;MultilineVAlignMiddle bool ;

// Visual guide checking alignment of field contents (debugging).
DrawAlignmentReticle bool ;

// Allow field MK appearance characteristics to override style settings.
AllowMK bool ;

// Fonts holds appearance styles for fonts.
Fonts *AppearanceFontStyle ;};func (_cbg *AppearanceStyle )applyAppearanceCharacteristics (_agga *_eb .PdfObjectDictionary ,_accd *_eb .PdfObjectDictionary ,_bgc *_eg .PdfFont )error {if !_cbg .AllowMK {return nil ;};if CA ,_fcf :=_eb .GetString (_agga .Get ("\u0043\u0041"));_fcf &&_bgc !=nil {_dgc :=CA .Bytes ();if len (_dgc )!=0{_gcge :=[]rune (_bgc .Encoder ().Decode (_dgc ));if len (_gcge )==1{_cbg .CheckmarkRune =_gcge [0];};};};if BC ,_gfga :=_eb .GetArray (_agga .Get ("\u0042\u0043"));_gfga {_ddaf ,_afe :=BC .ToFloat64Array ();if _afe !=nil {return _afe ;};switch len (_ddaf ){case 1:_cbg .BorderColor =_eg .NewPdfColorDeviceGray (_ddaf [0]);case 3:_cbg .BorderColor =_eg .NewPdfColorDeviceRGB (_ddaf [0],_ddaf [1],_ddaf [2]);case 4:_cbg .BorderColor =_eg .NewPdfColorDeviceCMYK (_ddaf [0],_ddaf [1],_ddaf [2],_ddaf [3]);default:_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0043\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_ddaf ));};if _accd !=nil {if _dea ,_fef :=_eb .GetNumberAsFloat (_accd .Get ("\u0057"));_fef ==nil {_cbg .BorderSize =_dea ;};};};if BG ,_dab :=_eb .GetArray (_agga .Get ("\u0042\u0047"));_dab {_bdg ,_cfbf :=BG .ToFloat64Array ();if _cfbf !=nil {return _cfbf ;};switch len (_bdg ){case 1:_cbg .FillColor =_eg .NewPdfColorDeviceGray (_bdg [0]);case 3:_cbg .FillColor =_eg .NewPdfColorDeviceRGB (_bdg [0],_bdg [1],_bdg [2]);case 4:_cbg .FillColor =_eg .NewPdfColorDeviceCMYK (_bdg [0],_bdg [1],_bdg [2],_bdg [3]);default:_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0047\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_bdg ));};};return nil ;};func _cca (_eeb *_eg .PdfAnnotationWidget ,_gac *_eg .PdfFieldText ,_bef *_eg .PdfPageResources ,_agf AppearanceStyle )(*_eb .PdfObjectDictionary ,error ){_fdd :=_eg .NewPdfPageResources ();_dcfa ,_febe :=_eb .GetArray (_eeb .Rect );if !_febe {return nil ,_ea .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_cfcb ,_gdd :=_eg .NewPdfRectangle (*_dcfa );if _gdd !=nil {return nil ,_gdd ;};_ggb ,_gddg :=_cfcb .Width (),_cfcb .Height ();_bdd ,_bcb :=_ggb ,_gddg ;_fega ,_cefe :=_eb .GetDict (_eeb .MK );if _cefe {_fdg ,_ :=_eb .GetDict (_eeb .BS );_gb :=_agf .applyAppearanceCharacteristics (_fega ,_fdg ,nil );if _gb !=nil {return nil ,_gb ;};};_gdg ,_cefe :=_eb .GetIntVal (_gac .MaxLen );if !_cefe {return nil ,_ea .New ("\u006d\u0061\u0078\u006c\u0065\u006e\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if _gdg <=0{return nil ,_ea .New ("\u006d\u0061\u0078\u004c\u0065\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_agcc :=_ggb /float64 (_gdg );_bbca ,_gdd :=_fe .NewContentStreamParser (_cbae (_gac .PdfField )).Parse ();if _gdd !=nil {return nil ,_gdd ;};_aed :=_fe .NewContentCreator ();if _agf .BorderSize > 0{_edg (_aed ,_agf ,_ggb ,_gddg );};if _agf .DrawAlignmentReticle {_aaa :=_agf ;_aaa .BorderSize =0.2;_cce (_aed ,_aaa ,_ggb ,_gddg );};_aed .Add_BMC ("\u0054\u0078");_aed .Add_q ();_ ,_gddg =_agf .applyRotation (_fega ,_ggb ,_gddg ,_aed );_aed .Add_BT ();_gfg ,_aee ,_gdd :=_agf .processDA (_gac .PdfField ,_bbca ,_bef ,_fdd ,_aed );if _gdd !=nil {return nil ,_gdd ;};_cbaa :=_gfg .Font ;_gga :=_eb .MakeName (_gfg .Name );_baa :=_gfg .Size ;_ca :=_baa ==0;if _ca &&_aee {_baa =_gddg *_agf .AutoFontSizeFraction ;};_dde :=_cbaa .Encoder ();if _dde ==nil {_c .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_dde =_f .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};var _bce string ;if _cdd ,_eag :=_eb .GetString (_gac .V );_eag {_bce =_cdd .Decoded ();};_aed .Add_Tf (*_gga ,_baa );var _eba float64 ;for _ ,_egd :=range _bce {_geaf ,_dff :=_cbaa .GetRuneMetrics (_egd );if !_dff {_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_egd );continue ;};_bgd :=_geaf .Wy ;if int (_bgd )<=0{_bgd =_geaf .Wx ;};if _bgd > _eba {_eba =_bgd ;};};if int (_eba )==0{_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0064\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006d\u0061x\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0073\u0069\u007a\u0065\u0020- \u0075\u0073\u0069\u006e\u0067\u0020\u0031\u0030\u0030\u0030");_eba =1000;};_eeg ,_gdd :=_cbaa .GetFontDescriptor ();if _gdd !=nil {_c .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};var _ddb float64 ;if _eeg !=nil {_ddb ,_gdd =_eeg .GetCapHeight ();if _gdd !=nil {_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_gdd );};};if int (_ddb )<=0{_c .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");_ddb =1000.0;};_bdcd :=_ddb /1000.0*_baa ;_deg :=0.0;_bcf :=1.0*_baa *(_eba /1000.0);{_ccf :=_bcf ;if _ca &&_deg +_ccf > _gddg {_baa =0.95*(_gddg -_deg );_bdcd =_ddb /1000.0*_baa ;};if _gddg > _bdcd {_deg =(_gddg -_bdcd )/2.0;};};_aed .Add_Td (0,_deg );if _ggg ,_ggf :=_eb .GetIntVal (_gac .Q );_ggf {switch _ggg {case 2:if len (_bce )< _gdg {_ebac :=float64 (_gdg -len (_bce ))*_agcc ;_aed .Add_Td (_ebac ,0);};};};for _ebd ,_cddg :=range _bce {_db :=2.0;_ddc :=string (_cddg );if _dde !=nil {_fceb ,_cdf :=_cbaa .GetRuneMetrics (_cddg );if !_cdf {_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_cddg );continue ;};_ddc =string (_dde .Encode (_ddc ));_gacg :=_baa *_fceb .Wx /1000.0;_deb :=(_agcc -_gacg )/2;_db =_deb ;};_aed .Add_Td (_db ,0);_aed .Add_Tj (*_eb .MakeString (_ddc ));if _ebd !=len (_bce )-1{_aed .Add_Td (_agcc -_db ,0);};};_aed .Add_ET ();_aed .Add_Q ();_aed .Add_EMC ();_dgf :=_eg .NewXObjectForm ();_dgf .Resources =_fdd ;_dgf .BBox =_eb .MakeArrayFromFloats ([]float64 {0,0,_bdd ,_bcb });_dgf .SetContentStream (_aed .Bytes (),_gdcc ());_daf :=_eb .MakeDict ();_daf .Set ("\u004e",_dgf .ToPdfObject ());return _daf ,nil ;};

// NewCheckboxField generates a new checkbox field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewCheckboxField (page *_eg .PdfPage ,name string ,rect []float64 ,opt CheckboxFieldOptions )(*_eg .PdfFieldButton ,error ){if page ==nil {return nil ,_ea .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_ea .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_ea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_eebg ,_gce :=_eg .NewStandard14Font (_eg .ZapfDingbatsName );if _gce !=nil {return nil ,_gce ;};_bbfe :=_eg .NewPdfField ();_ffe :=&_eg .PdfFieldButton {};_bbfe .SetContext (_ffe );_ffe .PdfField =_bbfe ;_ffe .T =_eb .MakeString (name );_ffe .SetType (_eg .ButtonTypeCheckbox );_cagc :="\u004f\u0066\u0066";if opt .Checked {_cagc ="\u0059\u0065\u0073";};_ffe .V =_eb .MakeName (_cagc );_fbgc :=_eg .NewPdfAnnotationWidget ();_fbgc .Rect =_eb .MakeArrayFromFloats (rect );_fbgc .P =page .ToPdfObject ();_fbgc .F =_eb .MakeInteger (4);_fbgc .Parent =_ffe .ToPdfObject ();_bga :=rect [2]-rect [0];_aac :=rect [3]-rect [1];var _fbd _a .Buffer ;_fbd .WriteString ("\u0071\u000a");_fbd .WriteString ("\u0030 \u0030\u0020\u0031\u0020\u0072\u0067\n");_fbd .WriteString ("\u0042\u0054\u000a");_fbd .WriteString ("\u002f\u005a\u0061D\u0062\u0020\u0031\u0032\u0020\u0054\u0066\u000a");_fbd .WriteString ("\u0045\u0054\u000a");_fbd .WriteString ("\u0051\u000a");_fabg :=_fe .NewContentCreator ();_fabg .Add_q ();_fabg .Add_rg (0,0,1);_fabg .Add_BT ();_fabg .Add_Tf (*_eb .MakeName ("\u005a\u0061\u0044\u0062"),12);_fabg .Add_Td (0,0);_fabg .Add_ET ();_fabg .Add_Q ();_cafd :=_eg .NewXObjectForm ();_cafd .SetContentStream (_fabg .Bytes (),_eb .NewRawEncoder ());_cafd .BBox =_eb .MakeArrayFromFloats ([]float64 {0,0,_bga ,_aac });_cafd .Resources =_eg .NewPdfPageResources ();_cafd .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_eebg .ToPdfObject ());_fabg =_fe .NewContentCreator ();_fabg .Add_q ();_fabg .Add_re (0,0,_bga ,_aac );_fabg .Add_W ().Add_n ();_fabg .Add_rg (0,0,1);_fabg .Translate (0,3.0);_fabg .Add_BT ();_fabg .Add_Tf (*_eb .MakeName ("\u005a\u0061\u0044\u0062"),12);_fabg .Add_Td (0,0);_fabg .Add_Tj (*_eb .MakeString ("\u0034"));_fabg .Add_ET ();_fabg .Add_Q ();_gdeg :=_eg .NewXObjectForm ();_gdeg .SetContentStream (_fabg .Bytes (),_eb .NewRawEncoder ());_gdeg .BBox =_eb .MakeArrayFromFloats ([]float64 {0,0,_bga ,_aac });_gdeg .Resources =_eg .NewPdfPageResources ();_gdeg .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_eebg .ToPdfObject ());_facg :=_eb .MakeDict ();_facg .Set ("\u004f\u0066\u0066",_cafd .ToPdfObject ());_facg .Set ("\u0059\u0065\u0073",_gdeg .ToPdfObject ());_bacd :=_eb .MakeDict ();_bacd .Set ("\u004e",_facg );_fbgc .AP =_bacd ;_fbgc .AS =_eb .MakeName (_cagc );_ffe .Annotations =append (_ffe .Annotations ,_fbgc );return _ffe ,nil ;};type quadding int ;func _cbgd (_bbb []*SignatureLine ,_egde *SignatureFieldOpts )(*_eb .PdfObjectDictionary ,error ){if _egde ==nil {_egde =NewSignatureFieldOpts ();};var _bdbc error ;var _gag *_eb .PdfObjectName ;_addd :=_egde .Font ;if _addd !=nil {_cdg ,_ :=_addd .GetFontDescriptor ();if _cdg !=nil {if _feee ,_fab :=_cdg .FontName .(*_eb .PdfObjectName );_fab {_gag =_feee ;};};if _gag ==nil {_gag =_eb .MakeName ("\u0046\u006f\u006et\u0031");};}else {if _addd ,_bdbc =_eg .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");_bdbc !=nil {return nil ,_bdbc ;};_gag =_eb .MakeName ("\u0048\u0065\u006c\u0076");};_ddeg :=_egde .FontSize ;if _ddeg <=0{_ddeg =10;};if _egde .LineHeight <=0{_egde .LineHeight =1;};_eeaa :=_egde .LineHeight *_ddeg ;_fgd ,_bddc :=_addd .GetRuneMetrics (' ');if !_bddc {return nil ,_ea .New ("\u0074\u0068e \u0066\u006f\u006et\u0020\u0064\u006f\u0065s n\u006ft \u0068\u0061\u0076\u0065\u0020\u0061\u0020sp\u0061\u0063\u0065\u0020\u0067\u006c\u0079p\u0068");};_cag :=_fgd .Wx ;var _fbba float64 ;var _dfcf []string ;for _ ,_acb :=range _bbb {if _acb .Text ==""{continue ;};_bafd :=_acb .Text ;if _acb .Desc !=""{_bafd =_acb .Desc +"\u003a\u0020"+_bafd ;};_dfcf =append (_dfcf ,_bafd );var _fdge float64 ;for _ ,_ccg :=range _bafd {_ggce ,_ebbg :=_addd .GetRuneMetrics (_ccg );if !_ebbg {continue ;};_fdge +=_ggce .Wx ;};if _fdge > _fbba {_fbba =_fdge ;};};_fbba =_fbba *_ddeg /1000.0;_addbb :=float64 (len (_dfcf ))*_eeaa ;_dbbb :=_egde .Image !=nil ;_gde :=_egde .Rect ;if _gde ==nil {_gde =[]float64 {0,0,_fbba ,_addbb };if _dbbb {_gde [2]=_fbba *2;_gde [3]=_addbb *2;};_egde .Rect =_gde ;};_egdd :=_gde [2]-_gde [0];_fbbe :=_gde [3]-_gde [1];_gddf ,_aaab :=_gde ,_gde ;var _gbf ,_cgg float64 ;if _dbbb &&len (_dfcf )> 0{if _egde .ImagePosition <=SignatureImageRight {_faca :=[]float64 {_gde [0],_gde [1],_gde [0]+(_egdd /2),_gde [3]};_edgd :=[]float64 {_gde [0]+(_egdd /2),_gde [1],_gde [2],_gde [3]};if _egde .ImagePosition ==SignatureImageLeft {_gddf ,_aaab =_faca ,_edgd ;}else {_gddf ,_aaab =_edgd ,_faca ;};}else {_eeag :=[]float64 {_gde [0],_gde [1],_gde [2],_gde [1]+(_fbbe /2)};_cdgf :=[]float64 {_gde [0],_gde [1]+(_fbbe /2),_gde [2],_gde [3]};if _egde .ImagePosition ==SignatureImageTop {_gddf ,_aaab =_cdgf ,_eeag ;}else {_gddf ,_aaab =_eeag ,_cdgf ;};};};_gbf =_aaab [2]-_aaab [0];_cgg =_aaab [3]-_aaab [1];var _dfde float64 ;if _egde .AutoSize {if _fbba > _gbf ||_addbb > _cgg {_ccaa :=_g .Min (_gbf /_fbba ,_cgg /_addbb );_ddeg *=_ccaa ;};_eeaa =_egde .LineHeight *_ddeg ;_dfde +=(_cgg -float64 (len (_dfcf ))*_eeaa )/2;};_bcff :=_fe .NewContentCreator ();_gbfc :=_eg .NewPdfPageResources ();_gbfc .SetFontByName (*_gag ,_addd .ToPdfObject ());if _egde .BorderSize <=0{_egde .BorderSize =0;_egde .BorderColor =_eg .NewPdfColorDeviceGray (1);};if _egde .BorderColor ==nil {_egde .BorderColor =_eg .NewPdfColorDeviceGray (1);};if _egde .FillColor ==nil {_egde .FillColor =_eg .NewPdfColorDeviceGray (1);};_bcff .Add_q ().SetNonStrokingColor (_egde .FillColor ).SetStrokingColor (_egde .BorderColor ).Add_w (_egde .BorderSize ).Add_re (_gde [0],_gde [1],_egdd ,_fbbe ).Add_B ().Add_Q ();if _egde .WatermarkImage !=nil {_adb :=[]float64 {_gde [0],_gde [1],_gde [2],_gde [3]};_bgb ,_bbf ,_dbc :=_gdb (_egde .WatermarkImage ,"\u0049\u006d\u0061\u0067\u0065\u0057\u0061\u0074\u0065r\u006d\u0061\u0072\u006b",_egde ,_adb ,_bcff );if _dbc !=nil {return nil ,_dbc ;};_gbfc .SetXObjectImageByName (*_bgb ,_bbf );};_bcff .Add_q ();_bcff .Translate (_aaab [0],_aaab [3]-_eeaa -_dfde );_bcff .Add_BT ();_cdc :=_addd .Encoder ();for _ ,_gcd :=range _dfcf {var _ade []byte ;for _ ,_agfd :=range _gcd {if _cf .IsSpace (_agfd ){if len (_ade )> 0{_bcff .SetNonStrokingColor (_egde .TextColor ).Add_Tf (*_gag ,_ddeg ).Add_TL (_eeaa ).Add_TJ ([]_eb .PdfObject {_eb .MakeStringFromBytes (_ade )}...);_ade =nil ;};_bcff .Add_Tf (*_gag ,_ddeg ).Add_TL (_eeaa ).Add_TJ ([]_eb .PdfObject {_eb .MakeFloat (-_cag )}...);}else {_ade =append (_ade ,_cdc .Encode (string (_agfd ))...);};};if len (_ade )> 0{_bcff .SetNonStrokingColor (_egde .TextColor ).Add_Tf (*_gag ,_ddeg ).Add_TL (_eeaa ).Add_TJ ([]_eb .PdfObject {_eb .MakeStringFromBytes (_ade )}...);};_bcff .Add_Td (0,-_eeaa );};_bcff .Add_ET ();_bcff .Add_Q ();if _dbbb {_geed ,_egaa ,_ace :=_gdb (_egde .Image ,"\u0049\u006d\u0061\u0067\u0065\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065",_egde ,_gddf ,_bcff );if _ace !=nil {return nil ,_ace ;};_gbfc .SetXObjectImageByName (*_geed ,_egaa );};_bcbc :=_eg .NewXObjectForm ();_bcbc .Resources =_gbfc ;_bcbc .BBox =_eb .MakeArrayFromFloats (_gde );_bcbc .SetContentStream (_bcff .Bytes (),_gdcc ());_bgcc :=_eb .MakeDict ();_bgcc .Set ("\u004e",_bcbc .ToPdfObject ());return _bgcc ,nil ;};

// NewSignatureFieldOpts returns a new initialized instance of options
// used to generate a signature appearance.
func NewSignatureFieldOpts ()*SignatureFieldOpts {return &SignatureFieldOpts {Font :_eg .DefaultFont (),FontSize :10,LineHeight :1,AutoSize :true ,TextColor :_eg .NewPdfColorDeviceGray (0),BorderColor :_eg .NewPdfColorDeviceGray (0),FillColor :_eg .NewPdfColorDeviceGray (1),Encoder :_eb .NewFlateEncoder (),ImagePosition :SignatureImageLeft };};

// CheckboxFieldOptions defines optional parameters for a checkbox field a form.
type CheckboxFieldOptions struct{Checked bool ;};

// CreateLineAnnotation creates a line annotation object that can be added to page PDF annotations.
func CreateLineAnnotation (lineDef LineAnnotationDef )(*_eg .PdfAnnotation ,error ){_bgfb :=_eg .NewPdfAnnotationLine ();_bgfb .L =_eb .MakeArrayFromFloats ([]float64 {lineDef .X1 ,lineDef .Y1 ,lineDef .X2 ,lineDef .Y2 });_agac :=_eb .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle1 ==_ebc .LineEndingStyleArrow {_agac =_eb .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_bffa :=_eb .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle2 ==_ebc .LineEndingStyleArrow {_bffa =_eb .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_bgfb .LE =_eb .MakeArray (_agac ,_bffa );if lineDef .Opacity < 1.0{_bgfb .CA =_eb .MakeFloat (lineDef .Opacity );};_acg ,_fabc ,_ecb :=lineDef .LineColor .R (),lineDef .LineColor .G (),lineDef .LineColor .B ();_bgfb .IC =_eb .MakeArrayFromFloats ([]float64 {_acg ,_fabc ,_ecb });_bgfb .C =_eb .MakeArrayFromFloats ([]float64 {_acg ,_fabc ,_ecb });_bba :=_eg .NewBorderStyle ();_bba .SetBorderWidth (lineDef .LineWidth );_bgfb .BS =_bba .ToPdfObject ();_eebgd ,_ddbe ,_dcff :=_ccea (lineDef );if _dcff !=nil {return nil ,_dcff ;};_bgfb .AP =_eebgd ;_bgfb .Rect =_eb .MakeArrayFromFloats ([]float64 {_ddbe .Llx ,_ddbe .Lly ,_ddbe .Urx ,_ddbe .Ury });return _bgfb .PdfAnnotation ,nil ;};const (_ga quadding =0;_cff quadding =1;_af quadding =2;);

// LineAnnotationDef defines a line between point 1 (X1,Y1) and point 2 (X2,Y2).  The line ending styles can be none
// (regular line), or arrows at either end.  The line also has a specified width, color and opacity.
type LineAnnotationDef struct{X1 float64 ;Y1 float64 ;X2 float64 ;Y2 float64 ;LineColor *_eg .PdfColorDeviceRGB ;Opacity float64 ;LineWidth float64 ;LineEndingStyle1 _ebc .LineEndingStyle ;LineEndingStyle2 _ebc .LineEndingStyle ;};

// RectangleAnnotationDef is a rectangle defined with a specified Width and Height and a lower left corner at (X,Y).
// The rectangle can optionally have a border and a filling color.
// The Width/Height includes the border (if any specified).
type RectangleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_eg .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_eg .PdfColorDeviceRGB ;Opacity float64 ;};func _gdcc ()_eb .StreamEncoder {return _eb .NewFlateEncoder ()};

// ComboboxFieldOptions defines optional parameters for a combobox form field.
type ComboboxFieldOptions struct{

// Choices is the list of string values that can be selected.
Choices []string ;};

// TextFieldOptions defines optional parameter for a text field in a form.
type TextFieldOptions struct{MaxLen int ;Value string ;};

// NewSignatureField returns a new signature field with a visible appearance
// containing the specified signature lines and styled according to the
// specified options.
func NewSignatureField (signature *_eg .PdfSignature ,lines []*SignatureLine ,opts *SignatureFieldOpts )(*_eg .PdfFieldSignature ,error ){if signature ==nil {return nil ,_ea .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_cadd ,_edcbg :=_cbgd (lines ,opts );if _edcbg !=nil {return nil ,_edcbg ;};_bege :=_eg .NewPdfFieldSignature (signature );_bege .Rect =_eb .MakeArrayFromFloats (opts .Rect );_bege .AP =_cadd ;return _bege ,nil ;};func _gdb (_gbcb _fb .Image ,_afg string ,_fdged *SignatureFieldOpts ,_dbga []float64 ,_ceeb *_fe .ContentCreator )(*_eb .PdfObjectName ,*_eg .XObjectImage ,error ){_fgdd ,_ggag :=_eg .DefaultImageHandler {}.NewImageFromGoImage (_gbcb );if _ggag !=nil {return nil ,nil ,_ggag ;};_fcfd ,_ggag :=_eg .NewXObjectImageFromImage (_fgdd ,nil ,_fdged .Encoder );if _ggag !=nil {return nil ,nil ,_ggag ;};_gcgb ,_afeb :=float64 (*_fcfd .Width ),float64 (*_fcfd .Height );_cgd :=_dbga [2]-_dbga [0];_daec :=_dbga [3]-_dbga [1];if _fdged .AutoSize {_efd :=_g .Min (_cgd /_gcgb ,_daec /_afeb );_gcgb *=_efd ;_afeb *=_efd ;_dbga [0]=_dbga [0]+(_cgd /2)-(_gcgb /2);_dbga [1]=_dbga [1]+(_daec /2)-(_afeb /2);};var _fdc *_eb .PdfObjectName ;if _dbd ,_bada :=_eb .GetName (_fcfd .Name );_bada {_fdc =_dbd ;}else {_fdc =_eb .MakeName (_afg );};if _ceeb !=nil {_ceeb .Add_q ().Translate (_dbga [0],_dbga [1]).Scale (_gcgb ,_afeb ).Add_Do (*_fdc ).Add_Q ();}else {return nil ,nil ,_ea .New ("\u0043\u006f\u006e\u0074en\u0074\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020\u0069\u0073\u0020\u006e\u0075l\u006c");};return _fdc ,_fcfd ,nil ;};

// SignatureFieldOpts represents a set of options used to configure
// an appearance widget dictionary.
type SignatureFieldOpts struct{

// Rect represents the area the signature annotation is displayed on.
Rect []float64 ;

// AutoSize specifies if the content of the appearance should be
// scaled to fit in the annotation rectangle.
AutoSize bool ;

// Font specifies the font of the text content.
Font *_eg .PdfFont ;

// FontSize specifies the size of the text content.
FontSize float64 ;

// LineHeight specifies the height of a line of text in the appearance annotation.
LineHeight float64 ;

// TextColor represents the color of the text content displayed.
TextColor _eg .PdfColor ;

// FillColor represents the background color of the appearance annotation area.
FillColor _eg .PdfColor ;

// BorderSize represents border size of the appearance annotation area.
BorderSize float64 ;

// BorderColor represents the border color of the appearance annotation area.
BorderColor _eg .PdfColor ;

// WatermarkImage specifies the image used as a watermark that will be rendered
// behind the signature.
WatermarkImage _fb .Image ;

// Image represents the image used for the signature appearance.
Image _fb .Image ;

// Encoder specifies the image encoder used for image signature. Defaults to flate encoder.
Encoder _eb .StreamEncoder ;

// ImagePosition specifies the image location relative to the text signature.
ImagePosition SignatureImagePosition ;};

// AppearanceFont represents a font used for generating the appearance of a
// field in the filling/flattening process.
type AppearanceFont struct{

// Name represents the name of the font which will be added to the
// AcroForm resources (DR).
Name string ;

// Font represents the actual font used for the field appearance.
Font *_eg .PdfFont ;

// Size represents the size of the font used for the field appearance.
// If size is 0, a default font size will be used.
// The default font size is calculated using the available annotation
// height and the AutoFontSizeFraction of the AppearanceStyle.
Size float64 ;};func _ccea (_fbbg LineAnnotationDef )(*_eb .PdfObjectDictionary ,*_eg .PdfRectangle ,error ){_eae :=_eg .NewXObjectForm ();_eae .Resources =_eg .NewPdfPageResources ();_faeb :="";if _fbbg .Opacity < 1.0{_eadb :=_eb .MakeDict ();_eadb .Set ("\u0063\u0061",_eb .MakeFloat (_fbbg .Opacity ));_fad :=_eae .Resources .AddExtGState ("\u0067\u0073\u0031",_eadb );if _fad !=nil {_c .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_fad ;};_faeb ="\u0067\u0073\u0031";};_ceg ,_bdeb ,_dbce ,_fdae :=_bbgb (_fbbg ,_faeb );if _fdae !=nil {return nil ,nil ,_fdae ;};_fdae =_eae .SetContentStream (_ceg ,nil );if _fdae !=nil {return nil ,nil ,_fdae ;};_eae .BBox =_bdeb .ToPdfObject ();_cbaf :=_eb .MakeDict ();_cbaf .Set ("\u004e",_eae .ToPdfObject ());return _cbaf ,_dbce ,nil ;};

// NewComboboxField generates a new combobox form field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewComboboxField (page *_eg .PdfPage ,name string ,rect []float64 ,opt ComboboxFieldOptions )(*_eg .PdfFieldChoice ,error ){if page ==nil {return nil ,_ea .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_ea .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_ea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_aeeb :=_eg .NewPdfField ();_bacc :=&_eg .PdfFieldChoice {};_aeeb .SetContext (_bacc );_bacc .PdfField =_aeeb ;_bacc .T =_eb .MakeString (name );_bacc .Opt =_eb .MakeArray ();for _ ,_ebg :=range opt .Choices {_bacc .Opt .Append (_eb .MakeString (_ebg ));};_bacc .SetFlag (_eg .FieldFlagCombo );_dgba :=_eg .NewPdfAnnotationWidget ();_dgba .Rect =_eb .MakeArrayFromFloats (rect );_dgba .P =page .ToPdfObject ();_dgba .F =_eb .MakeInteger (4);_dgba .Parent =_bacc .ToPdfObject ();_bacc .Annotations =append (_bacc .Annotations ,_dgba );return _bacc ,nil ;};func _fbec (_ged *_eg .PdfAnnotationWidget ,_gdc *_eg .PdfFieldText ,_ege *_eg .PdfPageResources ,_bbc AppearanceStyle )(*_eb .PdfObjectDictionary ,error ){_dga :=_eg .NewPdfPageResources ();_cfc ,_bf :=_eb .GetArray (_ged .Rect );if !_bf {return nil ,_ea .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_df ,_gf :=_eg .NewPdfRectangle (*_cfc );if _gf !=nil {return nil ,_gf ;};_aae ,_fce :=_df .Width (),_df .Height ();_fed ,_gaf :=_aae ,_fce ;_ag ,_aga :=_eb .GetDict (_ged .MK );if _aga {_eab ,_ :=_eb .GetDict (_ged .BS );_gc :=_bbc .applyAppearanceCharacteristics (_ag ,_eab ,nil );if _gc !=nil {return nil ,_gc ;};};_dc ,_gf :=_fe .NewContentStreamParser (_cbae (_gdc .PdfField )).Parse ();if _gf !=nil {return nil ,_gf ;};_fd :=_fe .NewContentCreator ();if _bbc .BorderSize > 0{_edg (_fd ,_bbc ,_aae ,_fce );};if _bbc .DrawAlignmentReticle {_ddg :=_bbc ;_ddg .BorderSize =0.2;_cce (_fd ,_ddg ,_aae ,_fce );};_fd .Add_BMC ("\u0054\u0078");_fd .Add_q ();_aae ,_fce =_bbc .applyRotation (_ag ,_aae ,_fce ,_fd );_fd .Add_BT ();_bee ,_ff ,_gf :=_bbc .processDA (_gdc .PdfField ,_dc ,_ege ,_dga ,_fd );if _gf !=nil {return nil ,_gf ;};_bae :=_bee .Font ;_eddb :=_bee .Size ;_dag :=_eb .MakeName (_bee .Name );_ebf :=_eddb ==0;if _ebf &&_ff {_eddb =_fce *_bbc .AutoFontSizeFraction ;};_egba :=_bae .Encoder ();if _egba ==nil {_c .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_egba =_f .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};_egf ,_gf :=_bae .GetFontDescriptor ();if _gf !=nil {_c .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};var _bbe string ;if _dfd ,_cbf :=_eb .GetString (_gdc .V );_cbf {_bbe =_dfd .Decoded ();};if len (_bbe )==0{return nil ,nil ;};_fg :=[]string {_bbe };_gcg :=false ;if _gdc .Flags ().Has (_eg .FieldFlagMultiline ){_gcg =true ;_bbe =_b .Replace (_bbe ,"\u000d\u000a","\u000a",-1);_bbe =_b .Replace (_bbe ,"\u000d","\u000a",-1);_fg =_b .Split (_bbe ,"\u000a");};_dac :=0.0;_fdf :=0;if _egba !=nil {_aec :=len (_fg );_feb :=0;for _feb < _aec {var _abg float64 ;_dfa :=-1;_dgb :=0.0;for _egc ,_gca :=range _fg [_feb ]{if _gca ==' '{_dfa =_egc ;_abg =_dgb ;};_dfb ,_de :=_bae .GetRuneMetrics (_gca );if !_de {_c .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_gca );continue ;};_dgb +=_dfb .Wx ;if _gcg &&!_ebf &&_eddb *_dgb /1000.0> _aae &&_dfa > 0{_ffc :=_fg [_feb ][_dfa +1:];if _feb < len (_fg )-1{_fg =append (_fg [:_feb +1],_fg [_feb :]...);_fg [_feb +1]=_ffc ;}else {_fg =append (_fg ,_ffc );};_aec ++;_fg [_feb ]=_fg [_feb ][0:_dfa ];_dgb =_abg ;break ;};};if _dgb > _dac {_dac =_dgb ;};_fg [_feb ]=string (_egba .Encode (_fg [_feb ]));if len (_fg [_feb ])> 0{_fdf ++;};_feb ++;};};_dcf :=2.0;if _eddb ==0||_ebf &&_dac > 0&&_dcf +_dac *_eddb /1000.0> _aae {_eddb =0.95*1000.0*(_aae -_dcf )/_dac ;};_agc :=_ga ;{if _aeae ,_feg :=_eb .GetIntVal (_gdc .Q );_feg {switch _aeae {case 0:_agc =_ga ;case 1:_agc =_cff ;case 2:_agc =_af ;default:_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0071\u0075\u0061\u0064\u0064\u0069\u006e\u0067\u003a\u0020%\u0064\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u006c\u0065ft\u0020\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074",_aeae );};};};_aab :=_bbc .MultilineLineHeight ;_ega :=_eddb ;if _gcg &&_fdf > 1{_ega =_aab *_eddb ;};var _bbef float64 ;if _egf !=nil {_bbef ,_gf =_egf .GetCapHeight ();if _gf !=nil {_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_gf );};};if int (_bbef )<=0{_c .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");_bbef =1000;};_fcb :=_bbef /1000.0*_eddb ;_bec :=0.0;{_cbe :=float64 (_fdf )*_ega ;if _ebf &&_bec +_cbe > _fce {_eddb =0.95*(_fce -_bec )/float64 (_fdf );_ega =_eddb ;if _gcg &&_fdf > 1{_ega =_aab *_eddb ;};_fcb =_bbef /1000.0*_eddb ;_cbe =float64 (_fdf )*_ega ;};if _fce > _cbe {if _gcg {if _bbc .MultilineVAlignMiddle {_abb :=(_fce -_cbe )/2.0;_fge :=_abb +_cbe -_ega ;_bec =_fge ;}else {_bec =_fce -_ega ;_bec -=_eddb *0.5;};}else {_bec =(_fce -_fcb )/2.0;};};};_fd .Add_Tf (*_dag ,_eddb );_fd .Add_Td (_dcf ,_bec );_bdf :=_dcf ;_dfc :=_dcf ;for _bff ,_bc :=range _fg {_ccb :=0.0;for _ ,_gae :=range _bc {_fcc ,_fgf :=_bae .GetRuneMetrics (_gae );if !_fgf {continue ;};_ccb +=_fcc .Wx ;};_geeb :=_ccb /1000.0*_eddb ;_ee :=_aae -_geeb ;var _eef float64 ;switch _agc {case _ga :_eef =_bdf ;case _cff :_eef =_ee /2;case _af :_eef =_ee ;};_dcf =_eef -_dfc ;if _dcf > 0.0{_fd .Add_Td (_dcf ,0);};_dfc =_eef ;_fd .Add_Tj (*_eb .MakeString (_bc ));if _bff < len (_fg )-1{_fd .Add_Td (0,-_ega *_aab );};};_fd .Add_ET ();_fd .Add_Q ();_fd .Add_EMC ();_bfe :=_eg .NewXObjectForm ();_bfe .Resources =_dga ;_bfe .BBox =_eb .MakeArrayFromFloats ([]float64 {0,0,_fed ,_gaf });_bfe .SetContentStream (_fd .Bytes (),_gdcc ());_agd :=_eb .MakeDict ();_agd .Set ("\u004e",_bfe .ToPdfObject ());return _agd ,nil ;};func _dgaf (_gfgag RectangleAnnotationDef )(*_eb .PdfObjectDictionary ,*_eg .PdfRectangle ,error ){_fgg :=_eg .NewXObjectForm ();_fgg .Resources =_eg .NewPdfPageResources ();_bddf :="";if _gfgag .Opacity < 1.0{_bgac :=_eb .MakeDict ();_bgac .Set ("\u0063\u0061",_eb .MakeFloat (_gfgag .Opacity ));_bgac .Set ("\u0043\u0041",_eb .MakeFloat (_gfgag .Opacity ));_edcc :=_fgg .Resources .AddExtGState ("\u0067\u0073\u0031",_bgac );if _edcc !=nil {_c .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_edcc ;};_bddf ="\u0067\u0073\u0031";};_afdc ,_afa ,_gece ,_gbcf :=_cccb (_gfgag ,_bddf );if _gbcf !=nil {return nil ,nil ,_gbcf ;};_gbcf =_fgg .SetContentStream (_afdc ,nil );if _gbcf !=nil {return nil ,nil ,_gbcf ;};_fgg .BBox =_afa .ToPdfObject ();_ecfa :=_eb .MakeDict ();_ecfa .Set ("\u004e",_fgg .ToPdfObject ());return _ecfa ,_gece ,nil ;};func _bd (_cc CircleAnnotationDef )(*_eb .PdfObjectDictionary ,*_eg .PdfRectangle ,error ){_be :=_eg .NewXObjectForm ();_be .Resources =_eg .NewPdfPageResources ();_cfe :="";if _cc .Opacity < 1.0{_fea :=_eb .MakeDict ();_fea .Set ("\u0063\u0061",_eb .MakeFloat (_cc .Opacity ));_fea .Set ("\u0043\u0041",_eb .MakeFloat (_cc .Opacity ));_d :=_be .Resources .AddExtGState ("\u0067\u0073\u0031",_fea );if _d !=nil {_c .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_d ;};_cfe ="\u0067\u0073\u0031";};_ad ,_cb ,_ae ,_fc :=_da (_cc ,_cfe );if _fc !=nil {return nil ,nil ,_fc ;};_fc =_be .SetContentStream (_ad ,nil );if _fc !=nil {return nil ,nil ,_fc ;};_be .BBox =_cb .ToPdfObject ();_gea :=_eb .MakeDict ();_gea .Set ("\u004e",_be .ToPdfObject ());return _gea ,_ae ,nil ;};func (_bgdb *AppearanceStyle )processDA (_bdda *_eg .PdfField ,_aad *_fe .ContentStreamOperations ,_aegf ,_ecad *_eg .PdfPageResources ,_bbec *_fe .ContentCreator )(*AppearanceFont ,bool ,error ){var _aef *AppearanceFont ;var _cgc bool ;if _bgdb .Fonts !=nil {if _bgdb .Fonts .Fallback !=nil {_aef =_bgdb .Fonts .Fallback ;};if _dgfg :=_bgdb .Fonts .FieldFallbacks ;_dgfg !=nil {if _cee ,_aeb :=_dgfg [_bdda .PartialName ()];_aeb {_aef =_cee ;}else if _abc ,_bgg :=_bdda .FullName ();_bgg ==nil {if _abec ,_eed :=_dgfg [_abc ];_eed {_aef =_abec ;};};};_cgc =_bgdb .Fonts .ForceReplace ;};var _bca string ;var _dffc float64 ;var _fbg bool ;if _aad !=nil {for _ ,_ebfb :=range *_aad {if _ebfb .Operand =="\u0054\u0066"&&len (_ebfb .Params )==2{if _babg ,_fcab :=_eb .GetNameVal (_ebfb .Params [0]);_fcab {_bca =_babg ;};if _bde ,_bdgc :=_eb .GetNumberAsFloat (_ebfb .Params [1]);_bdgc ==nil {_dffc =_bde ;};_fbg =true ;continue ;};_bbec .AddOperand (*_ebfb );};};var _cfcg *AppearanceFont ;var _gbe _eb .PdfObject ;if _cgc &&_aef !=nil {_cfcg =_aef ;}else {if _aegf !=nil &&_bca !=""{if _cgf ,_fee :=_aegf .GetFontByName (*_eb .MakeName (_bca ));_fee {if _addb ,_baf :=_eg .NewPdfFontFromPdfObject (_cgf );_baf ==nil {_gbe =_cgf ;_cfcg =&AppearanceFont {Name :_bca ,Font :_addb ,Size :_dffc };}else {_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u006c\u006fa\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0025\u0076",_baf );};};};if _cfcg ==nil &&_aef !=nil {_cfcg =_aef ;};if _cfcg ==nil {_bdgb ,_gcb :=_eg .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");if _gcb !=nil {return nil ,false ,_gcb ;};_cfcg =&AppearanceFont {Name :"\u0048\u0065\u006c\u0076",Font :_bdgb ,Size :_dffc };};};_gefe :=*_eb .MakeName (_cfcg .Name );if _gbe ==nil {_gbe =_cfcg .Font .ToPdfObject ();};if _aegf !=nil &&!_aegf .HasFontByName (_gefe ){_aegf .SetFontByName (_gefe ,_gbe );};if _ecad !=nil &&!_ecad .HasFontByName (_gefe ){_ecad .SetFontByName (_gefe ,_gbe );};return _cfcg ,_fbg ,nil ;};

// CreateRectangleAnnotation creates a rectangle annotation object that can be added to page PDF annotations.
func CreateRectangleAnnotation (rectDef RectangleAnnotationDef )(*_eg .PdfAnnotation ,error ){_beb :=_eg .NewPdfAnnotationSquare ();if rectDef .BorderEnabled {_ece ,_fdb ,_gefb :=rectDef .BorderColor .R (),rectDef .BorderColor .G (),rectDef .BorderColor .B ();_beb .C =_eb .MakeArrayFromFloats ([]float64 {_ece ,_fdb ,_gefb });_bgdbb :=_eg .NewBorderStyle ();_bgdbb .SetBorderWidth (rectDef .BorderWidth );_beb .BS =_bgdbb .ToPdfObject ();};if rectDef .FillEnabled {_bgbd ,_cabef ,_cec :=rectDef .FillColor .R (),rectDef .FillColor .G (),rectDef .FillColor .B ();_beb .IC =_eb .MakeArrayFromFloats ([]float64 {_bgbd ,_cabef ,_cec });}else {_beb .IC =_eb .MakeArrayFromIntegers ([]int {});};if rectDef .Opacity < 1.0{_beb .CA =_eb .MakeFloat (rectDef .Opacity );};_bdgf ,_fdaec ,_ecf :=_dgaf (rectDef );if _ecf !=nil {return nil ,_ecf ;};_beb .AP =_bdgf ;_beb .Rect =_eb .MakeArrayFromFloats ([]float64 {_fdaec .Llx ,_fdaec .Lly ,_fdaec .Urx ,_fdaec .Ury });return _beb .PdfAnnotation ,nil ;};

// CircleAnnotationDef defines a circle annotation or ellipse at position (X, Y) and Width and Height.
// The annotation has various style parameters including Fill and Border options and Opacity.
type CircleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_eg .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_eg .PdfColorDeviceRGB ;Opacity float64 ;};func _edg (_dee *_fe .ContentCreator ,_bcef AppearanceStyle ,_agdg ,_dagb float64 ){_dee .Add_q ().Add_re (0,0,_agdg ,_dagb ).Add_w (_bcef .BorderSize ).SetStrokingColor (_bcef .BorderColor ).SetNonStrokingColor (_bcef .FillColor ).Add_B ().Add_Q ();};func _cbae (_ebab *_eg .PdfField )string {if _ebab ==nil {return "";};_gbc ,_adafd :=_ebab .GetContext ().(*_eg .PdfFieldText );if !_adafd {return _cbae (_ebab .Parent );};if _gbc .DA !=nil {return _gbc .DA .Str ();};return _cbae (_gbc .Parent );};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_caf FieldAppearance )WrapContentStream (page *_eg .PdfPage )error {_agaf ,_fcfe :=page .GetAllContentStreams ();if _fcfe !=nil {return _fcfe ;};_gbeb :=_fe .NewContentStreamParser (_agaf );_baea ,_fcfe :=_gbeb .Parse ();if _fcfe !=nil {return _fcfe ;};_baea .WrapIfNeeded ();_begd :=[]string {_baea .String ()};return page .SetContentStreams (_begd ,_gdcc ());};func _bbgb (_gbfg LineAnnotationDef ,_acba string )([]byte ,*_eg .PdfRectangle ,*_eg .PdfRectangle ,error ){_gdea :=_ebc .Line {X1 :0,Y1 :0,X2 :_gbfg .X2 -_gbfg .X1 ,Y2 :_gbfg .Y2 -_gbfg .Y1 ,LineColor :_gbfg .LineColor ,Opacity :_gbfg .Opacity ,LineWidth :_gbfg .LineWidth ,LineEndingStyle1 :_gbfg .LineEndingStyle1 ,LineEndingStyle2 :_gbfg .LineEndingStyle2 };_dcgf ,_dbad ,_dgg :=_gdea .Draw (_acba );if _dgg !=nil {return nil ,nil ,nil ,_dgg ;};_dafg :=&_eg .PdfRectangle {};_dafg .Llx =_gbfg .X1 +_dbad .Llx ;_dafg .Lly =_gbfg .Y1 +_dbad .Lly ;_dafg .Urx =_gbfg .X1 +_dbad .Urx ;_dafg .Ury =_gbfg .Y1 +_dbad .Ury ;return _dcgf ,_dbad ,_dafg ,nil ;};func _cccb (_edca RectangleAnnotationDef ,_bfb string )([]byte ,*_eg .PdfRectangle ,*_eg .PdfRectangle ,error ){_egef :=_ebc .Rectangle {X :0,Y :0,Width :_edca .Width ,Height :_edca .Height ,FillEnabled :_edca .FillEnabled ,FillColor :_edca .FillColor ,BorderEnabled :_edca .BorderEnabled ,BorderWidth :2*_edca .BorderWidth ,BorderColor :_edca .BorderColor ,Opacity :_edca .Opacity };_gecg ,_fga ,_dgca :=_egef .Draw (_bfb );if _dgca !=nil {return nil ,nil ,nil ,_dgca ;};_affb :=&_eg .PdfRectangle {};_affb .Llx =_edca .X +_fga .Llx ;_affb .Lly =_edca .Y +_fga .Lly ;_affb .Urx =_edca .X +_fga .Urx ;_affb .Ury =_edca .Y +_fga .Ury ;return _gecg ,_fga ,_affb ,nil ;};

// SignatureLine represents a line of information in the signature field appearance.
type SignatureLine struct{Desc string ;Text string ;};

// FieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for fields taking into account what value is in the field. A common use case is for generating the
// appearance stream prior to flattening fields.
//
// If `OnlyIfMissing` is true, the field appearance is generated only for fields that do not have an
// appearance stream specified.
// If `RegenerateTextFields` is true, all text fields are regenerated (even if OnlyIfMissing is true).
type FieldAppearance struct{OnlyIfMissing bool ;RegenerateTextFields bool ;_aea *AppearanceStyle ;};func _cce (_caab *_fe .ContentCreator ,_dbac AppearanceStyle ,_acc ,_egee float64 ){_caab .Add_q ().Add_re (0,0,_acc ,_egee ).Add_re (0,_egee /2,_acc ,_egee /2).Add_re (0,0,_acc ,_egee ).Add_re (_acc /2,0,_acc /2,_egee ).Add_w (_dbac .BorderSize ).SetStrokingColor (_dbac .BorderColor ).SetNonStrokingColor (_dbac .FillColor ).Add_B ().Add_Q ();};func _gaaf (_fgea *_eg .PdfAcroForm ,_fca *_eg .PdfAnnotationWidget ,_cab *_eg .PdfFieldChoice ,_aag AppearanceStyle )(*_eb .PdfObjectDictionary ,error ){_eaa ,_bgf :=_eb .GetArray (_fca .Rect );if !_bgf {return nil ,_ea .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_ec ,_bfg :=_eg .NewPdfRectangle (*_eaa );if _bfg !=nil {return nil ,_bfg ;};_eea ,_bgde :=_ec .Width (),_ec .Height ();_c .Log .Debug ("\u0043\u0068\u006f\u0069\u0063\u0065\u002c\u0020\u0077\u0061\u0020\u0042S\u003a\u0020\u0025\u0076",_fca .BS );_ggge ,_bfg :=_fe .NewContentStreamParser (_cbae (_cab .PdfField )).Parse ();if _bfg !=nil {return nil ,_bfg ;};_dbg ,_edc :=_eb .GetDict (_fca .MK );if _edc {_bdbd ,_ :=_eb .GetDict (_fca .BS );_dfe :=_aag .applyAppearanceCharacteristics (_dbg ,_bdbd ,nil );if _dfe !=nil {return nil ,_dfe ;};};_becb :=_eb .MakeDict ();for _ ,_fac :=range _cab .Opt .Elements (){if _gge ,_acd :=_eb .GetArray (_fac );_acd &&_gge .Len ()==2{_fac =_gge .Get (1);};var _gdf string ;if _dafe ,_dfcb :=_eb .GetString (_fac );_dfcb {_gdf =_dafe .Decoded ();}else if _add ,_abe :=_eb .GetName (_fac );_abe {_gdf =_add .String ();}else {_c .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u004f\u0070\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u002f\u0073\u0074\u0072\u0069\u006e\u0067 \u002d\u0020\u0025\u0054",_fac );return nil ,_ea .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u002f\u0073t\u0072\u0069\u006e\u0067");};if len (_gdf )> 0{_eca ,_bcbd :=_eda (_cab .PdfField ,_eea ,_bgde ,_gdf ,_aag ,_ggge ,_fgea .DR ,_dbg );if _bcbd !=nil {return nil ,_bcbd ;};_becb .Set (*_eb .MakeName (_gdf ),_eca .ToPdfObject ());};};_edb :=_eb .MakeDict ();_edb .Set ("\u004e",_becb );return _edb ,nil ;};

// NewSignatureLine returns a new signature line displayed as a part of the
// signature field appearance.
func NewSignatureLine (desc ,text string )*SignatureLine {return &SignatureLine {Desc :desc ,Text :text };};func _eda (_dfcc *_eg .PdfField ,_aeg ,_cge float64 ,_dacf string ,_aagb AppearanceStyle ,_gff *_fe .ContentStreamOperations ,_dbe *_eg .PdfPageResources ,_aeea *_eb .PdfObjectDictionary )(*_eg .XObjectForm ,error ){_bdca :=_eg .NewPdfPageResources ();_egg ,_gfa :=_aeg ,_cge ;_eggd :=_fe .NewContentCreator ();if _aagb .BorderSize > 0{_edg (_eggd ,_aagb ,_aeg ,_cge );};if _aagb .DrawAlignmentReticle {_cabe :=_aagb ;_cabe .BorderSize =0.2;_cce (_eggd ,_cabe ,_aeg ,_cge );};_eggd .Add_BMC ("\u0054\u0078");_eggd .Add_q ();_eggd .Add_BT ();_aeg ,_cge =_aagb .applyRotation (_aeea ,_aeg ,_cge ,_eggd );_dba ,_bac ,_ddeb :=_aagb .processDA (_dfcc ,_gff ,_dbe ,_bdca ,_eggd );if _ddeb !=nil {return nil ,_ddeb ;};_aff :=_dba .Font ;_geaa :=_dba .Size ;_fae :=_eb .MakeName (_dba .Name );_cbc :=_geaa ==0;if _cbc &&_bac {_geaa =_cge *_aagb .AutoFontSizeFraction ;};_bfd :=_aff .Encoder ();if _bfd ==nil {_c .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_bfd =_f .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};if len (_dacf )==0{return nil ,nil ;};_dda :=2.0;_afc :=0.0;if _bfd !=nil {for _ ,_ffd :=range _dacf {_caa ,_aeeg :=_aff .GetRuneMetrics (_ffd );if !_aeeg {_c .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_ffd );continue ;};_afc +=_caa .Wx ;};_dacf =string (_bfd .Encode (_dacf ));};if _geaa ==0||_cbc &&_afc > 0&&_dda +_afc *_geaa /1000.0> _aeg {_geaa =0.95*1000.0*(_aeg -_dda )/_afc ;};_dfbb :=1.0*_geaa ;_edcb :=2.0;{_facf :=_dfbb ;if _cbc &&_edcb +_facf > _cge {_geaa =0.95*(_cge -_edcb );_dfbb =1.0*_geaa ;_facf =_dfbb ;};if _cge > _facf {_edcb =(_cge -_facf )/2.0;_edcb +=1.50;};};_eggd .Add_Tf (*_fae ,_geaa );_eggd .Add_Td (_dda ,_edcb );_eggd .Add_Tj (*_eb .MakeString (_dacf ));_eggd .Add_ET ();_eggd .Add_Q ();_eggd .Add_EMC ();_gaea :=_eg .NewXObjectForm ();_gaea .Resources =_bdca ;_gaea .BBox =_eb .MakeArrayFromFloats ([]float64 {0,0,_egg ,_gfa });_gaea .SetContentStream (_eggd .Bytes (),_gdcc ());return _gaea ,nil ;};func (_ebabg *AppearanceStyle )applyRotation (_gef *_eb .PdfObjectDictionary ,_ggfc ,_bgfg float64 ,_dbb *_fe .ContentCreator )(float64 ,float64 ){if !_ebabg .AllowMK {return _ggfc ,_bgfg ;};if _gef ==nil {return _ggfc ,_bgfg ;};_egabg ,_ :=_eb .GetNumberAsFloat (_gef .Get ("\u0052"));if _egabg ==0{return _ggfc ,_bgfg ;};_aaeg :=-_egabg ;_ebb :=_ebc .Path {Points :[]_ebc .Point {_ebc .NewPoint (0,0).Rotate (_aaeg ),_ebc .NewPoint (_ggfc ,0).Rotate (_aaeg ),_ebc .NewPoint (0,_bgfg ).Rotate (_aaeg ),_ebc .NewPoint (_ggfc ,_bgfg ).Rotate (_aaeg )}}.GetBoundingBox ();_dbb .RotateDeg (_egabg );_dbb .Translate (_ebb .X ,_ebb .Y );return _ebb .Width ,_ebb .Height ;};

// NewTextField generates a new text field with partial name `name` at location
// specified by `rect` on given `page` and with field specific options `opt`.
func NewTextField (page *_eg .PdfPage ,name string ,rect []float64 ,opt TextFieldOptions )(*_eg .PdfFieldText ,error ){if page ==nil {return nil ,_ea .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_ea .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_ea .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_ddd :=_eg .NewPdfField ();_gefd :=&_eg .PdfFieldText {};_ddd .SetContext (_gefd );_gefd .PdfField =_ddd ;_gefd .T =_eb .MakeString (name );if opt .MaxLen > 0{_gefd .MaxLen =_eb .MakeInteger (int64 (opt .MaxLen ));};if len (opt .Value )> 0{_gefd .V =_eb .MakeString (opt .Value );};_aaac :=_eg .NewPdfAnnotationWidget ();_aaac .Rect =_eb .MakeArrayFromFloats (rect );_aaac .P =page .ToPdfObject ();_aaac .F =_eb .MakeInteger (4);_aaac .Parent =_gefd .ToPdfObject ();_gefd .Annotations =append (_gefd .Annotations ,_aaac );return _gefd ,nil ;};