//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package annotator provides an interface for creating annotations with appearance
// streams.  It goes beyond the models package which includes definitions of basic annotation models, in that it
// can create the appearance streams which specify the exact appearance as needed by many pdf viewers for consistent
// appearance of the annotations.
// It also contains methods for generating appearance streams for fields via widget annotations.
package annotator ;import (_a "bytes";_fb "errors";_e "github.com/unidoc/unipdf/v3/common";_bg "github.com/unidoc/unipdf/v3/contentstream";_db "github.com/unidoc/unipdf/v3/contentstream/draw";_c "github.com/unidoc/unipdf/v3/core";_d "github.com/unidoc/unipdf/v3/internal/textencoding";
_da "github.com/unidoc/unipdf/v3/model";_ad "image";_g "math";_ea "strings";_f "unicode";);func _gcca (_dgde *_da .PdfField ,_ecdc ,_ebeg float64 ,_cac string ,_aecf AppearanceStyle ,_fdbb *_bg .ContentStreamOperations ,_gca *_da .PdfPageResources ,_egg *_c .PdfObjectDictionary )(*_da .XObjectForm ,error ){_bcaef :=_da .NewPdfPageResources ();
_gdg ,_cdb :=_ecdc ,_ebeg ;_fcgb :=_bg .NewContentCreator ();if _aecf .BorderSize > 0{_gcf (_fcgb ,_aecf ,_ecdc ,_ebeg );};if _aecf .DrawAlignmentReticle {_dafe :=_aecf ;_dafe .BorderSize =0.2;_fbbd (_fcgb ,_dafe ,_ecdc ,_ebeg );};_fcgb .Add_BMC ("\u0054\u0078");
_fcgb .Add_q ();_fcgb .Add_BT ();_ecdc ,_ebeg =_aecf .applyRotation (_egg ,_ecdc ,_ebeg ,_fcgb );_fce ,_bce ,_ddb :=_aecf .processDA (_dgde ,_fdbb ,_gca ,_bcaef ,_fcgb );if _ddb !=nil {return nil ,_ddb ;};_fgg :=_fce .Font ;_adbc :=_fce .Size ;_efab :=_c .MakeName (_fce .Name );
_gdd :=_adbc ==0;if _gdd &&_bce {_adbc =_ebeg *_aecf .AutoFontSizeFraction ;};_bfgc :=_fgg .Encoder ();if _bfgc ==nil {_e .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_bfgc =_d .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};if len (_cac )==0{return nil ,nil ;};_edf :=_aea ;if _aecf .MarginLeft !=nil {_edf =*_aecf .MarginLeft ;};_bfa :=0.0;if _bfgc !=nil {for _ ,_cdac :=range _cac {_abe ,_bfac :=_fgg .GetRuneMetrics (_cdac );
if !_bfac {_e .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_cdac );
continue ;};_bfa +=_abe .Wx ;};_cac =string (_bfgc .Encode (_cac ));};if _adbc ==0||_gdd &&_bfa > 0&&_edf +_bfa *_adbc /1000.0> _ecdc {_adbc =0.95*1000.0*(_ecdc -_edf )/_bfa ;};_cgb :=1.0*_adbc ;_fgd :=2.0;{_ecgb :=_cgb ;if _gdd &&_fgd +_ecgb > _ebeg {_adbc =0.95*(_ebeg -_fgd );
_cgb =1.0*_adbc ;_ecgb =_cgb ;};if _ebeg > _ecgb {_fgd =(_ebeg -_ecgb )/2.0;_fgd +=1.50;};};_fcgb .Add_Tf (*_efab ,_adbc );_fcgb .Add_Td (_edf ,_fgd );_fcgb .Add_Tj (*_c .MakeString (_cac ));_fcgb .Add_ET ();_fcgb .Add_Q ();_fcgb .Add_EMC ();_cbf :=_da .NewXObjectForm ();
_cbf .Resources =_bcaef ;_cbf .BBox =_c .MakeArrayFromFloats ([]float64 {0,0,_gdg ,_cdb });_cbf .SetContentStream (_fcgb .Bytes (),_efad ());return _cbf ,nil ;};

// NewTextField generates a new text field with partial name `name` at location
// specified by `rect` on given `page` and with field specific options `opt`.
func NewTextField (page *_da .PdfPage ,name string ,rect []float64 ,opt TextFieldOptions )(*_da .PdfFieldText ,error ){if page ==nil {return nil ,_fb .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_fb .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
};if len (rect )!=4{return nil ,_fb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_cfb :=_da .NewPdfField ();_cgbd :=&_da .PdfFieldText {};_cfb .SetContext (_cgbd );_cgbd .PdfField =_cfb ;_cgbd .T =_c .MakeString (name );
if opt .MaxLen > 0{_cgbd .MaxLen =_c .MakeInteger (int64 (opt .MaxLen ));};if len (opt .Value )> 0{_cgbd .V =_c .MakeString (opt .Value );};_bedg :=_da .NewPdfAnnotationWidget ();_bedg .Rect =_c .MakeArrayFromFloats (rect );_bedg .P =page .ToPdfObject ();
_bedg .F =_c .MakeInteger (4);_bedg .Parent =_cgbd .ToPdfObject ();_cgbd .Annotations =append (_cgbd .Annotations ,_bedg );return _cgbd ,nil ;};

// NewSignatureFieldOpts returns a new initialized instance of options
// used to generate a signature appearance.
func NewSignatureFieldOpts ()*SignatureFieldOpts {return &SignatureFieldOpts {Font :_da .DefaultFont (),FontSize :10,LineHeight :1,AutoSize :true ,TextColor :_da .NewPdfColorDeviceGray (0),BorderColor :_da .NewPdfColorDeviceGray (0),FillColor :_da .NewPdfColorDeviceGray (1),Encoder :_c .NewFlateEncoder (),ImagePosition :SignatureImageLeft };
};func _acb (_aed CircleAnnotationDef ,_efc string )([]byte ,*_da .PdfRectangle ,*_da .PdfRectangle ,error ){_aca :=_db .Circle {X :_aed .X ,Y :_aed .Y ,Width :_aed .Width ,Height :_aed .Height ,FillEnabled :_aed .FillEnabled ,FillColor :_aed .FillColor ,BorderEnabled :_aed .BorderEnabled ,BorderWidth :_aed .BorderWidth ,BorderColor :_aed .BorderColor ,Opacity :_aed .Opacity };
_cd ,_eb ,_aef :=_aca .Draw (_efc );if _aef !=nil {return nil ,nil ,nil ,_aef ;};_fd :=&_da .PdfRectangle {};_fd .Llx =_aed .X +_eb .Llx ;_fd .Lly =_aed .Y +_eb .Lly ;_fd .Urx =_aed .X +_eb .Urx ;_fd .Ury =_aed .Y +_eb .Ury ;return _cd ,_eb ,_fd ,nil ;
};

// AppearanceStyle defines style parameters for appearance stream generation.
type AppearanceStyle struct{

// How much of Rect height to fill when autosizing text.
AutoFontSizeFraction float64 ;

// CheckmarkRune is a rune used for check mark in checkboxes (for ZapfDingbats font).
CheckmarkRune rune ;BorderSize float64 ;BorderColor _da .PdfColor ;FillColor _da .PdfColor ;

// Multiplier for lineheight for multi line text.
MultilineLineHeight float64 ;MultilineVAlignMiddle bool ;

// Visual guide checking alignment of field contents (debugging).
DrawAlignmentReticle bool ;

// Allow field MK appearance characteristics to override style settings.
AllowMK bool ;

// Fonts holds appearance styles for fonts.
Fonts *AppearanceFontStyle ;

// MarginLeft represents the amount of space to leave on the left side of
// the form field bounding box when generating appearances (default: 2.0).
MarginLeft *float64 ;};

// NewCheckboxField generates a new checkbox field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewCheckboxField (page *_da .PdfPage ,name string ,rect []float64 ,opt CheckboxFieldOptions )(*_da .PdfFieldButton ,error ){if page ==nil {return nil ,_fb .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_fb .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_fb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_agbg ,_gabb :=_da .NewStandard14Font (_da .ZapfDingbatsName );if _gabb !=nil {return nil ,_gabb ;};_cgcd :=_da .NewPdfField ();_cab :=&_da .PdfFieldButton {};_cgcd .SetContext (_cab );_cab .PdfField =_cgcd ;_cab .T =_c .MakeString (name );_cab .SetType (_da .ButtonTypeCheckbox );
_effa :="\u004f\u0066\u0066";if opt .Checked {_effa ="\u0059\u0065\u0073";};_cab .V =_c .MakeName (_effa );_ffbb :=_da .NewPdfAnnotationWidget ();_ffbb .Rect =_c .MakeArrayFromFloats (rect );_ffbb .P =page .ToPdfObject ();_ffbb .F =_c .MakeInteger (4);
_ffbb .Parent =_cab .ToPdfObject ();_bfb :=rect [2]-rect [0];_bgec :=rect [3]-rect [1];var _dgda _a .Buffer ;_dgda .WriteString ("\u0071\u000a");_dgda .WriteString ("\u0030 \u0030\u0020\u0031\u0020\u0072\u0067\n");_dgda .WriteString ("\u0042\u0054\u000a");
_dgda .WriteString ("\u002f\u005a\u0061D\u0062\u0020\u0031\u0032\u0020\u0054\u0066\u000a");_dgda .WriteString ("\u0045\u0054\u000a");_dgda .WriteString ("\u0051\u000a");_ebf :=_bg .NewContentCreator ();_ebf .Add_q ();_ebf .Add_rg (0,0,1);_ebf .Add_BT ();
_ebf .Add_Tf (*_c .MakeName ("\u005a\u0061\u0044\u0062"),12);_ebf .Add_Td (0,0);_ebf .Add_ET ();_ebf .Add_Q ();_ffd :=_da .NewXObjectForm ();_ffd .SetContentStream (_ebf .Bytes (),_c .NewRawEncoder ());_ffd .BBox =_c .MakeArrayFromFloats ([]float64 {0,0,_bfb ,_bgec });
_ffd .Resources =_da .NewPdfPageResources ();_ffd .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_agbg .ToPdfObject ());_ebf =_bg .NewContentCreator ();_ebf .Add_q ();_ebf .Add_re (0,0,_bfb ,_bgec );_ebf .Add_W ().Add_n ();_ebf .Add_rg (0,0,1);_ebf .Translate (0,3.0);
_ebf .Add_BT ();_ebf .Add_Tf (*_c .MakeName ("\u005a\u0061\u0044\u0062"),12);_ebf .Add_Td (0,0);_ebf .Add_Tj (*_c .MakeString ("\u0034"));_ebf .Add_ET ();_ebf .Add_Q ();_fcfb :=_da .NewXObjectForm ();_fcfb .SetContentStream (_ebf .Bytes (),_c .NewRawEncoder ());
_fcfb .BBox =_c .MakeArrayFromFloats ([]float64 {0,0,_bfb ,_bgec });_fcfb .Resources =_da .NewPdfPageResources ();_fcfb .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_agbg .ToPdfObject ());_ebfc :=_c .MakeDict ();_ebfc .Set ("\u004f\u0066\u0066",_ffd .ToPdfObject ());
_ebfc .Set ("\u0059\u0065\u0073",_fcfb .ToPdfObject ());_acga :=_c .MakeDict ();_acga .Set ("\u004e",_ebfc );_ffbb .AP =_acga ;_ffbb .AS =_c .MakeName (_effa );_cab .Annotations =append (_cab .Annotations ,_ffbb );return _cab ,nil ;};func _aaab (_gccg []*SignatureLine ,_bbcc *SignatureFieldOpts )(*_c .PdfObjectDictionary ,error ){if _bbcc ==nil {_bbcc =NewSignatureFieldOpts ();
};var _abaa error ;var _bfff *_c .PdfObjectName ;_fba :=_bbcc .Font ;if _fba !=nil {_cba ,_ :=_fba .GetFontDescriptor ();if _cba !=nil {if _bdeb ,_aaca :=_cba .FontName .(*_c .PdfObjectName );_aaca {_bfff =_bdeb ;};};if _bfff ==nil {_bfff =_c .MakeName ("\u0046\u006f\u006et\u0031");
};}else {if _fba ,_abaa =_da .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");_abaa !=nil {return nil ,_abaa ;};_bfff =_c .MakeName ("\u0048\u0065\u006c\u0076");};_agfg :=_bbcc .FontSize ;if _agfg <=0{_agfg =10;};if _bbcc .LineHeight <=0{_bbcc .LineHeight =1;
};_ece :=_bbcc .LineHeight *_agfg ;_fac ,_bfffd :=_fba .GetRuneMetrics (' ');if !_bfffd {return nil ,_fb .New ("\u0074\u0068e \u0066\u006f\u006et\u0020\u0064\u006f\u0065s n\u006ft \u0068\u0061\u0076\u0065\u0020\u0061\u0020sp\u0061\u0063\u0065\u0020\u0067\u006c\u0079p\u0068");
};_agee :=_fac .Wx ;var _bcc float64 ;var _efcb []string ;for _ ,_gag :=range _gccg {if _gag .Text ==""{continue ;};_cfa :=_gag .Text ;if _gag .Desc !=""{_cfa =_gag .Desc +"\u003a\u0020"+_cfa ;};_efcb =append (_efcb ,_cfa );var _eeeed float64 ;for _ ,_abcg :=range _cfa {_adce ,_debe :=_fba .GetRuneMetrics (_abcg );
if !_debe {continue ;};_eeeed +=_adce .Wx ;};if _eeeed > _bcc {_bcc =_eeeed ;};};_bcc =_bcc *_agfg /1000.0;_edea :=float64 (len (_efcb ))*_ece ;_gdc :=_bbcc .Image !=nil ;_bffe :=_bbcc .Rect ;if _bffe ==nil {_bffe =[]float64 {0,0,_bcc ,_edea };if _gdc {_bffe [2]=_bcc *2;
_bffe [3]=_edea *2;};_bbcc .Rect =_bffe ;};_cdacc :=_bffe [2]-_bffe [0];_ccd :=_bffe [3]-_bffe [1];_bdaa ,_afd :=_bffe ,_bffe ;var _dacd ,_cfc float64 ;if _gdc &&len (_efcb )> 0{if _bbcc .ImagePosition <=SignatureImageRight {_dgdf :=[]float64 {_bffe [0],_bffe [1],_bffe [0]+(_cdacc /2),_bffe [3]};
_dge :=[]float64 {_bffe [0]+(_cdacc /2),_bffe [1],_bffe [2],_bffe [3]};if _bbcc .ImagePosition ==SignatureImageLeft {_bdaa ,_afd =_dgdf ,_dge ;}else {_bdaa ,_afd =_dge ,_dgdf ;};}else {_aecd :=[]float64 {_bffe [0],_bffe [1],_bffe [2],_bffe [1]+(_ccd /2)};
_ggb :=[]float64 {_bffe [0],_bffe [1]+(_ccd /2),_bffe [2],_bffe [3]};if _bbcc .ImagePosition ==SignatureImageTop {_bdaa ,_afd =_ggb ,_aecd ;}else {_bdaa ,_afd =_aecd ,_ggb ;};};};_dacd =_afd [2]-_afd [0];_cfc =_afd [3]-_afd [1];var _dcc float64 ;if _bbcc .AutoSize {if _bcc > _dacd ||_edea > _cfc {_abb :=_g .Min (_dacd /_bcc ,_cfc /_edea );
_agfg *=_abb ;};_ece =_bbcc .LineHeight *_agfg ;_dcc +=(_cfc -float64 (len (_efcb ))*_ece )/2;};_abg :=_bg .NewContentCreator ();_aefa :=_da .NewPdfPageResources ();_aefa .SetFontByName (*_bfff ,_fba .ToPdfObject ());if _bbcc .BorderSize <=0{_bbcc .BorderSize =0;
_bbcc .BorderColor =_da .NewPdfColorDeviceGray (1);};if _bbcc .BorderColor ==nil {_bbcc .BorderColor =_da .NewPdfColorDeviceGray (1);};if _bbcc .FillColor ==nil {_bbcc .FillColor =_da .NewPdfColorDeviceGray (1);};_abg .Add_q ().SetNonStrokingColor (_bbcc .FillColor ).SetStrokingColor (_bbcc .BorderColor ).Add_w (_bbcc .BorderSize ).Add_re (_bffe [0],_bffe [1],_cdacc ,_ccd ).Add_B ().Add_Q ();
if _bbcc .WatermarkImage !=nil {_cgad :=[]float64 {_bffe [0],_bffe [1],_bffe [2],_bffe [3]};_dbg ,_fdg ,_eedg :=_gea (_bbcc .WatermarkImage ,"\u0049\u006d\u0061\u0067\u0065\u0057\u0061\u0074\u0065r\u006d\u0061\u0072\u006b",_bbcc ,_cgad ,_abg );if _eedg !=nil {return nil ,_eedg ;
};_aefa .SetXObjectImageByName (*_dbg ,_fdg );};_abg .Add_q ();_abg .Translate (_afd [0],_afd [3]-_ece -_dcc );_abg .Add_BT ();_fgee :=_fba .Encoder ();for _ ,_bcad :=range _efcb {var _eeg []byte ;for _ ,_bdae :=range _bcad {if _f .IsSpace (_bdae ){if len (_eeg )> 0{_abg .SetNonStrokingColor (_bbcc .TextColor ).Add_Tf (*_bfff ,_agfg ).Add_TL (_ece ).Add_TJ ([]_c .PdfObject {_c .MakeStringFromBytes (_eeg )}...);
_eeg =nil ;};_abg .Add_Tf (*_bfff ,_agfg ).Add_TL (_ece ).Add_TJ ([]_c .PdfObject {_c .MakeFloat (-_agee )}...);}else {_eeg =append (_eeg ,_fgee .Encode (string (_bdae ))...);};};if len (_eeg )> 0{_abg .SetNonStrokingColor (_bbcc .TextColor ).Add_Tf (*_bfff ,_agfg ).Add_TL (_ece ).Add_TJ ([]_c .PdfObject {_c .MakeStringFromBytes (_eeg )}...);
};_abg .Add_Td (0,-_ece );};_abg .Add_ET ();_abg .Add_Q ();if _gdc {_eef ,_fagc ,_eega :=_gea (_bbcc .Image ,"\u0049\u006d\u0061\u0067\u0065\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065",_bbcc ,_bdaa ,_abg );if _eega !=nil {return nil ,_eega ;};_aefa .SetXObjectImageByName (*_eef ,_fagc );
};_feea :=_da .NewXObjectForm ();_feea .Resources =_aefa ;_feea .BBox =_c .MakeArrayFromFloats (_bffe );_feea .SetContentStream (_abg .Bytes (),_efad ());_fdbef :=_c .MakeDict ();_fdbef .Set ("\u004e",_feea .ToPdfObject ());return _fdbef ,nil ;};

// SetStyle applies appearance `style` to `fa`.
func (_fda *FieldAppearance )SetStyle (style AppearanceStyle ){_fda ._bb =&style };

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_dgcd ImageFieldAppearance )GenerateAppearanceDict (form *_da .PdfAcroForm ,field *_da .PdfField ,wa *_da .PdfAnnotationWidget )(*_c .PdfObjectDictionary ,error ){_ ,_bdf :=field .GetContext ().(*_da .PdfFieldButton );if !_bdf {_e .Log .Trace ("C\u006f\u0075\u006c\u0064\u0020\u006fn\u006c\u0079\u0020\u0068\u0061\u006ed\u006c\u0065\u0020\u0062\u0075\u0074\u0074o\u006e\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069n\u0067");
return nil ,nil ;};_fdcb ,_dacg :=_c .GetDict (wa .AP );if _dacg &&_dgcd .OnlyIfMissing {_e .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");
return _fdcb ,nil ;};if form .DR ==nil {form .DR =_da .NewPdfPageResources ();};switch _dcd :=field .GetContext ().(type ){case *_da .PdfFieldButton :if _dcd .IsPush (){_bedd ,_fgca :=_gfeb (_dcd ,wa ,_dgcd .Style ());if _fgca !=nil {return nil ,_fgca ;
};return _bedd ,nil ;};};return nil ,nil ;};

// ImageFieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for attaching an image to a button field.
type ImageFieldAppearance struct{OnlyIfMissing bool ;_cdce *AppearanceStyle ;};

// CreateCircleAnnotation creates a circle/ellipse annotation object with appearance stream that can be added to
// page PDF annotations.
func CreateCircleAnnotation (circDef CircleAnnotationDef )(*_da .PdfAnnotation ,error ){_ae :=_da .NewPdfAnnotationCircle ();if circDef .BorderEnabled {_ef ,_be ,_ca :=circDef .BorderColor .R (),circDef .BorderColor .G (),circDef .BorderColor .B ();_ae .C =_c .MakeArrayFromFloats ([]float64 {_ef ,_be ,_ca });
_dae :=_da .NewBorderStyle ();_dae .SetBorderWidth (circDef .BorderWidth );_ae .BS =_dae .ToPdfObject ();};if circDef .FillEnabled {_gd ,_ac ,_aa :=circDef .FillColor .R (),circDef .FillColor .G (),circDef .FillColor .B ();_ae .IC =_c .MakeArrayFromFloats ([]float64 {_gd ,_ac ,_aa });
}else {_ae .IC =_c .MakeArrayFromIntegers ([]int {});};if circDef .Opacity < 1.0{_ae .CA =_c .MakeFloat (circDef .Opacity );};_ff ,_cg ,_cgc :=_gc (circDef );if _cgc !=nil {return nil ,_cgc ;};_ae .AP =_ff ;_ae .Rect =_c .MakeArrayFromFloats ([]float64 {_cg .Llx ,_cg .Lly ,_cg .Urx ,_cg .Ury });
return _ae .PdfAnnotation ,nil ;};func _dcb (_gde *_da .PdfField )string {if _gde ==nil {return "";};_gbbd ,_bfgce :=_gde .GetContext ().(*_da .PdfFieldText );if !_bfgce {return _dcb (_gde .Parent );};if _gbbd .DA !=nil {return _gbbd .DA .Str ();};return _dcb (_gbbd .Parent );
};

// ComboboxFieldOptions defines optional parameters for a combobox form field.
type ComboboxFieldOptions struct{

// Choices is the list of string values that can be selected.
Choices []string ;};const (SignatureImageLeft SignatureImagePosition =iota ;SignatureImageRight ;SignatureImageTop ;SignatureImageBottom ;);

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_bade FieldAppearance )WrapContentStream (page *_da .PdfPage )error {_bfcd ,_aaf :=page .GetAllContentStreams ();if _aaf !=nil {return _aaf ;};_fae :=_bg .NewContentStreamParser (_bfcd );_gdfec ,_aaf :=_fae .Parse ();if _aaf !=nil {return _aaf ;};
_gdfec .WrapIfNeeded ();_acg :=[]string {_gdfec .String ()};return page .SetContentStreams (_acg ,_efad ());};

// AppearanceFontStyle defines font style characteristics for form fields,
// used in the filling/flattening process.
type AppearanceFontStyle struct{

// Fallback represents a global font fallback, used for fields which do
// not specify a font in their default appearance (DA). The fallback is
// also used if there is a font specified in the DA, but it is not
// found in the AcroForm resources (DR).
Fallback *AppearanceFont ;

// FallbackSize represents a global font size fallback used for fields
// which do not specify a font size in their default appearance (DA).
// The fallback size is applied only if its value is larger than zero.
FallbackSize float64 ;

// FieldFallbacks defines font fallbacks for specific fields. The map keys
// represent the names of the fields (which can be specified by their
// partial or full names). Specific field fallback fonts take precedence
// over the global font fallback.
FieldFallbacks map[string ]*AppearanceFont ;

// ForceReplace forces the replacement of fonts in the filling/flattening
// process, even if the default appearance (DA) specifies a valid font.
// If no fallback font is provided, setting this field has no effect.
ForceReplace bool ;};func _gfeb (_dgga *_da .PdfFieldButton ,_ddfg *_da .PdfAnnotationWidget ,_ggfcf AppearanceStyle )(*_c .PdfObjectDictionary ,error ){_dbgb ,_bba :=_c .GetArray (_ddfg .Rect );if !_bba {return nil ,_fb .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");
};_daeg ,_bddd :=_da .NewPdfRectangle (*_dbgb );if _bddd !=nil {return nil ,_bddd ;};_gccca ,_egcfa :=_daeg .Width (),_daeg .Height ();_cbff :=_bg .NewContentCreator ();if _ggfcf .BorderSize > 0{_gcf (_cbff ,_ggfcf ,_gccca ,_egcfa );};if _ggfcf .DrawAlignmentReticle {_afdd :=_ggfcf ;
_afdd .BorderSize =0.2;_fbbd (_cbff ,_afdd ,_gccca ,_egcfa );};_ddcg :=_dgga .GetFillImage ();_ecaa ,_bddd :=_gaga (_gccca ,_egcfa ,_ddcg ,_ggfcf );if _bddd !=nil {return nil ,_bddd ;};_eabf ,_beef :=_c .GetDict (_ddfg .MK );if _beef {_eabf .Set ("\u006c",_ecaa .ToPdfObject ());
};_cdgf :=_c .MakeDict ();_cdgf .Set ("\u0046\u0052\u004d",_ecaa .ToPdfObject ());_ddaf :=_da .NewPdfPageResources ();_ddaf .ProcSet =_c .MakeArray (_c .MakeName ("\u0050\u0044\u0046"));_ddaf .XObject =_cdgf ;_baf :=_gccca -2;_befe :=_egcfa -2;_cbff .Add_q ();
_cbff .Add_re (1,1,_baf ,_befe );_cbff .Add_W ();_cbff .Add_n ();_baf -=2;_befe -=2;_cbff .Add_q ();_cbff .Add_re (2,2,_baf ,_befe );_cbff .Add_W ();_cbff .Add_n ();_caaa :=_g .Min (_baf /float64 (_ddcg .Width ),_befe /float64 (_ddcg .Height ));_cbff .Add_cm (_caaa ,0,0,_caaa ,(_gccca /2)-(float64 (_ddcg .Width )*_caaa /2)+2,2);
_cbff .Add_Do ("\u0046\u0052\u004d");_cbff .Add_Q ();_cbff .Add_Q ();_ccf :=_da .NewXObjectForm ();_ccf .FormType =_c .MakeInteger (1);_ccf .Resources =_ddaf ;_ccf .BBox =_c .MakeArrayFromFloats ([]float64 {0,0,_gccca ,_egcfa });_ccf .Matrix =_c .MakeArrayFromFloats ([]float64 {1.0,0.0,0.0,1.0,0.0,0.0});
_ccf .SetContentStream (_cbff .Bytes (),_efad ());_dgdac :=_c .MakeDict ();_dgdac .Set ("\u004e",_ccf .ToPdfObject ());return _dgdac ,nil ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_bfbb ImageFieldAppearance )WrapContentStream (page *_da .PdfPage )error {_dcdc ,_bebb :=page .GetAllContentStreams ();if _bebb !=nil {return _bebb ;};_ecae :=_bg .NewContentStreamParser (_dcdc );_eedc ,_bebb :=_ecae .Parse ();if _bebb !=nil {return _bebb ;
};_eedc .WrapIfNeeded ();_dffg :=[]string {_eedc .String ()};return page .SetContentStreams (_dffg ,_efad ());};func _dgce (_bbab RectangleAnnotationDef ,_agec string )([]byte ,*_da .PdfRectangle ,*_da .PdfRectangle ,error ){_dcf :=_db .Rectangle {X :0,Y :0,Width :_bbab .Width ,Height :_bbab .Height ,FillEnabled :_bbab .FillEnabled ,FillColor :_bbab .FillColor ,BorderEnabled :_bbab .BorderEnabled ,BorderWidth :2*_bbab .BorderWidth ,BorderColor :_bbab .BorderColor ,Opacity :_bbab .Opacity };
_ggba ,_fdde ,_fbfga :=_dcf .Draw (_agec );if _fbfga !=nil {return nil ,nil ,nil ,_fbfga ;};_gfbb :=&_da .PdfRectangle {};_gfbb .Llx =_bbab .X +_fdde .Llx ;_gfbb .Lly =_bbab .Y +_fdde .Lly ;_gfbb .Urx =_bbab .X +_fdde .Urx ;_gfbb .Ury =_bbab .Y +_fdde .Ury ;
return _ggba ,_fdde ,_gfbb ,nil ;};func (_egcb *AppearanceStyle )applyAppearanceCharacteristics (_gfe *_c .PdfObjectDictionary ,_bdaf *_c .PdfObjectDictionary ,_adf *_da .PdfFont )error {if !_egcb .AllowMK {return nil ;};if CA ,_eedbc :=_c .GetString (_gfe .Get ("\u0043\u0041"));
_eedbc &&_adf !=nil {_fab :=CA .Bytes ();if len (_fab )!=0{_bee :=[]rune (_adf .Encoder ().Decode (_fab ));if len (_bee )==1{_egcb .CheckmarkRune =_bee [0];};};};if BC ,_cbfg :=_c .GetArray (_gfe .Get ("\u0042\u0043"));_cbfg {_deb ,_daad :=BC .ToFloat64Array ();
if _daad !=nil {return _daad ;};switch len (_deb ){case 1:_egcb .BorderColor =_da .NewPdfColorDeviceGray (_deb [0]);case 3:_egcb .BorderColor =_da .NewPdfColorDeviceRGB (_deb [0],_deb [1],_deb [2]);case 4:_egcb .BorderColor =_da .NewPdfColorDeviceCMYK (_deb [0],_deb [1],_deb [2],_deb [3]);
default:_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0043\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_deb ));
};if _bdaf !=nil {if _gbc ,_fafc :=_c .GetNumberAsFloat (_bdaf .Get ("\u0057"));_fafc ==nil {_egcb .BorderSize =_gbc ;};};};if BG ,_dfa :=_c .GetArray (_gfe .Get ("\u0042\u0047"));_dfa {_ced ,_ccbf :=BG .ToFloat64Array ();if _ccbf !=nil {return _ccbf ;
};switch len (_ced ){case 1:_egcb .FillColor =_da .NewPdfColorDeviceGray (_ced [0]);case 3:_egcb .FillColor =_da .NewPdfColorDeviceRGB (_ced [0],_ced [1],_ced [2]);case 4:_egcb .FillColor =_da .NewPdfColorDeviceCMYK (_ced [0],_ced [1],_ced [2],_ced [3]);
default:_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0047\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_ced ));
};};return nil ;};

// SignatureFieldOpts represents a set of options used to configure
// an appearance widget dictionary.
type SignatureFieldOpts struct{

// Rect represents the area the signature annotation is displayed on.
Rect []float64 ;

// AutoSize specifies if the content of the appearance should be
// scaled to fit in the annotation rectangle.
AutoSize bool ;

// Font specifies the font of the text content.
Font *_da .PdfFont ;

// FontSize specifies the size of the text content.
FontSize float64 ;

// LineHeight specifies the height of a line of text in the appearance annotation.
LineHeight float64 ;

// TextColor represents the color of the text content displayed.
TextColor _da .PdfColor ;

// FillColor represents the background color of the appearance annotation area.
FillColor _da .PdfColor ;

// BorderSize represents border size of the appearance annotation area.
BorderSize float64 ;

// BorderColor represents the border color of the appearance annotation area.
BorderColor _da .PdfColor ;

// WatermarkImage specifies the image used as a watermark that will be rendered
// behind the signature.
WatermarkImage _ad .Image ;

// Image represents the image used for the signature appearance.
Image _ad .Image ;

// Encoder specifies the image encoder used for image signature. Defaults to flate encoder.
Encoder _c .StreamEncoder ;

// ImagePosition specifies the image location relative to the text signature.
ImagePosition SignatureImagePosition ;};func _fbbd (_feed *_bg .ContentCreator ,_dba AppearanceStyle ,_fdf ,_edd float64 ){_feed .Add_q ().Add_re (0,0,_fdf ,_edd ).Add_re (0,_edd /2,_fdf ,_edd /2).Add_re (0,0,_fdf ,_edd ).Add_re (_fdf /2,0,_fdf /2,_edd ).Add_w (_dba .BorderSize ).SetStrokingColor (_dba .BorderColor ).SetNonStrokingColor (_dba .FillColor ).Add_B ().Add_Q ();
};

// FieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for fields taking into account what value is in the field. A common use case is for generating the
// appearance stream prior to flattening fields.
//
// If `OnlyIfMissing` is true, the field appearance is generated only for fields that do not have an
// appearance stream specified.
// If `RegenerateTextFields` is true, all text fields are regenerated (even if OnlyIfMissing is true).
type FieldAppearance struct{OnlyIfMissing bool ;RegenerateTextFields bool ;_bb *AppearanceStyle ;};

// SetStyle applies appearance `style` to `fa`.
func (_daaf *ImageFieldAppearance )SetStyle (style AppearanceStyle ){_daaf ._cdce =&style };func _gaga (_fecd ,_dca float64 ,_cgca *_da .Image ,_cgab AppearanceStyle )(*_da .XObjectForm ,error ){_cccc ,_aaabd :=_da .NewXObjectImageFromImage (_cgca ,nil ,_c .NewFlateEncoder ());
if _aaabd !=nil {return nil ,_aaabd ;};_cccc .Decode =_c .MakeArrayFromFloats ([]float64 {0.0,1.0,0.0,1.0,0.0,1.0});_bded :=_da .NewPdfPageResources ();_bded .ProcSet =_c .MakeArray (_c .MakeName ("\u0050\u0044\u0046"),_c .MakeName ("\u0049\u006d\u0061\u0067\u0065\u0043"));
_bded .SetXObjectImageByName (_c .PdfObjectName ("\u0049\u006d\u0030"),_cccc );_eea :=_bg .NewContentCreator ();_eea .Add_q ();_eea .Add_cm (float64 (_cgca .Width ),0,0,float64 (_cgca .Height ),0,0);_eea .Add_Do ("\u0049\u006d\u0030");_eea .Add_Q ();_abaab :=_da .NewXObjectForm ();
_abaab .FormType =_c .MakeInteger (1);_abaab .BBox =_c .MakeArrayFromFloats ([]float64 {0,0,float64 (_cgca .Width ),float64 (_cgca .Height )});_abaab .Resources =_bded ;_abaab .SetContentStream (_eea .Bytes (),_efad ());return _abaab ,nil ;};func (_fcea *AppearanceStyle )processDA (_befc *_da .PdfField ,_bcf *_bg .ContentStreamOperations ,_bgb ,_gdda *_da .PdfPageResources ,_age *_bg .ContentCreator )(*AppearanceFont ,bool ,error ){var _eab *AppearanceFont ;
var _fdfc bool ;if _fcea .Fonts !=nil {if _fcea .Fonts .Fallback !=nil {_eab =_fcea .Fonts .Fallback ;};if _daed :=_fcea .Fonts .FieldFallbacks ;_daed !=nil {if _eebd ,_efae :=_daed [_befc .PartialName ()];_efae {_eab =_eebd ;}else if _cdaf ,_edfe :=_befc .FullName ();
_edfe ==nil {if _fde ,_gaa :=_daed [_cdaf ];_gaa {_eab =_fde ;};};};_fdfc =_fcea .Fonts .ForceReplace ;};var _dfd string ;var _bcea float64 ;var _fec bool ;if _bcf !=nil {for _ ,_fdd :=range *_bcf {if _fdd .Operand =="\u0054\u0066"&&len (_fdd .Params )==2{if _aeecd ,_bbc :=_c .GetNameVal (_fdd .Params [0]);
_bbc {_dfd =_aeecd ;};if _aaed ,_aeaf :=_c .GetNumberAsFloat (_fdd .Params [1]);_aeaf ==nil {_bcea =_aaed ;};_fec =true ;continue ;};_age .AddOperand (*_fdd );};};var _dfgb *AppearanceFont ;var _agbb _c .PdfObject ;if _fdfc &&_eab !=nil {_dfgb =_eab ;}else {if _bgb !=nil &&_dfd !=""{if _ebba ,_aba :=_bgb .GetFontByName (*_c .MakeName (_dfd ));
_aba {if _cgfe ,_ege :=_da .NewPdfFontFromPdfObject (_ebba );_ege ==nil {_agbb =_ebba ;_dfgb =&AppearanceFont {Name :_dfd ,Font :_cgfe ,Size :_bcea };}else {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u006c\u006fa\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0025\u0076",_ege );
};};};if _dfgb ==nil &&_eab !=nil {_dfgb =_eab ;};if _dfgb ==nil {_ddd ,_adad :=_da .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");if _adad !=nil {return nil ,false ,_adad ;};_dfgb =&AppearanceFont {Name :"\u0048\u0065\u006c\u0076",Font :_ddd ,Size :_bcea };
};};if _dfgb .Size <=0&&_fcea .Fonts !=nil &&_fcea .Fonts .FallbackSize > 0{_dfgb .Size =_fcea .Fonts .FallbackSize ;};_effb :=*_c .MakeName (_dfgb .Name );if _agbb ==nil {_agbb =_dfgb .Font .ToPdfObject ();};if _bgb !=nil &&!_bgb .HasFontByName (_effb ){_bgb .SetFontByName (_effb ,_agbb );
};if _gdda !=nil &&!_gdda .HasFontByName (_effb ){_gdda .SetFontByName (_effb ,_agbb );};return _dfgb ,_fec ,nil ;};

// CircleAnnotationDef defines a circle annotation or ellipse at position (X, Y) and Width and Height.
// The annotation has various style parameters including Fill and Border options and Opacity.
type CircleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_da .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_da .PdfColorDeviceRGB ;Opacity float64 ;};

// ImageFieldOptions defines optional parameters for a push button with image attach capability form field.
type ImageFieldOptions struct{Image *_da .Image ;_eafg AppearanceStyle ;};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_gfb FieldAppearance )Style ()AppearanceStyle {if _gfb ._bb !=nil {return *_gfb ._bb ;};_adc :=_aea ;return AppearanceStyle {AutoFontSizeFraction :0.65,CheckmarkRune :'✔',BorderSize :0.0,BorderColor :_da .NewPdfColorDeviceGray (0),FillColor :_da .NewPdfColorDeviceGray (1),MultilineLineHeight :1.2,MultilineVAlignMiddle :false ,DrawAlignmentReticle :false ,AllowMK :true ,MarginLeft :&_adc };
};

// NewComboboxField generates a new combobox form field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewComboboxField (page *_da .PdfPage ,name string ,rect []float64 ,opt ComboboxFieldOptions )(*_da .PdfFieldChoice ,error ){if page ==nil {return nil ,_fb .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_fb .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_fb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_badb :=_da .NewPdfField ();_cabg :=&_da .PdfFieldChoice {};_badb .SetContext (_cabg );_cabg .PdfField =_badb ;_cabg .T =_c .MakeString (name );_cabg .Opt =_c .MakeArray ();for _ ,_baa :=range opt .Choices {_cabg .Opt .Append (_c .MakeString (_baa ));
};_cabg .SetFlag (_da .FieldFlagCombo );_bebd :=_da .NewPdfAnnotationWidget ();_bebd .Rect =_c .MakeArrayFromFloats (rect );_bebd .P =page .ToPdfObject ();_bebd .F =_c .MakeInteger (4);_bebd .Parent =_cabg .ToPdfObject ();_cabg .Annotations =append (_cabg .Annotations ,_bebd );
return _cabg ,nil ;};

// NewSignatureField returns a new signature field with a visible appearance
// containing the specified signature lines and styled according to the
// specified options.
func NewSignatureField (signature *_da .PdfSignature ,lines []*SignatureLine ,opts *SignatureFieldOpts )(*_da .PdfFieldSignature ,error ){if signature ==nil {return nil ,_fb .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};_cbdb ,_abd :=_aaab (lines ,opts );if _abd !=nil {return nil ,_abd ;};_dbbe :=_da .NewPdfFieldSignature (signature );_dbbe .Rect =_c .MakeArrayFromFloats (opts .Rect );_dbbe .AP =_cbdb ;return _dbbe ,nil ;};func _dbfd (_daebc *_da .PdfAnnotationWidget ,_ggf *_da .PdfFieldText ,_cgf *_da .PdfPageResources ,_addf AppearanceStyle )(*_c .PdfObjectDictionary ,error ){_ggfc :=_da .NewPdfPageResources ();
_eee ,_eda :=_c .GetArray (_daebc .Rect );if !_eda {return nil ,_fb .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_daa ,_acad :=_da .NewPdfRectangle (*_eee );if _acad !=nil {return nil ,_acad ;};_dfg ,_gbd :=_daa .Width (),_daa .Height ();
_ebe ,_eebg :=_dfg ,_gbd ;_ccc ,_ffa :=_c .GetDict (_daebc .MK );if _ffa {_bbf ,_ :=_c .GetDict (_daebc .BS );_gebe :=_addf .applyAppearanceCharacteristics (_ccc ,_bbf ,nil );if _gebe !=nil {return nil ,_gebe ;};};_cad ,_ffa :=_c .GetIntVal (_ggf .MaxLen );
if !_ffa {return nil ,_fb .New ("\u006d\u0061\u0078\u006c\u0065\u006e\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if _cad <=0{return nil ,_fb .New ("\u006d\u0061\u0078\u004c\u0065\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_eca :=_dfg /float64 (_cad );
_gcbd ,_acad :=_bg .NewContentStreamParser (_dcb (_ggf .PdfField )).Parse ();if _acad !=nil {return nil ,_acad ;};_bda :=_bg .NewContentCreator ();if _addf .BorderSize > 0{_gcf (_bda ,_addf ,_dfg ,_gbd );};if _addf .DrawAlignmentReticle {_fdb :=_addf ;
_fdb .BorderSize =0.2;_fbbd (_bda ,_fdb ,_dfg ,_gbd );};_bda .Add_BMC ("\u0054\u0078");_bda .Add_q ();_ ,_gbd =_addf .applyRotation (_ccc ,_dfg ,_gbd ,_bda );_bda .Add_BT ();_daab ,_cdc ,_acad :=_addf .processDA (_ggf .PdfField ,_gcbd ,_cgf ,_ggfc ,_bda );
if _acad !=nil {return nil ,_acad ;};_fcf :=_daab .Font ;_bcae :=_c .MakeName (_daab .Name );_aabd :=_daab .Size ;_gab :=_aabd ==0;if _gab &&_cdc {_aabd =_gbd *_addf .AutoFontSizeFraction ;};_cca :=_fcf .Encoder ();if _cca ==nil {_e .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_cca =_d .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};var _aac string ;if _fgc ,_gdfe :=_c .GetString (_ggf .V );_gdfe {_aac =_fgc .Decoded ();};_bda .Add_Tf (*_bcae ,_aabd );var _aadd float64 ;for _ ,_gfbe :=range _aac {_bbge ,_gbaf :=_fcf .GetRuneMetrics (_gfbe );
if !_gbaf {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_gfbe );
continue ;};_acfc :=_bbge .Wy ;if int (_acfc )<=0{_acfc =_bbge .Wx ;};if _acfc > _aadd {_aadd =_acfc ;};};if int (_aadd )==0{_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0064\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006d\u0061x\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0073\u0069\u007a\u0065\u0020- \u0075\u0073\u0069\u006e\u0067\u0020\u0031\u0030\u0030\u0030");
_aadd =1000;};_efa ,_acad :=_fcf .GetFontDescriptor ();if _acad !=nil {_e .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
};var _adb float64 ;if _efa !=nil {_adb ,_acad =_efa .GetCapHeight ();if _acad !=nil {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_acad );
};};if int (_adb )<=0{_e .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_adb =1000.0;};_eede :=_adb /1000.0*_aabd ;_fdcc :=0.0;_gccc :=1.0*_aabd *(_aadd /1000.0);{_fdbg :=_gccc ;if _gab &&_fdcc +_fdbg > _gbd {_aabd =0.95*(_gbd -_fdcc );_eede =_adb /1000.0*_aabd ;};if _gbd > _eede {_fdcc =(_gbd -_eede )/2.0;};};_bda .Add_Td (0,_fdcc );
if _bgc ,_gfd :=_c .GetIntVal (_ggf .Q );_gfd {switch _bgc {case 2:if len (_aac )< _cad {_gbba :=float64 (_cad -len (_aac ))*_eca ;_bda .Add_Td (_gbba ,0);};};};for _cda ,_ega :=range _aac {_bfeb :=_aea ;if _addf .MarginLeft !=nil {_bfeb =*_addf .MarginLeft ;
};_ede :=string (_ega );if _cca !=nil {_ccb ,_cag :=_fcf .GetRuneMetrics (_ega );if !_cag {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_ega );
continue ;};_ede =string (_cca .Encode (_ede ));_ecb :=_aabd *_ccb .Wx /1000.0;_bcbg :=(_eca -_ecb )/2;_bfeb =_bcbg ;};_bda .Add_Td (_bfeb ,0);_bda .Add_Tj (*_c .MakeString (_ede ));if _cda !=len (_aac )-1{_bda .Add_Td (_eca -_bfeb ,0);};};_bda .Add_ET ();
_bda .Add_Q ();_bda .Add_EMC ();_ddc :=_da .NewXObjectForm ();_ddc .Resources =_ggfc ;_ddc .BBox =_c .MakeArrayFromFloats ([]float64 {0,0,_ebe ,_eebg });_ddc .SetContentStream (_bda .Bytes (),_efad ());_cbd :=_c .MakeDict ();_cbd .Set ("\u004e",_ddc .ToPdfObject ());
return _cbd ,nil ;};func _gc (_beb CircleAnnotationDef )(*_c .PdfObjectDictionary ,*_da .PdfRectangle ,error ){_eag :=_da .NewXObjectForm ();_eag .Resources =_da .NewPdfPageResources ();_fa :="";if _beb .Opacity < 1.0{_ag :=_c .MakeDict ();_ag .Set ("\u0063\u0061",_c .MakeFloat (_beb .Opacity ));
_ag .Set ("\u0043\u0041",_c .MakeFloat (_beb .Opacity ));_acf :=_eag .Resources .AddExtGState ("\u0067\u0073\u0031",_ag );if _acf !=nil {_e .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_acf ;};_fa ="\u0067\u0073\u0031";};_dbd ,_ba ,_ce ,_gf :=_acb (_beb ,_fa );if _gf !=nil {return nil ,nil ,_gf ;};_gf =_eag .SetContentStream (_dbd ,nil );if _gf !=nil {return nil ,nil ,_gf ;};_eag .BBox =_ba .ToPdfObject ();_ab :=_c .MakeDict ();
_ab .Set ("\u004e",_eag .ToPdfObject ());return _ab ,_ce ,nil ;};

// LineAnnotationDef defines a line between point 1 (X1,Y1) and point 2 (X2,Y2).  The line ending styles can be none
// (regular line), or arrows at either end.  The line also has a specified width, color and opacity.
type LineAnnotationDef struct{X1 float64 ;Y1 float64 ;X2 float64 ;Y2 float64 ;LineColor *_da .PdfColorDeviceRGB ;Opacity float64 ;LineWidth float64 ;LineEndingStyle1 _db .LineEndingStyle ;LineEndingStyle2 _db .LineEndingStyle ;};func _efad ()_c .StreamEncoder {return _c .NewFlateEncoder ()};


// SignatureImagePosition specifies the image signature location relative to the text signature.
// If text signature is not defined, this position will be ignored.
type SignatureImagePosition int ;

// CreateLineAnnotation creates a line annotation object that can be added to page PDF annotations.
func CreateLineAnnotation (lineDef LineAnnotationDef )(*_da .PdfAnnotation ,error ){_bcd :=_da .NewPdfAnnotationLine ();_bcd .L =_c .MakeArrayFromFloats ([]float64 {lineDef .X1 ,lineDef .Y1 ,lineDef .X2 ,lineDef .Y2 });_ace :=_c .MakeName ("\u004e\u006f\u006e\u0065");
if lineDef .LineEndingStyle1 ==_db .LineEndingStyleArrow {_ace =_c .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_cgfg :=_c .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle2 ==_db .LineEndingStyleArrow {_cgfg =_c .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");
};_bcd .LE =_c .MakeArray (_ace ,_cgfg );if lineDef .Opacity < 1.0{_bcd .CA =_c .MakeFloat (lineDef .Opacity );};_gff ,_ecec ,_dfc :=lineDef .LineColor .R (),lineDef .LineColor .G (),lineDef .LineColor .B ();_bcd .IC =_c .MakeArrayFromFloats ([]float64 {_gff ,_ecec ,_dfc });
_bcd .C =_c .MakeArrayFromFloats ([]float64 {_gff ,_ecec ,_dfc });_efgd :=_da .NewBorderStyle ();_efgd .SetBorderWidth (lineDef .LineWidth );_bcd .BS =_efgd .ToPdfObject ();_abag ,_fgcd ,_acgg :=_bbe (lineDef );if _acgg !=nil {return nil ,_acgg ;};_bcd .AP =_abag ;
_bcd .Rect =_c .MakeArrayFromFloats ([]float64 {_fgcd .Llx ,_fgcd .Lly ,_fgcd .Urx ,_fgcd .Ury });return _bcd .PdfAnnotation ,nil ;};func _dab (_beda *_da .PdfAcroForm ,_adg *_da .PdfAnnotationWidget ,_agd *_da .PdfFieldChoice ,_aeec AppearanceStyle )(*_c .PdfObjectDictionary ,error ){_dabc ,_dadc :=_c .GetArray (_adg .Rect );
if !_dadc {return nil ,_fb .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_fcd ,_bga :=_da .NewPdfRectangle (*_dabc );if _bga !=nil {return nil ,_bga ;};_egae ,_gbdc :=_fcd .Width (),_fcd .Height ();_e .Log .Debug ("\u0043\u0068\u006f\u0069\u0063\u0065\u002c\u0020\u0077\u0061\u0020\u0042S\u003a\u0020\u0025\u0076",_adg .BS );
_afe ,_bga :=_bg .NewContentStreamParser (_dcb (_agd .PdfField )).Parse ();if _bga !=nil {return nil ,_bga ;};_bgef ,_bfgf :=_c .GetDict (_adg .MK );if _bfgf {_egcf ,_ :=_c .GetDict (_adg .BS );_fgab :=_aeec .applyAppearanceCharacteristics (_bgef ,_egcf ,nil );
if _fgab !=nil {return nil ,_fgab ;};};_cff :=_c .MakeDict ();for _ ,_gcbb :=range _agd .Opt .Elements (){if _ddec ,_cgfd :=_c .GetArray (_gcbb );_cgfd &&_ddec .Len ()==2{_gcbb =_ddec .Get (1);};var _gaf string ;if _bde ,_ggg :=_c .GetString (_gcbb );_ggg {_gaf =_bde .Decoded ();
}else if _eeee ,_fff :=_c .GetName (_gcbb );_fff {_gaf =_eeee .String ();}else {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u004f\u0070\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u002f\u0073\u0074\u0072\u0069\u006e\u0067 \u002d\u0020\u0025\u0054",_gcbb );
return nil ,_fb .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u002f\u0073t\u0072\u0069\u006e\u0067");};if len (_gaf )> 0{_dda ,_aegc :=_gcca (_agd .PdfField ,_egae ,_gbdc ,_gaf ,_aeec ,_afe ,_beda .DR ,_bgef );if _aegc !=nil {return nil ,_aegc ;
};_cff .Set (*_c .MakeName (_gaf ),_dda .ToPdfObject ());};};_faf :=_c .MakeDict ();_faf .Set ("\u004e",_cff );return _faf ,nil ;};

// NewSignatureLine returns a new signature line displayed as a part of the
// signature field appearance.
func NewSignatureLine (desc ,text string )*SignatureLine {return &SignatureLine {Desc :desc ,Text :text };};func _gcf (_efaf *_bg .ContentCreator ,_aae AppearanceStyle ,_ddce ,_ccg float64 ){_efaf .Add_q ().Add_re (0,0,_ddce ,_ccg ).Add_w (_aae .BorderSize ).SetStrokingColor (_aae .BorderColor ).SetNonStrokingColor (_aae .FillColor ).Add_B ().Add_Q ();
};const (_ge quadding =0;_cef quadding =1;_dad quadding =2;_aea float64 =2.0;);

// CreateRectangleAnnotation creates a rectangle annotation object that can be added to page PDF annotations.
func CreateRectangleAnnotation (rectDef RectangleAnnotationDef )(*_da .PdfAnnotation ,error ){_gcee :=_da .NewPdfAnnotationSquare ();if rectDef .BorderEnabled {_ccgc ,_aeafa ,_bgefc :=rectDef .BorderColor .R (),rectDef .BorderColor .G (),rectDef .BorderColor .B ();
_gcee .C =_c .MakeArrayFromFloats ([]float64 {_ccgc ,_aeafa ,_bgefc });_ggdad :=_da .NewBorderStyle ();_ggdad .SetBorderWidth (rectDef .BorderWidth );_gcee .BS =_ggdad .ToPdfObject ();};if rectDef .FillEnabled {_afcb ,_dfga ,_dfgg :=rectDef .FillColor .R (),rectDef .FillColor .G (),rectDef .FillColor .B ();
_gcee .IC =_c .MakeArrayFromFloats ([]float64 {_afcb ,_dfga ,_dfgg });}else {_gcee .IC =_c .MakeArrayFromIntegers ([]int {});};if rectDef .Opacity < 1.0{_gcee .CA =_c .MakeFloat (rectDef .Opacity );};_bgee ,_ddfgc ,_aeea :=_geag (rectDef );if _aeea !=nil {return nil ,_aeea ;
};_gcee .AP =_bgee ;_gcee .Rect =_c .MakeArrayFromFloats ([]float64 {_ddfgc .Llx ,_ddfgc .Lly ,_ddfgc .Urx ,_ddfgc .Ury });return _gcee .PdfAnnotation ,nil ;};

// RectangleAnnotationDef is a rectangle defined with a specified Width and Height and a lower left corner at (X,Y).
// The rectangle can optionally have a border and a filling color.
// The Width/Height includes the border (if any specified).
type RectangleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_da .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_da .PdfColorDeviceRGB ;Opacity float64 ;};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_cffa ImageFieldAppearance )Style ()AppearanceStyle {if _cffa ._cdce !=nil {return *_cffa ._cdce ;};return AppearanceStyle {BorderSize :0.0,BorderColor :_da .NewPdfColorDeviceGray (0),FillColor :_da .NewPdfColorDeviceGray (1),DrawAlignmentReticle :false };
};func _bbe (_cbae LineAnnotationDef )(*_c .PdfObjectDictionary ,*_da .PdfRectangle ,error ){_dedg :=_da .NewXObjectForm ();_dedg .Resources =_da .NewPdfPageResources ();_fgag :="";if _cbae .Opacity < 1.0{_gfede :=_c .MakeDict ();_gfede .Set ("\u0063\u0061",_c .MakeFloat (_cbae .Opacity ));
_gfebc :=_dedg .Resources .AddExtGState ("\u0067\u0073\u0031",_gfede );if _gfebc !=nil {_e .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_gfebc ;
};_fgag ="\u0067\u0073\u0031";};_bfgd ,_eegf ,_agef ,_fdea :=_abga (_cbae ,_fgag );if _fdea !=nil {return nil ,nil ,_fdea ;};_fdea =_dedg .SetContentStream (_bfgd ,nil );if _fdea !=nil {return nil ,nil ,_fdea ;};_dedg .BBox =_eegf .ToPdfObject ();_ceb :=_c .MakeDict ();
_ceb .Set ("\u004e",_dedg .ToPdfObject ());return _ceb ,_agef ,nil ;};func _gea (_bdeg _ad .Image ,_dgaf string ,_bfd *SignatureFieldOpts ,_faea []float64 ,_ggbe *_bg .ContentCreator )(*_c .PdfObjectName ,*_da .XObjectImage ,error ){_aafd ,_ggda :=_da .DefaultImageHandler {}.NewImageFromGoImage (_bdeg );
if _ggda !=nil {return nil ,nil ,_ggda ;};_edfc ,_ggda :=_da .NewXObjectImageFromImage (_aafd ,nil ,_bfd .Encoder );if _ggda !=nil {return nil ,nil ,_ggda ;};_fgeea ,_ded :=float64 (*_edfc .Width ),float64 (*_edfc .Height );_fagd :=_faea [2]-_faea [0];
_cbde :=_faea [3]-_faea [1];if _bfd .AutoSize {_cdeg :=_g .Min (_fagd /_fgeea ,_cbde /_ded );_fgeea *=_cdeg ;_ded *=_cdeg ;_faea [0]=_faea [0]+(_fagd /2)-(_fgeea /2);_faea [1]=_faea [1]+(_cbde /2)-(_ded /2);};var _efg *_c .PdfObjectName ;if _ddff ,_eafc :=_c .GetName (_edfc .Name );
_eafc {_efg =_ddff ;}else {_efg =_c .MakeName (_dgaf );};if _ggbe !=nil {_ggbe .Add_q ().Translate (_faea [0],_faea [1]).Scale (_fgeea ,_ded ).Add_Do (*_efg ).Add_Q ();}else {return nil ,nil ,_fb .New ("\u0043\u006f\u006e\u0074en\u0074\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020\u0069\u0073\u0020\u006e\u0075l\u006c");
};return _efg ,_edfc ,nil ;};

// CheckboxFieldOptions defines optional parameters for a checkbox field a form.
type CheckboxFieldOptions struct{Checked bool ;};

// AppearanceFont represents a font used for generating the appearance of a
// field in the filling/flattening process.
type AppearanceFont struct{

// Name represents the name of the font which will be added to the
// AcroForm resources (DR).
Name string ;

// Font represents the actual font used for the field appearance.
Font *_da .PdfFont ;

// Size represents the size of the font used for the field appearance.
// If the font size is 0, the value of the FallbackSize field of the
// AppearanceFontStyle is used, if set. Otherwise, the font size is
// calculated based on the available annotation height and on the
// AutoFontSizeFraction field of the AppearanceStyle.
Size float64 ;};

// NewImageField generates a new image field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewImageField (page *_da .PdfPage ,name string ,rect []float64 ,opt ImageFieldOptions )(*_da .PdfFieldButton ,error ){if page ==nil {return nil ,_fb .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_fb .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_fb .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_beaa :=_da .NewPdfField ();_gcff :=&_da .PdfFieldButton {};_gcff .PdfField =_beaa ;_beaa .SetContext (_gcff );_gcff .SetType (_da .ButtonTypePush );_gcff .T =_c .MakeString (name );_fgeg :=_da .NewPdfAnnotationWidget ();_fgeg .Rect =_c .MakeArrayFromFloats (rect );
_fgeg .P =page .ToPdfObject ();_fgeg .F =_c .MakeInteger (4);_fgeg .Parent =_gcff .ToPdfObject ();_fdbc :=rect [2]-rect [0];_gce :=rect [3]-rect [1];_cgaa :=opt ._eafg ;_bec :=_bg .NewContentCreator ();if _cgaa .BorderSize > 0{_gcf (_bec ,_cgaa ,_fdbc ,_gce );
};if _cgaa .DrawAlignmentReticle {_abedb :=_cgaa ;_abedb .BorderSize =0.2;_fbbd (_bec ,_abedb ,_fdbc ,_gce );};_ffaf ,_gbe :=_gaga (_fdbc ,_gce ,opt .Image ,_cgaa );if _gbe !=nil {return nil ,_gbe ;};_dadd ,_fbg :=_c .GetDict (_fgeg .MK );if _fbg {_dadd .Set ("\u006c",_ffaf .ToPdfObject ());
};_gcd :=_c .MakeDict ();_gcd .Set ("\u0046\u0052\u004d",_ffaf .ToPdfObject ());_ddea :=_da .NewPdfPageResources ();_ddea .ProcSet =_c .MakeArray (_c .MakeName ("\u0050\u0044\u0046"));_ddea .XObject =_gcd ;_bdd :=_fdbc -2;_gfed :=_gce -2;_bec .Add_q ();
_bec .Add_re (1,1,_bdd ,_gfed );_bec .Add_W ();_bec .Add_n ();_bdd -=2;_gfed -=2;_bec .Add_q ();_bec .Add_re (2,2,_bdd ,_gfed );_bec .Add_W ();_bec .Add_n ();_bged :=_g .Min (_bdd /float64 (opt .Image .Width ),_gfed /float64 (opt .Image .Height ));_bec .Add_cm (_bged ,0,0,_bged ,(_fdbc /2)-(float64 (opt .Image .Width )*_bged /2)+2,2);
_bec .Add_Do ("\u0046\u0052\u004d");_bec .Add_Q ();_bec .Add_Q ();_aadda :=_da .NewXObjectForm ();_aadda .FormType =_c .MakeInteger (1);_aadda .Resources =_ddea ;_aadda .BBox =_c .MakeArrayFromFloats ([]float64 {0,0,_fdbc ,_gce });_aadda .Matrix =_c .MakeArrayFromFloats ([]float64 {1.0,0.0,0.0,1.0,0.0,0.0});
_aadda .SetContentStream (_bec .Bytes (),_efad ());_fdff :=_c .MakeDict ();_fdff .Set ("\u004e",_aadda .ToPdfObject ());_fgeg .AP =_fdff ;_gcff .Annotations =append (_gcff .Annotations ,_fgeg );return _gcff ,nil ;};type quadding int ;

// SignatureLine represents a line of information in the signature field appearance.
type SignatureLine struct{Desc string ;Text string ;};func _bd (_fc *_da .PdfAnnotationWidget ,_df *_da .PdfFieldText ,_dbb *_da .PdfPageResources ,_ga AppearanceStyle )(*_c .PdfObjectDictionary ,error ){_aeg :=_da .NewPdfPageResources ();_cbb ,_ec :=_c .GetArray (_fc .Rect );
if !_ec {return nil ,_fb .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_bc ,_gb :=_da .NewPdfRectangle (*_cbb );if _gb !=nil {return nil ,_gb ;};_de ,_cbcb :=_bc .Width (),_bc .Height ();_aad ,_gg :=_de ,_cbcb ;_gbb ,_gfc :=_c .GetDict (_fc .MK );
if _gfc {_dff ,_ :=_c .GetDict (_fc .BS );_bad :=_ga .applyAppearanceCharacteristics (_gbb ,_dff ,nil );if _bad !=nil {return nil ,_bad ;};};_fag ,_gb :=_bg .NewContentStreamParser (_dcb (_df .PdfField )).Parse ();if _gb !=nil {return nil ,_gb ;};_gbg :=_bg .NewContentCreator ();
if _ga .BorderSize > 0{_gcf (_gbg ,_ga ,_de ,_cbcb );};if _ga .DrawAlignmentReticle {_bef :=_ga ;_bef .BorderSize =0.2;_fbbd (_gbg ,_bef ,_de ,_cbcb );};_gbg .Add_BMC ("\u0054\u0078");_gbg .Add_q ();_de ,_cbcb =_ga .applyRotation (_gbb ,_de ,_cbcb ,_gbg );
_gbg .Add_BT ();_acd ,_eg ,_gb :=_ga .processDA (_df .PdfField ,_fag ,_dbb ,_aeg ,_gbg );if _gb !=nil {return nil ,_gb ;};_dee :=_acd .Font ;_gcc :=_acd .Size ;_caf :=_c .MakeName (_acd .Name );_gba :=_gcc ==0;if _gba &&_eg {_gcc =_cbcb *_ga .AutoFontSizeFraction ;
};_fdc :=_dee .Encoder ();if _fdc ==nil {_e .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_fdc =_d .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};_agf ,_gb :=_dee .GetFontDescriptor ();if _gb !=nil {_e .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
};var _dac string ;if _efe ,_aedg :=_c .GetString (_df .V );_aedg {_dac =_efe .Decoded ();};if len (_dac )==0{return nil ,nil ;};_dbdf :=[]string {_dac };_egb :=false ;if _df .Flags ().Has (_da .FieldFlagMultiline ){_egb =true ;_dac =_ea .Replace (_dac ,"\u000d\u000a","\u000a",-1);
_dac =_ea .Replace (_dac ,"\u000d","\u000a",-1);_dbdf =_ea .Split (_dac ,"\u000a");};_bcb :=make ([]string ,len (_dbdf ));copy (_bcb ,_dbdf );_daeb :=_ga .MultilineLineHeight ;_bfg :=0.0;_bbg :=0;if _fdc !=nil {for _gcc >=0{_dgd :=make ([]string ,len (_dbdf ));
copy (_dgd ,_dbdf );_bge :=make ([]string ,len (_bcb ));copy (_bge ,_bcb );_bfg =0.0;_bbg =0;_dd :=len (_dgd );_eeb :=0;for _eeb < _dd {var _fbf float64 ;_gec :=-1;_cgg :=_aea ;if _ga .MarginLeft !=nil {_cgg =*_ga .MarginLeft ;};for _eff ,_aec :=range _dgd [_eeb ]{if _aec ==' '{_gec =_eff ;
_fbf =_cgg ;};_cge ,_cde :=_dee .GetRuneMetrics (_aec );if !_cde {_e .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_aec );
continue ;};_cgg +=_cge .Wx ;if _egb &&!_gba &&_gcc *_cgg /1000.0> _de &&_gec > 0{_fbb :=_dgd [_eeb ][_gec +1:];_fcg :=_bge [_eeb ][_gec +1:];if _eeb < len (_dgd )-1{_dgd =append (_dgd [:_eeb +1],_dgd [_eeb :]...);_dgd [_eeb +1]=_fbb ;_bge =append (_bge [:_eeb +1],_bge [_eeb :]...);
_bge [_eeb +1]=_fcg ;}else {_dgd =append (_dgd ,_fbb );_bge =append (_bge ,_fcg );};_dd ++;_dgd [_eeb ]=_dgd [_eeb ][0:_gec ];_bge [_eeb ]=_bge [_eeb ][0:_gec ];_cgg =_fbf ;break ;};};if _cgg > _bfg {_bfg =_cgg ;};_dgd [_eeb ]=string (_fdc .Encode (_dgd [_eeb ]));
if len (_dgd [_eeb ])> 0{_bbg ++;};_eeb ++;};_befg :=_gcc ;if _bbg > 1{_befg *=_daeb ;};_bfe :=float64 (_bbg )*_befg ;if _gba ||_bfe <=_cbcb {_dbdf =_dgd ;_bcb =_bge ;break ;};_gcc --;};};_fe :=_aea ;if _ga .MarginLeft !=nil {_fe =*_ga .MarginLeft ;};if _gcc ==0||_gba &&_bfg > 0&&_fe +_bfg *_gcc /1000.0> _de {_gcc =0.95*1000.0*(_de -_fe )/_bfg ;
};_fee :=_ge ;{if _af ,_bca :=_c .GetIntVal (_df .Q );_bca {switch _af {case 0:_fee =_ge ;case 1:_fee =_cef ;case 2:_fee =_dad ;default:_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0071\u0075\u0061\u0064\u0064\u0069\u006e\u0067\u003a\u0020%\u0064\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u006c\u0065ft\u0020\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074",_af );
};};};_agc :=_gcc ;if _egb &&_bbg > 1{_agc =_daeb *_gcc ;};var _acc float64 ;if _agf !=nil {_acc ,_gb =_agf .GetCapHeight ();if _gb !=nil {_e .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_gb );
};};if int (_acc )<=0{_e .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_acc =1000;};_gcb :=_acc /1000.0*_gcc ;_aab :=0.0;{_eaf :=float64 (_bbg )*_agc ;if _gba &&_aab +_eaf > _cbcb {_gcc =0.95*(_cbcb -_aab )/float64 (_bbg );_agc =_gcc ;if _egb &&_bbg > 1{_agc =_daeb *_gcc ;};_gcb =_acc /1000.0*_gcc ;_eaf =float64 (_bbg )*_agc ;
};if _cbcb > _eaf {if _egb {if _ga .MultilineVAlignMiddle {_dbdd :=(_cbcb -(_eaf +_gcb ))/2.0;_gad :=_dbdd +_eaf +_gcb -_agc ;_aab =_gad ;if _bbg > 1{_aab =_aab +(_eaf /_gcc *float64 (_bbg ))-_agc -_gcb ;};if _aab < _eaf {_aab =(_cbcb -_gcb )/2.0;};}else {_aab =_cbcb -_agc ;
if _aab > _gcc {_aab -=_gcc *0.5;};};}else {_aab =(_cbcb -_gcb )/2.0;};};};_gbg .Add_Tf (*_caf ,_gcc );_gbg .Add_Td (_fe ,_aab );_aedgb :=_fe ;_gdf :=_fe ;for _fg ,_acfg :=range _dbdf {_cdg :=0.0;for _ ,_gfa :=range _bcb [_fg ]{_geb ,_ecd :=_dee .GetRuneMetrics (_gfa );
if !_ecd {continue ;};_cdg +=_geb .Wx ;};_dbf :=_cdg /1000.0*_gcc ;_caaf :=_de -_dbf ;var _dde float64 ;switch _fee {case _ge :_dde =_aedgb ;case _cef :_dde =_caaf /2;case _dad :_dde =_caaf ;};_fe =_dde -_gdf ;if _fe > 0.0{_gbg .Add_Td (_fe ,0);};_gdf =_dde ;
_gbg .Add_Tj (*_c .MakeString (_acfg ));if _fg < len (_dbdf )-1{_gbg .Add_Td (0,-_gcc *_daeb );};};_gbg .Add_ET ();_gbg .Add_Q ();_gbg .Add_EMC ();_ade :=_da .NewXObjectForm ();_ade .Resources =_aeg ;_ade .BBox =_c .MakeArrayFromFloats ([]float64 {0,0,_aad ,_gg });
_ade .SetContentStream (_gbg .Bytes (),_efad ());_cc :=_c .MakeDict ();_cc .Set ("\u004e",_ade .ToPdfObject ());return _cc ,nil ;};

// TextFieldOptions defines optional parameter for a text field in a form.
type TextFieldOptions struct{MaxLen int ;Value string ;};func _abga (_dfab LineAnnotationDef ,_acbe string )([]byte ,*_da .PdfRectangle ,*_da .PdfRectangle ,error ){_acfe :=_db .Line {X1 :0,Y1 :0,X2 :_dfab .X2 -_dfab .X1 ,Y2 :_dfab .Y2 -_dfab .Y1 ,LineColor :_dfab .LineColor ,Opacity :_dfab .Opacity ,LineWidth :_dfab .LineWidth ,LineEndingStyle1 :_dfab .LineEndingStyle1 ,LineEndingStyle2 :_dfab .LineEndingStyle2 };
_bbff ,_beg ,_fdgc :=_acfe .Draw (_acbe );if _fdgc !=nil {return nil ,nil ,nil ,_fdgc ;};_gggd :=&_da .PdfRectangle {};_gggd .Llx =_dfab .X1 +_beg .Llx ;_gggd .Lly =_dfab .Y1 +_beg .Lly ;_gggd .Urx =_dfab .X1 +_beg .Urx ;_gggd .Ury =_dfab .Y1 +_beg .Ury ;
return _bbff ,_beg ,_gggd ,nil ;};func (_cbg *AppearanceStyle )applyRotation (_cgbe *_c .PdfObjectDictionary ,_beeb ,_dga float64 ,_eae *_bg .ContentCreator )(float64 ,float64 ){if !_cbg .AllowMK {return _beeb ,_dga ;};if _cgbe ==nil {return _beeb ,_dga ;
};_ebb ,_ :=_c .GetNumberAsFloat (_cgbe .Get ("\u0052"));if _ebb ==0{return _beeb ,_dga ;};_cffb :=-_ebb ;_afc :=_db .Path {Points :[]_db .Point {_db .NewPoint (0,0).Rotate (_cffb ),_db .NewPoint (_beeb ,0).Rotate (_cffb ),_db .NewPoint (0,_dga ).Rotate (_cffb ),_db .NewPoint (_beeb ,_dga ).Rotate (_cffb )}}.GetBoundingBox ();
_eae .RotateDeg (_ebb );_eae .Translate (_afc .X ,_afc .Y );return _afc .Width ,_afc .Height ;};func _daf (_gge *_da .PdfAnnotationWidget ,_eedb *_da .PdfFieldButton ,_cccg *_da .PdfPageResources ,_bfc AppearanceStyle )(*_c .PdfObjectDictionary ,error ){_gcbf ,_egc :=_c .GetArray (_gge .Rect );
if !_egc {return nil ,_fb .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_fdbe ,_fed :=_da .NewPdfRectangle (*_gcbf );if _fed !=nil {return nil ,_fed ;};_bea ,_abf :=_fdbe .Width (),_fdbe .Height ();_fdcf ,_efcd :=_bea ,_abf ;
_e .Log .Debug ("\u0043\u0068\u0065\u0063kb\u006f\u0078\u002c\u0020\u0077\u0061\u0020\u0042\u0053\u003a\u0020\u0025\u0076",_gge .BS );_ffb ,_fed :=_da .NewStandard14Font ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");if _fed !=nil {return nil ,_fed ;
};_bed ,_ada :=_c .GetDict (_gge .MK );if _ada {_fbfg ,_ :=_c .GetDict (_gge .BS );_dgc :=_bfc .applyAppearanceCharacteristics (_bed ,_fbfg ,_ffb );if _dgc !=nil {return nil ,_dgc ;};};_cafa :=_da .NewXObjectForm ();{_fga :=_bg .NewContentCreator ();if _bfc .BorderSize > 0{_gcf (_fga ,_bfc ,_bea ,_abf );
};if _bfc .DrawAlignmentReticle {_cf :=_bfc ;_cf .BorderSize =0.2;_fbbd (_fga ,_cf ,_bea ,_abf );};_bea ,_abf =_bfc .applyRotation (_bed ,_bea ,_abf ,_fga );_gfbeg :=_bfc .AutoFontSizeFraction *_abf ;_fca ,_gfbec :=_ffb .GetRuneMetrics (_bfc .CheckmarkRune );
if !_gfbec {return nil ,_fb .New ("\u0067l\u0079p\u0068\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_ecg :=_ffb .Encoder ();_ddf :=_ecg .Encode (string (_bfc .CheckmarkRune ));_fge :=_fca .Wx *_gfbeg /1000.0;_bfee :=705.0;_edb :=_bfee /1000.0*_gfbeg ;
_aaa :=_aea ;if _bfc .MarginLeft !=nil {_aaa =*_bfc .MarginLeft ;};_bff :=1.0;if _fge < _bea {_aaa =(_bea -_fge )/2.0;};if _edb < _abf {_bff =(_abf -_edb )/2.0;};_fga .Add_q ().Add_g (0).Add_BT ().Add_Tf ("\u005a\u0061\u0044\u0062",_gfbeg ).Add_Td (_aaa ,_bff ).Add_Tj (*_c .MakeStringFromBytes (_ddf )).Add_ET ().Add_Q ();
_cafa .Resources =_da .NewPdfPageResources ();_cafa .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_ffb .ToPdfObject ());_cafa .BBox =_c .MakeArrayFromFloats ([]float64 {0,0,_fdcf ,_efcd });_cafa .SetContentStream (_fga .Bytes (),_efad ());};_dgca :=_da .NewXObjectForm ();
{_eac :=_bg .NewContentCreator ();if _bfc .BorderSize > 0{_gcf (_eac ,_bfc ,_bea ,_abf );};_dgca .BBox =_c .MakeArrayFromFloats ([]float64 {0,0,_fdcf ,_efcd });_dgca .SetContentStream (_eac .Bytes (),_efad ());};_gbf :=_c .MakeDict ();_gbf .Set ("\u004f\u0066\u0066",_dgca .ToPdfObject ());
_gbf .Set ("\u0059\u0065\u0073",_cafa .ToPdfObject ());_cec :=_c .MakeDict ();_cec .Set ("\u004e",_gbf );return _cec ,nil ;};func _geag (_dfbb RectangleAnnotationDef )(*_c .PdfObjectDictionary ,*_da .PdfRectangle ,error ){_adgg :=_da .NewXObjectForm ();
_adgg .Resources =_da .NewPdfPageResources ();_gcec :="";if _dfbb .Opacity < 1.0{_edbg :=_c .MakeDict ();_edbg .Set ("\u0063\u0061",_c .MakeFloat (_dfbb .Opacity ));_edbg .Set ("\u0043\u0041",_c .MakeFloat (_dfbb .Opacity ));_dfe :=_adgg .Resources .AddExtGState ("\u0067\u0073\u0031",_edbg );
if _dfe !=nil {_e .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_dfe ;};_gcec ="\u0067\u0073\u0031";};_eagc ,_cdea ,_acec ,_daag :=_dgce (_dfbb ,_gcec );
if _daag !=nil {return nil ,nil ,_daag ;};_daag =_adgg .SetContentStream (_eagc ,nil );if _daag !=nil {return nil ,nil ,_daag ;};_adgg .BBox =_cdea .ToPdfObject ();_egf :=_c .MakeDict ();_egf .Set ("\u004e",_adgg .ToPdfObject ());return _egf ,_acec ,nil ;
};

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_fbc FieldAppearance )GenerateAppearanceDict (form *_da .PdfAcroForm ,field *_da .PdfField ,wa *_da .PdfAnnotationWidget )(*_c .PdfObjectDictionary ,error ){_e .Log .Trace ("\u0047\u0065n\u0065\u0072\u0061\u0074e\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0044i\u0063\u0074\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u0020\u0056:\u0020\u0025\u002b\u0076",field .PartialName (),field .V );
_ ,_ee :=field .GetContext ().(*_da .PdfFieldText );_cb ,_caa :=_c .GetDict (wa .AP );if _caa &&_fbc .OnlyIfMissing &&(!_ee ||!_fbc .RegenerateTextFields ){_e .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");
return _cb ,nil ;};if form .DR ==nil {form .DR =_da .NewPdfPageResources ();};switch _acbd :=field .GetContext ().(type ){case *_da .PdfFieldText :_bbd :=_acbd ;switch {case _bbd .Flags ().Has (_da .FieldFlagPassword ):return nil ,nil ;case _bbd .Flags ().Has (_da .FieldFlagFileSelect ):return nil ,nil ;
case _bbd .Flags ().Has (_da .FieldFlagComb ):if _bbd .MaxLen !=nil {_agb ,_dc :=_dbfd (wa ,_bbd ,form .DR ,_fbc .Style ());if _dc !=nil {return nil ,_dc ;};return _agb ,nil ;};};_gcg ,_ed :=_bd (wa ,_bbd ,form .DR ,_fbc .Style ());if _ed !=nil {return nil ,_ed ;
};return _gcg ,nil ;case *_da .PdfFieldButton :_cbc :=_acbd ;if _cbc .IsCheckbox (){_cga ,_dg :=_daf (wa ,_cbc ,form .DR ,_fbc .Style ());if _dg !=nil {return nil ,_dg ;};return _cga ,nil ;};_e .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041\u004e\u0044\u004c\u0045\u0044 \u0062u\u0074\u0074\u006f\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u002b\u0076",_cbc .GetType ());
case *_da .PdfFieldChoice :_abc :=_acbd ;switch {case _abc .Flags ().Has (_da .FieldFlagCombo ):_abca ,_add :=_dab (form ,wa ,_abc ,_fbc .Style ());if _add !=nil {return nil ,_add ;};return _abca ,nil ;default:_e .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055N\u0048\u0041\u004eD\u004c\u0045\u0044\u0020c\u0068\u006f\u0069\u0063\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074\u0068\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0025\u0073",_abc .Flags ().String ());
};default:_e .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041N\u0044\u004c\u0045\u0044\u0020\u0066\u0069e\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_acbd );};return nil ,nil ;};