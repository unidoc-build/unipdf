//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package annotator provides an interface for creating annotations with appearance
// streams.  It goes beyond the models package which includes definitions of basic annotation models, in that it
// can create the appearance streams which specify the exact appearance as needed by many pdf viewers for consistent
// appearance of the annotations.
// It also contains methods for generating appearance streams for fields via widget annotations.
package annotator ;import (_f "bytes";_dbg "errors";_a "github.com/unidoc/unipdf/v3/common";_ad "github.com/unidoc/unipdf/v3/contentstream";_b "github.com/unidoc/unipdf/v3/contentstream/draw";_g "github.com/unidoc/unipdf/v3/core";_fb "github.com/unidoc/unipdf/v3/internal/textencoding";_fe "github.com/unidoc/unipdf/v3/model";_c "image";_fa "math";_dg "strings";_db "unicode";);

// SignatureFieldOpts represents a set of options used to configure
// an appearance widget dictionary.
type SignatureFieldOpts struct{

// Rect represents the area the signature annotation is displayed on.
Rect []float64 ;

// AutoSize specifies if the content of the appearance should be
// scaled to fit in the annotation rectangle.
AutoSize bool ;

// Font specifies the font of the text content.
Font *_fe .PdfFont ;

// FontSize specifies the size of the text content.
FontSize float64 ;

// LineHeight specifies the height of a line of text in the appearance annotation.
LineHeight float64 ;

// TextColor represents the color of the text content displayed.
TextColor _fe .PdfColor ;

// FillColor represents the background color of the appearance annotation area.
FillColor _fe .PdfColor ;

// BorderSize represents border size of the appearance annotation area.
BorderSize float64 ;

// BorderColor represents the border color of the appearance annotation area.
BorderColor _fe .PdfColor ;

// WatermarkImage specifies the image used as a watermark that will be rendered
// behind the signature.
WatermarkImage _c .Image ;

// Image represents the image used for the signature appearance.
Image _c .Image ;

// Encoder specifies the image encoder used for image signature. Defaults to flate encoder.
Encoder _g .StreamEncoder ;

// ImagePosition specifies the image location relative to the text signature.
ImagePosition SignatureImagePosition ;};

// NewComboboxField generates a new combobox form field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewComboboxField (page *_fe .PdfPage ,name string ,rect []float64 ,opt ComboboxFieldOptions )(*_fe .PdfFieldChoice ,error ){if page ==nil {return nil ,_dbg .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_dbg .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_dbg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_fcgg :=_fe .NewPdfField ();_efga :=&_fe .PdfFieldChoice {};_fcgg .SetContext (_efga );_efga .PdfField =_fcgg ;_efga .T =_g .MakeString (name );_efga .Opt =_g .MakeArray ();for _ ,_ccad :=range opt .Choices {_efga .Opt .Append (_g .MakeString (_ccad ));};_efga .SetFlag (_fe .FieldFlagCombo );_cece :=_fe .NewPdfAnnotationWidget ();_cece .Rect =_g .MakeArrayFromFloats (rect );_cece .P =page .ToPdfObject ();_cece .F =_g .MakeInteger (4);_cece .Parent =_efga .ToPdfObject ();_efga .Annotations =append (_efga .Annotations ,_cece );return _efga ,nil ;};type quadding int ;func _abd (_cddf *_ad .ContentCreator ,_aaff AppearanceStyle ,_edb ,_baf float64 ){_cddf .Add_q ().Add_re (0,0,_edb ,_baf ).Add_w (_aaff .BorderSize ).SetStrokingColor (_aaff .BorderColor ).SetNonStrokingColor (_aaff .FillColor ).Add_B ().Add_Q ();};const (_ac quadding =0;_adg quadding =1;_gfg quadding =2;);func _bdca (_efcb []*SignatureLine ,_cbd *SignatureFieldOpts )(*_g .PdfObjectDictionary ,error ){if _cbd ==nil {_cbd =NewSignatureFieldOpts ();};var _afgb error ;var _afb *_g .PdfObjectName ;_dca :=_cbd .Font ;if _dca !=nil {_cdc ,_ :=_dca .GetFontDescriptor ();if _cdc !=nil {if _fbbf ,_bfc :=_cdc .FontName .(*_g .PdfObjectName );_bfc {_afb =_fbbf ;};};if _afb ==nil {_afb =_g .MakeName ("\u0046\u006f\u006et\u0031");};}else {if _dca ,_afgb =_fe .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");_afgb !=nil {return nil ,_afgb ;};_afb =_g .MakeName ("\u0048\u0065\u006c\u0076");};_abee :=_cbd .FontSize ;if _abee <=0{_abee =10;};if _cbd .LineHeight <=0{_cbd .LineHeight =1;};_ccg :=_cbd .LineHeight *_abee ;_eaad ,_dbd :=_dca .GetRuneMetrics (' ');if !_dbd {return nil ,_dbg .New ("\u0074\u0068e \u0066\u006f\u006et\u0020\u0064\u006f\u0065s n\u006ft \u0068\u0061\u0076\u0065\u0020\u0061\u0020sp\u0061\u0063\u0065\u0020\u0067\u006c\u0079p\u0068");};_efgce :=_eaad .Wx ;var _eec float64 ;var _feda []string ;for _ ,_dgc :=range _efcb {if _dgc .Text ==""{continue ;};_eac :=_dgc .Text ;if _dgc .Desc !=""{_eac =_dgc .Desc +"\u003a\u0020"+_eac ;};_feda =append (_feda ,_eac );var _ddc float64 ;for _ ,_decc :=range _eac {_fabf ,_cagd :=_dca .GetRuneMetrics (_decc );if !_cagd {continue ;};_ddc +=_fabf .Wx ;};if _ddc > _eec {_eec =_ddc ;};};_eec =_eec *_abee /1000.0;_fbd :=float64 (len (_feda ))*_ccg ;_gfe :=_cbd .Image !=nil ;_afdcd :=_cbd .Rect ;if _afdcd ==nil {_afdcd =[]float64 {0,0,_eec ,_fbd };if _gfe {_afdcd [2]=_eec *2;_afdcd [3]=_fbd *2;};_cbd .Rect =_afdcd ;};_fgcg :=_afdcd [2]-_afdcd [0];_becc :=_afdcd [3]-_afdcd [1];_fbcc ,_bcd :=_afdcd ,_afdcd ;var _gca ,_afgf float64 ;if _gfe &&len (_feda )> 0{if _cbd .ImagePosition <=SignatureImageRight {_dcgg :=[]float64 {_afdcd [0],_afdcd [1],_afdcd [0]+(_fgcg /2),_afdcd [3]};_acbb :=[]float64 {_afdcd [0]+(_fgcg /2),_afdcd [1],_afdcd [2],_afdcd [3]};if _cbd .ImagePosition ==SignatureImageLeft {_fbcc ,_bcd =_dcgg ,_acbb ;}else {_fbcc ,_bcd =_acbb ,_dcgg ;};}else {_dggf :=[]float64 {_afdcd [0],_afdcd [1],_afdcd [2],_afdcd [1]+(_becc /2)};_dadb :=[]float64 {_afdcd [0],_afdcd [1]+(_becc /2),_afdcd [2],_afdcd [3]};if _cbd .ImagePosition ==SignatureImageTop {_fbcc ,_bcd =_dadb ,_dggf ;}else {_fbcc ,_bcd =_dggf ,_dadb ;};};};_gca =_bcd [2]-_bcd [0];_afgf =_bcd [3]-_bcd [1];var _aea float64 ;if _cbd .AutoSize {if _eec > _gca ||_fbd > _afgf {_efag :=_fa .Min (_gca /_eec ,_afgf /_fbd );_abee *=_efag ;};_ccg =_cbd .LineHeight *_abee ;_aea +=(_afgf -float64 (len (_feda ))*_ccg )/2;};_gce :=_ad .NewContentCreator ();_gdeb :=_fe .NewPdfPageResources ();_gdeb .SetFontByName (*_afb ,_dca .ToPdfObject ());if _cbd .BorderSize <=0{_cbd .BorderSize =0;_cbd .BorderColor =_fe .NewPdfColorDeviceGray (1);};if _cbd .BorderColor ==nil {_cbd .BorderColor =_fe .NewPdfColorDeviceGray (1);};if _cbd .FillColor ==nil {_cbd .FillColor =_fe .NewPdfColorDeviceGray (1);};_gce .Add_q ().SetNonStrokingColor (_cbd .FillColor ).SetStrokingColor (_cbd .BorderColor ).Add_w (_cbd .BorderSize ).Add_re (_afdcd [0],_afdcd [1],_fgcg ,_becc ).Add_B ().Add_Q ();if _cbd .WatermarkImage !=nil {_egab :=[]float64 {_afdcd [0],_afdcd [1],_afdcd [2],_afdcd [3]};_ecg ,_dgea ,_dea :=_fbbb (_cbd .WatermarkImage ,"\u0049\u006d\u0061\u0067\u0065\u0057\u0061\u0074\u0065r\u006d\u0061\u0072\u006b",_cbd ,_egab ,_gce );if _dea !=nil {return nil ,_dea ;};_gdeb .SetXObjectImageByName (*_ecg ,_dgea );};_gce .Add_q ();_gce .Translate (_bcd [0],_bcd [3]-_ccg -_aea );_gce .Add_BT ();_dcf :=_dca .Encoder ();for _ ,_cafa :=range _feda {var _dfe []byte ;for _ ,_deef :=range _cafa {if _db .IsSpace (_deef ){if len (_dfe )> 0{_gce .SetNonStrokingColor (_cbd .TextColor ).Add_Tf (*_afb ,_abee ).Add_TL (_ccg ).Add_TJ ([]_g .PdfObject {_g .MakeStringFromBytes (_dfe )}...);_dfe =nil ;};_gce .Add_Tf (*_afb ,_abee ).Add_TL (_ccg ).Add_TJ ([]_g .PdfObject {_g .MakeFloat (-_efgce )}...);}else {_dfe =append (_dfe ,_dcf .Encode (string (_deef ))...);};};if len (_dfe )> 0{_gce .SetNonStrokingColor (_cbd .TextColor ).Add_Tf (*_afb ,_abee ).Add_TL (_ccg ).Add_TJ ([]_g .PdfObject {_g .MakeStringFromBytes (_dfe )}...);};_gce .Add_Td (0,-_ccg );};_gce .Add_ET ();_gce .Add_Q ();if _gfe {_gbg ,_gcc ,_dgbf :=_fbbb (_cbd .Image ,"\u0049\u006d\u0061\u0067\u0065\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065",_cbd ,_fbcc ,_gce );if _dgbf !=nil {return nil ,_dgbf ;};_gdeb .SetXObjectImageByName (*_gbg ,_gcc );};_fcc :=_fe .NewXObjectForm ();_fcc .Resources =_gdeb ;_fcc .BBox =_g .MakeArrayFromFloats (_afdcd );_fcc .SetContentStream (_gce .Bytes (),_egdb ());_fdfc :=_g .MakeDict ();_fdfc .Set ("\u004e",_fcc .ToPdfObject ());return _fdfc ,nil ;};func (_dgff *AppearanceStyle )processDA (_gdg *_fe .PdfField ,_ccdg *_ad .ContentStreamOperations ,_ffcb ,_ebac *_fe .PdfPageResources ,_fafe *_ad .ContentCreator )(*AppearanceFont ,bool ,error ){var _fgcc *AppearanceFont ;var _ecde bool ;if _dgff .Fonts !=nil {if _dgff .Fonts .Fallback !=nil {_fgcc =_dgff .Fonts .Fallback ;};if _afea :=_dgff .Fonts .FieldFallbacks ;_afea !=nil {if _dac ,_gea :=_afea [_gdg .PartialName ()];_gea {_fgcc =_dac ;}else if _daeb ,_dedc :=_gdg .FullName ();_dedc ==nil {if _fdb ,_bcb :=_afea [_daeb ];_bcb {_fgcc =_fdb ;};};};_ecde =_dgff .Fonts .ForceReplace ;};var _cecd string ;var _afed float64 ;var _ede bool ;if _ccdg !=nil {for _ ,_ggf :=range *_ccdg {if _ggf .Operand =="\u0054\u0066"&&len (_ggf .Params )==2{if _cagg ,_bgf :=_g .GetNameVal (_ggf .Params [0]);_bgf {_cecd =_cagg ;};if _eefb ,_eade :=_g .GetNumberAsFloat (_ggf .Params [1]);_eade ==nil {_afed =_eefb ;};_ede =true ;continue ;};_fafe .AddOperand (*_ggf );};};var _dddb *AppearanceFont ;var _ccc _g .PdfObject ;if _ecde &&_fgcc !=nil {_dddb =_fgcc ;}else {if _ffcb !=nil &&_cecd !=""{if _fafc ,_cad :=_ffcb .GetFontByName (*_g .MakeName (_cecd ));_cad {if _bgeg ,_ffab :=_fe .NewPdfFontFromPdfObject (_fafc );_ffab ==nil {_ccc =_fafc ;_dddb =&AppearanceFont {Name :_cecd ,Font :_bgeg ,Size :_afed };}else {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u006c\u006fa\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0025\u0076",_ffab );};};};if _dddb ==nil &&_fgcc !=nil {_dddb =_fgcc ;};if _dddb ==nil {_eed ,_eada :=_fe .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");if _eada !=nil {return nil ,false ,_eada ;};_dddb =&AppearanceFont {Name :"\u0048\u0065\u006c\u0076",Font :_eed ,Size :_afed };};};_cfd :=*_g .MakeName (_dddb .Name );if _ccc ==nil {_ccc =_dddb .Font .ToPdfObject ();};if _ffcb !=nil &&!_ffcb .HasFontByName (_cfd ){_ffcb .SetFontByName (_cfd ,_ccc );};if _ebac !=nil &&!_ebac .HasFontByName (_cfd ){_ebac .SetFontByName (_cfd ,_ccc );};return _dddb ,_ede ,nil ;};

// NewSignatureLine returns a new signature line displayed as a part of the
// signature field appearance.
func NewSignatureLine (desc ,text string )*SignatureLine {return &SignatureLine {Desc :desc ,Text :text };};func (_eag *AppearanceStyle )applyRotation (_gfa *_g .PdfObjectDictionary ,_aadf ,_fab float64 ,_gcd *_ad .ContentCreator )(float64 ,float64 ){if !_eag .AllowMK {return _aadf ,_fab ;};if _gfa ==nil {return _aadf ,_fab ;};_bdfg ,_ :=_g .GetNumberAsFloat (_gfa .Get ("\u0052"));if _bdfg ==0{return _aadf ,_fab ;};_egdcf :=-_bdfg ;_gdb :=_b .Path {Points :[]_b .Point {_b .NewPoint (0,0).Rotate (_egdcf ),_b .NewPoint (_aadf ,0).Rotate (_egdcf ),_b .NewPoint (0,_fab ).Rotate (_egdcf ),_b .NewPoint (_aadf ,_fab ).Rotate (_egdcf )}}.GetBoundingBox ();_gcd .RotateDeg (_bdfg );_gcd .Translate (_gdb .X ,_gdb .Y );return _gdb .Width ,_gdb .Height ;};

// SetStyle applies appearance `style` to `fa`.
func (_bf *FieldAppearance )SetStyle (style AppearanceStyle ){_bf ._adc =&style };func _aabf (_feba *_fe .PdfAnnotationWidget ,_cfb *_fe .PdfFieldButton ,_ebg *_fe .PdfPageResources ,_bef AppearanceStyle )(*_g .PdfObjectDictionary ,error ){_cbe ,_dc :=_g .GetArray (_feba .Rect );if !_dc {return nil ,_dbg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_dae ,_abe :=_fe .NewPdfRectangle (*_cbe );if _abe !=nil {return nil ,_abe ;};_dff ,_bbc :=_dae .Width (),_dae .Height ();_gcf ,_caa :=_dff ,_bbc ;_a .Log .Debug ("\u0043\u0068\u0065\u0063kb\u006f\u0078\u002c\u0020\u0077\u0061\u0020\u0042\u0053\u003a\u0020\u0025\u0076",_feba .BS );_gge ,_abe :=_fe .NewStandard14Font ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");if _abe !=nil {return nil ,_abe ;};_dfc ,_cab :=_g .GetDict (_feba .MK );if _cab {_dge ,_ :=_g .GetDict (_feba .BS );_bbaa :=_bef .applyAppearanceCharacteristics (_dfc ,_dge ,_gge );if _bbaa !=nil {return nil ,_bbaa ;};};_acb :=_fe .NewXObjectForm ();{_facb :=_ad .NewContentCreator ();if _bef .BorderSize > 0{_abd (_facb ,_bef ,_dff ,_bbc );};if _bef .DrawAlignmentReticle {_egce :=_bef ;_egce .BorderSize =0.2;_fedb (_facb ,_egce ,_dff ,_bbc );};_dff ,_bbc =_bef .applyRotation (_dfc ,_dff ,_bbc ,_facb );_bga :=_bef .AutoFontSizeFraction *_bbc ;_cfbc ,_cea :=_gge .GetRuneMetrics (_bef .CheckmarkRune );if !_cea {return nil ,_dbg .New ("\u0067l\u0079p\u0068\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_cec :=_gge .Encoder ();_caf :=_cec .Encode (string (_bef .CheckmarkRune ));_caaf :=_cfbc .Wx *_bga /1000.0;_cabc :=705.0;_agff :=_cabc /1000.0*_bga ;_edc :=2.0;_acef :=1.0;if _caaf < _dff {_edc =(_dff -_caaf )/2.0;};if _agff < _bbc {_acef =(_bbc -_agff )/2.0;};_facb .Add_q ().Add_g (0).Add_BT ().Add_Tf ("\u005a\u0061\u0044\u0062",_bga ).Add_Td (_edc ,_acef ).Add_Tj (*_g .MakeStringFromBytes (_caf )).Add_ET ().Add_Q ();_acb .Resources =_fe .NewPdfPageResources ();_acb .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_gge .ToPdfObject ());_acb .BBox =_g .MakeArrayFromFloats ([]float64 {0,0,_gcf ,_caa });_acb .SetContentStream (_facb .Bytes (),_egdb ());};_eeag :=_fe .NewXObjectForm ();{_gbe :=_ad .NewContentCreator ();if _bef .BorderSize > 0{_abd (_gbe ,_bef ,_dff ,_bbc );};_eeag .BBox =_g .MakeArrayFromFloats ([]float64 {0,0,_gcf ,_caa });_eeag .SetContentStream (_gbe .Bytes (),_egdb ());};_dfd :=_g .MakeDict ();_dfd .Set ("\u004f\u0066\u0066",_eeag .ToPdfObject ());_dfd .Set ("\u0059\u0065\u0073",_acb .ToPdfObject ());_baaf :=_g .MakeDict ();_baaf .Set ("\u004e",_dfd );return _baaf ,nil ;};

// CheckboxFieldOptions defines optional parameters for a checkbox field a form.
type CheckboxFieldOptions struct{Checked bool ;};func _dfg (_fagcb *_fe .PdfAcroForm ,_dcb *_fe .PdfAnnotationWidget ,_cgg *_fe .PdfFieldChoice ,_efg AppearanceStyle )(*_g .PdfObjectDictionary ,error ){_eff ,_cegb :=_g .GetArray (_dcb .Rect );if !_cegb {return nil ,_dbg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_acbc ,_ffca :=_fe .NewPdfRectangle (*_eff );if _ffca !=nil {return nil ,_ffca ;};_aade ,_gdff :=_acbc .Width (),_acbc .Height ();_a .Log .Debug ("\u0043\u0068\u006f\u0069\u0063\u0065\u002c\u0020\u0077\u0061\u0020\u0042S\u003a\u0020\u0025\u0076",_dcb .BS );_beed ,_ffca :=_ad .NewContentStreamParser (_cfg (_cgg .PdfField )).Parse ();if _ffca !=nil {return nil ,_ffca ;};_aaf ,_fgc :=_g .GetDict (_dcb .MK );if _fgc {_ggc ,_ :=_g .GetDict (_dcb .BS );_edf :=_efg .applyAppearanceCharacteristics (_aaf ,_ggc ,nil );if _edf !=nil {return nil ,_edf ;};};_caff :=_g .MakeDict ();for _ ,_gec :=range _cgg .Opt .Elements (){if _gggb ,_cafb :=_g .GetArray (_gec );_cafb &&_gggb .Len ()==2{_gec =_gggb .Get (1);};var _efe string ;if _agfd ,_cdfee :=_g .GetString (_gec );_cdfee {_efe =_agfd .Decoded ();}else if _cdfeg ,_edfd :=_g .GetName (_gec );_edfd {_efe =_cdfeg .String ();}else {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u004f\u0070\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u002f\u0073\u0074\u0072\u0069\u006e\u0067 \u002d\u0020\u0025\u0054",_gec );return nil ,_dbg .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u002f\u0073t\u0072\u0069\u006e\u0067");};if len (_efe )> 0{_eaf ,_bca :=_ddb (_cgg .PdfField ,_aade ,_gdff ,_efe ,_efg ,_beed ,_fagcb .DR ,_aaf );if _bca !=nil {return nil ,_bca ;};_caff .Set (*_g .MakeName (_efe ),_eaf .ToPdfObject ());};};_cga :=_g .MakeDict ();_cga .Set ("\u004e",_caff );return _cga ,nil ;};func _ddb (_gaa *_fe .PdfField ,_fbca ,_ecdc float64 ,_bge string ,_deg AppearanceStyle ,_dgg *_ad .ContentStreamOperations ,_agc *_fe .PdfPageResources ,_efbc *_g .PdfObjectDictionary )(*_fe .XObjectForm ,error ){_abf :=_fe .NewPdfPageResources ();_fef ,_ceae :=_fbca ,_ecdc ;_fdfb :=_ad .NewContentCreator ();if _deg .BorderSize > 0{_abd (_fdfb ,_deg ,_fbca ,_ecdc );};if _deg .DrawAlignmentReticle {_fcb :=_deg ;_fcb .BorderSize =0.2;_fedb (_fdfb ,_fcb ,_fbca ,_ecdc );};_fdfb .Add_BMC ("\u0054\u0078");_fdfb .Add_q ();_fdfb .Add_BT ();_fbca ,_ecdc =_deg .applyRotation (_efbc ,_fbca ,_ecdc ,_fdfb );_face ,_cfa ,_bfba :=_deg .processDA (_gaa ,_dgg ,_agc ,_abf ,_fdfb );if _bfba !=nil {return nil ,_bfba ;};_aac :=_face .Font ;_egad :=_face .Size ;_gfgg :=_g .MakeName (_face .Name );_effa :=_egad ==0;if _effa &&_cfa {_egad =_ecdc *_deg .AutoFontSizeFraction ;};_bgbd :=_aac .Encoder ();if _bgbd ==nil {_a .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_bgbd =_fb .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};if len (_bge )==0{return nil ,nil ;};_dfcb :=2.0;_edff :=0.0;if _bgbd !=nil {for _ ,_fgf :=range _bge {_beff ,_fcgb :=_aac .GetRuneMetrics (_fgf );if !_fcgb {_a .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_fgf );continue ;};_edff +=_beff .Wx ;};_bge =string (_bgbd .Encode (_bge ));};if _egad ==0||_effa &&_edff > 0&&_dfcb +_edff *_egad /1000.0> _fbca {_egad =0.95*1000.0*(_fbca -_dfcb )/_edff ;};_gbb :=1.0*_egad ;_aee :=2.0;{_fca :=_gbb ;if _effa &&_aee +_fca > _ecdc {_egad =0.95*(_ecdc -_aee );_gbb =1.0*_egad ;_fca =_gbb ;};if _ecdc > _fca {_aee =(_ecdc -_fca )/2.0;_aee +=1.50;};};_fdfb .Add_Tf (*_gfgg ,_egad );_fdfb .Add_Td (_dfcb ,_aee );_fdfb .Add_Tj (*_g .MakeString (_bge ));_fdfb .Add_ET ();_fdfb .Add_Q ();_fdfb .Add_EMC ();_bad :=_fe .NewXObjectForm ();_bad .Resources =_abf ;_bad .BBox =_g .MakeArrayFromFloats ([]float64 {0,0,_fef ,_ceae });_bad .SetContentStream (_fdfb .Bytes (),_egdb ());return _bad ,nil ;};func _dd (_fd CircleAnnotationDef )(*_g .PdfObjectDictionary ,*_fe .PdfRectangle ,error ){_ade :=_fe .NewXObjectForm ();_ade .Resources =_fe .NewPdfPageResources ();_fbg :="";if _fd .Opacity < 1.0{_dgb :=_g .MakeDict ();_dgb .Set ("\u0063\u0061",_g .MakeFloat (_fd .Opacity ));_dgb .Set ("\u0043\u0041",_g .MakeFloat (_fd .Opacity ));_cb :=_ade .Resources .AddExtGState ("\u0067\u0073\u0031",_dgb );if _cb !=nil {_a .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_cb ;};_fbg ="\u0067\u0073\u0031";};_aa ,_ee ,_fed ,_gf :=_adb (_fd ,_fbg );if _gf !=nil {return nil ,nil ,_gf ;};_gf =_ade .SetContentStream (_aa ,nil );if _gf !=nil {return nil ,nil ,_gf ;};_ade .BBox =_ee .ToPdfObject ();_egb :=_g .MakeDict ();_egb .Set ("\u004e",_ade .ToPdfObject ());return _egb ,_fed ,nil ;};

// SignatureLine represents a line of information in the signature field appearance.
type SignatureLine struct{Desc string ;Text string ;};

// FieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for fields taking into account what value is in the field. A common use case is for generating the
// appearance stream prior to flattening fields.
//
// If `OnlyIfMissing` is true, the field appearance is generated only for fields that do not have an
// appearance stream specified.
// If `RegenerateTextFields` is true, all text fields are regenerated (even if OnlyIfMissing is true).
type FieldAppearance struct{OnlyIfMissing bool ;RegenerateTextFields bool ;_adc *AppearanceStyle ;};

// AppearanceFontStyle defines font style characteristics for form fields,
// used in the filling/flattening process.
type AppearanceFontStyle struct{

// Fallback represents a global font fallback, used for fields which do
// not specify a font in their default appearance (DA). The fallback is
// also used if there is a font specified in the DA, but it is not
// found in the AcroForm resources (DR).
Fallback *AppearanceFont ;

// FieldFallbacks defines font fallbacks for specific fields. The map keys
// represent the names of the fields (which can be specified by their
// partial or full names). Specific field fallback fonts take precedence
// over the global font fallback.
FieldFallbacks map[string ]*AppearanceFont ;

// ForceReplace forces the replacement of fonts in the filling/flattening
// process, even if the default appearance (DA) specify a valid font.
// If no fallback font is provided, setting this field has no effect.
ForceReplace bool ;};func _egdb ()_g .StreamEncoder {return _g .NewFlateEncoder ()};

// AppearanceStyle defines style parameters for appearance stream generation.
type AppearanceStyle struct{

// How much of Rect height to fill when autosizing text.
AutoFontSizeFraction float64 ;

// CheckmarkRune is a rune used for check mark in checkboxes (for ZapfDingbats font).
CheckmarkRune rune ;BorderSize float64 ;BorderColor _fe .PdfColor ;FillColor _fe .PdfColor ;

// Multiplier for lineheight for multi line text.
MultilineLineHeight float64 ;MultilineVAlignMiddle bool ;

// Visual guide checking alignment of field contents (debugging).
DrawAlignmentReticle bool ;

// Allow field MK appearance characteristics to override style settings.
AllowMK bool ;

// Fonts holds appearance styles for fonts.
Fonts *AppearanceFontStyle ;};func _fbbb (_aba _c .Image ,_cadc string ,_ece *SignatureFieldOpts ,_fgccd []float64 ,_fbcf *_ad .ContentCreator )(*_g .PdfObjectName ,*_fe .XObjectImage ,error ){_gfd ,_afbf :=_fe .DefaultImageHandler {}.NewImageFromGoImage (_aba );if _afbf !=nil {return nil ,nil ,_afbf ;};_bbgb ,_afbf :=_fe .NewXObjectImageFromImage (_gfd ,nil ,_ece .Encoder );if _afbf !=nil {return nil ,nil ,_afbf ;};_bdb ,_gacg :=float64 (*_bbgb .Width ),float64 (*_bbgb .Height );_def :=_fgccd [2]-_fgccd [0];_gdd :=_fgccd [3]-_fgccd [1];if _ece .AutoSize {_ddac :=_fa .Min (_def /_bdb ,_gdd /_gacg );_bdb *=_ddac ;_gacg *=_ddac ;_fgccd [0]=_fgccd [0]+(_def /2)-(_bdb /2);_fgccd [1]=_fgccd [1]+(_gdd /2)-(_gacg /2);};var _ffe *_g .PdfObjectName ;if _dag ,_bcbb :=_g .GetName (_bbgb .Name );_bcbb {_ffe =_dag ;}else {_ffe =_g .MakeName (_cadc );};if _fbcf !=nil {_fbcf .Add_q ().Translate (_fgccd [0],_fgccd [1]).Scale (_bdb ,_gacg ).Add_Do (*_ffe ).Add_Q ();}else {return nil ,nil ,_dbg .New ("\u0043\u006f\u006e\u0074en\u0074\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020\u0069\u0073\u0020\u006e\u0075l\u006c");};return _ffe ,_bbgb ,nil ;};

// CircleAnnotationDef defines a circle annotation or ellipse at position (X, Y) and Width and Height.
// The annotation has various style parameters including Fill and Border options and Opacity.
type CircleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_fe .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_fe .PdfColorDeviceRGB ;Opacity float64 ;};func _ddacf (_adca LineAnnotationDef ,_cgda string )([]byte ,*_fe .PdfRectangle ,*_fe .PdfRectangle ,error ){_agd :=_b .Line {X1 :0,Y1 :0,X2 :_adca .X2 -_adca .X1 ,Y2 :_adca .Y2 -_adca .Y1 ,LineColor :_adca .LineColor ,Opacity :_adca .Opacity ,LineWidth :_adca .LineWidth ,LineEndingStyle1 :_adca .LineEndingStyle1 ,LineEndingStyle2 :_adca .LineEndingStyle2 };_abag ,_dfge ,_bdd :=_agd .Draw (_cgda );if _bdd !=nil {return nil ,nil ,nil ,_bdd ;};_dcgb :=&_fe .PdfRectangle {};_dcgb .Llx =_adca .X1 +_dfge .Llx ;_dcgb .Lly =_adca .Y1 +_dfge .Lly ;_dcgb .Urx =_adca .X1 +_dfge .Urx ;_dcgb .Ury =_adca .Y1 +_dfge .Ury ;return _abag ,_dfge ,_dcgb ,nil ;};

// CreateLineAnnotation creates a line annotation object that can be added to page PDF annotations.
func CreateLineAnnotation (lineDef LineAnnotationDef )(*_fe .PdfAnnotation ,error ){_agfb :=_fe .NewPdfAnnotationLine ();_agfb .L =_g .MakeArrayFromFloats ([]float64 {lineDef .X1 ,lineDef .Y1 ,lineDef .X2 ,lineDef .Y2 });_bedf :=_g .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle1 ==_b .LineEndingStyleArrow {_bedf =_g .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_aefd :=_g .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle2 ==_b .LineEndingStyleArrow {_aefd =_g .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_agfb .LE =_g .MakeArray (_bedf ,_aefd );if lineDef .Opacity < 1.0{_agfb .CA =_g .MakeFloat (lineDef .Opacity );};_gacd ,_geed ,_efd :=lineDef .LineColor .R (),lineDef .LineColor .G (),lineDef .LineColor .B ();_agfb .IC =_g .MakeArrayFromFloats ([]float64 {_gacd ,_geed ,_efd });_agfb .C =_g .MakeArrayFromFloats ([]float64 {_gacd ,_geed ,_efd });_gbf :=_fe .NewBorderStyle ();_gbf .SetBorderWidth (lineDef .LineWidth );_agfb .BS =_gbf .ToPdfObject ();_bbb ,_aeaf ,_affg :=_gefe (lineDef );if _affg !=nil {return nil ,_affg ;};_agfb .AP =_bbb ;_agfb .Rect =_g .MakeArrayFromFloats ([]float64 {_aeaf .Llx ,_aeaf .Lly ,_aeaf .Urx ,_aeaf .Ury });return _agfb .PdfAnnotation ,nil ;};func _eef (_fega *_fe .PdfAnnotationWidget ,_cge *_fe .PdfFieldText ,_dgbd *_fe .PdfPageResources ,_eebb AppearanceStyle )(*_g .PdfObjectDictionary ,error ){_bgb :=_fe .NewPdfPageResources ();_cgc ,_daf :=_g .GetArray (_fega .Rect );if !_daf {return nil ,_dbg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_cdg ,_dgbg :=_fe .NewPdfRectangle (*_cgc );if _dgbg !=nil {return nil ,_dgbg ;};_fc ,_ab :=_cdg .Width (),_cdg .Height ();_ddd ,_afe :=_fc ,_ab ;_ggb ,_cf :=_g .GetDict (_fega .MK );if _cf {_faf ,_ :=_g .GetDict (_fega .BS );_gef :=_eebb .applyAppearanceCharacteristics (_ggb ,_faf ,nil );if _gef !=nil {return nil ,_gef ;};};_bbe ,_cf :=_g .GetIntVal (_cge .MaxLen );if !_cf {return nil ,_dbg .New ("\u006d\u0061\u0078\u006c\u0065\u006e\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if _bbe <=0{return nil ,_dbg .New ("\u006d\u0061\u0078\u004c\u0065\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_bdc :=_fc /float64 (_bbe );_afc ,_dgbg :=_ad .NewContentStreamParser (_cfg (_cge .PdfField )).Parse ();if _dgbg !=nil {return nil ,_dgbg ;};_efb :=_ad .NewContentCreator ();if _eebb .BorderSize > 0{_abd (_efb ,_eebb ,_fc ,_ab );};if _eebb .DrawAlignmentReticle {_bfaf :=_eebb ;_bfaf .BorderSize =0.2;_fedb (_efb ,_bfaf ,_fc ,_ab );};_efb .Add_BMC ("\u0054\u0078");_efb .Add_q ();_ ,_ab =_eebb .applyRotation (_ggb ,_fc ,_ab ,_efb );_efb .Add_BT ();_ed ,_dda ,_dgbg :=_eebb .processDA (_cge .PdfField ,_afc ,_dgbd ,_bgb ,_efb );if _dgbg !=nil {return nil ,_dgbg ;};_fea :=_ed .Font ;_gded :=_g .MakeName (_ed .Name );_efc :=_ed .Size ;_bfd :=_efc ==0;if _bfd &&_dda {_efc =_ab *_eebb .AutoFontSizeFraction ;};_ggba :=_fea .Encoder ();if _ggba ==nil {_a .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_ggba =_fb .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};var _ebb string ;if _bec ,_baad :=_g .GetString (_cge .V );_baad {_ebb =_bec .Decoded ();};_efb .Add_Tf (*_gded ,_efc );var _ceg float64 ;for _ ,_gb :=range _ebb {_ebag ,_deb :=_fea .GetRuneMetrics (_gb );if !_deb {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_gb );continue ;};_acf :=_ebag .Wy ;if int (_acf )<=0{_acf =_ebag .Wx ;};if _acf > _ceg {_ceg =_acf ;};};if int (_ceg )==0{_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0064\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006d\u0061x\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0073\u0069\u007a\u0065\u0020- \u0075\u0073\u0069\u006e\u0067\u0020\u0031\u0030\u0030\u0030");_ceg =1000;};_gdf ,_dgbg :=_fea .GetFontDescriptor ();if _dgbg !=nil {_a .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};var _fada float64 ;if _gdf !=nil {_fada ,_dgbg =_gdf .GetCapHeight ();if _dgbg !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_dgbg );};};if int (_fada )<=0{_a .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");_fada =1000.0;};_bee :=_fada /1000.0*_efc ;_ded :=0.0;_fbf :=1.0*_efc *(_ceg /1000.0);{_fcg :=_fbf ;if _bfd &&_ded +_fcg > _ab {_efc =0.95*(_ab -_ded );_bee =_fada /1000.0*_efc ;};if _ab > _bee {_ded =(_ab -_bee )/2.0;};};_efb .Add_Td (0,_ded );if _feb ,_dad :=_g .GetIntVal (_cge .Q );_dad {switch _feb {case 2:if len (_ebb )< _bbe {_fag :=float64 (_bbe -len (_ebb ))*_bdc ;_efb .Add_Td (_fag ,0);};};};for _afeb ,_bgc :=range _ebb {_bcfe :=2.0;_aab :=string (_bgc );if _ggba !=nil {_gda ,_fagc :=_fea .GetRuneMetrics (_bgc );if !_fagc {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_bgc );continue ;};_aab =string (_ggba .Encode (_aab ));_cbcb :=_efc *_gda .Wx /1000.0;_agb :=(_bdc -_cbcb )/2;_bcfe =_agb ;};_efb .Add_Td (_bcfe ,0);_efb .Add_Tj (*_g .MakeString (_aab ));if _afeb !=len (_ebb )-1{_efb .Add_Td (_bdc -_bcfe ,0);};};_efb .Add_ET ();_efb .Add_Q ();_efb .Add_EMC ();_eae :=_fe .NewXObjectForm ();_eae .Resources =_bgb ;_eae .BBox =_g .MakeArrayFromFloats ([]float64 {0,0,_ddd ,_afe });_eae .SetContentStream (_efb .Bytes (),_egdb ());_ffc :=_g .MakeDict ();_ffc .Set ("\u004e",_eae .ToPdfObject ());return _ffc ,nil ;};

// RectangleAnnotationDef is a rectangle defined with a specified Width and Height and a lower left corner at (X,Y).
// The rectangle can optionally have a border and a filling color.
// The Width/Height includes the border (if any specified).
type RectangleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_fe .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_fe .PdfColorDeviceRGB ;Opacity float64 ;};

// TextFieldOptions defines optional parameter for a text field in a form.
type TextFieldOptions struct{MaxLen int ;Value string ;};func _ddf (_dde *_fe .PdfAnnotationWidget ,_dec *_fe .PdfFieldText ,_ceb *_fe .PdfPageResources ,_ged AppearanceStyle )(*_g .PdfObjectDictionary ,error ){_gg :=_fe .NewPdfPageResources ();_fbe ,_gde :=_g .GetArray (_dde .Rect );if !_gde {return nil ,_dbg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_be ,_bd :=_fe .NewPdfRectangle (*_fbe );if _bd !=nil {return nil ,_bd ;};_ba ,_af :=_be .Width (),_be .Height ();_gdeg ,_feg :=_ba ,_af ;_fbgc ,_fdf :=_g .GetDict (_dde .MK );if _fdf {_dee ,_ :=_g .GetDict (_dde .BS );_egdc :=_ged .applyAppearanceCharacteristics (_fbgc ,_dee ,nil );if _egdc !=nil {return nil ,_egdc ;};};_aec ,_bd :=_ad .NewContentStreamParser (_cfg (_dec .PdfField )).Parse ();if _bd !=nil {return nil ,_bd ;};_ccf :=_ad .NewContentCreator ();if _ged .BorderSize > 0{_abd (_ccf ,_ged ,_ba ,_af );};if _ged .DrawAlignmentReticle {_deeb :=_ged ;_deeb .BorderSize =0.2;_fedb (_ccf ,_deeb ,_ba ,_af );};_ccf .Add_BMC ("\u0054\u0078");_ccf .Add_q ();_ba ,_af =_ged .applyRotation (_fbgc ,_ba ,_af ,_ccf );_ccf .Add_BT ();_dba ,_dgf ,_bd :=_ged .processDA (_dec .PdfField ,_aec ,_ceb ,_gg ,_ccf );if _bd !=nil {return nil ,_bd ;};_fg :=_dba .Font ;_ef :=_dba .Size ;_aca :=_g .MakeName (_dba .Name );_afa :=_ef ==0;if _afa &&_dgf {_ef =_af *_ged .AutoFontSizeFraction ;};_fbc :=_fg .Encoder ();if _fbc ==nil {_a .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");_fbc =_fb .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};_da ,_bd :=_fg .GetFontDescriptor ();if _bd !=nil {_a .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};var _ff string ;if _fde ,_bb :=_g .GetString (_dec .V );_bb {_ff =_fde .Decoded ();};if len (_ff )==0{return nil ,nil ;};_fac :=[]string {_ff };_eba :=false ;if _dec .Flags ().Has (_fe .FieldFlagMultiline ){_eba =true ;_ff =_dg .Replace (_ff ,"\u000d\u000a","\u000a",-1);_ff =_dg .Replace (_ff ,"\u000d","\u000a",-1);_fac =_dg .Split (_ff ,"\u000a");};_cca :=0.0;_baa :=0;if _fbc !=nil {_afd :=len (_fac );_bfa :=0;for _bfa < _afd {var _ccd float64 ;_cdfe :=-1;_cde :=0.0;for _fgd ,_bcf :=range _fac [_bfa ]{if _bcf ==' '{_cdfe =_fgd ;_ccd =_cde ;};_bdf ,_bed :=_fg .GetRuneMetrics (_bcf );if !_bed {_a .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_bcf );continue ;};_cde +=_bdf .Wx ;if _eba &&!_afa &&_ef *_cde /1000.0> _ba &&_cdfe > 0{_ace :=_fac [_bfa ][_cdfe +1:];if _bfa < len (_fac )-1{_fac =append (_fac [:_bfa +1],_fac [_bfa :]...);_fac [_bfa +1]=_ace ;}else {_fac =append (_fac ,_ace );};_afd ++;_fac [_bfa ]=_fac [_bfa ][0:_cdfe ];_cde =_ccd ;break ;};};if _cde > _cca {_cca =_cde ;};_fac [_bfa ]=string (_fbc .Encode (_fac [_bfa ]));if len (_fac [_bfa ])> 0{_baa ++;};_bfa ++;};};_add :=2.0;if _ef ==0||_afa &&_cca > 0&&_add +_cca *_ef /1000.0> _ba {_ef =0.95*1000.0*(_ba -_add )/_cca ;};_cdd :=_ac ;{if _adbd ,_bae :=_g .GetIntVal (_dec .Q );_bae {switch _adbd {case 0:_cdd =_ac ;case 1:_cdd =_adg ;case 2:_cdd =_gfg ;default:_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0071\u0075\u0061\u0064\u0064\u0069\u006e\u0067\u003a\u0020%\u0064\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u006c\u0065ft\u0020\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074",_adbd );};};};_gee :=_ged .MultilineLineHeight ;_ccb :=_ef ;if _eba &&_baa > 1{_ccb =_gee *_ef ;};var _fbcd float64 ;if _da !=nil {_fbcd ,_bd =_da .GetCapHeight ();if _bd !=nil {_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_bd );};};if int (_fbcd )<=0{_a .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");_fbcd =1000;};_ega :=_fbcd /1000.0*_ef ;_aaae :=0.0;{_ccbb :=float64 (_baa )*_ccb ;if _afa &&_aaae +_ccbb > _af {_ef =0.95*(_af -_aaae )/float64 (_baa );_ccb =_ef ;if _eba &&_baa > 1{_ccb =_gee *_ef ;};_ega =_fbcd /1000.0*_ef ;_ccbb =float64 (_baa )*_ccb ;};if _af > _ccbb {if _eba {if _ged .MultilineVAlignMiddle {_gagb :=(_af -_ccbb )/2.0;_efa :=_gagb +_ccbb -_ccb ;_aaae =_efa ;}else {_aaae =_af -_ccb ;_aaae -=_ef *0.5;};}else {_aaae =(_af -_ega )/2.0;};};};_ccf .Add_Tf (*_aca ,_ef );_ccf .Add_Td (_add ,_aaae );_gab :=_add ;_gdef :=_add ;for _cgd ,_fda :=range _fac {_gcb :=0.0;for _ ,_efaa :=range _fda {_bag ,_egc :=_fg .GetRuneMetrics (_efaa );if !_egc {continue ;};_gcb +=_bag .Wx ;};_ea :=_gcb /1000.0*_ef ;_ecd :=_ba -_ea ;var _bfb float64 ;switch _cdd {case _ac :_bfb =_gab ;case _adg :_bfb =_ecd /2;case _gfg :_bfb =_ecd ;};_add =_bfb -_gdef ;if _add > 0.0{_ccf .Add_Td (_add ,0);};_gdef =_bfb ;_ccf .Add_Tj (*_g .MakeString (_fda ));if _cgd < len (_fac )-1{_ccf .Add_Td (0,-_ccb *_gee );};};_ccf .Add_ET ();_ccf .Add_Q ();_ccf .Add_EMC ();_ead :=_fe .NewXObjectForm ();_ead .Resources =_gg ;_ead .BBox =_g .MakeArrayFromFloats ([]float64 {0,0,_gdeg ,_feg });_ead .SetContentStream (_ccf .Bytes (),_egdb ());_bba :=_g .MakeDict ();_bba .Set ("\u004e",_ead .ToPdfObject ());return _bba ,nil ;};

// NewTextField generates a new text field with partial name `name` at location
// specified by `rect` on given `page` and with field specific options `opt`.
func NewTextField (page *_fe .PdfPage ,name string ,rect []float64 ,opt TextFieldOptions )(*_fe .PdfFieldText ,error ){if page ==nil {return nil ,_dbg .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_dbg .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_dbg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_egcec :=_fe .NewPdfField ();_aef :=&_fe .PdfFieldText {};_egcec .SetContext (_aef );_aef .PdfField =_egcec ;_aef .T =_g .MakeString (name );if opt .MaxLen > 0{_aef .MaxLen =_g .MakeInteger (int64 (opt .MaxLen ));};if len (opt .Value )> 0{_aef .V =_g .MakeString (opt .Value );};_edd :=_fe .NewPdfAnnotationWidget ();_edd .Rect =_g .MakeArrayFromFloats (rect );_edd .P =page .ToPdfObject ();_edd .F =_g .MakeInteger (4);_edd .Parent =_aef .ToPdfObject ();_aef .Annotations =append (_aef .Annotations ,_edd );return _aef ,nil ;};

// NewSignatureField returns a new signature field with a visible appearance
// containing the specified signature lines and styled according to the
// specified options.
func NewSignatureField (signature *_fe .PdfSignature ,lines []*SignatureLine ,opts *SignatureFieldOpts )(*_fe .PdfFieldSignature ,error ){if signature ==nil {return nil ,_dbg .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_eedb ,_dbad :=_bdca (lines ,opts );if _dbad !=nil {return nil ,_dbad ;};_ada :=_fe .NewPdfFieldSignature (signature );_ada .Rect =_g .MakeArrayFromFloats (opts .Rect );_ada .AP =_eedb ;return _ada ,nil ;};

// NewCheckboxField generates a new checkbox field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewCheckboxField (page *_fe .PdfPage ,name string ,rect []float64 ,opt CheckboxFieldOptions )(*_fe .PdfFieldButton ,error ){if page ==nil {return nil ,_dbg .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_dbg .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_dbg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_dffb ,_cadg :=_fe .NewStandard14Font (_fe .ZapfDingbatsName );if _cadg !=nil {return nil ,_cadg ;};_afdca :=_fe .NewPdfField ();_fgb :=&_fe .PdfFieldButton {};_afdca .SetContext (_fgb );_fgb .PdfField =_afdca ;_fgb .T =_g .MakeString (name );_fgb .SetType (_fe .ButtonTypeCheckbox );_abdd :="\u004f\u0066\u0066";if opt .Checked {_abdd ="\u0059\u0065\u0073";};_fgb .V =_g .MakeName (_abdd );_aeca :=_fe .NewPdfAnnotationWidget ();_aeca .Rect =_g .MakeArrayFromFloats (rect );_aeca .P =page .ToPdfObject ();_aeca .F =_g .MakeInteger (4);_aeca .Parent =_fgb .ToPdfObject ();_agcc :=rect [2]-rect [0];_cgf :=rect [3]-rect [1];var _eacg _f .Buffer ;_eacg .WriteString ("\u0071\u000a");_eacg .WriteString ("\u0030 \u0030\u0020\u0031\u0020\u0072\u0067\n");_eacg .WriteString ("\u0042\u0054\u000a");_eacg .WriteString ("\u002f\u005a\u0061D\u0062\u0020\u0031\u0032\u0020\u0054\u0066\u000a");_eacg .WriteString ("\u0045\u0054\u000a");_eacg .WriteString ("\u0051\u000a");_bafe :=_ad .NewContentCreator ();_bafe .Add_q ();_bafe .Add_rg (0,0,1);_bafe .Add_BT ();_bafe .Add_Tf (*_g .MakeName ("\u005a\u0061\u0044\u0062"),12);_bafe .Add_Td (0,0);_bafe .Add_ET ();_bafe .Add_Q ();_gga :=_fe .NewXObjectForm ();_gga .SetContentStream (_bafe .Bytes (),_g .NewRawEncoder ());_gga .BBox =_g .MakeArrayFromFloats ([]float64 {0,0,_agcc ,_cgf });_gga .Resources =_fe .NewPdfPageResources ();_gga .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_dffb .ToPdfObject ());_bafe =_ad .NewContentCreator ();_bafe .Add_q ();_bafe .Add_re (0,0,_agcc ,_cgf );_bafe .Add_W ().Add_n ();_bafe .Add_rg (0,0,1);_bafe .Translate (0,3.0);_bafe .Add_BT ();_bafe .Add_Tf (*_g .MakeName ("\u005a\u0061\u0044\u0062"),12);_bafe .Add_Td (0,0);_bafe .Add_Tj (*_g .MakeString ("\u0034"));_bafe .Add_ET ();_bafe .Add_Q ();_cded :=_fe .NewXObjectForm ();_cded .SetContentStream (_bafe .Bytes (),_g .NewRawEncoder ());_cded .BBox =_g .MakeArrayFromFloats ([]float64 {0,0,_agcc ,_cgf });_cded .Resources =_fe .NewPdfPageResources ();_cded .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_dffb .ToPdfObject ());_fdbf :=_g .MakeDict ();_fdbf .Set ("\u004f\u0066\u0066",_gga .ToPdfObject ());_fdbf .Set ("\u0059\u0065\u0073",_cded .ToPdfObject ());_eefa :=_g .MakeDict ();_eefa .Set ("\u004e",_fdbf );_aeca .AP =_eefa ;_aeca .AS =_g .MakeName (_abdd );_fgb .Annotations =append (_fgb .Annotations ,_aeca );return _fgb ,nil ;};

// AppearanceFont represents a font used for generating the appearance of a
// field in the filling/flattening process.
type AppearanceFont struct{

// Name represents the name of the font which will be added to the
// AcroForm resources (DR).
Name string ;

// Font represents the actual font used for the field appearance.
Font *_fe .PdfFont ;

// Size represents the size of the font used for the field appearance.
// If size is 0, a default font size will be used.
// The default font size is calculated using the available annotation
// height and the AutoFontSizeFraction of the AppearanceStyle.
Size float64 ;};func _eaca (_gfeg RectangleAnnotationDef )(*_g .PdfObjectDictionary ,*_fe .PdfRectangle ,error ){_fec :=_fe .NewXObjectForm ();_fec .Resources =_fe .NewPdfPageResources ();_dbgd :="";if _gfeg .Opacity < 1.0{_cdgg :=_g .MakeDict ();_cdgg .Set ("\u0063\u0061",_g .MakeFloat (_gfeg .Opacity ));_cdgg .Set ("\u0043\u0041",_g .MakeFloat (_gfeg .Opacity ));_cae :=_fec .Resources .AddExtGState ("\u0067\u0073\u0031",_cdgg );if _cae !=nil {_a .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_cae ;};_dbgd ="\u0067\u0073\u0031";};_beda ,_abg ,_dgee ,_cbb :=_gffc (_gfeg ,_dbgd );if _cbb !=nil {return nil ,nil ,_cbb ;};_cbb =_fec .SetContentStream (_beda ,nil );if _cbb !=nil {return nil ,nil ,_cbb ;};_fec .BBox =_abg .ToPdfObject ();_edba :=_g .MakeDict ();_edba .Set ("\u004e",_fec .ToPdfObject ());return _edba ,_dgee ,nil ;};

// LineAnnotationDef defines a line between point 1 (X1,Y1) and point 2 (X2,Y2).  The line ending styles can be none
// (regular line), or arrows at either end.  The line also has a specified width, color and opacity.
type LineAnnotationDef struct{X1 float64 ;Y1 float64 ;X2 float64 ;Y2 float64 ;LineColor *_fe .PdfColorDeviceRGB ;Opacity float64 ;LineWidth float64 ;LineEndingStyle1 _b .LineEndingStyle ;LineEndingStyle2 _b .LineEndingStyle ;};func _cfg (_efgc *_fe .PdfField )string {if _efgc ==nil {return "";};_baafd ,_acg :=_efgc .GetContext ().(*_fe .PdfFieldText );if !_acg {return _cfg (_efgc .Parent );};if _baafd .DA !=nil {return _baafd .DA .Str ();};return _cfg (_baafd .Parent );};func _gffc (_fegf RectangleAnnotationDef ,_bbcd string )([]byte ,*_fe .PdfRectangle ,*_fe .PdfRectangle ,error ){_dedf :=_b .Rectangle {X :0,Y :0,Width :_fegf .Width ,Height :_fegf .Height ,FillEnabled :_fegf .FillEnabled ,FillColor :_fegf .FillColor ,BorderEnabled :_fegf .BorderEnabled ,BorderWidth :2*_fegf .BorderWidth ,BorderColor :_fegf .BorderColor ,Opacity :_fegf .Opacity };_befg ,_cff ,_dbca :=_dedf .Draw (_bbcd );if _dbca !=nil {return nil ,nil ,nil ,_dbca ;};_aeg :=&_fe .PdfRectangle {};_aeg .Llx =_fegf .X +_cff .Llx ;_aeg .Lly =_fegf .Y +_cff .Lly ;_aeg .Urx =_fegf .X +_cff .Urx ;_aeg .Ury =_fegf .Y +_cff .Ury ;return _befg ,_cff ,_aeg ,nil ;};

// ComboboxFieldOptions defines optional parameters for a combobox form field.
type ComboboxFieldOptions struct{

// Choices is the list of string values that can be selected.
Choices []string ;};

// CreateRectangleAnnotation creates a rectangle annotation object that can be added to page PDF annotations.
func CreateRectangleAnnotation (rectDef RectangleAnnotationDef )(*_fe .PdfAnnotation ,error ){_eagf :=_fe .NewPdfAnnotationSquare ();if rectDef .BorderEnabled {_efagf ,_gdbg ,_afde :=rectDef .BorderColor .R (),rectDef .BorderColor .G (),rectDef .BorderColor .B ();_eagf .C =_g .MakeArrayFromFloats ([]float64 {_efagf ,_gdbg ,_afde });_faaa :=_fe .NewBorderStyle ();_faaa .SetBorderWidth (rectDef .BorderWidth );_eagf .BS =_faaa .ToPdfObject ();};if rectDef .FillEnabled {_egae ,_ebaf ,_fbeb :=rectDef .FillColor .R (),rectDef .FillColor .G (),rectDef .FillColor .B ();_eagf .IC =_g .MakeArrayFromFloats ([]float64 {_egae ,_ebaf ,_fbeb });}else {_eagf .IC =_g .MakeArrayFromIntegers ([]int {});};if rectDef .Opacity < 1.0{_eagf .CA =_g .MakeFloat (rectDef .Opacity );};_aga ,_ebgc ,_dddf :=_eaca (rectDef );if _dddf !=nil {return nil ,_dddf ;};_eagf .AP =_aga ;_eagf .Rect =_g .MakeArrayFromFloats ([]float64 {_ebgc .Llx ,_ebgc .Lly ,_ebgc .Urx ,_ebgc .Ury });return _eagf .PdfAnnotation ,nil ;};func _adb (_bc CircleAnnotationDef ,_ag string )([]byte ,*_fe .PdfRectangle ,*_fe .PdfRectangle ,error ){_gc :=_b .Circle {X :_bc .X ,Y :_bc .Y ,Width :_bc .Width ,Height :_bc .Height ,FillEnabled :_bc .FillEnabled ,FillColor :_bc .FillColor ,BorderEnabled :_bc .BorderEnabled ,BorderWidth :_bc .BorderWidth ,BorderColor :_bc .BorderColor ,Opacity :_bc .Opacity };_de ,_cdf ,_eea :=_gc .Draw (_ag );if _eea !=nil {return nil ,nil ,nil ,_eea ;};_fbgf :=&_fe .PdfRectangle {};_fbgf .Llx =_bc .X +_cdf .Llx ;_fbgf .Lly =_bc .Y +_cdf .Lly ;_fbgf .Urx =_bc .X +_cdf .Urx ;_fbgf .Ury =_bc .Y +_cdf .Ury ;return _de ,_cdf ,_fbgf ,nil ;};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_gd FieldAppearance )Style ()AppearanceStyle {if _gd ._adc !=nil {return *_gd ._adc ;};return AppearanceStyle {AutoFontSizeFraction :0.65,CheckmarkRune :'✔',BorderSize :0.0,BorderColor :_fe .NewPdfColorDeviceGray (0),FillColor :_fe .NewPdfColorDeviceGray (1),MultilineLineHeight :1.2,MultilineVAlignMiddle :false ,DrawAlignmentReticle :false ,AllowMK :true };};func _fedb (_aacc *_ad .ContentCreator ,_fcbc AppearanceStyle ,_dab ,_bac float64 ){_aacc .Add_q ().Add_re (0,0,_dab ,_bac ).Add_re (0,_bac /2,_dab ,_bac /2).Add_re (0,0,_dab ,_bac ).Add_re (_dab /2,0,_dab /2,_bac ).Add_w (_fcbc .BorderSize ).SetStrokingColor (_fcbc .BorderColor ).SetNonStrokingColor (_fcbc .FillColor ).Add_B ().Add_Q ();};

// CreateCircleAnnotation creates a circle/ellipse annotation object with appearance stream that can be added to
// page PDF annotations.
func CreateCircleAnnotation (circDef CircleAnnotationDef )(*_fe .PdfAnnotation ,error ){_adf :=_fe .NewPdfAnnotationCircle ();if circDef .BorderEnabled {_cc ,_e ,_eg :=circDef .BorderColor .R (),circDef .BorderColor .G (),circDef .BorderColor .B ();_adf .C =_g .MakeArrayFromFloats ([]float64 {_cc ,_e ,_eg });_ec :=_fe .NewBorderStyle ();_ec .SetBorderWidth (circDef .BorderWidth );_adf .BS =_ec .ToPdfObject ();};if circDef .FillEnabled {_eb ,_ga ,_gag :=circDef .FillColor .R (),circDef .FillColor .G (),circDef .FillColor .B ();_adf .IC =_g .MakeArrayFromFloats ([]float64 {_eb ,_ga ,_gag });}else {_adf .IC =_g .MakeArrayFromIntegers ([]int {});};if circDef .Opacity < 1.0{_adf .CA =_g .MakeFloat (circDef .Opacity );};_ca ,_cd ,_ce :=_dd (circDef );if _ce !=nil {return nil ,_ce ;};_adf .AP =_ca ;_adf .Rect =_g .MakeArrayFromFloats ([]float64 {_cd .Llx ,_cd .Lly ,_cd .Urx ,_cd .Ury });return _adf .PdfAnnotation ,nil ;};const (SignatureImageLeft SignatureImagePosition =iota ;SignatureImageRight ;SignatureImageTop ;SignatureImageBottom ;);

// NewSignatureFieldOpts returns a new initialized instance of options
// used to generate a signature appearance.
func NewSignatureFieldOpts ()*SignatureFieldOpts {return &SignatureFieldOpts {Font :_fe .DefaultFont (),FontSize :10,LineHeight :1,AutoSize :true ,TextColor :_fe .NewPdfColorDeviceGray (0),BorderColor :_fe .NewPdfColorDeviceGray (0),FillColor :_fe .NewPdfColorDeviceGray (1),Encoder :_g .NewFlateEncoder (),ImagePosition :SignatureImageLeft };};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_fadf FieldAppearance )WrapContentStream (page *_fe .PdfPage )error {_afdc ,_dfga :=page .GetAllContentStreams ();if _dfga !=nil {return _dfga ;};_fcgd :=_ad .NewContentStreamParser (_afdc );_bbg ,_dfga :=_fcgd .Parse ();if _dfga !=nil {return _dfga ;};_bbg .WrapIfNeeded ();_fcbb :=[]string {_bbg .String ()};return page .SetContentStreams (_fcbb ,_egdb ());};func _gefe (_fagd LineAnnotationDef )(*_g .PdfObjectDictionary ,*_fe .PdfRectangle ,error ){_gff :=_fe .NewXObjectForm ();_gff .Resources =_fe .NewPdfPageResources ();_efgd :="";if _fagd .Opacity < 1.0{_fdbc :=_g .MakeDict ();_fdbc .Set ("\u0063\u0061",_g .MakeFloat (_fagd .Opacity ));_egba :=_gff .Resources .AddExtGState ("\u0067\u0073\u0031",_fdbc );if _egba !=nil {_a .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_egba ;};_efgd ="\u0067\u0073\u0031";};_effb ,_cgdf ,_abb ,_efaf :=_ddacf (_fagd ,_efgd );if _efaf !=nil {return nil ,nil ,_efaf ;};_efaf =_gff .SetContentStream (_effb ,nil );if _efaf !=nil {return nil ,nil ,_efaf ;};_gff .BBox =_cgdf .ToPdfObject ();_aed :=_g .MakeDict ();_aed .Set ("\u004e",_gff .ToPdfObject ());return _aed ,_abb ,nil ;};func (_cabg *AppearanceStyle )applyAppearanceCharacteristics (_eeg *_g .PdfObjectDictionary ,_dbae *_g .PdfObjectDictionary ,_eaa *_fe .PdfFont )error {if !_cabg .AllowMK {return nil ;};if CA ,_gac :=_g .GetString (_eeg .Get ("\u0043\u0041"));_gac &&_eaa !=nil {_daa :=CA .Bytes ();if len (_daa )!=0{_acd :=[]rune (_eaa .Encoder ().Decode (_daa ));if len (_acd )==1{_cabg .CheckmarkRune =_acd [0];};};};if BC ,_bgee :=_g .GetArray (_eeg .Get ("\u0042\u0043"));_bgee {_cag ,_aff :=BC .ToFloat64Array ();if _aff !=nil {return _aff ;};switch len (_cag ){case 1:_cabg .BorderColor =_fe .NewPdfColorDeviceGray (_cag [0]);case 3:_cabg .BorderColor =_fe .NewPdfColorDeviceRGB (_cag [0],_cag [1],_cag [2]);case 4:_cabg .BorderColor =_fe .NewPdfColorDeviceCMYK (_cag [0],_cag [1],_cag [2],_cag [3]);default:_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0043\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_cag ));};if _dbae !=nil {if _eee ,_afad :=_g .GetNumberAsFloat (_dbae .Get ("\u0057"));_afad ==nil {_cabg .BorderSize =_eee ;};};};if BG ,_aaag :=_g .GetArray (_eeg .Get ("\u0042\u0047"));_aaag {_afg ,_gfc :=BG .ToFloat64Array ();if _gfc !=nil {return _gfc ;};switch len (_afg ){case 1:_cabg .FillColor =_fe .NewPdfColorDeviceGray (_afg [0]);case 3:_cabg .FillColor =_fe .NewPdfColorDeviceRGB (_afg [0],_afg [1],_afg [2]);case 4:_cabg .FillColor =_fe .NewPdfColorDeviceCMYK (_afg [0],_afg [1],_afg [2],_afg [3]);default:_a .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0047\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_afg ));};};return nil ;};

// SignatureImagePosition specifies the image signature location relative to the text signature.
// If text signature is not defined, this position will be ignored.
type SignatureImagePosition int ;

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_adee FieldAppearance )GenerateAppearanceDict (form *_fe .PdfAcroForm ,field *_fe .PdfField ,wa *_fe .PdfAnnotationWidget )(*_g .PdfObjectDictionary ,error ){_a .Log .Trace ("\u0047\u0065n\u0065\u0072\u0061\u0074e\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0044i\u0063\u0074\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u0020\u0056:\u0020\u0025\u002b\u0076",field .PartialName (),field .V );_ ,_cg :=field .GetContext ().(*_fe .PdfFieldText );_df ,_bce :=_g .GetDict (wa .AP );if _bce &&_adee .OnlyIfMissing &&(!_cg ||!_adee .RegenerateTextFields ){_a .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");return _df ,nil ;};if form .DR ==nil {form .DR =_fe .NewPdfPageResources ();};switch _egbb :=field .GetContext ().(type ){case *_fe .PdfFieldText :_egd :=_egbb ;switch {case _egd .Flags ().Has (_fe .FieldFlagPassword ):return nil ,nil ;case _egd .Flags ().Has (_fe .FieldFlagFileSelect ):return nil ,nil ;case _egd .Flags ().Has (_fe .FieldFlagComb ):if _egd .MaxLen !=nil {_agg ,_cbc :=_eef (wa ,_egd ,form .DR ,_adee .Style ());if _cbc !=nil {return nil ,_cbc ;};return _agg ,nil ;};};_bg ,_agf :=_ddf (wa ,_egd ,form .DR ,_adee .Style ());if _agf !=nil {return nil ,_agf ;};return _bg ,nil ;case *_fe .PdfFieldButton :_fae :=_egbb ;if _fae .IsCheckbox (){_ge ,_ae :=_aabf (wa ,_fae ,form .DR ,_adee .Style ());if _ae !=nil {return nil ,_ae ;};return _ge ,nil ;};_a .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041\u004e\u0044\u004c\u0045\u0044 \u0062u\u0074\u0074\u006f\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u002b\u0076",_fae .GetType ());case *_fe .PdfFieldChoice :_faa :=_egbb ;switch {case _faa .Flags ().Has (_fe .FieldFlagCombo ):_aaa ,_dbc :=_dfg (form ,wa ,_faa ,_adee .Style ());if _dbc !=nil {return nil ,_dbc ;};return _aaa ,nil ;default:_a .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055N\u0048\u0041\u004eD\u004c\u0045\u0044\u0020c\u0068\u006f\u0069\u0063\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074\u0068\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0025\u0073",_faa .Flags ().String ());};default:_a .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041N\u0044\u004c\u0045\u0044\u0020\u0066\u0069e\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_egbb );};return nil ,nil ;};