//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package annotator provides an interface for creating annotations with appearance
// streams.  It goes beyond the models package which includes definitions of basic annotation models, in that it
// can create the appearance streams which specify the exact appearance as needed by many pdf viewers for consistent
// appearance of the annotations.
// It also contains methods for generating appearance streams for fields via widget annotations.
package annotator ;import (_cg "bytes";_eg "errors";_cd "github.com/unidoc/unipdf/v3/common";_ce "github.com/unidoc/unipdf/v3/contentstream";_eb "github.com/unidoc/unipdf/v3/contentstream/draw";_fe "github.com/unidoc/unipdf/v3/core";_g "github.com/unidoc/unipdf/v3/internal/textencoding";
_af "github.com/unidoc/unipdf/v3/model";_a "image";_e "math";_f "strings";_cdc "unicode";);

// SignatureFieldOpts represents a set of options used to configure
// an appearance widget dictionary.
type SignatureFieldOpts struct{

// Rect represents the area the signature annotation is displayed on.
Rect []float64 ;

// AutoSize specifies if the content of the appearance should be
// scaled to fit in the annotation rectangle.
AutoSize bool ;

// Font specifies the font of the text content.
Font *_af .PdfFont ;

// FontSize specifies the size of the text content.
FontSize float64 ;

// LineHeight specifies the height of a line of text in the appearance annotation.
LineHeight float64 ;

// TextColor represents the color of the text content displayed.
TextColor _af .PdfColor ;

// FillColor represents the background color of the appearance annotation area.
FillColor _af .PdfColor ;

// BorderSize represents border size of the appearance annotation area.
BorderSize float64 ;

// BorderColor represents the border color of the appearance annotation area.
BorderColor _af .PdfColor ;

// WatermarkImage specifies the image used as a watermark that will be rendered
// behind the signature.
WatermarkImage _a .Image ;

// Image represents the image used for the signature appearance.
Image _a .Image ;

// Encoder specifies the image encoder used for image signature. Defaults to flate encoder.
Encoder _fe .StreamEncoder ;

// ImagePosition specifies the image location relative to the text signature.
ImagePosition SignatureImagePosition ;};const (_egd quadding =0;_gae quadding =1;_ag quadding =2;_ceg float64 =2.0;);func _ebfc (_fefa [][]_eb .CubicBezierCurve ,_aaeg *_af .PdfColorDeviceRGB ,_cafe float64 )([]byte ,*_af .PdfRectangle ,error ){_dbc :=_ce .NewContentCreator ();
_dbc .Add_q ().SetStrokingColor (_aaeg ).Add_w (_cafe );_bae :=_eb .NewCubicBezierPath ();for _ ,_feag :=range _fefa {_bae .Curves =append (_bae .Curves ,_feag ...);for _geg ,_abbb :=range _feag {if _geg ==0{_dbc .Add_m (_abbb .P0 .X ,_abbb .P0 .Y );}else {_dbc .Add_l (_abbb .P0 .X ,_abbb .P0 .Y );
};_dbc .Add_c (_abbb .P1 .X ,_abbb .P1 .Y ,_abbb .P2 .X ,_abbb .P2 .Y ,_abbb .P3 .X ,_abbb .P3 .Y );};};_dbc .Add_S ().Add_Q ();return _dbc .Bytes (),_bae .GetBoundingBox ().ToPdfRectangle (),nil ;};func _aafa (_feab *_af .PdfFieldButton ,_gfea *_af .PdfAnnotationWidget ,_bffc AppearanceStyle )(*_fe .PdfObjectDictionary ,error ){_abe ,_aad :=_fe .GetArray (_gfea .Rect );
if !_aad {return nil ,_eg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_bge ,_ffd :=_af .NewPdfRectangle (*_abe );if _ffd !=nil {return nil ,_ffd ;};_fbg ,_fegc :=_bge .Width (),_bge .Height ();_faa :=_ce .NewContentCreator ();
if _bffc .BorderSize > 0{_bfbd (_faa ,_bffc ,_fbg ,_fegc );};if _bffc .DrawAlignmentReticle {_fde :=_bffc ;_fde .BorderSize =0.2;_aabbc (_faa ,_fde ,_fbg ,_fegc );};_abgbf :=_feab .GetFillImage ();_efdf ,_ffd :=_ebggd (_fbg ,_fegc ,_abgbf ,_bffc );if _ffd !=nil {return nil ,_ffd ;
};_bcg ,_ecfe :=_fe .GetDict (_gfea .MK );if _ecfe {_bcg .Set ("\u006c",_efdf .ToPdfObject ());};_gcdd :=_fe .MakeDict ();_gcdd .Set ("\u0046\u0052\u004d",_efdf .ToPdfObject ());_eab :=_af .NewPdfPageResources ();_eab .ProcSet =_fe .MakeArray (_fe .MakeName ("\u0050\u0044\u0046"));
_eab .XObject =_gcdd ;_fagc :=_fbg -2;_cfbc :=_fegc -2;_faa .Add_q ();_faa .Add_re (1,1,_fagc ,_cfbc );_faa .Add_W ();_faa .Add_n ();_fagc -=2;_cfbc -=2;_faa .Add_q ();_faa .Add_re (2,2,_fagc ,_cfbc );_faa .Add_W ();_faa .Add_n ();_ceff :=_e .Min (_fagc /float64 (_abgbf .Width ),_cfbc /float64 (_abgbf .Height ));
_faa .Add_cm (_ceff ,0,0,_ceff ,(_fbg /2)-(float64 (_abgbf .Width )*_ceff /2)+2,2);_faa .Add_Do ("\u0046\u0052\u004d");_faa .Add_Q ();_faa .Add_Q ();_adeb :=_af .NewXObjectForm ();_adeb .FormType =_fe .MakeInteger (1);_adeb .Resources =_eab ;_adeb .BBox =_fe .MakeArrayFromFloats ([]float64 {0,0,_fbg ,_fegc });
_adeb .Matrix =_fe .MakeArrayFromFloats ([]float64 {1.0,0.0,0.0,1.0,0.0,0.0});_adeb .SetContentStream (_faa .Bytes (),_aabg ());_fcb :=_fe .MakeDict ();_fcb .Set ("\u004e",_adeb .ToPdfObject ());return _fcb ,nil ;};func (_cff *AppearanceStyle )applyRotation (_adf *_fe .PdfObjectDictionary ,_ecd ,_baga float64 ,_gac *_ce .ContentCreator )(float64 ,float64 ){if !_cff .AllowMK {return _ecd ,_baga ;
};if _adf ==nil {return _ecd ,_baga ;};_bfed ,_ :=_fe .GetNumberAsFloat (_adf .Get ("\u0052"));if _bfed ==0{return _ecd ,_baga ;};_eed :=-_bfed ;_cgg :=_eb .Path {Points :[]_eb .Point {_eb .NewPoint (0,0).Rotate (_eed ),_eb .NewPoint (_ecd ,0).Rotate (_eed ),_eb .NewPoint (0,_baga ).Rotate (_eed ),_eb .NewPoint (_ecd ,_baga ).Rotate (_eed )}}.GetBoundingBox ();
_gac .RotateDeg (_bfed );_gac .Translate (_cgg .X ,_cgg .Y );return _cgg .Width ,_cgg .Height ;};func _dc (_fee CircleAnnotationDef ,_ad string )([]byte ,*_af .PdfRectangle ,*_af .PdfRectangle ,error ){_gg :=_eb .Circle {X :_fee .X ,Y :_fee .Y ,Width :_fee .Width ,Height :_fee .Height ,FillEnabled :_fee .FillEnabled ,FillColor :_fee .FillColor ,BorderEnabled :_fee .BorderEnabled ,BorderWidth :_fee .BorderWidth ,BorderColor :_fee .BorderColor ,Opacity :_fee .Opacity };
_bbd ,_fd ,_ab :=_gg .Draw (_ad );if _ab !=nil {return nil ,nil ,nil ,_ab ;};_cb :=&_af .PdfRectangle {};_cb .Llx =_fee .X +_fd .Llx ;_cb .Lly =_fee .Y +_fd .Lly ;_cb .Urx =_fee .X +_fd .Urx ;_cb .Ury =_fee .Y +_fd .Ury ;return _bbd ,_fd ,_cb ,nil ;};func _ga (_df CircleAnnotationDef )(*_fe .PdfObjectDictionary ,*_af .PdfRectangle ,error ){_fc :=_af .NewXObjectForm ();
_fc .Resources =_af .NewPdfPageResources ();_gd :="";if _df .Opacity < 1.0{_cdg :=_fe .MakeDict ();_cdg .Set ("\u0063\u0061",_fe .MakeFloat (_df .Opacity ));_cdg .Set ("\u0043\u0041",_fe .MakeFloat (_df .Opacity ));_dg :=_fc .Resources .AddExtGState ("\u0067\u0073\u0031",_cdg );
if _dg !=nil {_cd .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_dg ;};_gd ="\u0067\u0073\u0031";};_bab ,_ff ,_gc ,_aaga :=_dc (_df ,_gd );
if _aaga !=nil {return nil ,nil ,_aaga ;};_aaga =_fc .SetContentStream (_bab ,nil );if _aaga !=nil {return nil ,nil ,_aaga ;};_fc .BBox =_ff .ToPdfObject ();_de :=_fe .MakeDict ();_de .Set ("\u004e",_fc .ToPdfObject ());return _de ,_gc ,nil ;};type quadding int ;


// NewImageField generates a new image field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewImageField (page *_af .PdfPage ,name string ,rect []float64 ,opt ImageFieldOptions )(*_af .PdfFieldButton ,error ){if page ==nil {return nil ,_eg .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_eg .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_eg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_gadg :=_af .NewPdfField ();_cbb :=&_af .PdfFieldButton {};_cbb .PdfField =_gadg ;_gadg .SetContext (_cbb );_cbb .SetType (_af .ButtonTypePush );_cbb .T =_fe .MakeString (name );_gff :=_af .NewPdfAnnotationWidget ();_gff .Rect =_fe .MakeArrayFromFloats (rect );
_gff .P =page .ToPdfObject ();_gff .F =_fe .MakeInteger (4);_gff .Parent =_cbb .ToPdfObject ();_dad :=rect [2]-rect [0];_cgb :=rect [3]-rect [1];_cgebf :=opt ._dbbee ;_ddce :=_ce .NewContentCreator ();if _cgebf .BorderSize > 0{_bfbd (_ddce ,_cgebf ,_dad ,_cgb );
};if _cgebf .DrawAlignmentReticle {_fegf :=_cgebf ;_fegf .BorderSize =0.2;_aabbc (_ddce ,_fegf ,_dad ,_cgb );};_gaf ,_ecc :=_ebggd (_dad ,_cgb ,opt .Image ,_cgebf );if _ecc !=nil {return nil ,_ecc ;};_cdcb ,_afab :=_fe .GetDict (_gff .MK );if _afab {_cdcb .Set ("\u006c",_gaf .ToPdfObject ());
};_ggbaf :=_fe .MakeDict ();_ggbaf .Set ("\u0046\u0052\u004d",_gaf .ToPdfObject ());_deb :=_af .NewPdfPageResources ();_deb .ProcSet =_fe .MakeArray (_fe .MakeName ("\u0050\u0044\u0046"));_deb .XObject =_ggbaf ;_ebef :=_dad -2;_bbge :=_cgb -2;_ddce .Add_q ();
_ddce .Add_re (1,1,_ebef ,_bbge );_ddce .Add_W ();_ddce .Add_n ();_ebef -=2;_bbge -=2;_ddce .Add_q ();_ddce .Add_re (2,2,_ebef ,_bbge );_ddce .Add_W ();_ddce .Add_n ();_bdd :=_e .Min (_ebef /float64 (opt .Image .Width ),_bbge /float64 (opt .Image .Height ));
_ddce .Add_cm (_bdd ,0,0,_bdd ,(_dad /2)-(float64 (opt .Image .Width )*_bdd /2)+2,2);_ddce .Add_Do ("\u0046\u0052\u004d");_ddce .Add_Q ();_ddce .Add_Q ();_dbda :=_af .NewXObjectForm ();_dbda .FormType =_fe .MakeInteger (1);_dbda .Resources =_deb ;_dbda .BBox =_fe .MakeArrayFromFloats ([]float64 {0,0,_dad ,_cgb });
_dbda .Matrix =_fe .MakeArrayFromFloats ([]float64 {1.0,0.0,0.0,1.0,0.0,0.0});_dbda .SetContentStream (_ddce .Bytes (),_aabg ());_ecbf :=_fe .MakeDict ();_ecbf .Set ("\u004e",_dbda .ToPdfObject ());_gff .AP =_ecbf ;_cbb .Annotations =append (_cbb .Annotations ,_gff );
return _cbb ,nil ;};func _gfdb (_ddfg LineAnnotationDef )(*_fe .PdfObjectDictionary ,*_af .PdfRectangle ,error ){_gbca :=_af .NewXObjectForm ();_gbca .Resources =_af .NewPdfPageResources ();_edfb :="";if _ddfg .Opacity < 1.0{_edda :=_fe .MakeDict ();_edda .Set ("\u0063\u0061",_fe .MakeFloat (_ddfg .Opacity ));
_bee :=_gbca .Resources .AddExtGState ("\u0067\u0073\u0031",_edda );if _bee !=nil {_cd .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");return nil ,nil ,_bee ;
};_edfb ="\u0067\u0073\u0031";};_egda ,_gdf ,_afea ,_ddfdb :=_gbdb (_ddfg ,_edfb );if _ddfdb !=nil {return nil ,nil ,_ddfdb ;};_ddfdb =_gbca .SetContentStream (_egda ,nil );if _ddfdb !=nil {return nil ,nil ,_ddfdb ;};_gbca .BBox =_gdf .ToPdfObject ();_gacc :=_fe .MakeDict ();
_gacc .Set ("\u004e",_gbca .ToPdfObject ());return _gacc ,_afea ,nil ;};

// AppearanceStyle defines style parameters for appearance stream generation.
type AppearanceStyle struct{

// How much of Rect height to fill when autosizing text.
AutoFontSizeFraction float64 ;

// CheckmarkRune is a rune used for check mark in checkboxes (for ZapfDingbats font).
CheckmarkRune rune ;BorderSize float64 ;BorderColor _af .PdfColor ;FillColor _af .PdfColor ;

// Multiplier for lineheight for multi line text.
MultilineLineHeight float64 ;MultilineVAlignMiddle bool ;

// Visual guide checking alignment of field contents (debugging).
DrawAlignmentReticle bool ;

// Allow field MK appearance characteristics to override style settings.
AllowMK bool ;

// Fonts holds appearance styles for fonts.
Fonts *AppearanceFontStyle ;

// MarginLeft represents the amount of space to leave on the left side of
// the form field bounding box when generating appearances (default: 2.0).
MarginLeft *float64 ;};

// SetStyle applies appearance `style` to `fa`.
func (_ea *FieldAppearance )SetStyle (style AppearanceStyle ){_ea ._bf =&style };

// SignatureLine represents a line of information in the signature field appearance.
type SignatureLine struct{Desc string ;Text string ;};func _gbdb (_fce LineAnnotationDef ,_bcgg string )([]byte ,*_af .PdfRectangle ,*_af .PdfRectangle ,error ){_bbfe :=_eb .Line {X1 :0,Y1 :0,X2 :_fce .X2 -_fce .X1 ,Y2 :_fce .Y2 -_fce .Y1 ,LineColor :_fce .LineColor ,Opacity :_fce .Opacity ,LineWidth :_fce .LineWidth ,LineEndingStyle1 :_fce .LineEndingStyle1 ,LineEndingStyle2 :_fce .LineEndingStyle2 };
_agdeb ,_gcac ,_ege :=_bbfe .Draw (_bcgg );if _ege !=nil {return nil ,nil ,nil ,_ege ;};_cdgb :=&_af .PdfRectangle {};_cdgb .Llx =_fce .X1 +_gcac .Llx ;_cdgb .Lly =_fce .Y1 +_gcac .Lly ;_cdgb .Urx =_fce .X1 +_gcac .Urx ;_cdgb .Ury =_fce .Y1 +_gcac .Ury ;
return _agdeb ,_gcac ,_cdgb ,nil ;};func _gba (_ggf *_af .PdfField )string {if _ggf ==nil {return "";};_caa ,_gdd :=_ggf .GetContext ().(*_af .PdfFieldText );if !_gdd {return _gba (_ggf .Parent );};if _caa .DA !=nil {return _caa .DA .Str ();};return _gba (_caa .Parent );
};func (_caf *AppearanceStyle )applyAppearanceCharacteristics (_aaac *_fe .PdfObjectDictionary ,_geb *_fe .PdfObjectDictionary ,_bead *_af .PdfFont )error {if !_caf .AllowMK {return nil ;};if CA ,_gbcf :=_fe .GetString (_aaac .Get ("\u0043\u0041"));_gbcf &&_bead !=nil {_cda :=CA .Bytes ();
if len (_cda )!=0{_gbccc :=[]rune (_bead .Encoder ().Decode (_cda ));if len (_gbccc )==1{_caf .CheckmarkRune =_gbccc [0];};};};if BC ,_cba :=_fe .GetArray (_aaac .Get ("\u0042\u0043"));_cba {_dfff ,_efb :=BC .ToFloat64Array ();if _efb !=nil {return _efb ;
};switch len (_dfff ){case 1:_caf .BorderColor =_af .NewPdfColorDeviceGray (_dfff [0]);case 3:_caf .BorderColor =_af .NewPdfColorDeviceRGB (_dfff [0],_dfff [1],_dfff [2]);case 4:_caf .BorderColor =_af .NewPdfColorDeviceCMYK (_dfff [0],_dfff [1],_dfff [2],_dfff [3]);
default:_cd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0043\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_dfff ));
};if _geb !=nil {if _gdbf ,_dgfd :=_fe .GetNumberAsFloat (_geb .Get ("\u0057"));_dgfd ==nil {_caf .BorderSize =_gdbf ;};};};if BG ,_aaf :=_fe .GetArray (_aaac .Get ("\u0042\u0047"));_aaf {_bgdf ,_ggd :=BG .ToFloat64Array ();if _ggd !=nil {return _ggd ;
};switch len (_bgdf ){case 1:_caf .FillColor =_af .NewPdfColorDeviceGray (_bgdf [0]);case 3:_caf .FillColor =_af .NewPdfColorDeviceRGB (_bgdf [0],_bgdf [1],_bgdf [2]);case 4:_caf .FillColor =_af .NewPdfColorDeviceCMYK (_bgdf [0],_bgdf [1],_bgdf [2],_bgdf [3]);
default:_cd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0042\u0047\u0020\u002d\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0028\u0025\u0064)",len (_bgdf ));
};};return nil ;};

// CreateCircleAnnotation creates a circle/ellipse annotation object with appearance stream that can be added to
// page PDF annotations.
func CreateCircleAnnotation (circDef CircleAnnotationDef )(*_af .PdfAnnotation ,error ){_b :=_af .NewPdfAnnotationCircle ();if circDef .BorderEnabled {_fb ,_aa ,_aag :=circDef .BorderColor .R (),circDef .BorderColor .G (),circDef .BorderColor .B ();_b .C =_fe .MakeArrayFromFloats ([]float64 {_fb ,_aa ,_aag });
_ba :=_af .NewBorderStyle ();_ba .SetBorderWidth (circDef .BorderWidth );_b .BS =_ba .ToPdfObject ();};if circDef .FillEnabled {_bb ,_fbf ,_d :=circDef .FillColor .R (),circDef .FillColor .G (),circDef .FillColor .B ();_b .IC =_fe .MakeArrayFromFloats ([]float64 {_bb ,_fbf ,_d });
}else {_b .IC =_fe .MakeArrayFromIntegers ([]int {});};if circDef .Opacity < 1.0{_b .CA =_fe .MakeFloat (circDef .Opacity );};_bd ,_ac ,_ed :=_ga (circDef );if _ed !=nil {return nil ,_ed ;};_b .AP =_bd ;_b .Rect =_fe .MakeArrayFromFloats ([]float64 {_ac .Llx ,_ac .Lly ,_ac .Urx ,_ac .Ury });
return _b .PdfAnnotation ,nil ;};func _eec (_fbd *_af .PdfAcroForm ,_bcc *_af .PdfAnnotationWidget ,_afd *_af .PdfFieldChoice ,_cgfd AppearanceStyle )(*_fe .PdfObjectDictionary ,error ){_fad ,_dge :=_fe .GetArray (_bcc .Rect );if !_dge {return nil ,_eg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");
};_abd ,_bgd :=_af .NewPdfRectangle (*_fad );if _bgd !=nil {return nil ,_bgd ;};_cfadf ,_cgeb :=_abd .Width (),_abd .Height ();_cd .Log .Debug ("\u0043\u0068\u006f\u0069\u0063\u0065\u002c\u0020\u0077\u0061\u0020\u0042S\u003a\u0020\u0025\u0076",_bcc .BS );
_def ,_bgd :=_ce .NewContentStreamParser (_gba (_afd .PdfField )).Parse ();if _bgd !=nil {return nil ,_bgd ;};_ffce ,_gbbf :=_fe .GetDict (_bcc .MK );if _gbbf {_aef ,_ :=_fe .GetDict (_bcc .BS );_ecfd :=_cgfd .applyAppearanceCharacteristics (_ffce ,_aef ,nil );
if _ecfd !=nil {return nil ,_ecfd ;};};_bfb :=_fe .MakeDict ();for _ ,_ffcd :=range _afd .Opt .Elements (){if _fcc ,_agb :=_fe .GetArray (_ffcd );_agb &&_fcc .Len ()==2{_ffcd =_fcc .Get (1);};var _gcf string ;if _edb ,_dgb :=_fe .GetString (_ffcd );_dgb {_gcf =_edb .Decoded ();
}else if _bcb ,_acfe :=_fe .GetName (_ffcd );_acfe {_gcf =_bcb .String ();}else {_cd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u004f\u0070\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006de\u002f\u0073\u0074\u0072\u0069\u006e\u0067 \u002d\u0020\u0025\u0054",_ffcd );
return nil ,_eg .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u002f\u0073t\u0072\u0069\u006e\u0067");};if len (_gcf )> 0{_fgc ,_aagg :=_ccda (_afd .PdfField ,_cfadf ,_cgeb ,_gcf ,_cgfd ,_def ,_fbd .DR ,_ffce );if _aagg !=nil {return nil ,_aagg ;
};_bfb .Set (*_fe .MakeName (_gcf ),_fgc .ToPdfObject ());};};_gcc :=_fe .MakeDict ();_gcc .Set ("\u004e",_bfb );return _gcc ,nil ;};

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_cfef ImageFieldAppearance )GenerateAppearanceDict (form *_af .PdfAcroForm ,field *_af .PdfField ,wa *_af .PdfAnnotationWidget )(*_fe .PdfObjectDictionary ,error ){_ ,_fbfa :=field .GetContext ().(*_af .PdfFieldButton );if !_fbfa {_cd .Log .Trace ("C\u006f\u0075\u006c\u0064\u0020\u006fn\u006c\u0079\u0020\u0068\u0061\u006ed\u006c\u0065\u0020\u0062\u0075\u0074\u0074o\u006e\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069n\u0067");
return nil ,nil ;};_dace ,_ecag :=_fe .GetDict (wa .AP );if _ecag &&_cfef .OnlyIfMissing {_cd .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");
return _dace ,nil ;};if form .DR ==nil {form .DR =_af .NewPdfPageResources ();};switch _acg :=field .GetContext ().(type ){case *_af .PdfFieldButton :if _acg .IsPush (){_edc ,_cfb :=_aafa (_acg ,wa ,_cfef .Style ());if _cfb !=nil {return nil ,_cfb ;};return _edc ,nil ;
};};return nil ,nil ;};

// CircleAnnotationDef defines a circle annotation or ellipse at position (X, Y) and Width and Height.
// The annotation has various style parameters including Fill and Border options and Opacity.
type CircleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_af .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_af .PdfColorDeviceRGB ;Opacity float64 ;};func _gfee (_fdf *InkAnnotationDef )(*_fe .PdfObjectDictionary ,*_af .PdfRectangle ,error ){_bafc :=_af .NewXObjectForm ();
_ggbc ,_gaec ,_dfgab :=_adbbb (_fdf );if _dfgab !=nil {return nil ,nil ,_dfgab ;};_dfgab =_bafc .SetContentStream (_ggbc ,nil );if _dfgab !=nil {return nil ,nil ,_dfgab ;};_bafc .BBox =_gaec .ToPdfObject ();_bafc .Resources =_af .NewPdfPageResources ();
_bafc .Resources .ProcSet =_fe .MakeArray (_fe .MakeName ("\u0050\u0044\u0046"));_gbbc :=_fe .MakeDict ();_gbbc .Set ("\u004e",_bafc .ToPdfObject ());return _gbbc ,_gaec ,nil ;};func _adgf (_ffeb RectangleAnnotationDef ,_ccbf string )([]byte ,*_af .PdfRectangle ,*_af .PdfRectangle ,error ){_cgeg :=_eb .Rectangle {X :0,Y :0,Width :_ffeb .Width ,Height :_ffeb .Height ,FillEnabled :_ffeb .FillEnabled ,FillColor :_ffeb .FillColor ,BorderEnabled :_ffeb .BorderEnabled ,BorderWidth :2*_ffeb .BorderWidth ,BorderColor :_ffeb .BorderColor ,Opacity :_ffeb .Opacity };
_agg ,_aba ,_cdcc :=_cgeg .Draw (_ccbf );if _cdcc !=nil {return nil ,nil ,nil ,_cdcc ;};_cdbf :=&_af .PdfRectangle {};_cdbf .Llx =_ffeb .X +_aba .Llx ;_cdbf .Lly =_ffeb .Y +_aba .Lly ;_cdbf .Urx =_ffeb .X +_aba .Urx ;_cdbf .Ury =_ffeb .Y +_aba .Ury ;return _agg ,_aba ,_cdbf ,nil ;
};

// SetStyle applies appearance `style` to `fa`.
func (_adcf *ImageFieldAppearance )SetStyle (style AppearanceStyle ){_adcf ._egbb =&style };

// CreateRectangleAnnotation creates a rectangle annotation object that can be added to page PDF annotations.
func CreateRectangleAnnotation (rectDef RectangleAnnotationDef )(*_af .PdfAnnotation ,error ){_befb :=_af .NewPdfAnnotationSquare ();if rectDef .BorderEnabled {_cegd ,_aaae ,_adec :=rectDef .BorderColor .R (),rectDef .BorderColor .G (),rectDef .BorderColor .B ();
_befb .C =_fe .MakeArrayFromFloats ([]float64 {_cegd ,_aaae ,_adec });_agc :=_af .NewBorderStyle ();_agc .SetBorderWidth (rectDef .BorderWidth );_befb .BS =_agc .ToPdfObject ();};if rectDef .FillEnabled {_badd ,_fdce ,_dfgdg :=rectDef .FillColor .R (),rectDef .FillColor .G (),rectDef .FillColor .B ();
_befb .IC =_fe .MakeArrayFromFloats ([]float64 {_badd ,_fdce ,_dfgdg });}else {_befb .IC =_fe .MakeArrayFromIntegers ([]int {});};if rectDef .Opacity < 1.0{_befb .CA =_fe .MakeFloat (rectDef .Opacity );};_ggdee ,_ddfgb ,_ecae :=_bfbg (rectDef );if _ecae !=nil {return nil ,_ecae ;
};_befb .AP =_ggdee ;_befb .Rect =_fe .MakeArrayFromFloats ([]float64 {_ddfgb .Llx ,_ddfgb .Lly ,_ddfgb .Urx ,_ddfgb .Ury });return _befb .PdfAnnotation ,nil ;};

// TextFieldOptions defines optional parameter for a text field in a form.
type TextFieldOptions struct{MaxLen int ;Value string ;};func _dgac (_aec *_af .PdfAnnotationWidget ,_ebe *_af .PdfFieldButton ,_dgf *_af .PdfPageResources ,_ffg AppearanceStyle )(*_fe .PdfObjectDictionary ,error ){_dea ,_dbaa :=_fe .GetArray (_aec .Rect );
if !_dbaa {return nil ,_eg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");};_acf ,_bbcd :=_af .NewPdfRectangle (*_dea );if _bbcd !=nil {return nil ,_bbcd ;};_ceb ,_ffa :=_acf .Width (),_acf .Height ();_cgea ,_dfg :=_ceb ,_ffa ;
_cd .Log .Debug ("\u0043\u0068\u0065\u0063kb\u006f\u0078\u002c\u0020\u0077\u0061\u0020\u0042\u0053\u003a\u0020\u0025\u0076",_aec .BS );_dac ,_bbcd :=_af .NewStandard14Font ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073");if _bbcd !=nil {return nil ,_bbcd ;
};_bcdf ,_effe :=_fe .GetDict (_aec .MK );if _effe {_gggd ,_ :=_fe .GetDict (_aec .BS );_gea :=_ffg .applyAppearanceCharacteristics (_bcdf ,_gggd ,_dac );if _gea !=nil {return nil ,_gea ;};};_cad :=_af .NewXObjectForm ();{_eef :=_ce .NewContentCreator ();
if _ffg .BorderSize > 0{_bfbd (_eef ,_ffg ,_ceb ,_ffa );};if _ffg .DrawAlignmentReticle {_dcb :=_ffg ;_dcb .BorderSize =0.2;_aabbc (_eef ,_dcb ,_ceb ,_ffa );};_ceb ,_ffa =_ffg .applyRotation (_bcdf ,_ceb ,_ffa ,_eef );_dbad :=_ffg .AutoFontSizeFraction *_ffa ;
_deac ,_afb :=_dac .GetRuneMetrics (_ffg .CheckmarkRune );if !_afb {return nil ,_eg .New ("\u0067l\u0079p\u0068\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_adb :=_dac .Encoder ();_bbbf :=_adb .Encode (string (_ffg .CheckmarkRune ));
_cbed :=_deac .Wx *_dbad /1000.0;_cec :=705.0;_cce :=_cec /1000.0*_dbad ;_aee :=_ceg ;if _ffg .MarginLeft !=nil {_aee =*_ffg .MarginLeft ;};_cfaf :=1.0;if _cbed < _ceb {_aee =(_ceb -_cbed )/2.0;};if _cce < _ffa {_cfaf =(_ffa -_cce )/2.0;};_eef .Add_q ().Add_g (0).Add_BT ().Add_Tf ("\u005a\u0061\u0044\u0062",_dbad ).Add_Td (_aee ,_cfaf ).Add_Tj (*_fe .MakeStringFromBytes (_bbbf )).Add_ET ().Add_Q ();
_cad .Resources =_af .NewPdfPageResources ();_cad .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_dac .ToPdfObject ());_cad .BBox =_fe .MakeArrayFromFloats ([]float64 {0,0,_cgea ,_dfg });_cad .SetContentStream (_eef .Bytes (),_aabg ());};_ffff :=_af .NewXObjectForm ();
{_cdf :=_ce .NewContentCreator ();if _ffg .BorderSize > 0{_bfbd (_cdf ,_ffg ,_ceb ,_ffa );};_ffff .BBox =_fe .MakeArrayFromFloats ([]float64 {0,0,_cgea ,_dfg });_ffff .SetContentStream (_cdf .Bytes (),_aabg ());};_ecf :=_fe .PdfObjectName ("\u0059\u0065\u0073");
_fea ,_effe :=_fe .GetDict (_aec .PdfAnnotation .AP );if _effe &&_fea !=nil {_bced :=_fe .TraceToDirectObject (_fea .Get ("\u004e"));switch _gbcc :=_bced .(type ){case *_fe .PdfObjectDictionary :_bbcg :=_gbcc .Keys ();for _ ,_cfab :=range _bbcg {if _cfab !="\u004f\u0066\u0066"{_ecf =_cfab ;
};};};};_ecg :=_fe .MakeDict ();_ecg .Set ("\u004f\u0066\u0066",_ffff .ToPdfObject ());_ecg .Set (_ecf ,_cad .ToPdfObject ());_gfg :=_fe .MakeDict ();_gfg .Set ("\u004e",_ecg );return _gfg ,nil ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_ccb ImageFieldAppearance )WrapContentStream (page *_af .PdfPage )error {_fcfe ,_adg :=page .GetAllContentStreams ();if _adg !=nil {return _adg ;};_gecg :=_ce .NewContentStreamParser (_fcfe );_bgbf ,_adg :=_gecg .Parse ();if _adg !=nil {return _adg ;
};_bgbf .WrapIfNeeded ();_cab :=[]string {_bgbf .String ()};return page .SetContentStreams (_cab ,_aabg ());};func _aabg ()_fe .StreamEncoder {return _fe .NewFlateEncoder ()};func (_gb *AppearanceFont )fillName (){if _gb .Font ==nil ||_gb .Name !=""{return ;
};_fff :=_gb .Font .FontDescriptor ();if _fff ==nil ||_fff .FontName ==nil {return ;};_gb .Name =_fff .FontName .String ();};

// SignatureImagePosition specifies the image signature location relative to the text signature.
// If text signature is not defined, this position will be ignored.
type SignatureImagePosition int ;func _ccda (_eeaf *_af .PdfField ,_dfga ,_fbfc float64 ,_gaa string ,_efe AppearanceStyle ,_gbfd *_ce .ContentStreamOperations ,_gfa *_af .PdfPageResources ,_bad *_fe .PdfObjectDictionary )(*_af .XObjectForm ,error ){_bga :=_af .NewPdfPageResources ();
_cdca ,_fdc :=_dfga ,_fbfc ;_bfce :=_ce .NewContentCreator ();if _efe .BorderSize > 0{_bfbd (_bfce ,_efe ,_dfga ,_fbfc );};if _efe .DrawAlignmentReticle {_cfe :=_efe ;_cfe .BorderSize =0.2;_aabbc (_bfce ,_cfe ,_dfga ,_fbfc );};_bfce .Add_BMC ("\u0054\u0078");
_bfce .Add_q ();_bfce .Add_BT ();_dfga ,_fbfc =_efe .applyRotation (_bad ,_dfga ,_fbfc ,_bfce );_gbdd ,_beaa ,_fag :=_efe .processDA (_eeaf ,_gbfd ,_gfa ,_bga ,_bfce );if _fag !=nil {return nil ,_fag ;};_gdb :=_gbdd .Font ;_bggb :=_gbdd .Size ;_dbgd :=_fe .MakeName (_gbdd .Name );
_dbd :=_bggb ==0;if _dbd &&_beaa {_bggb =_fbfc *_efe .AutoFontSizeFraction ;};_aaef :=_gdb .Encoder ();if _aaef ==nil {_cd .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_aaef =_g .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};if len (_gaa )==0{return nil ,nil ;};_bfcad :=_ceg ;if _efe .MarginLeft !=nil {_bfcad =*_efe .MarginLeft ;};_abbf :=0.0;if _aaef !=nil {for _ ,_cfgg :=range _gaa {_agde ,_cdb :=_gdb .GetRuneMetrics (_cfgg );
if !_cdb {_cd .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_cfgg );
continue ;};_abbf +=_agde .Wx ;};_gaa =string (_aaef .Encode (_gaa ));};if _bggb ==0||_dbd &&_abbf > 0&&_bfcad +_abbf *_bggb /1000.0> _dfga {_bggb =0.95*1000.0*(_dfga -_bfcad )/_abbf ;};_dbe :=1.0*_bggb ;_gfc :=2.0;{_bgb :=_dbe ;if _dbd &&_gfc +_bgb > _fbfc {_bggb =0.95*(_fbfc -_gfc );
_dbe =1.0*_bggb ;_bgb =_dbe ;};if _fbfc > _bgb {_gfc =(_fbfc -_bgb )/2.0;_gfc +=1.50;};};_bfce .Add_Tf (*_dbgd ,_bggb );_bfce .Add_Td (_bfcad ,_gfc );_bfce .Add_Tj (*_fe .MakeString (_gaa ));_bfce .Add_ET ();_bfce .Add_Q ();_bfce .Add_EMC ();_gab :=_af .NewXObjectForm ();
_gab .Resources =_bga ;_gab .BBox =_fe .MakeArrayFromFloats ([]float64 {0,0,_cdca ,_fdc });_gab .SetContentStream (_bfce .Bytes (),_aabg ());return _gab ,nil ;};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_aac FieldAppearance )Style ()AppearanceStyle {if _aac ._bf !=nil {return *_aac ._bf ;};_db :=_ceg ;return AppearanceStyle {AutoFontSizeFraction :0.65,CheckmarkRune :'✔',BorderSize :0.0,BorderColor :_af .NewPdfColorDeviceGray (0),FillColor :_af .NewPdfColorDeviceGray (1),MultilineLineHeight :1.2,MultilineVAlignMiddle :false ,DrawAlignmentReticle :false ,AllowMK :true ,MarginLeft :&_db };
};

// NewComboboxField generates a new combobox form field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewComboboxField (page *_af .PdfPage ,name string ,rect []float64 ,opt ComboboxFieldOptions )(*_af .PdfFieldChoice ,error ){if page ==nil {return nil ,_eg .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_eg .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_eg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_eae :=_af .NewPdfField ();_egca :=&_af .PdfFieldChoice {};_eae .SetContext (_egca );_egca .PdfField =_eae ;_egca .T =_fe .MakeString (name );_egca .Opt =_fe .MakeArray ();for _ ,_aaad :=range opt .Choices {_egca .Opt .Append (_fe .MakeString (_aaad ));
};_egca .SetFlag (_af .FieldFlagCombo );_cbaa :=_af .NewPdfAnnotationWidget ();_cbaa .Rect =_fe .MakeArrayFromFloats (rect );_cbaa .P =page .ToPdfObject ();_cbaa .F =_fe .MakeInteger (4);_cbaa .Parent =_egca .ToPdfObject ();_egca .Annotations =append (_egca .Annotations ,_cbaa );
return _egca ,nil ;};func _ebggd (_dde ,_bbfd float64 ,_bfg *_af .Image ,_fdef AppearanceStyle )(*_af .XObjectForm ,error ){_ede ,_eceb :=_af .NewXObjectImageFromImage (_bfg ,nil ,_fe .NewFlateEncoder ());if _eceb !=nil {return nil ,_eceb ;};_ede .Decode =_fe .MakeArrayFromFloats ([]float64 {0.0,1.0,0.0,1.0,0.0,1.0});
_bgeb :=_af .NewPdfPageResources ();_bgeb .ProcSet =_fe .MakeArray (_fe .MakeName ("\u0050\u0044\u0046"),_fe .MakeName ("\u0049\u006d\u0061\u0067\u0065\u0043"));_bgeb .SetXObjectImageByName (_fe .PdfObjectName ("\u0049\u006d\u0030"),_ede );_cggc :=_ce .NewContentCreator ();
_cggc .Add_q ();_cggc .Add_cm (float64 (_bfg .Width ),0,0,float64 (_bfg .Height ),0,0);_cggc .Add_Do ("\u0049\u006d\u0030");_cggc .Add_Q ();_edfd :=_af .NewXObjectForm ();_edfd .FormType =_fe .MakeInteger (1);_edfd .BBox =_fe .MakeArrayFromFloats ([]float64 {0,0,float64 (_bfg .Width ),float64 (_bfg .Height )});
_edfd .Resources =_bgeb ;_edfd .SetContentStream (_cggc .Bytes (),_aabg ());return _edfd ,nil ;};

// CreateLineAnnotation creates a line annotation object that can be added to page PDF annotations.
func CreateLineAnnotation (lineDef LineAnnotationDef )(*_af .PdfAnnotation ,error ){_gfef :=_af .NewPdfAnnotationLine ();_gfef .L =_fe .MakeArrayFromFloats ([]float64 {lineDef .X1 ,lineDef .Y1 ,lineDef .X2 ,lineDef .Y2 });_geda :=_fe .MakeName ("\u004e\u006f\u006e\u0065");
if lineDef .LineEndingStyle1 ==_eb .LineEndingStyleArrow {_geda =_fe .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");};_egae :=_fe .MakeName ("\u004e\u006f\u006e\u0065");if lineDef .LineEndingStyle2 ==_eb .LineEndingStyleArrow {_egae =_fe .MakeName ("C\u006c\u006f\u0073\u0065\u0064\u0041\u0072\u0072\u006f\u0077");
};_gfef .LE =_fe .MakeArray (_geda ,_egae );if lineDef .Opacity < 1.0{_gfef .CA =_fe .MakeFloat (lineDef .Opacity );};_bfd ,_fbfda ,_bbfde :=lineDef .LineColor .R (),lineDef .LineColor .G (),lineDef .LineColor .B ();_gfef .IC =_fe .MakeArrayFromFloats ([]float64 {_bfd ,_fbfda ,_bbfde });
_gfef .C =_fe .MakeArrayFromFloats ([]float64 {_bfd ,_fbfda ,_bbfde });_geed :=_af .NewBorderStyle ();_geed .SetBorderWidth (lineDef .LineWidth );_gfef .BS =_geed .ToPdfObject ();_aea ,_fab ,_cbcf :=_gfdb (lineDef );if _cbcf !=nil {return nil ,_cbcf ;};
_gfef .AP =_aea ;_gfef .Rect =_fe .MakeArrayFromFloats ([]float64 {_fab .Llx ,_fab .Lly ,_fab .Urx ,_fab .Ury });return _gfef .PdfAnnotation ,nil ;};func _aabbc (_gfaa *_ce .ContentCreator ,_gbad AppearanceStyle ,_adbb ,_age float64 ){_gfaa .Add_q ().Add_re (0,0,_adbb ,_age ).Add_re (0,_age /2,_adbb ,_age /2).Add_re (0,0,_adbb ,_age ).Add_re (_adbb /2,0,_adbb /2,_age ).Add_w (_gbad .BorderSize ).SetStrokingColor (_gbad .BorderColor ).SetNonStrokingColor (_gbad .FillColor ).Add_B ().Add_Q ();
};func _dd (_bbb *_af .PdfAnnotationWidget ,_bce *_af .PdfFieldText ,_ggc *_af .PdfPageResources ,_cegg AppearanceStyle )(*_fe .PdfObjectDictionary ,error ){_cbe :=_af .NewPdfPageResources ();_fbec ,_cgd :=_fe .GetArray (_bbb .Rect );if !_cgd {return nil ,_eg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");
};_fcf ,_ffc :=_af .NewPdfRectangle (*_fbec );if _ffc !=nil {return nil ,_ffc ;};_ggb ,_bg :=_fcf .Width (),_fcf .Height ();_cc ,_cbdg :=_ggb ,_bg ;_ee ,_dff :=_fe .GetDict (_bbb .MK );if _dff {_dfe ,_ :=_fe .GetDict (_bbb .BS );_acc :=_cegg .applyAppearanceCharacteristics (_ee ,_dfe ,nil );
if _acc !=nil {return nil ,_acc ;};};_bag ,_ffc :=_ce .NewContentStreamParser (_gba (_bce .PdfField )).Parse ();if _ffc !=nil {return nil ,_ffc ;};_cgf :=_ce .NewContentCreator ();if _cegg .BorderSize > 0{_bfbd (_cgf ,_cegg ,_ggb ,_bg );};if _cegg .DrawAlignmentReticle {_abb :=_cegg ;
_abb .BorderSize =0.2;_aabbc (_cgf ,_abb ,_ggb ,_bg );};_cgf .Add_BMC ("\u0054\u0078");_cgf .Add_q ();_ggb ,_bg =_cegg .applyRotation (_ee ,_ggb ,_bg ,_cgf );_cgf .Add_BT ();_cef ,_dec ,_ffc :=_cegg .processDA (_bce .PdfField ,_bag ,_ggc ,_cbe ,_cgf );
if _ffc !=nil {return nil ,_ffc ;};_egdb :=_cef .Font ;_dbb :=_cef .Size ;_gde :=_fe .MakeName (_cef .Name );if _bce .Flags ().Has (_af .FieldFlagMultiline )&&_bce .MaxLen !=nil {_cd .Log .Debug ("\u004c\u006f\u006f\u006b\u0020\u0066\u006f\u0072\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0066\u006f\u0072 \u004e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
if _gag ,_fddb ,_gf :=_ddd (_bbb .PdfAnnotation .AP ,_ggc );_gf {_gde =_gag ;_dbb =_fddb ;_dec =true ;};};_ec :=_dbb ==0;if _ec &&_dec {_dbb =_bg *_cegg .AutoFontSizeFraction ;};_baa :=_egdb .Encoder ();if _baa ==nil {_cd .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_baa =_g .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};_fcg ,_ffc :=_egdb .GetFontDescriptor ();if _ffc !=nil {_cd .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
};var _cbg string ;if _bfe ,_gggf :=_fe .GetString (_bce .V );_gggf {_cbg =_bfe .Decoded ();};if len (_cbg )==0{return nil ,nil ;};_fca :=[]string {_cbg };_fef :=false ;if _bce .Flags ().Has (_af .FieldFlagMultiline ){_fef =true ;_cbg =_f .Replace (_cbg ,"\u000d\u000a","\u000a",-1);
_cbg =_f .Replace (_cbg ,"\u000d","\u000a",-1);_fca =_f .Split (_cbg ,"\u000a");};_da :=make ([]string ,len (_fca ));copy (_da ,_fca );_cf :=_cegg .MultilineLineHeight ;_fda :=0.0;_egab :=0;if _baa !=nil {for _dbb >=0{_dffa :=make ([]string ,len (_fca ));
copy (_dffa ,_fca );_aab :=make ([]string ,len (_da ));copy (_aab ,_da );_fda =0.0;_egab =0;_cfa :=len (_dffa );_babb :=0;for _babb < _cfa {var _bgg float64 ;_bfc :=-1;_ae :=_ceg ;if _cegg .MarginLeft !=nil {_ae =*_cegg .MarginLeft ;};for _dga ,_eaa :=range _dffa [_babb ]{if _eaa ==' '{_bfc =_dga ;
};_afg ,_fec :=_egdb .GetRuneMetrics (_eaa );if !_fec {_cd .Log .Debug ("\u0046\u006f\u006e\u0074\u0020\u0064o\u0065\u0073\u0020\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0072\u0075\u006e\u0065\u0020\u006d\u0065\u0074r\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u002d\u0020\u0073k\u0069p\u0070\u0069\u006e\u0067",_eaa );
continue ;};_bgg =_ae ;_ae +=_afg .Wx ;if _fef &&!_ec &&_dbb *_ae /1000.0> _ggb {_cbeg :=_dga ;_cgdb :=_dga ;if _bfc > 0{_cbeg =_bfc +1;_cgdb =_bfc ;};_ef :=_dffa [_babb ][_cbeg :];_ddb :=_aab [_babb ][_cbeg :];if _babb < len (_dffa )-1{_dffa =append (_dffa [:_babb +1],_dffa [_babb :]...);
_dffa [_babb +1]=_ef ;_aab =append (_aab [:_babb +1],_aab [_babb :]...);_aab [_babb +1]=_ddb ;}else {_dffa =append (_dffa ,_ef );_aab =append (_aab ,_ddb );};_dffa [_babb ]=_dffa [_babb ][0:_cgdb ];_aab [_babb ]=_aab [_babb ][0:_cgdb ];_cfa ++;_ae =_bgg ;
break ;};};if _ae > _fda {_fda =_ae ;};_dffa [_babb ]=string (_baa .Encode (_dffa [_babb ]));if len (_dffa [_babb ])> 0{_egab ++;};_babb ++;};_ge :=_dbb ;if _egab > 1{_ge *=_cf ;};_cdd :=float64 (_egab )*_ge ;if _ec ||_cdd <=_bg {_fca =_dffa ;_da =_aab ;
break ;};_dbb --;};};_dba :=_ceg ;if _cegg .MarginLeft !=nil {_dba =*_cegg .MarginLeft ;};if _dbb ==0||_ec &&_fda > 0&&_dba +_fda *_dbb /1000.0> _ggb {_dbb =0.95*1000.0*(_ggb -_dba )/_fda ;};_eba :=_egd ;{if _gfd ,_ddf :=_fe .GetIntVal (_bce .Q );_ddf {switch _gfd {case 0:_eba =_egd ;
case 1:_eba =_gae ;case 2:_eba =_ag ;default:_cd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065\u0064\u0020\u0071\u0075\u0061\u0064\u0064\u0069\u006e\u0067\u003a\u0020%\u0064\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u006c\u0065ft\u0020\u0061\u006c\u0069\u0067\u006e\u006d\u0065\u006e\u0074",_gfd );
};};};_egf :=_dbb ;if _fef &&_egab > 1{_egf =_cf *_dbb ;};var _feg float64 ;if _fcg !=nil {_feg ,_ffc =_fcg .GetCapHeight ();if _ffc !=nil {_cd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_ffc );
};};if int (_feg )<=0{_cd .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_feg =1000;};_bba :=_feg /1000.0*_dbb ;_decd :=0.0;{_ccc :=float64 (_egab )*_egf ;if _ec &&_decd +_ccc > _bg {_dbb =0.95*(_bg -_decd )/float64 (_egab );_egf =_dbb ;if _fef &&_egab > 1{_egf =_cf *_dbb ;};_bba =_feg /1000.0*_dbb ;_ccc =float64 (_egab )*_egf ;
};if _bg > _ccc {if _fef {if _cegg .MultilineVAlignMiddle {_gge :=(_bg -(_ccc +_bba ))/2.0;_gad :=_gge +_ccc +_bba -_egf ;_decd =_gad ;if _egab > 1{_decd =_decd +(_ccc /_dbb *float64 (_egab ))-_egf -_bba ;};if _decd < _ccc {_decd =(_bg -_bba )/2.0;};}else {_decd =_bg -_egf ;
if _decd > _dbb {_egad :=0.0;if _fef &&_cegg .MultilineLineHeight > 1&&_egab > 1{_egad =_cegg .MultilineLineHeight -1;};_decd -=_dbb *(0.5-_egad );};};}else {_decd =(_bg -_bba )/2.0;};};};_cgf .Add_Tf (*_gde ,_dbb );_cgf .Add_Td (_dba ,_decd );_cfg :=_dba ;
_afc :=_dba ;for _fa ,_gfe :=range _fca {_gec :=0.0;for _ ,_abgb :=range _da [_fa ]{_gbf ,_eac :=_egdb .GetRuneMetrics (_abgb );if !_eac {continue ;};_gec +=_gbf .Wx ;};_agd :=_gec /1000.0*_dbb ;_ebgg :=_ggb -_agd ;var _fbc float64 ;switch _eba {case _egd :_fbc =_cfg ;
case _gae :_fbc =_ebgg /2;case _ag :_fbc =_ebgg ;};_dba =_fbc -_afc ;if _dba > 0.0{_cgf .Add_Td (_dba ,0);};_afc =_fbc ;_cgf .Add_Tj (*_fe .MakeString (_gfe ));if _fa < len (_fca )-1{_cgf .Add_Td (0,-_dbb *_cf );};};_cgf .Add_ET ();_cgf .Add_Q ();_cgf .Add_EMC ();
_aaa :=_af .NewXObjectForm ();_aaa .Resources =_cbe ;_aaa .BBox =_fe .MakeArrayFromFloats ([]float64 {0,0,_cc ,_cbdg });_aaa .SetContentStream (_cgf .Bytes (),_aabg ());_egb :=_fe .MakeDict ();_egb .Set ("\u004e",_aaa .ToPdfObject ());return _egb ,nil ;
};func _faf (_ebf *_af .PdfAnnotationWidget ,_fega *_af .PdfFieldText ,_beb *_af .PdfPageResources ,_gbc AppearanceStyle )(*_fe .PdfObjectDictionary ,error ){_ebd :=_af .NewPdfPageResources ();_ccd ,_afcf :=_fe .GetArray (_ebf .Rect );if !_afcf {return nil ,_eg .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0052\u0065\u0063\u0074");
};_gcd ,_bbc :=_af .NewPdfRectangle (*_ccd );if _bbc !=nil {return nil ,_bbc ;};_bcdb ,_geca :=_gcd .Width (),_gcd .Height ();_ade ,_dfc :=_bcdb ,_geca ;_fg ,_efc :=_fe .GetDict (_ebf .MK );if _efc {_cgcb ,_ :=_fe .GetDict (_ebf .BS );_cgfb :=_gbc .applyAppearanceCharacteristics (_fg ,_cgcb ,nil );
if _cgfb !=nil {return nil ,_cgfb ;};};_baaf ,_efc :=_fe .GetIntVal (_fega .MaxLen );if !_efc {return nil ,_eg .New ("\u006d\u0061\u0078\u006c\u0065\u006e\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};if _baaf <=0{return nil ,_eg .New ("\u006d\u0061\u0078\u004c\u0065\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_cfga :=_bcdb /float64 (_baaf );_cbc ,_bbc :=_ce .NewContentStreamParser (_gba (_fega .PdfField )).Parse ();if _bbc !=nil {return nil ,_bbc ;};_efcf :=_ce .NewContentCreator ();if _gbc .BorderSize > 0{_bfbd (_efcf ,_gbc ,_bcdb ,_geca );};if _gbc .DrawAlignmentReticle {_fed :=_gbc ;
_fed .BorderSize =0.2;_aabbc (_efcf ,_fed ,_bcdb ,_geca );};_efcf .Add_BMC ("\u0054\u0078");_efcf .Add_q ();_ ,_geca =_gbc .applyRotation (_fg ,_bcdb ,_geca ,_efcf );_efcf .Add_BT ();_fbfd ,_eff ,_bbc :=_gbc .processDA (_fega .PdfField ,_cbc ,_beb ,_ebd ,_efcf );
if _bbc !=nil {return nil ,_bbc ;};_aff :=_fbfd .Font ;_dfd :=_fe .MakeName (_fbfd .Name );_cfaa :=_fbfd .Size ;_fdg :=_cfaa ==0;if _fdg &&_eff {_cfaa =_geca *_gbc .AutoFontSizeFraction ;};_bfab :=_aff .Encoder ();if _bfab ==nil {_cd .Log .Debug ("\u0057\u0041RN\u003a\u0020\u0066\u006f\u006e\u0074\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0069\u0073\u0020\u006e\u0069l\u002e\u0020\u0041\u0073s\u0075\u006d\u0069\u006eg \u0069\u0064e\u006et\u0069\u0074\u0079\u0020\u0065\u006ec\u006f\u0064\u0065r\u002e\u0020O\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069n\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
_bfab =_g .NewIdentityTextEncoder ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048");};var _gbd string ;if _gadc ,_cfad :=_fe .GetString (_fega .V );_cfad {_gbd =_gadc .Decoded ();};_efcf .Add_Tf (*_dfd ,_cfaa );var _bdga float64 ;for _ ,_fefg :=range _gbd {_efd ,_aae :=_aff .GetRuneMetrics (_fefg );
if !_aae {_cd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_fefg );
continue ;};_decc :=_efd .Wy ;if int (_decc )<=0{_decc =_efd .Wx ;};if _decc > _bdga {_bdga =_decc ;};};if int (_bdga )==0{_cd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0064\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006d\u0061x\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0073\u0069\u007a\u0065\u0020- \u0075\u0073\u0069\u006e\u0067\u0020\u0031\u0030\u0030\u0030");
_bdga =1000;};_dda ,_bbc :=_aff .GetFontDescriptor ();if _bbc !=nil {_cd .Log .Debug ("\u0045\u0072ro\u0072\u003a\u0020U\u006e\u0061\u0062\u006ce t\u006f g\u0065\u0074\u0020\u0066\u006f\u006e\u0074 d\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");};
var _bac float64 ;if _dda !=nil {_bac ,_bbc =_dda .GetCapHeight ();if _bbc !=nil {_cd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0067\u0065\u0074 \u0066\u006f\u006e\u0074\u0020\u0043\u0061\u0070\u0048\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_bbc );
};};if int (_bac )<=0{_cd .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u0061\u0070\u0048e\u0069\u0067\u0068\u0074\u0020\u006e\u006ft \u0061\u0076\u0061\u0069l\u0061\u0062\u006c\u0065\u0020\u002d\u0020\u0073\u0065tt\u0069\u006eg\u0020\u0074\u006f\u0020\u0031\u0030\u0030\u0030");
_bac =1000.0;};_adc :=_bac /1000.0*_cfaa ;_efcb :=0.0;_bebd :=1.0*_cfaa *(_bdga /1000.0);{_aagf :=_bebd ;if _fdg &&_efcb +_aagf > _geca {_cfaa =0.95*(_geca -_efcb );_adc =_bac /1000.0*_cfaa ;};if _geca > _adc {_efcb =(_geca -_adc )/2.0;};};_efcf .Add_Td (0,_efcb );
if _aabc ,_eaae :=_fe .GetIntVal (_fega .Q );_eaae {switch _aabc {case 2:if len (_gbd )< _baaf {_fge :=float64 (_baaf -len (_gbd ))*_cfga ;_efcf .Add_Td (_fge ,0);};};};for _gca ,_baab :=range _gbd {_fcd :=_ceg ;if _gbc .MarginLeft !=nil {_fcd =*_gbc .MarginLeft ;
};_gged :=string (_baab );if _bfab !=nil {_bfca ,_ffcc :=_aff .GetRuneMetrics (_baab );if !_ffcc {_cd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0052\u0075\u006e\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0066\u006fn\u0074\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067 \u006f\u0076\u0065\u0072",_baab );
continue ;};_gged =string (_bfab .Encode (_gged ));_eaf :=_cfaa *_bfca .Wx /1000.0;_aabb :=(_cfga -_eaf )/2;_fcd =_aabb ;};_efcf .Add_Td (_fcd ,0);_efcf .Add_Tj (*_fe .MakeString (_gged ));if _gca !=len (_gbd )-1{_efcf .Add_Td (_cfga -_fcd ,0);};};_efcf .Add_ET ();
_efcf .Add_Q ();_efcf .Add_EMC ();_bbg :=_af .NewXObjectForm ();_bbg .Resources =_ebd ;_bbg .BBox =_fe .MakeArrayFromFloats ([]float64 {0,0,_ade ,_dfc });_bbg .SetContentStream (_efcf .Bytes (),_aabg ());_cge :=_fe .MakeDict ();_cge .Set ("\u004e",_bbg .ToPdfObject ());
return _cge ,nil ;};

// ComboboxFieldOptions defines optional parameters for a combobox form field.
type ComboboxFieldOptions struct{

// Choices is the list of string values that can be selected.
Choices []string ;};

// Style returns the appearance style of `fa`. If not specified, returns default style.
func (_dgfde ImageFieldAppearance )Style ()AppearanceStyle {if _dgfde ._egbb !=nil {return *_dgfde ._egbb ;};return AppearanceStyle {BorderSize :0.0,BorderColor :_af .NewPdfColorDeviceGray (0),FillColor :_af .NewPdfColorDeviceGray (1),DrawAlignmentReticle :false };
};func _bfbd (_dbgdb *_ce .ContentCreator ,_gfgf AppearanceStyle ,_dbee ,_cdge float64 ){_dbgdb .Add_q ().Add_re (0,0,_dbee ,_cdge ).Add_w (_gfgf .BorderSize ).SetStrokingColor (_gfgf .BorderColor ).SetNonStrokingColor (_gfgf .FillColor ).Add_B ().Add_Q ();
};

// GenerateAppearanceDict generates an appearance dictionary for widget annotation `wa` for the `field` in `form`.
// Implements interface model.FieldAppearanceGenerator.
func (_be FieldAppearance )GenerateAppearanceDict (form *_af .PdfAcroForm ,field *_af .PdfField ,wa *_af .PdfAnnotationWidget )(*_fe .PdfObjectDictionary ,error ){_cd .Log .Trace ("\u0047\u0065n\u0065\u0072\u0061\u0074e\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0044i\u0063\u0074\u0020\u0066\u006f\u0072\u0020\u0025\u0076\u0020\u0020\u0056:\u0020\u0025\u002b\u0076",field .PartialName (),field .V );
_ ,_bea :=field .GetContext ().(*_af .PdfFieldText );_cbd ,_ca :=_fe .GetDict (wa .AP );if _ca &&_be .OnlyIfMissing &&(!_bea ||!_be .RegenerateTextFields ){_cd .Log .Trace ("\u0041\u006c\u0072\u0065a\u0064\u0079\u0020\u0070\u006f\u0070\u0075\u006c\u0061\u0074e\u0064 \u002d\u0020\u0069\u0067\u006e\u006f\u0072i\u006e\u0067");
return _cbd ,nil ;};if form .DR ==nil {form .DR =_af .NewPdfPageResources ();};switch _bdg :=field .GetContext ().(type ){case *_af .PdfFieldText :_fbe :=_bdg ;if _bec :=_gba (_fbe .PdfField );_bec ==""{_fbe .DA =form .DA ;};switch {case _fbe .Flags ().Has (_af .FieldFlagPassword ):return nil ,nil ;
case _fbe .Flags ().Has (_af .FieldFlagFileSelect ):return nil ,nil ;case _fbe .Flags ().Has (_af .FieldFlagComb ):if _fbe .MaxLen !=nil {_ebg ,_ega :=_faf (wa ,_fbe ,form .DR ,_be .Style ());if _ega !=nil {return nil ,_ega ;};return _ebg ,nil ;};};_fdd ,_bfa :=_dd (wa ,_fbe ,form .DR ,_be .Style ());
if _bfa !=nil {return nil ,_bfa ;};return _fdd ,nil ;case *_af .PdfFieldButton :_cgc :=_bdg ;if _cgc .IsCheckbox (){_bc ,_abg :=_dgac (wa ,_cgc ,form .DR ,_be .Style ());if _abg !=nil {return nil ,_abg ;};return _bc ,nil ;};_cd .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041\u004e\u0044\u004c\u0045\u0044 \u0062u\u0074\u0074\u006f\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u002b\u0076",_cgc .GetType ());
case *_af .PdfFieldChoice :_ggg :=_bdg ;switch {case _ggg .Flags ().Has (_af .FieldFlagCombo ):_egc ,_edd :=_eec (form ,wa ,_ggg ,_be .Style ());if _edd !=nil {return nil ,_edd ;};return _egc ,nil ;default:_cd .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055N\u0048\u0041\u004eD\u004c\u0045\u0044\u0020c\u0068\u006f\u0069\u0063\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074\u0068\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0025\u0073",_ggg .Flags ().String ());
};default:_cd .Log .Debug ("\u0054\u004f\u0044\u004f\u003a\u0020\u0055\u004e\u0048\u0041N\u0044\u004c\u0045\u0044\u0020\u0066\u0069e\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_bdg );};return nil ,nil ;};func (_cebg *AppearanceStyle )processDA (_dfa *_af .PdfField ,_fccc *_ce .ContentStreamOperations ,_afe ,_eedd *_af .PdfPageResources ,_fgb *_ce .ContentCreator )(*AppearanceFont ,bool ,error ){var _becc *AppearanceFont ;
var _fgee bool ;if _cebg .Fonts !=nil {if _cebg .Fonts .Fallback !=nil {_becc =_cebg .Fonts .Fallback ;};if _fdcd :=_cebg .Fonts .FieldFallbacks ;_fdcd !=nil {if _eecg ,_dfad :=_fdcd [_dfa .PartialName ()];_dfad {_becc =_eecg ;}else if _decb ,_fafg :=_dfa .FullName ();
_fafg ==nil {if _fba ,_gef :=_fdcd [_decb ];_gef {_becc =_fba ;};};};if _becc !=nil {_becc .fillName ();};_fgee =_cebg .Fonts .ForceReplace ;};var _afdd string ;var _abf float64 ;var _dgc bool ;if _fccc !=nil {for _ ,_gcg :=range *_fccc {if _gcg .Operand =="\u0054\u0066"&&len (_gcg .Params )==2{if _bcf ,_fccd :=_fe .GetNameVal (_gcg .Params [0]);
_fccd {_afdd =_bcf ;};if _bff ,_cdcg :=_fe .GetNumberAsFloat (_gcg .Params [1]);_cdcg ==nil {_abf =_bff ;};_dgc =true ;continue ;};_fgb .AddOperand (*_gcg );};};var _ffcca *AppearanceFont ;var _gda _fe .PdfObject ;if _fgee &&_becc !=nil {_ffcca =_becc ;
}else {if _afe !=nil &&_afdd !=""{if _acd ,_dffc :=_afe .GetFontByName (*_fe .MakeName (_afdd ));_dffc {if _dcg ,_dce :=_af .NewPdfFontFromPdfObject (_acd );_dce ==nil {_gda =_acd ;_ffcca =&AppearanceFont {Name :_afdd ,Font :_dcg ,Size :_abf };}else {_cd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u006c\u006fa\u0064\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0025\u0076",_dce );
};};};if _ffcca ==nil &&_becc !=nil {_ffcca =_becc ;};if _ffcca ==nil {_fefd ,_fdge :=_af .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");if _fdge !=nil {return nil ,false ,_fdge ;};_ffcca =&AppearanceFont {Name :"\u0048\u0065\u006c\u0076",Font :_fefd ,Size :_abf };
};};if _ffcca .Size <=0&&_cebg .Fonts !=nil &&_cebg .Fonts .FallbackSize > 0{_ffcca .Size =_cebg .Fonts .FallbackSize ;};_dbbe :=*_fe .MakeName (_ffcca .Name );if _gda ==nil {_gda =_ffcca .Font .ToPdfObject ();};if _afe !=nil &&!_afe .HasFontByName (_dbbe ){_afe .SetFontByName (_dbbe ,_gda );
};if _eedd !=nil &&!_eedd .HasFontByName (_dbbe ){_eedd .SetFontByName (_dbbe ,_gda );};return _ffcca ,_dgc ,nil ;};func _cafd (_fbeg []float64 )[]float64 {var (_bbfc =len (_fbeg );_cgfe =make ([]float64 ,_bbfc );_befe =make ([]float64 ,_bbfc ););_eggb :=2.0;
_cgfe [0]=_fbeg [0]/_eggb ;for _dgee :=1;_dgee < _bbfc ;_dgee ++{_befe [_dgee ]=1/_eggb ;if _dgee < _bbfc -1{_eggb =4.0;}else {_eggb =3.5;};_eggb -=_befe [_dgee ];_cgfe [_dgee ]=(_fbeg [_dgee ]-_cgfe [_dgee -1])/_eggb ;};for _gfdf :=1;_gfdf < _bbfc ;_gfdf ++{_cgfe [_bbfc -_gfdf -1]-=_befe [_bbfc -_gfdf ]*_cgfe [_bbfc -_gfdf ];
};return _cgfe ;};

// NewSignatureField returns a new signature field with a visible appearance
// containing the specified signature lines and styled according to the
// specified options.
func NewSignatureField (signature *_af .PdfSignature ,lines []*SignatureLine ,opts *SignatureFieldOpts )(*_af .PdfFieldSignature ,error ){if signature ==nil {return nil ,_eg .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};_bafe ,_ddbae :=_ffe (lines ,opts );if _ddbae !=nil {return nil ,_ddbae ;};_becce :=_af .NewPdfFieldSignature (signature );_becce .Rect =_fe .MakeArrayFromFloats (opts .Rect );_becce .AP =_bafe ;return _becce ,nil ;};func _adbbb (_bgdc *InkAnnotationDef )([]byte ,*_af .PdfRectangle ,error ){_gee :=[][]_eb .CubicBezierCurve {};
for _ ,_agbgc :=range _bgdc .Paths {if _agbgc .Length ()==0{continue ;};_dfea :=_agbgc .Points ;_adgc ,_gadcc ,_bcgc :=_fccf (_dfea );if _bcgc !=nil {return nil ,nil ,_bcgc ;};if len (_adgc )!=len (_gadcc ){return nil ,nil ,_eg .New ("\u0049\u006e\u0065\u0071\u0075\u0061\u006c\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0063\u0061l\u0063\u0075\u006c\u0061\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0061\u006e\u0064\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0063\u006f\u006e\u0074\u0072o\u006c\u0020\u0070\u006f\u0069n\u0074");
};_bgcc :=[]_eb .CubicBezierCurve {};for _edaa :=0;_edaa < len (_adgc );_edaa ++{_bgcc =append (_bgcc ,_eb .CubicBezierCurve {P0 :_dfea [_edaa ],P1 :_adgc [_edaa ],P2 :_gadcc [_edaa ],P3 :_dfea [_edaa +1]});};if len (_bgcc )> 0{_gee =append (_gee ,_bgcc );
};};_cbbb ,_gbg ,_baba :=_ebfc (_gee ,_bgdc .Color ,_bgdc .LineWidth );if _baba !=nil {return nil ,nil ,_baba ;};return _cbbb ,_gbg ,nil ;};

// NewSignatureLine returns a new signature line displayed as a part of the
// signature field appearance.
func NewSignatureLine (desc ,text string )*SignatureLine {return &SignatureLine {Desc :desc ,Text :text };};

// ImageFieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for attaching an image to a button field.
type ImageFieldAppearance struct{OnlyIfMissing bool ;_egbb *AppearanceStyle ;};

// AppearanceFontStyle defines font style characteristics for form fields,
// used in the filling/flattening process.
type AppearanceFontStyle struct{

// Fallback represents a global font fallback, used for fields which do
// not specify a font in their default appearance (DA). The fallback is
// also used if there is a font specified in the DA, but it is not
// found in the AcroForm resources (DR).
Fallback *AppearanceFont ;

// FallbackSize represents a global font size fallback used for fields
// which do not specify a font size in their default appearance (DA).
// The fallback size is applied only if its value is larger than zero.
FallbackSize float64 ;

// FieldFallbacks defines font fallbacks for specific fields. The map keys
// represent the names of the fields (which can be specified by their
// partial or full names). Specific field fallback fonts take precedence
// over the global font fallback.
FieldFallbacks map[string ]*AppearanceFont ;

// ForceReplace forces the replacement of fonts in the filling/flattening
// process, even if the default appearance (DA) specifies a valid font.
// If no fallback font is provided, setting this field has no effect.
ForceReplace bool ;};

// NewCheckboxField generates a new checkbox field with partial name `name` at location `rect`
// on specified `page` and with field specific options `opt`.
func NewCheckboxField (page *_af .PdfPage ,name string ,rect []float64 ,opt CheckboxFieldOptions )(*_af .PdfFieldButton ,error ){if page ==nil {return nil ,_eg .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
};if len (name )<=0{return nil ,_eg .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");};if len (rect )!=4{return nil ,_eg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_beaag ,_daaa :=_af .NewStandard14Font (_af .ZapfDingbatsName );if _daaa !=nil {return nil ,_daaa ;};_dabe :=_af .NewPdfField ();_fafe :=&_af .PdfFieldButton {};_dabe .SetContext (_fafe );_fafe .PdfField =_dabe ;_fafe .T =_fe .MakeString (name );_fafe .SetType (_af .ButtonTypeCheckbox );
_ebc :="\u004f\u0066\u0066";if opt .Checked {_ebc ="\u0059\u0065\u0073";};_fafe .V =_fe .MakeName (_ebc );_cffb :=_af .NewPdfAnnotationWidget ();_cffb .Rect =_fe .MakeArrayFromFloats (rect );_cffb .P =page .ToPdfObject ();_cffb .F =_fe .MakeInteger (4);
_cffb .Parent =_fafe .ToPdfObject ();_aeea :=rect [2]-rect [0];_cbda :=rect [3]-rect [1];var _bbe _cg .Buffer ;_bbe .WriteString ("\u0071\u000a");_bbe .WriteString ("\u0030 \u0030\u0020\u0031\u0020\u0072\u0067\n");_bbe .WriteString ("\u0042\u0054\u000a");
_bbe .WriteString ("\u002f\u005a\u0061D\u0062\u0020\u0031\u0032\u0020\u0054\u0066\u000a");_bbe .WriteString ("\u0045\u0054\u000a");_bbe .WriteString ("\u0051\u000a");_ced :=_ce .NewContentCreator ();_ced .Add_q ();_ced .Add_rg (0,0,1);_ced .Add_BT ();_ced .Add_Tf (*_fe .MakeName ("\u005a\u0061\u0044\u0062"),12);
_ced .Add_Td (0,0);_ced .Add_ET ();_ced .Add_Q ();_ecb :=_af .NewXObjectForm ();_ecb .SetContentStream (_ced .Bytes (),_fe .NewRawEncoder ());_ecb .BBox =_fe .MakeArrayFromFloats ([]float64 {0,0,_aeea ,_cbda });_ecb .Resources =_af .NewPdfPageResources ();
_ecb .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_beaag .ToPdfObject ());_ced =_ce .NewContentCreator ();_ced .Add_q ();_ced .Add_re (0,0,_aeea ,_cbda );_ced .Add_W ().Add_n ();_ced .Add_rg (0,0,1);_ced .Translate (0,3.0);_ced .Add_BT ();_ced .Add_Tf (*_fe .MakeName ("\u005a\u0061\u0044\u0062"),12);
_ced .Add_Td (0,0);_ced .Add_Tj (*_fe .MakeString ("\u0034"));_ced .Add_ET ();_ced .Add_Q ();_cdcf :=_af .NewXObjectForm ();_cdcf .SetContentStream (_ced .Bytes (),_fe .NewRawEncoder ());_cdcf .BBox =_fe .MakeArrayFromFloats ([]float64 {0,0,_aeea ,_cbda });
_cdcf .Resources =_af .NewPdfPageResources ();_cdcf .Resources .SetFontByName ("\u005a\u0061\u0044\u0062",_beaag .ToPdfObject ());_gfba :=_fe .MakeDict ();_gfba .Set ("\u004f\u0066\u0066",_ecb .ToPdfObject ());_gfba .Set ("\u0059\u0065\u0073",_cdcf .ToPdfObject ());
_fafa :=_fe .MakeDict ();_fafa .Set ("\u004e",_gfba );_cffb .AP =_fafa ;_cffb .AS =_fe .MakeName (_ebc );_fafe .Annotations =append (_fafe .Annotations ,_cffb );return _fafe ,nil ;};func _ddd (_dca _fe .PdfObject ,_cdaf *_af .PdfPageResources )(*_fe .PdfObjectName ,float64 ,bool ){var (_afgf *_fe .PdfObjectName ;
_dgeb float64 ;_bdgc bool ;);if _aacb ,_ggcf :=_fe .GetDict (_dca );_ggcf &&_aacb !=nil {_gdbb :=_fe .TraceToDirectObject (_aacb .Get ("\u004e"));switch _cddf :=_gdbb .(type ){case *_fe .PdfObjectStream :_gbdg ,_edf :=_fe .DecodeStream (_cddf );if _edf !=nil {_cd .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0063\u006f\u006e\u0074e\u006e\u0074\u0020\u0073\u0074r\u0065\u0061m\u003a\u0020\u0025\u0076",_edf .Error ());
return nil ,0,false ;};_gdba ,_edf :=_ce .NewContentStreamParser (string (_gbdg )).Parse ();if _edf !=nil {_cd .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0075n\u0061\u0062l\u0065\u0020\u0070\u0061\u0072\u0073\u0065\u0020c\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072\u0065\u0061m\u003a\u0020\u0025\u0076",_edf .Error ());
return nil ,0,false ;};_eca :=_ce .NewContentStreamProcessor (*_gdba );_eca .AddHandler (_ce .HandlerConditionEnumOperand ,"\u0054\u0066",func (_cee *_ce .ContentStreamOperation ,_fbba _ce .GraphicsState ,_cada *_af .PdfPageResources )error {if len (_cee .Params )==2{if _bffd ,_afa :=_fe .GetName (_cee .Params [0]);
_afa {_afgf =_bffd ;};if _dacc ,_bbf :=_fe .GetNumberAsFloat (_cee .Params [1]);_bbf ==nil {_dgeb =_dacc ;};_bdgc =true ;return _ce .ErrEarlyExit ;};return nil ;});_eca .Process (_cdaf );return _afgf ,_dgeb ,_bdgc ;};};return nil ,0,false ;};

// CreateInkAnnotation creates an ink annotation object that can be added to the annotation list of a PDF page.
func CreateInkAnnotation (inkDef InkAnnotationDef )(*_af .PdfAnnotation ,error ){_ecge :=_af .NewPdfAnnotationInk ();_fbfce :=_fe .MakeArray ();for _ ,_bddc :=range inkDef .Paths {if _bddc .Length ()==0{continue ;};_ecaf :=[]float64 {};for _ ,_ffgg :=range _bddc .Points {_ecaf =append (_ecaf ,_ffgg .X ,_ffgg .Y );
};_fbfce .Append (_fe .MakeArrayFromFloats (_ecaf ));};_ecge .InkList =_fbfce ;if inkDef .Color ==nil {inkDef .Color =_af .NewPdfColorDeviceRGB (0.0,0.0,0.0);};_ecge .C =_fe .MakeArrayFromFloats ([]float64 {inkDef .Color .R (),inkDef .Color .G (),inkDef .Color .B ()});
_cac ,_dbgc ,_cade :=_gfee (&inkDef );if _cade !=nil {return nil ,_cade ;};_ecge .AP =_cac ;_ecge .Rect =_fe .MakeArrayFromFloats ([]float64 {_dbgc .Llx ,_dbgc .Lly ,_dbgc .Urx ,_dbgc .Ury });return _ecge .PdfAnnotation ,nil ;};

// ImageFieldOptions defines optional parameters for a push button with image attach capability form field.
type ImageFieldOptions struct{Image *_af .Image ;_dbbee AppearanceStyle ;};

// InkAnnotationDef holds base information for constructing an ink annotation.
type InkAnnotationDef struct{

// Paths is the array of stroked paths which compose the annotation.
Paths []_eb .Path ;

// Color is the color of the line. Default to black.
Color *_af .PdfColorDeviceRGB ;

// LineWidth is the width of the line.
LineWidth float64 ;};func _fccf (_ged []_eb .Point )(_abbbg []_eb .Point ,_defe []_eb .Point ,_affg error ){_acda :=len (_ged )-1;if len (_ged )< 1{return nil ,nil ,_eg .New ("\u0041\u0074\u0020\u006c\u0065\u0061\u0073\u0074\u0020\u0074\u0077\u006f\u0020\u0070\u006f\u0069\u006e\u0074s \u0072e\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0074\u006f\u0020\u0063\u0061l\u0063\u0075\u006c\u0061\u0074\u0065\u0020\u0063\u0075\u0072\u0076\u0065\u0020\u0063\u006f\u006e\u0074r\u006f\u006c\u0020\u0070\u006f\u0069\u006e\u0074\u0073");
};if _acda ==1{_fadg :=_eb .Point {X :(2*_ged [0].X +_ged [1].X )/3,Y :(2*_ged [0].Y +_ged [1].Y )/3};_abbbg =append (_abbbg ,_fadg );_defe =append (_defe ,_eb .Point {X :2*_fadg .X -_ged [0].X ,Y :2*_fadg .Y -_ged [0].Y });return _abbbg ,_defe ,nil ;};
_fead :=make ([]float64 ,_acda );for _aafaa :=1;_aafaa < _acda -1;_aafaa ++{_fead [_aafaa ]=4*_ged [_aafaa ].X +2*_ged [_aafaa +1].X ;};_fead [0]=_ged [0].X +2*_ged [1].X ;_fead [_acda -1]=(8*_ged [_acda -1].X +_ged [_acda ].X )/2.0;_efec :=_cafd (_fead );
for _cffe :=1;_cffe < _acda -1;_cffe ++{_fead [_cffe ]=4*_ged [_cffe ].Y +2*_ged [_cffe +1].Y ;};_fead [0]=_ged [0].Y +2*_ged [1].Y ;_fead [_acda -1]=(8*_ged [_acda -1].Y +_ged [_acda ].Y )/2.0;_daced :=_cafd (_fead );_abbbg =make ([]_eb .Point ,_acda );
_defe =make ([]_eb .Point ,_acda );for _acbg :=0;_acbg < _acda ;_acbg ++{_abbbg [_acbg ]=_eb .Point {X :_efec [_acbg ],Y :_daced [_acbg ]};if _acbg < _acda -1{_defe [_acbg ]=_eb .Point {X :2*_ged [_acbg +1].X -_efec [_acbg +1],Y :2*_ged [_acbg +1].Y -_daced [_acbg +1]};
}else {_defe [_acbg ]=_eb .Point {X :(_ged [_acda ].X +_efec [_acda -1])/2,Y :(_ged [_acda ].Y +_daced [_acda -1])/2};};};return _abbbg ,_defe ,nil ;};

// CheckboxFieldOptions defines optional parameters for a checkbox field a form.
type CheckboxFieldOptions struct{Checked bool ;};func _ffe (_bed []*SignatureLine ,_ccdf *SignatureFieldOpts )(*_fe .PdfObjectDictionary ,error ){if _ccdf ==nil {_ccdf =NewSignatureFieldOpts ();};var _afda error ;var _bfcb *_fe .PdfObjectName ;_egdg :=_ccdf .Font ;
if _egdg !=nil {_ddbc ,_ :=_egdg .GetFontDescriptor ();if _ddbc !=nil {if _adbc ,_bgc :=_ddbc .FontName .(*_fe .PdfObjectName );_bgc {_bfcb =_adbc ;};};if _bfcb ==nil {_bfcb =_fe .MakeName ("\u0046\u006f\u006et\u0031");};}else {if _egdg ,_afda =_af .NewStandard14Font ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");
_afda !=nil {return nil ,_afda ;};_bfcb =_fe .MakeName ("\u0048\u0065\u006c\u0076");};_gggda :=_ccdf .FontSize ;if _gggda <=0{_gggda =10;};if _ccdf .LineHeight <=0{_ccdf .LineHeight =1;};_bca :=_ccdf .LineHeight *_gggda ;_ddg ,_ebb :=_egdg .GetRuneMetrics (' ');
if !_ebb {return nil ,_eg .New ("\u0074\u0068e \u0066\u006f\u006et\u0020\u0064\u006f\u0065s n\u006ft \u0068\u0061\u0076\u0065\u0020\u0061\u0020sp\u0061\u0063\u0065\u0020\u0067\u006c\u0079p\u0068");};_fbda :=_ddg .Wx ;var _ddcd float64 ;var _ddfd []string ;
for _ ,_bfaf :=range _bed {if _bfaf .Text ==""{continue ;};_agf :=_bfaf .Text ;if _bfaf .Desc !=""{_agf =_bfaf .Desc +"\u003a\u0020"+_agf ;};_ddfd =append (_ddfd ,_agf );var _ace float64 ;for _ ,_ddge :=range _agf {_ggee ,_fbcb :=_egdg .GetRuneMetrics (_ddge );
if !_fbcb {continue ;};_ace +=_ggee .Wx ;};if _ace > _ddcd {_ddcd =_ace ;};};_ddcd =_ddcd *_gggda /1000.0;_gdab :=float64 (len (_ddfd ))*_bca ;_bdf :=_ccdf .Image !=nil ;_egaf :=_ccdf .Rect ;if _egaf ==nil {_egaf =[]float64 {0,0,_ddcd ,_gdab };if _bdf {_egaf [2]=_ddcd *2;
_egaf [3]=_gdab *2;};_ccdf .Rect =_egaf ;};_ddba :=_egaf [2]-_egaf [0];_cgdf :=_egaf [3]-_egaf [1];_fcge ,_dfac :=_egaf ,_egaf ;var _fgbc ,_aga float64 ;if _bdf &&len (_ddfd )> 0{if _ccdf .ImagePosition <=SignatureImageRight {_ccg :=[]float64 {_egaf [0],_egaf [1],_egaf [0]+(_ddba /2),_egaf [3]};
_cdbc :=[]float64 {_egaf [0]+(_ddba /2),_egaf [1],_egaf [2],_egaf [3]};if _ccdf .ImagePosition ==SignatureImageLeft {_fcge ,_dfac =_ccg ,_cdbc ;}else {_fcge ,_dfac =_cdbc ,_ccg ;};}else {_baad :=[]float64 {_egaf [0],_egaf [1],_egaf [2],_egaf [1]+(_cgdf /2)};
_bcbb :=[]float64 {_egaf [0],_egaf [1]+(_cgdf /2),_egaf [2],_egaf [3]};if _ccdf .ImagePosition ==SignatureImageTop {_fcge ,_dfac =_bcbb ,_baad ;}else {_fcge ,_dfac =_baad ,_bcbb ;};};};_fgbc =_dfac [2]-_dfac [0];_aga =_dfac [3]-_dfac [1];var _bcbg float64 ;
if _ccdf .AutoSize {if _ddcd > _fgbc ||_gdab > _aga {_gfcc :=_e .Min (_fgbc /_ddcd ,_aga /_gdab );_gggda *=_gfcc ;};_bca =_ccdf .LineHeight *_gggda ;_bcbg +=(_aga -float64 (len (_ddfd ))*_bca )/2;};_fbff :=_ce .NewContentCreator ();_egadg :=_af .NewPdfPageResources ();
_egadg .SetFontByName (*_bfcb ,_egdg .ToPdfObject ());if _ccdf .BorderSize <=0{_ccdf .BorderSize =0;_ccdf .BorderColor =_af .NewPdfColorDeviceGray (1);};_fbff .Add_q ();if _ccdf .FillColor !=nil {_fbff .SetNonStrokingColor (_ccdf .FillColor );};if _ccdf .BorderColor !=nil {_fbff .SetStrokingColor (_ccdf .BorderColor );
};_fbff .Add_w (_ccdf .BorderSize ).Add_re (_egaf [0],_egaf [1],_ddba ,_cgdf );if _ccdf .FillColor !=nil &&_ccdf .BorderColor !=nil {_fbff .Add_B ();}else if _ccdf .FillColor !=nil {_fbff .Add_f ();}else if _ccdf .BorderColor !=nil {_fbff .Add_S ();};_fbff .Add_Q ();
if _ccdf .WatermarkImage !=nil {_efcg :=[]float64 {_egaf [0],_egaf [1],_egaf [2],_egaf [3]};_cece ,_dab ,_egg :=_acff (_ccdf .WatermarkImage ,"\u0049\u006d\u0061\u0067\u0065\u0057\u0061\u0074\u0065r\u006d\u0061\u0072\u006b",_ccdf ,_efcg ,_fbff );if _egg !=nil {return nil ,_egg ;
};_egadg .SetXObjectImageByName (*_cece ,_dab );};_fbff .Add_q ();_fbff .Translate (_dfac [0],_dfac [3]-_bca -_bcbg );_fbff .Add_BT ();_cddb :=_egdg .Encoder ();for _ ,_deg :=range _ddfd {var _ffcb []byte ;for _ ,_gfeg :=range _deg {if _cdc .IsSpace (_gfeg ){if len (_ffcb )> 0{_fbff .SetNonStrokingColor (_ccdf .TextColor ).Add_Tf (*_bfcb ,_gggda ).Add_TL (_bca ).Add_TJ ([]_fe .PdfObject {_fe .MakeStringFromBytes (_ffcb )}...);
_ffcb =nil ;};_fbff .Add_Tf (*_bfcb ,_gggda ).Add_TL (_bca ).Add_TJ ([]_fe .PdfObject {_fe .MakeFloat (-_fbda )}...);}else {_ffcb =append (_ffcb ,_cddb .Encode (string (_gfeg ))...);};};if len (_ffcb )> 0{_fbff .SetNonStrokingColor (_ccdf .TextColor ).Add_Tf (*_bfcb ,_gggda ).Add_TL (_bca ).Add_TJ ([]_fe .PdfObject {_fe .MakeStringFromBytes (_ffcb )}...);
};_fbff .Add_Td (0,-_bca );};_fbff .Add_ET ();_fbff .Add_Q ();if _bdf {_deccg ,_ebdb ,_gfb :=_acff (_ccdf .Image ,"\u0049\u006d\u0061\u0067\u0065\u0053\u0069\u0067\u006ea\u0074\u0075\u0072\u0065",_ccdf ,_fcge ,_fbff );if _gfb !=nil {return nil ,_gfb ;};
_egadg .SetXObjectImageByName (*_deccg ,_ebdb );};_afdaf :=_af .NewXObjectForm ();_afdaf .Resources =_egadg ;_afdaf .BBox =_fe .MakeArrayFromFloats (_egaf );_afdaf .SetContentStream (_fbff .Bytes (),_aabg ());_daa :=_fe .MakeDict ();_daa .Set ("\u004e",_afdaf .ToPdfObject ());
return _daa ,nil ;};

// RectangleAnnotationDef is a rectangle defined with a specified Width and Height and a lower left corner at (X,Y).
// The rectangle can optionally have a border and a filling color.
// The Width/Height includes the border (if any specified).
type RectangleAnnotationDef struct{X float64 ;Y float64 ;Width float64 ;Height float64 ;FillEnabled bool ;FillColor *_af .PdfColorDeviceRGB ;BorderEnabled bool ;BorderWidth float64 ;BorderColor *_af .PdfColorDeviceRGB ;Opacity float64 ;};

// NewTextField generates a new text field with partial name `name` at location
// specified by `rect` on given `page` and with field specific options `opt`.
func NewTextField (page *_af .PdfPage ,name string ,rect []float64 ,opt TextFieldOptions )(*_af .PdfFieldText ,error ){if page ==nil {return nil ,_eg .New ("\u0070a\u0067e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");};if len (name )<=0{return nil ,_eg .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
};if len (rect )!=4{return nil ,_eg .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_ded :=_af .NewPdfField ();_fffe :=&_af .PdfFieldText {};_ded .SetContext (_fffe );_fffe .PdfField =_ded ;_fffe .T =_fe .MakeString (name );
if opt .MaxLen > 0{_fffe .MaxLen =_fe .MakeInteger (int64 (opt .MaxLen ));};if len (opt .Value )> 0{_fffe .V =_fe .MakeString (opt .Value );};_ebgf :=_af .NewPdfAnnotationWidget ();_ebgf .Rect =_fe .MakeArrayFromFloats (rect );_ebgf .P =page .ToPdfObject ();
_ebgf .F =_fe .MakeInteger (4);_ebgf .Parent =_fffe .ToPdfObject ();_fffe .Annotations =append (_fffe .Annotations ,_ebgf );return _fffe ,nil ;};

// LineAnnotationDef defines a line between point 1 (X1,Y1) and point 2 (X2,Y2).  The line ending styles can be none
// (regular line), or arrows at either end.  The line also has a specified width, color and opacity.
type LineAnnotationDef struct{X1 float64 ;Y1 float64 ;X2 float64 ;Y2 float64 ;LineColor *_af .PdfColorDeviceRGB ;Opacity float64 ;LineWidth float64 ;LineEndingStyle1 _eb .LineEndingStyle ;LineEndingStyle2 _eb .LineEndingStyle ;};func _acff (_gaee _a .Image ,_bdcg string ,_eda *SignatureFieldOpts ,_baf []float64 ,_acdd *_ce .ContentCreator )(*_fe .PdfObjectName ,*_af .XObjectImage ,error ){_ead ,_aagb :=_af .DefaultImageHandler {}.NewImageFromGoImage (_gaee );
if _aagb !=nil {return nil ,nil ,_aagb ;};_fbb ,_aagb :=_af .NewXObjectImageFromImage (_ead ,nil ,_eda .Encoder );if _aagb !=nil {return nil ,nil ,_aagb ;};_abfb ,_adfd :=float64 (*_fbb .Width ),float64 (*_fbb .Height );_dabb :=_baf [2]-_baf [0];_dfgd :=_baf [3]-_baf [1];
if _eda .AutoSize {_cbad :=_e .Min (_dabb /_abfb ,_dfgd /_adfd );_abfb *=_cbad ;_adfd *=_cbad ;_baf [0]=_baf [0]+(_dabb /2)-(_abfb /2);_baf [1]=_baf [1]+(_dfgd /2)-(_adfd /2);};var _fcff *_fe .PdfObjectName ;if _cefc ,_gccc :=_fe .GetName (_fbb .Name );
_gccc {_fcff =_cefc ;}else {_fcff =_fe .MakeName (_bdcg );};if _acdd !=nil {_acdd .Add_q ().Translate (_baf [0],_baf [1]).Scale (_abfb ,_adfd ).Add_Do (*_fcff ).Add_Q ();}else {return nil ,nil ,_eg .New ("\u0043\u006f\u006e\u0074en\u0074\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020\u0069\u0073\u0020\u006e\u0075l\u006c");
};return _fcff ,_fbb ,nil ;};const (SignatureImageLeft SignatureImagePosition =iota ;SignatureImageRight ;SignatureImageTop ;SignatureImageBottom ;);

// NewSignatureFieldOpts returns a new initialized instance of options
// used to generate a signature appearance.
func NewSignatureFieldOpts ()*SignatureFieldOpts {return &SignatureFieldOpts {Font :_af .DefaultFont (),FontSize :10,LineHeight :1,AutoSize :true ,TextColor :_af .NewPdfColorDeviceGray (0),BorderColor :_af .NewPdfColorDeviceGray (0),FillColor :_af .NewPdfColorDeviceGray (1),Encoder :_fe .NewFlateEncoder (),ImagePosition :SignatureImageLeft };
};

// FieldAppearance implements interface model.FieldAppearanceGenerator and generates appearance streams
// for fields taking into account what value is in the field. A common use case is for generating the
// appearance stream prior to flattening fields.
//
// If `OnlyIfMissing` is true, the field appearance is generated only for fields that do not have an
// appearance stream specified.
// If `RegenerateTextFields` is true, all text fields are regenerated (even if OnlyIfMissing is true).
type FieldAppearance struct{OnlyIfMissing bool ;RegenerateTextFields bool ;_bf *AppearanceStyle ;};

// AppearanceFont represents a font used for generating the appearance of a
// field in the filling/flattening process.
type AppearanceFont struct{

// Name represents the name of the font which will be added to the
// AcroForm resources (DR).
Name string ;

// Font represents the actual font used for the field appearance.
Font *_af .PdfFont ;

// Size represents the size of the font used for the field appearance.
// If the font size is 0, the value of the FallbackSize field of the
// AppearanceFontStyle is used, if set. Otherwise, the font size is
// calculated based on the available annotation height and on the
// AutoFontSizeFraction field of the AppearanceStyle.
Size float64 ;};

// WrapContentStream ensures that the entire content stream for a `page` is wrapped within q ... Q operands.
// Ensures that following operands that are added are not affected by additional operands that are added.
// Implements interface model.ContentStreamWrapper.
func (_agbg FieldAppearance )WrapContentStream (page *_af .PdfPage )error {_ggba ,_befd :=page .GetAllContentStreams ();if _befd !=nil {return _befd ;};_dacg :=_ce .NewContentStreamParser (_ggba );_daf ,_befd :=_dacg .Parse ();if _befd !=nil {return _befd ;
};_daf .WrapIfNeeded ();_bdc :=[]string {_daf .String ()};return page .SetContentStreams (_bdc ,_aabg ());};func _bfbg (_bgec RectangleAnnotationDef )(*_fe .PdfObjectDictionary ,*_af .PdfRectangle ,error ){_eddd :=_af .NewXObjectForm ();_eddd .Resources =_af .NewPdfPageResources ();
_dae :="";if _bgec .Opacity < 1.0{_eaeg :=_fe .MakeDict ();_eaeg .Set ("\u0063\u0061",_fe .MakeFloat (_bgec .Opacity ));_eaeg .Set ("\u0043\u0041",_fe .MakeFloat (_bgec .Opacity ));_afba :=_eddd .Resources .AddExtGState ("\u0067\u0073\u0031",_eaeg );if _afba !=nil {_cd .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0064\u0064\u0020\u0065\u0078\u0074g\u0073\u0074\u0061t\u0065 \u0067\u0073\u0031");
return nil ,nil ,_afba ;};_dae ="\u0067\u0073\u0031";};_dbbg ,_ecdf ,_dfb ,_gfec :=_adgf (_bgec ,_dae );if _gfec !=nil {return nil ,nil ,_gfec ;};_gfec =_eddd .SetContentStream (_dbbg ,nil );if _gfec !=nil {return nil ,nil ,_gfec ;};_eddd .BBox =_ecdf .ToPdfObject ();
_aaacg :=_fe .MakeDict ();_aaacg .Set ("\u004e",_eddd .ToPdfObject ());return _aaacg ,_dfb ,nil ;};